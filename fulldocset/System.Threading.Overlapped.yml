### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "A Win32 felügyelt reprezentációja `OVERLAPPED` szerkezete, beleértve az adatátvitelhez a Overlapped példányról módszerek egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra."
  remarks: "A <xref:System.Threading.Overlapped.Pack%2A>és <xref:System.Threading.Overlapped.UnsafePack%2A>módszerek információinak átvitele egy Overlapped objektumot egy <xref:System.Threading.NativeOverlapped>adhatók át a Win32 API-függvények aszinkron adatstruktúrájuk fájl i/o.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> A <xref:System.Threading.Overlapped.Unpack%2A>metódus átvitelek adatait <xref:System.Threading.NativeOverlapped>a Overlapped osztály példányának szerkezetének</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       Egy Overlapped objektum tulajdonságainak módosítása hatással van hozzá van rendelve <xref:System.Threading.NativeOverlapped>struktúra, és ez fordítva is igaz.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Az új, üres példányát inicializálja a <xref href=&quot;System.Threading.Overlapped&quot;> </xref> osztály."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Threading.Overlapped&quot;> </xref> osztály és a megadott fájl elhelyezése, a 32 bites egész szám leíró egy eseményt, amely az i/o-művelet befejezésekor leállítási jelzést kapott, és egy felületén keresztül, amelyhez a művelet eredményét adja vissza."
  remarks: "A <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>tulajdonság használatával beolvassa a leíró <xref:System.Threading.WaitHandle>osztályból</xref:System.Threading.WaitHandle> származik, amely felügyelt szinkronizálási eseményről szóló</xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       A végrehajtásának <xref:System.IAsyncResult>állapotadatokat szolgáltat az i/o-művelet.</xref:System.IAsyncResult> Adja át a konstruktor a `ar` paramétert, és később a lekéréséhez a <xref:System.Threading.Overlapped.AsyncResult%2A>tulajdonság.</xref:System.Threading.Overlapped.AsyncResult%2A> Ha egy visszahívási metódus van megadva a <xref:System.Threading.Overlapped.Pack%2A>vagy <xref:System.Threading.Overlapped.UnsafePack%2A>metódus, a visszahívás kérheti le a <xref:System.IAsyncResult>által kicsomagolása a <xref:System.Threading.NativeOverlapped>kap struktúra.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "A fájl pozíció az átvitel indításának alacsony szó."
    - id: offsetHi
      type: System.Int32
      description: "A magas word, a fájl pozíció, amelynél kezdeni az átvitel."
    - id: hEvent
      type: System.Int32
      description: "A leíró, amelyek az i/o-művelet befejezésekor leállítási jelzést kapott eseményre."
    - id: ar
      type: System.IAsyncResult
      description: "Egy objektum, amely megvalósítja a <xref:System.IAsyncResult>felületet, és állapotadatokat szolgáltat az i/o-művelet.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Threading.Overlapped&quot;> </xref> osztály és a megadott fájl elhelyezése, a leíró egy eseményt, amely az i/o-művelet befejezésekor leállítási jelzést kapott, és egy felületén keresztül, amelyhez a művelet eredményét adja vissza."
  remarks: "El abból származó felügyelt szinkronizálási objektum leírója a <xref:System.Threading.WaitHandle>osztály, használja a <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>tulajdonság használatával beolvassa a <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>objektum, majd hívja a <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>metódus.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       A végrehajtásának <xref:System.IAsyncResult>állapotadatokat szolgáltat az i/o-művelet.</xref:System.IAsyncResult> Adja át a konstruktor a `ar` paramétert, és később a lekéréséhez a <xref:System.Threading.Overlapped.AsyncResult%2A>tulajdonság.</xref:System.Threading.Overlapped.AsyncResult%2A> Ha egy visszahívási metódus van megadva a <xref:System.Threading.Overlapped.Pack%2A>vagy <xref:System.Threading.Overlapped.UnsafePack%2A>metódus, a visszahívás kérheti le a <xref:System.IAsyncResult>által kicsomagolása a <xref:System.Threading.NativeOverlapped>kap struktúra.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "A fájl pozíció az átvitel indításának alacsony szó."
    - id: offsetHi
      type: System.Int32
      description: "A magas word, a fájl pozíció, amelynél kezdeni az átvitel."
    - id: hEvent
      type: System.IntPtr
      description: "A leíró, amelyek az i/o-művelet befejezésekor leállítási jelzést kapott eseményre."
    - id: ar
      type: System.IAsyncResult
      description: "Egy objektum, amely megvalósítja a <xref:System.IAsyncResult>felületet, és állapotadatokat szolgáltat az i/o-művelet.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Lekérdezi vagy beállítja az objektum, amely állapotadatokat szolgáltat az i/o-művelet."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Egy objektum, amely megvalósítja a <xref:System.IAsyncResult>felületet.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Lekérdezi vagy beállítja a 32 bites egész szám leíró, amelyek az i/o-művelet befejezésekor leállítási jelzést kapott szinkronizálási esemény."
  remarks: "Ez a tulajdonság nem használható 64 bites platformon. Használja a <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>tulajdonság helyette.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       A <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>tulajdonság használatával beolvassa a leíró <xref:System.Threading.WaitHandle>osztályból</xref:System.Threading.WaitHandle> származik, amely felügyelt szinkronizálási eseményről szóló</xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>érték a szinkronizálási eseményt leíróját.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Lekérdezi vagy beállítja a leíró a szinkronizálási eseményt, amely az i/o-művelet befejezésekor leállítási jelzést kapott."
  remarks: "El abból származó felügyelt szinkronizálási objektum leírója a <xref:System.Threading.WaitHandle>osztály, használja a <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>tulajdonság használatával beolvassa a <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>objektum, majd hívja a <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>metódus.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "Egy <xref:System.IntPtr>jelző esemény leíróját.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A nem felügyelt memória egy natív átfedő struktúra le van foglalva társított helyet szabadít a <xref:System.Threading.Overlapped.Pack*>metódus.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "Meg kell hívnia az Free metódusa pontosan egyszer a minden <xref:System.Threading.NativeOverlapped>kapott mutató a <xref:System.Threading.Overlapped.Pack%2A>metódus.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Ha Free metódusa nem hívható meg, meg fog nyilvánosságra kerüljenek a memória. Free metódusa csak egyszer hívható, ha a rendszer sérült memória."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Egy mutatót a <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra felszabadítását."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Lekérdezi vagy beállítja azt a magasrendű word, a fájl pozíció, amelynél kezdeni az átvitel. A helyzetbe állítani egy bájteltolás a fájl elején."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>érték magas a word, a fájl pozíció.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Lekérdezi vagy beállítja a alacsonyrendű word, a fájl pozíció, amelynél kezdeni az átvitel. A helyzetbe állítani egy bájteltolás a fájl elején."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>érték alacsony a word, a fájl pozíció.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A jelenlegi példányának csomagok egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra, a meghatalmazott, és meg kell hívni az aszinkron i/o-művelet befejezésekor megadása."
  remarks: "A nem felügyelt, ez a metódus által visszaadott mutató átadhatók átfedett i/o-műveletek az operációs rendszer. A <xref:System.Threading.NativeOverlapped>struktúra csak a fizikai memóriában rögzített <xref:System.Threading.Overlapped.Unpack%2A>nevezik.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      > [!IMPORTANT] > A hívó felelős a puffer rögzítését. Ha az alkalmazástartomány eltávolítva, azonban a rögzített puffer leírójának megsemmisül, és a puffer megjelenik, a i/o-művelet írni a felszabadított cím hagyja. Emiatt érdemes használni a <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>metódus túlterhelési, amelyben a futtatókörnyezet PIN a puffer.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Egy <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> meghívni az aszinkron i/o-művelet befejeződése után visszahívási metódus jelölő delegált."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Egy nem felügyelt mutató egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Az aktuális <xref href=&quot;System.Threading.Overlapped&quot;> </xref> már csomagolt."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A jelenlegi példányának csomagok egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra, megadása, amelyet az aszinkron i/o-művelet befejezésekor meghatalmazott és a felügyelt objektum, amely a pufferként szolgál."
  remarks: "A nem felügyelt, ez a metódus által visszaadott mutató átadhatók átfedett i/o-műveletek az operációs rendszer. A <xref:System.Threading.NativeOverlapped>struktúra csak a fizikai memóriában rögzített <xref:System.Threading.Overlapped.Unpack%2A>nevezik.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       A puffer vagy a megadott puffer `userData` ugyanazok, mint a nem felügyelt operációsrendszer-függvény, amely elvégzi az aszinkron i/o kell lennie.      > [!NOTE] > A futtatókörnyezet PIN a puffer vagy a megadott puffer `userData` az i/o-művelet időtartama. Ha az alkalmazástartomány eltávolítva, a futtatókörnyezet tartja a memória, csak az I/O művelet befejeződése után van rögzítve."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Egy <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> meghívni az aszinkron i/o-művelet befejeződése után visszahívási metódus jelölő delegált."
    - id: userData
      type: System.Object
      description: "Egy objektum vagy a művelet a bemeneti vagy kimeneti pufferbe objektumokból álló tömb. Az egyes objektumok puffert, például bájttömb jelöli."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Egy nem felügyelt mutató egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Az aktuális <xref href=&quot;System.Threading.Overlapped&quot;> </xref> már csomagolt."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Kibontja a megadott nem felügyelt <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> azokat a kezelt struktúra <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objektum."
  remarks: "A <xref:System.Threading.NativeOverlapped>struktúra nem mentesül fizikai memória amíg meghívja a <xref:System.Threading.Overlapped.Free%2A>metódus.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Egy nem felügyelt mutató egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra."
    return:
      type: System.Threading.Overlapped
      description: "Egy <xref href=&quot;System.Threading.Overlapped&quot;> </xref> objektum információkat tartalmazó kicsomagolása a natív szerkezetből."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A jelenlegi példányának csomagok egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra adja meg a delegált meghívni az aszinkron i/o-művelet befejezésekor. A hívási verem nem propagálja."
  remarks: "A nem felügyelt, ez a metódus által visszaadott mutató átadhatók átfedett i/o-műveletek az operációs rendszer. A <xref:System.Threading.NativeOverlapped>struktúra csak a fizikai memóriában rögzített <xref:System.Threading.Overlapped.Unpack%2A>nevezik.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       A hívó felelős a puffer rögzítését. Ha az alkalmazástartomány eltávolítva, azonban a rögzített puffer leírójának megsemmisül, és a puffer megjelenik, a i/o-művelet írni a felszabadított cím hagyja. Emiatt érdemes használni a <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>metódus túlterhelési, amelyben a futtatókörnyezet PIN a puffer.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      > [!CAUTION] > Használata a <xref:System.Threading.Overlapped.UnsafePack%2A>metódus véletlenül sikerült megnyitni egy biztonsági rés.</xref:System.Threading.Overlapped.UnsafePack%2A> Kódelérés-biztonsági engedély ellenőrizze az összes hívó engedélyeit a veremben alapjait. A <xref:System.Threading.Overlapped.UnsafePack%2A>metódus nem propagálja a hívási verem.</xref:System.Threading.Overlapped.UnsafePack%2A> Előfordulhat, hogy a rosszindulatú kódot tudja kihasználásához ennek elkerülése érdekében az engedélyek ellenőrzését."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Egy <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> meghívni az aszinkron i/o-művelet befejeződése után visszahívási metódus jelölő delegált."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Egy nem felügyelt mutató egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Az aktuális <xref href=&quot;System.Threading.Overlapped&quot;> </xref> már csomagolt."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A jelenlegi példányának csomagok egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra lehet meghívni, amikor az aszinkron i/o-művelet be nem fejeződött, és a felügyelt objektum, amely a küldött funkcionál puffer megadása. A hívási verem nem propagálja."
  remarks: "A nem felügyelt, ez a metódus által visszaadott mutató átadhatók átfedett i/o-műveletek az operációs rendszer. A <xref:System.Threading.NativeOverlapped>struktúra csak a fizikai memóriában rögzített <xref:System.Threading.Overlapped.Unpack%2A>nevezik.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       A puffer vagy a megadott puffer `userData` ugyanazok, mint a nem felügyelt operációsrendszer-függvény, amely elvégzi az aszinkron i/o kell lennie.       A futtatókörnyezet PIN a puffer vagy a megadott puffer`userData` az i/o-művelet időtartama. Ha az alkalmazástartomány eltávolítva, a futtatókörnyezet tartja a memória, csak az I/O művelet befejeződése után van rögzítve.      > [!CAUTION] > A UnsafePack használatával metódus véletlenül megnyithat egy biztonsági rést be. Kódelérés-biztonsági engedély ellenőrizze az összes hívó engedélyeit a veremben alapjait. A UnsafePack metódus nem propagálja a hívási verem. Előfordulhat, hogy a rosszindulatú kódot tudja kihasználásához ennek elkerülése érdekében az engedélyek ellenőrzését."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Egy <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> meghívni az aszinkron i/o-művelet befejeződése után visszahívási metódus jelölő delegált."
    - id: userData
      type: System.Object
      description: "Egy objektum vagy a művelet a bemeneti vagy kimeneti pufferbe objektumokból álló tömb. Az egyes objektumok puffert, például bájttömb jelöli."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Egy nem felügyelt mutató egy <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struktúra."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Az aktuális <xref href=&quot;System.Threading.Overlapped&quot;> </xref> már csomagolt."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
