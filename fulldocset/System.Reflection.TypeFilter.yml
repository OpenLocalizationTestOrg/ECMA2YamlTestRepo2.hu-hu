### YamlMime:ManagedReference
items:
- uid: System.Reflection.TypeFilter
  id: TypeFilter
  langs:
  - csharp
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
  type: Delegate
  summary: "Az osztályok tömbje képviselt szűrők <xref:System.Type>objektumok.</xref:System.Type>"
  remarks: "A `TypeFilter` delegált osztályok listáját szűrésére használatos. Pontosabban, a segítségével a tömbje képviselt osztályok szűrése <xref:System.Type>objektumok.</xref:System.Type> A <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>metódusnak Ez a delegált felületek, amelyek adja vissza, a tulajdonságlista szűréséhez.</xref:System.Type.FindInterfaces%2A?displayProperty=fullName> Minden származtatott osztálya <xref:System.Delegate>és <xref:System.MulticastDelegate>konstruktorral és egy `DynamicInvoke` metódus.</xref:System.MulticastDelegate> </xref:System.Delegate> A Visual C++ kód példa a leírásában `Delegate`."
  example:
  - "This example shows how to define a method matching the TypeFilter delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \n  \n [!code-vb[Typefilter#1](~/add/codesnippet/visualbasic/t-system.reflection.type_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate bool TypeFilter(Type m, object filterCriteria);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
