### YamlMime:ManagedReference
items:
- uid: System.Threading.HostExecutionContextManager
  id: HostExecutionContextManager
  children:
  - System.Threading.HostExecutionContextManager.#ctor
  - System.Threading.HostExecutionContextManager.Capture
  - System.Threading.HostExecutionContextManager.Revert(System.Object)
  - System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  langs:
  - csharp
  name: HostExecutionContextManager
  nameWithType: HostExecutionContextManager
  fullName: System.Threading.HostExecutionContextManager
  type: Class
  summary: "A funkciókat biztosít, amelyek lehetővé teszi, hogy közös nyelvi futtatókörnyezet részt venni a folyamat vagy áttelepítési, a végrehajtási környezet."
  remarks: "Ha az aktuális <xref:System.AppDomainManager>egy HostExecutionContextManager a hivatkozik a <xref:System.AppDomainManager.HostExecutionContextManager%2A>tulajdonság, majd a közös nyelvi futtatókörnyezet meghívja a minden alkalommal hívása a <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName>metódus következik be, hogy a gazdagép részt venni a végrehajtási környezet áramló.</xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> </xref:System.AppDomainManager.HostExecutionContextManager%2A> </xref:System.AppDomainManager>"
  syntax:
    content: public class HostExecutionContextManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.#ctor
  id: '#ctor'
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: HostExecutionContextManager()
  nameWithType: HostExecutionContextManager.HostExecutionContextManager()
  fullName: System.Threading.HostExecutionContextManager.HostExecutionContextManager()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Threading.HostExecutionContextManager&quot;> </xref> osztály."
  syntax:
    content: public HostExecutionContextManager ();
    parameters: []
  overload: System.Threading.HostExecutionContextManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.Capture
  id: Capture
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: Capture()
  nameWithType: HostExecutionContextManager.Capture()
  fullName: System.Threading.HostExecutionContextManager.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A gazdagép végrehajtási környezet az aktuális szál rögzíti."
  remarks: "A <xref:System.Threading.HostExecutionContext>létre kell hozni a biztonságos leíró tartalmazó a `IUnknown` mutató ahhoz, hogy a gazdagép, az aktuális szál.</xref:System.Threading.HostExecutionContext>"
  syntax:
    content: public virtual System.Threading.HostExecutionContext Capture ();
    parameters: []
    return:
      type: System.Threading.HostExecutionContext
      description: "A <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> a gazdagép végrehajtási környezet az aktuális szál képviselő objektum."
  overload: System.Threading.HostExecutionContextManager.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)
  id: Revert(System.Object)
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: Revert(Object)
  nameWithType: HostExecutionContextManager.Revert(Object)
  fullName: System.Threading.HostExecutionContextManager.Revert(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A gazdagép végrehajtási környezet visszaállítása korábbi állapotába."
  remarks: '`previousState`az objektum vissza kell által a <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A>metódus.</xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A>'
  syntax:
    content: public virtual void Revert (object previousState);
    parameters:
    - id: previousState
      type: System.Object
      description: "Az előző környezetben állapotba állítható vissza."
  overload: System.Threading.HostExecutionContextManager.Revert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previousState</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>previousState</code> az aktuális szálon nem jött létre.       – vagy – <code>previousState</code> értéke nem az utolsó állapota a <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref>."
  platform:
  - net462
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  id: SetHostExecutionContext(System.Threading.HostExecutionContext)
  parent: System.Threading.HostExecutionContextManager
  langs:
  - csharp
  name: SetHostExecutionContext(HostExecutionContext)
  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  fullName: System.Threading.HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A megadott gazdagépcsoport a végrehajtási környezet értékre állítja be az aktuális állomás végrehajtási környezetet."
  remarks: "A SetHostExecutionContext metódus állítja be az aktuális <xref:System.Threading.HostExecutionContext>.</xref:System.Threading.HostExecutionContext> a gazdagép végrehajtási környezet  A <xref:System.Threading.HostExecutionContext>, amely használatban van, egy másik SetHostExecutionContext metódus hívása argumentumának nem adható át e metódus paramétereként.</xref:System.Threading.HostExecutionContext> Ehelyett használja a <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName>módszert másolatot készít egy <xref:System.Threading.HostExecutionContext>objektumra, és a példány használatával a gazdagép végrehajtási környezetének beállítása.</xref:System.Threading.HostExecutionContext> </xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName>       Hívja a <xref:System.Threading.HostExecutionContextManager.Revert%2A>módszer használatával a Ez a metódus által visszaadott objektum visszaállítása a <xref:System.Threading.HostExecutionContext>korábbi állapotába.</xref:System.Threading.HostExecutionContext> </xref:System.Threading.HostExecutionContextManager.Revert%2A>"
  syntax:
    content: public virtual object SetHostExecutionContext (System.Threading.HostExecutionContext hostExecutionContext);
    parameters:
    - id: hostExecutionContext
      type: System.Threading.HostExecutionContext
      description: "A <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> kell beállítani."
    return:
      type: System.Object
      description: "Egy objektum visszaállítására a <xref href=&quot;System.Threading.HostExecutionContext&quot;> </xref> korábbi állapotába."
  overload: System.Threading.HostExecutionContextManager.SetHostExecutionContext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>hostExecutionContext</code>nem volt beszerzett capture művelettel.       – vagy – <code>hostExecutionContext</code> lett egy korábbi SetHostExecutionContext metódus hívás argumentuma."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Threading.HostExecutionContextManager.#ctor
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: HostExecutionContextManager()
  nameWithType: HostExecutionContextManager.HostExecutionContextManager()
  fullName: System.Threading.HostExecutionContextManager.HostExecutionContextManager()
- uid: System.Threading.HostExecutionContextManager.Capture
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Capture()
  nameWithType: HostExecutionContextManager.Capture()
  fullName: System.Threading.HostExecutionContextManager.Capture()
- uid: System.Threading.HostExecutionContext
  parent: System.Threading
  isExternal: false
  name: HostExecutionContext
  nameWithType: HostExecutionContext
  fullName: System.Threading.HostExecutionContext
- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Revert(Object)
  nameWithType: HostExecutionContextManager.Revert(Object)
  fullName: System.Threading.HostExecutionContextManager.Revert(Object)
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: SetHostExecutionContext(HostExecutionContext)
  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
  fullName: System.Threading.HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)
- uid: System.Threading.HostExecutionContextManager.#ctor*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: HostExecutionContextManager
  nameWithType: HostExecutionContextManager.HostExecutionContextManager
- uid: System.Threading.HostExecutionContextManager.Capture*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Capture
  nameWithType: HostExecutionContextManager.Capture
- uid: System.Threading.HostExecutionContextManager.Revert*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: Revert
  nameWithType: HostExecutionContextManager.Revert
- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext*
  parent: System.Threading.HostExecutionContextManager
  isExternal: false
  name: SetHostExecutionContext
  nameWithType: HostExecutionContextManager.SetHostExecutionContext
