### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Strings
  id: Strings
  children:
  - Microsoft.VisualBasic.Strings.Asc(System.Char)
  - Microsoft.VisualBasic.Strings.Asc(System.String)
  - Microsoft.VisualBasic.Strings.AscW(System.Char)
  - Microsoft.VisualBasic.Strings.AscW(System.String)
  - Microsoft.VisualBasic.Strings.Chr(System.Int32)
  - Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  - Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.Format(System.Object,System.String)
  - Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  - Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)
  - Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  - Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  - Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)
  - Microsoft.VisualBasic.Strings.Join(System.String[],System.String)
  - Microsoft.VisualBasic.Strings.LCase(System.Char)
  - Microsoft.VisualBasic.Strings.LCase(System.String)
  - Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.Len(System.Boolean)
  - Microsoft.VisualBasic.Strings.Len(System.Byte)
  - Microsoft.VisualBasic.Strings.Len(System.Char)
  - Microsoft.VisualBasic.Strings.Len(System.DateTime)
  - Microsoft.VisualBasic.Strings.Len(System.Decimal)
  - Microsoft.VisualBasic.Strings.Len(System.Double)
  - Microsoft.VisualBasic.Strings.Len(System.Int16)
  - Microsoft.VisualBasic.Strings.Len(System.Int32)
  - Microsoft.VisualBasic.Strings.Len(System.Int64)
  - Microsoft.VisualBasic.Strings.Len(System.Object)
  - Microsoft.VisualBasic.Strings.Len(System.SByte)
  - Microsoft.VisualBasic.Strings.Len(System.Single)
  - Microsoft.VisualBasic.Strings.Len(System.String)
  - Microsoft.VisualBasic.Strings.Len(System.UInt16)
  - Microsoft.VisualBasic.Strings.Len(System.UInt32)
  - Microsoft.VisualBasic.Strings.Len(System.UInt64)
  - Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.LTrim(System.String)
  - Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)
  - Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)
  - Microsoft.VisualBasic.Strings.RTrim(System.String)
  - Microsoft.VisualBasic.Strings.Space(System.Int32)
  - Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)
  - Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)
  - Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)
  - Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)
  - Microsoft.VisualBasic.Strings.StrReverse(System.String)
  - Microsoft.VisualBasic.Strings.Trim(System.String)
  - Microsoft.VisualBasic.Strings.UCase(System.Char)
  - Microsoft.VisualBasic.Strings.UCase(System.String)
  langs:
  - csharp
  name: Strings
  nameWithType: Strings
  fullName: Microsoft.VisualBasic.Strings
  type: Class
  summary: "A <xref uid=&quot;langword_csharp_Strings&quot; name=&quot;Strings&quot; href=&quot;&quot;> </xref> modul karakterlánc műveletek végrehajtásához használt eljárásokat tartalmaz."
  remarks: "Ez a modul támogatja a Visual Basic nyelvi kulcsszavak és kezelheti a karakterláncok futásidejű kódtár tagokat."
  example:
  - "The following example demonstrates how to split a string at its spaces.  \n  \n [!code-vb[VbVbalrStrings#13](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._6_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Strings
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Asc(System.Char)
  id: Asc(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Asc(Char)
  nameWithType: Strings.Asc(Char)
  fullName: Microsoft.VisualBasic.Strings.Asc(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> egy karakternek megfelelő karakterkódot jelző érték."
  remarks: "`Asc`Visszaadja a *kódpont*, vagy, a bemeneti karakter kódját. Ez lehet 0 és 255 egybájtos (SBCS) értékeket, és csak -32768 és 32767 a kétbájtos (DBCS) értékeket.       `AscW`a bemeneti karakter Unicode-kódpontot adja vissza. Ez 0 és 65535 közötti lehet. A visszaadott érték nem függ a az aktuális szál kulturális környezet és a kód lap beállításait.      > [!NOTE] > A `AscB` korábbi verzióiban a Visual Basic függvény egy bájtot, nem pedig egy karakter kódját. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Minden Visual Basic 2005 értékek a következők: a Unicode használatát, és `AscB` már nem támogatott."
  example:
  - "The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.  \n  \n [!code-vb[VbVbalrFunctions#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._55_1.vb)]"
  syntax:
    content: public static int Asc (char String);
    parameters:
    - id: String
      type: System.Char
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés. Ha `String` van egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> bemeneti használt kifejezés, csak a karakterlánc első karaktere. Ha `String` van <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> nem karakternél, vagy egy <xref:System.ArgumentException>hiba akkor fordul elő.</xref:System.ArgumentException>"
    return:
      type: System.Int32
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> egy karakternek megfelelő karakterkódot jelző érték."
  overload: Microsoft.VisualBasic.Strings.Asc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Asc(System.String)
  id: Asc(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Asc(String)
  nameWithType: Strings.Asc(String)
  fullName: Microsoft.VisualBasic.Strings.Asc(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> egy karakternek megfelelő karakterkódot jelző érték."
  remarks: "`Asc`Visszaadja a *kódpont*, vagy, a bemeneti karakter kódját. Ez lehet 0 és 255 egybájtos (SBCS) értékeket, és csak -32768 és 32767 a kétbájtos (DBCS) értékeket.       `AscW`a bemeneti karakter Unicode-kódpontot adja vissza. Ez 0 és 65535 közötti lehet. A visszaadott érték nem függ a az aktuális szál kulturális környezet és a kód lap beállításait.      > [!NOTE] > A `AscB` korábbi verzióiban a Visual Basic függvény egy bájtot, nem pedig egy karakter kódját. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Minden Visual Basic 2005 értékek a következők: a Unicode használatát, és `AscB` már nem támogatott."
  example:
  - "The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.  \n  \n [!code-vb[VbVbalrFunctions#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._249_1.vb)]"
  syntax:
    content: public static int Asc (string String);
    parameters:
    - id: String
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés. Ha `String` van egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> bemeneti használt kifejezés, csak a karakterlánc első karaktere. Ha `String` van <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> nem karakternél, vagy egy <xref:System.ArgumentException>hiba akkor fordul elő.</xref:System.ArgumentException>"
    return:
      type: System.Int32
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> egy karakternek megfelelő karakterkódot jelző érték."
  overload: Microsoft.VisualBasic.Strings.Asc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.AscW(System.Char)
  id: AscW(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: AscW(Char)
  nameWithType: Strings.AscW(Char)
  fullName: Microsoft.VisualBasic.Strings.AscW(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> egy karakternek megfelelő karakterkódot jelző érték."
  remarks: "`Asc`Visszaadja a *kódpont*, vagy, a bemeneti karakter kódját. Ez lehet 0 és 255 egybájtos (SBCS) értékeket, és csak -32768 és 32767 a kétbájtos (DBCS) értékeket.       `AscW`a bemeneti karakter Unicode-kódpontot adja vissza. Ez 0 és 65535 közötti lehet. A visszaadott érték nem függ a az aktuális szál kulturális környezet és a kód lap beállításait.      > [!NOTE] > A `AscB` korábbi verzióiban a Visual Basic függvény egy bájtot, nem pedig egy karakter kódját. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Minden Visual Basic 2005 értékek a következők: a Unicode használatát, és `AscB` már nem támogatott."
  example:
  - "The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.  \n  \n [!code-vb[VbVbalrFunctions#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._18_1.vb)]"
  syntax:
    content: public static int AscW (char String);
    parameters:
    - id: String
      type: System.Char
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés. Ha `String` van egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> bemeneti használt kifejezés, csak a karakterlánc első karaktere. Ha `String` van <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> nem karakternél, vagy egy <xref:System.ArgumentException>hiba akkor fordul elő.</xref:System.ArgumentException>"
    return:
      type: System.Int32
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> egy karakternek megfelelő karakterkódot jelző érték."
  overload: Microsoft.VisualBasic.Strings.AscW*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.AscW(System.String)
  id: AscW(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: AscW(String)
  nameWithType: Strings.AscW(String)
  fullName: Microsoft.VisualBasic.Strings.AscW(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> egy karakternek megfelelő karakterkódot jelző érték."
  remarks: "`Asc`Visszaadja a *kódpont*, vagy, a bemeneti karakter kódját. Ez lehet 0 és 255 egybájtos (SBCS) értékeket, és csak -32768 és 32767 a kétbájtos (DBCS) értékeket.       `AscW`a bemeneti karakter Unicode-kódpontot adja vissza. Ez 0 és 65535 közötti lehet. A visszaadott érték nem függ a az aktuális szál kulturális környezet és a kód lap beállításait.      > [!NOTE] > A `AscB` korábbi verzióiban a Visual Basic függvény egy bájtot, nem pedig egy karakter kódját. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Minden Visual Basic 2005 értékek a következők: a Unicode használatát, és `AscB` már nem támogatott."
  example:
  - "The following example uses the `Asc` function to return `Integer` character codes corresponding to the first letter in each string.  \n  \n [!code-vb[VbVbalrFunctions#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._205_1.vb)]"
  syntax:
    content: public static int AscW (string String);
    parameters:
    - id: String
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés. Ha `String` van egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> bemeneti használt kifejezés, csak a karakterlánc első karaktere. Ha `String` van <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> nem karakternél, vagy egy <xref:System.ArgumentException>hiba akkor fordul elő.</xref:System.ArgumentException>"
    return:
      type: System.Int32
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> egy karakternek megfelelő karakterkódot jelző érték."
  overload: Microsoft.VisualBasic.Strings.AscW*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Chr(System.Int32)
  id: Chr(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Chr(Int32)
  nameWithType: Strings.Chr(Int32)
  fullName: Microsoft.VisualBasic.Strings.Chr(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott karakterkódnak társított karaktert adja vissza."
  remarks: "Az aszimmetrikus tartomány elfogadott `CharCode` a tároló közötti különbségeket kiegyenlíti az `Short` és a `Integer`. Például-29183 van egy `Short` +36353 azonban egy `Integer`. Ez is elősegíti a Visual Basic 6.0 is kompatibilisek.       `Chr`használja a <xref:System.Text.Encoding>osztályt a <xref:System.Text?displayProperty=fullName>névtér annak megállapításában, ha az aktuális szál egybájtos karakterkészlet (SBCS) vagy a kétbájtos karakterek (DBCS) beállítása.</xref:System.Text?displayProperty=fullName> </xref:System.Text.Encoding> Majd tart `CharCode` kódként pont megfelelő készletében. A tartomány 0 és 255 Egybájtos karakterek és csak -32768 és 65535 DBCS karakter közötti lehet.       A visszaadott érték az aktuális szál, amelyet a kódlapjának függ a <xref:System.Globalization.TextInfo.ANSICodePage%2A>tulajdonsága a <xref:System.Globalization.TextInfo>osztályt a <xref:System.Globalization>névtér.</xref:System.Globalization> </xref:System.Globalization.TextInfo> </xref:System.Globalization.TextInfo.ANSICodePage%2A> Ezt úgy szerezheti be <xref:System.Globalization.TextInfo.ANSICodePage%2A>megadásával `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</xref:System.Globalization.TextInfo.ANSICodePage%2A>       `ChrW`veszi `CharCode` egy Unicode kódpont. A tartomány nem függ a az aktuális szál kulturális környezet és a kód lap beállításait. -1 Biztosan keresztül&32768; értékek azonos tartományban +32768 keresztül +65535 értékek számít.       0 és 31 közötti számot ugyanazok, mint szabványos nem nyomtatható ASCII-kódját. Például `Chr(10)` adja vissza egy soremelés karakter.      > [!NOTE] > A `ChrB` akár egyetlen bájtja függvény a Visual Basic korábbi verzióiban. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Visual Basic és a .NET-keretrendszer minden értékek a következők: a Unicode használatát, és `ChrB` már nem támogatott."
  example:
  - "The following example uses the `Chr` function to return the character associated with the specified character code.  \n  \n [!code-vb[VbVbalrStrings#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._105_1.vb)]"
  syntax:
    content: public static char Chr (int CharCode);
    parameters:
    - id: CharCode
      type: System.Int32
      description: "Kötelező. Egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> kifejezés képviselő a `code point`, vagy, a karakter kódját."
    return:
      type: System.Char
      description: "A megadott karakterkódnak társított karaktert adja vissza."
  overload: Microsoft.VisualBasic.Strings.Chr*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>CharCode</code>&lt; 0 or &gt; 255 for <xref uid=&quot;langword_csharp_Chr&quot; name=&quot;Chr&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  id: ChrW(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: ChrW(Int32)
  nameWithType: Strings.ChrW(Int32)
  fullName: Microsoft.VisualBasic.Strings.ChrW(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott karakterkódnak társított karaktert adja vissza."
  remarks: "Az aszimmetrikus tartomány elfogadott `CharCode` a tároló közötti különbségeket kiegyenlíti az `Short` és a `Integer`. Például-29183 van egy `Short` +36353 azonban egy `Integer`. Ez is elősegíti a Visual Basic 6.0 is kompatibilisek.       `Chr`használja a <xref:System.Text.Encoding>osztályt a <xref:System.Text?displayProperty=fullName>névtér annak megállapításában, ha az aktuális szál egybájtos karakterkészlet (SBCS) vagy a kétbájtos karakterek (DBCS) beállítása.</xref:System.Text?displayProperty=fullName> </xref:System.Text.Encoding> Majd tart `CharCode` kódként pont megfelelő készletében. A tartomány 0 és 255 Egybájtos karakterek és csak -32768 és 65535 DBCS karakter közötti lehet.       A visszaadott érték az aktuális szál, amelyet a kódlapjának függ a <xref:System.Globalization.TextInfo.ANSICodePage%2A>tulajdonsága a <xref:System.Globalization.TextInfo>osztályt a <xref:System.Globalization>névtér.</xref:System.Globalization> </xref:System.Globalization.TextInfo> </xref:System.Globalization.TextInfo.ANSICodePage%2A> Ezt úgy szerezheti be <xref:System.Globalization.TextInfo.ANSICodePage%2A>megadásával `System.Globalization.CultureInfo.CurrentCulture.TextInfo.ANSICodePage`.</xref:System.Globalization.TextInfo.ANSICodePage%2A>       `ChrW`veszi `CharCode` egy Unicode kódpont. A tartomány nem függ a az aktuális szál kulturális környezet és a kód lap beállításait. -1 Biztosan keresztül&32768; értékek azonos tartományban +32768 keresztül +65535 értékek számít.       0 és 31 közötti számot ugyanazok, mint szabványos nem nyomtatható ASCII-kódját. Például `Chr(10)` adja vissza egy soremelés karakter.      > [!NOTE] > A `ChrB` akár egyetlen bájtja függvény a Visual Basic korábbi verzióiban. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Visual Basic és a .NET-keretrendszer minden értékek a következők: a Unicode használatát, és `ChrB` már nem támogatott."
  example:
  - "The following example uses the `Chr` function to return the character associated with the specified character code.  \n  \n [!code-vb[VbVbalrStrings#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._45_1.vb)]"
  syntax:
    content: public static char ChrW (int CharCode);
    parameters:
    - id: CharCode
      type: System.Int32
      description: "Kötelező. Egy <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> kifejezés képviselő a `code point`, vagy, a karakter kódját."
    return:
      type: System.Char
      description: "A megadott karakterkódnak társított karaktert adja vissza."
  overload: Microsoft.VisualBasic.Strings.ChrW*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>CharCode</code>&lt; -32768 or &gt; 65535 for <xref uid=&quot;langword_csharp_ChrW&quot; name=&quot;ChrW&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  id: Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Filter(Object[],String,Boolean,CompareMethod)
  nameWithType: Strings.Filter(Object[],String,Boolean,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Filter(Object[],String,Boolean,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy részhalmazát tartalmazó nulla alapú tömböt ad vissza egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> tömb a megadott szűrési feltételek alapján."
  remarks: "Ha nincs találat a `Match` belül található `Source`, a `Filter` függvény üres tömböt ad vissza. A hiba akkor fordul elő, ha `Source` értéke `Nothing` , vagy nem egydimenziós tömb.       A tömb által visszaadott a `Filter` függvény csak elég egyező elemek száma tartalmazhat elemeket tartalmazza.       A `Compare` argumentum a következő értékeket veheti fel.      |||   |-|-|   | Állandó |} Leírás |}   | `CompareMethod.Binary`| Bináris összehasonlítást végez |}   | `CompareMethod.Text`| A szöveges összehasonlítást végez |}"
  example:
  - "This example demonstrates the use of the `Filter` function.  \n  \n [!code-vb[VbVbalrStrings#24](~/add/codesnippet/visualbasic/bfb6d7a4-ec2d-49ca-96ad-_1.vb)]"
  syntax:
    content: public static string[] Filter (object[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Source
      type: System.Object[]
      description: "Kötelező. A keresendő karakterláncok egydimenziós tömb."
    - id: Match
      type: System.String
      description: "Kötelező. A keresendő karakterláncot."
    - id: Include
      type: System.Boolean
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>érték azt jelzi, hogy vissza, amely bevonhat vagy kizárhat karakterláncrészletek `Match`. Ha `Include` van <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Filter&quot; name=&quot;Filter&quot; href=&quot;&quot;> </xref> függvény a tömb, amely tartalmazza a részhalmazát adja vissza `Match` , a karakterláncrészletet. Ha `Include` van <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Filter&quot; name=&quot;Filter&quot; href=&quot;&quot;> </xref> függvény a megadott tömb esetében nem tartalmaz részhalmazát adja vissza `Match` , a karakterláncrészletet."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Nem kötelező. Milyen típusú karakterlánc-összehasonlítási használandó utaló numerikus érték. Tekintse meg a &quot;Beállítások&quot; értékek."
    return:
      type: System.String[]
      description: "Egy részhalmazát tartalmazó nulla alapú tömböt ad vissza egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> tömb a megadott szűrési feltételek alapján."
  overload: Microsoft.VisualBasic.Strings.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Source</code>van <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> , vagy nem egydimenziós tömb."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  id: Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Filter(String[],String,Boolean,CompareMethod)
  nameWithType: Strings.Filter(String[],String,Boolean,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Filter(String[],String,Boolean,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy részhalmazát tartalmazó nulla alapú tömböt ad vissza egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> tömb a megadott szűrési feltételek alapján."
  remarks: "Ha nincs találat a `Match` belül található `Source`, a `Filter` függvény üres tömböt ad vissza. A hiba akkor fordul elő, ha `Source` értéke `Nothing` , vagy nem egydimenziós tömb.       A tömb által visszaadott a `Filter` függvény csak elég egyező elemek száma tartalmazhat elemeket tartalmazza.       A `Compare` argumentum a következő értékeket veheti fel.      |||   |-|-|   | Állandó |} Leírás |}   | `CompareMethod.Binary`| Bináris összehasonlítást végez |}   | `CompareMethod.Text`| A szöveges összehasonlítást végez |}"
  example:
  - "This example demonstrates the use of the `Filter` function.  \n  \n [!code-vb[VbVbalrStrings#24](~/add/codesnippet/visualbasic/a4b278ef-f791-4808-8a23-_1.vb)]"
  syntax:
    content: public static string[] Filter (string[] Source, string Match, bool Include = true, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Source
      type: System.String[]
      description: "Kötelező. A keresendő karakterláncok egydimenziós tömb."
    - id: Match
      type: System.String
      description: "Kötelező. A keresendő karakterláncot."
    - id: Include
      type: System.Boolean
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>érték azt jelzi, hogy vissza, amely bevonhat vagy kizárhat karakterláncrészletek `Match`. Ha `Include` van <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Filter&quot; name=&quot;Filter&quot; href=&quot;&quot;> </xref> függvény a tömb, amely tartalmazza a részhalmazát adja vissza `Match` , a karakterláncrészletet. Ha `Include` van <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Filter&quot; name=&quot;Filter&quot; href=&quot;&quot;> </xref> függvény a megadott tömb esetében nem tartalmaz részhalmazát adja vissza `Match` , a karakterláncrészletet."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Nem kötelező. Milyen típusú karakterlánc-összehasonlítási használandó utaló numerikus érték. Tekintse meg a &quot;Beállítások&quot; értékek."
    return:
      type: System.String[]
      description: "Egy részhalmazát tartalmazó nulla alapú tömböt ad vissza egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> tömb a megadott szűrési feltételek alapján."
  overload: Microsoft.VisualBasic.Strings.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Source</code>van <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> , vagy nem egydimenziós tömb."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Format(System.Object,System.String)
  id: Format(System.Object,System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Format(Object,String)
  nameWithType: Strings.Format(Object,String)
  fullName: Microsoft.VisualBasic.Strings.Format(Object,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy karakterlánc megadott formátumban utasítások szerint formázott <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
  remarks: "The <xref:System.String.Format%2A?displayProperty=fullName> method also provides similar functionality.  \n  \n If you are formatting a nonlocalized numeric string, you should use a user-defined numeric format to ensure that you get the look you want.  \n  \n If you try to format a number without specifying `Style`, the `Format` function provides functionality similar to the `Str` function, although it is internationally aware. However, positive numbers formatted as strings using the `Format` function don't include a leading space reserved for the sign of the value; those converted using the `Str` function retain the leading space.  \n  \n## Different Formats for Different Numeric Values  \n A user-defined format expression for numbers can have from one to three sections separated by semicolons. If the `Style` argument of the `Format` function contains one of the predefined numeric formats, only one section is allowed.  \n  \n|||  \n|-|-|  \n|If you use|This is the result|  \n|One section only|The format expression applies to all values.|  \n|Two sections|The first section applies to positive values and zeros; the second applies to negative values.|  \n|Three sections|The first section applies to positive values, the second applies to negative values, and the third applies to zeros.|  \n  \n The following example has two sections: the first defines the format for positive values and zeros; the second section defines the format for negative values. Since the `Style` argument of the `Format` function takes a string, it is enclosed by quotation marks.  \n  \n [!code-vb[VbVbalrStrings#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._134_1.vb)]  \n  \n If you include semicolons with nothing between them, the missing section is printed using the format of the positive value. For example, the following format displays positive and negative values using the format in the first section and displays `Zero` if the value is zero.  \n  \n [!code-vb[VbVbalrStrings#19](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._134_2.vb)]  \n  \n## Predefined Numeric Formats  \n The following table identifies the predefined numeric format names. These may be used by name as the `Style` argument for the `Format` function:  \n  \n|||  \n|-|-|  \n|Format name|Description|  \n|`General Number`, `G`, or `g`|Displays number with no thousand separator.<br /><br /> For example, `Format(&H3FA, \"g\")` returns `1018`.|  \n|`Currency`, `C`, or `c`|Displays number with thousand separator, if appropriate; displays two digits to the right of the decimal separator. Output is based on system locale settings.<br /><br /> For example, `Format(1234567, \"c\")` returns `$1,234,567.00`.|  \n|`Fixed`, `F`, or `f`|Displays at least one digit to the left and two digits to the right of the decimal separator.<br /><br /> For example, `Format(1234567, \"f\")` returns `1234567.00`.|  \n|`Standard`, `N`, or `n`|Displays number with thousand separator, at least one digit to the left and two digits to the right of the decimal separator.<br /><br /> For example, `Format(1234567, \"n\")` returns `1,234,567.00`.|  \n|`Percent`|Displays number multiplied by 100 with a percent sign (%) appended immediately to the right; always displays two digits to the right of the decimal separator.<br /><br /> For example, `Format(0.4744, \"Percent\")` returns `47.44%`.|  \n|`P`, or `p`|Displays number with thousandths separator multiplied by 100 with a percent sign (%) appended to the right and separated by a single space; always displays two digits to the right of the decimal separator.<br /><br /> For example, `Format(0.80345, \"p\")` returns `80.35 %`.|  \n|`Scientific`|Uses standard scientific notation, providing two significant digits.<br /><br /> For example, `Format(1234567, \"Scientific\")` returns `1.23E+06`.|  \n|`E`, or `e`|Uses standard scientific notation, providing six significant digits.<br /><br /> For example, `Format(1234567, \"e\")` returns `1.234567e+006`.|  \n|`D`, or `d`|Displays number as a string that contains the value of the number in Decimal (base 10) format. This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.<br /><br /> For example, `Format(&H7F, \"d\")` returns `127`.|  \n|`X`, or `x`|Displays number as a string that contains the value of the number in Hexadecimal (base 16) format. This option is supported for integral types (`Byte`, `Short`, `Integer`, `Long`) only.<br /><br /> For example, `Format(127, \"x\")` returns `7f`.|  \n|`Yes/No`|Displays `No` if number is 0; otherwise, displays `Yes`.<br /><br /> For example, `Format(0, \"Yes/No\")` returns `No`.|  \n|`True/False`|Displays `False` if number is 0; otherwise, displays `True`.<br /><br /> For example, `Format(1, \"True/False\")` returns `True`.|  \n|`On/Off`|Displays `Off` if number is 0; otherwise, displays `On`.<br /><br /> For example, `Format(1, \"On/Off\")` returns `On`.|  \n  \n### Smart Device Developer Notes  \n The `Yes/No`, `True/False`, and `On/Off` formats are not supported.  \n  \n## User-Defined Numeric Formats  \n The following table identifies characters you can use to create user-defined number formats. These may be used to build the `Style` argument for the `Format` function:  \n  \n|||  \n|-|-|  \n|Character|Description|  \n|None|Displays the number with no formatting.|  \n|(`0`)|Digit placeholder. Displays a digit or a zero. If the expression has a digit in the position where the zero appears in the format string, display it; otherwise, displays a zero in that position.<br /><br /> If the number has fewer digits than there are zeros (on either side of the decimal) in the format expression, displays leading or trailing zeros. If the number has more digits to the right of the decimal separator than there are zeros to the right of the decimal separator in the format expression, rounds the number to as many decimal places as there are zeros. If the number has more digits to the left of the decimal separator than there are zeros to the left of the decimal separator in the format expression, displays the extra digits without modification.|  \n|(`#`)|Digit placeholder. Displays a digit or nothing. If the expression has a digit in the position where the `#` character appears in the format string, displays it; otherwise, displays nothing in that position.<br /><br /> This symbol works like the `0` digit placeholder, except that leading and trailing zeros aren't displayed if the number has fewer digits than there are `#` characters on either side of the decimal separator in the format expression.|  \n|(`.`)|Decimal placeholder. The decimal placeholder determines how many digits are displayed to the left and right of the decimal separator. If the format expression contains only `#` characters to the left of this symbol; numbers smaller than 1 begin with a decimal separator. To display a leading zero displayed with fractional numbers, use zero as the first digit placeholder to the left of the decimal separator. In some locales, a comma is used as the decimal separator. The actual character used as a decimal placeholder in the formatted output depends on the number format recognized by your system. Thus, you should use the period as the decimal placeholder in your formats even if you are in a locale that uses a comma as a decimal placeholder. The formatted string will appear in the format correct for the locale.|  \n|(`%`)|Percent placeholder. Multiplies the expression by 100. The percent character (`%`) is inserted in the position where it appears in the format string.|  \n|(`,`)|Thousand separator. The thousand separator separates thousands from hundreds within a number that has four or more places to the left of the decimal separator. Standard use of the thousand separator is specified if the format contains a thousand separator surrounded by digit placeholders (`0` or `#`).<br /><br /> A thousand separator immediately to the left of the decimal separator (whether or not a decimal is specified) or as the rightmost character in the string means \"scale the number by dividing it by 1,000, rounding as needed.\" Numbers smaller than 1,000 but greater or equal to 500 are displayed as `1`, and numbers smaller than 500 are displayed as `0`. Two adjacent thousand separators in this position scale by a factor of 1 million, and an additional factor of 1,000 for each additional separator.<br /><br /> Multiple separators in any position other than immediately to the left of the decimal separator or the rightmost position in the string are treated simply as specifying the use of a thousand separator. In some locales, a period is used as a thousand separator. The actual character used as the thousand separator in the formatted output depends on the Number Format recognized by your system. Thus, you should use the comma as the thousand separator in your formats even if you are in a locale that uses a period as a thousand separator. The formatted string will appear in the format correct for the locale.<br /><br /> For example, consider the three following format strings:<br /><br /> -   `\"#,0.\"`, which uses the thousands separator to format the number 100 million as the string \"100,000,000\".<br />-   `\"#0,.\"`, which uses scaling by a factor of one thousand to format the number 100 million as the string \"100000\".<br />-   `\"#,0,.\"`, which uses the thousands separator and scaling by one thousand to format the number 100 million as the string \"100,000\".|  \n|(`:`)|Time separator. In some locales, other characters may be used to represent the time separator. The time separator separates hours, minutes, and seconds when time values are formatted. The actual character used as the time separator in formatted output is determined by your system settings.|  \n|(`/`)|Date separator. In some locales, other characters may be used to represent the date separator. The date separator separates the day, month, and year when date values are formatted. The actual character used as the date separator in formatted output is determined by your system settings.|  \n|(`E-``E+``e-``e+`)|Scientific format. If the format expression contains at least one digit placeholder (`0` or `#`) to the left of `E-`, `E+`, `e-`, or `e+`, the number is displayed in scientific format and `E` or `e` is inserted between the number and its exponent. The number of digit placeholders to the left determines the number of digits in the exponent. Use `E-` or `e-` to place a minus sign next to negative exponents. Use `E+` or `e+` to place a minus sign next to negative exponents and a plus sign next to positive exponents. You must also include digit placeholders to the right of this symbol to get correct formatting.|  \n|`-` `+` `$` ( )|Literal characters. These characters are displayed exactly as typed in the format string. To display a character other than one of those listed, precede it with a backslash (`\\`) or enclose it in double quotation marks (\" \").|  \n|(`\\`)|Displays the next character in the format string. To display a character that has special meaning as a literal character, precede it with a backslash (`\\`). The backslash itself isn't displayed. Using a backslash is the same as enclosing the next character in double quotation marks. To display a backslash, use two backslashes (`\\\\`).<br /><br /> Examples of characters that can't be displayed as literal characters are the date-formatting and time-formatting characters (`a`, `c`, `d`, `h`, `m`, `n`, `p`, `q`, `s`, `t`, `w`, `y`, `/`, and `:`), the numeric-formatting characters (`#`, `0`, `%`, `E`, `e`, comma, and period), and the string-formatting characters (`@`, `&`, `<`, `>`, and `!`).|  \n|(`\"``ABC``\"`)|Displays the string inside the double quotation marks (\" \"). To include a string in the style argument from within code, you must use `Chr(34)` to enclose the text (`34` is the character code for a quotation mark (\")).|  \n  \n### Legacy Code Example  \n The following table contains some sample format expressions for numbers. (These examples all assume that your system's locale setting is English-U.S.) The first column contains the format strings for the `Style` argument of the `Format` function; the other columns contain the resulting output if the formatted data has the value given in the column headings.  \n  \n|||||  \n|-|-|-|-|  \n|Format (`Style`)|\"5\" formatted as|\"-5\" formatted as|\"0.5\" formatted as|  \n|`Zero-length string (\"\")`|`5`|`-5`|`0.5`|  \n|`0`|`5`|`-5`|`1`|  \n|`0.00`|`5.00`|`-5.00`|`0.50`|  \n|`#,##0`|`5`|`-5`|`1`|  \n|`$#,##0;($#,##0)`|`$5`|`($5)`|`$1`|  \n|`$#,##0.00;($#,##0.00)`|`$5.00`|`($5.00)`|`$0.50`|  \n|`0%`|`500%`|`-500%`|`50%`|  \n|`0.00%`|`500.00%`|`-500.00%`|`50.00%`|  \n|`0.00E+00`|`5.00E+00`|`-5.00E+00`|`5.00E-01`|  \n|`0.00E-00`|`5.00E00`|`-5.00E00`|`5.00E-01`|  \n  \n## Predefined Date/Time Formats  \n The following table identifies the predefined date and time format names. These may be used by name as the style argument for the `Format` function:  \n  \n|||  \n|-|-|  \n|Format Name|Description|  \n|`General Date`, or `G`|Displays a date and/or time. For example, `3/12/2008 11:07:31 AM`. Date display is determined by your application's current culture value.|  \n|`Long Date`, `Medium Date`, or `D`|Displays a date according to your current culture's long date format. For example, `Wednesday, March 12, 2008`.|  \n|`Short Date`, or `d`|Displays a date using your current culture's short date format. For example, `3/12/2008`.<br /><br /> The `d` character displays the day in a user-defined date format.|  \n|`Long Time`, `Medium Time`, or `T`|Displays a time using your current culture's long time format; typically includes hours, minutes, seconds. For example, `11:07:31 AM`.|  \n|`Short Time` or `t`|Displays a time using your current culture's short time format. For example, `11:07 AM`.<br /><br /> The `t` character displays `AM` or `PM` values for locales that use a 12-hour clock in a user-defined time format.|  \n|`f`|Displays the long date and short time according to your current culture's format. For example, `Wednesday, March 12, 2008 11:07 AM`.|  \n|`F`|Displays the long date and long time according to your current culture's format. For example, `Wednesday, March 12, 2008 11:07:31 AM`.|  \n|`g`|Displays the short date and short time according to your current culture's format. For example, `3/12/2008 11:07 AM`.|  \n|`M`, `m`|Displays the month and the day of a date. For example, `March 12`.<br /><br /> The `M` character displays the month in a user-defined date format. The `m` character displays the minutes in a user-defined time format.|  \n|`R`, `r`|Formats the date according to the <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property. For example, `Wed, 12 Mar 2008 11:07:31 GMT`. The formatted date does not adjust the value of the date and time. You must adjust the Date/Time value to GMT before calling the `Format` function.|  \n|`s`|Formats the date and time as a sortable index. For example, `2008-03-12T11:07:31`.<br /><br /> The `s` character displays the seconds in a user-defined time format.|  \n|`u`|Formats the date and time as a GMT sortable index. For example, `2008-03-12 11:07:31Z`.|  \n|`U`|Formats the date and time with the long date and long time as GMT. For example, `Wednesday, March 12, 2008 6:07:31 PM`.|  \n|`Y`, `y`|Formats the date as the year and month. For example, `March, 2008`.<br /><br /> The `Y` and `y` characters display the year in a user-defined date format.|  \n  \n For more information about the application's current culture information, see [How Culture Affects Strings in Visual Basic](~/add/includes/ajax-current-ext-md.md).  \n  \n## User-Defined Date/Time Formats  \n The following table shows characters you can use to create user-defined date/time formats. Unlike in earlier versions of [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], these format characters are case-sensitive.  \n  \n|||  \n|-|-|  \n|Character|Description|  \n|(`:`)|Time separator. In some locales, other characters may be used to represent the time separator. The time separator separates hours, minutes, and seconds when time values are formatted. The actual character that is used as the time separator in formatted output is determined by your application's current culture value.|  \n|(`/`)|Date separator. In some locales, other characters may be used to represent the date separator. The date separator separates the day, month, and year when date values are formatted. The actual character that is used as the date separator in formatted output is determined by your application's current culture.|  \n|(`%`)|Used to indicate that the following character should be read as a single-letter format without regard to any trailing letters. Also used to indicate that a single-letter format is read as a user-defined format. See what follows for additional details.|  \n|`d`|Displays the day as a number without a leading zero (for example, `1`). Use `%d` if this is the only character in your user-defined numeric format.|  \n|`dd`|Displays the day as a number with a leading zero (for example, `01`).|  \n|`ddd`|Displays the day as an abbreviation (for example, `Sun`).|  \n|`dddd`|Displays the day as a full name (for example, `Sunday`).|  \n|`M`|Displays the month as a number without a leading zero (for example, January is represented as `1`). Use `%M` if this is the only character in your user-defined numeric format.|  \n|`MM`|Displays the month as a number with a leading zero (for example, `01/12/01`).|  \n|`MMM`|Displays the month as an abbreviation (for example, `Jan`).|  \n|`MMMM`|Displays the month as a full month name (for example, `January`).|  \n|`gg`|Displays the period/era string (for example, `A.D.`).|  \n|`h`|Displays the hour as a number without leading zeros using the 12-hour clock (for example, `1:15:15 PM`). Use `%h` if this is the only character in your user-defined numeric format.|  \n|`hh`|Displays the hour as a number with leading zeros using the 12-hour clock (for example, `01:15:15 PM`).|  \n|`H`|Displays the hour as a number without leading zeros using the 24-hour clock (for example, `1:15:15`). Use `%H` if this is the only character in your user-defined numeric format.|  \n|`HH`|Displays the hour as a number with leading zeros using the 24-hour clock (for example, `01:15:15`).|  \n|`m`|Displays the minute as a number without leading zeros (for example, `12:1:15`). Use `%m` if this is the only character in your user-defined numeric format.|  \n|`mm`|Displays the minute as a number with leading zeros (for example, `12:01:15`).|  \n|`s`|Displays the second as a number without leading zeros (for example, `12:15:5`). Use `%s` if this is the only character in your user-defined numeric format.|  \n|`ss`|Displays the second as a number with leading zeros (for example, `12:15:05`).|  \n|`f`|Displays fractions of seconds. For example `ff` displays hundredths of seconds, whereas `ffff` displays ten-thousandths of seconds. You may use up to seven `f` symbols in your user-defined format. Use `%f` if this is the only character in your user-defined numeric format.|  \n|`t`|Uses the 12-hour clock and displays an uppercase `A` for any hour before noon; displays an uppercase `P` for any hour between noon and 11:59 P.M. Use `%t` if this is the only character in your user-defined numeric format.|  \n|`tt`|For locales that use a 12-hour clock, displays an uppercase `AM` with any hour before noon; displays an uppercase `PM` with any hour between noon and 11:59 P.M.<br /><br /> For locales that use a 24-hour clock, displays nothing.|  \n|`y`|Displays the year number (0-9) without leading zeros. Use `%y` if this is the only character in your user-defined numeric format.|  \n|`yy`|Displays the year in two-digit numeric format with a leading zero, if applicable.|  \n|`yyy`|Displays the year in four-digit numeric format.|  \n|`yyyy`|Displays the year in four-digit numeric format.|  \n|`z`|Displays the timezone offset without a leading zero (for example, `-8`). Use `%z` if this is the only character in your user-defined numeric format.|  \n|`zz`|Displays the timezone offset with a leading zero (for example, `-08`)|  \n|`zzz`|Displays the full timezone offset (for example, `-08:00`)|  \n  \n### Legacy Code Example  \n The following are examples of user-defined date and time formats for `December 7, 1958, 8:50 PM, 35 seconds`:  \n  \n|||  \n|-|-|  \n|Format|Displays|  \n|`M/d/yy`|`12/7/58`|  \n|`d-MMM`|`7-Dec`|  \n|`d-MMMM-yy`|`7-December-58`|  \n|`d MMMM`|`7 December`|  \n|`MMMM yy`|`December 58`|  \n|`hh:mm tt`|`08:50 PM`|  \n|`h:mm:ss t`|`8:50:35 P`|  \n|`H:mm`|`20:50`|  \n|`H:mm:ss`|`20:50:35`|  \n|`M/d/yyyy H:mm`|`12/7/1958 20:50`|  \n  \n### Smart Device Developer Notes  \n The minimum time resolution for a device is determined by the manufacturer of the device. If the time resolution for the device is coarse enough, the `f` format character returns 0 when run on that device."
  example:
  - "This example shows various uses of the `Format` function to format values using both `String` formats and user-defined formats. For the date separator (`/`), time separator (`:`), and the AM/PM indicators (`t` and `tt`), the actual formatted output displayed by your system depends on the locale settings the code is using. When times and dates are displayed in the development environment, the short time format and short date format of the code locale are used.  \n  \n> [!NOTE]\n>  For locales that use a 24-hour clock, the AM/PM indicators (`t` and `tt`) display nothing.  \n  \n [!code-vb[VbVbalrStrings#27](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._134_3.vb)]"
  syntax:
    content: public static string Format (object Expression, string Style = "");
    parameters:
    - id: Expression
      type: System.Object
      description: "Kötelező. Egy érvényes kifejezést."
    - id: Style
      type: System.String
      description: "Nem kötelező. Elnevezett vagy felhasználó által definiált formátuma érvénytelen <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
    return:
      type: System.String
      description: "Értéket ad vissza egy karakterlánc megadott formátumban utasítások szerint formázott <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
  overload: Microsoft.VisualBasic.Strings.Format*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  id: FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: FormatCurrency(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatCurrency(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatCurrency(Object,Int32,TriState,TriState,TriState)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A rendszer Vezérlőpultján megadott pénznemszimbólum használatával pénznemértékként formázott kifejezést ad vissza."
  remarks: "Ha egy vagy több nem kötelező argumentum van megadva, ehelyett a számítógép megfelelő területi-beállítások értékeket fogja használni.       A pénznemszimbólumot, a pénznem értékének viszonyított helyzete határozza meg a rendszer területi beállításokat.      > [!NOTE] > Összes beállítási információk az alkalmazás területi beállításainak származik. Alapértelmezés szerint a Vezérlőpult területi fogja tárolni. Azonban módosítható programozott módon, kivéve nullát, amelyet a .NET-keretrendszer használatával a `Number` fülre.       A `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, és `GroupDigits` argumentumot a következő TriState számbavételi értékek igénybe vehet.      |||   |-|-|   | Érték |} Leírás |}   | `TriState.True`| TRUE |}   | `TriState.False`| Hamis |}   | `TriState.UseDefault`| A számítógép területi beállításai |}"
  example:
  - "The following example illustrates the use of the `FormatCurrency` function.  \n  \n [!code-vb[VbVbalrStrings#32](~/add/codesnippet/visualbasic/c6b3af93-c0fc-4dd7-8b87-_1.vb)]"
  syntax:
    content: public static string FormatCurrency (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kötelező. Formázott kifejezést."
    - id: NumDigitsAfterDecimal
      type: System.Int32
      description: "Nem kötelező. Numerikus érték, amely azt jelzi, hogyan több helyen jelennek meg a tizedesvesszőtől jobbra. Alapértelmezett érték –&1;, ami azt jelzi, hogy a számítógép területi beállításai érvényesek-e."
    - id: IncludeLeadingDigit
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>az számbavételi, amely jelzi, hogy nullát tört érték jelenik meg. Lásd a &quot;Megjegyzések&quot; értékek."
    - id: UseParensForNegativeNumbers
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>amely azt jelzi-e elhelyezni a negatív értékek zárójelek enumerálása. Lásd a &quot;Megjegyzések&quot; értékek."
    - id: GroupDigits
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>amely azt jelzi-e számok vannak csoportosítva, a megadott területi beállítások a számítógép csoport elválasztó használatával enumerálása. Lásd a &quot;Megjegyzések&quot; értékek."
    return:
      type: System.String
      description: "A rendszer Vezérlőpultján megadott pénznemszimbólum használatával pénznemértékként formázott kifejezést ad vissza."
  overload: Microsoft.VisualBasic.Strings.FormatCurrency*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A tizedesvessző után számjegyet 99 több."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A típus nem numerikus."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)
  id: FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: FormatDateTime(DateTime,DateFormat)
  nameWithType: Strings.FormatDateTime(DateTime,DateFormat)
  fullName: Microsoft.VisualBasic.Strings.FormatDateTime(DateTime,DateFormat)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy dátum/idő értéket jelölő karakterlánc-kifejezést ad vissza."
  remarks: "A `Date` adattípus mindig tartalmazza a dátum-és. Típus céljából, a Visual Basic figyelembe vételével 1/1/1 (január 1-1 év) egy semleges értéke lesz a dátumra, és 00:00:00 (éjfél) elindításakor egy semleges értéke lesz. Ha egy `Date` értékét egy dátum/idő karakterlánc `FormatDateTime` nem tartalmazza az eredményül kapott karakterláncot semleges értékeket. Például, ha #1/1/0001 átalakítása karakterláncra, az eredmény túl &quot;9:30:00 AM&quot;; 9:30:00 a naprakész információkat le van tiltva. Azonban az eredeti jelen-e a naprakész információkat `Date` értékét, és állíthatók helyre funkciókkal, mint `DatePart`.      > [!NOTE] > Ha át a `Expression` argumentumát egy `String` szövegkonstans, `FormatDateTime` megfelelően kezeli a <xref:System.Globalization.CultureInfo.CurrentCulture%2A>az alkalmazás beállítását.</xref:System.Globalization.CultureInfo.CurrentCulture%2A> Azonban ha át azt egy `Date` szövegkonstans, használja a formátum #mm/nn/éééé #, mert `FormatDateTime` mindig értelmezi egy `Date` literális az angol (amerikai) kultúrának megfelelő. Erre akkor szükség, ha az alkalmazások fejlesztése és alkalmazásával `Date` literálok egy kulturális környezet, de a másik kulturális környezetet, platformon végrehajthatók a `Date` literálok helytelenül volt elemezhető.       A `NamedFormat` argumentum a következő beállításokkal rendelkezik.      |||   |-|-|   | Állandó |} Leírás |}   | `DateFormat.GeneralDate`| Egy dátumot és/vagy idő megjelenítéséhez. A rövid dátum egy dátumrész jeleníti meg. Ha idő tartozik, ez hosszú időt jeleníti meg. Jelen, ha mindkét részt telepíti jeleníti meg. |}   | `DateFormat.LongDate`| Megjeleníti a hosszú dátum formátumban megadott területi beállítások a számítógép dátum. |}   | `DateFormat.ShortDate`| Megjeleníti a rövid dátum formátumban megadott területi beállítások a számítógép dátum. |}   | `DateFormat.LongTime`| Egy idő formátumban megadott a számítógép területi beállítások megjelenítése. |}   | `DateFormat.ShortTime`| A 24 órás formátumban (ÓÓ: PP) időpontot jeleníti meg. |}"
  example:
  - "This example demonstrates the use of the `FormatDateTime` function.  \n  \n [!code-vb[VbVbalrStrings#3](~/add/codesnippet/visualbasic/12ae27ca-4a0f-4ea2-855e-_1.vb)]"
  syntax:
    content: public static string FormatDateTime (DateTime Expression, Microsoft.VisualBasic.DateFormat NamedFormat = Microsoft.VisualBasic.DateFormat.GeneralDate);
    parameters:
    - id: Expression
      type: System.DateTime
      description: "Kötelező. <xref uid=&quot;langword_csharp_Date&quot; name=&quot;Date&quot; href=&quot;&quot;></xref>formázott kifejezést."
    - id: NamedFormat
      type: Microsoft.VisualBasic.DateFormat
      description: "Nem kötelező. Numerikus érték, amely jelzi a dátum/idő formátumot használja. Ha nincs megadva, <xref uid=&quot;langword_csharp_DateFormat.GeneralDate&quot; name=&quot;DateFormat.GeneralDate&quot; href=&quot;&quot;> </xref> szolgál."
    return:
      type: System.String
      description: "Egy dátum/idő értéket jelölő karakterlánc-kifejezést ad vissza."
  overload: Microsoft.VisualBasic.Strings.FormatDateTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NamedFormat</code>a beállítás nem érvényes."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  id: FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: FormatNumber(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatNumber(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatNumber(Object,Int32,TriState,TriState,TriState)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy számként formázott kifejezést ad vissza."
  remarks: "Ha egy vagy több nem kötelező argumentum nincs megadva érték nincs megadva argumentum értékeit a területi beállításokat által biztosított.      > [!NOTE] > Összes beállítási információk az alkalmazás területi beállításainak származik. Alapértelmezés szerint a Vezérlőpult területi fogja tárolni. Azonban ez módosítható programozott módon a .NET-keretrendszer használatával.       A `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, és `GroupDigits` argumentumok az alábbi beállításokkal rendelkeznek.      |||   |-|-|   | Állandó |} Leírás |}   | `TriState.True`| TRUE |}   | `TriState.False`| Hamis |}   | `TriState.UseDefault`| A számítógép területi beállításai |}"
  example:
  - "This example demonstrates the `FormatNumber` function.  \n  \n [!code-vb[VbVbalrStrings#15](~/add/codesnippet/visualbasic/4c7d3c11-69f8-405b-a033-_1.vb)]"
  syntax:
    content: public static string FormatNumber (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kötelező. Formázott kifejezést."
    - id: NumDigitsAfterDecimal
      type: System.Int32
      description: "Nem kötelező. Numerikus érték, amely azt jelzi, hogyan több helyen jelennek meg a tizedesvesszőtől jobbra. Az alapértelmezett érték –&1;, ami azt jelzi, hogy a számítógép területi beállításai érvényesek-e."
    - id: IncludeLeadingDigit
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>az konstans, amely jelzi, hogy megjelenik-e kezdő 0 tört érték. Tekintse meg a &quot;Beállítások&quot; értékek."
    - id: UseParensForNegativeNumbers
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>az konstans, amely azt jelzi, hogy a negatív értékek zárójelek helyezze el. Tekintse meg a &quot;Beállítások&quot; értékek."
    - id: GroupDigits
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>az konstans, amely azt jelzi-e számok vannak csoportosítva, a csoport elválasztó megadott területi beállítások használatával. Tekintse meg a &quot;Beállítások&quot; értékek."
    return:
      type: System.String
      description: "Egy számként formázott kifejezést ad vissza."
  overload: Microsoft.VisualBasic.Strings.FormatNumber*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A típus nem numerikus."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  id: FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: FormatPercent(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatPercent(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatPercent(Object,Int32,TriState,TriState,TriState)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy százalékként formázott (azaz megszorozza 100) záró % karakterrel kifejezést ad vissza."
  remarks: "Egy vagy több nem kötelező argumentum nincs megadva érték, ha nincs megadva argumentum értékeit a területi beállításokat által biztosított.      > [!NOTE] > Összes beállítási információk az alkalmazás területi beállításainak származik. Alapértelmezés szerint a Vezérlőpult területi fogja tárolni. Azonban ez módosítható programozott módon a .NET-keretrendszer használatával.       A `IncludeLeadingDigit`, `UseParensForNegativeNumbers`, és `GroupDigits` argumentumok az alábbi beállításokkal rendelkeznek.      |||   |-|-|   | Állandó |} Leírás |}   | `TriState.True`| TRUE |}   | `TriState.False`| Hamis |}   | `TriState.Default`| A számítógép területi beállításai |}"
  example:
  - "This example illustrates the use of the `FormatPercent` function.  \n  \n [!code-vb[VbVbalrStrings#28](~/add/codesnippet/visualbasic/699b6dbf-5eeb-4a3e-a4b1-_1.vb)]"
  syntax:
    content: public static string FormatPercent (object Expression, int NumDigitsAfterDecimal = -1, Microsoft.VisualBasic.TriState IncludeLeadingDigit = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState UseParensForNegativeNumbers = Microsoft.VisualBasic.TriState.UseDefault, Microsoft.VisualBasic.TriState GroupDigits = Microsoft.VisualBasic.TriState.UseDefault);
    parameters:
    - id: Expression
      type: System.Object
      description: "Kötelező. Formázott kifejezést."
    - id: NumDigitsAfterDecimal
      type: System.Int32
      description: "Nem kötelező. Numerikus érték, amely jelzi, hogy hány helyezi a tizedesvesszőtől jobbra jelennek meg. Alapértelmezett érték –&1;, ami azt jelzi, hogy a területi beállításai érvényesek-e."
    - id: IncludeLeadingDigit
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>az konstans, amely azt jelzi-e nullát tört érték jeleníti meg. Tekintse meg a &quot;Beállítások&quot; értékek."
    - id: UseParensForNegativeNumbers
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>az konstans, amely azt jelzi-e elhelyezni zárójelek negatív értékeket. Tekintse meg a &quot;Beállítások&quot; értékek."
    - id: GroupDigits
      type: Microsoft.VisualBasic.TriState
      description: "Nem kötelező. <xref href=&quot;Microsoft.VisualBasic.TriState&quot;></xref>az konstans, amely azt jelzi-e számok vannak csoportosítva, a csoport elválasztó megadott területi beállítások használatával. Tekintse meg a &quot;Beállítások&quot; értékek."
    return:
      type: System.String
      description: "Egy százalékként formázott (azaz megszorozza 100) záró % karakterrel kifejezést ad vissza."
  overload: Microsoft.VisualBasic.Strings.FormatPercent*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A típus nem numerikus."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)
  id: GetChar(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: GetChar(String,Int32)
  nameWithType: Strings.GetChar(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.GetChar(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> értéket a megadott index a megadott karakterlánc pozíciójában álló karaktert jelöli."
  remarks: "Ha `Index` kisebb, mint 1 vagy nagyobb, mint az index utolsó karakterének `str`, egy `ArgumentException` vált ki."
  example:
  - "This example shows how to use the `GetChar` function to return a character from a specified index in a `String`.  \n  \n [!code-vb[VbVbalrStrings#23](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._0_1.vb)]"
  syntax:
    content: public static char GetChar (string str, int Index);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
    - id: Index
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. Az a karakter (1-es alapú) index `str` vissza kell adni."
    return:
      type: System.Char
      description: "<xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>az érték a megadott index a megadott karakterlánc pozíciójában álló karaktert jelöli."
  overload: Microsoft.VisualBasic.Strings.GetChar*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>str</code>van <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, <code>Index</code> &lt; 1, vagy <code>Index</code> nagyobb, mint az utolsó karakter indexét <code>str</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: InStr(String,String,CompareMethod)
  nameWithType: Strings.InStr(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStr(String,String,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc másik karakterláncon belüli első előfordulásának kezdőpozícióját egész számot adja vissza."
  remarks: "Általában a `InStr` függvény használt karakterlánc elemzésekor.      > [!NOTE] > A `InStrB` korábbi verzióiban a Visual Basic függvény egy számot ad vissza egy Karakterpozíció, hanem bájt. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Minden Visual Basic 2005 értékek a következők: a Unicode használatát, és `InStrB` már nem támogatott.       A `Compare` argumentum értékei: |||   |-|-|-|   | Állandó |} Érték |} Leírás |}   | `Binary`|0| Bináris összehasonlítást végez |}   | `Text`|1| Hajtja végre a szöveg összehasonlítása |}"
  example:
  - "This example uses the `InStr` function to return the position of the first occurrence of one string within another.  \n  \n [!code-vb[VbVbalrStrings#8](~/add/codesnippet/visualbasic/f1b47808-d5f4-408b-b1fc-_1.vb)]"
  syntax:
    content: public static int InStr (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: String1
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés keres."
    - id: String2
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a keresett kifejezés."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Nem kötelező. Meghatározza a karakterláncok összehasonlításának típusát. Ha `Compare` nincs megadva, a <xref uid=&quot;langword_csharp_Option Compare&quot; name=&quot;Option Compare&quot; href=&quot;&quot;> </xref> beállítás összehasonlítás típusa határozza meg."
    return:
      type: System.Int32
      description: "<table><tbody><tr><td> Ha       </td><td> InStr adja vissza       </td></tr><tr><td>           <code>String1</code>nulla hosszúságú vagy<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td> 0       </td></tr><tr><td>           <code>String2</code>nulla hosszúságú vagy<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td> A kezdő pozíciójának a keresést, amely alapértelmezés szerint az első karakter pozíciója.       </td></tr><tr><td>           <code>String2</code>nem található       </td><td> 0       </td></tr><tr><td>           <code>String2</code>belül található<code>String1</code></td><td> Ahol egyezés kezdődik pozíciója       </td></tr><tr><td></td><td></td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.InStr*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: InStr(Int32,String,String,CompareMethod)
  nameWithType: Strings.InStr(Int32,String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStr(Int32,String,String,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc másik karakterláncon belüli első előfordulásának kezdőpozícióját egész számot adja vissza."
  remarks: "Általában a `InStr` függvény használt karakterlánc elemzésekor.      > [!NOTE] > A `InStrB` korábbi verzióiban a Visual Basic függvény egy számot ad vissza egy Karakterpozíció, hanem bájt. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Minden Visual Basic 2005 értékek a következők: a Unicode használatát, és `InStrB` már nem támogatott.       A `Compare` argumentum értékei: |||   |-|-|-|   | Állandó |} Érték |} Leírás |}   | `Binary`|0| Bináris összehasonlítást végez |}   | `Text`|1| Hajtja végre a szöveg összehasonlítása |}"
  example:
  - "This example uses the `InStr` function to return the position of the first occurrence of one string within another.  \n  \n [!code-vb[VbVbalrStrings#8](~/add/codesnippet/visualbasic/087e182b-78be-4d9a-be91-_1.vb)]"
  syntax:
    content: public static int InStr (int Start, string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Start
      type: System.Int32
      description: "Nem kötelező. Beállítja az egyes keresés kezdő pozíciójának numerikus kifejezés. Ha nincs megadva, keresés az első karakter pozíciója kezdődik. A kezdőindex az 1-alapú."
    - id: String1
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés keres."
    - id: String2
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a keresett kifejezés."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Nem kötelező. Meghatározza a karakterláncok összehasonlításának típusát. Ha `Compare` nincs megadva, a <xref uid=&quot;langword_csharp_Option Compare&quot; name=&quot;Option Compare&quot; href=&quot;&quot;> </xref> beállítás összehasonlítás típusa határozza meg."
    return:
      type: System.Int32
      description: "<table><tbody><tr><td> Ha       </td><td> InStr adja vissza       </td></tr><tr><td>           <code>String1</code>nulla hosszúságú vagy<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td> 0       </td></tr><tr><td>           <code>String2</code>nulla hosszúságú vagy<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td>           <code>start</code>         </td></tr><tr><td>           <code>String2</code>nem található       </td><td> 0       </td></tr><tr><td>           <code>String2</code>belül található<code>String1</code></td><td> Ahol egyezés kezdődik pozíciója       </td></tr><tr><td>           <code>Start</code>&gt; hossza<code>String1</code></td><td> 0       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.InStr*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code> &lt; 1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  id: InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: InStrRev(String,String,Int32,CompareMethod)
  nameWithType: Strings.InStrRev(String,String,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStrRev(String,String,Int32,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc másik karakterláncon belüli, a karakterlánc jobb oldalán kiindulva első előfordulásának pozícióját adja vissza."
  remarks: "Vegye figyelembe, hogy szintaxisa a `InStrRev` függvény nem ugyanaz, mint a szintaxisa a `InStr` függvény.       A `Compare` argumentum a következő értékeket veheti fel.      |||   |-|-|   | Állandó |} Leírás |}   | `Binary`| Bináris összehasonlítást végez. |}   | `Text`| A szöveges összehasonlítást végez. |}"
  example:
  - "This example demonstrates the use of the `InStrRev` function.  \n  \n [!code-vb[VbVbalrStrings#26](~/add/codesnippet/visualbasic/ee8ba742-f981-4eca-b754-_1.vb)]"
  syntax:
    content: public static int InStrRev (string StringCheck, string StringMatch, int Start = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: StringCheck
      type: System.String
      description: "Kötelező. Karakterlánc-kifejezés keres."
    - id: StringMatch
      type: System.String
      description: "Kötelező. Keresett karakterlánc-kifejezés."
    - id: Start
      type: System.Int32
      description: "Nem kötelező. Az&1;-ről kezdő pozíciójának minden keresést, a karakterlánc bal oldalán beállítása a numerikus kifejezés. Ha `Start` nincs megadva, akkor –&1; használja, ami azt jelenti, a Keresés az utolsó karakter helyén kezdődik. Keresési majd jobbról balra eltérő lehet."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Nem kötelező. Milyen típusú összehasonlító karakterláncrészletek kiértékelésekor használandó utaló numerikus érték. Ha nincs megadva, a bináris összehasonlítás történik. Tekintse meg a beállításokat a értékeket."
    return:
      type: System.Int32
      description: "<table><tbody><tr><td> Ha       </td><td> InStrRev adja vissza.       </td></tr><tr><td>           <code>StringCheck</code>nulla hosszúságú       </td><td> 0       </td></tr><tr><td>           <code>StringMatch</code>nulla hosszúságú       </td><td>           <code>Start</code>         </td></tr><tr><td>           <code>StringMatch</code>nem található       </td><td> 0       </td></tr><tr><td>           <code>StringMatch</code>belül található<code>StringCheck</code></td><td> A pozíció, ahol az első egyezést talál, a karakterlánc jobb oldalán kezdve.       </td></tr><tr><td>           <code>Start</code>nagyobb, mint hossza<code>StringMatch</code></td><td> 0       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.InStrRev*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code>= 0 or <code>Start</code> &lt; -1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)
  id: Join(System.Object[],System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Join(Object[],String)
  nameWithType: Strings.Join(Object[],String)
  fullName: Microsoft.VisualBasic.Strings.Join(Object[],String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Számos egy tömbben található karakterláncrészletek összeillesztésével lett létrehozva karakterláncot ad vissza."
  remarks: "Egy egyenértékűek között a `Join` és `Split` funkciók. A `Join` függvény karakterlánctömbnek vesz igénybe, és csatlakoztatja őket egy elválasztó karakterlánc használatával egyetlen karakterláncot. A `Split` függvény lép egy karakterláncot, és elválasztja azt, az elválasztó karakterlánctömbnek vissza. Azonban a legfontosabb különbség, hogy `Join` bármely határoló karakterláncot is az összefűzés `Split` csak elkülönítheti a karakterláncok egy egyetlen karaktert elválasztó használatával."
  example:
  - "The following example demonstrates how to use the `Join` function to create a list from several strings.  \n  \n [!code-vb[VbVbalrStrings#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._160_1.vb)]"
  syntax:
    content: public static string Join (object[] SourceArray, string Delimiter = " ");
    parameters:
    - id: SourceArray
      type: System.Object[]
      description: "Kötelező. Karakterláncrészletek, amelyet egyesíteni tartalmazó egydimenziós tömb."
    - id: Delimiter
      type: System.String
      description: "Nem kötelező. Bármilyen karakterlánc, a visszaadott karakterlánc karakterláncrészletek elválasztó. Ha nincs megadva, a szóköz karakter (&quot;&quot;) használatos. Ha `Delimiter` egy nulla hosszúságú karakterlánc (&quot;&quot;) vagy <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, a lista összes elemének nélkül határolójelek van kibővítve."
    return:
      type: System.String
      description: "Számos egy tömbben található karakterláncrészletek összeillesztésével lett létrehozva karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.Join*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>SourceArray</code>Ez nem egy dimenzionális."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Join(System.String[],System.String)
  id: Join(System.String[],System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Join(String[],String)
  nameWithType: Strings.Join(String[],String)
  fullName: Microsoft.VisualBasic.Strings.Join(String[],String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Számos egy tömbben található karakterláncrészletek összeillesztésével lett létrehozva karakterláncot ad vissza."
  remarks: "Egy egyenértékűek között a `Join` és `Split` funkciók. A `Join` függvény karakterlánctömbnek vesz igénybe, és csatlakoztatja őket egy elválasztó karakterlánc használatával egyetlen karakterláncot. A `Split` függvény lép egy karakterláncot, és elválasztja azt, az elválasztó karakterlánctömbnek vissza. Azonban a legfontosabb különbség, hogy `Join` bármely határoló karakterláncot is az összefűzés `Split` csak elkülönítheti a karakterláncok egy egyetlen karaktert elválasztó használatával."
  example:
  - "The following example demonstrates how to use the `Join` function to create a list from several strings.  \n  \n [!code-vb[VbVbalrStrings#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._124_1.vb)]"
  syntax:
    content: public static string Join (string[] SourceArray, string Delimiter = " ");
    parameters:
    - id: SourceArray
      type: System.String[]
      description: "Kötelező. Karakterláncrészletek, amelyet egyesíteni tartalmazó egydimenziós tömb."
    - id: Delimiter
      type: System.String
      description: "Nem kötelező. Bármilyen karakterlánc, a visszaadott karakterlánc karakterláncrészletek elválasztó. Ha nincs megadva, a szóköz karakter (&quot;&quot;) használatos. Ha `Delimiter` egy nulla hosszúságú karakterlánc (&quot;&quot;) vagy <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, a lista összes elemének nélkül határolójelek van kibővítve."
    return:
      type: System.String
      description: "Számos egy tömbben található karakterláncrészletek összeillesztésével lett létrehozva karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.Join*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>SourceArray</code>Ez nem egy dimenzionális."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.LCase(System.Char)
  id: LCase(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: LCase(Char)
  nameWithType: Strings.LCase(Char)
  fullName: Microsoft.VisualBasic.Strings.LCase(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy kisbetűssé konvertált karaktert vagy karakterláncot ad vissza."
  remarks: "Csak nagybetűssé alakítja a rendszer kisbetűssé; minden kisbetűket és nonletter karakterek változatlanok maradnak.       Ez a funkció a kulturális környezet alkalmazásinformáció a karakterlánc kezelésekor, így a nagybetűk módosítások megfelelőek, amelyben az alkalmazás használt területi beállításokat.      > [!IMPORTANT] > Ha az alkalmazás döntéseket biztonsági az összehasonlítás vagy eset-változtatási művelet eredménye alapján, majd a művelet kell használnia a <xref:System.String.Compare%2A?displayProperty=fullName>metódust, és pass <xref:System.StringComparison>vagy <xref:System.StringComparison>a a `comparisonType` argumentum.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> További információkért lásd: [hogyan kulturális befolyásolja karakterláncok a Visual Basic](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example uses the `LCase` function to return a lowercase version of a string.  \n  \n [!code-vb[VbVbalrStrings#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._236_1.vb)]"
  syntax:
    content: public static char LCase (char Value);
    parameters:
    - id: Value
      type: System.Char
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> kifejezés."
    return:
      type: System.Char
      description: "Egy kisbetűssé konvertált karaktert vagy karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.LCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.LCase(System.String)
  id: LCase(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: LCase(String)
  nameWithType: Strings.LCase(String)
  fullName: Microsoft.VisualBasic.Strings.LCase(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy kisbetűssé konvertált karaktert vagy karakterláncot ad vissza."
  remarks: "Csak nagybetűssé alakítja a rendszer kisbetűssé; minden kisbetűket és nonletter karakterek változatlanok maradnak.       Ez a funkció a kulturális környezet alkalmazásinformáció a karakterlánc kezelésekor, így a nagybetűk módosítások megfelelőek, amelyben az alkalmazás használt területi beállításokat.      > [!IMPORTANT] > Ha az alkalmazás döntéseket biztonsági az összehasonlítás vagy eset-változtatási művelet eredménye alapján, majd a művelet kell használnia a <xref:System.String.Compare%2A?displayProperty=fullName>metódust, és pass <xref:System.StringComparison>vagy <xref:System.StringComparison>a a `comparisonType` argumentum.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> További információkért lásd: [hogyan kulturális befolyásolja karakterláncok a Visual Basic](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example uses the `LCase` function to return a lowercase version of a string.  \n  \n [!code-vb[VbVbalrStrings#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._214_1.vb)]"
  syntax:
    content: public static string LCase (string Value);
    parameters:
    - id: Value
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> kifejezés."
    return:
      type: System.String
      description: "Egy kisbetűssé konvertált karaktert vagy karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.LCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)
  id: Left(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Left(String,Int32)
  nameWithType: Strings.Left(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Left(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott számú karaktert egy karakterlánc bal oldalán tartalmazó karakterláncot ad vissza."
  remarks: "A karakterek számát határozza meg a `str`, használja a `Len` függvény. Ha egy Windows Forms-alkalmazást, vagy bármely más osztály, amely rendelkezik egy `Left` tulajdonság, akkor kell teljes minősítéséhez a függvény a `Microsoft.VisualBasic.Left`.      > [!NOTE] > A `LeftB` korábbi verzióiban a Visual Basic függvény által visszaadott karakterlánc karakterek helyett bájt. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LeftB` már nem támogatott."
  example:
  - "This example demonstrates the use of the `Left` function to return a substring of a given `String`. In a class that has a `Left` property, it may be necessary to fully qualify the `Left` function.  \n  \n [!code-vb[VbVbalrStrings#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._139_1.vb)]"
  syntax:
    content: public static string Left (string str, int Length);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés, amelyből a bal oldali karaktereket ad vissza."
    - id: Length
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. Hány visszaadandó karakterek száma is utaló numerikus kifejezés. Ha 0, a nulla hosszúságú karakterlánc (&quot;&quot;) adja vissza. Ha nagyobb vagy egyenlő a karakterek száma `str`, a teljes karakterláncot ad vissza."
    return:
      type: System.String
      description: "A megadott számú karaktert egy karakterlánc bal oldalán tartalmazó karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.Left*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Length</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Boolean)
  id: Len(System.Boolean)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Boolean)
  nameWithType: Strings.Len(Boolean)
  fullName: Microsoft.VisualBasic.Strings.Len(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._155_1.vb)]"
  syntax:
    content: public static int Len (bool Expression);
    parameters:
    - id: Expression
      type: System.Boolean
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Byte)
  id: Len(System.Byte)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Byte)
  nameWithType: Strings.Len(Byte)
  fullName: Microsoft.VisualBasic.Strings.Len(Byte)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._157_1.vb)]"
  syntax:
    content: public static int Len (byte Expression);
    parameters:
    - id: Expression
      type: System.Byte
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Char)
  id: Len(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Char)
  nameWithType: Strings.Len(Char)
  fullName: Microsoft.VisualBasic.Strings.Len(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._159_1.vb)]"
  syntax:
    content: public static int Len (char Expression);
    parameters:
    - id: Expression
      type: System.Char
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.DateTime)
  id: Len(System.DateTime)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(DateTime)
  nameWithType: Strings.Len(DateTime)
  fullName: Microsoft.VisualBasic.Strings.Len(DateTime)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._5_1.vb)]"
  syntax:
    content: public static int Len (DateTime Expression);
    parameters:
    - id: Expression
      type: System.DateTime
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Decimal)
  id: Len(System.Decimal)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Decimal)
  nameWithType: Strings.Len(Decimal)
  fullName: Microsoft.VisualBasic.Strings.Len(Decimal)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._30_1.vb)]"
  syntax:
    content: public static int Len (decimal Expression);
    parameters:
    - id: Expression
      type: System.Decimal
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Double)
  id: Len(System.Double)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Double)
  nameWithType: Strings.Len(Double)
  fullName: Microsoft.VisualBasic.Strings.Len(Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._173_1.vb)]"
  syntax:
    content: public static int Len (double Expression);
    parameters:
    - id: Expression
      type: System.Double
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Int16)
  id: Len(System.Int16)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Int16)
  nameWithType: Strings.Len(Int16)
  fullName: Microsoft.VisualBasic.Strings.Len(Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._198_1.vb)]"
  syntax:
    content: public static int Len (short Expression);
    parameters:
    - id: Expression
      type: System.Int16
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Int32)
  id: Len(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Int32)
  nameWithType: Strings.Len(Int32)
  fullName: Microsoft.VisualBasic.Strings.Len(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._99_1.vb)]"
  syntax:
    content: public static int Len (int Expression);
    parameters:
    - id: Expression
      type: System.Int32
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Int64)
  id: Len(System.Int64)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Int64)
  nameWithType: Strings.Len(Int64)
  fullName: Microsoft.VisualBasic.Strings.Len(Int64)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._162_1.vb)]"
  syntax:
    content: public static int Len (long Expression);
    parameters:
    - id: Expression
      type: System.Int64
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Object)
  id: Len(System.Object)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Object)
  nameWithType: Strings.Len(Object)
  fullName: Microsoft.VisualBasic.Strings.Len(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._193_1.vb)]"
  syntax:
    content: public static int Len (object Expression);
    parameters:
    - id: Expression
      type: System.Object
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.SByte)
  id: Len(System.SByte)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(SByte)
  nameWithType: Strings.Len(SByte)
  fullName: Microsoft.VisualBasic.Strings.Len(SByte)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._171_1.vb)]"
  syntax:
    content: public static int Len (sbyte Expression);
    parameters:
    - id: Expression
      type: System.SByte
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.Single)
  id: Len(System.Single)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(Single)
  nameWithType: Strings.Len(Single)
  fullName: Microsoft.VisualBasic.Strings.Len(Single)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._21_1.vb)]"
  syntax:
    content: public static int Len (float Expression);
    parameters:
    - id: Expression
      type: System.Single
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.String)
  id: Len(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(String)
  nameWithType: Strings.Len(String)
  fullName: Microsoft.VisualBasic.Strings.Len(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._72_1.vb)]"
  syntax:
    content: public static int Len (string Expression);
    parameters:
    - id: Expression
      type: System.String
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt16)
  id: Len(System.UInt16)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(UInt16)
  nameWithType: Strings.Len(UInt16)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._211_1.vb)]"
  syntax:
    content: public static int Len (ushort Expression);
    parameters:
    - id: Expression
      type: System.UInt16
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt32)
  id: Len(System.UInt32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(UInt32)
  nameWithType: Strings.Len(UInt32)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._150_1.vb)]"
  syntax:
    content: public static int Len (uint Expression);
    parameters:
    - id: Expression
      type: System.UInt32
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt64)
  id: Len(System.UInt64)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Len(UInt64)
  nameWithType: Strings.Len(UInt64)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt64)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  remarks: "A felhasználó által definiált típusok és `Object` változók, a `Len` függvény visszaküldi méretét, azt a fájlt fog szerepelni a `FilePut` függvény. Ha egy `Object` tartalmaz egy `String`, akkor a rendszer visszaküldi a karakterlánc hosszát. Ha egy `Object` más típust tartalmaz, az objektum mérete fog szerepelni a fájlt, akkor a `FilePut` függvény.       A `VBFixedString` attribútum írása a karakterlánc (bájt) méretét jelzi objektumok sztringek mezőinek alkalmazható lemezre. A `Len` függvény a `VBFixedString` attribútummal, ha elérhető, a méretének meghatározásakor `Object` változók.      > [!NOTE] > A `Len` függvényt nem lehet meghatározni a tényleges tárolási bájtos változó hosszúságú karakterláncok a felhasználó által definiált adattípusok használata esetén szükséges.      > [!NOTE] > A `LenB` korábbi verzióiban a Visual Basic függvény a bájtok száma karakterek helyett egy karakterláncot. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `LenB` már nem támogatott.      ## Intelligens eszköz megjegyzések fejlesztők számára a `Len` függvény csak fogad el `String` és `Object` változók paraméterekként. Ha egy `Object` tartalmaz egy `String`, ad vissza a hosszát a `String`. Ha a paraméter null értékű `Object` hivatkozás, a függvény nulla. Ha egy `Object` tartalmaz bármilyen más típusú kivételt vált ki."
  example:
  - "This example uses `Len` to return the number of characters in a string.  \n  \n [!code-vb[VbVbalrStrings#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._37_1.vb)]"
  syntax:
    content: public static int Len (ulong Expression);
    parameters:
    - id: Expression
      type: System.UInt64
      description: "Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés vagy változó neve. Ha `Expression` típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_Len&quot; name=&quot;Len&quot; href=&quot;&quot;> </xref> függvény visszaküldi méretét, azt a fájlt fog szerepelni a <xref uid=&quot;langword_csharp_FilePut&quot; name=&quot;FilePut&quot; href=&quot;&quot;> </xref> függvény."
    return:
      type: System.Int32
      description: "Egy karakterlánc karaktereinek számát, vagy egy változó tárolásához szükséges bájtok névleges számát tartalmazó egész számot adja vissza."
  overload: Microsoft.VisualBasic.Strings.Len*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)
  id: LSet(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: LSet(String,Int32)
  nameWithType: Strings.LSet(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.LSet(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott karakterlánc megadott hosszra igazított tartalmazó balra igazított karakterláncot ad vissza."
  remarks: "Ha a megadott karakterlánc hosszabb, mint a megadott időtartam, a visszaadott karakterlánc megadott hosszra van csonkolva. Ha a megadott karakterlánc rövidebb, mint a megadott időtartam, szóközök kerülnek a megfelelő hosszúságú létrehozásához visszaadott karakterlánc jobb szélén."
  example:
  - "This example demonstrates the use of the `LSet` function.  \n  \n [!code-vb[VbVbalrStrings#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._168_1.vb)]"
  syntax:
    content: public static string LSet (string Source, int Length);
    parameters:
    - id: Source
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>kifejezés. Karakterlánc-változó neve."
    - id: Length
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. Visszaadott karakterlánc hossza."
    return:
      type: System.String
      description: "A megadott karakterlánc megadott hosszra igazított tartalmazó balra igazított karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.LSet*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.LTrim(System.String)
  id: LTrim(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: LTrim(String)
  nameWithType: Strings.LTrim(String)
  fullName: Microsoft.VisualBasic.Strings.LTrim(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Kezdő szóközök nélkül a megadott karakterlánc másolatát tartalmazó karakterláncot ad vissza (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), nincs záró szóközök (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), nem kezdő vagy záró szóközök (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  remarks: "A `LTrim`, `RTrim`, és `Trim` funkciók szóközök eltávolítása a karakterlánc végén."
  example:
  - "This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable. It uses the `Trim` function to strip both types of spaces.  \n  \n [!code-vb[VbVbalrStrings#25](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._110_1.vb)]"
  syntax:
    content: public static string LTrim (string str);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
    return:
      type: System.String
      description: "Kezdő szóközök nélkül a megadott karakterlánc másolatát tartalmazó karakterláncot ad vissza (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), nincs záró szóközök (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), nem kezdő vagy záró szóközök (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  overload: Microsoft.VisualBasic.Strings.LTrim*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)
  id: Mid(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Mid(String,Int32)
  nameWithType: Strings.Mid(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Mid(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy karakterláncban. a megadott pozíciónál kezdve minden karaktereket tartalmazó karakterláncot ad vissza."
  remarks: "A karakterek számát határozza meg a `str`, használja a `Len` függvény.       Visual Basic rendelkezik egy `Mid` függvény és egy `Mid` utasítást. Ezek az elemek a megadott számú karaktert egy karakterláncon belül is működik, de a `Mid` függvény a karakterek, miközben a `Mid` utasítás a felváltja a karaktereket. További információkért lásd: [Mid utasítás](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > A `MidB` korábbi verzióiban a Visual Basic függvény által visszaadott karakterlánc karakterek helyett bájt. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Minden Visual Basic értékek a következők: a Unicode használatát, és `MidB` már nem támogatott."
  example:
  - "The last line in this example uses this overload of the `Mid` function to return the fifth and subsequent characters from a string.  \n  \n [!code-vb[VbVbalrStrings#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._67_1.vb)]"
  syntax:
    content: public static string Mid (string str, int Start);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés, amelyből a rendszer visszairányítja a karaktereket."
    - id: Start
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. A visszaadandó karakterek kezdőpozícióját. Ha `Start` nagyobb, mint a karakterek száma `str`, a <xref uid=&quot;langword_csharp_Mid&quot; name=&quot;Mid&quot; href=&quot;&quot;> </xref> nulla hosszúságú karakterláncot ad vissza a függvény (&quot;&quot;). `Start`az&1;-ről."
    return:
      type: System.String
      description: "Egy karakterlánc, amely a karakterláncban megadott pozíciónál kezdve minden karakterből áll."
  overload: Microsoft.VisualBasic.Strings.Mid*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code>&lt;= 0 or <code>Length</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)
  id: Mid(System.String,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Mid(String,Int32,Int32)
  nameWithType: Strings.Mid(String,Int32,Int32)
  fullName: Microsoft.VisualBasic.Strings.Mid(String,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott számú karaktert egy karakterláncon belül egy megadott pozíciónál kezdve tartalmazó karakterláncot ad vissza."
  remarks: "A karakterek számát határozza meg a `str`, használja a `Len` függvény.       Visual Basic rendelkezik egy `Mid` függvény és egy `Mid` utasítást. Ezek az elemek a megadott számú karaktert egy karakterláncon belül is működik, de a `Mid` függvény a karakterek, miközben a `Mid` utasítás a felváltja a karaktereket. További információkért lásd: [Mid utasítás](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > A `MidB` korábbi verzióiban a Visual Basic függvény által visszaadott karakterlánc karakterek helyett bájt. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Minden Visual Basic értékek a következők: a Unicode használatát, és `MidB` már nem támogatott."
  example:
  - "The first two `Mid` functions in this example return the specified number of characters from a string, starting from the given positions. (The last function illustrates the <xref:Microsoft.VisualBasic.Strings.Mid%28System.String%2CSystem.Int32%29> overload and only specifies the starting point for the string extraction.)  \n  \n [!code-vb[VbVbalrStrings#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._33_1.vb)]"
  syntax:
    content: public static string Mid (string str, int Start, int Length);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés, amelyből a rendszer visszairányítja a karaktereket."
    - id: Start
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. A visszaadandó karakterek kezdőpozícióját. Ha `Start` nagyobb, mint a karakterek száma `str`, a <xref uid=&quot;langword_csharp_Mid&quot; name=&quot;Mid&quot; href=&quot;&quot;> </xref> nulla hosszúságú karakterláncot ad vissza a függvény (&quot;&quot;). `Start`egy alapul."
    - id: Length
      type: System.Int32
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. Visszaadandó karakterek száma. Ha nincs megadva, vagy ha kevesebb mint `Length` szöveg karaktereit (többek között a pozíciónál levő karaktert `Start`), a rendszer visszairányítja a kezdő helyzettől összes karakter, a karakterlánc végén."
    return:
      type: System.String
      description: "Egy olyan karakterlánc, amely a megadott számú karaktert a karakterláncban megadott pozíciótól kezdődően áll."
  overload: Microsoft.VisualBasic.Strings.Mid*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code>&lt;= 0 or <code>Length</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)
  id: Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Replace(String,String,String,Int32,Int32,CompareMethod)
  nameWithType: Strings.Replace(String,String,String,Int32,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Replace(String,String,String,Int32,Int32,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy, amelyben egy megadott karakterláncrészlet váltotta fel egy másik karakterláncot ad vissza a megadott számú alkalommal karakterláncrészletre."
  remarks: "A visszatérési értéke a `Replace` függvény által megadott pozíciónál karakterláncot `Start` és végén megjelenik a `Expression` karakterlánc, a helyettesítések által meghatározott a `Find` és `Replace` értékek.       A `Compare` argumentum a következő értékeket veheti fel.      |||   |-|-|   | Állandó |} Leírás |}   | `Binary`| Bináris összehasonlítást végez |}   | `Text`| A szöveges összehasonlítást végez |}"
  example:
  - "This example demonstrates the `Replace` function.  \n  \n```vb#  \nDim TestString As String = \"Shopping List\"  \n' Returns \"Shipping List\".  \nDim aString As String = Replace(TestString, \"o\", \"i\")  \n```"
  syntax:
    content: public static string Replace (string Expression, string Find, string Replacement, int Start = 1, int Count = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Expression
      type: System.String
      description: "Kötelező. Kifejezés lecserélendő karakterláncrészletet tartalmazó karakterláncot."
    - id: Find
      type: System.String
      description: "Kötelező. Keresett karakterláncrészletet."
    - id: Replacement
      type: System.String
      description: "Kötelező. Csere karakterláncrészletet."
    - id: Start
      type: System.Int32
      description: "Nem kötelező. Belül elhelyezése `Expression` helyettesítő használt karakterláncrész kezdetű. A visszatérési értéke <xref uid=&quot;langword_csharp_Replace&quot; name=&quot;Replace&quot; href=&quot;&quot;> </xref> karakterlánc, amely kezdődik, `Start`, a megfelelő helyettesítések szempontjából. Ha nincs megadva, 1 feltételezi."
    - id: Count
      type: System.Int32
      description: "Nem kötelező. Substring helyettesítések végrehajtásához száma. Ha nincs megadva, az alapértelmezett érték –&1;, ami azt jelenti, hogy a &quot;gondoskodjon az összes lehetséges helyettesítések.&quot;"
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Nem kötelező. Milyen típusú összehasonlító karakterláncrészletek kiértékelésekor használandó utaló numerikus érték. Tekintse meg a beállításokat a értékeket."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Replace&quot; name=&quot;Replace&quot; href=&quot;&quot;></xref>a következő értékeket adja vissza.       <table><tbody><tr><td> Ha       </td><td> A név felülírandó adja vissza.       </td></tr><tr><td><code>Find</code>nulla hosszúságú vagy<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td><td> Másolata<code>Expression</code></td></tr><tr><td><code>Replace</code>nulla hosszúságú       </td><td> Másolja a <code> Expression </code> rendelkező, egyszer sem<code>Find</code></td></tr><tr><td><code>Expression</code>nulla hosszúságú vagy <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, vagy <code> Start </code> hossza nagyobb<code>Expression</code></td><td><xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref></td></tr><tr><td><code>Count</code>0       </td><td> Másolata<code>Expression</code></td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Count</code>&lt; -1 or <code>Start</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)
  id: Right(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Right(String,Int32)
  nameWithType: Strings.Right(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Right(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott számú egy karakterlánc jobb oldali karaktereit adja vissza."
  remarks: "A karakterek számát határozza meg a `str`, használja a `Len` függvény. Ha egy Windows formában, vagy bármely más osztály, amely rendelkezik egy `Right` tulajdonság, akkor kell teljes minősítéséhez a függvény a `Microsoft.VisualBasic.Strings.Right`.      > [!NOTE] > A `RightB` korábbi verzióiban a Visual Basic függvény által visszaadott karakterlánc karakterek helyett bájt. Ez elsősorban átalakításához használt kétbájtos beállítása (DBCS) alkalmazások tartalmazó karakterlánc. Az összes jelenlegi Visual Basic értékek a következők: a Unicode használatát, és `RightB` már nem támogatott."
  example:
  - "This example demonstrates the use of the `Right` function to return a substring of a given `String`. In a class that has a `Right` property, it may be necessary to fully qualify the `Right` function.  \n  \n [!code-vb[VbVbalrStrings#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._221_1.vb)]"
  syntax:
    content: public static string Right (string str, int Length);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés, amelyből a jobb oldali karaktereit adja vissza."
    - id: Length
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Hány visszaadandó karakterek száma is utaló numerikus kifejezés. Ha 0, a nulla hosszúságú karakterlánc (&quot;&quot;) adja vissza. Ha nagyobb vagy egyenlő a karakterek száma `str`, a teljes karakterláncot ad vissza."
    return:
      type: System.String
      description: "A megadott számú egy karakterlánc jobb oldali karaktereit adja vissza."
  overload: Microsoft.VisualBasic.Strings.Right*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Length</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)
  id: RSet(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: RSet(String,Int32)
  nameWithType: Strings.RSet(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.RSet(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott karakterlánc megadott hosszra igazított tartalmazó jobbra igazított karakterláncot ad vissza."
  remarks: "Ha `Source` hosszabb, mint `Length`, `RSet` helyeknél csak a bal szélső, a hossza legfeljebb `Source`, a visszaadott karakterlánc. Ha a megadott karakterlánc rövidebb, mint a megadott időtartam, szóközök kerülnek eredményezett a megfelelő hosszúságú karakterlánc bal oldali végén. Ha a megadott karakterlánc hosszabb, mint a megadott időtartam, a megadott hosszúságú csonkolva."
  example:
  - "This example demonstrates the use of the `RSet` function.  \n  \n [!code-vb[VbVbalrStrings#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._218_1.vb)]"
  syntax:
    content: public static string RSet (string Source, int Length);
    parameters:
    - id: Source
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>kifejezés. Karakterlánc-változó neve."
    - id: Length
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. Visszaadott karakterlánc hossza."
    return:
      type: System.String
      description: "A megadott karakterlánc megadott hosszra igazított tartalmazó jobbra igazított karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.RSet*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.RTrim(System.String)
  id: RTrim(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: RTrim(String)
  nameWithType: Strings.RTrim(String)
  fullName: Microsoft.VisualBasic.Strings.RTrim(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Kezdő szóközök nélkül a megadott karakterlánc másolatát tartalmazó karakterláncot ad vissza (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), nincs záró szóközök (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), nem kezdő vagy záró szóközök (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  remarks: "A `LTrim`, `RTrim`, és `Trim` funkciók szóközök eltávolítása a karakterlánc végén."
  example:
  - "This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable. It uses the `Trim` function to strip both types of spaces.  \n  \n [!code-vb[VbVbalrStrings#25](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._143_1.vb)]"
  syntax:
    content: public static string RTrim (string str);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
    return:
      type: System.String
      description: "Kezdő szóközök nélkül a megadott karakterlánc másolatát tartalmazó karakterláncot ad vissza (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), nincs záró szóközök (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), nem kezdő vagy záró szóközök (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  overload: Microsoft.VisualBasic.Strings.RTrim*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Space(System.Int32)
  id: Space(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Space(Int32)
  nameWithType: Strings.Space(Int32)
  fullName: Microsoft.VisualBasic.Strings.Space(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott számú álló karakterláncot ad vissza."
  remarks: "A `Space` hasznos a kimeneti formázás és a rögzített hosszúságú karakterláncok adatok törlését."
  example:
  - "This example uses the `Space` function to return a string consisting of a specified number of spaces.  \n  \n [!code-vb[VbVbalrStrings#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._154_1.vb)]"
  syntax:
    content: public static string Space (int Number);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. A karakterlánc a kívánt szóközök számát."
    return:
      type: System.String
      description: "A megadott számú álló karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.Space*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code> &lt; 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  id: Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Split(String,String,Int32,CompareMethod)
  nameWithType: Strings.Split(String,String,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Split(String,String,Int32,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott számú karakterláncrészletet tartalmazza egy nulla-alapú egydimenziós tömböt ad vissza."
  remarks: "Alapértelmezés szerint, vagy ha `Limit` értéke -1, a `Split` függvény a bemeneti karakterlánc az elválasztó karakterlánc összes előfordulásánál felosztja, és a karakterláncrészletek tömbjét adja vissza. Ha a `Limit` paraméter értéke nagyobb, mint nulla, a `Split` függvény felosztja a karakterlánc az első `Limit`-1 előfordulását az elválasztó és az eredményül kapott karakterláncrészletet tartalmazza a tömböt ad vissza. Például `Split(&quot;a:b:c&quot;, &quot;:&quot;)` a tömböt ad vissza, `{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;}`, amíg a `Split(&quot;a:b:c&quot;, &quot;:&quot;, 2)` a tömböt ad vissza, `{&quot;a&quot;, &quot;b:c&quot;}`.       Ha a `Split` függvény két határolójeleket olyan sorok esetén, vagy elején vagy végén karakterlánc elválasztó észlel, akkor értelmezi őket körülvevő üres karakterlánc (&quot;&quot;). Például `Split(&quot;xx&quot;, &quot;x&quot;)` három üres karakterláncokat tartalmazó tömböt ad vissza: egy munkafüzet elején a karakterlánc és az első, &quot;x&quot;, egy munkafüzet két, &quot;x&quot; karakterláncot, és egy munkafüzet az utolsó &quot;x&quot; és a karakterlánc végén.       Ez a táblázat bemutatja, hogyan az opcionális `Delimiter`, `Limit`, és `Compare` paraméterek módosíthatják a működését a `Split` függvény.      |||   |-|-|   | Ossza fel a hívás |} Visszatérési érték |}   | `Split(&quot;42, 12, 19&quot;)`| {&quot;42,&quot;, &quot;12&quot;, &quot;19&quot;} |}   | `Split(&quot;42, 12, 19&quot;, &quot;, &quot;)`| {&quot;42&quot;, &quot;12&quot;, &quot;19&quot;} |}   | `Split(&quot;42, 12, 19&quot;, &quot;, &quot;, 2)`| {&quot;42&quot;, &quot;12, 19&quot;} |}   | `Split(&quot;192.168.0.1&quot;, &quot;.&quot;)`| {&quot;192&quot;, &quot;168&quot;, &quot;0&quot;, &quot;1&quot;} |}   | `Split(&quot;Alice and Bob&quot;, &quot; AND &quot;)`| {&quot;Alice, Bob&quot;} |}   | `Split(&quot;Alice and Bob&quot;, &quot; AND &quot;, ,CompareMethod.Text)`| {&quot;Alice&quot;, &quot;Belinszky&quot;} |}   | `Split(&quot;someone@example.com&quot;, &quot;@&quot;,1)`| {&quot;someone@example.com&quot;}|   | `Split(&quot;someone@example.com&quot;, &quot;@&quot;,2)`| {&quot;valaki&quot;, &quot;example.com&quot;}|       A `Compare` argumentum a következő értékeket veheti fel.      ||||   |-|-|-|   | Állandó |} Leírás |} Érték |}   | `CompareMethod.Binary`| Bináris összehasonlítást végez |}&0; |}   | `CompareMethod.Text`| A szöveges összehasonlítást végez |}&1; |}"
  example:
  - "The following example demonstrates how to split a string at its spaces.  \n  \n [!code-vb[VbVbalrStrings#13](~/add/codesnippet/visualbasic/6fd442c5-62bb-40f5-92c0-_1.vb)]  \n  \n The following example demonstrates how to split strings with multiple delimiters in a row and filter out the empty strings.  \n  \n [!code-vb[VbVbalrStrings#14](~/add/codesnippet/visualbasic/6fd442c5-62bb-40f5-92c0-_2.vb)]"
  syntax:
    content: public static string[] Split (string Expression, string Delimiter = " ", int Limit = -1, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: Expression
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés tartalmazó karakterláncrészletek és elválasztó karaktert."
    - id: Delimiter
      type: System.String
      description: "Nem kötelező. Egyetlen substring korlátok azonosításához használt karakter. Ha `Delimiter` nincs megadva, a szóköz karakter (&quot;&quot;) feltételezett, hogy az elválasztó karakter lehet."
    - id: Limit
      type: System.Int32
      description: "Nem kötelező. Karakterláncrészletek, amelyben meg kell osztani a bemeneti karakterlánc maximális száma. Az alapértelmezett, –&1;, azt jelzi, hogy a bemeneti karakterlánc összes előfordulásánál lehet megosztani a `Delimiter` karakterlánc."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Nem kötelező. Az összehasonlítás karakterláncrészletek kiértékelésekor használandó utaló numerikus érték. Tekintse meg a &quot;Beállítások&quot; értékek."
    return:
      type: System.String[]
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a tömb. Ha <code> Expression </code> egy nulla hosszúságú karakterlánc (&quot;&quot;), <xref uid=&quot;langword_csharp_Split&quot; name=&quot;Split&quot; href=&quot;&quot;> </xref> egy nulla hosszúságú karakterlánc tartalmazó egyelemű tömböt ad vissza. Ha <code> Delimiter </code> nulla hosszúságú karakterlánc, vagy ha azt nem bárhol megjelenhet <code> Expression </code>, <xref uid=&quot;langword_csharp_Split&quot; name=&quot;Split&quot; href=&quot;&quot;> </xref> adja vissza egy egyelemű tömb, amely a teljes <code> Expression </code> karakterlánc."
  overload: Microsoft.VisualBasic.Strings.Split*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  id: StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrComp(String,String,CompareMethod)
  nameWithType: Strings.StrComp(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.StrComp(String,String,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "-1, 0 vagy 1, karakterláncok összehasonlításának eredményétől függően adja vissza."
  remarks: "A karakterláncok verziótól kezdve az első karakternek alfanumerikus rendezési értékek hasonlítja össze. A bináris módon történő összehasonlítása, a szöveges módon történő összehasonlítása és a rendezési sorrend további információkért lásd: [összehasonlítása utasítást](~/add/includes/ajax-current-ext-md.md).       A `Compare` argumentum értékei: |||   |-|-|   | Állandó |} Leírás |}   | `Binary`| Bináris összehasonlítás, a karakterek belső bináris ábrázolásai származó rendezési sorrend alapján hajtja végre. |}   | `Text`| Szöveg összehasonlítása, a rendszer által meghatározott nem betűérzékeny szöveg rendezési sorrend alapján hajtja végre `LocaleID` érték. |}"
  example:
  - "This example uses the `StrComp` function to return the results of a string comparison.  \n  \n [!code-vb[VbVbalrStrings#22](~/add/codesnippet/visualbasic/40cb6ac0-98a9-4acc-9cbf-_1.vb)]"
  syntax:
    content: public static int StrComp (string String1, string String2, Microsoft.VisualBasic.CompareMethod Compare = Microsoft.VisualBasic.CompareMethod.Binary);
    parameters:
    - id: String1
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
    - id: String2
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
    - id: Compare
      type: Microsoft.VisualBasic.CompareMethod
      description: "Nem kötelező. Meghatározza a karakterláncok összehasonlításának típusát. Ha `Compare` nincs megadva, a <xref uid=&quot;langword_csharp_Option Compare&quot; name=&quot;Option Compare&quot; href=&quot;&quot;> </xref> beállítás összehasonlítás típusa határozza meg."
    return:
      type: System.Int32
      description: "A <xref uid=&quot;langword_csharp_StrComp&quot; name=&quot;StrComp&quot; href=&quot;&quot;> </xref> függvény a következő visszatérési értéke van.       <table><tbody><tr><td> Ha       </td><td> StrComp adja vissza.       </td></tr><tr><td><code>String1</code>rendezi a korábbi<code>String2</code></td><td> -1       </td></tr><tr><td><code>String1</code>egyenlő<code>String2</code></td><td> 0       </td></tr><tr><td><code>String1</code>rendezi a után<code>String2</code></td><td> 1       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Strings.StrComp*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Compare</code>érték érvénytelen."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)
  id: StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrConv(String,VbStrConv,Int32)
  nameWithType: Strings.StrConv(String,VbStrConv,Int32)
  fullName: Microsoft.VisualBasic.Strings.StrConv(String,VbStrConv,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott módon konvertált karakterláncot ad vissza."
  remarks: "A konstans `VbStrConv.Wide`, `VbStrConv.Narrow`, `VbStrConv.SimplifiedChinese`, `VbStrConv.TraditionalChinese`, `VbStrConv.Katakana`, és `VbStrConv.Hiragana` azokon a területeken, ahol nem vonatkoznak, használatakor futásidejű hibát okozhat, de nem mindig: állandók `VbStrConv.Katakana` és `VbStrConv.Hiragana` a japán nyelvi csomag telepítése nem japán rendszereken használható. Emellett használhatja az a állandók `VbStrConv.Wide` és `VbStrConv.Narrow` kelet-ázsiai telepítve a rendszer minden használata támogatott.       Ez a funkció a kulturális környezet alkalmazásinformáció a karakterlánc kezelésekor, így a nagybetűk módosítások megfelelőek, amelyben az alkalmazás használt területi beállításokat.      > [!IMPORTANT] > Ha az alkalmazás döntéseket biztonsági az összehasonlítás vagy eset-változtatási művelet eredménye alapján, majd a művelet kell használnia a <xref:System.String.Compare%2A?displayProperty=fullName>metódust, és pass <xref:System.StringComparison>vagy <xref:System.StringComparison>a a `comparisonType` argumentum.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> További információkért lásd: [hogyan kulturális befolyásolja karakterláncok a Visual Basic](~/add/includes/ajax-current-ext-md.md).       A `Conversion` argumentum értékei: |||   |-|-|   | Enumerálási tag |} Leírás |}   | `VbStrConv.None`| Nincs konverzió |}   | `VbStrConv.LinguisticCasing`| A nyelvi szabályokat használ a kis-és nagybetűk, nem pedig File System (alapértelmezett). Érvényes `VbStrConv.UpperCase` és `VbStrConv.LowerCase` csak. |}   | `VbStrConv.UpperCase`| A karakterlánc nagybetűsre alakítja. |}   | `VbStrConv.LowerCase`| A karakterlánc karakter kisbetűssé alakítja. |}   | `VbStrConv.ProperCase`| A karakterláncban szereplő minden szó első betűjének nagybetűssé alakítja. |}   | `VbStrConv.Wide` <sup>*</sup>| Konvertálja szűkítéséhez (teljes szélességű) karakterek a karakterláncban (teljes szélességű) széles karakter hosszú lehet. |}   | `VbStrConv.Narrow` <sup>*</sup>| Wide (teljes szélességű) karakter szűkítheti (teljes szélességű) karakterek a karakterláncban. |}   | `VbStrConv.Katakana` <sup>**</sup>| Hiragana karakterek a karakterláncban alakít Katakana karakter hosszú lehet. |}   | `VbStrConv.Hiragana` <sup>**</sup>| Alakítja át a Katakana karakterek a karakterláncban Hiragana karakter hosszú lehet. |}   | `VbStrConv.SimplifiedChinese` <sup>*</sup>| Egyszerűsített kínai hagyományos kínai karaktereket alakítja. |}   | `VbStrConv.TraditionalChinese` <sup>*</sup>| Egyszerűsített kínai karaktereket alakítja a hagyományos kínai. |}       <sup> * </sup> Ázsiai területi vonatkozik.       <sup>**</sup>Kizárólag a japán.      > [!NOTE] > Alábbi állandók a .NET-keretrendszer közös nyelvi futtatókörnyezet vannak megadva. Ennek eredményeképpen felhasználásuk bárhol a kódban a tényleges értékek helyett. A legtöbb egyesíthetők (például `UpperCase + Wide`), kivéve ha ezek egymást kölcsönösen kizáró (például `VbStrConv.Wide + VbStrConv.Narrow`).       Az alábbiakban a megfelelő kis-és nagybetűk érvényes word szerepel: Null (`Chr$(0)`), vízszintes lap (`Chr$(9)`), sor (`Chr$(10)`), függőleges lapon (`Chr$(11)`), adatcsatorna alkotnak (`Chr$(12)`), kocsivissza (`Chr$(13)`), terület (egybájtos karakterkészlet) (`Chr$(32)`). Kelet-ázsiai kulturális környezetek az ország vagy régió függ a területet, amely teljes vagy Félszéles, a tényleges érték."
  example:
  - "This example converts text into all lowercase letters.  \n  \n [!code-vb[VbVbalrStrings#6](~/add/codesnippet/visualbasic/834dd6b9-b57e-4455-8085-_1.vb)]"
  syntax:
    content: public static string StrConv (string str, Microsoft.VisualBasic.VbStrConv Conversion, int LocaleID = 0);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>kifejezés kell alakítani."
    - id: Conversion
      type: Microsoft.VisualBasic.VbStrConv
      description: "Kötelező. <xref href=&quot;Microsoft.VisualBasic.VbStrConv&quot;></xref>tag. A számbavételi érték átalakítás végrehajtásához típusának megadásával."
    - id: LocaleID
      type: System.Int32
      description: "Nem kötelező. A <xref uid=&quot;langword_csharp_LocaleID&quot; name=&quot;LocaleID&quot; href=&quot;&quot;> </xref> érték, ha a rendszer eltérő <xref uid=&quot;langword_csharp_LocaleID&quot; name=&quot;LocaleID&quot; href=&quot;&quot;> </xref> érték. (A rendszer <xref uid=&quot;langword_csharp_LocaleID&quot; name=&quot;LocaleID&quot; href=&quot;&quot;> </xref> értéke az alapértelmezett.)"
    return:
      type: System.String
      description: "A megadott módon konvertált karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.StrConv*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem támogatott <code> LocaleID </code>, <code> Conversion </code> &lt; 0 vagy &gt; 2048, vagy nem támogatott konverzió megadott nyelvterületi beállításokat."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)
  id: StrDup(System.Int32,System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrDup(Int32,Char)
  nameWithType: Strings.StrDup(Int32,Char)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Visszaadja egy karakterlánc- vagy objektum, amely a megadott karakter adott számú ismétlődéséből megismétlődik."
  remarks: "Ez a függvény visszaadja egy `String` ismételt karakterből áll. A karakter, amely a karakterlánc első karaktere a `Character` argumentum, és duplikált `Number` alkalommal."
  example:
  - "This example uses the `StrDup` function to return a string of duplicated characters.  \n  \n [!code-vb[VbVbalrStrings#34](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._197_1.vb)]"
  syntax:
    content: public static string StrDup (int Number, char Character);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. A visszaadandó karakterlánc hosszát."
    - id: Character
      type: System.Char
      description: "Kötelező. Any valid <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> expression. A kifejezés csak az első karakter használható. Ha karakter típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, vagy tartalmazhat egy <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> vagy egy <xref uid=&quot;langword_csharp_String &quot; name=&quot;String &quot; href=&quot;&quot;> </xref>érték."
    return:
      type: System.String
      description: "Visszaadja egy karakterlánc- vagy objektum, amely a megadott karakter adott számú ismétlődéséből megismétlődik."
  overload: Microsoft.VisualBasic.Strings.StrDup*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>0-nál kisebb vagy <code>Character</code> típusa érvénytelen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Character</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)
  id: StrDup(System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrDup(Int32,Object)
  nameWithType: Strings.StrDup(Int32,Object)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Visszaadja egy karakterlánc- vagy objektum, amely a megadott karakter adott számú ismétlődéséből megismétlődik."
  remarks: "Ez a függvény visszaadja egy `String` ismételt karakterből áll. A karakter, amely a karakterlánc első karaktere a `Character` argumentum, és duplikált `Number` alkalommal."
  example:
  - "This example uses the `StrDup` function to return a string of duplicated characters.  \n  \n [!code-vb[VbVbalrStrings#34](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._63_1.vb)]"
  syntax:
    content: public static object StrDup (int Number, object Character);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. A visszaadandó karakterlánc hosszát."
    - id: Character
      type: System.Object
      description: "Kötelező. Any valid <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> expression. A kifejezés csak az első karakter használható. Ha karakter típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, vagy tartalmazhat egy <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> vagy egy <xref uid=&quot;langword_csharp_String &quot; name=&quot;String &quot; href=&quot;&quot;> </xref>érték."
    return:
      type: System.Object
      description: "Visszaadja egy karakterlánc- vagy objektum, amely a megadott karakter adott számú ismétlődéséből megismétlődik."
  overload: Microsoft.VisualBasic.Strings.StrDup*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>0-nál kisebb vagy <code>Character</code> típusa érvénytelen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Character</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)
  id: StrDup(System.Int32,System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrDup(Int32,String)
  nameWithType: Strings.StrDup(Int32,String)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Visszaadja egy karakterlánc- vagy objektum, amely a megadott karakter adott számú ismétlődéséből megismétlődik."
  remarks: "Ez a függvény visszaadja egy `String` ismételt karakterből áll. A karakter, amely a karakterlánc első karaktere a `Character` argumentum, és duplikált `Number` alkalommal."
  example:
  - "This example uses the `StrDup` function to return a string of duplicated characters.  \n  \n [!code-vb[VbVbalrStrings#34](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._148_1.vb)]"
  syntax:
    content: public static string StrDup (int Number, string Character);
    parameters:
    - id: Number
      type: System.Int32
      description: "Kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>kifejezés. A visszaadandó karakterlánc hosszát."
    - id: Character
      type: System.String
      description: "Kötelező. Any valid <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> expression. A kifejezés csak az első karakter használható. Ha karakter típusú <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>, vagy tartalmazhat egy <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> vagy egy <xref uid=&quot;langword_csharp_String &quot; name=&quot;String &quot; href=&quot;&quot;> </xref>érték."
    return:
      type: System.String
      description: "Visszaadja egy karakterlánc- vagy objektum, amely a megadott karakter adott számú ismétlődéséből megismétlődik."
  overload: Microsoft.VisualBasic.Strings.StrDup*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>0-nál kisebb vagy <code>Character</code> típusa érvénytelen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Character</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.StrReverse(System.String)
  id: StrReverse(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: StrReverse(String)
  nameWithType: Strings.StrReverse(String)
  fullName: Microsoft.VisualBasic.Strings.StrReverse(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A megadott karakterlánc sorrendben fordított irányú karakterláncot ad vissza."
  remarks: "A `StrReverse` függvény, azonos karaktereket tartalmazó karakterláncot ad vissza `Expression`, de ellentétes sorrendben."
  example:
  - '[!code-vb[VbVbalrStrings#29](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._7_1.vb)]'
  syntax:
    content: public static string StrReverse (string Expression);
    parameters:
    - id: Expression
      type: System.String
      description: "Kötelező. A karakterlánc-kifejezés, amelynek karaktere állítható vissza korábbi állapotba. Ha `Expression` egy nulla hosszúságú karakterlánc (&quot;&quot;), egy nulla hosszúságú karakterláncot ad vissza."
    return:
      type: System.String
      description: "A megadott karakterlánc sorrendben fordított irányú karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.StrReverse*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.Trim(System.String)
  id: Trim(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: Trim(String)
  nameWithType: Strings.Trim(String)
  fullName: Microsoft.VisualBasic.Strings.Trim(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Kezdő szóközök nélkül a megadott karakterlánc másolatát tartalmazó karakterláncot ad vissza (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), nincs záró szóközök (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), nem kezdő vagy záró szóközök (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  remarks: "A `LTrim`, `RTrim`, és `Trim` funkciók szóközök eltávolítása a karakterlánc végén."
  example:
  - "This example uses the `LTrim` function to strip leading spaces and the `RTrim` function to strip trailing spaces from a string variable. It uses the `Trim` function to strip both types of spaces.  \n  \n [!code-vb[VbVbalrStrings#25](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._87_1.vb)]"
  syntax:
    content: public static string Trim (string str);
    parameters:
    - id: str
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés."
    return:
      type: System.String
      description: "Kezdő szóközök nélkül a megadott karakterlánc másolatát tartalmazó karakterláncot ad vissza (<xref uid=&quot;langword_csharp_LTrim&quot; name=&quot;LTrim&quot; href=&quot;&quot;></xref>), nincs záró szóközök (<xref uid=&quot;langword_csharp_RTrim&quot; name=&quot;RTrim&quot; href=&quot;&quot;></xref>), nem kezdő vagy záró szóközök (<xref uid=&quot;langword_csharp_Trim&quot; name=&quot;Trim&quot; href=&quot;&quot;></xref>)."
  overload: Microsoft.VisualBasic.Strings.Trim*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.UCase(System.Char)
  id: UCase(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: UCase(Char)
  nameWithType: Strings.UCase(Char)
  fullName: Microsoft.VisualBasic.Strings.UCase(Char)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Amely a megadott karakterlánc nagybetűssé konvertált karaktert vagy egy karakterláncot ad vissza."
  remarks: "Csak kisbetűk alakítja a rendszer nagybetűsre; nagybetűk használatának és a nonletter karakterek változatlanok maradnak.       Ez a funkció a kulturális környezet alkalmazásinformáció a karakterlánc kezelésekor, így a nagybetűk módosítások megfelelőek, amelyben az alkalmazás használt területi beállításokat.      > [!IMPORTANT] > Ha az alkalmazás döntéseket biztonsági az összehasonlítás vagy eset-változtatási művelet eredménye alapján, majd a művelet kell használnia a <xref:System.String.Compare%2A?displayProperty=fullName>metódust, és pass <xref:System.StringComparison>vagy <xref:System.StringComparison>a a `comparisonType` argumentum.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> További információkért lásd: [hogyan kulturális befolyásolja karakterláncok a Visual Basic](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example uses the `UCase` function to return an uppercase version of a string.  \n  \n [!code-vb[VbVbalrStrings#31](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._201_1.vb)]"
  syntax:
    content: public static char UCase (char Value);
    parameters:
    - id: Value
      type: System.Char
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> kifejezés."
    return:
      type: System.Char
      description: "Amely a megadott karakterlánc nagybetűssé konvertált karaktert vagy egy karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.UCase*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Strings.UCase(System.String)
  id: UCase(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  name: UCase(String)
  nameWithType: Strings.UCase(String)
  fullName: Microsoft.VisualBasic.Strings.UCase(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Amely a megadott karakterlánc nagybetűssé konvertált karaktert vagy egy karakterláncot ad vissza."
  remarks: "Csak kisbetűk alakítja a rendszer nagybetűsre; nagybetűk használatának és a nonletter karakterek változatlanok maradnak.       Ez a funkció a kulturális környezet alkalmazásinformáció a karakterlánc kezelésekor, így a nagybetűk módosítások megfelelőek, amelyben az alkalmazás használt területi beállításokat.      > [!IMPORTANT] > Ha az alkalmazás döntéseket biztonsági az összehasonlítás vagy eset-változtatási művelet eredménye alapján, majd a művelet kell használnia a <xref:System.String.Compare%2A?displayProperty=fullName>metódust, és pass <xref:System.StringComparison>vagy <xref:System.StringComparison>a a `comparisonType` argumentum.</xref:System.StringComparison> </xref:System.StringComparison> </xref:System.String.Compare%2A?displayProperty=fullName> További információkért lásd: [hogyan kulturális befolyásolja karakterláncok a Visual Basic](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example uses the `UCase` function to return an uppercase version of a string.  \n  \n [!code-vb[VbVbalrStrings#31](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._23_1.vb)]"
  syntax:
    content: public static string UCase (string Value);
    parameters:
    - id: Value
      type: System.String
      description: "Kötelező. Bármilyen érvényes <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Char&quot; name=&quot;Char&quot; href=&quot;&quot;> </xref> kifejezés."
    return:
      type: System.String
      description: "Amely a megadott karakterlánc nagybetűssé konvertált karaktert vagy egy karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Strings.UCase*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: Microsoft.VisualBasic.Strings.Asc(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Asc(Char)
  nameWithType: Strings.Asc(Char)
  fullName: Microsoft.VisualBasic.Strings.Asc(Char)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.VisualBasic.Strings.Asc(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Asc(String)
  nameWithType: Strings.Asc(String)
  fullName: Microsoft.VisualBasic.Strings.Asc(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Strings.AscW(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: AscW(Char)
  nameWithType: Strings.AscW(Char)
  fullName: Microsoft.VisualBasic.Strings.AscW(Char)
- uid: Microsoft.VisualBasic.Strings.AscW(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: AscW(String)
  nameWithType: Strings.AscW(String)
  fullName: Microsoft.VisualBasic.Strings.AscW(String)
- uid: Microsoft.VisualBasic.Strings.Chr(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Chr(Int32)
  nameWithType: Strings.Chr(Int32)
  fullName: Microsoft.VisualBasic.Strings.Chr(Int32)
- uid: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: ChrW(Int32)
  nameWithType: Strings.ChrW(Int32)
  fullName: Microsoft.VisualBasic.Strings.ChrW(Int32)
- uid: Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Filter(Object[],String,Boolean,CompareMethod)
  nameWithType: Strings.Filter(Object[],String,Boolean,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Filter(Object[],String,Boolean,CompareMethod)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.CompareMethod
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CompareMethod
  nameWithType: CompareMethod
  fullName: Microsoft.VisualBasic.CompareMethod
- uid: Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Filter(String[],String,Boolean,CompareMethod)
  nameWithType: Strings.Filter(String[],String,Boolean,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Filter(String[],String,Boolean,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.Format(System.Object,System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Format(Object,String)
  nameWithType: Strings.Format(Object,String)
  fullName: Microsoft.VisualBasic.Strings.Format(Object,String)
- uid: Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatCurrency(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatCurrency(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatCurrency(Object,Int32,TriState,TriState,TriState)
- uid: Microsoft.VisualBasic.TriState
  parent: Microsoft.VisualBasic
  isExternal: false
  name: TriState
  nameWithType: TriState
  fullName: Microsoft.VisualBasic.TriState
- uid: Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatDateTime(DateTime,DateFormat)
  nameWithType: Strings.FormatDateTime(DateTime,DateFormat)
  fullName: Microsoft.VisualBasic.Strings.FormatDateTime(DateTime,DateFormat)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.VisualBasic.DateFormat
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DateFormat
  nameWithType: DateFormat
  fullName: Microsoft.VisualBasic.DateFormat
- uid: Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatNumber(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatNumber(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatNumber(Object,Int32,TriState,TriState,TriState)
- uid: Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatPercent(Object,Int32,TriState,TriState,TriState)
  nameWithType: Strings.FormatPercent(Object,Int32,TriState,TriState,TriState)
  fullName: Microsoft.VisualBasic.Strings.FormatPercent(Object,Int32,TriState,TriState,TriState)
- uid: Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: GetChar(String,Int32)
  nameWithType: Strings.GetChar(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.GetChar(String,Int32)
- uid: Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStr(String,String,CompareMethod)
  nameWithType: Strings.InStr(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStr(String,String,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStr(Int32,String,String,CompareMethod)
  nameWithType: Strings.InStr(Int32,String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStr(Int32,String,String,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStrRev(String,String,Int32,CompareMethod)
  nameWithType: Strings.InStrRev(String,String,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.InStrRev(String,String,Int32,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Join(Object[],String)
  nameWithType: Strings.Join(Object[],String)
  fullName: Microsoft.VisualBasic.Strings.Join(Object[],String)
- uid: Microsoft.VisualBasic.Strings.Join(System.String[],System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Join(String[],String)
  nameWithType: Strings.Join(String[],String)
  fullName: Microsoft.VisualBasic.Strings.Join(String[],String)
- uid: Microsoft.VisualBasic.Strings.LCase(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LCase(Char)
  nameWithType: Strings.LCase(Char)
  fullName: Microsoft.VisualBasic.Strings.LCase(Char)
- uid: Microsoft.VisualBasic.Strings.LCase(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LCase(String)
  nameWithType: Strings.LCase(String)
  fullName: Microsoft.VisualBasic.Strings.LCase(String)
- uid: Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Left(String,Int32)
  nameWithType: Strings.Left(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Left(String,Int32)
- uid: Microsoft.VisualBasic.Strings.Len(System.Boolean)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Boolean)
  nameWithType: Strings.Len(Boolean)
  fullName: Microsoft.VisualBasic.Strings.Len(Boolean)
- uid: Microsoft.VisualBasic.Strings.Len(System.Byte)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Byte)
  nameWithType: Strings.Len(Byte)
  fullName: Microsoft.VisualBasic.Strings.Len(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Microsoft.VisualBasic.Strings.Len(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Char)
  nameWithType: Strings.Len(Char)
  fullName: Microsoft.VisualBasic.Strings.Len(Char)
- uid: Microsoft.VisualBasic.Strings.Len(System.DateTime)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(DateTime)
  nameWithType: Strings.Len(DateTime)
  fullName: Microsoft.VisualBasic.Strings.Len(DateTime)
- uid: Microsoft.VisualBasic.Strings.Len(System.Decimal)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Decimal)
  nameWithType: Strings.Len(Decimal)
  fullName: Microsoft.VisualBasic.Strings.Len(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Microsoft.VisualBasic.Strings.Len(System.Double)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Double)
  nameWithType: Strings.Len(Double)
  fullName: Microsoft.VisualBasic.Strings.Len(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Strings.Len(System.Int16)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Int16)
  nameWithType: Strings.Len(Int16)
  fullName: Microsoft.VisualBasic.Strings.Len(Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.VisualBasic.Strings.Len(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Int32)
  nameWithType: Strings.Len(Int32)
  fullName: Microsoft.VisualBasic.Strings.Len(Int32)
- uid: Microsoft.VisualBasic.Strings.Len(System.Int64)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Int64)
  nameWithType: Strings.Len(Int64)
  fullName: Microsoft.VisualBasic.Strings.Len(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Strings.Len(System.Object)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Object)
  nameWithType: Strings.Len(Object)
  fullName: Microsoft.VisualBasic.Strings.Len(Object)
- uid: Microsoft.VisualBasic.Strings.Len(System.SByte)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(SByte)
  nameWithType: Strings.Len(SByte)
  fullName: Microsoft.VisualBasic.Strings.Len(SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: Microsoft.VisualBasic.Strings.Len(System.Single)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(Single)
  nameWithType: Strings.Len(Single)
  fullName: Microsoft.VisualBasic.Strings.Len(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.VisualBasic.Strings.Len(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(String)
  nameWithType: Strings.Len(String)
  fullName: Microsoft.VisualBasic.Strings.Len(String)
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt16)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(UInt16)
  nameWithType: Strings.Len(UInt16)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(UInt32)
  nameWithType: Strings.Len(UInt32)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.VisualBasic.Strings.Len(System.UInt64)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len(UInt64)
  nameWithType: Strings.Len(UInt64)
  fullName: Microsoft.VisualBasic.Strings.Len(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LSet(String,Int32)
  nameWithType: Strings.LSet(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.LSet(String,Int32)
- uid: Microsoft.VisualBasic.Strings.LTrim(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LTrim(String)
  nameWithType: Strings.LTrim(String)
  fullName: Microsoft.VisualBasic.Strings.LTrim(String)
- uid: Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Mid(String,Int32)
  nameWithType: Strings.Mid(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Mid(String,Int32)
- uid: Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Mid(String,Int32,Int32)
  nameWithType: Strings.Mid(String,Int32,Int32)
  fullName: Microsoft.VisualBasic.Strings.Mid(String,Int32,Int32)
- uid: Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Replace(String,String,String,Int32,Int32,CompareMethod)
  nameWithType: Strings.Replace(String,String,String,Int32,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Replace(String,String,String,Int32,Int32,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Right(String,Int32)
  nameWithType: Strings.Right(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.Right(String,Int32)
- uid: Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: RSet(String,Int32)
  nameWithType: Strings.RSet(String,Int32)
  fullName: Microsoft.VisualBasic.Strings.RSet(String,Int32)
- uid: Microsoft.VisualBasic.Strings.RTrim(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: RTrim(String)
  nameWithType: Strings.RTrim(String)
  fullName: Microsoft.VisualBasic.Strings.RTrim(String)
- uid: Microsoft.VisualBasic.Strings.Space(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Space(Int32)
  nameWithType: Strings.Space(Int32)
  fullName: Microsoft.VisualBasic.Strings.Space(Int32)
- uid: Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Split(String,String,Int32,CompareMethod)
  nameWithType: Strings.Split(String,String,Int32,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.Split(String,String,Int32,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrComp(String,String,CompareMethod)
  nameWithType: Strings.StrComp(String,String,CompareMethod)
  fullName: Microsoft.VisualBasic.Strings.StrComp(String,String,CompareMethod)
- uid: Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrConv(String,VbStrConv,Int32)
  nameWithType: Strings.StrConv(String,VbStrConv,Int32)
  fullName: Microsoft.VisualBasic.Strings.StrConv(String,VbStrConv,Int32)
- uid: Microsoft.VisualBasic.VbStrConv
  parent: Microsoft.VisualBasic
  isExternal: false
  name: VbStrConv
  nameWithType: VbStrConv
  fullName: Microsoft.VisualBasic.VbStrConv
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrDup(Int32,Char)
  nameWithType: Strings.StrDup(Int32,Char)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,Char)
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrDup(Int32,Object)
  nameWithType: Strings.StrDup(Int32,Object)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,Object)
- uid: Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrDup(Int32,String)
  nameWithType: Strings.StrDup(Int32,String)
  fullName: Microsoft.VisualBasic.Strings.StrDup(Int32,String)
- uid: Microsoft.VisualBasic.Strings.StrReverse(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrReverse(String)
  nameWithType: Strings.StrReverse(String)
  fullName: Microsoft.VisualBasic.Strings.StrReverse(String)
- uid: Microsoft.VisualBasic.Strings.Trim(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Trim(String)
  nameWithType: Strings.Trim(String)
  fullName: Microsoft.VisualBasic.Strings.Trim(String)
- uid: Microsoft.VisualBasic.Strings.UCase(System.Char)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: UCase(Char)
  nameWithType: Strings.UCase(Char)
  fullName: Microsoft.VisualBasic.Strings.UCase(Char)
- uid: Microsoft.VisualBasic.Strings.UCase(System.String)
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: UCase(String)
  nameWithType: Strings.UCase(String)
  fullName: Microsoft.VisualBasic.Strings.UCase(String)
- uid: Microsoft.VisualBasic.Strings.Asc*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Asc
  nameWithType: Strings.Asc
- uid: Microsoft.VisualBasic.Strings.AscW*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: AscW
  nameWithType: Strings.AscW
- uid: Microsoft.VisualBasic.Strings.Chr*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Chr
  nameWithType: Strings.Chr
- uid: Microsoft.VisualBasic.Strings.ChrW*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: ChrW
  nameWithType: Strings.ChrW
- uid: Microsoft.VisualBasic.Strings.Filter*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Filter
  nameWithType: Strings.Filter
- uid: Microsoft.VisualBasic.Strings.Format*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Format
  nameWithType: Strings.Format
- uid: Microsoft.VisualBasic.Strings.FormatCurrency*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatCurrency
  nameWithType: Strings.FormatCurrency
- uid: Microsoft.VisualBasic.Strings.FormatDateTime*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatDateTime
  nameWithType: Strings.FormatDateTime
- uid: Microsoft.VisualBasic.Strings.FormatNumber*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatNumber
  nameWithType: Strings.FormatNumber
- uid: Microsoft.VisualBasic.Strings.FormatPercent*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: FormatPercent
  nameWithType: Strings.FormatPercent
- uid: Microsoft.VisualBasic.Strings.GetChar*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: GetChar
  nameWithType: Strings.GetChar
- uid: Microsoft.VisualBasic.Strings.InStr*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStr
  nameWithType: Strings.InStr
- uid: Microsoft.VisualBasic.Strings.InStrRev*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: InStrRev
  nameWithType: Strings.InStrRev
- uid: Microsoft.VisualBasic.Strings.Join*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Join
  nameWithType: Strings.Join
- uid: Microsoft.VisualBasic.Strings.LCase*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LCase
  nameWithType: Strings.LCase
- uid: Microsoft.VisualBasic.Strings.Left*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Left
  nameWithType: Strings.Left
- uid: Microsoft.VisualBasic.Strings.Len*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Len
  nameWithType: Strings.Len
- uid: Microsoft.VisualBasic.Strings.LSet*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LSet
  nameWithType: Strings.LSet
- uid: Microsoft.VisualBasic.Strings.LTrim*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: LTrim
  nameWithType: Strings.LTrim
- uid: Microsoft.VisualBasic.Strings.Mid*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Mid
  nameWithType: Strings.Mid
- uid: Microsoft.VisualBasic.Strings.Replace*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Replace
  nameWithType: Strings.Replace
- uid: Microsoft.VisualBasic.Strings.Right*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Right
  nameWithType: Strings.Right
- uid: Microsoft.VisualBasic.Strings.RSet*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: RSet
  nameWithType: Strings.RSet
- uid: Microsoft.VisualBasic.Strings.RTrim*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: RTrim
  nameWithType: Strings.RTrim
- uid: Microsoft.VisualBasic.Strings.Space*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Space
  nameWithType: Strings.Space
- uid: Microsoft.VisualBasic.Strings.Split*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Split
  nameWithType: Strings.Split
- uid: Microsoft.VisualBasic.Strings.StrComp*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrComp
  nameWithType: Strings.StrComp
- uid: Microsoft.VisualBasic.Strings.StrConv*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrConv
  nameWithType: Strings.StrConv
- uid: Microsoft.VisualBasic.Strings.StrDup*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrDup
  nameWithType: Strings.StrDup
- uid: Microsoft.VisualBasic.Strings.StrReverse*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: StrReverse
  nameWithType: Strings.StrReverse
- uid: Microsoft.VisualBasic.Strings.Trim*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: Trim
  nameWithType: Strings.Trim
- uid: Microsoft.VisualBasic.Strings.UCase*
  parent: Microsoft.VisualBasic.Strings
  isExternal: false
  name: UCase
  nameWithType: Strings.UCase
