### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeStream
  id: PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  summary: "Elérhetővé teszi a <xref:System.IO.Stream>objektum körüli függőleges, amely támogatja a névtelen és a named pipes.</xref:System.IO.Stream>"
  remarks: "A PipeStream osztály az alaposztály biztosít a .NET-keretrendszer elnevezett és a névtelen adatcsatornák műveletekhez. Használja a <xref:System.IO.Pipes.NamedPipeServerStream>és <xref:System.IO.Pipes.NamedPipeClientStream>osztályok nevesített cső műveletekhez.</xref:System.IO.Pipes.NamedPipeClientStream> </xref:System.IO.Pipes.NamedPipeServerStream> Használja a <xref:System.IO.Pipes.AnonymousPipeServerStream>és <xref:System.IO.Pipes.AnonymousPipeClientStream>osztályok névtelen pipe-műveletekhez.</xref:System.IO.Pipes.AnonymousPipeClientStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>       Adatcsatornák kapcsolatos további információkért lásd: [csövek](~/add/includes/ajax-current-ext-md.md). A névtelen adatcsatornák például [hogyan: használja a névtelen adatcsatornák helyi folyamatközi kommunikáció](~/add/includes/ajax-current-ext-md.md). A nevesített csöveket példáért lásd: [hogyan: használata Named Pipes hálózati folyamatközi kommunikáció](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public abstract class PipeStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> használata a megadott osztály <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> érték és a puffer mérete."
  remarks: "Ez a konstruktor <xref:System.IO.Pipes.PipeTransmissionMode>.</xref:System.IO.Pipes.PipeTransmissionMode> cső átviteli módot használ."
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Egy a <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> értékeket, amelyeket a cső objektum irányát."
    - id: bufferSize
      type: System.Int32
      description: "Egy pozitív <xref:System.Int32>érték nagyobb vagy egyenlő, amely jelzi a puffer mérete 0.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>Érvénytelen <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> érték.       – vagy – <code>bufferSize</code> 0-nál kisebb."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> használata a megadott osztály <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>, <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>, és a puffer mérete."
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Egy a <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> értékeket, amelyeket a cső objektum irányát."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Egy a <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> érték, amely jelzi, az átviteli mód a cső objektum."
    - id: outBufferSize
      type: System.Int32
      description: "Egy pozitív <xref:System.Int32>érték nagyobb vagy egyenlő, amely jelzi a puffer mérete 0.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>Érvénytelen <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> érték.       – vagy – <code>transmissionMode</code> érvénytelen <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> érték.       – vagy – <code>bufferSize</code> 0-nál kisebb."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Egy aszinkron olvasási művelet kezdődik."
  remarks: "Továbbítsa a visszaadott <xref:System.IAsyncResult>az objektum a <xref:System.IO.Pipes.PipeStream.EndRead%2A>módszer annak meghatározásához, hány bájt beolvasva és olvasásra használt operációs rendszer-erőforrások kijelölése.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IAsyncResult> <xref:System.IO.Pipes.PipeStream.EndRead%2A>egyszer meg kell hívni a BeginRead minden meghívásához.</xref:System.IO.Pipes.PipeStream.EndRead%2A> Ezt megteheti, ugyanazt a kódot, amelyeket a BeginRead vagy BeginRead átadott visszahívás.       Használja a <xref:System.IO.Pipes.PipeStream.CanRead%2A>tulajdonság határozza meg hogy az aktuális <xref:System.IO.Pipes.PipeStream>objektum támogatja az olvasási műveletek.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Ha a cső le van zárva, vagy érvénytelen argumentumot BeginRead objektumnak átadott, a megfelelő kivételeket azonnal aktiválódnak. Egy aszinkron olvasási kérelem során előforduló hibákról hajt végre a kérelem szál készlet szálon. A kivételek vannak következik be, amikor a kód a <xref:System.IO.Pipes.PipeStream.EndRead%2A>metódus.</xref:System.IO.Pipes.PipeStream.EndRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A puffer adatokat olvasni."
    - id: offset
      type: System.Int32
      description: "Az eltolás bájtban `buffer` kezdőpontját olvasásakor."
    - id: count
      type: System.Int32
      description: "Olvassa el a bájtok maximális száma."
    - id: callback
      type: System.AsyncCallback
      description: "A metódus hívására az aszinkron olvasási művelete befejeződött."
    - id: state
      type: System.Object
      description: "A felhasználó által megadott objektum, amely az adott aszinkron olvasási kérelem megkülönbözteti küldött egyéb kérések."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>objektum által hivatkozott az aszinkron olvasási.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>értéke 0-nál kisebb.       – vagy – <code>count</code> 0-nál kisebb."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>az elérhető bájtok száma nagyobb <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cső nem támogatja az olvasási műveletek."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cső le van választva, csatlakozás várakozik, vagy a leíró nem lett beállítva."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Egy aszinkron írási művelet kezdődik."
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A>egyszer meg kell hívni a BeginWrite minden meghívásához.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> Ezt megteheti, ugyanazt a kódot, amelyeket a BeginWrite vagy BeginWrite átadott visszahívás.       Használja a <xref:System.IO.Pipes.PipeStream.CanWrite%2A>tulajdonság határozza meg hogy az aktuális <xref:System.IO.Pipes.PipeStream>objektum által támogatott írási műveleteket.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Ha a cső le van zárva, vagy érvénytelen argumentumot BeginWrite objektumnak átadott, a megfelelő kivételeket azonnal aktiválódnak. Egy aszinkron írási kérelem során előforduló hibákról szálon a szál készlet, amely a kérelem végrehajtása van. A kivételek vannak következik be, amikor a kód a <xref:System.IO.Pipes.PipeStream.EndWrite%2A>metódus.</xref:System.IO.Pipes.PipeStream.EndWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A puffer, amely tartalmazza az adatokat írni a jelenlegi adatfolyam."
    - id: offset
      type: System.Int32
      description: "A nulla alapú bájteltolás a `buffer` kezdőpontját bájt másolása a jelenlegi adatfolyam."
    - id: count
      type: System.Int32
      description: "Az írandó bájtok maximális száma."
    - id: callback
      type: System.AsyncCallback
      description: "A metódus hívására az aszinkron írási művelet befejezése."
    - id: state
      type: System.Object
      description: "A felhasználó által megadott objektum, amely az adott aszinkron írási kérelem megkülönbözteti küldött egyéb kérések."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>objektum, amely az aszinkron írási művelet hivatkozik.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>értéke 0-nál kisebb.       – vagy – <code>count</code> 0-nál kisebb."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>az elérhető bájtok száma nagyobb <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cső nem támogatja az írási műveletek."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cső le van választva, csatlakozás várakozik, vagy a leíró nem lett beállítva."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Egy érték, amely jelzi, hogy a jelenlegi adatfolyam támogatja az olvasási műveletek beolvasása."
  remarks: "Ha a <xref:System.IO.Pipes.PipeStream>objektum be van zárva, ez a tulajdonság adja vissza `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatfolyam támogatja az olvasási műveletek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi egy érték, amely jelzi, hogy a jelenlegi adatfolyam támogatja a pozicionálási műveleteket."
  remarks: "Ha a <xref:System.IO.Pipes.PipeStream>objektum be van zárva, ez a tulajdonság adja vissza `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>minden esetben."
  overload: System.IO.Pipes.PipeStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Egy érték, amely jelzi, hogy a jelenlegi adatfolyam támogatja-e írási műveletek beolvasása."
  remarks: "Ha a <xref:System.IO.Pipes.PipeStream>objektum be van zárva, ez a tulajdonság adja vissza `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatfolyam támogatja az írási műveletek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ellenőrzi, hogy a cső megfelelő állapotban a kezdeti vagy tulajdonságok beállítása."
  syntax:
    content: protected virtual void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  id: CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ellenőrzi, hogy a cső az olvasási műveletek csatlakoztatott állapotban."
  syntax:
    content: protected void CheckReadOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckReadOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  id: CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ellenőrzi, hogy a cső az írási műveletek csatlakoztatott állapotban."
  syntax:
    content: protected void CheckWriteOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> osztályhoz, és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános <xref:System.ComponentModel.Component.Dispose%2A>metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>a védett Dispose metódus meghívja a `disposing` paraméter `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>meghívja a Dispose `disposing` beállítása `false`.</xref:System.Object.Finalize%2A> Ha a disposing paraméter van `true`, ez a módszer feloldja a felügyelt objektumok által tárolt összes erőforrás, amelyhez a <xref:System.IO.Pipes.PipeStream>objektum hivatkozik.</xref:System.IO.Pipes.PipeStream> Ez a metódus meghívja a Dispose metódus minden hivatkozott objektum."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.IO.Pipes.PipeStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A függőben lévő aszinkron olvasási kérelem ér véget."
  remarks: "Ez a módszer a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> korábbi hívás által megadott bájttömb az olvasott bájtok számát adja vissza.       A visszaadott átadni <xref:System.IAsyncResult>objektum az az EndRead metódus annak meghatározásához, hány bájt beolvasva és olvasásra használt operációs rendszer-erőforrások kijelölése.</xref:System.IAsyncResult> Az EndRead egyszer meg kell hívni minden hívás <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Ezt megteheti az ugyanazt a kódot, amely <xref:System.IO.Pipes.PipeStream.BeginRead%2A>vagy <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> átadott visszahívás</xref:System.IO.Pipes.PipeStream.BeginRead%2A> hívása       Használja a <xref:System.IO.Pipes.PipeStream.CanRead%2A>tulajdonság határozza meg hogy az aktuális <xref:System.IO.Pipes.PipeStream>objektum támogatja az olvasási műveletek.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Ha a cső le van zárva, vagy érvénytelen argumentumot átadott <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, a megfelelő kivételeket azonnal aktiválódnak.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Egy aszinkron olvasási kérelem során előforduló hibákról hajt végre a kérelem szál készlet szálon. A kivételek vannak következik be, amikor a kódja meghívja az EndRead metódus."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A függőben lévő aszinkron kérelem mutató hivatkozást."
    return:
      type: System.Int32
      description: "A kiolvasott bájtok száma. A visszatérési érték a 0 azt jelzi, hogy (a cső lezárása) az adatfolyam végét."
  overload: System.IO.Pipes.PipeStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nem származik a egy <xref:System.IO.Pipes.PipeStream.BeginRead*> a jelenlegi adatfolyam metódust."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az adatfolyam le van zárva, vagy egy belső hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Függőben lévő aszinkron írási kérelem ér véget."
  remarks: "Az EndWrite egyszer meg kell hívni minden hívás <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Ezt megteheti az ugyanazt a kódot, amely <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>vagy <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> átadott visszahívás</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> hívása       Használja a <xref:System.IO.Pipes.PipeStream.CanWrite%2A>tulajdonság határozza meg hogy az aktuális <xref:System.IO.Pipes.PipeStream>objektum által támogatott írási műveleteket.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Ha a cső le van zárva, vagy érvénytelen argumentumot átadott <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, a megfelelő kivételeket azonnal aktiválódnak.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Egy aszinkron írási kérelem során előforduló hibákról szálon a szál készlet, amely a kérelem végrehajtása van. A kivételek értesítő amikor a kód a hívások EndWrite metódust."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A függőben lévő aszinkron kérelem mutató hivatkozást."
  overload: System.IO.Pipes.PipeStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nem származik a egy <xref:System.IO.Pipes.PipeStream.BeginWrite*> a jelenlegi adatfolyam metódust."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az adatfolyam le van zárva, vagy egy belső hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Törli a jelenlegi adatfolyam megadott puffer, és leállítja a pufferelt adatokat írni az alapul szolgáló eszközt."
  remarks: "A kiürítési metódus nem támogatott a <xref:System.IO.Pipes.PipeStream>osztály és nothing, amikor a hívott biztosítja.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cső nem támogatja az írási műveletek."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  id: GetAccessControl
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi a <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> objektum, amely magában foglalja a hozzáférés-vezérlési lista (ACL) a szerint az aktuális pipe bejegyzésekkel <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum."
  remarks: 'Hozzáférés-vezérlési listaként (ACL) egyéni felhasználók számára és/vagy csoportok, vagy nem jogosult, egy adott fájl a megadott műveleteket ismerteti. További információkért lásd: [hogyan: hozzáadása vagy eltávolítása a hozzáférés-vezérlési lista bejegyzések](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.Pipes.PipeSecurity
      description: "A <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> objektum, amely magában foglalja a hozzáférés-vezérlési lista (ACL) a szerint az aktuális pipe bejegyzésekkel <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum."
  overload: System.IO.Pipes.PipeStream.GetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Biztonsági adatainak beállításához a mögöttes hívás sikertelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Biztonsági adatainak beállításához a mögöttes hívás sikertelen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Biztonsági adatainak beállításához a mögöttes hívás sikertelen."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi a méretet, a bejövő a cső puffer bájtban."
  remarks: "Ha a InBufferSize értéke 0, a puffer mérete fel igény szerint."
  syntax:
    content: public virtual int InBufferSize { get; }
    return:
      type: System.Int32
      description: "A bemeneti puffer mérete bájtban jelölő egész szám."
  overload: System.IO.Pipes.PipeStream.InBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az adatfolyam nem olvasható."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Csatlakozás a cső vár."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializál egy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> a megadott objektum <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> objektum."
  remarks: "Ha a cső csatlakoztatott állapotban van, ezt a módszert is meghatározza a <xref:System.IO.Pipes.PipeStream.IsConnected%2A>tulajdonságot `true`.</xref:System.IO.Pipes.PipeStream.IsConnected%2A>"
  syntax:
    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "A <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> objektum inicializálása a cső."
    - id: isExposed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>teszi közzé a leíró; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>jelzi, hogy a leíró aszinkron; jött létre Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.InitializeHandle*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső egy leírója nem köthető."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy egy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum nyitották meg aszinkron vagy szinkron módon."
  remarks: "Ez a tulajdonság lehetővé teszi, hogy a kód használatához a <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>tulajdonság helyesen.</xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum nyitották meg aszinkron módon történik; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi vagy beállítja, hogy egy érték, amely jelzi, hogy egy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum van csatlakoztatva."
  remarks: "A IsConnected tulajdonság beolvasása `true` csak akkor, ha a <xref:System.IO.Pipes.PipeStream>objektum van csatlakoztatva.</xref:System.IO.Pipes.PipeStream> Ez a tulajdonság-visszatérési értéke `false`, a cső várni szeretne csatlakozni, vagy előfordulhat, hogy lekapcsolt, zárva, vagy megszakadt."
  syntax:
    content: public bool IsConnected { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> célja a csatlakoztatott; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  id: IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a leírót egy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum ki van téve."
  remarks: "Ez a tulajdonság értékének van beállítva, amikor az beszerzése a cső leírót, amelyek be vannak ágyazva a jelenlegi <xref:System.IO.Pipes.PipeStream>objektum.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: protected bool IsHandleExposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a leírót a <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum elérhető; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsHandleExposed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A legutóbbi olvasási művelet által visszaadott üzenetben további adatok jelző érték beolvasása."
  remarks: "Ez a tulajdonság fontos Ha a cső <xref:System.IO.Pipes.PipeStream.ReadMode%2A>tulajdonságának beállítása <xref:System.IO.Pipes.PipeTransmissionMode>a legutóbbi hívás vagy <xref:System.IO.Pipes.PipeStream.Read%2A> <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.Read%2A> által</xref:System.IO.Pipes.PipeTransmissionMode> </xref:System.IO.Pipes.PipeStream.ReadMode%2A>"
  syntax:
    content: public bool IsMessageComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha nincsenek további karakterek olvassa el az üzenetet; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsMessageComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cső nem csatlakozik.       – vagy – a cső leírója nem lett beállítva.       – vagy – a cső <xref:System.IO.Pipes.PipeStream.ReadMode*>tulajdonság értéke nem <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>.</xref:System.IO.Pipes.PipeStream.ReadMode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi a hossza az adatfolyam, bájtban."
  remarks: "A <xref:System.IO.Pipes.PipeStream>osztály nem támogatja a Length tulajdonságot.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "minden esetben&0;."
  overload: System.IO.Pipes.PipeStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Mindig váltott ki."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi a méretet, a cső a kimenő puffer bájtban."
  remarks: "Ha a OutBufferSize értéke 0, a puffer mérete fel igény szerint."
  syntax:
    content: public virtual int OutBufferSize { get; }
    return:
      type: System.Int32
      description: "A kimeneti puffer mérete bájtban."
  overload: System.IO.Pipes.PipeStream.OutBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az adatfolyam nem lehet írni."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Csatlakozás a cső vár."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi vagy beállítja a jelenlegi adatfolyam aktuális pozíciója."
  remarks: "A <xref:System.IO.Pipes.PipeStream>osztály nem támogatja a Position tulajdonságot.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "minden esetben&0;."
  overload: System.IO.Pipes.PipeStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Mindig váltott ki."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Olvassa be a folyam bájt, és írja az adatokat a megadott puffer."
  remarks: "Használja a <xref:System.IO.Pipes.PipeStream.CanRead%2A>tulajdonság határozza meg hogy az aktuális <xref:System.IO.Pipes.PipeStream>objektum támogatja az olvasási műveletek.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Az olvasási metódus hívása blokkol, amíg `count` bájt olvassa el, vagy az adatfolyam végének elérésekor. Az aszinkron olvasási műveleteknél tekintse meg <xref:System.IO.Pipes.PipeStream.BeginRead%2A>és <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>"
  example:
  - "The following example creates an anonymous pipe client and pipe server. The pipe server uses the Read method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \n  \n [!code-cs[System.IO.Pipes.PipeStream#1](~/add/codesnippet/csharp/m-system.io.pipes.pipest_1.cs)]\n [!code-vb[System.IO.Pipes.PipeStream#1](~/add/codesnippet/visualbasic/m-system.io.pipes.pipest_1.vb)]\n [!code-cpp[System.IO.Pipes.PipeStream#1](~/add/codesnippet/cpp/m-system.io.pipes.pipest_1.cpp)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Adja vissza ezt a módszert, ha a megadott bájttömb közötti értékeket tartalmaz `offset` és (`offset`  +  `count` - 1) az aktuális forrásból beolvasott bájtok cserélve."
    - id: offset
      type: System.Int32
      description: "Az eltolás bájtban a `buffer` az olvasandó bájtok kerülnek, a tömb."
    - id: count
      type: System.Int32
      description: "Olvassa el a bájtok maximális száma."
    return:
      type: System.Int32
      description: "Az olvasandó bájtok teljes száma <code> buffer </code>. Ez lehet kisebb, mint a bájtok száma kért, ha adott bájtok száma jelenleg nem áll rendelkezésre, vagy 0 az adatfolyam végének elérésekor."
  overload: System.IO.Pipes.PipeStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>értéke 0-nál kisebb.       – vagy – <code>count</code> 0-nál kisebb."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>az elérhető bájtok száma nagyobb <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cső nem támogatja az olvasási műveletek."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cső le van választva, csatlakozás várakozik, vagy a leíró nem lett beállítva."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Bármely i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A cső egy olyan bájtot olvassa be."
  remarks: "Használja a <xref:System.IO.Pipes.PipeStream.CanRead%2A>tulajdonság határozza meg hogy az aktuális <xref:System.IO.Pipes.PipeStream>objektum támogatja az olvasási műveletek.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "A byte típusúvá <xref:System.Int32>, vagy a -1 (a cső lezárása) az adatfolyam végét jelöli.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.ReadByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cső nem támogatja az olvasási műveletek."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cső le van választva, csatlakozás várakozik, vagy a leíró nem lett beállítva."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Bármely i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi vagy beállítja azt az olvasási mód egy <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum."
  remarks: "A névtelen adatcsatornák nem támogatják a <xref:System.IO.Pipes.PipeTransmissionMode>mód üzenetátvitel.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Egyik a <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> érték, amely jelzi, hogyan a <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> a cső olvassa be az objektumot."
  overload: System.IO.Pipes.PipeStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott érték nem egy érvényes <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> érték."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A megadott érték nem támogatott <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> cső adatfolyam érték."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A leíró nincs megadva.       – vagy – a cső várakozik egy megnevezett ügyfél kapcsolódni."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy megnevezett ügyfél i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi a biztonságos leíró a cső helyi végén, amely az aktuális <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum magában foglalja."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "A <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> be a cső, amely a következőkkel van beágyazva által az aktuális objektum <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum."
  overload: System.IO.Pipes.PipeStream.SafePipeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cső leírója nem lett beállítva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A megadott érték az aktuális pozíció az aktuális adatfolyam állítja be."
  remarks: "A Seek metódus nem támogatott pipe-ok és vált ki egy <xref:System.NotSupportedException>azt meghívásakor.</xref:System.NotSupportedException>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "A pont, a relatív `origin`kell kezdeni a keresést."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Adja meg az elejéről, a végfelhasználók vagy az aktuális pozíció az hivatkozási pontjaként `offset`, <xref:System.IO.SeekOrigin>.</xref:System.IO.SeekOrigin> típus értéke"
    return:
      type: System.Int64
      description: "Az új pozíciót az adatfolyamban."
  overload: System.IO.Pipes.PipeStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  id: SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A hozzáférés-vezérlési lista (ACL) bejegyzéseket által megadott vonatkozik egy <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> a cső az aktuális által meghatározott objektum <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objektum."
  remarks: 'Hozzáférés-vezérlési listaként (ACL) egyéni felhasználók számára és/vagy csoportok, vagy nem jogosult, egy adott fájl a megadott műveleteket ismerteti. További információkért lásd: [hogyan: hozzáadása vagy eltávolítása a hozzáférés-vezérlési lista bejegyzések](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "A <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> objektum, amely meghatározza egy hozzáférés-vezérlési lista (ACL) a jelenlegi cső alkalmazandó bejegyzés."
  overload: System.IO.Pipes.PipeStream.SetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Biztonsági adatainak beállításához a mögöttes hívás sikertelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Biztonsági adatainak beállításához a mögöttes hívás sikertelen."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Biztonsági adatainak beállításához a mögöttes hívás sikertelen."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A megadott értékre állítja be a jelenlegi adatfolyam hossza."
  remarks: "A <xref:System.IO.Pipes.PipeStream>osztály nem támogatja a setlength elemet metódust.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Az új hossza az adatfolyam."
  overload: System.IO.Pipes.PipeStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lekérdezi a cső átviteli mód az aktuális cső által támogatott."
  remarks: "A névtelen adatcsatornák nem támogatják a <xref:System.IO.Pipes.PipeTransmissionMode>mód üzenetátvitel.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Egy a <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> , amely jelzi, az átviteli mód az aktuális cső által támogatott értékeket."
  overload: System.IO.Pipes.PipeStream.TransmissionMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A leíró nincs megadva.       – vagy – a cső vár a névtelen ügyfél/kiszolgáló művelet vagy egy nevesített ügyféllel csatlakozzon."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Összes küldött bájt olvasására a cső másik végén vár."
  remarks: "A WaitForPipeDrain metódus tömbök, amíg a cső másik végén elolvasta a küldött bájtok száma."
  syntax:
    content: public void WaitForPipeDrain ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cső nem támogatja az írási műveletek."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A jelenlegi adatfolyam puffer adatait használó ír egy adatblokk bájt."
  remarks: "Használja a <xref:System.IO.Pipes.PipeStream.CanWrite%2A>tulajdonság határozza meg hogy az aktuális <xref:System.IO.Pipes.PipeStream>objektum által támogatott írási műveleteket.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       A Write metódus hívása blokkol, amíg `count` bájt olvassa el, vagy az adatfolyam végének elérésekor. Az aszinkron olvasási műveleteknél tekintse meg <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>és <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A puffer, amely a csőre írni adatokat tartalmaz."
    - id: offset
      type: System.Int32
      description: "A nulla alapú bájteltolás a `buffer` kezdőpontját bájt másolása a jelenlegi adatfolyam."
    - id: count
      type: System.Int32
      description: "A jelenlegi adatfolyam írni bájtok maximális száma."
  overload: System.IO.Pipes.PipeStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>értéke 0-nál kisebb.       – vagy – <code>count</code> 0-nál kisebb."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>az elérhető bájtok száma nagyobb <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cső nem támogatja az írási műveletek."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "A jelenlegi adatfolyam ír egy olyan bájtot."
  remarks: "Használja a <xref:System.IO.Pipes.PipeStream.CanWrite%2A>tulajdonság határozza meg hogy az aktuális <xref:System.IO.Pipes.PipeStream>objektum által támogatott írási műveleteket.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Az adatfolyam írni bájt."
  overload: System.IO.Pipes.PipeStream.WriteByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A cső le van zárva."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cső nem támogatja az írási műveletek."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A cső le van választva, csatlakozás várakozik, vagy a leíró nem lett beállítva."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cső nem működik, vagy egy másik i/o-hiba történt."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Pipes.PipeStream.#ctor*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream.PipeStream
- uid: System.IO.Pipes.PipeStream.BeginRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead
  nameWithType: PipeStream.BeginRead
- uid: System.IO.Pipes.PipeStream.BeginWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite
  nameWithType: PipeStream.BeginWrite
- uid: System.IO.Pipes.PipeStream.CanRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: PipeStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.PipeStream.CheckReadOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations
  nameWithType: PipeStream.CheckReadOperations
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations
  nameWithType: PipeStream.CheckWriteOperations
- uid: System.IO.Pipes.PipeStream.Dispose*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose
  nameWithType: PipeStream.Dispose
- uid: System.IO.Pipes.PipeStream.EndRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead
  nameWithType: PipeStream.EndRead
- uid: System.IO.Pipes.PipeStream.EndWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite
  nameWithType: PipeStream.EndWrite
- uid: System.IO.Pipes.PipeStream.Flush*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush
  nameWithType: PipeStream.Flush
- uid: System.IO.Pipes.PipeStream.GetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl
  nameWithType: PipeStream.GetAccessControl
- uid: System.IO.Pipes.PipeStream.InBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle
  nameWithType: PipeStream.InitializeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read
  nameWithType: PipeStream.Read
- uid: System.IO.Pipes.PipeStream.ReadByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte
  nameWithType: PipeStream.ReadByte
- uid: System.IO.Pipes.PipeStream.ReadMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek
  nameWithType: PipeStream.Seek
- uid: System.IO.Pipes.PipeStream.SetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl
  nameWithType: PipeStream.SetAccessControl
- uid: System.IO.Pipes.PipeStream.SetLength*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength
  nameWithType: PipeStream.SetLength
- uid: System.IO.Pipes.PipeStream.TransmissionMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain
  nameWithType: PipeStream.WaitForPipeDrain
- uid: System.IO.Pipes.PipeStream.Write*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write
  nameWithType: PipeStream.Write
- uid: System.IO.Pipes.PipeStream.WriteByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte
  nameWithType: PipeStream.WriteByte
