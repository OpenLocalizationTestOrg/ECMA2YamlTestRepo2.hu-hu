### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeTypeDeclaration
  id: CodeTypeDeclaration
  children:
  - System.CodeDom.CodeTypeDeclaration.#ctor
  - System.CodeDom.CodeTypeDeclaration.#ctor(System.String)
  - System.CodeDom.CodeTypeDeclaration.BaseTypes
  - System.CodeDom.CodeTypeDeclaration.IsClass
  - System.CodeDom.CodeTypeDeclaration.IsEnum
  - System.CodeDom.CodeTypeDeclaration.IsInterface
  - System.CodeDom.CodeTypeDeclaration.IsPartial
  - System.CodeDom.CodeTypeDeclaration.IsStruct
  - System.CodeDom.CodeTypeDeclaration.Members
  - System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
  - System.CodeDom.CodeTypeDeclaration.PopulateMembers
  - System.CodeDom.CodeTypeDeclaration.TypeAttributes
  - System.CodeDom.CodeTypeDeclaration.TypeParameters
  langs:
  - csharp
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
  type: Class
  summary: "Olyan osztály, struktúra, illesztőfelület vagy számbavételi típus szerepel jelöli."
  remarks: "CodeTypeDeclaration határoz meg, amely egy osztály, struktúra, illesztőfelület vagy számbavételi deklarál kód használható. A típust be más típusba beágyazott CodeTypeDeclaration használható.       A <xref:System.CodeDom.CodeTypeDeclaration.BaseTypes%2A>tulajdonság határozza meg az alaptípus vagy alaptípusában alatt deklarált típus.</xref:System.CodeDom.CodeTypeDeclaration.BaseTypes%2A> A <xref:System.CodeDom.CodeTypeDeclaration.Members%2A>tulajdonsága tartalmazza a típusú tagok, amelyek magukban foglalhatják módszerek, mezők, tulajdonságok, megjegyzések és egyéb.</xref:System.CodeDom.CodeTypeDeclaration.Members%2A> A <xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A>tulajdonság a <xref:System.Reflection.TypeAttributes>a deklaráció, amely jelzi a típusa és kategóriája típusú értékeket.</xref:System.Reflection.TypeAttributes> </xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A> A <xref:System.CodeDom.CodeTypeDeclaration.IsClass%2A>, <xref:System.CodeDom.CodeTypeDeclaration.IsStruct%2A>, <xref:System.CodeDom.CodeTypeDeclaration.IsEnum%2A>, és <xref:System.CodeDom.CodeTypeDeclaration.IsInterface%2A>módszerek jelzi, hogy a típus egy osztály, struktúra, enumerálás vagy illesztőfelület-típus, illetve.</xref:System.CodeDom.CodeTypeDeclaration.IsInterface%2A> </xref:System.CodeDom.CodeTypeDeclaration.IsEnum%2A> </xref:System.CodeDom.CodeTypeDeclaration.IsStruct%2A> </xref:System.CodeDom.CodeTypeDeclaration.IsClass%2A>      > [!NOTE] > Egyes programozási nyelvek csak referencia típusok vagy osztályok deklarációjában támogatja. Ellenőrizze a nyelvspecifikus CodeDOM kódgenerátor felületek, enumerálások és értéktípusok deklaráló támogatása, hívja meg a <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>teszteléséhez a megfelelő módszer <xref:System.CodeDom.Compiler.GeneratorSupport>jelzők.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> <xref:System.CodeDom.Compiler.GeneratorSupport>felületek, támogatását jelzi <xref:System.CodeDom.Compiler.GeneratorSupport>számbavételek, támogatását jelzi és <xref:System.CodeDom.Compiler.GeneratorSupport>értéktípusok például struktúrák támogatását jelzi.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.GeneratorSupport></xref:System.CodeDom.Compiler.GeneratorSupport>       Egy osztály vagy egy struktúra végrehajtása egy teljes deklarációjában, vagy több deklarációk között ossza szét végrehajtására. A <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A>tulajdonság azt jelzi, hogy a deklaráció teljes vagy részleges.</xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A> Nem minden kód generátorokat támogatja a részleges típusdeklaráció gyökérnévterének, így a <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> jelzővel metódus</xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> meghívásával kell tesztelni a támogatási"
  example:
  - "This example demonstrates using a CodeTypeDeclaration to declare a type.  \n  \n [!code-cs[CodeTypeDeclarationExample#2](~/add/codesnippet/csharp/t-system.codedom.codetyp_7_1.cs)]\n [!code-vb[CodeTypeDeclarationExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codetyp_7_1.vb)]\n [!code-cpp[CodeTypeDeclarationExample#2](~/add/codesnippet/cpp/t-system.codedom.codetyp_7_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeTypeDeclaration : System.CodeDom.CodeTypeMember
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeTypeMember
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeTypeMember.Attributes
  - System.CodeDom.CodeTypeMember.Comments
  - System.CodeDom.CodeTypeMember.CustomAttributes
  - System.CodeDom.CodeTypeMember.EndDirectives
  - System.CodeDom.CodeTypeMember.LinePragma
  - System.CodeDom.CodeTypeMember.Name
  - System.CodeDom.CodeTypeMember.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: CodeTypeDeclaration()
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration()
  fullName: System.CodeDom.CodeTypeDeclaration.CodeTypeDeclaration()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> osztály."
  syntax:
    content: public CodeTypeDeclaration ();
    parameters: []
  overload: System.CodeDom.CodeTypeDeclaration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: CodeTypeDeclaration(String)
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration(String)
  fullName: System.CodeDom.CodeTypeDeclaration.CodeTypeDeclaration(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> osztály a megadott névvel."
  syntax:
    content: public CodeTypeDeclaration (string name);
    parameters:
    - id: name
      type: System.String
      description: "Az új típus neve."
  overload: System.CodeDom.CodeTypeDeclaration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.BaseTypes
  id: BaseTypes
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: BaseTypes
  nameWithType: CodeTypeDeclaration.BaseTypes
  fullName: System.CodeDom.CodeTypeDeclaration.BaseTypes
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi a alaptípusában típusú."
  remarks: "Egy osztály, amely nem örököl a alaptípusa, de egy vagy több felületek, amelyek valósítja meg a Visual Basic létrehozásához meg kell adni <xref:System.Object>BaseTypes gyűjtemény első elemeként.</xref:System.Object>      > [!NOTE] > A a .NET-keretrendszer 2.0-s nincs szükség a <xref:System.CodeDom.CodeTypeReference>a <xref:System.Object>Ha a felület végrehajtási már létezik, és típus szerint hivatkozik rá.</xref:System.Object> </xref:System.CodeDom.CodeTypeReference> Ha valósít meg, például a <xref:System.Collections.ICollection>felületet, és adja hozzá a gyűjteményhez, a jelen nyilatkozatban `ctd.BaseTypes.Add(New CodeTypeReference(typeof(ICollection)))`, nincs szükség az előző `ctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))` utasítást.</xref:System.Collections.ICollection>       Az alábbi kód bemutatja a <xref:System.CodeDom.CodeTypeReference> <xref:System.Object>.</xref:System.Object> hivatkozik, amely a gyűjtemény</xref:System.CodeDom.CodeTypeReference> hozzáadása       [A Visual Basic]      ```   Dim ctd As New CodeTypeDeclaration(&quot;Class1&quot;)   ctd.IsClass = True   ctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))   ctd.BaseTypes.Add(New CodeTypeReference(&quot;Interface1&quot;))   ``` [C#] ```   CodeTypeDeclaration ctd = new CodeTypeDeclaration(&quot;Class1&quot;);   ctd.IsClass = true;   ctd.BaseTypes.Add(new CodeTypeReference(typeof(Object)));   ctd.BaseTypes.Add(new CodeTypeReference(&quot;Interface1&quot;));   ``` a fenti kódot állít elő, a Visual Basicben egyenértékű.      ```   Public Class Class1   Implements Interface1   ```A Visual Basic kódot ténylegesen jönnek létre azonban a következő.      ```   Public Class Class1   Inherits Object   Implements Interface1   ```"
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection BaseTypes { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref> , amely jelzi a alaptípusában típusú objektum."
  overload: System.CodeDom.CodeTypeDeclaration.BaseTypes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsClass
  id: IsClass
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsClass
  nameWithType: CodeTypeDeclaration.IsClass
  fullName: System.CodeDom.CodeTypeDeclaration.IsClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja, hogy a típus szerepel-e egy osztály vagy referencia típusú jelző érték."
  syntax:
    content: public bool IsClass { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a típus egy osztály vagy referencia típusú; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsEnum
  id: IsEnum
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsEnum
  nameWithType: CodeTypeDeclaration.IsEnum
  fullName: System.CodeDom.CodeTypeDeclaration.IsEnum
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a típus szerepel-e az enumerálás."
  syntax:
    content: public bool IsEnum { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a típus egy számbavételi; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsEnum*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsInterface
  id: IsInterface
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsInterface
  nameWithType: CodeTypeDeclaration.IsInterface
  fullName: System.CodeDom.CodeTypeDeclaration.IsInterface
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja a voltát jelző érték típusa illesztőfelület."
  syntax:
    content: public bool IsInterface { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a típusa illesztőfelület; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsInterface*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsPartial
  id: IsPartial
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsPartial
  nameWithType: CodeTypeDeclaration.IsPartial
  fullName: System.CodeDom.CodeTypeDeclaration.IsPartial
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja a deklaráció a teljes vagy részleges voltát jelző érték."
  remarks: "Egy osztály vagy struktúra végrehajtása egy teljes deklaráció létrehozása, vagy több deklarációk között ossza szét végrehajtására. Egy teljes típusdeklarációt gyakran megadott hitelesítés megvalósításához. Ebben az esetben a tulajdonsága típus deklarációja IsPartial `false`, ami azt jelenti, hogy a deklaráció jelenti-e az összes részletes osztály vagy struktúra végrehajtásához.       A részleges típusdeklarációt megkönnyíti a hozhat létre egy osztály vagy struktúra végrehajtásának különböző modulokban az alkalmazás különböző részeit. A részleges típusdeklarációkban egy forrás-fájlban tárolja, vagy idővel együtt fordításának kombinált típus megvalósítása kialakításához több forrásfájlt elosztva.       A C# nyelv támogatja a részleges típusdeklarációkban osztályok és keresztül szerkezet a `partial` kulcsszó. Visual Basic részleges típusdeklarációkban osztályok támogatja, és a szerkezet a `Partial` kulcsszó. Nem minden kód generátorokat támogatja a részleges típusdeklaráció gyökérnévterének, így a <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> jelzővel metódus</xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> meghívásával kell tesztelni a támogatási      > [!NOTE] > Részleges típusdeklaráció gyökérnévterének osztályok és struktúrák vannak támogatva. Ha megad egy részleges típusdeklarációt számbavételi vagy felületet, a létrehozott kód fordítási hibákat hoz létre.       Amikor megadja egy osztály vagy struktúra végrehajtása több deklarációk között, a tulajdonsága IsPartial `true` a kezdeti nyilatkozat és minden kiegészítő nyilatkozatok. A kezdeti deklaráció teljesen a típust kell megadnia elérésmódosítókkal, beleértve az aláírás örökölt típusú, és a felületek megvalósítva. A kiegészítő nyilatkozatok nem kell újra meg kell határozni a metódustípus aláírása. Egy fordítási hiba történt általában eredménye, ha a típus aláírás kiegészítő nyilatkozatban definiálja újra.       Visual Studio 2005 résztípusában használja a felhasználó által generált kód külön Tervező kódból. A Visual Basic Windows-alkalmazás projektet, a felhasználói kód kerül egy részleges osztály, amely nem minősíti a `Partial` kulcsszó; a tervező által biztosított kód jelenik meg a részleges osztály, amely rendelkezik a `Partial` kulcsszó. A C#, a felhasználói kód és a Tervező kód részleges osztályok által azonosított megjelennek a `partial` kulcsszó."
  example:
  - "This example demonstrates using a <xref:System.CodeDom.CodeTypeDeclaration> to supply a class implementation across multiple declarations. The example builds the initial class declaration statement and sets the IsPartial property to `true`.  \n  \n [!code-cpp[CodeDomPartialTypeExample#3](~/add/codesnippet/cpp/p-system.codedom.codetyp_2_1.cpp)]\n [!code-cs[CodeDomPartialTypeExample#3](~/add/codesnippet/csharp/p-system.codedom.codetyp_2_1.cs)]\n [!code-vb[CodeDomPartialTypeExample#3](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_2_1.vb)]  \n  \n A different method in the example extends the class implementation. This method builds a new type declaration statement for the existing class and sets the IsPartial property to `true`. The compiler combines the two partial type declarations together for the complete class implementation.  \n  \n [!code-cpp[CodeDomPartialTypeExample#7](~/add/codesnippet/cpp/p-system.codedom.codetyp_2_2.cpp)]\n [!code-cs[CodeDomPartialTypeExample#7](~/add/codesnippet/csharp/p-system.codedom.codetyp_2_2.cs)]\n [!code-vb[CodeDomPartialTypeExample#7](~/add/codesnippet/visualbasic/p-system.codedom.codetyp_2_2.vb)]"
  syntax:
    content: public bool IsPartial { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az osztály vagy struktúra deklarációjában végrehajtása; részleges ábrázolása <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> a nyilatkozat egy teljes végrehajtása az osztály vagy struktúra esetén. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsPartial*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.IsStruct
  id: IsStruct
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: IsStruct
  nameWithType: CodeTypeDeclaration.IsStruct
  fullName: System.CodeDom.CodeTypeDeclaration.IsStruct
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja, hogy a típus szerepel-e egy értéktípus (struct) jelző érték."
  syntax:
    content: public bool IsStruct { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a típusa nem értéktípus; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeTypeDeclaration.IsStruct*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.Members
  id: Members
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: Members
  nameWithType: CodeTypeDeclaration.Members
  fullName: System.CodeDom.CodeTypeDeclaration.Members
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi a osztálytagok gyűjteménye a képviselt típushoz."
  syntax:
    content: public System.CodeDom.CodeTypeMemberCollection Members { get; }
    return:
      type: System.CodeDom.CodeTypeMemberCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeMemberCollection&quot;> </xref> objektum, amely jelzi a osztály tagjai."
  overload: System.CodeDom.CodeTypeDeclaration.Members*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
  id: PopulateBaseTypes
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: PopulateBaseTypes
  nameWithType: CodeTypeDeclaration.PopulateBaseTypes
  fullName: System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
  type: Event
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Akkor következik be, amikor a <xref:System.CodeDom.CodeTypeDeclaration.BaseTypes*>gyűjtemény érhető el az első alkalommal.</xref:System.CodeDom.CodeTypeDeclaration.BaseTypes*>"
  syntax:
    content: public event EventHandler PopulateBaseTypes;
    return:
      type: System.EventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.PopulateMembers
  id: PopulateMembers
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: PopulateMembers
  nameWithType: CodeTypeDeclaration.PopulateMembers
  fullName: System.CodeDom.CodeTypeDeclaration.PopulateMembers
  type: Event
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Akkor következik be, amikor a <xref:System.CodeDom.CodeTypeDeclaration.Members*>gyűjtemény érhető el az első alkalommal.</xref:System.CodeDom.CodeTypeDeclaration.Members*>"
  syntax:
    content: public event EventHandler PopulateMembers;
    return:
      type: System.EventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.TypeAttributes
  id: TypeAttributes
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: TypeAttributes
  nameWithType: CodeTypeDeclaration.TypeAttributes
  fullName: System.CodeDom.CodeTypeDeclaration.TypeAttributes
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja a típusú attribútumok."
  remarks: "A <xref:System.Reflection.TypeAttributes>tulajdonsága tartalmazza ugyanazt a típusú által használt értékek <xref:System.Reflection>típus futási időben vizsgálatakor.</xref:System.Reflection> </xref:System.Reflection.TypeAttributes> Ezeknek a jelzőknek számos nem felelnek meg a típus deklaráció szintaxisa néhány nyelv esetében. Ennek eredményeképpen a következő jelzőket csak szükség <xref:System.CodeDom.CodeTypeDeclaration>: <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, <xref:System.Reflection.TypeAttributes>, és <xref:System.Reflection.TypeAttributes>.</xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.Reflection.TypeAttributes> </xref:System.CodeDom.CodeTypeDeclaration>      > [!NOTE] > Például <xref:System.Reflection.TypeAttributes>átfedésben vannak a jelzők <xref:System.CodeDom.CodeTypeMember.Attributes%2A>tulajdonsága <xref:System.CodeDom.CodeTypeDeclaration>, amely <xref:System.CodeDom.CodeTypeMember>.</xref:System.CodeDom.CodeTypeMember> öröklődik</xref:System.CodeDom.CodeTypeDeclaration> </xref:System.CodeDom.CodeTypeMember.Attributes%2A> szerinti</xref:System.Reflection.TypeAttributes> jelzők A <xref:System.CodeDom.CodeTypeMember.Attributes%2A>tulajdonság egyik mellékhatása a <xref:System.CodeDom.CodeTypeDeclaration>öröklő osztály <xref:System.CodeDom.CodeTypeMember>, hogy osztályok egymásba ágyazható.</xref:System.CodeDom.CodeTypeMember> </xref:System.CodeDom.CodeTypeDeclaration> </xref:System.CodeDom.CodeTypeMember.Attributes%2A> A TypeAttributes tulajdonságában kell használható a jelzők a helyett a <xref:System.CodeDom.CodeTypeMember.Attributes%2A>tulajdonság.</xref:System.CodeDom.CodeTypeMember.Attributes%2A>      > [!NOTE] > Beállítása a láthatósági jelzőket minta (jelzők szavakat tartalmazó `Public` vagy `Nested`) való maszk ki minden látható jelzők használata a <xref:System.Reflection.TypeAttributes>, majd állítsa be a kívánt láthatósági jelző.</xref:System.Reflection.TypeAttributes> Például a C# kóddal utasítás azonosítására a <xref:System.CodeDom.CodeTypeDeclaration>(nevű `cd`) belső osztály, `cd.TypeAttributes = (cd.TypeAttributes & ~TypeAttributes.VisibilityMask) | TypeAttributes.NotPublic;`.</xref:System.CodeDom.CodeTypeDeclaration>  A kód ugyanarra az értékre beállítani a Visual Basic `cd.TypeAttributes = (cd.TypeAttributes And (TypeAttributes.VisibilityMask Xor -1)) Or TypeAttributes.NotPublic`. A TypeAttributes tulajdonság közvetlenül egy láthatósági jelző beállítást (`cd.TypeAttributes = TypeAttributes.NotPublic;`) törli az összes többi jelző is be lehet állítani."
  syntax:
    content: public System.Reflection.TypeAttributes TypeAttributes { get; set; }
    return:
      type: System.Reflection.TypeAttributes
      description: "A <xref:System.Reflection.TypeAttributes>objektum, amely azt jelzi, az a típusú attribútumok.</xref:System.Reflection.TypeAttributes>"
  overload: System.CodeDom.CodeTypeDeclaration.TypeAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeDeclaration.TypeParameters
  id: TypeParameters
  parent: System.CodeDom.CodeTypeDeclaration
  langs:
  - csharp
  name: TypeParameters
  nameWithType: CodeTypeDeclaration.TypeParameters
  fullName: System.CodeDom.CodeTypeDeclaration.TypeParameters
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekéri a helytípus-paraméterekkel a deklaráció."
  remarks: "Egy általános típus deklarációja tartalmaz egy vagy több tetszőleges Típusparaméterek néven ismert típusok. A típusparaméter neve általános nyilatkozat törzsében típusát jelöli. Például az általános deklaráció található a <xref:System.Collections.Generic.List%601>osztály tartalmazza a típusparaméter `T`.</xref:System.Collections.Generic.List%601>       Az általános osztályokat és metódusokat további információkért lásd: [a .NET-keretrendszer Class Library a általánosítási](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.CodeDom.CodeTypeParameterCollection TypeParameters { get; }
    return:
      type: System.CodeDom.CodeTypeParameterCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeParameterCollection&quot;> </xref> , amely tartalmazza a deklaráció a helytípus-paraméterekkel."
  overload: System.CodeDom.CodeTypeDeclaration.TypeParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeTypeMember
  isExternal: false
  name: System.CodeDom.CodeTypeMember
- uid: System.CodeDom.CodeTypeDeclaration.#ctor
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: CodeTypeDeclaration()
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration()
  fullName: System.CodeDom.CodeTypeDeclaration.CodeTypeDeclaration()
- uid: System.CodeDom.CodeTypeDeclaration.#ctor(System.String)
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: CodeTypeDeclaration(String)
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration(String)
  fullName: System.CodeDom.CodeTypeDeclaration.CodeTypeDeclaration(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeTypeDeclaration.BaseTypes
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: BaseTypes
  nameWithType: CodeTypeDeclaration.BaseTypes
  fullName: System.CodeDom.CodeTypeDeclaration.BaseTypes
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeTypeDeclaration.IsClass
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsClass
  nameWithType: CodeTypeDeclaration.IsClass
  fullName: System.CodeDom.CodeTypeDeclaration.IsClass
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.CodeTypeDeclaration.IsEnum
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsEnum
  nameWithType: CodeTypeDeclaration.IsEnum
  fullName: System.CodeDom.CodeTypeDeclaration.IsEnum
- uid: System.CodeDom.CodeTypeDeclaration.IsInterface
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsInterface
  nameWithType: CodeTypeDeclaration.IsInterface
  fullName: System.CodeDom.CodeTypeDeclaration.IsInterface
- uid: System.CodeDom.CodeTypeDeclaration.IsPartial
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsPartial
  nameWithType: CodeTypeDeclaration.IsPartial
  fullName: System.CodeDom.CodeTypeDeclaration.IsPartial
- uid: System.CodeDom.CodeTypeDeclaration.IsStruct
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsStruct
  nameWithType: CodeTypeDeclaration.IsStruct
  fullName: System.CodeDom.CodeTypeDeclaration.IsStruct
- uid: System.CodeDom.CodeTypeDeclaration.Members
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: Members
  nameWithType: CodeTypeDeclaration.Members
  fullName: System.CodeDom.CodeTypeDeclaration.Members
- uid: System.CodeDom.CodeTypeMemberCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeMemberCollection
  nameWithType: CodeTypeMemberCollection
  fullName: System.CodeDom.CodeTypeMemberCollection
- uid: System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: PopulateBaseTypes
  nameWithType: CodeTypeDeclaration.PopulateBaseTypes
  fullName: System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.CodeDom.CodeTypeDeclaration.PopulateMembers
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: PopulateMembers
  nameWithType: CodeTypeDeclaration.PopulateMembers
  fullName: System.CodeDom.CodeTypeDeclaration.PopulateMembers
- uid: System.CodeDom.CodeTypeDeclaration.TypeAttributes
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: TypeAttributes
  nameWithType: CodeTypeDeclaration.TypeAttributes
  fullName: System.CodeDom.CodeTypeDeclaration.TypeAttributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: true
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.CodeDom.CodeTypeDeclaration.TypeParameters
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: TypeParameters
  nameWithType: CodeTypeDeclaration.TypeParameters
  fullName: System.CodeDom.CodeTypeDeclaration.TypeParameters
- uid: System.CodeDom.CodeTypeParameterCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeParameterCollection
  nameWithType: CodeTypeParameterCollection
  fullName: System.CodeDom.CodeTypeParameterCollection
- uid: System.CodeDom.CodeTypeDeclaration.#ctor*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration.CodeTypeDeclaration
- uid: System.CodeDom.CodeTypeDeclaration.BaseTypes*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: BaseTypes
  nameWithType: CodeTypeDeclaration.BaseTypes
- uid: System.CodeDom.CodeTypeDeclaration.IsClass*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsClass
  nameWithType: CodeTypeDeclaration.IsClass
- uid: System.CodeDom.CodeTypeDeclaration.IsEnum*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsEnum
  nameWithType: CodeTypeDeclaration.IsEnum
- uid: System.CodeDom.CodeTypeDeclaration.IsInterface*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsInterface
  nameWithType: CodeTypeDeclaration.IsInterface
- uid: System.CodeDom.CodeTypeDeclaration.IsPartial*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsPartial
  nameWithType: CodeTypeDeclaration.IsPartial
- uid: System.CodeDom.CodeTypeDeclaration.IsStruct*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: IsStruct
  nameWithType: CodeTypeDeclaration.IsStruct
- uid: System.CodeDom.CodeTypeDeclaration.Members*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: Members
  nameWithType: CodeTypeDeclaration.Members
- uid: System.CodeDom.CodeTypeDeclaration.TypeAttributes*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: TypeAttributes
  nameWithType: CodeTypeDeclaration.TypeAttributes
- uid: System.CodeDom.CodeTypeDeclaration.TypeParameters*
  parent: System.CodeDom.CodeTypeDeclaration
  isExternal: false
  name: TypeParameters
  nameWithType: CodeTypeDeclaration.TypeParameters
