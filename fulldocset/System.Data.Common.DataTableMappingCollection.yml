### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DataTableMappingCollection
  id: DataTableMappingCollection
  children:
  - System.Data.Common.DataTableMappingCollection.#ctor
  - System.Data.Common.DataTableMappingCollection.Add(System.Object)
  - System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)
  - System.Data.Common.DataTableMappingCollection.AddRange(System.Array)
  - System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])
  - System.Data.Common.DataTableMappingCollection.Clear
  - System.Data.Common.DataTableMappingCollection.Contains(System.Object)
  - System.Data.Common.DataTableMappingCollection.Contains(System.String)
  - System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)
  - System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)
  - System.Data.Common.DataTableMappingCollection.Count
  - System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)
  - System.Data.Common.DataTableMappingCollection.GetEnumerator
  - System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)
  - System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)
  - System.Data.Common.DataTableMappingCollection.IndexOf(System.String)
  - System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)
  - System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)
  - System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)
  - System.Data.Common.DataTableMappingCollection.Item(System.Int32)
  - System.Data.Common.DataTableMappingCollection.Item(System.String)
  - System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)
  - System.Data.Common.DataTableMappingCollection.Remove(System.Object)
  - System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)
  - System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)
  - System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize
  - System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly
  - System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)
  - System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)
  - System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)
  - System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)
  langs:
  - csharp
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection
  fullName: System.Data.Common.DataTableMappingCollection
  type: Class
  summary: "A gyűjtemény <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektumok. Ez az osztály nem örökölhető."
  remarks: ''
  example:
  - "The following example uses an <xref:System.Data.OleDb.OleDbDataAdapter> to <xref:System.Data.Common.DataTableMappingCollection.Add%2A><xref:System.Data.Common.DataTableMapping> objects to its <xref:System.Data.Common.DataAdapter.TableMappings%2A> collection, and then displays a list of those mapped source tables. This example assumes that an <xref:System.Data.OleDb.OleDbDataAdapter> has already been created.  \n  \n [!code-cs[Classic WebData DataTableMappingCollection Example#1](~/add/codesnippet/csharp/t-system.data.common.dat_0_1.cs)]\n [!code-vb[Classic WebData DataTableMappingCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.common.dat_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableMappingCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ListBindable(false)]

      public sealed class DataTableMappingCollection : MarshalByRefObject, System.Collections.IList, System.Data.ITableMappingCollection
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Collections.IList
  - System.Data.ITableMappingCollection
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.#ctor
  id: '#ctor'
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: DataTableMappingCollection()
  nameWithType: DataTableMappingCollection.DataTableMappingCollection()
  fullName: System.Data.Common.DataTableMappingCollection.DataTableMappingCollection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> osztály. Az új példány üres, ez azt jelenti, hogy még tartalmaz minden <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektumok."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.Common.DataTableMappingCollection>, adds <xref:System.Data.Common.DataTableMapping> objects to the collection, and displays a list of the mapped source tables.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.DataTableMappingCollection Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_24_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.DataTableMappingCollection Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_24_1.cs)]"
  syntax:
    content: public DataTableMappingCollection ();
    parameters: []
  overload: System.Data.Common.DataTableMappingCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Add(Object)
  nameWithType: DataTableMappingCollection.Add(Object)
  fullName: System.Data.Common.DataTableMappingCollection.Add(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hozzáad egy <xref:System.Object>, amely a tábla hozzárendelésének a gyűjteményhez.</xref:System.Object>"
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> within the collection. If the mapping exists in the collection, it is removed. If the mapping does not exist within the collection, it is added to the collection and its index is displayed. The example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection and a <xref:System.Data.Common.DataTableMapping> object have been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_1_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_1_1.cs)]"
  syntax:
    content: public int Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref uid=&quot;langword_csharp_DataTableMapping&quot; name=&quot;DataTableMapping&quot; href=&quot;&quot;> </xref> objektum hozzáadására a gyűjteményhez."
    return:
      type: System.Int32
      description: "Az index a <xref uid=&quot;langword_csharp_DataTableMapping&quot; name=&quot;DataTableMapping&quot; href=&quot;&quot;> </xref> objektum hozzá a gyűjteményhez."
  overload: System.Data.Common.DataTableMappingCollection.Add*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Az átadott objektum nem volt egy <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum."
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: DataTableMappingCollection.Add(String,String)
  fullName: System.Data.Common.DataTableMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hozzáad egy <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a gyűjteményhez, ha adott a forrástáblázat és a <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla neve."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.Common.DataTableMappingCollection>, adds <xref:System.Data.Common.DataTableMapping> objects to the collection, and displays a list of the mapped source tables.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.DataTableMappingCollection Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_21_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.DataTableMappingCollection Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_21_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMapping Add (string sourceTable, string dataSetTable);
    parameters:
    - id: sourceTable
      type: System.String
      description: "A forrástábla leképezni a kis-és nagybetűket neve."
    - id: dataSetTable
      type: System.String
      description: "A neve, amely nem kis-és nagybetűket, a a <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla leképezése."
    return:
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum vettek fel a gyűjteménybe."
  overload: System.Data.Common.DataTableMappingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.AddRange(System.Array)
  id: AddRange(System.Array)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: AddRange(Array)
  nameWithType: DataTableMappingCollection.AddRange(Array)
  fullName: System.Data.Common.DataTableMappingCollection.AddRange(Array)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Másolja át a megadott elemeinek <xref:System.Array>a gyűjtemény végéig.</xref:System.Array>"
  syntax:
    content: public void AddRange (Array values);
    parameters:
    - id: values
      type: System.Array
      description: "Egy <xref:System.Array>értékek hozzáadására a gyűjteményhez.</xref:System.Array>"
  overload: System.Data.Common.DataTableMappingCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])
  id: AddRange(System.Data.Common.DataTableMapping[])
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: AddRange(DataTableMapping[])
  nameWithType: DataTableMappingCollection.AddRange(DataTableMapping[])
  fullName: System.Data.Common.DataTableMappingCollection.AddRange(DataTableMapping[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Másolja át a megadott elemeinek <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> tömbben a gyűjtemény végéig."
  syntax:
    content: public void AddRange (System.Data.Common.DataTableMapping[] values);
    parameters:
    - id: values
      type: System.Data.Common.DataTableMapping[]
      description: "A tömb <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektumok hozzáadására a gyűjteményhez."
  overload: System.Data.Common.DataTableMappingCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Clear
  id: Clear
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataTableMappingCollection.Clear()
  fullName: System.Data.Common.DataTableMappingCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Eltávolítja az összes <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektumok a gyűjteményből."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Data.Common.DataTableMappingCollection.CopyTo%2A> method to export the collection to an array of <xref:System.Data.Common.DataTableMapping> objects. It then clears the collection, and returns `true` if the parameters are no longer persisting. This example assumes that a <xref:System.Data.Common.DataTableMappingCollection> has already been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_19_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_19_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.Common.DataTableMappingCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: DataTableMappingCollection.Contains(Object)
  fullName: System.Data.Common.DataTableMappingCollection.Contains(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a megadott <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum létezik a gyűjteményben."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> within the collection. If the mapping exists in the collection, it is removed. If the mapping does not exist within the collection, it is added to the collection and its index is displayed. The example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection and a <xref:System.Data.Common.DataTableMapping> object have been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_4_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.Contains1 Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_4_1.cs)]"
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Egy <xref:System.Object>, amely a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyűjtemény tartalmazza a megadott <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataTableMappingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataTableMappingCollection.Contains(String)
  fullName: System.Data.Common.DataTableMappingCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy egy <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum és a megadott forrás tábla szerepel a gyűjteményben."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> object with the given source table name within a <xref:System.Data.Common.DataTableMappingCollection> collection. If the <xref:System.Data.Common.DataTableMapping> exists, the example displays the name and the index of the mapping. If the mapping does not exist, the example displays an error. This example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection has been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.this1 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_27_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.this1 Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_27_1.cs)]"
  syntax:
    content: public bool Contains (string value);
    parameters:
    - id: value
      type: System.String
      description: "A kis-és nagybetűket forrás nevét tartalmazó táblát a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyűjtemény tartalmaz egy <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a forrás nevét, ha tábla <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataTableMappingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataTableMappingCollection.CopyTo(Array,Int32)
  fullName: System.Data.Common.DataTableMappingCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Másolja át a elemei a <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> a megadott tömb."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Egy <xref:System.Array>, amelyre szeretné másolni a <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> elemei.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A kezdő index a tömb."
  overload: System.Data.Common.DataTableMappingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)
  id: CopyTo(System.Data.Common.DataTableMapping[],System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: CopyTo(DataTableMapping[],Int32)
  nameWithType: DataTableMappingCollection.CopyTo(DataTableMapping[],Int32)
  fullName: System.Data.Common.DataTableMappingCollection.CopyTo(DataTableMapping[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Másolja át a elemei a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> a megadott tömb."
  syntax:
    content: public void CopyTo (System.Data.Common.DataTableMapping[] array, int index);
    parameters:
    - id: array
      type: System.Data.Common.DataTableMapping[]
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> , amelyre szeretné másolni a <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> elemek."
    - id: index
      type: System.Int32
      description: "A kezdő index a tömb."
  overload: System.Data.Common.DataTableMappingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Count
  id: Count
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataTableMappingCollection.Count
  fullName: System.Data.Common.DataTableMappingCollection.Count
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a száma <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektumok a gyűjteményben."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.Common.DataTableMappingCollection>, adds <xref:System.Data.Common.DataTableMapping> objects to the collection, and displays a list of the mapped source tables.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_11_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.Count Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_11_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Hány <xref uid=&quot;langword_csharp_DataTableMapping&quot; name=&quot;DataTableMapping&quot; href=&quot;&quot;> </xref> objektumok a gyűjteményben."
  overload: System.Data.Common.DataTableMappingCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)
  id: GetByDataSetTable(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: GetByDataSetTable(String)
  nameWithType: DataTableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.Common.DataTableMappingCollection.GetByDataSetTable(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> és a megadott objektum <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla neve."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> within the collection. If the object exists, it is returned. The example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection and a <xref:System.Data.Common.DataTableMapping> object have been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.GetByDataSetTable Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_13_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.GetByDataSetTable Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_13_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMapping GetByDataSetTable (string dataSetTable);
    parameters:
    - id: dataSetTable
      type: System.String
      description: "A neve, amely nem kis-és nagybetűket, a a <xref href=&quot;System.Data.DataSet&quot;> </xref> táblázatban találja."
    return:
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> és a megadott objektum <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla neve."
  overload: System.Data.Common.DataTableMappingCollection.GetByDataSetTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataTableMappingCollection.GetEnumerator()
  fullName: System.Data.Common.DataTableMappingCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi számbavevő, amely többször is keresztül a gyűjteményben."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>, amelyek segítségével a gyűjtemény iterációt.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Common.DataTableMappingCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)
  id: GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: GetTableMappingBySchemaAction(DataTableMappingCollection,String,String,MissingMappingAction)
  nameWithType: DataTableMappingCollection.GetTableMappingBySchemaAction(DataTableMappingCollection,String,String,MissingMappingAction)
  fullName: System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(DataTableMappingCollection,String,String,MissingMappingAction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a <xref href=&quot;System.Data.Common.DataColumnMapping&quot;> </xref> objektum a megadott forrás-tábla neve és <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla nevével, használja az adott <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref>."
  remarks: "Ha a <xref:System.Data.Common.DataTableMapping>létezik a gyűjteményben lévő adja vissza.</xref:System.Data.Common.DataTableMapping>       Ha a <xref:System.Data.Common.DataTableMapping>nem létezik a gyűjtemény számítógépeinek a megadott <xref:System.Data.MissingMappingAction>, a következő esemény bekövetkezésekor: |} MissingMappingAction |} Műveletről |}   |--------------------------|------------------|   | `Passthrough`| Létrehoz egy <xref:System.Data.Common.DataTableMapping>rendelkező objektum az adott `sourceTable` forrás táblanevet és `dataSetTable` , a <xref:System.Data.DataSet>tábla neve.</xref:System.Data.DataSet> </xref:System.Data.Common.DataTableMapping> </xref:System.Data.MissingMappingAction> </xref:System.Data.Common.DataTableMapping> A létrehozott <xref:System.Data.Common.DataTableMapping>objektum nem adja hozzá a gyűjteményhez. |}   | `Error`| Kivétel jön létre.</xref:System.Data.Common.DataTableMapping> A `dataSetTable` paraméter a rendszer figyelmen kívül hagyja. |}   | `Ignore`| Gets `null`. A `dataSetTable` paraméter a rendszer figyelmen kívül hagyja. |}"
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> with the given source table name within the collection. If the object exists, it is returned. The example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection and a <xref:System.Data.Common.DataTableMapping> object have been created.  \n  \n [!code-cs[Classic WebData DataTableMappingCollection.GetTableMappingBySchemaAction Example#1](~/add/codesnippet/csharp/3fd8dca3-bcd2-4b32-9dd4-_1.cs)]\n [!code-vb[Classic WebData DataTableMappingCollection.GetTableMappingBySchemaAction Example#1](~/add/codesnippet/visualbasic/3fd8dca3-bcd2-4b32-9dd4-_1.vb)]"
  syntax:
    content: public static System.Data.Common.DataTableMapping GetTableMappingBySchemaAction (System.Data.Common.DataTableMappingCollection tableMappings, string sourceTable, string dataSetTable, System.Data.MissingMappingAction mappingAction);
    parameters:
    - id: tableMappings
      type: System.Data.Common.DataTableMappingCollection
      description: "A <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> gyűjteményt, szeretne keresni."
    - id: sourceTable
      type: System.String
      description: "A kis-és nagybetűket a csatlakoztatott forrástábla neve."
    - id: dataSetTable
      type: System.String
      description: "A neve, amely nem kis-és nagybetűket, a csatlakoztatott a <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla."
    - id: mappingAction
      type: System.Data.MissingMappingAction
      description: "Egy a <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> értékeket."
    return:
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;></xref> object."
  overload: System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <code> mappingAction </code> paraméter lett állítva: <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref>, és nincs leképezés van megadva."
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: DataTableMappingCollection.IndexOf(Object)
  fullName: System.Data.Common.DataTableMappingCollection.IndexOf(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott helye <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a gyűjteményben."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> within the collection. If the mapping exists in the collection, it is removed. If the mapping does not exist within the collection, it is added to the collection and its index is displayed. The example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection and a <xref:System.Data.Common.DataTableMapping> object have been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.Contains1 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_2_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.Contains1 Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_2_1.cs)]"
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Egy <xref:System.Object>, amely a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum található.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A megadott nulla alapú helyét <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a gyűjteményben."
  overload: System.Data.Common.DataTableMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataTableMappingCollection.IndexOf(String)
  fullName: System.Data.Common.DataTableMappingCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a helyét a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a megadott forrás-tábla neve."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> object with the given source table name within a <xref:System.Data.Common.DataTableMappingCollection> collection. If the <xref:System.Data.Common.DataTableMapping> exists, the example displays the name and the index of the mapping. If the mapping does not exist, the example displays an error. This example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection has been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.this1 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_17_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.this1 Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_17_1.cs)]"
  syntax:
    content: public int IndexOf (string sourceTable);
    parameters:
    - id: sourceTable
      type: System.String
      description: "A kis-és nagybetűket a forrástábla neve."
    return:
      type: System.Int32
      description: "A nulla alapú helyét a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a megadott forrás-tábla neve."
  overload: System.Data.Common.DataTableMappingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)
  id: IndexOfDataSetTable(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: IndexOfDataSetTable(String)
  nameWithType: DataTableMappingCollection.IndexOfDataSetTable(String)
  fullName: System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a helyét a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> és a megadott objektum <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla neve."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> within the collection. If the object exists, it is returned. The example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection and a <xref:System.Data.Common.DataTableMapping> object have been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.GetByDataSetTable Example#1](~/add/codesnippet/visualbasic/cc2bbc20-a852-4d09-b77d-_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.GetByDataSetTable Example#1](~/add/codesnippet/csharp/cc2bbc20-a852-4d09-b77d-_1.cs)]"
  syntax:
    content: public int IndexOfDataSetTable (string dataSetTable);
    parameters:
    - id: dataSetTable
      type: System.String
      description: "A neve, amely nem kis-és nagybetűket, a a <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> táblázatban találja."
    return:
      type: System.Int32
      description: "A nulla alapú helyét a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> rendelkező objektum az adott <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla nevét, vagy a -1, ha a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum nem létezik a gyűjteményben."
  overload: System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)
  id: Insert(System.Int32,System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Insert(Int32,DataTableMapping)
  nameWithType: DataTableMappingCollection.Insert(Int32,DataTableMapping)
  fullName: System.Data.Common.DataTableMappingCollection.Insert(Int32,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Szúrja be a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> az objektum a <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> a megadott indexnél."
  syntax:
    content: public void Insert (int index, System.Data.Common.DataTableMapping value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> beszúrandó objektum."
    - id: value
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> beszúrandó objektum."
  overload: System.Data.Common.DataTableMappingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: DataTableMappingCollection.Insert(Int32,Object)
  fullName: System.Data.Common.DataTableMappingCollection.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Szúrja be a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> az objektum a <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> a megadott indexnél."
  syntax:
    content: public void Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> beszúrandó objektum."
    - id: value
      type: System.Object
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> beszúrandó objektum."
  overload: System.Data.Common.DataTableMappingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableMappingCollection.Item(Int32)
  fullName: System.Data.Common.DataTableMappingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a megadott indexnél."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.Common.DataTableMappingCollection> collection, adds <xref:System.Data.Common.DataTableMapping> objects to the collection, and displays a list of the mapped source tables.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.Count Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_1_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.Count Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_1_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMapping this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> vissza objektumot."
    return:
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a megadott indexnél."
  overload: System.Data.Common.DataTableMappingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableMappingCollection.Item(String)
  fullName: System.Data.Common.DataTableMappingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a megadott forrás-tábla neve."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> object with the given source table name within a <xref:System.Data.Common.DataTableMappingCollection> collection. If the <xref:System.Data.Common.DataTableMapping> exists, the example displays the name and the index of the mapping. If the mapping does not exist, the example displays an error. This example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection has been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_10_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_10_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMapping this[string sourceTable] { get; set; }
    parameters:
    - id: sourceTable
      type: System.String
      description: "A kis-és nagybetűket a forrástábla neve."
    return:
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a megadott forrás-tábla neve."
  overload: System.Data.Common.DataTableMappingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)
  id: Remove(System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Remove(DataTableMapping)
  nameWithType: DataTableMappingCollection.Remove(DataTableMapping)
  fullName: System.Data.Common.DataTableMappingCollection.Remove(DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Eltávolítja a megadott <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a gyűjteményből."
  syntax:
    content: public void Remove (System.Data.Common.DataTableMapping value);
    parameters:
    - id: value
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum eltávolítása."
  overload: System.Data.Common.DataTableMappingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: DataTableMappingCollection.Remove(Object)
  fullName: System.Data.Common.DataTableMappingCollection.Remove(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Eltávolítja a megadott <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a gyűjteményből."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> within the collection. If the mapping exists in the collection, it is removed. If the mapping does not exist within the collection, it is added to the collection and its index is displayed. The example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection and a <xref:System.Data.Common.DataTableMapping> object have been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_16_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_16_1.cs)]"
  syntax:
    content: public void Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum eltávolítása."
  overload: System.Data.Common.DataTableMappingCollection.Remove*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott objektum nem volt egy <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott objektum nem szerepel a gyűjteményben."
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataTableMappingCollection.RemoveAt(Int32)
  fullName: System.Data.Common.DataTableMappingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Eltávolítja a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum található a megadott index a gyűjteményből."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> object with the given source table name within a <xref:System.Data.Common.DataTableMappingCollection> collection. If the <xref:System.Data.Common.DataTableMapping> exists, the mapping is removed. This example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection has been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_20_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_20_1.cs)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum eltávolítása."
  overload: System.Data.Common.DataTableMappingCollection.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum nem létezik a megadott indexű."
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: RemoveAt(String)
  nameWithType: DataTableMappingCollection.RemoveAt(String)
  fullName: System.Data.Common.DataTableMappingCollection.RemoveAt(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Eltávolítja a <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum a megadott forrás-tábla neve a gyűjteményből."
  remarks: ''
  example:
  - "The following example searches for a <xref:System.Data.Common.DataTableMapping> object with the given source table name within a <xref:System.Data.Common.DataTableMappingCollection> collection. If the <xref:System.Data.Common.DataTableMapping> exists, the mapping is removed. This example assumes that a <xref:System.Data.Common.DataTableMappingCollection> collection has been created.  \n  \n [!code-vb[Classic WebData DataTableMappingCollection.RemoveAt1 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_5_1.vb)]\n [!code-cs[Classic WebData DataTableMappingCollection.RemoveAt1 Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_5_1.cs)]"
  syntax:
    content: public void RemoveAt (string sourceTable);
    parameters:
    - id: sourceTable
      type: System.String
      description: "A kis-és nagybetűket forrástáblázat kereséséhez."
  overload: System.Data.Common.DataTableMappingCollection.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objektum nem létezik a megadott forrás-tábla neve."
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataTableMappingCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy érték, amely jelzi, hogy hozzáférést lekérdezi a <xref:System.Collections.ICollection>van (a többszálú futtatásra) szinkronizált.</xref:System.Collections.ICollection>"
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DataTableMappingCollection>példány típusúvá egy <xref:System.Collections.ICollection>felületet.</xref:System.Collections.ICollection> </xref:System.Data.Common.DataTableMappingCollection>       További információkért lásd: <xref:System.Collections.ICollection.IsSynchronized%2A>.</xref:System.Collections.ICollection.IsSynchronized%2A>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférést a <xref:System.Collections.ICollection>van (a többszálú futtatásra) szinkronizált; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataTableMappingCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi egy objektumot, amely segítségével a <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> való hozzáférés szinkronizálása"
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DataTableMappingCollection>példány típusúvá egy <xref:System.Collections.ICollection>felületet.</xref:System.Collections.ICollection> </xref:System.Data.Common.DataTableMappingCollection>       További információkért lásd: <xref:System.Collections.ICollection.IsSynchronized%2A>.</xref:System.Collections.ICollection.IsSynchronized%2A>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Olyan objektum, amely segítségével a <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> való hozzáférés szinkronizálása"
  overload: System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataTableMappingCollection.System.Collections.IList.IsFixedSize
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref:System.Collections.IList>mérete4 rögzített.</xref:System.Collections.IList>"
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DataTableMappingCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Data.Common.DataTableMappingCollection>       További információkért lásd: <xref:System.Collections.IList.IsFixedSize%2A>.</xref:System.Collections.IList.IsFixedSize%2A>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref:System.Collections.IList>rendelkezik egy rögzített méretű; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataTableMappingCollection.System.Collections.IList.IsReadOnly
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref:System.Collections.IList>csak olvasható.</xref:System.Collections.IList>"
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DataTableMappingCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Data.Common.DataTableMappingCollection>       További információkért lásd: <xref:System.Collections.IList.IsReadOnly%2A>.</xref:System.Collections.IList.IsReadOnly%2A>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref:System.Collections.IList>csak olvasható; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataTableMappingCollection.System.Collections.IList.Item(Int32)
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja egy elemet a gyűjteményből, a megadott indexnél."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DataTableMappingCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Data.Common.DataTableMappingCollection>       További információkért lásd: <xref:System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Item%2A>.</xref:System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Item%2A>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "A cikk beolvasni vagy megadni nulla alapú indexét."
    return:
      type: System.Object
      description: "Az elem a megadott indexnél."
  overload: System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)
  id: System#Data#ITableMappingCollection#Add(System.String,System.String)
  isEii: true
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: System.Data.ITableMappingCollection.Add(String,String)
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.Add(String,String)
  fullName: System.Data.Common.DataTableMappingCollection.System.Data.ITableMappingCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A tábla hozzárendelésének hozzáadása a gyűjteményhez."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DataTableMappingCollection>példány típusúvá egy <xref:System.Data.ITableMappingCollection>felületet.</xref:System.Data.ITableMappingCollection> </xref:System.Data.Common.DataTableMappingCollection>       További információkért lásd: <xref:System.Data.ITableMappingCollection.Add%2A>.</xref:System.Data.ITableMappingCollection.Add%2A>"
  syntax:
    content: System.Data.ITableMapping ITableMappingCollection.Add (string sourceTableName, string dataSetTableName);
    parameters:
    - id: sourceTableName
      type: System.String
      description: "A kis-és nagybetűket a forrástábla neve."
    - id: dataSetTableName
      type: System.String
      description: "Neve a <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla."
    return:
      type: System.Data.ITableMapping
      description: "Az újonnan leképezett mutató hivatkozás <xref href=&quot;System.Data.ITableMapping&quot;> </xref> objektum."
  overload: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)
  id: System#Data#ITableMappingCollection#GetByDataSetTable(System.String)
  isEii: true
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: System.Data.ITableMappingCollection.GetByDataSetTable(String)
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.Common.DataTableMappingCollection.System.Data.ITableMappingCollection.GetByDataSetTable(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott TableMapping objektum <xref href=&quot;System.Data.DataSet&quot;> </xref> tábla neve."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DataTableMappingCollection>példány típusúvá egy <xref:System.Data.ITableMappingCollection>felületet.</xref:System.Data.ITableMappingCollection> </xref:System.Data.Common.DataTableMappingCollection>       További információkért lásd: <xref:System.Data.ITableMappingCollection.GetByDataSetTable%2A?displayProperty=fullName>.</xref:System.Data.ITableMappingCollection.GetByDataSetTable%2A?displayProperty=fullName>"
  syntax:
    content: System.Data.ITableMapping ITableMappingCollection.GetByDataSetTable (string dataSetTableName);
    parameters:
    - id: dataSetTableName
      type: System.String
      description: "Neve a <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> tábla a gyűjteményben."
    return:
      type: System.Data.ITableMapping
      description: "A megadott TableMapping objektum <xref uid=&quot;langword_csharp_DataSet&quot; name=&quot;DataSet&quot; href=&quot;&quot;> </xref> tábla neve."
  overload: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)
  id: System#Data#ITableMappingCollection#Item(System.String)
  isEii: true
  parent: System.Data.Common.DataTableMappingCollection
  langs:
  - csharp
  name: System.Data.ITableMappingCollection.Item(String)
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.Item(String)
  fullName: System.Data.Common.DataTableMappingCollection.System.Data.ITableMappingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a példányának <xref href=&quot;System.Data.ITableMapping&quot;> </xref> és a megadott <xref:System.Data.ITableMapping.SourceTable*>neve.</xref:System.Data.ITableMapping.SourceTable*>"
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DataTableMappingCollection>példány típusúvá egy <xref:System.Data.ITableMappingCollection>felületet.</xref:System.Data.ITableMappingCollection> </xref:System.Data.Common.DataTableMappingCollection>       További információkért lásd: <xref:System.Data.ITableMappingCollection.Item%2A>.</xref:System.Data.ITableMappingCollection.Item%2A>"
  syntax:
    content: object System.Data.ITableMappingCollection.Item[string index] { get; set; }
    parameters:
    - id: index
      type: System.String
      description: "The <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;></xref> name of the <xref href=&quot;System.Data.ITableMapping&quot;></xref>."
    return:
      type: System.Object
      description: "A példányának <xref href=&quot;System.Data.ITableMapping&quot;> </xref> és a megadott <xref uid=&quot;langword_csharp_SourceTable&quot; name=&quot;SourceTable&quot; href=&quot;&quot;> </xref> nevét."
  overload: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.Common.DataTableMappingCollection.#ctor
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: DataTableMappingCollection()
  nameWithType: DataTableMappingCollection.DataTableMappingCollection()
  fullName: System.Data.Common.DataTableMappingCollection.DataTableMappingCollection()
- uid: System.Data.Common.DataTableMappingCollection.Add(System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Add(Object)
  nameWithType: DataTableMappingCollection.Add(Object)
  fullName: System.Data.Common.DataTableMappingCollection.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: DataTableMappingCollection.Add(String,String)
  fullName: System.Data.Common.DataTableMappingCollection.Add(String,String)
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DataTableMappingCollection.AddRange(System.Array)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: AddRange(Array)
  nameWithType: DataTableMappingCollection.AddRange(Array)
  fullName: System.Data.Common.DataTableMappingCollection.AddRange(Array)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: AddRange(DataTableMapping[])
  nameWithType: DataTableMappingCollection.AddRange(DataTableMapping[])
  fullName: System.Data.Common.DataTableMappingCollection.AddRange(DataTableMapping[])
- uid: System.Data.Common.DataTableMapping[]
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping[]
  spec.csharp:
  - uid: System.Data.Common.DataTableMapping
    name: DataTableMapping
    nameWithType: DataTableMapping
    fullName: DataTableMapping[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataTableMappingCollection.Clear
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Clear()
  nameWithType: DataTableMappingCollection.Clear()
  fullName: System.Data.Common.DataTableMappingCollection.Clear()
- uid: System.Data.Common.DataTableMappingCollection.Contains(System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: DataTableMappingCollection.Contains(Object)
  fullName: System.Data.Common.DataTableMappingCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DataTableMappingCollection.Contains(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataTableMappingCollection.Contains(String)
  fullName: System.Data.Common.DataTableMappingCollection.Contains(String)
- uid: System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataTableMappingCollection.CopyTo(Array,Int32)
  fullName: System.Data.Common.DataTableMappingCollection.CopyTo(Array,Int32)
- uid: System.Data.Common.DataTableMappingCollection.CopyTo(System.Data.Common.DataTableMapping[],System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: CopyTo(DataTableMapping[],Int32)
  nameWithType: DataTableMappingCollection.CopyTo(DataTableMapping[],Int32)
  fullName: System.Data.Common.DataTableMappingCollection.CopyTo(DataTableMapping[],Int32)
- uid: System.Data.Common.DataTableMappingCollection.Count
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Count
  nameWithType: DataTableMappingCollection.Count
  fullName: System.Data.Common.DataTableMappingCollection.Count
- uid: System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: GetByDataSetTable(String)
  nameWithType: DataTableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.Common.DataTableMappingCollection.GetByDataSetTable(String)
- uid: System.Data.Common.DataTableMappingCollection.GetEnumerator
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataTableMappingCollection.GetEnumerator()
  fullName: System.Data.Common.DataTableMappingCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: GetTableMappingBySchemaAction(DataTableMappingCollection,String,String,MissingMappingAction)
  nameWithType: DataTableMappingCollection.GetTableMappingBySchemaAction(DataTableMappingCollection,String,String,MissingMappingAction)
  fullName: System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(DataTableMappingCollection,String,String,MissingMappingAction)
- uid: System.Data.Common.DataTableMappingCollection
  parent: System.Data.Common
  isExternal: false
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection
  fullName: System.Data.Common.DataTableMappingCollection
- uid: System.Data.MissingMappingAction
  parent: System.Data
  isExternal: false
  name: MissingMappingAction
  nameWithType: MissingMappingAction
  fullName: System.Data.MissingMappingAction
- uid: System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: DataTableMappingCollection.IndexOf(Object)
  fullName: System.Data.Common.DataTableMappingCollection.IndexOf(Object)
- uid: System.Data.Common.DataTableMappingCollection.IndexOf(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataTableMappingCollection.IndexOf(String)
  fullName: System.Data.Common.DataTableMappingCollection.IndexOf(String)
- uid: System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: IndexOfDataSetTable(String)
  nameWithType: DataTableMappingCollection.IndexOfDataSetTable(String)
  fullName: System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(String)
- uid: System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Insert(Int32,DataTableMapping)
  nameWithType: DataTableMappingCollection.Insert(Int32,DataTableMapping)
  fullName: System.Data.Common.DataTableMappingCollection.Insert(Int32,DataTableMapping)
- uid: System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: DataTableMappingCollection.Insert(Int32,Object)
  fullName: System.Data.Common.DataTableMappingCollection.Insert(Int32,Object)
- uid: System.Data.Common.DataTableMappingCollection.Item(System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableMappingCollection.Item(Int32)
  fullName: System.Data.Common.DataTableMappingCollection.Item(Int32)
- uid: System.Data.Common.DataTableMappingCollection.Item(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataTableMappingCollection.Item(String)
  fullName: System.Data.Common.DataTableMappingCollection.Item(String)
- uid: System.Data.Common.DataTableMappingCollection.Remove(System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Remove(DataTableMapping)
  nameWithType: DataTableMappingCollection.Remove(DataTableMapping)
  fullName: System.Data.Common.DataTableMappingCollection.Remove(DataTableMapping)
- uid: System.Data.Common.DataTableMappingCollection.Remove(System.Object)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Remove(Object)
  nameWithType: DataTableMappingCollection.Remove(Object)
  fullName: System.Data.Common.DataTableMappingCollection.Remove(Object)
- uid: System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataTableMappingCollection.RemoveAt(Int32)
  fullName: System.Data.Common.DataTableMappingCollection.RemoveAt(Int32)
- uid: System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: RemoveAt(String)
  nameWithType: DataTableMappingCollection.RemoveAt(String)
  fullName: System.Data.Common.DataTableMappingCollection.RemoveAt(String)
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataTableMappingCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataTableMappingCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.ICollection.SyncRoot
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataTableMappingCollection.System.Collections.IList.IsFixedSize
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.IList.IsFixedSize
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataTableMappingCollection.System.Collections.IList.IsReadOnly
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.IList.IsReadOnly
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: DataTableMappingCollection.System.Collections.IList.Item(Int32)
  fullName: System.Data.Common.DataTableMappingCollection.System.Collections.IList.Item(Int32)
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add(System.String,System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Data.ITableMappingCollection.Add(String,String)
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.Add(String,String)
  fullName: System.Data.Common.DataTableMappingCollection.System.Data.ITableMappingCollection.Add(String,String)
- uid: System.Data.ITableMapping
  parent: System.Data
  isExternal: false
  name: ITableMapping
  nameWithType: ITableMapping
  fullName: System.Data.ITableMapping
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Data.ITableMappingCollection.GetByDataSetTable(String)
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.GetByDataSetTable(String)
  fullName: System.Data.Common.DataTableMappingCollection.System.Data.ITableMappingCollection.GetByDataSetTable(String)
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item(System.String)
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Data.ITableMappingCollection.Item(String)
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.Item(String)
  fullName: System.Data.Common.DataTableMappingCollection.System.Data.ITableMappingCollection.Item(String)
- uid: System.Data.Common.DataTableMappingCollection.#ctor*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection.DataTableMappingCollection
- uid: System.Data.Common.DataTableMappingCollection.Add*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Add
  nameWithType: DataTableMappingCollection.Add
- uid: System.Data.Common.DataTableMappingCollection.AddRange*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: AddRange
  nameWithType: DataTableMappingCollection.AddRange
- uid: System.Data.Common.DataTableMappingCollection.Clear*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Clear
  nameWithType: DataTableMappingCollection.Clear
- uid: System.Data.Common.DataTableMappingCollection.Contains*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Contains
  nameWithType: DataTableMappingCollection.Contains
- uid: System.Data.Common.DataTableMappingCollection.CopyTo*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataTableMappingCollection.CopyTo
- uid: System.Data.Common.DataTableMappingCollection.Count*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Count
  nameWithType: DataTableMappingCollection.Count
- uid: System.Data.Common.DataTableMappingCollection.GetByDataSetTable*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: GetByDataSetTable
  nameWithType: DataTableMappingCollection.GetByDataSetTable
- uid: System.Data.Common.DataTableMappingCollection.GetEnumerator*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataTableMappingCollection.GetEnumerator
- uid: System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: GetTableMappingBySchemaAction
  nameWithType: DataTableMappingCollection.GetTableMappingBySchemaAction
- uid: System.Data.Common.DataTableMappingCollection.IndexOf*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataTableMappingCollection.IndexOf
- uid: System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: IndexOfDataSetTable
  nameWithType: DataTableMappingCollection.IndexOfDataSetTable
- uid: System.Data.Common.DataTableMappingCollection.Insert*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Insert
  nameWithType: DataTableMappingCollection.Insert
- uid: System.Data.Common.DataTableMappingCollection.Item*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Item
  nameWithType: DataTableMappingCollection.Item
- uid: System.Data.Common.DataTableMappingCollection.Remove*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: Remove
  nameWithType: DataTableMappingCollection.Remove
- uid: System.Data.Common.DataTableMappingCollection.RemoveAt*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataTableMappingCollection.RemoveAt
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DataTableMappingCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DataTableMappingCollection.System.Collections.ICollection.SyncRoot
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsFixedSize*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DataTableMappingCollection.System.Collections.IList.IsFixedSize
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#IsReadOnly*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DataTableMappingCollection.System.Collections.IList.IsReadOnly
- uid: System.Data.Common.DataTableMappingCollection.System#Collections#IList#Item*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: DataTableMappingCollection.System.Collections.IList.Item
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Add*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Data.ITableMappingCollection.Add
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.Add
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#GetByDataSetTable*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Data.ITableMappingCollection.GetByDataSetTable
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.GetByDataSetTable
- uid: System.Data.Common.DataTableMappingCollection.System#Data#ITableMappingCollection#Item*
  parent: System.Data.Common.DataTableMappingCollection
  isExternal: false
  name: System.Data.ITableMappingCollection.Item
  nameWithType: DataTableMappingCollection.System.Data.ITableMappingCollection.Item
