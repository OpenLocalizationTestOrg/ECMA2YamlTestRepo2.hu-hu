### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeyEventArgs
  id: KeyEventArgs
  children:
  - System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)
  - System.Windows.Forms.KeyEventArgs.Alt
  - System.Windows.Forms.KeyEventArgs.Control
  - System.Windows.Forms.KeyEventArgs.Handled
  - System.Windows.Forms.KeyEventArgs.KeyCode
  - System.Windows.Forms.KeyEventArgs.KeyData
  - System.Windows.Forms.KeyEventArgs.KeyValue
  - System.Windows.Forms.KeyEventArgs.Modifiers
  - System.Windows.Forms.KeyEventArgs.Shift
  - System.Windows.Forms.KeyEventArgs.SuppressKeyPress
  langs:
  - csharp
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Forms.KeyEventArgs
  type: Class
  summary: "Adja meg az adatait a <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> vagy <xref href=&quot;System.Windows.Forms.Control.KeyUp&quot;> </xref> esemény."
  remarks: "Egy KeyEventArgs, amely megadja a kulcsot, a felhasználó nélkül, majd átadása bármely módosító kulcsok (CTRL ALT és SHIFT) volt megnyomva egyszerre, hogy az összes <xref:System.Windows.Forms.Control.KeyDown>vagy <xref:System.Windows.Forms.Control.KeyUp>esemény.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown>       A <xref:System.Windows.Forms.Control.KeyDown>az esemény akkor következik be, amikor a felhasználó megnyomja az egyik billentyűre.</xref:System.Windows.Forms.Control.KeyDown> A <xref:System.Windows.Forms.Control.KeyUp>esemény akkor következik be, amikor a felhasználó elengedi a kulcsot.</xref:System.Windows.Forms.Control.KeyUp> Ismétlődő <xref:System.Windows.Forms.Control.KeyDown>események minden alkalommal, amikor a kulcs megismétlődik, fordulhat elő, ha a kulcs, de csak egy <xref:System.Windows.Forms.Control.KeyUp>esemény jön létre, amikor a felhasználó elengedi a kulcsot.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown>       A <xref:System.Windows.Forms.Control.KeyPress>esemény is következik be egy billentyű lenyomásakor.</xref:System.Windows.Forms.Control.KeyPress> A <xref:System.Windows.Forms.KeyPressEventArgs>közlekednek az egyes <xref:System.Windows.Forms.Control.KeyPress>esemény, és adja meg a karakter, amely miatt egyes billentyű megnyomása hozta létre.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs>       Az esemény modell kapcsolatos információkért lásd: [események](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code examples demonstrate how to detect the state of a key press.  \n  \n **Example 1**  \n  \n The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application. The example uses the KeyEventArgs properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key. When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control. If the user presses ALT+F2, a different Help pop-up is displayed with additional information.  \n  \n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/t-system.windows.forms.k_4_1.cs)]\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/t-system.windows.forms.k_4_1.cpp)]\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_4_1.vb)]  \n  \n **Example 2**  \n  \n The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-cs[Windows.Forms.Control Members4#3](~/add/codesnippet/csharp/t-system.windows.forms.k_4_2.cs)]\n [!code-vb[Windows.Forms.Control Members4#3](~/add/codesnippet/visualbasic/t-system.windows.forms.k_4_2.vb)]\n [!code-cpp[Windows.Forms.Control Members4#3](~/add/codesnippet/cpp/t-system.windows.forms.k_4_2.cpp)]  \n  \n **Example 3**  \n  \n The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/t-system.windows.forms.k_4_3.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/t-system.windows.forms.k_4_3.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/t-system.windows.forms.k_4_3.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KeyEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)
  id: '#ctor(System.Windows.Forms.Keys)'
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: KeyEventArgs(Keys)
  nameWithType: KeyEventArgs.KeyEventArgs(Keys)
  fullName: System.Windows.Forms.KeyEventArgs.KeyEventArgs(Keys)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;> </xref> osztály."
  syntax:
    content: public KeyEventArgs (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "A <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> képviselő kulcs, amely megnyomásakor, kombinálja az módosító jelzőkkel, amelyek jelzik, hogy mely ALT, CTRL és SHIFT kulcsok egyszerre volt kattintanak. Lehetséges értékek kell alkalmazása a bitenkénti vagy az állandókat (|) operátor a <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> enumerálása."
  overload: System.Windows.Forms.KeyEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.Alt
  id: Alt
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: Alt
  nameWithType: KeyEventArgs.Alt
  fullName: System.Windows.Forms.KeyEventArgs.Alt
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Egy érték, amely jelzi, hogy az ALT billentyű megnyomása lekérdezi."
  remarks: ''
  example:
  - "**Example 1**  \n  \n The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application. The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key. When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control. If the user presses ALT+F2, a different Help pop-up is displayed with additional information.  \n  \n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_1_1.cs)]\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_1_1.cpp)]\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_1_1.vb)]  \n  \n **Example 2**  \n  \n The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-cs[Windows.Forms.Control Members4#3](~/add/codesnippet/csharp/p-system.windows.forms.k_1_2.cs)]\n [!code-vb[Windows.Forms.Control Members4#3](~/add/codesnippet/visualbasic/p-system.windows.forms.k_1_2.vb)]\n [!code-cpp[Windows.Forms.Control Members4#3](~/add/codesnippet/cpp/p-system.windows.forms.k_1_2.cpp)]"
  syntax:
    content: public virtual bool Alt { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az ALT billentyű megnyomása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyEventArgs.Alt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.Control
  id: Control
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: Control
  nameWithType: KeyEventArgs.Control
  fullName: System.Windows.Forms.KeyEventArgs.Control
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Egy érték, amely jelzi, hogy a CTRL billentyű megnyomása lekérdezi."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application. The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key. When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control. If the user presses ALT+F2, a different Help pop-up is displayed with additional information.  \n  \n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_5_1.cs)]\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_5_1.cpp)]\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_5_1.vb)]"
  syntax:
    content: public bool Control { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a CTRL billentyű megnyomása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyEventArgs.Control*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.Handled
  id: Handled
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: Handled
  nameWithType: KeyEventArgs.Handled
  fullName: System.Windows.Forms.KeyEventArgs.Handled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy az esemény kezelte."
  remarks: "Kezelt Windows Forms belül eltérő vezérlők másképp megvalósítja. A vezérlők, például <xref:System.Windows.Forms.TextBox>mely alosztály natív Win32 szabályozza, a rendszer értelmezi azt jelenti, hogy a kulcs üzenet nem adható át az alapul szolgáló natív vezérlőre.</xref:System.Windows.Forms.TextBox> Ha `Handled` a TRUE egy <xref:System.Windows.Forms.TextBox>, hogy vezérlő nem felel meg a billentyű megnyomása `events` az alapul szolgáló Win32 szövegmező-vezérlőt, de továbbra is megjelenítése a felhasználó által beírt karaktereket.</xref:System.Windows.Forms.TextBox>       Ha meg szeretné akadályozni az aktuális vezérlő fogadjon billentyű megnyomása, használja a <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A>tulajdonság.</xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A>"
  example:
  - "The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the Handled property.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_3_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/p-system.windows.forms.k_3_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/p-system.windows.forms.k_3_1.cs)]"
  syntax:
    content: public bool Handled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a vezérlő elkerülésére tartozó alapértelmezett kezelése; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> is mentén esemény átadása az alapértelmezett szolgáltatásvezérlő leírója."
  overload: System.Windows.Forms.KeyEventArgs.Handled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.KeyCode
  id: KeyCode
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: KeyCode
  nameWithType: KeyEventArgs.KeyCode
  fullName: System.Windows.Forms.KeyEventArgs.KeyCode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a billentyűzet kódját egy <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> vagy <xref href=&quot;System.Windows.Forms.Control.KeyUp&quot;> </xref> esemény."
  remarks: ''
  example:
  - "The following code examples show how to use the KeyCode property to determine which key was pressed.  \n  \n **Example 1**  \n  \n The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application. The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key. When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control. If the user presses ALT+F2, a different Help pop-up is displayed with additional information.  \n  \n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_6_1.cs)]\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_6_1.cpp)]\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_6_1.vb)]  \n  \n **Example 2**  \n  \n The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.  \n  \n [!code-cs[Windows.Forms.Control Members4#3](~/add/codesnippet/csharp/p-system.windows.forms.k_6_2.cs)]\n [!code-vb[Windows.Forms.Control Members4#3](~/add/codesnippet/visualbasic/p-system.windows.forms.k_6_2.vb)]\n [!code-cpp[Windows.Forms.Control Members4#3](~/add/codesnippet/cpp/p-system.windows.forms.k_6_2.cpp)]  \n  \n **Example 3**  \n  \n The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_6_3.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/p-system.windows.forms.k_6_3.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/p-system.windows.forms.k_6_3.cs)]"
  syntax:
    content: public System.Windows.Forms.Keys KeyCode { get; }
    return:
      type: System.Windows.Forms.Keys
      description: "A <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> értéket, amely a következő eseményhez: a kulcs kódot."
  overload: System.Windows.Forms.KeyEventArgs.KeyCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.KeyData
  id: KeyData
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: KeyData
  nameWithType: KeyEventArgs.KeyData
  fullName: System.Windows.Forms.KeyEventArgs.KeyData
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a legfontosabb adatok egy <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> vagy <xref href=&quot;System.Windows.Forms.Control.KeyUp&quot;> </xref> esemény."
  remarks: "Használhatja az állandókat <xref:System.Windows.Forms.Keys>információk kibontani a KeyData tulajdonság.</xref:System.Windows.Forms.Keys> Hasonlítsa össze a konstansok KeyData által visszaadott adatok a bitenkénti és operátor használata <xref:System.Windows.Forms.Keys>mely kulcsokról a felhasználó megnyomva tájékoztatást kaphat.</xref:System.Windows.Forms.Keys> Annak megállapításához, hogy egy adott módosító billentyű megnyomása, használja a <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, és <xref:System.Windows.Forms.KeyEventArgs.Alt%2A>Tulajdonságok.</xref:System.Windows.Forms.KeyEventArgs.Alt%2A> </xref:System.Windows.Forms.KeyEventArgs.Shift%2A> </xref:System.Windows.Forms.KeyEventArgs.Control%2A>"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#48](~/add/codesnippet/csharp/p-system.windows.forms.k_0_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#48](~/add/codesnippet/visualbasic/p-system.windows.forms.k_0_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Keys KeyData { get; }
    return:
      type: System.Windows.Forms.Keys
      description: "A <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> módosító jelzőket, amelyek jelzik, melyik kombináció ALT, CTRL és SHIFT kulcsok megnyomásakor egyszerre képviselő kulcs, amely megnyomásakor, kulcs kódja együtt."
  overload: System.Windows.Forms.KeyEventArgs.KeyData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.KeyValue
  id: KeyValue
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: KeyValue
  nameWithType: KeyEventArgs.KeyValue
  fullName: System.Windows.Forms.KeyEventArgs.KeyValue
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a billentyűzet értéke egy <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> vagy <xref href=&quot;System.Windows.Forms.Control.KeyUp&quot;> </xref> esemény."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#48](~/add/codesnippet/csharp/p-system.windows.forms.k_10_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#48](~/add/codesnippet/visualbasic/p-system.windows.forms.k_10_1.vb)]"
  syntax:
    content: public int KeyValue { get; }
    return:
      type: System.Int32
      description: "Az egész ábrázolását a <xref:System.Windows.Forms.KeyEventArgs.KeyCode*>tulajdonság.</xref:System.Windows.Forms.KeyEventArgs.KeyCode*>"
  overload: System.Windows.Forms.KeyEventArgs.KeyValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.Modifiers
  id: Modifiers
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: Modifiers
  nameWithType: KeyEventArgs.Modifiers
  fullName: System.Windows.Forms.KeyEventArgs.Modifiers
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a módosító jelzők a <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> vagy <xref href=&quot;System.Windows.Forms.Control.KeyUp&quot;> </xref> esemény. A jelzők határozzák meg, melyik kombináció ALT, CTRL és SHIFT kulcsok megnyomásakor."
  remarks: "Annak megállapításához, hogy egy adott módosító billentyű megnyomása, használja a <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, és <xref:System.Windows.Forms.KeyEventArgs.Alt%2A>Tulajdonságok.</xref:System.Windows.Forms.KeyEventArgs.Alt%2A> </xref:System.Windows.Forms.KeyEventArgs.Shift%2A> </xref:System.Windows.Forms.KeyEventArgs.Control%2A> Módosító jelzők kombinálva bitenkénti vagy."
  example:
  - "The following code example shows how to use the Modifiers property to determine which modifier keys were pressed along with the primary key.  \n  \n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_7_1.cs)]\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_7_1.cpp)]\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_7_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Keys Modifiers { get; }
    return:
      type: System.Windows.Forms.Keys
      description: "A <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> egy vagy több módosító jelző érték."
  overload: System.Windows.Forms.KeyEventArgs.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.Shift
  id: Shift
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: Shift
  nameWithType: KeyEventArgs.Shift
  fullName: System.Windows.Forms.KeyEventArgs.Shift
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Egy érték, amely jelzi, hogy a SHIFT billentyű megnyomása lekérdezi."
  remarks: ''
  example:
  - "The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.  \n  \n [!code-cs[KeyEventArgs.Modifiers#1](~/add/codesnippet/csharp/p-system.windows.forms.k_8_1.cs)]\n [!code-cpp[KeyEventArgs.Modifiers#1](~/add/codesnippet/cpp/p-system.windows.forms.k_8_1.cpp)]\n [!code-vb[KeyEventArgs.Modifiers#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_8_1.vb)]"
  syntax:
    content: public virtual bool Shift { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a SHIFT billentyű megnyomása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyEventArgs.Shift*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeyEventArgs.SuppressKeyPress
  id: SuppressKeyPress
  parent: System.Windows.Forms.KeyEventArgs
  langs:
  - csharp
  name: SuppressKeyPress
  nameWithType: KeyEventArgs.SuppressKeyPress
  fullName: System.Windows.Forms.KeyEventArgs.SuppressKeyPress
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a kulcs esemény kell átadni alapul szolgáló vezérlő."
  remarks: "Rendelhet `true` eseménykezelőben, többek között a tulajdonságra <xref:System.Windows.Forms.Control.KeyDown>leállítja, nehogy felhasználói bevitel.</xref:System.Windows.Forms.Control.KeyDown>       Beállítás SuppressKeyPress `true` is beállítja <xref:System.Windows.Forms.KeyEventArgs.Handled%2A>való `true`.</xref:System.Windows.Forms.KeyEventArgs.Handled%2A>"
  example:
  - "The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.  \n  \n [!code-cs[KeyEventArgs.SuppressKeyPress#1](~/add/codesnippet/csharp/p-system.windows.forms.k_9_1.cs)]\n [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/add/codesnippet/visualbasic/p-system.windows.forms.k_9_1.vb)]"
  syntax:
    content: public bool SuppressKeyPress { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kulcs esemény amiket nem kellene elküldeni a vezérlő; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeyEventArgs.SuppressKeyPress*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: KeyEventArgs(Keys)
  nameWithType: KeyEventArgs.KeyEventArgs(Keys)
  fullName: System.Windows.Forms.KeyEventArgs.KeyEventArgs(Keys)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.KeyEventArgs.Alt
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Alt
  nameWithType: KeyEventArgs.Alt
  fullName: System.Windows.Forms.KeyEventArgs.Alt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.KeyEventArgs.Control
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Control
  nameWithType: KeyEventArgs.Control
  fullName: System.Windows.Forms.KeyEventArgs.Control
- uid: System.Windows.Forms.KeyEventArgs.Handled
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyEventArgs.Handled
  fullName: System.Windows.Forms.KeyEventArgs.Handled
- uid: System.Windows.Forms.KeyEventArgs.KeyCode
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: KeyCode
  nameWithType: KeyEventArgs.KeyCode
  fullName: System.Windows.Forms.KeyEventArgs.KeyCode
- uid: System.Windows.Forms.KeyEventArgs.KeyData
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: KeyData
  nameWithType: KeyEventArgs.KeyData
  fullName: System.Windows.Forms.KeyEventArgs.KeyData
- uid: System.Windows.Forms.KeyEventArgs.KeyValue
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: KeyValue
  nameWithType: KeyEventArgs.KeyValue
  fullName: System.Windows.Forms.KeyEventArgs.KeyValue
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.KeyEventArgs.Modifiers
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Modifiers
  nameWithType: KeyEventArgs.Modifiers
  fullName: System.Windows.Forms.KeyEventArgs.Modifiers
- uid: System.Windows.Forms.KeyEventArgs.Shift
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Shift
  nameWithType: KeyEventArgs.Shift
  fullName: System.Windows.Forms.KeyEventArgs.Shift
- uid: System.Windows.Forms.KeyEventArgs.SuppressKeyPress
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: SuppressKeyPress
  nameWithType: KeyEventArgs.SuppressKeyPress
  fullName: System.Windows.Forms.KeyEventArgs.SuppressKeyPress
- uid: System.Windows.Forms.KeyEventArgs.#ctor*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs.KeyEventArgs
- uid: System.Windows.Forms.KeyEventArgs.Alt*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Alt
  nameWithType: KeyEventArgs.Alt
- uid: System.Windows.Forms.KeyEventArgs.Control*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Control
  nameWithType: KeyEventArgs.Control
- uid: System.Windows.Forms.KeyEventArgs.Handled*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Handled
  nameWithType: KeyEventArgs.Handled
- uid: System.Windows.Forms.KeyEventArgs.KeyCode*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: KeyCode
  nameWithType: KeyEventArgs.KeyCode
- uid: System.Windows.Forms.KeyEventArgs.KeyData*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: KeyData
  nameWithType: KeyEventArgs.KeyData
- uid: System.Windows.Forms.KeyEventArgs.KeyValue*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: KeyValue
  nameWithType: KeyEventArgs.KeyValue
- uid: System.Windows.Forms.KeyEventArgs.Modifiers*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Modifiers
  nameWithType: KeyEventArgs.Modifiers
- uid: System.Windows.Forms.KeyEventArgs.Shift*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: Shift
  nameWithType: KeyEventArgs.Shift
- uid: System.Windows.Forms.KeyEventArgs.SuppressKeyPress*
  parent: System.Windows.Forms.KeyEventArgs
  isExternal: false
  name: SuppressKeyPress
  nameWithType: KeyEventArgs.SuppressKeyPress
