### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManagerParameter
  id: ClientBuildManagerParameter
  children:
  - System.Web.Compilation.ClientBuildManagerParameter.#ctor
  - System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  - System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  langs:
  - csharp
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
  type: Class
  summary: "Az ASP.NET-fordítási előfordításakor átadott értékeket tartalmaz."
  remarks: "ASP.NET-weblapok és kódfájlok is kell előre le fordítva segítségével lehetővé teszi a felhasználók gyorsabban szeretne választ kapni, és a hely központi telepítésére vonatkozóan üzembe helyezése a forráskód nélkül teszi lehetővé. Az ASP.NET-webhely precompiling további információkért lásd: [ASP.NET webhely projekt előfordítás áttekintése](~/add/includes/ajax-current-ext-md.md).       A ClientBuildManagerParameter osztály előfordításakor használt értékek tárolja. A <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>tulajdonság határozza meg, hogyan kell építeni a szerelvényt.</xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> Beállíthatja például <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>való <xref:System.Web.Compilation.PrecompilationFlags>minden előzőleg lefordított összetevő fordítsa újra, vagy állítsa az értékét <xref:System.Web.Compilation.PrecompilationFlags>a létrejövő szerelvény felülírja a célkönyvtárat az összetevők engedélyezéséhez.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> A <xref:System.Web.Compilation.PrecompilationFlags>enumerátor rendelkezik egy <xref:System.FlagsAttribute>attribútum, amely lehetővé teszi a tagok értékének tagértékeinek.</xref:System.FlagsAttribute> </xref:System.Web.Compilation.PrecompilationFlags> A <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>tulajdonság tartalmazhat egynél több értéket a <xref:System.Web.Compilation.PrecompilationFlags>számbavételi előfordítás viselkedések kombinációja megadásához.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>       Vagy a <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>tulajdonság vagy a <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>tulajdonság számára hozzon létre egy erős nevű szerelvény értéket kapja.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Mindkét értéket nem kell állítani egy erős nevű szerelvény létrehozásához.       Egy ClientBuildManagerParameter objektum átadott a <xref:System.Web.Compilation.ClientBuildManager>keresztül objektum a <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>konstruktor.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManager>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a ClientBuildManagerParameter object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/t-system.web.compilation_9_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/t-system.web.compilation_9_1.cs)]"
  syntax:
    content: public class ClientBuildManagerParameter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: ClientBuildManagerParameter()
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.Compilation.ClientBuildManagerParameter&quot;> </xref> osztály."
  remarks: "Ez a konstruktor nem inicializálni az összes tulajdonság értékét. Ezeket az értékeket be kell állítani keresztül a <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, és <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>Tulajdonságok az objektum létrehozása után.</xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/m-system.web.compilation_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/m-system.web.compilation_1.cs)]"
  syntax:
    content: public ClientBuildManagerParameter ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManagerParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  id: ExcludedVirtualPaths
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Lekérdezi vagy beállítja azt a virtuális elérési utak bele."
  syntax:
    content: public System.Collections.Generic.List<string> ExcludedVirtualPaths { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Virtuális elérési utak kizárva."
  overload: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  id: PrecompilationFlags
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Lekérdezi vagy beállítja az előfordító viselkedését meghatározó jelzők."
  remarks: "A PrecompilationFlags tulajdonság határozza meg, hogyan kell építeni a szerelvényt. Például állíthat be PrecompilationFlags <xref:System.Web.Compilation.PrecompilationFlags>minden előzőleg lefordított összetevő fordítsa újra, vagy állítsa az értékét <xref:System.Web.Compilation.PrecompilationFlags>a létrejövő szerelvény felülírja a célkönyvtárat az összetevők engedélyezéséhez.</xref:System.Web.Compilation.PrecompilationFlags> </xref:System.Web.Compilation.PrecompilationFlags> A <xref:System.Web.Compilation.PrecompilationFlags>enumerátor rendelkezik egy <xref:System.FlagsAttribute>attribútum, amely lehetővé teszi a tagok értékének tagértékeinek.</xref:System.FlagsAttribute> </xref:System.Web.Compilation.PrecompilationFlags> A PrecompilationFlags tulajdonság tartalmazhat egynél több értéket a <xref:System.Web.Compilation.PrecompilationFlags>számbavételi előfordítás viselkedések kombinációja megadásához.</xref:System.Web.Compilation.PrecompilationFlags>"
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_3_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_3_1.cs)]"
  syntax:
    content: public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }
    return:
      type: System.Web.Compilation.PrecompilationFlags
      description: "A <xref href=&quot;System.Web.Compilation.PrecompilationFlags&quot;> </xref> az ügyfél build."
  overload: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  id: StrongNameKeyContainer
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Lekérdezi vagy beállítja a fordítás során használt kulcs tárolója."
  remarks: "Vagy a StrongNameKeyContainer tulajdonság vagy a <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>tulajdonság számára hozzon létre egy erős nevű szerelvény értéket kapja.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> Mindkét értéket nem kell állítani egy erős nevű szerelvény létrehozásához."
  example:
  - "The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container. It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-cs[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/csharp/p-system.web.compilation_1_1.cs)]\n [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/visualbasic/p-system.web.compilation_1_1.vb)]"
  syntax:
    content: public string StrongNameKeyContainer { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>a kulcstároló értékének.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  id: StrongNameKeyFile
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Lekérdezi vagy beállítja a fordítás során használt kulcs fájlját."
  remarks: "Vagy a <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>vagy StrongNameKeyFile tulajdonságának egy erős nevű szerelvény létrehozásához értéket kapja.</xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> Mindkét értéket nem kell állítani egy erős nevű szerelvény létrehozásához."
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_2_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_2_1.cs)]"
  syntax:
    content: public string StrongNameKeyFile { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>az érték a fő fájlt.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ClientBuildManagerParameter()
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
- uid: System.Web.Compilation.PrecompilationFlags
  parent: System.Web.Compilation
  isExternal: false
  name: PrecompilationFlags
  nameWithType: PrecompilationFlags
  fullName: System.Web.Compilation.PrecompilationFlags
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
