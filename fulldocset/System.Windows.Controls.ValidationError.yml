### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationError
  id: ValidationError
  children:
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  - System.Windows.Controls.ValidationError.BindingInError
  - System.Windows.Controls.ValidationError.ErrorContent
  - System.Windows.Controls.ValidationError.Exception
  - System.Windows.Controls.ValidationError.RuleInError
  langs:
  - csharp
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
  type: Class
  summary: "Jelöli egy érvényesítési hibát, vagy a kötés által létrehozott motor mikor egy <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> érvényesítési hibát, vagy a <xref:System.Windows.Controls.Validation.MarkInvalid*>metódus explicit módon.</xref:System.Windows.Controls.Validation.MarkInvalid*>"
  remarks: "A [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] kötés adatmodell lehetővé teszi az ellenőrzési szabályok társítsa a <xref:System.Windows.Data.Binding>objektum.</xref:System.Windows.Data.Binding> Érvényesítési cél – forrás érték átvitel során következik be, a konverter metódus meghívása előtt. A következő ismerteti az érvényesítési folyamat.      1.  Egy értéket a source tulajdonság átvitt a cél tulajdonságból, amikor az adatok kötési motor először eltávolítja minden ValidationError, előfordulhat, hogy nincsenek hozzáadva a <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>csatolt tulajdonság kötött elem.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Azt ellenőrzi, hogy bármilyen egyéni ellenőrzési szabályokat meghatározása, hogy <xref:System.Windows.Data.Binding>Ebben az esetben a <xref:System.Windows.Controls.ValidationRule.Validate%2A>minden <xref:System.Windows.Controls.ValidationRule>mindaddig, amíg az egyik meghibásodik, vagy amíg az összes zárult</xref:System.Windows.Controls.ValidationRule> metódus</xref:System.Windows.Controls.ValidationRule.Validate%2A> meghívja,</xref:System.Windows.Data.Binding>      2.  Amikor egy egyéni szabály, amely nem felel meg, a kötési motor ValidationError-objektumot hoz létre, és hozzáadja azt, hogy a <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>a kötött elem gyűjteménye.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Ha <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>nem üres, a <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>elem csatolt tulajdonság értéke `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Is ha a <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>tulajdonsága a <xref:System.Windows.Data.Binding>értéke `true`, majd a kötési motor vet fel a <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>csatolt esemény elem.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>      3.  A szabályok adhatók át, ha a kötési motor majd meghívja a konverter, ha van ilyen.      4.  Az átalakító sikeres, ha a kötési motor meghívja a beállító a source tulajdonság.      5.  Ha a kötés tartalmaz egy <xref:System.Windows.Controls.ExceptionValidationRule>társítva és kivételt vált ki, 3 vagy 4. lépése során, a kötési motor ellenőrzi, hogy nincs-e egy <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> </xref:System.Windows.Controls.ExceptionValidationRule> Használhatja a <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>Adjon meg egy egyéni kezelő kivételek kezelése visszahívást.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> Ha egy <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>nincs megadva a <xref:System.Windows.Data.Binding>, a kötési motor a kivétel egy ValidationError hoz, és hozzáadja azt a <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>a kötött elem gyűjteménye.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>       Egy érvényes értéket átviteli mindkét irányban (a forrás vagy a forrás és cél a cél) törölni fogja a <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>csatolt tulajdonság.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of ValidationError objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public class ValidationError
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> osztály a megadott paraméterekkel."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "A szabály érvényesítési hibát észlelt."
    - id: bindingInError
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> vagy <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> az objektumhoz, az érvényesítési hibát."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> osztály a megadott paraméterekkel."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "A szabály érvényesítési hibát észlelt."
    - id: bindingInError
      type: System.Object
      description: "A <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> vagy <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> az objektumhoz, az érvényesítési hibát."
    - id: errorContent
      type: System.Object
      description: "A hibával kapcsolatos információkat."
    - id: exception
      type: System.Exception
      description: "Az érvényesítési hibát okozó kivételt. Ez a paraméter nem kötelező, és megadható <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.BindingInError
  id: BindingInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>. Az objektum érvénytelen megjelölt explicit módon, vagy egy érvényesítés szabályt tartalmaz."
  syntax:
    content: public object BindingInError { get; }
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>."
  overload: System.Windows.Controls.ValidationError.BindingInError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Lekérdezi vagy beállítja a olyan objektum, amely további kontextust biztosít a <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, például egy karakterlánc, amely a jelzett hibát."
  remarks: "<a name=&quot;xamlTextUsage_ErrorContent&quot;></a>## XAML szöveg használati tekintse meg a példa szakasz egy példát."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public object ErrorContent { get; set; }
    return:
      type: System.Object
      description: "Olyan objektum, amely további kontextust biztosít a <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>."
  overload: System.Windows.Controls.ValidationError.ErrorContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.Exception
  id: Exception
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Lekérdezi vagy beállítja a <xref:System.Exception>, de a a ennek oka az objektum <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, ha a hiba oka egy kivételt.</xref:System.Exception>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "A <xref:System.Exception>objektumot, ha a hiba oka egy kivételt.</xref:System.Exception>"
  overload: System.Windows.Controls.ValidationError.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.RuleInError
  id: RuleInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> , de a a ennek oka az objektum <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, ha a hiba oka egy érvényesítési szabály."
  syntax:
    content: public System.Windows.Controls.ValidationRule RuleInError { get; set; }
    return:
      type: System.Windows.Controls.ValidationRule
      description: "A <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objektumot, ha a hiba oka egy érvényesítési szabály."
  overload: System.Windows.Controls.ValidationError.RuleInError*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
- uid: System.Windows.Controls.ValidationRule
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Controls.ValidationError.BindingInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
- uid: System.Windows.Controls.ValidationError.#ctor*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError.ValidationError
- uid: System.Windows.Controls.ValidationError.BindingInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
