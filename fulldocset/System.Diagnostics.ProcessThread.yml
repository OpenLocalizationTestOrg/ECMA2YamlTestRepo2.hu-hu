### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.ProcessThread
  id: ProcessThread
  children:
  - System.Diagnostics.ProcessThread.BasePriority
  - System.Diagnostics.ProcessThread.CurrentPriority
  - System.Diagnostics.ProcessThread.Id
  - System.Diagnostics.ProcessThread.IdealProcessor
  - System.Diagnostics.ProcessThread.PriorityBoostEnabled
  - System.Diagnostics.ProcessThread.PriorityLevel
  - System.Diagnostics.ProcessThread.PrivilegedProcessorTime
  - System.Diagnostics.ProcessThread.ProcessorAffinity
  - System.Diagnostics.ProcessThread.ResetIdealProcessor
  - System.Diagnostics.ProcessThread.StartAddress
  - System.Diagnostics.ProcessThread.StartTime
  - System.Diagnostics.ProcessThread.ThreadState
  - System.Diagnostics.ProcessThread.TotalProcessorTime
  - System.Diagnostics.ProcessThread.UserProcessorTime
  - System.Diagnostics.ProcessThread.WaitReason
  langs:
  - csharp
  name: ProcessThread
  nameWithType: ProcessThread
  fullName: System.Diagnostics.ProcessThread
  type: Class
  summary: "Az operációs rendszer Folyamatszál jelöli."
  remarks: "ProcessThread használatával a rendszer az aktuálisan futó szál kapcsolatos információkhoz. Így lehetővé teszi, például a szál teljesítményjellemzők figyelésére.      > [!IMPORTANT] > Ez a típus megvalósítja az <xref:System.IDisposable>felületet.</xref:System.IDisposable> Ha befejezte a típussal, ezért fel kell azt közvetlenül vagy közvetve. Arra, hogy a típus közvetlenül, hívja az <xref:System.IDisposable.Dispose%2A>metódust egy `try` / `catch` blokk.</xref:System.IDisposable.Dispose%2A> Eltávolítása után közvetve, használjon egy nyelvi szerkezet például `using` (a C#) vagy `Using` (a Visual Basic nyelvben). A &quot;Használatával az objektum, amely megvalósítja IDisposable&quot; szakaszában talál további információt a <xref:System.IDisposable>felületet a témakörben.</xref:System.IDisposable>       A szál út végrehajtás programon keresztül. A Win32 ütemezését végző végrehajtás legkisebb egysége. A verem, állapotát, a CPU regiszterekben, és a végrehajtási közül a rendszer ütemezési bejegyzés áll.       A folyamat egy vagy több szálak és a kódot, adatokat és más erőforrások, a program a memóriában áll. Tipikus program erőforrások megnyitott fájlok, a szemaforok és a dinamikusan kiosztott memória. Az egyes erőforrások folyamat, hogy a folyamat szálai által közösen.       A program hajtja végre, amikor a rendszer a Feladatütemező végrehajtási ellenőrzést biztosít egy, a program szálak száma. Az ütemező határozza meg, melyik szálak fusson, és mikor. Előfordulhat, hogy mindenképpen egy alacsonyabb prioritású szál türelmet, amíg a magasabb prioritású el tudják végezni feladataikat. Többprocesszoros számítógépeken a Feladatütemező áthelyezheti egyes szálak különböző processzorok, a CPU-terhelést, így terheléselosztás.       Minden folyamat elindul egy szállal, az elsődleges szál néven ismert. Bármely szálon további szálak hozhat létre. A folyamat szálai megosztás a címtér az adott folyamatot.       Az elsődleges szál helye nem feltétlenül a gyűjtemény első indexnél.      > [!NOTE] > Kezdve a .NET-keretrendszer 2.0-s, a más számítógépeken található adatok számos, a .NET-keretrendszer módszerek és a Tulajdonságok már nem szükséges hivatkozás teljesítményszámláló lehetőséget. A módosítás engedélyezése nem rendszergazda a ProcessThread osztályt és teljesítmény javítása érdekében. Ennek eredményeképpen egyes alkalmazások, amelyek nem tudták beszerezni kivételek a .NET-keretrendszer korábbi verzióiban most beolvasása <xref:System.NotSupportedException>.</xref:System.NotSupportedException> A metódusok és a Tulajdonságok hatással túl sok elemet itt, de a kivételek adatai az érintett tag témakörök bővült.       A folyamat szálai külön-külön végrehajtani, és nem tudnak egymással a, kivéve, ha Ön a láthatóvá tételükhöz egymáshoz. Szálak, amelyek közös erőforrások azonban kell koordinálja a munkahelyi szemaforok vagy valamilyen más módszerre a folyamatok közötti kommunikáció segítségével.       Ahhoz, hogy a jelenlegi folyamathoz tartozó összes ProcessThread objektumok gyűjteménye, lekérése a <xref:System.Diagnostics.Process.Threads%2A>tulajdonsága a <xref:System.Diagnostics.Process>példány.</xref:System.Diagnostics.Process> </xref:System.Diagnostics.Process.Threads%2A>"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Diagnostics.Design.ProcessThreadDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class ProcessThread : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.BasePriority
  id: BasePriority
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: BasePriority
  nameWithType: ProcessThread.BasePriority
  fullName: System.Diagnostics.ProcessThread.BasePriority
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A szál alapprioritás-szintjének beolvasása."
  remarks: "A BasePriority a kezdő a folyamat szál prioritását. A Rendszerfigyelő prioritás alapszámláló keresztül alapprioritás-szintjének kapcsolatos információk is megtekinthetők.       Az operációs rendszer egy szál a szál prioritási szintű tartománya és a folyamat prioritásosztály együttes számítja ki. Beállíthatja, hogy a folyamat <xref:System.Diagnostics.Process.PriorityClass%2A?displayProperty=fullName>tulajdonság értékei közül a <xref:System.Diagnostics.ProcessPriorityClass>felsorolása, amelyek <xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, vagy <xref:System.Diagnostics.ProcessPriorityClass>.</xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.Process.PriorityClass%2A?displayProperty=fullName> Beállíthatja, hogy a szál <xref:System.Diagnostics.ProcessThread.PriorityLevel%2A>tulajdonságot, amely a szál bounds értéktartomány.</xref:System.Diagnostics.ProcessThread.PriorityLevel%2A> Win32 / osztály hét alapprioritás-szintjének szintű négy prioritás-osztályokat használja.       A szál aktuális prioritását alapprioritás-szintjének előfordulhat, hogy eltérnek. Például az operációs rendszer módosíthatja a <xref:System.Diagnostics.ProcessThread.CurrentPriority%2A>eltelt idő alapján tulajdonság, vagy más növekedhet, ha a folyamat tenni, mások előre a hozzáférés a feldolgozó.</xref:System.Diagnostics.ProcessThread.CurrentPriority%2A> Emellett beállíthatja a <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>tulajdonságot a rendszer átmenetileg növelése a szál prioritását, amikor a folyamat várakozási állapota lesz végrehajtva.</xref:System.Diagnostics.Process.PriorityBoostEnabled%2A> A prioritás alaphelyzetbe áll, ha a folyamat a várakozási állapotba tér vissza."
  syntax:
    content: public int BasePriority { get; }
    return:
      type: System.Int32
      description: "A szál, amely az operációs rendszer kiszámítja a folyamat prioritású osztály és a kapcsolódó szál prioritásszintje együttes alapprioritás."
  overload: System.Diagnostics.ProcessThread.BasePriority*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.CurrentPriority
  id: CurrentPriority
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: CurrentPriority
  nameWithType: ProcessThread.CurrentPriority
  fullName: System.Diagnostics.ProcessThread.CurrentPriority
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi az aktuális szál prioritását."
  remarks: "A szál aktuális prioritását alapprioritás-szintjének előfordulhat, hogy eltérnek. Például az operációs rendszer módosíthatja az eltelt idő alapján tulajdonság CurrentPriority vagy más növekedhet, ha a folyamat kell állítani előre mások számára a hozzáférés a feldolgozó. Emellett beállíthatja a <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>tulajdonságot a rendszer átmenetileg növelése a szál prioritását, amikor a folyamat várakozási állapota lesz végrehajtva.</xref:System.Diagnostics.Process.PriorityBoostEnabled%2A> A prioritás alaphelyzetbe áll, ha a folyamat a várakozási állapotba tér vissza."
  syntax:
    content: public int CurrentPriority { get; }
    return:
      type: System.Int32
      description: "A szál, amely lehet térni alapprioritás-szintjének alapján hogyan az operációs rendszer van ütemezés, a szál aktuális prioritását. A prioritás egy aktív szál ideiglenesen súlyozott is."
  overload: System.Diagnostics.ProcessThread.CurrentPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.Id
  id: Id
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: Id
  nameWithType: ProcessThread.Id
  fullName: System.Diagnostics.ProcessThread.Id
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a szál egyedi azonosítója."
  remarks: "Az operációs rendszer szál azonosítószámok, amelyek azonosítják a szálak az élettartama során csak használja."
  syntax:
    content: public int Id { get; }
    return:
      type: System.Int32
      description: "Egy bizonyos szálhoz tartozó egyedi azonosítója."
  overload: System.Diagnostics.ProcessThread.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.IdealProcessor
  id: IdealProcessor
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: IdealProcessor
  nameWithType: ProcessThread.IdealProcessor
  fullName: System.Diagnostics.ProcessThread.IdealProcessor
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Beállítja az előnyben részesített processzor futhat ebből a szálból."
  remarks: "A IdealProcessor értéke nulla.  Ez azt jelenti Ha szeretné beállítani a szál affinitását, az első processzor, a tulajdonság-ra állítani.       A rendszer ütemezi a szálak a saját elsődleges processzorokon, amikor csak lehetséges.       A folyamat szál áttelepítheti a processzor a processzor, az egyes áttelepítési újból betölteni a processzor gyorsítótárának. Egy szál processzort megadása a jobb teljesítmény érdekében rendszer túl nagy terhelés alatt csökkenti a szám, ahányszor a processzor gyorsítótárának van töltve."
  example:
  - "The following example demonstrates how to set the IdealProcessor property for an instance of Notepad to the first processor.  \n  \n [!code-vb[ProcessThreadIdealProcessor#1](~/add/codesnippet/visualbasic/p-system.diagnostics.pro_25_1.vb)]\n [!code-cs[ProcessThreadIdealProcessor#1](~/add/codesnippet/csharp/p-system.diagnostics.pro_25_1.cs)]"
  syntax:
    content: public int IdealProcessor { set; }
    return:
      type: System.Int32
      description: "Az előnyben részesített processzor szál, használható, ha a rendszer szálak meghatározni, melyik processzor, a szál futtatásra ütemezi."
  overload: System.Diagnostics.ProcessThread.IdealProcessor*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "A rendszer nem tudta beállítani a szál elindítja a megadott processzorral."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.PriorityBoostEnabled
  id: PriorityBoostEnabled
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: PriorityBoostEnabled
  nameWithType: ProcessThread.PriorityBoostEnabled
  fullName: System.Diagnostics.ProcessThread.PriorityBoostEnabled
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy az operációs rendszer kell ideiglenesen növelése a társított szál prioritását, amikor a fő ablakot, a szál folyamat fókuszba."
  remarks: "Ha PriorityBoostEnabled van `true`, a rendszer átmenetileg boosts a szál prioritását, amikor a társított folyamat várakozási állapota lesz végrehajtva. Ez a művelet megelőzhető, hogy más folyamatok feldolgozása az aktuális szál megszakítása. A PriorityBoostEnabled beállítás hatással van a meglévő szálak, valamint bármely ezt követően a folyamat által létrehozott szálak. Ezek normál viselkedése visszaállításához állítsa be a <xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>tulajdonságot `false`.</xref:System.Diagnostics.Process.PriorityBoostEnabled%2A>       PriorityBoostEnabled akkor van hatása, csak akkor, ha a szál fut, amelynek folyamatban egy <xref:System.Diagnostics.Process.PriorityClass%2A>állítsa a dinamikus prioritású számbavételi értékek egyikére (<xref:System.Diagnostics.ProcessPriorityClass>, <xref:System.Diagnostics.ProcessPriorityClass>, vagy <xref:System.Diagnostics.ProcessPriorityClass>).</xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.ProcessPriorityClass> </xref:System.Diagnostics.Process.PriorityClass%2A>      > [!NOTE] > Túl magas prioritású kiemelése is üríthetik alapvető operációs rendszer és a hálózati funkciók erőforrásokat. Ez más operációs rendszertől származó tevékenységnek problémákat okozhatnak."
  syntax:
    content: public bool PriorityBoostEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a szál prioritását növelése, ha a felhasználó kommunikál a folyamat érdekében a csatoló; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.ProcessThread.PriorityBoostEnabled*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült beolvasni a prioritás program adatait.       – vagy – a prioritás program információt nem állítható be."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.PriorityLevel
  id: PriorityLevel
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: PriorityLevel
  nameWithType: ProcessThread.PriorityLevel
  fullName: System.Diagnostics.ProcessThread.PriorityLevel
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a szál prioritását."
  remarks: "A prioritási szintet nem egyetlen értéket, hanem inkább értékek tartományán. Az operációs rendszer kiszámítja a szál a folyamat használatával <xref:System.Diagnostics.Process.PriorityClass%2A>értéket választhat a PriorityLevel tulajdonságban megadott tartomány.</xref:System.Diagnostics.Process.PriorityClass%2A>"
  syntax:
    content: public System.Diagnostics.ThreadPriorityLevel PriorityLevel { get; set; }
    return:
      type: System.Diagnostics.ThreadPriorityLevel
      description: "Egy a <xref href=&quot;System.Diagnostics.ThreadPriorityLevel&quot;> </xref> értékek, olyan tartománnyal, amely a szál prioritását bounds megadása."
  overload: System.Diagnostics.ProcessThread.PriorityLevel*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült beolvasni a szál prioritását szintre vonatkozó információ.       – vagy – nem sikerült beállítani a szál prioritását."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.PrivilegedProcessorTime
  id: PrivilegedProcessorTime
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: PrivilegedProcessorTime
  nameWithType: ProcessThread.PrivilegedProcessorTime
  fullName: System.Diagnostics.ProcessThread.PrivilegedProcessorTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a időt, hogy a szál az operációs rendszer magjában kódfuttatásra fordított."
  remarks: "Windows több különböző védelmi mechanizmus, és gyökerében található összes felhasználói és jogosultsági szintű üzemmód közötti különbséget. PrivilegedProcessorTime felel meg, hogy az alkalmazás rendelkezik védett módban, az operációs rendszer magjában futtatására fordított idő mennyiségét. A <xref:System.Diagnostics.ProcessThread.UserProcessorTime%2A>a tulajdonság azt jelzi, hogy az alkalmazás kívül a rendszer felhasználói módban kódfuttatásra fordított idő.</xref:System.Diagnostics.ProcessThread.UserProcessorTime%2A>       Felhasználói mód az alkalmazás két korlátozza. Először az alkalmazás nem tud közvetlenül hozzáférni a perifériák, de ehelyett meg kell hívnia az operációs rendszer core beolvasni vagy megadni perifériák adatok. Az operációs rendszer így biztosítható, hogy egy alkalmazás nem semmisíti meg a perifériák adatokhoz, amelyet más. Másodszor az alkalmazás nem tudja elolvasni vagy módosítani az adatokat, hogy maga az operációs rendszer kezeli. Ez a korlátozás nem engedélyezi, hogy véletlenül vagy szándékosan rongál a core. Az alkalmazást kell végrehajtania egy műveletet az operációs rendszer, ha meghívja a rendszer eljárások egyikét. Ezek átmenet kiemelt módba számos végrehajtani a műveletet, és zökkenőmentes felhasználói módban való visszatéréshez."
  syntax:
    content: public TimeSpan PrivilegedProcessorTime { get; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, amely jelzi, hogy a szál az operációs rendszer magjában kódfuttatásra fordított idő.</xref:System.TimeSpan>"
  overload: System.Diagnostics.ProcessThread.PrivilegedProcessorTime*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült beolvasni a szál idő."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.ProcessorAffinity
  id: ProcessorAffinity
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: ProcessorAffinity
  nameWithType: ProcessThread.ProcessorAffinity
  fullName: System.Diagnostics.ProcessThread.ProcessorAffinity
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Megadja a processzorok, amelyre a társított szál futtatható."
  remarks: "Egy szál a processzor-affinitás egy a processzorok kapcsolattal rendelkezik. Ez azt jelenti amelyek futtatásra ütemezi.       ProcessorAffinity minden processzor, egy kicsit jelöli. Bit 0 jelöli egy processzor, bit 1 a két processzor, és így tovább. Az alábbi táblázat a lehetséges ProcessorAffinity négyprocesszoros rendszer egy részét.      | Tulajdonság értéke (hexadecimálisan) |} Érvényes processzorok |}   |---------------------------------------|----------------------|   |} 0x0001 |} 1 |}   |} 0x0002 |} 2 |}   |} 0x0003 |} 1 vagy 2 |}   |} 0x0004 |} 3 |}   |} 0x0005 |} 1-es vagy 3 |}   |} 0x0007 |} 1, 2 vagy 3 |}   |} 0x000F |} 1, 2, 3 vagy 4 |}       Azt is megadhatja a szál önálló, elsődleges processzor úgy, hogy a <xref:System.Diagnostics.ProcessThread.IdealProcessor%2A>tulajdonság.</xref:System.Diagnostics.ProcessThread.IdealProcessor%2A> A folyamat szál áttelepítheti a processzor a processzor, az egyes áttelepítési újból betölteni a processzor gyorsítótárának. Egy szál processzort megadása a jobb teljesítmény érdekében rendszer túl nagy terhelés alatt csökkenti a szám, ahányszor a processzor gyorsítótárának van töltve."
  example:
  - "The following example shows how to set the ProcessorAffinity property for an instance of Notepad to the first processor.  \n  \n [!code-vb[ProcessThreadIdealProcessor#1](~/add/codesnippet/visualbasic/p-system.diagnostics.pro_22_1.vb)]\n [!code-cs[ProcessThreadIdealProcessor#1](~/add/codesnippet/csharp/p-system.diagnostics.pro_22_1.cs)]"
  syntax:
    content: public IntPtr ProcessorAffinity { set; }
    return:
      type: System.IntPtr
      description: "Egy <xref:System.IntPtr>bit készlete, amelyek mindegyike jelöli, hogy a processzor, a szál futtatható mutat.</xref:System.IntPtr>"
  overload: System.Diagnostics.ProcessThread.ProcessorAffinity*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "A processzor-affinitás nem állítható be."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.ResetIdealProcessor
  id: ResetIdealProcessor
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: ResetIdealProcessor()
  nameWithType: ProcessThread.ResetIdealProcessor()
  fullName: System.Diagnostics.ProcessThread.ResetIdealProcessor()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Alaphelyzetbe állítja a ebből a szálból annak jelzésére, hogy nem ideális egyprocesszoros ideális processzor. Más szóval, hogy egyetlen processzor ideális."
  syntax:
    content: public void ResetIdealProcessor ();
    parameters: []
  overload: System.Diagnostics.ProcessThread.ResetIdealProcessor*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Épp ezért tökéletes választás a processzor nem állítható alaphelyzetbe."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.StartAddress
  id: StartAddress
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: StartAddress
  nameWithType: ProcessThread.StartAddress
  fullName: System.Diagnostics.ProcessThread.StartAddress
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ebből a szálból elindított, az operációs rendszer nevű függvény memóriacíme lekérdezi."
  remarks: "Minden folyamat elindul egy szállal, az elsődleges szál néven ismert. Bármely szálon további szálak hozhat létre.       A folyamat van egy virtuáliscím-tartomány, végrehajtható kódok, adatok, objektum kezeli, környezeti változók, alapprioritás, és minimális és maximális készlet mérete. A folyamat összes szála által a virtuális cím lemezterület és a rendszer erőforrások megosztása. Ezenkívül minden egyes szál fenntartja kivételkezelők ütemezési prioritás és struktúrák, amelyben a a rendszer a szál környezetben menti, amíg a szál várakozó állapotának ütemezhető készlete. A szál környezetben a szál folyamatának címterében gép regiszterekben, a kernel-készlet, a szál környezeti blokk és egy felhasználói verem a szál készletét tartalmazza.       Minden Windows szálat ténylegesen megkezdi a rendszer által megadott függvények, nem az alkalmazás által átadott függvény végrehajtása. A kezdő cím elsődleges szál, ezért megegyezik (azt jelenti, hogy a cím, a rendszer által megadott függvény) a rendszer minden Windows-folyamat. Azonban a StartAddress tulajdonság lehetővé teszi a kiindulási függvény címét, amely adott alkalmazásra."
  syntax:
    content: public IntPtr StartAddress { get; }
    return:
      type: System.IntPtr
      description: "A szál kezdő cím, amely az alkalmazás által definiált függvény, amely végrehajtja a szál mutat."
  overload: System.Diagnostics.ProcessThread.StartAddress*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.StartTime
  id: StartTime
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: StartTime
  nameWithType: ProcessThread.StartTime
  fullName: System.Diagnostics.ProcessThread.StartTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a szál indításakor, hogy az operációs rendszer."
  syntax:
    content: public DateTime StartTime { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>, de a rendszer a az operációs rendszer a szál indítása, ha a idejét jelző.</xref:System.DateTime>"
  overload: System.Diagnostics.ProcessThread.StartTime*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült beolvasni a szál idő."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.ThreadState
  id: ThreadState
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: ThreadState
  nameWithType: ProcessThread.ThreadState
  fullName: System.Diagnostics.ProcessThread.ThreadState
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A szál aktuális állapotának beolvasása."
  remarks: "A <xref:System.Diagnostics.ProcessThread.WaitReason%2A>tulajdonság értéke érvénytelen, csak akkor, amikor a ThreadState <xref:System.Diagnostics.ThreadState>.</xref:System.Diagnostics.ThreadState> értéke</xref:System.Diagnostics.ProcessThread.WaitReason%2A> Ezért ellenőrizze a ThreadState értékét, mielőtt elérhetővé a <xref:System.Diagnostics.ProcessThread.WaitReason%2A>tulajdonság.</xref:System.Diagnostics.ProcessThread.WaitReason%2A>"
  syntax:
    content: public System.Diagnostics.ThreadState ThreadState { get; }
    return:
      type: System.Diagnostics.ThreadState
      description: "A <xref href=&quot;System.Diagnostics.ThreadState&quot;> </xref> azt jelzi, hogy a szál végrehajtási, például fut, várakozás közben, vagy leállt."
  overload: System.Diagnostics.ProcessThread.ThreadState*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.TotalProcessorTime
  id: TotalProcessorTime
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: TotalProcessorTime
  nameWithType: ProcessThread.TotalProcessorTime
  fullName: System.Diagnostics.ProcessThread.TotalProcessorTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a teljes időmennyiséget, amely ebből a szálból fordított a processzor használatával."
  remarks: "A TotalProcessorTime tulajdonság azt jelzi, hogy a teljes időmennyiséget, hogy a rendszer a szál kivenni a várakozási idő és kiemelt fontossággal azt az összes processzor. Több processzor rendszerre Ez az érték beletartozik minden processzor töltött idő, ha a szál egynél több processzort használ.       A TotalProcessorTime tulajdonság értéke a összege a <xref:System.Diagnostics.ProcessThread.UserProcessorTime%2A>és <xref:System.Diagnostics.ProcessThread.PrivilegedProcessorTime%2A>Tulajdonságok.</xref:System.Diagnostics.ProcessThread.PrivilegedProcessorTime%2A> </xref:System.Diagnostics.ProcessThread.UserProcessorTime%2A>"
  syntax:
    content: public TimeSpan TotalProcessorTime { get; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, amely azt jelzi, hogy a szál a processzor vezérlő volt idő.</xref:System.TimeSpan>"
  overload: System.Diagnostics.ProcessThread.TotalProcessorTime*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült beolvasni a szál idő."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.UserProcessorTime
  id: UserProcessorTime
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: UserProcessorTime
  nameWithType: ProcessThread.UserProcessorTime
  fullName: System.Diagnostics.ProcessThread.UserProcessorTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a időt, hogy a kapcsolódó szál rendelkezik-e az alkalmazáson belüli kódfuttatásra fordított."
  remarks: "Windows NT több különböző védelmi mechanizmus, és gyökerében található összes felhasználói és jogosultsági szintű üzemmód közötti különbséget. Az, hogy mennyi ideig az alkalmazás felhasználói módban, az operációs rendszer kívül fordított UserProcessorTime felel meg. A <xref:System.Diagnostics.ProcessThread.PrivilegedProcessorTime%2A>felel meg, hogy az alkalmazást a rendszer magjában védett módban kódfuttatásra fordított idő.</xref:System.Diagnostics.ProcessThread.PrivilegedProcessorTime%2A>       Felhasználói mód az alkalmazás két korlátozza. Először az alkalmazás nem tud közvetlenül hozzáférni a perifériák, de ehelyett meg kell hívnia az operációs rendszer core beolvasni vagy megadni perifériák adatok. Az operációs rendszer így biztosítható, hogy egy alkalmazás nem semmisíti meg a perifériák adatokhoz, amelyet más. Másodszor az alkalmazás nem tudja elolvasni vagy módosítani az adatokat, hogy maga az operációs rendszer kezeli. Ez a korlátozás nem engedélyezi, hogy véletlenül vagy szándékosan rongál a core. Az alkalmazást kell végrehajtania egy műveletet az operációs rendszer, ha meghívja a rendszer eljárások egyikét. Ezek átmenet kiemelt módba számos végrehajtani a műveletet, és zökkenőmentes felhasználói módban való visszatéréshez."
  syntax:
    content: public TimeSpan UserProcessorTime { get; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>és nem a az operációs rendszer magjában, amely jelzi, hogy a szál az alkalmazáson belüli kódfuttatásra fordított idő.</xref:System.TimeSpan>"
  overload: System.Diagnostics.ProcessThread.UserProcessorTime*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült beolvasni a szál idő."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
- uid: System.Diagnostics.ProcessThread.WaitReason
  id: WaitReason
  parent: System.Diagnostics.ProcessThread
  langs:
  - csharp
  name: WaitReason
  nameWithType: ProcessThread.WaitReason
  fullName: System.Diagnostics.ProcessThread.WaitReason
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a szál várakozó állapotának oka."
  remarks: "A WaitReason tulajdonság érvényes csak akkor, ha a <xref:System.Diagnostics.ProcessThread.ThreadState%2A>rendszer <xref:System.Diagnostics.ThreadState>.</xref:System.Diagnostics.ThreadState> </xref:System.Diagnostics.ProcessThread.ThreadState%2A> Ezért mindig ellenőrizze a <xref:System.Diagnostics.ProcessThread.ThreadState%2A>érték a WaitReason tulajdonság beolvasása előtt.</xref:System.Diagnostics.ProcessThread.ThreadState%2A>"
  syntax:
    content: public System.Diagnostics.ThreadWaitReason WaitReason { get; }
    return:
      type: System.Diagnostics.ThreadWaitReason
      description: "A <xref href=&quot;System.Diagnostics.ThreadWaitReason&quot;> </xref> képviselő az az oka, hogy a szál várakozó állapotban van."
  overload: System.Diagnostics.ProcessThread.WaitReason*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A szál nem várakozó állapotban van."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform az Windows 98 vagy Windows Me."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A folyamat az távoli számítógépre kerül."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Diagnostics.ProcessThread.BasePriority
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: BasePriority
  nameWithType: ProcessThread.BasePriority
  fullName: System.Diagnostics.ProcessThread.BasePriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.ProcessThread.CurrentPriority
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: CurrentPriority
  nameWithType: ProcessThread.CurrentPriority
  fullName: System.Diagnostics.ProcessThread.CurrentPriority
- uid: System.Diagnostics.ProcessThread.Id
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: Id
  nameWithType: ProcessThread.Id
  fullName: System.Diagnostics.ProcessThread.Id
- uid: System.Diagnostics.ProcessThread.IdealProcessor
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: IdealProcessor
  nameWithType: ProcessThread.IdealProcessor
  fullName: System.Diagnostics.ProcessThread.IdealProcessor
- uid: System.Diagnostics.ProcessThread.PriorityBoostEnabled
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PriorityBoostEnabled
  nameWithType: ProcessThread.PriorityBoostEnabled
  fullName: System.Diagnostics.ProcessThread.PriorityBoostEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.ProcessThread.PriorityLevel
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PriorityLevel
  nameWithType: ProcessThread.PriorityLevel
  fullName: System.Diagnostics.ProcessThread.PriorityLevel
- uid: System.Diagnostics.ThreadPriorityLevel
  parent: System.Diagnostics
  isExternal: false
  name: ThreadPriorityLevel
  nameWithType: ThreadPriorityLevel
  fullName: System.Diagnostics.ThreadPriorityLevel
- uid: System.Diagnostics.ProcessThread.PrivilegedProcessorTime
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PrivilegedProcessorTime
  nameWithType: ProcessThread.PrivilegedProcessorTime
  fullName: System.Diagnostics.ProcessThread.PrivilegedProcessorTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Diagnostics.ProcessThread.ProcessorAffinity
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ProcessorAffinity
  nameWithType: ProcessThread.ProcessorAffinity
  fullName: System.Diagnostics.ProcessThread.ProcessorAffinity
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.ProcessThread.ResetIdealProcessor
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ResetIdealProcessor()
  nameWithType: ProcessThread.ResetIdealProcessor()
  fullName: System.Diagnostics.ProcessThread.ResetIdealProcessor()
- uid: System.Diagnostics.ProcessThread.StartAddress
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: StartAddress
  nameWithType: ProcessThread.StartAddress
  fullName: System.Diagnostics.ProcessThread.StartAddress
- uid: System.Diagnostics.ProcessThread.StartTime
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: StartTime
  nameWithType: ProcessThread.StartTime
  fullName: System.Diagnostics.ProcessThread.StartTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Diagnostics.ProcessThread.ThreadState
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ThreadState
  nameWithType: ProcessThread.ThreadState
  fullName: System.Diagnostics.ProcessThread.ThreadState
- uid: System.Diagnostics.ThreadState
  parent: System.Diagnostics
  isExternal: false
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Diagnostics.ThreadState
- uid: System.Diagnostics.ProcessThread.TotalProcessorTime
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: TotalProcessorTime
  nameWithType: ProcessThread.TotalProcessorTime
  fullName: System.Diagnostics.ProcessThread.TotalProcessorTime
- uid: System.Diagnostics.ProcessThread.UserProcessorTime
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: UserProcessorTime
  nameWithType: ProcessThread.UserProcessorTime
  fullName: System.Diagnostics.ProcessThread.UserProcessorTime
- uid: System.Diagnostics.ProcessThread.WaitReason
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: WaitReason
  nameWithType: ProcessThread.WaitReason
  fullName: System.Diagnostics.ProcessThread.WaitReason
- uid: System.Diagnostics.ThreadWaitReason
  parent: System.Diagnostics
  isExternal: false
  name: ThreadWaitReason
  nameWithType: ThreadWaitReason
  fullName: System.Diagnostics.ThreadWaitReason
- uid: System.Diagnostics.ProcessThread.BasePriority*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: BasePriority
  nameWithType: ProcessThread.BasePriority
- uid: System.Diagnostics.ProcessThread.CurrentPriority*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: CurrentPriority
  nameWithType: ProcessThread.CurrentPriority
- uid: System.Diagnostics.ProcessThread.Id*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: Id
  nameWithType: ProcessThread.Id
- uid: System.Diagnostics.ProcessThread.IdealProcessor*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: IdealProcessor
  nameWithType: ProcessThread.IdealProcessor
- uid: System.Diagnostics.ProcessThread.PriorityBoostEnabled*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PriorityBoostEnabled
  nameWithType: ProcessThread.PriorityBoostEnabled
- uid: System.Diagnostics.ProcessThread.PriorityLevel*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PriorityLevel
  nameWithType: ProcessThread.PriorityLevel
- uid: System.Diagnostics.ProcessThread.PrivilegedProcessorTime*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: PrivilegedProcessorTime
  nameWithType: ProcessThread.PrivilegedProcessorTime
- uid: System.Diagnostics.ProcessThread.ProcessorAffinity*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ProcessorAffinity
  nameWithType: ProcessThread.ProcessorAffinity
- uid: System.Diagnostics.ProcessThread.ResetIdealProcessor*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ResetIdealProcessor
  nameWithType: ProcessThread.ResetIdealProcessor
- uid: System.Diagnostics.ProcessThread.StartAddress*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: StartAddress
  nameWithType: ProcessThread.StartAddress
- uid: System.Diagnostics.ProcessThread.StartTime*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: StartTime
  nameWithType: ProcessThread.StartTime
- uid: System.Diagnostics.ProcessThread.ThreadState*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: ThreadState
  nameWithType: ProcessThread.ThreadState
- uid: System.Diagnostics.ProcessThread.TotalProcessorTime*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: TotalProcessorTime
  nameWithType: ProcessThread.TotalProcessorTime
- uid: System.Diagnostics.ProcessThread.UserProcessorTime*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: UserProcessorTime
  nameWithType: ProcessThread.UserProcessorTime
- uid: System.Diagnostics.ProcessThread.WaitReason*
  parent: System.Diagnostics.ProcessThread
  isExternal: false
  name: WaitReason
  nameWithType: ProcessThread.WaitReason
