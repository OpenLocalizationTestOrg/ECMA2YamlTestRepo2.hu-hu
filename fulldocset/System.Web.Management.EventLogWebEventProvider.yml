### YamlMime:ManagedReference
items:
- uid: System.Web.Management.EventLogWebEventProvider
  id: EventLogWebEventProvider
  children:
  - System.Web.Management.EventLogWebEventProvider.Flush
  - System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.EventLogWebEventProvider.Shutdown
  langs:
  - csharp
  name: EventLogWebEventProvider
  nameWithType: EventLogWebEventProvider
  fullName: System.Web.Management.EventLogWebEventProvider
  type: Class
  summary: "Valósítja meg az esemény-szolgáltatót, amelyet ASP.NET rendszerállapot-figyelési események jelentkezik be a Windows alkalmazási eseménynaplóba."
  remarks: "ASP.NET állapotfigyelés lehetővé teszi, hogy az üzemi és műveletek személyzet telepített webalkalmazások kezelésére. A <xref:System.Web.Management>névtér tartalmazza a rendszerállapot-eseménytípusok felelős csomagolási alkalmazásadatok állapot és az adatok feldolgozása felelős modulszolgáltató-típust.</xref:System.Web.Management> Is tartalmaz, amelyek segítenek a állapotával kapcsolatos események felügyelete során támogató típusok.       Az EventLogWebEventProvider, a sikertelen műveletek naplózása és az állapotfigyelés hibaesemények vannak konfigurálva (engedélyezve) alapértelmezés szerint. Ez azt jelenti, hogy a sikertelen műveletek naplózása és a rendszerállapot-figyelési események alapértelmezés szerint naplózza a a Windows alkalmazási eseménynaplóba hiba.      > [!NOTE] > A legtöbb esetben lesz ahhoz, hogy az ASP.NET-állapotfigyelés típusok használható megvalósítva, és szabályozza, a rendszerállapot-figyelő rendszer szereplő értékek megadásával a `healthMonitoring` konfigurációs szakasz. Az állapotfigyelés típusok létrehozása a saját egyéni események és szolgáltatók is származik. Egy egyéni szolgáltató létrehozására láthat példát, lásd: [hogyan: valósítja meg a rendszerállapot figyelése egyéni szolgáltató például](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following configuration file excerpt shows how to specify a provider of type EventLogWebEventProvider to handle success audit events. The EventLogWebEventProvider and the failure audit health-event types to monitor are configured by default. To monitor the success audits, you need to configure them, as shown in the example code.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartbeatInterval=\"10\">  \n  \n  <rule>  \n    <add name=\"Success Audits Default\"  \n      eventName=\"Success Audits\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"  \n      minInterval=\"00:01:00\" />  \n  </rule>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Események a szolgáltató pufferből felkerült az eseménynaplóban talál."
  remarks: "Ez a metódus meghívásakor, a szolgáltató pufferben lévő események azonnal írt számára a Windows alkalmazási eseménynaplóba, függetlenül attól, hogy mennyi idő összes utolsó írási vagy események a pufferben óta eltelt. Az utolsó írás idején a könyvelési művelet idején lesz visszaállítva. A pufferelési mechanizmus nincs engedélyezve, ha a metódus hívása nincs hatással."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Beállítja a kezdeti értékekre ehhez az objektumhoz."
  remarks: "Ezt a módszert nevezik inicializálni a <xref:System.Web.Management.EventLogWebEventProvider>a konfigurációs beállításokat és a neve, ahogy a konfigurációs fájlban.</xref:System.Web.Management.EventLogWebEventProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "A konfigurációs fájl alapján határozza meg a szolgáltató nevét."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> , amely megadja, hogy az attribútumok hozzárendelve ehhez a szolgáltatóhoz, a konfigurációs fájlban."
  overload: System.Web.Management.EventLogWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Az esemény a profilszolgáltatóhoz továbbított dolgozza fel."
  remarks: "Ez a lehetőség, hogy az ASP.NET állapotfigyelés meghívja a elindítani az esemény feldolgozása."
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "A <xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> objektum folyamathoz."
  overload: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "A szolgáltató leállítása társított feladatokat hajtja végre."
  remarks: "ASP.NET meghívja a leállítási metódust, amikor a webalkalmazás üzemeltetéséhez alkalmazástartomány leáll. A metódus lehívásra kerül, amely lehetővé teszi az alkalmazás szabályosan befejezéséhez feladatok elvégzéséhez."
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
- uid: System.Web.Management.EventLogWebEventProvider.Flush*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: EventLogWebEventProvider.Flush
- uid: System.Web.Management.EventLogWebEventProvider.Initialize*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: EventLogWebEventProvider.Initialize
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: EventLogWebEventProvider.ProcessEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: EventLogWebEventProvider.Shutdown
