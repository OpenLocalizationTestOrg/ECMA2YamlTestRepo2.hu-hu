### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  id: ObjectDataSourceEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  type: Class
  summary: "Adja meg az adatait a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreating&quot;> </xref> és <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectCreated&quot;> </xref> eseményeit a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő."
  remarks: "A ObjectDataSourceEventArgs osztály a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>és <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>módszerek hozzáférést biztosít az üzleti objektumkódban~a(z) előtt a által használt adatok műveleteket a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő és az üzleti objektumot hajtja végre.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> Az üzleti objektumhoz van beállítva, és használatával érhető el a <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> Egy esemény kezelő delegált kezelésére hozzáadásával a <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>esemény, létrehozhat egy példányát az üzleti objektumhoz az egyéni kód helyett a <xref:System.Web.UI.WebControls.ObjectDataSource>a telepítés végrehajtásához.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> Ez akkor hasznos, ha azt szeretné, hogy egy nem alapértelmezett példány az üzleti objektumhoz, vagy hívja meg a nem alapértelmezett konstruktort a példány; létrehozása a <xref:System.Web.UI.WebControls.ObjectDataSource>mindig hívja meg az alapértelmezett konstruktort a működik együtt a különböző üzleti objektumhoz egy példányának létrehozásakor.</xref:System.Web.UI.WebControls.ObjectDataSource> Egy esemény kezelő delegált kezelésére is hozzáadhat a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>esemény, amely lehetővé teszi bármely nyilvánosan eléréséhez elérhetővé tett tagok semmilyen további inicializálási vagy a tevékenység elvégzéséhez az üzleti objektumhoz.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>       A <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>és <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A>metódusok nem által meghívott a <xref:System.Web.UI.WebControls.ObjectDataSource>szabályozhatja, ha az üzleti adatok műveleteket hajtja végre objektum módszer `static`.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő kezelni tud dolgozni az alapul szolgáló üzleti objektumhoz, az életciklus különböző időpontokban sok események közzététele.</xref:System.Web.UI.WebControls.ObjectDataSource> Az alábbi táblázat az események és a társított <xref:System.EventArgs>osztályok és az esemény kezelő delegáltak.</xref:System.EventArgs>      | Esemény |} EventArgs |} EventHandler |}   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> Azonnal az üzleti objektumhoz példányának létrehozása előtt következik be. |} ObjectDataSourceEventArgs |} <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> Akkor következik be, az üzleti objektumhoz példányának létrehozása után azonnal. |} ObjectDataSourceEventArgs |} <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler><br /><br /> Akkor következik be, mielőtt az adatok lekérésére. |} <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> Előzheti insert, update vagy delete műveletet végrehajtani. |} <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> Akkor következik be, miután az adatok lekérésére. |} <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Után fordulhat elő, az insert, update vagy delete műveletet végrehajtani. |} <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Akkor következik be, mielőtt olyan üzleti objektumot megsemmisül. |} <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> property of the ObjectDataSourceEventArgs object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_139_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_139_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> osztály a megadott objektum használatával."
  syntax:
    content: public ObjectDataSourceEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "Az üzleti objektumhoz, amellyel a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> együttműködő adatok műveletek végrehajtásához."
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja, amellyel az üzleti objektumot képviselő objektumot a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő adatok műveleteket hajtja végre."
  remarks: ''
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. The second code example provides the example basic business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to retrieve and display information. In this example, as in many real-world scenarios, it might not be possible nor appropriate to use a default instance of the business object with the <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource> cannot successfully call the default constructor because it will throw an exception. In some cases, the default constructor might be protected and in others it might not initialize the business object to a desired state. Whatever the reason, you can create an instance of the business object yourself and set the instance to the ObjectInstance property of the <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> object that is passed to the handler. This is the business object instance that the <xref:System.Web.UI.WebControls.ObjectDataSource> will use to perform its work.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_1.aspx)]  \n  \n The following code example demonstrates the example basic business object that the preceding code example uses.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1184_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_15#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1184_2.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "Az üzleti objektumhoz az <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> használja adatok műveleteket; ellenkező esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ha <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> számára a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs(Object)
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectDataSourceEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceEventArgs.ObjectInstance
