### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcDataReader
  id: OdbcDataReader
  children:
  - System.Data.Odbc.OdbcDataReader.Close
  - System.Data.Odbc.OdbcDataReader.Depth
  - System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcDataReader.FieldCount
  - System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetEnumerator
  - System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  - System.Data.Odbc.OdbcDataReader.GetSchemaTable
  - System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  - System.Data.Odbc.OdbcDataReader.HasRows
  - System.Data.Odbc.OdbcDataReader.IsClosed
  - System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  - System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  - System.Data.Odbc.OdbcDataReader.Item(System.String)
  - System.Data.Odbc.OdbcDataReader.NextResult
  - System.Data.Odbc.OdbcDataReader.Read
  - System.Data.Odbc.OdbcDataReader.RecordsAffected
  langs:
  - csharp
  name: OdbcDataReader
  nameWithType: OdbcDataReader
  fullName: System.Data.Odbc.OdbcDataReader
  type: Class
  summary: "Biztosítja az adatok sorok csak előrefelé bejárható adatfolyam olvasásakor adatforrás. Ez az osztály nem örökölhető."
  remarks: "Egy OdbcDataReader létrehozásához meg kell hívnia a <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>metódusában a <xref:System.Data.Odbc.OdbcCommand>objektum, egy konstruktor közvetlen használata helyett.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       A OdbcDataReader használatban van, amíg a vonatkozó <xref:System.Data.Odbc.OdbcConnection>foglalt szolgál a OdbcDataReader, és nincsenek egyéb műveletek végrehajtható <xref:System.Data.Odbc.OdbcConnection>eltérő bezárja azt.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection> Ez a helyzet, amíg a <xref:System.Data.Odbc.OdbcDataReader.Close%2A>a OdbcDataReader módja az ún.</xref:System.Data.Odbc.OdbcDataReader.Close%2A> Például nem lehet lekérdezni a kimeneti paraméterek csak a <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</xref:System.Data.Odbc.OdbcDataReader.Close%2A> hívása után       Lehet, hogy egy eredményhalmazban, hogy egy másik folyamat vagy szál adatok olvasása során végrehajtott módosítások a OdbcDataReader a felhasználó számára látható. Azonban a pontos működése illesztőprogram és a függő ütemezését.       <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>és <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>hívása csak tulajdonságok vannak a OdbcDataReader bezárása után.</xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A></xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> Egyes esetekben kell hívnia a <xref:System.Data.Odbc.OdbcDataReader.Close%2A> <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>.</xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> hívása előtt</xref:System.Data.Odbc.OdbcDataReader.Close%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an OdbcDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OdbcDataReader, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-vb[Classic WebData OdbcDataReader#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcd_0_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcd_0_1.cs)]"
  syntax:
    content: 'public sealed class OdbcDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Close
  id: Close
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OdbcDataReader.Close()
  fullName: System.Data.Odbc.OdbcDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Bezárja a <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> objektum."
  remarks: "Explicit módon meg kell hívnia a Close metódus, amikor végzett használatával a <xref:System.Data.Odbc.OdbcDataReader>használata a társított <xref:System.Data.Odbc.OdbcConnection>bármely más célból felhasználják.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader>      > [!CAUTION] > Ne hívja meg `Close` vagy `Dispose` a kapcsolatot, a DataReader vagy más felügyelt objektum az az `Finalize` az osztály. A véglegesítőt, a kiadás csak nem felügyelt erőforrást, amely a osztály birtokolja közvetlenül. Ha az osztály nem rendelkezik a nem felügyelt erőforrás nem tartalmaznak egy `Finalize` az osztálydefiníció metódust. További információkért lásd: [szemétgyűjtés](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_4_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_4_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.Odbc.OdbcDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Depth
  id: Depth
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OdbcDataReader.Depth
  fullName: System.Data.Odbc.OdbcDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "A mélységű beágyazást hozhat létre az aktuális sor jelző érték beolvasása."
  remarks: "A legkülső táblának a mélység értéke nulla."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "A mélységű beágyazást hozhat létre az aktuális sor."
  overload: System.Data.Odbc.OdbcDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcDataReader.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.Odbc.OdbcDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.FieldCount
  id: FieldCount
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
  fullName: System.Data.Odbc.OdbcDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi az oszlopok számát az aktuális sor."
  remarks: "Rejtett mezők tartalmazza. Használjon <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>Rejtett mezők kizárásához.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>       Miután egy lekérdezést, amely nem ad vissza a sorok hajtható végre, a FieldCount 0 értéket adja vissza."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Ha nem található érvényes Rekordkészletben lévő, 0; Ellenkező esetben az aktuális rekord oszlopok számát. Az alapértelmezett érték a -1."
  overload: System.Data.Odbc.OdbcDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nincs adatforrás jelenleg nincs kapcsolat."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OdbcDataReader.GetBoolean(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékét a logikai értékként."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Ha az átalakítás nem támogatott a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "Olyan logikai érték, amely az oszlop értéke."
  overload: System.Data.Odbc.OdbcDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OdbcDataReader.GetByte(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékét a bájtban."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Az átalakítás nem támogatott, ha a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Byte
      description: "A bájtban megadott oszlop értéke."
  overload: System.Data.Odbc.OdbcDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Beolvassa bájtos adatfolyam a megadott oszlop eltolásánál kezdődő, a puffer tömbként, az adott puffer eltolástól kezdve."
  remarks: "GetBytes mező a rendelkezésre álló bájtok számát adja vissza. A legtöbbször ennek a mezőnek a pontos hossza. Azonban a számot adja vissza lehet kisebb, mint a mező értéke igaz hossza Ha GetBytes bájt beszerezni a mező már felhasználták. Ennek az lehet az eset például, ha a <xref:System.Data.Odbc.OdbcDataReader>nagy adatszerkezet éppen olvas be pufferbe.</xref:System.Data.Odbc.OdbcDataReader> További információkért lásd: a `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> beállítása       Null értékű puffer át, ha GetBytes a mező hossza (bájt) adja vissza.       Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Ha az átalakítás nem támogatott a metódus hívása sikertelen lesz.      > [!NOTE] > Nem kivételt fog jelezni, ha az értéke `bufferIndex` a tömb kívül esik. Adatot nem fogja beolvasni és a metódus a 0 fog visszaadni."
  syntax:
    content: public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: dataIndex
      type: System.Int64
      description: "Az index a mezőt, ahol az olvasási művelet indítása belül."
    - id: buffer
      type: System.Byte[]
      description: "A puffer, amelybe bájtos adatfolyam olvasására."
    - id: bufferIndex
      type: System.Int32
      description: "Az index belül a `buffer` elindítani az írási művelet esetén."
    - id: length
      type: System.Int32
      description: "Olvassa el a bájtok száma."
    return:
      type: System.Int64
      description: "A tényleges, beolvasott bájtok száma."
  overload: System.Data.Odbc.OdbcDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OdbcDataReader.GetChar(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értéke egy karakter."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Az átalakítás nem támogatott, ha a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Char
      description: "A megadott oszlop karakterként értéke."
  overload: System.Data.Odbc.OdbcDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Beolvassa adatfolyam karaktereket a megadott oszlop eltolásánál kezdődő, a puffer tömbként, az adott puffer eltolástól kezdve."
  remarks: "GetChars mező a rendelkezésre álló karakterek számát adja vissza. A legtöbbször ennek a mezőnek a pontos hossza. Azonban a számot adja vissza lehet kisebb, mint a mező értéke igaz hossza Ha GetChars karakterek beszerezni a mező már felhasználták. Ennek az lehet az eset például, ha a <xref:System.Data.Odbc.OdbcDataReader>nagy adatszerkezet éppen olvas be pufferbe.</xref:System.Data.Odbc.OdbcDataReader> További információkért lásd: a `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> beállítása       Adja meg a puffer null értékű, ha GetChars a mező hossza karaktert adja vissza.       Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Ha az átalakítás nem támogatott a metódus hívása sikertelen lesz.      > [!NOTE] > Nem kivételt fog jelezni, ha az értéke `bufferIndex` a tömb kívül esik. Adatot nem fogja beolvasni és a metódus a 0 fog visszaadni."
  syntax:
    content: public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: dataIndex
      type: System.Int64
      description: "Az olvasási művelet esetén elindítani a soron belüli index."
    - id: buffer
      type: System.Char[]
      description: "A puffer, amelybe az adatok másolása."
    - id: bufferIndex
      type: System.Int32
      description: "Az index belül a `buffer` elindítani az írási művelet esetén."
    - id: length
      type: System.Int32
      description: "Olvassa el a karakterek száma."
    return:
      type: System.Int64
      description: "Olvassa el a tényleges karakterszámot."
  overload: System.Data.Odbc.OdbcDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OdbcDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a forrás adattípus neve."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A forrás adattípus neve."
  overload: System.Data.Odbc.OdbcDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  id: GetDate(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDate(Int32)
  nameWithType: OdbcDataReader.GetDate(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDate(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.DateTime>objektum.</xref:System.DateTime>"
  syntax:
    content: public DateTime GetDate (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.DateTime
      description: "A megadott oszlop, mint az érték egy <xref:System.DateTime>objektum.</xref:System.DateTime>"
  overload: System.Data.Odbc.OdbcDataReader.GetDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OdbcDataReader.GetDateTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.DateTime>objektum.</xref:System.DateTime>"
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Ha az átalakítás nem támogatott a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.DateTime
      description: "A megadott oszlop, mint az érték egy <xref:System.DateTime>objektum.</xref:System.DateTime>"
  overload: System.Data.Odbc.OdbcDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OdbcDataReader.GetDecimal(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.Decimal>objektum.</xref:System.Decimal>"
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Ha az átalakítás nem támogatott a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>       GetDecimal 28 maximális pontossága rendelkezik. Nagyobb pontosságú tizedes tört adattípusúak beolvasására tett kísérlet kivétel miatt. Egy is módosulhat a lekérdezés konvertálni a decimális típus vagy kisebb adattípus, vagy alakítsa át vagy bináris karakterlánc."
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Decimal
      description: "A megadott oszlop, mint az érték egy <xref:System.Decimal>objektum.</xref:System.Decimal>"
  overload: System.Data.Odbc.OdbcDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OdbcDataReader.GetDouble(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékének kétszeres pontosságú lebegőpontos számként."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Az átalakítás nem támogatott, ha a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Double
      description: "A megadott oszlop, mint egy kétszeres pontosságú lebegőpontos szám értékének."
  overload: System.Data.Odbc.OdbcDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OdbcDataReader.GetEnumerator()
  fullName: System.Data.Odbc.OdbcDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Értéket ad vissza egy <xref:System.Collections.IEnumerator>, amelyek segítségével a sorokat az Adatolvasó iterációt.</xref:System.Collections.IEnumerator>"
  remarks: "Bár ez a metódus explicit módon számbevevőre beolvasni, a nyelveket, amelyek támogatják a `foreach` szerkezet egyszerűbb közvetlenül ahhoz, hogy a sorokat az Adatolvasó iterációt az ismétlési szerkezet használni."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>, amelyek segítségével a sorokat az Adatolvasó iterációt.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Odbc.OdbcDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OdbcDataReader.GetFieldType(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Type
      description: "A <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  overload: System.Data.Odbc.OdbcDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OdbcDataReader.GetFloat(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékének egy egyszeres pontosságú lebegőpontos számot."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Ha az átalakítás nem támogatott a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Single
      description: "Egy egyszeres pontosságú lebegőpontos számot a megadott oszlop értéke."
  overload: System.Data.Odbc.OdbcDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OdbcDataReader.GetGuid(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értéke, egy globálisan egyedi azonosítóját (GUID)."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Az átalakítás nem támogatott, ha a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Guid
      description: "A megadott GUID-oszlop értéke."
  overload: System.Data.Odbc.OdbcDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OdbcDataReader.GetInt16(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékének aláírt 16 bites egész számként."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Az átalakítás nem támogatott, ha a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int16
      description: "A megadott oszlop, mint a 16 bites előjeles egész érték."
  overload: System.Data.Odbc.OdbcDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OdbcDataReader.GetInt32(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékének aláírt 32 bites egész számként."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Az átalakítás nem támogatott, ha a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int32
      description: "A megadott oszlop, mint egy 32 bites előjeles egész érték."
  overload: System.Data.Odbc.OdbcDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OdbcDataReader.GetInt64(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékének egy 64 bites előjeles egész számként."
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Az átalakítás nem támogatott, ha a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int64
      description: "A megadott oszlop, mint egy 64 bites előjeles egész érték."
  overload: System.Data.Odbc.OdbcDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OdbcDataReader.GetName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop neve."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "Egy karakterlánc, amely a megadott oszlop neve."
  overload: System.Data.Odbc.OdbcDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OdbcDataReader.GetOrdinal(String)
  fullName: System.Data.Odbc.OdbcDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a oszlop sorszáma, az oszlop neve a."
  remarks: "GetOrdinal először a kis-és nagybetűket keresést hajt végre. Ha nem sikerül, egy második nem betűérzékeny keresési történik. A metódus jelez egy `IndexOutOfRange` kivétel, ha a nulláról indulva számított oszlop sorszáma nem található.       GetOrdinal kana-szélesség-és nagybetűk megkülönböztetése nélkül.       Mivel a sorszám-alapú keresését hatékonyabb, mint elnevezett keresések, nem hatékony GetOrdinal hívni a hurkon belül. Ehelyett GetOrdinal egyszer hívja, és hozzárendelheti a eredményeket egy egész változót a hurkon belül használható."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_3_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_3_1.cs)]"
  syntax:
    content: public override int GetOrdinal (string value);
    parameters:
    - id: value
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Int32
      description: "A nulla alapú oszlopból."
  overload: System.Data.Odbc.OdbcDataReader.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OdbcDataReader.GetSchemaTable()
  fullName: System.Data.Odbc.OdbcDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai a <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>."
  remarks: "A GetSchemaTable metódus az egyes oszlopok metaadatainak sorrendje a következő adja vissza: |} DataReader oszlop |} Leírás |}   |-----------------------|-----------------|   | Oszlopnév |} Az oszlop; neve Ez nem lehet egyedi. Ha az oszlop neve nem lehet megállapítani, null értéket ad vissza. Ez a név mindig tükrözi az aktuális nézet vagy parancs szöveges oszlop legutóbbi elnevezési. |}   | ColumnOrdinal |} Az oszlop nulla alapú sorszámát. Ez az oszlop nem tartalmazhat null értékű. |}   | ColumnSize |} A lehetséges legfeljebb egy értéket a oszlopban. Olyan oszlopok esetében, a rögzített hosszúságú adattípus, ez az adattípus mérete. |}   | NumericPrecision |} Ha <xref:System.Data.DbType>egy numerikus adattípusú, ez az oszlop maximális pontosság.</xref:System.Data.DbType> A pontosság attól függ, hogy az oszlop definíciója. Ha <xref:System.Data.DbType>Nincs numerikus adatokat írja be, ne használja az adatok ebben az oszlopban.</xref:System.Data.DbType> Az alapul szolgáló ODBC illesztőprogram nem numerikus adattípus pontossága értéket ad vissza, ha a séma tábla ezt az értéket használja. |}   | NumericScale |} Ha <xref:System.Data.DbType>van <xref:System.Data.DbType>, a tizedesvesszőtől jobbra számjegyek száma.</xref:System.Data.DbType> </xref:System.Data.DbType> Ellenkező esetben ez az null értékű. Az alapul szolgáló ODBC illesztőprogram nem numerikus adattípus pontossága értéket ad vissza, ha a séma tábla ezt az értéket használja. |}   | DataType |} A közös nyelvi futtatókörnyezet típusú <xref:System.Data.DbType>leképezve. |}   | Szolgáltatótípus |} Az alapul szolgáló illesztőprogram-típus. |}   | IsLong |} `true` Ha az oszlop bináris hosszú objektum (BLOB), amely tartalmazza a nagyon hosszú adatokat tartalmaz.</xref:System.Data.DbType> Nagyon sok adat definíciójánál az illesztőhöz. |}   | AllowDBNull |} `true` Ha a fogyasztó állíthat be az oszlop null értékű, vagy ha az illesztőprogram nem tudja meghatározni a felhasználó beállíthat-e az oszlop null értékűre. Ellenkező esetben `false`. Egy oszlop tartalmazhat null értékeket, akkor is, ha nem állítható be null értékűre. |}   | IsReadOnly |} `true` Ha az oszlop nem módosított, ha `false`. |}   | IsRowVersion |} Állítsa be, ha az oszlop egy állandó sorazonosítóként, amely nem lehet írni, és értéke nem értelmezhető kivéve hozzá a sor. |}   | IsUnique |} `true`: Az alaptáblában szereplő két sorok (a tábla BaseTableName vissza) is tartozhat azonos érték ebben az oszlopban. IsUnique garantáltan `true` Ha az oszlop felel meg a kulcs önmagában, vagy ha nincs a típus csak ebben az oszlopban alkalmazó egyedi korlátozás.<br /><br /> `false`: Az oszlop tartalmazhat ismétlődő értékeket alaptábla. Ez az oszlop alapértelmezés szerint `false`. |}   | IsKey |} `true`: Az oszlop a sorhalmazban oszlopkészleteket egyike, amelyek együttesen, egyedi módon azonosítja az sor. A értéke IsKey oszlopok állítja be, `true` egyedi módon kell azonosítania a sorhalmaz egyik sorában. Esetében nem követelmény, hogy az oszlopok csoportja-e a minimális számú oszlopot. Az oszlopok csoportja az alaptábla elsődleges kulcs, egyedi megkötésen vagy egyedi index eredményezhet.<br /><br /> `false`: Az oszlop nem szükséges a sor egyedi azonosításához. |}   | IsAutoIncrement |} `true` Ha az oszlop értékeket rendel az új sorok rögzített lépésekben; ellenkező esetben `false`. Ez az oszlop alapértelmezés szerint `false`. |}   | BaseSchemaName |} A séma az adatforrásban, amely tartalmazza az oszlop neve. NULL, ha az alap katalógus neve nem határozható meg. Ez az oszlop alapértelmezett értéke null értékű. |}   | BaseCatalogName |} A katalógus szerepel az adattárban, amely tartalmazza az oszlop neve. NULL, ha az alap katalógus neve nem határozható meg. Ez az oszlop alapértelmezett értéke null értékű. |}   | BaseTableName |} A tábla vagy nézet a tárolóban, amely tartalmazza az oszlop neve. Egy null értéket, ha az alaptábla neve nem határozható meg. Az oszlop alapértelmezett értéke null. |}   | BaseColumnName |} Az adattár oszlop neve. Ez az alias lett megadva a ColumnName oszlop visszaadott oszlop nevétől eltérő lehet. Egy null értéket, ha az alap oszlop neve nem határozható meg, vagy származtatott, de nem azonos a sorkészlet-oszlophoz esetén egy oszlopot az adatok tárolásához. Ez az oszlop alapértelmezett értéke null értékű. |}       Egy sor minden oszlopának az eredmények set visszaküldött.       A .NET Framework Data Provider ODBC feltételezi, hogy a metaadat-információ az ODBC-illesztőprogram érhető el valamelyik **SQLPrepare**, **SQLExecute**, vagy **SQLExecuteDirect** funkciók nevezzük. &quot;SchemaOnly&quot; parancsot a működnek megfelelően, hogy **SQLPrepare** a szükséges metaadatok kell visszaadnia. Nem minden ODBC-illesztőprogram támogatja ezt a funkciót, vagy visszatérési metaadat-információt. Ebben az esetben egy részét vagy egészét a SchemaTable szereplő információk nem érhető el. Hívása után **SQLPrepare**, az adatszolgáltató meghívja a ODBC **SQLColAttribute** függvényt, hogy a lekérdezés eredményében (például IsLong, IsUnique, AllowDBNull, BaseTableName, BaseColumnName) minden egyes oszlophoz kapcsolódó oszlopra metaadat-információkat. Ha az alapul szolgáló illesztőprogram nem ad vissza az adatok egy részét, a megfelelő értéket a SchemaTable a nem állít megfelelően.       A .NET Framework Data Provider ODBC is meghívja a **SQLPrimaryKeys** minden táblának a kulcs információinak lekérése érdekében. Ha az alapul szolgáló ODBC illesztőprogram nem támogatja ezt a funkciót, az adatszolgáltató meghívja **SQLStatistics** és kiválasztja az egyik az egyedi indexet a tábla elsődleges kulcsaként. Előfordulhat, hogy nem mindig adja a kívánt eredményeket.       <xref:System.Data.Odbc.OdbcCommandBuilder>a tábla elsődleges kulcsának helyes azonosítása kell ahhoz, hogy megfelelően működjenek.</xref:System.Data.Odbc.OdbcCommandBuilder> A BaseTableName a lekérdezés eredményében minden oszlop nem ad vissza, ha a .NET Framework Data Provider ODBC megpróbálja elemezni az SQL-utasítás található részt vesz a lekérdezés a tábla neve. Ez a módszer frissítési, beszúrási, törlése és egyszerű KIVÁLASZTÓ utasítást, de nem tárolt eljárások vagy illesztés alapján kiválasztott utasítást. Ha néhány vagy az összes a sémaadatok hiányzik ebből a táblázatból a <xref:System.Data.Odbc.OdbcCommandBuilder>nem működnek megfelelően, mert nincs elég sémaadatok automatikusan generálja a megfelelő INSERT, UPDATE vagy DELETE utasítás.</xref:System.Data.Odbc.OdbcCommandBuilder>       Győződjön meg arról, hogy metaadatok a megfelelő adatokat ad vissza, meg kell hívnia <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>KeyInfo beállítása viselkedés paraméterrel.</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> Ellenkező esetben a séma tábla oszlopai némelyike térhetnek vissza alapértelmezett, null, vagy helytelen az adatok.       Használatakor ODBC.NET Oracle keresztül az ODBC illesztőprogram nem ismeri aliasnevet Kulcsoszlopok kulcsként. Ez hatással van a OdbcDataReader séma táblázatához IsKey és IsUnique oszlopok. Hatással van a OdbcCommandBuilder képességét frissítése logikát. Érdemes lehet nem alias az elsődleges kulcsként megadott oszlop.      > [!NOTE] > A Microsoft Jet ODBC-illesztőprogram mindig adja vissza, egyedi index és az elsődleges kulcs oszlopok, függetlenül attól, hogy azok nullázható vagy nem nullázható. Az illesztőprogram is vissza elsődleges kulcs adataira; csak az egyedi indexek és az oszlopok, elsődleges kulcsoszlop, beleértve a közöttük lévő megkülönböztetése nélkül listáját adja vissza."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai."
  overload: System.Data.Odbc.OdbcDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> le van zárva."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OdbcDataReader.GetString(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékének <xref:System.String>.</xref:System.String>"
  remarks: "Átalakítás ODBC-illesztőprogram alapul szolgáló képességei alapján történik. Az átalakítás nem támogatott, ha a metódus hívása sikertelen lesz.       Hívás <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A megadott oszlop, mint a <xref:System.String>.</xref:System.String> értéke"
  overload: System.Data.Odbc.OdbcDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  id: GetTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetTime(Int32)
  nameWithType: OdbcDataReader.GetTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.TimeSpan>objektum.</xref:System.TimeSpan>"
  syntax:
    content: public TimeSpan GetTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.TimeSpan
      description: "A megadott oszlop, mint az érték egy <xref:System.TimeSpan>objektum.</xref:System.TimeSpan>"
  overload: System.Data.Odbc.OdbcDataReader.GetTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OdbcDataReader.GetValue(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Az oszlop értékének beolvasása a megadott sorszám natív formátumában."
  remarks: "Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull>"
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Object
      description: "A visszatérési érték."
  overload: System.Data.Odbc.OdbcDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OdbcDataReader.GetValues(Object[])
  fullName: System.Data.Odbc.OdbcDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Feltölti az oszlop értékekkel, az aktuális sor egy objektumokból álló tömb."
  remarks: "A legtöbb alkalmazás esetén a <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>metódus hatékony biztosít az összes oszlop, minden oszlop külön-külön beolvasása helyett.</xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>       Megadhat egy <xref:System.Object>tömb, amely tartalmazza az eredményül kapott sor található oszlopok száma nem lépi.</xref:System.Object> Csak a adatok mennyisége az <xref:System.Object>tömb, amely tárolja a tömb másolandó.</xref:System.Object> Is átadhatja az <xref:System.Object>tömb, amelynek hossza nagyobb, mint az eredményül kapott sor található oszlopok száma.</xref:System.Object>       Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull>"
  example:
  - >-
    [!code-vb[OdbcDataReader_GetValues#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_5_1.vb)]
     [!code-cs[OdbcDataReader_GetValues#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_5_1.cs)]
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Típusú tömb <xref:System.Object>amelybe az attribútumoszlopoknak másolásához.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A több példányban <xref:System.Object>a tömbben.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.HasRows
  id: HasRows
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
  fullName: System.Data.Odbc.OdbcDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> egy vagy több sort tartalmaz."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> tartalmaz egy vagy több sor; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.IsClosed
  id: IsClosed
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
  fullName: System.Data.Odbc.OdbcDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Azt jelzi, hogy a <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> le van zárva."
  remarks: "IsClosed és <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>hívása után csak tulajdonságok vannak a <xref:System.Data.Odbc.OdbcDataReader>le van zárva.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> lezárt; egyéb <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OdbcDataReader.IsDBNull(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy az oszlop nem létező vagy a hiányzó értékeket tartalmaz."
  remarks: "Kiadását okozó hiba elkerüléséhez hívja meg ezt a metódust ellenőrizze, hogy a beírt hívása előtt null értékek beolvasása módszerek (például <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>, és így tovább).</xref:System.Data.Odbc.OdbcDataReader.GetChar%2A> </xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>"
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott oszlop érték egyenértékű <xref href=&quot;System.DBNull&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OdbcDataReader.Item(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékét az adott a oszlopból natív formátumában."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "A sorszám oszlopot."
    return:
      type: System.Object
      description: "A megadott oszlop natív formátumában értéke."
  overload: System.Data.Odbc.OdbcDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Az átadott index kívül esik a tartományon keresztül <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*> 0 volt"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OdbcDataReader.Item(String)
  fullName: System.Data.Odbc.OdbcDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megadott oszlop értékét az oszlop neve a natív formátumában."
  remarks: "A kis-és nagybetűket keres a először történik. Ha nem sikerül, egy második nem betűérzékeny keresési történik.       Ez a metódus kana-szélesség-és nagybetűk megkülönböztetése nélkül."
  syntax:
    content: public override object this[string value] { get; }
    parameters:
    - id: value
      type: System.String
      description: "Az oszlop nevét."
    return:
      type: System.Object
      description: "A megadott oszlop natív formátumában értéke."
  overload: System.Data.Odbc.OdbcDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Egyetlen oszlop sincs a megadott néven nem található."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.NextResult
  id: NextResult
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OdbcDataReader.NextResult()
  fullName: System.Data.Odbc.OdbcDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Kiadásokban a <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> a kötegelt SQL-utasítások eredményeit olvasásakor a következő találatra."
  remarks: "Több eredmény kötegelt SQL-utasítások végrehajtásával létrehozható feldolgozásához használatos.       Alapértelmezés szerint a <xref:System.Data.Odbc.OdbcDataReader>van pozicionálva a első találatra.</xref:System.Data.Odbc.OdbcDataReader>"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha több eredményhalmazt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Read
  id: Read
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OdbcDataReader.Read()
  fullName: System.Data.Odbc.OdbcDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Kiadásokban a <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> a következő bejegyzéshez."
  remarks: "Az alapértelmezett pozíciója a <xref:System.Data.Odbc.OdbcDataReader>előtt az első rekordra.</xref:System.Data.Odbc.OdbcDataReader> Ezért meg kell hívnia olvasható adatok elérése elindításához.       Amíg a <xref:System.Data.Odbc.OdbcDataReader>használatban van, a társított <xref:System.Data.Odbc.OdbcConnection>foglalt, amíg <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</xref:System.Data.Odbc.OdbcDataReader.Close%2A> meghívja a szolgáltató</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_0_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_0_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha további sorokat; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
  fullName: System.Data.Odbc.OdbcDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Lekérdezi a megváltozott, szúrja be, vagy törli azokat az SQL-utasítás végrehajtása sorok száma."
  remarks: "A RecordsAffected tulajdonság nincs beállítva mindaddig, amíg az összes sor olvasása, és bezárja a <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader>       Ez a tulajdonság értéke összegző. Például két bejegyzés kötegelt módban szúrja be, RecordsAffected értéke 2 lesz.       <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>és RecordsAffected hívása után csak tulajdonságok a <xref:System.Data.Odbc.OdbcDataReader>le van zárva.</xref:System.Data.Odbc.OdbcDataReader></xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "A sorok száma megváltozott, szúrja be, vagy törölték. a SELECT utasítás; -1 0, ha a sorok érintettek, vagy az utasítás végrehajtása sikertelen volt."
  overload: System.Data.Odbc.OdbcDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.Odbc.OdbcDataReader.Close
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Close()
  nameWithType: OdbcDataReader.Close()
  fullName: System.Data.Odbc.OdbcDataReader.Close()
- uid: System.Data.Odbc.OdbcDataReader.Depth
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Depth
  nameWithType: OdbcDataReader.Depth
  fullName: System.Data.Odbc.OdbcDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcDataReader.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcDataReader.FieldCount
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
  fullName: System.Data.Odbc.OdbcDataReader.FieldCount
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OdbcDataReader.GetBoolean(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBoolean(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OdbcDataReader.GetByte(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OdbcDataReader.GetChar(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OdbcDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDate(Int32)
  nameWithType: OdbcDataReader.GetDate(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDate(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OdbcDataReader.GetDateTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDateTime(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OdbcDataReader.GetDecimal(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OdbcDataReader.GetDouble(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OdbcDataReader.GetEnumerator()
  fullName: System.Data.Odbc.OdbcDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OdbcDataReader.GetFieldType(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OdbcDataReader.GetFloat(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OdbcDataReader.GetGuid(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OdbcDataReader.GetInt16(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OdbcDataReader.GetInt32(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt32(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OdbcDataReader.GetInt64(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt64(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OdbcDataReader.GetName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetName(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OdbcDataReader.GetOrdinal(String)
  fullName: System.Data.Odbc.OdbcDataReader.GetOrdinal(String)
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OdbcDataReader.GetSchemaTable()
  fullName: System.Data.Odbc.OdbcDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OdbcDataReader.GetString(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetString(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetTime(Int32)
  nameWithType: OdbcDataReader.GetTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetTime(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OdbcDataReader.GetValue(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OdbcDataReader.GetValues(Object[])
  fullName: System.Data.Odbc.OdbcDataReader.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.HasRows
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
  fullName: System.Data.Odbc.OdbcDataReader.HasRows
- uid: System.Data.Odbc.OdbcDataReader.IsClosed
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
  fullName: System.Data.Odbc.OdbcDataReader.IsClosed
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OdbcDataReader.IsDBNull(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.IsDBNull(Int32)
- uid: System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OdbcDataReader.Item(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.Item(Int32)
- uid: System.Data.Odbc.OdbcDataReader.Item(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OdbcDataReader.Item(String)
  fullName: System.Data.Odbc.OdbcDataReader.Item(String)
- uid: System.Data.Odbc.OdbcDataReader.NextResult
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OdbcDataReader.NextResult()
  fullName: System.Data.Odbc.OdbcDataReader.NextResult()
- uid: System.Data.Odbc.OdbcDataReader.Read
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Read()
  nameWithType: OdbcDataReader.Read()
  fullName: System.Data.Odbc.OdbcDataReader.Read()
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
  fullName: System.Data.Odbc.OdbcDataReader.RecordsAffected
- uid: System.Data.Odbc.OdbcDataReader.Close*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Close
  nameWithType: OdbcDataReader.Close
- uid: System.Data.Odbc.OdbcDataReader.Depth*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Depth
  nameWithType: OdbcDataReader.Depth
- uid: System.Data.Odbc.OdbcDataReader.Dispose*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Dispose
  nameWithType: OdbcDataReader.Dispose
- uid: System.Data.Odbc.OdbcDataReader.FieldCount*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OdbcDataReader.GetBoolean
- uid: System.Data.Odbc.OdbcDataReader.GetByte*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetByte
  nameWithType: OdbcDataReader.GetByte
- uid: System.Data.Odbc.OdbcDataReader.GetBytes*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OdbcDataReader.GetBytes
- uid: System.Data.Odbc.OdbcDataReader.GetChar*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChar
  nameWithType: OdbcDataReader.GetChar
- uid: System.Data.Odbc.OdbcDataReader.GetChars*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChars
  nameWithType: OdbcDataReader.GetChars
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OdbcDataReader.GetDataTypeName
- uid: System.Data.Odbc.OdbcDataReader.GetDate*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDate
  nameWithType: OdbcDataReader.GetDate
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OdbcDataReader.GetDateTime
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OdbcDataReader.GetDecimal
- uid: System.Data.Odbc.OdbcDataReader.GetDouble*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OdbcDataReader.GetDouble
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OdbcDataReader.GetEnumerator
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OdbcDataReader.GetFieldType
- uid: System.Data.Odbc.OdbcDataReader.GetFloat*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OdbcDataReader.GetFloat
- uid: System.Data.Odbc.OdbcDataReader.GetGuid*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OdbcDataReader.GetGuid
- uid: System.Data.Odbc.OdbcDataReader.GetInt16*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OdbcDataReader.GetInt16
- uid: System.Data.Odbc.OdbcDataReader.GetInt32*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OdbcDataReader.GetInt32
- uid: System.Data.Odbc.OdbcDataReader.GetInt64*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OdbcDataReader.GetInt64
- uid: System.Data.Odbc.OdbcDataReader.GetName*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetName
  nameWithType: OdbcDataReader.GetName
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OdbcDataReader.GetOrdinal
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OdbcDataReader.GetSchemaTable
- uid: System.Data.Odbc.OdbcDataReader.GetString*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetString
  nameWithType: OdbcDataReader.GetString
- uid: System.Data.Odbc.OdbcDataReader.GetTime*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetTime
  nameWithType: OdbcDataReader.GetTime
- uid: System.Data.Odbc.OdbcDataReader.GetValue*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValue
  nameWithType: OdbcDataReader.GetValue
- uid: System.Data.Odbc.OdbcDataReader.GetValues*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValues
  nameWithType: OdbcDataReader.GetValues
- uid: System.Data.Odbc.OdbcDataReader.HasRows*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
- uid: System.Data.Odbc.OdbcDataReader.IsClosed*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OdbcDataReader.IsDBNull
- uid: System.Data.Odbc.OdbcDataReader.Item*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item
  nameWithType: OdbcDataReader.Item
- uid: System.Data.Odbc.OdbcDataReader.NextResult*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: NextResult
  nameWithType: OdbcDataReader.NextResult
- uid: System.Data.Odbc.OdbcDataReader.Read*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Read
  nameWithType: OdbcDataReader.Read
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
