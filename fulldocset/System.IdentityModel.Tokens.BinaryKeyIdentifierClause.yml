### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  id: BinaryKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  langs:
  - csharp
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  type: Class
  summary: "Bináris adatok alapuló kulcsazonosító záradékok alaposztályt jelöli."
  remarks: "Általában a BinaryKeyIdentifierClause nem kell használni, eltérő egyéni biztonságijogkivonat-szolgáltatás létrehozásakor. Biztonságijogkivonat-szolgáltatás egy biztonsági jogkivonatot ad vissza, ha a kiadott biztonsági jogkivonat nem csatolt és csatlakoztatott biztonsági jogkivonatokat hivatkozik. Csatolt hivatkozásokat tekintse meg a biztonsági fejlécben egy SOAP-üzenet belüli biztonsági jogkivonatokat és tartozó biztonsági jogkivonatokat, amelyek nem tartoznak a biztonsági fejlécben a SOAP-üzenet. Ezeket a hivatkozásokat általában elfogadhatja a kiadott biztonsági jogkivonat hitelességét."
  syntax:
    content: 'public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  id: '#ctor(System.String,System.Byte[],System.Boolean)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> osztály záradékban megadott kulcsazonosító típusát, a bináris adatok és egy érték, amely azt jelzi, hogy a bináris adatok kell klónozható használatával."
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);
    parameters:
    - id: clauseType
      type: System.String
      description: "A kulcsazonosító záradék típusa. Az értéke a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>tulajdonság.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "A tömb <xref:System.Byte>, amely tartalmazza a bináris adatok, amelyek a kulcsazonosító.</xref:System.Byte>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az átadott tömb klónozásához a `identificationData` paraméter; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>nem nulla hosszúságú."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> osztály használata a megadott kulcsazonosító záradék típusa, a bináris adatok, az érték, amely jelzi, hogy a bináris adatok kell klónozható, egy nonce és a kulcs hossza."
  remarks: "Ha a `derivationNonce` és `derivationLength` paraméter meg van adva, az implicit származtatott kulccsal helyett a közvetlen biztonsági kulcs a jogkivonat.       Átadott értékétől függetlenül a `cloneBuffer` paraméter, a <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>metódus mindig adja meg az átadott tömb másolat a `identificationData` paraméter.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: clauseType
      type: System.String
      description: "A kulcsazonosító záradék típusa. Az értéke a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>tulajdonság.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "A tömb <xref:System.Byte>, amely tartalmazza a bináris adatok, amelyek a kulcsazonosító.</xref:System.Byte> A bináris adatok által megtalált beállítja a <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metódus.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az átadott tömb klónozásához a `identificationData` paraméter; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: derivationNonce
      type: System.Byte[]
      description: "A tömb <xref:System.Byte>, amely tartalmazza a származtatott kulcs létrehozásához használt nonce.</xref:System.Byte> Beállítja az értéket ad vissza a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>metódus.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "A származtatott kulcs mérete. Az értéke a <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>tulajdonság.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>nem nulla hosszúságú."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  id: GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lekérdezi a bináris adatok, amelyek a kulcsazonosítójával."
  remarks: "A konstruktornak átadott értékétől függetlenül `cloneBuffer` paraméter, a GetBuffer metódus mindig adja vissza a konstruktornak átadott tömb klónja `identificationData` paraméter."
  syntax:
    content: public byte[] GetBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A tömb <xref:System.Byte>, amely tartalmazza a bináris adatok, amelyek a kulcsazonosító.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  id: GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lekérdezi a bináris adatok, amelyek a kulcsazonosítójával."
  remarks: "A GetRawBuffer metódus által visszaadott tömb a konstruktor klónja `identificationData` paramétert, ha az érték átadott a `cloneBuffer` van `true`; ellenkező esetben ugyanazon.       A <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>metódus mindig adja meg a tömb a konstruktornak átadott másolat `identificationData` paraméter.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected byte[] GetRawBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A tömb <xref:System.Byte>, amely tartalmazza a bináris adatok, amelyek a kulcsazonosító.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  id: Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy érték, amely azt jelzi, hogy a bináris adatok az aktuális példány megfelel-e a megadott bináris adatokat adja vissza."
  syntax:
    content: public bool Matches (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "A tömb <xref:System.Byte>összehasonlítandó.</xref:System.Byte>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> data  </code>által visszaadott bináris adatok egyenértékű a <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metódus; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy, amely azt jelzi, hogy az adott példány kulcs azonosítója megegyezik a megadott kulcsazonosító kifejezés értékét adja vissza."
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> összehasonlítandó."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> keyIdentifierClause </code> típusú <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> és a bináris adatok által visszaadott a <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>módszer megegyezik a a <code> keyIdentifierClause </code> paraméter és a jelenlegi példány; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  id: Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy érték, amely azt jelzi, hogy a bináris adatok az aktuális példány a megadott bináris adatokat az adott eltolástól egyenértékű adja vissza."
  syntax:
    content: public bool Matches (byte[] data, int offset);
    parameters:
    - id: data
      type: System.Byte[]
      description: "A tömb <xref:System.Byte>összehasonlítandó.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Az index a tömb, amit az összehasonlítás kezdi."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a bináris adatok a <code> data  </code>a megadott indextől kezdődő paraméter a <code> offset </code> paraméter értéke megegyezik a bináris adatok által visszaadott a <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metódus (nulla indexnél kezdődő); egyéb esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer
  nameWithType: BinaryKeyIdentifierClause.GetBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: BinaryKeyIdentifierClause.Matches
