### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.HostFileChangeMonitor
  id: HostFileChangeMonitor
  children:
  - System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  - System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  - System.Runtime.Caching.HostFileChangeMonitor.LastModified
  - System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  langs:
  - csharp
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor
  fullName: System.Runtime.Caching.HostFileChangeMonitor
  type: Class
  summary: "Figyeli a könyvtárak és fájlok elérési útja, és értesíti a gyorsítótár, a figyelt elemek módosításait. Ez az osztály nem örökölhető."
  remarks: "A HostFileChangeMonitor osztály egy megvalósítását a <xref:System.Runtime.Caching.FileChangeMonitor>típusa.</xref:System.Runtime.Caching.FileChangeMonitor> Ez az osztály le van zárva, ezért nem terjeszthetők. Ez az osztály akkor hasznos, ha egy létező gyorsítótár-megvalósítással használatára és a fájlok és könyvtárak változásainak figyelése.       Minden egyes megadott fájl vagy könyvtár elérési útja, a HostFileChangeMonitor osztály elindítja a változási értesítés esetén a következő módosításokat:-a figyelt fájl vagy könyvtár módosítások nevét.      -A megadott fájl vagy könyvtár nem létezik a figyelő létrejött, de később létrehozásának időpontjában. Más szóval egy fájl vagy könyvtár jött létre a figyelt hatókörét.      -A fájlméret figyelt megváltozott.      -A figyelt fájl tartalmának megváltozott, vagy egy figyelt könyvtár tartalma megváltozott.      -A hozzáférési szabálygyűjtemény (ACL) a fájl vagy könyvtár megváltozott.      -A figyelt fájl vagy könyvtár törölve lett.       Túl sok változás egyszerre a figyelt fájl vagy könyvtár fordulhat elő, ha a HostFileChangeMonitor példány adott változásainak követése elveszhet. Ebben a forgatókönyvben a HostFileChangeMonitor osztály elindítja a módosítási értesítést. Ebben a forgatókönyvben valószínűbb fordulhat elő, ha a HostFileChangeMonitor példány figyeli egy könyvtárat, és sok változások történnek a könyvtárstruktúra hatókörében rövid időn belül.       A HostFileChangeMonitor osztály célja csak jelezze, hogy valamit a figyelt fájlok és könyvtárak között módosult, mert nem fontos, hogy nem adott módosítását kapcsolatos adatokat rögzíti. A HostFileChangeMonitor osztály a célja biztosítanak, értesíti arról, hogy az állapot megváltozott, így a gyorsítótár-bejegyzés (vagy bejegyzések) kell zárni. A HostFileChangeMonitor osztály nem jelzi, pontosan milyen módosítani, mert túlcsordulás belső változások követése nem számít.       Ha elérési utak HostFileChangeMonitor példányra adja meg, a könyvtár- és elérési utak teljes elérési útját a könyvtárat vagy fájlt kell lennie. Relatív elérési útja és a helyettesítő karakterek az elérési utak nem engedélyezettek.       A HostFileChangeMonitor osztály egy ASP.NET alkalmazás használatakor mennyi elem figyelését elérésére használt Windows-identitását, az ASP.NET-alkalmazás az alkalmazásidentitás. Ez azt jelenti, az alkalmazás azonosítója lesz a következők egyikét:-a folyamat identitása.      -A konfigurált alkalmazás azonosítója.      -A UNC hitelesítő, ha az alkalmazás fut egy UNC megosztáson.       A HostFileChangeMonitor osztály egy-ASP.NET alkalmazás használata esetén a <xref:System.IO.FileSystemWatcher>osztály használatú fájl figyelése.</xref:System.IO.FileSystemWatcher> Emiatt függetlenül hozzáférés-vezérlési lista (ACL) a figyelt fájlra vagy könyvtárra vonatkozik érvényes az aktuális szál Windows-identitását.      > [!NOTE] > Hívóknak kód biztonsági (CAS) engedélyek megfelelő szintűnek kell lennie, és az összes figyelt könyvtárak és az elérési útnak NTFS-engedéllyel kell rendelkeznie."
  example:
  - "The following example creates a cache item that uses a HostFileChangeMonitor object to monitor the state of the source data (which is a file) on the file system. The cache entry is defined using a <xref:System.Runtime.Caching.CacheItemPolicy> object to provide eviction and expiration details for the cache entry.  \n  \n [!code-cs[CachingASPNetApplications#1](~/add/codesnippet/csharp/t-system.runtime.caching_2_1.cs)]\n [!code-vb[CachingASPNetApplications#1](~/add/codesnippet/visualbasic/t-system.runtime.caching_2_1.vb)]"
  syntax:
    content: 'public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor'
  inheritance:
  - System.Object
  - System.Runtime.Caching.ChangeMonitor
  - System.Runtime.Caching.FileChangeMonitor
  implements: []
  inheritedMembers:
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  id: '#ctor(System.Collections.Generic.IList{System.String})'
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> osztály."
  remarks: "A HostFileChangeMonitor konstruktor hívások nem null értéket kell megadnia a `filePaths` paraméter. Legalább a konstruktor ellenőrzi az elérési utak a gyűjteménye, amely van át, és ezután inicializálja a figyelést adott elérési útján.      > [!NOTE] > A konstruktor-érvényesítésének csak karakterlánc az elérési út neve. Elérési utak kanonizálására, vagy nem ellenőrzi, hogy létezik-e az elérési utakat."
  syntax:
    content: public HostFileChangeMonitor (System.Collections.Generic.IList<string> filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Generic.IList{System.String}
      description: "Egy vagy több directory elérési utak vagy az elérési utat a figyelheti tartalmazó lista."
  overload: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePaths</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filePaths</code>egyetlen elemet tartalmaz.       – vagy – A elérési utat a <code>filePaths</code> lista <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc."
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  id: FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "A gyűjtemény könyvtárak és fájlok elérési útja számára átadott lekérdezi a &lt;xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A&gt; konstruktor."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<string> FilePaths { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Könyvtárak és fájlok elérési útja gyűjteménye."
  overload: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  id: LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Lekérdezi a csak olvasható érték, amely jelzi a figyelt fájlok vagy elérési út utolsó írási ideje."
  remarks: "Ha egy fájl-módosítás figyelő által figyelt több fájlok vagy elérési utak, ezt a tulajdonságot a készletben található összes fájlra és elérési utak adja vissza a legutóbbi írási idő."
  syntax:
    content: public override DateTimeOffset LastModified { get; }
    return:
      type: System.DateTimeOffset
      description: "Az utolsó írás időpontjának figyelt fájlok vagy elérési útja."
  overload: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Lekérdezi az azonosítója a <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> példány figyelt könyvtárak és fájlok elérési útja alapján."
  remarks: "A karakterlánc, amely a UniqueId tulajdonság értéke a következő részekből értékekből összeállított:-fájl vagy könyvtár elérési útja.      -A legtöbb UTC szerinti idő esetén közelmúltban írási ticks értékként, de egy hexadecimális karakterlánccal.      -A fájlméret, hexadecimális karakterláncból.       Ha egy fájlmódosulási figyelő által figyelt több elérési utat, ez a tulajdonság által visszaadott adatok halmaz zónanevének a az összes figyelt könyvtárak és fájlok elérési útja egy egyetlen karakterlánccá egyesít."
  syntax:
    content: public override string UniqueId { get; }
    return:
      type: System.String
      description: "A módosítás figyelő azonosítója."
  overload: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Caching.FileChangeMonitor
  isExternal: false
  name: System.Runtime.Caching.FileChangeMonitor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: HostFileChangeMonitor.Dispose
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
