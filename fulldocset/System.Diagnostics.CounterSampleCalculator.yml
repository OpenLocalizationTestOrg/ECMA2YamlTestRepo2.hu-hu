### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.CounterSampleCalculator
  id: CounterSampleCalculator
  children:
  - System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)
  - System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  langs:
  - csharp
  name: CounterSampleCalculator
  nameWithType: CounterSampleCalculator
  fullName: System.Diagnostics.CounterSampleCalculator
  type: Class
  summary: "A segédprogram függvényt tartalmaz a teljesítmény számlálóadatok értelmezéséhez."
  syntax:
    content: public static class CounterSampleCalculator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)
  id: ComputeCounterValue(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSampleCalculator
  langs:
  - csharp
  name: ComputeCounterValue(CounterSample)
  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample)
  fullName: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(CounterSample)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egyetlen nyers számláló minta számított értékét számítja ki."
  remarks: "A metódus túlterhelési függvény lekérdezhetik a fontos ComputeCounterValue eredmények csak az alábbi teljesítményszámlálók a <xref:System.Diagnostics.PerformanceCounterType>:- <xref:System.Diagnostics.PerformanceCounterType>- <xref:System.Diagnostics.PerformanceCounterType>- <xref:System.Diagnostics.PerformanceCounterType>- <xref:System.Diagnostics.PerformanceCounterType>- <xref:System.Diagnostics.PerformanceCounterType>más teljesítményszámláló-típusok, a túlterhelési mindig értékét adja vissza 0 (nulla).</xref:System.Diagnostics.PerformanceCounterType> </xref:System.Diagnostics.PerformanceCounterType> </xref:System.Diagnostics.PerformanceCounterType> </xref:System.Diagnostics.PerformanceCounterType> </xref:System.Diagnostics.PerformanceCounterType> </xref:System.Diagnostics.PerformanceCounterType>"
  syntax:
    content: public static float ComputeCounterValue (System.Diagnostics.CounterSample newSample);
    parameters:
    - id: newSample
      type: System.Diagnostics.CounterSample
      description: "A <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> azt jelzi, hogy a legutóbbi minta a rendszer hajtott végre."
    return:
      type: System.Single
      description: "A teljesítményszámláló számított érték lebegőpontos ábrázolása."
  overload: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  id: ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSampleCalculator
  langs:
  - csharp
  name: ComputeCounterValue(CounterSample,CounterSample)
  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample,CounterSample)
  fullName: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(CounterSample,CounterSample)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Két nyers teljesítményszámláló-minták számított értékét számítja ki."
  remarks: ''
  example:
  - "The following example demonstrates the use of the ComputeCounterValue method overload to calculate the value of two raw counter samples.  \n  \n [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/cpp/398b3a8c-6226-4ab5-87ac-_1.cpp)]\n [!code-cs[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/csharp/398b3a8c-6226-4ab5-87ac-_1.cs)]\n [!code-vb[PerformanceCounterType.AverageCounter64#1](~/add/codesnippet/visualbasic/398b3a8c-6226-4ab5-87ac-_1.vb)]"
  syntax:
    content: public static float ComputeCounterValue (System.Diagnostics.CounterSample oldSample, System.Diagnostics.CounterSample newSample);
    parameters:
    - id: oldSample
      type: System.Diagnostics.CounterSample
      description: "A <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> azt jelzi, hogy a fenti példában a rendszer hajtott végre."
    - id: newSample
      type: System.Diagnostics.CounterSample
      description: "A <xref href=&quot;System.Diagnostics.CounterSample&quot;> </xref> azt jelzi, hogy a legutóbbi minta a rendszer hajtott végre."
    return:
      type: System.Single
      description: "A teljesítményszámláló számított érték lebegőpontos ábrázolása."
  overload: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldSample</code>a számláló típusa eltérő használ <code>newSample</code>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "<code>newSample</code>a számláló típusa teljesítmény adatok segítő (PDH) hibát tartalmaz. További információkért lásd: &quot;Ellenőrzése PDH felület visszatérési értékek&quot; Win32 és a COM fejlesztési szakaszában a jelen dokumentáció."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSampleCalculator
  isExternal: false
  name: ComputeCounterValue(CounterSample)
  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample)
  fullName: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(CounterSample)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Diagnostics.CounterSample
  parent: System.Diagnostics
  isExternal: false
  name: CounterSample
  nameWithType: CounterSample
  fullName: System.Diagnostics.CounterSample
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)
  parent: System.Diagnostics.CounterSampleCalculator
  isExternal: false
  name: ComputeCounterValue(CounterSample,CounterSample)
  nameWithType: CounterSampleCalculator.ComputeCounterValue(CounterSample,CounterSample)
  fullName: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(CounterSample,CounterSample)
- uid: System.Diagnostics.CounterSampleCalculator.ComputeCounterValue*
  parent: System.Diagnostics.CounterSampleCalculator
  isExternal: false
  name: ComputeCounterValue
  nameWithType: CounterSampleCalculator.ComputeCounterValue
