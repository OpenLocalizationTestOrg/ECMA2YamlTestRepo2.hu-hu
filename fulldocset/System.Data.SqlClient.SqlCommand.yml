### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCommand
  id: SqlCommand
  children:
  - System.Data.SqlClient.SqlCommand.#ctor
  - System.Data.SqlClient.SqlCommand.#ctor(System.String)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  - System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  - System.Data.SqlClient.SqlCommand.Cancel
  - System.Data.SqlClient.SqlCommand.Clone
  - System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlCommand.CommandText
  - System.Data.SqlClient.SqlCommand.CommandTimeout
  - System.Data.SqlClient.SqlCommand.CommandType
  - System.Data.SqlClient.SqlCommand.Connection
  - System.Data.SqlClient.SqlCommand.CreateDbParameter
  - System.Data.SqlClient.SqlCommand.CreateParameter
  - System.Data.SqlClient.SqlCommand.DbConnection
  - System.Data.SqlClient.SqlCommand.DbParameterCollection
  - System.Data.SqlClient.SqlCommand.DbTransaction
  - System.Data.SqlClient.SqlCommand.DesignTimeVisible
  - System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  - System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReader
  - System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteScalar
  - System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  - System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlCommand.Notification
  - System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  - System.Data.SqlClient.SqlCommand.Parameters
  - System.Data.SqlClient.SqlCommand.Prepare
  - System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  - System.Data.SqlClient.SqlCommand.StatementCompleted
  - System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  - System.Data.SqlClient.SqlCommand.Transaction
  - System.Data.SqlClient.SqlCommand.UpdatedRowSource
  langs:
  - csharp
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
  type: Class
  summary: "Transact-SQL-utasítás vagy tárolt eljárás végrehajtásához egy SQL Server-adatbázis jelöli. Ez az osztály nem örökölhető."
  remarks: "SqlCommand példányának létrehozásakor olvasási/írási tulajdonságai vannak beállítva, az eredeti értékekre. Ezek az értékek listája tekintse meg az SqlCommand konstruktor.       SqlCommand szolgáltatásokat az SQL Server-adatbázis parancsok végrehajtása a következő módszerek: |} Elem |} Leírás |}   |----------|-----------------|   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>| Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás, amely az SqlCommand, általában a parancsok, például az INSERT, törlés, frissítés és SET utasítás végrehajtása le aszinkron végrehajtása.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Minden egyes hívásakor <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>amely befejezi a műveletet, általában a külön szálban <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>hívásakor kell megfeleltetni. |}   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>| A Transact-SQL-utasítás vagy tárolt eljárás, amely az SqlCommand írja le, és egy vagy több beolvasásra aszinkron végrehajtása állítja be a kiszolgáló kezdeményezi.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Minden egyes hívásakor <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>amely befejezi a műveletet, általában a külön szálban <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>hívásakor kell megfeleltetni. |}   | <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>| Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által az SqlCommand leírt aszinkron végrehajtása.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Minden egyes `BeginExecuteXmlReader` típusnak kell megfeleltetni hívása `EndExecuteXmlReader`, amely általában a külön szálban, a művelet befejeződik, és <xref:System.Xml.XmlReader>objektum beállítása/beolvasása. |}   | <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>| Visszaadott sorok parancsok végrehajtása.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> </xref:System.Xml.XmlReader> A jobb teljesítmény érdekében <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>hívja meg a Transact-SQL használatával parancsok `sp_executesql` rendszer tárolt eljárást.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ezért <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>esetleg nincs a hatása, ha a használni kívánt parancsok például állítsa be a Transact-SQL utasítás végrehajtásához. |}   | <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>| Parancsok, például a Transact-SQL beszúrási, a törlés, a frissítés és a SET utasítás végrehajtása. |}   | <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>| Egyetlen értéket (például az összesített érték) beolvas egy adatbázisból. |}   | <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>| A <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>küld a <xref:System.Data.SqlClient.SqlCommand.Connection%2A>és <xref:System.Xml.XmlReader>objektum alkot. |}       Visszaállíthatja a <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>tulajdonság és az SqlCommand objektum újbóli.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Azonban be kell zárnia a <xref:System.Data.SqlClient.SqlDataReader>egy új vagy az előző parancs végrehajtás előtt.</xref:System.Data.SqlClient.SqlDataReader>       Ha egy <xref:System.Data.SqlClient.SqlException>a metódus végrehajtása a SqlCommand állítja elő a <xref:System.Data.SqlClient.SqlConnection>nyitva marad, ha a súlyossági szint 19 vagy kevesebb.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlException> 20 vagy nagyobb a fontossági szint esetén a kiszolgáló a <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> szokásos bezárása után Azonban a felhasználó újra megnyitni és folytatható.      > [!NOTE] > Nameless, más néven a sorszáma, paraméterek nem támogatottak az a .NET-keretrendszer adatszolgáltatója az SQL Server."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a SqlCommand, and a <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.  \n  \n [!code-cs[Classic WebData SqlCommand Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._6_1.cs)]\n [!code-vb[Classic WebData SqlCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._6_1.vb)]  \n  \n The following sample shows how to create and execute different types of SqlCommand objects.  \n  \n First you must create the sample database, by executing the following script:  \n  \n```  \nUSE [master]  \nGO  \n  \nCREATE DATABASE [MySchool]  \nGO  \n  \nUSE [MySchool]  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE procedure [dbo].[CourseExtInfo] @CourseId int  \nas  \nselect c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  \nfrom Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  \nwhere c.CourseID=@CourseId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  \nas  \nselect @CourseCount=Count(c.CourseID)  \nfrom course as c  \nwhere c.DepartmentID=@DepartmentId  \n  \nselect d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  \nfrom Department as d  \nwhere d.DepartmentID=@DepartmentId  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCreate PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   \n@Year int,@BudgetSum money output  \nAS  \nBEGIN  \n        SELECT @BudgetSum=SUM([Budget])  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year   \n  \nSELECT [DepartmentID]  \n      ,[Name]  \n      ,[Budget]  \n      ,[StartDate]  \n      ,[Administrator]  \n  FROM [MySchool].[dbo].[Department]  \n  Where YEAR([StartDate])=@Year  \n  \nEND  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,  \n[Year] [smallint] NOT NULL,  \n[Title] [nvarchar](100) NOT NULL,  \n[Credits] [int] NOT NULL,  \n[DepartmentID] [int] NOT NULL,  \n CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   \n(  \n[CourseID] ASC,  \n[Year] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[Name] [nvarchar](50) NOT NULL,  \n[Budget] [money] NOT NULL,  \n[StartDate] [datetime] NOT NULL,  \n[Administrator] [int] NULL,  \n CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   \n(  \n[DepartmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[Person](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[LastName] [nvarchar](50) NOT NULL,  \n[FirstName] [nvarchar](50) NOT NULL,  \n[HireDate] [datetime] NULL,  \n[EnrollmentDate] [datetime] NULL,  \n CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   \n(  \n[PersonID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \nCREATE TABLE [dbo].[StudentGrade](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,  \n[CourseID] [nvarchar](10) NOT NULL,  \n[StudentID] [int] NOT NULL,  \n[Grade] [decimal](3, 2) NOT NULL,  \n CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   \n(  \n[EnrollmentID] ASC  \n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  \n  \nGO  \n  \nSET ANSI_NULLS ON  \nGO  \nSET QUOTED_IDENTIFIER ON  \nGO  \ncreate view [dbo].[EnglishCourse]  \nas  \nselect c.CourseID,c.Title,c.Credits,c.DepartmentID  \nfrom Course as c join Department as d on c.DepartmentID=d.DepartmentID  \nwhere d.Name=N'English'  \n  \nGO  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  \nINSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  \nSET IDENTITY_INSERT [dbo].[Department] ON   \n  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  \nINSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  \nSET IDENTITY_INSERT [dbo].[Department] OFF  \nSET IDENTITY_INSERT [dbo].[Person] ON   \n  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  \nINSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  \nSET IDENTITY_INSERT [dbo].[Person] OFF  \nSET IDENTITY_INSERT [dbo].[StudentGrade] ON   \n  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  \nINSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  \nSET IDENTITY_INSERT [dbo].[StudentGrade] OFF  \nALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  \nREFERENCES [dbo].[Department] ([DepartmentID])  \nGO  \nALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  \nGO  \nALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  \nREFERENCES [dbo].[Person] ([PersonID])  \nGO  \nALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  \nGO  \n```  \n  \n Next, compile and execute the following:  \n  \n```  \nusing System;  \nusing System.Data;  \nusing System.Data.SqlClient;  \nusing System.Threading.Tasks;  \n  \nclass Program {  \n  \n   static class SqlHelper {  \n      // Set the connection, command, and then execute the command with non query.  \n      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   \n               // type is only for OLE DB.    \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteNonQuery();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command and only return one value.  \n      public static Object ExecuteScalar(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         using (SqlConnection conn = new SqlConnection(connectionString)) {  \n            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n               cmd.CommandType = commandType;  \n               cmd.Parameters.AddRange(parameters);  \n  \n               conn.Open();  \n               return cmd.ExecuteScalar();  \n            }  \n         }  \n      }  \n  \n      // Set the connection, command, and then execute the command with query and return the reader.  \n      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  \n          CommandType commandType, params SqlParameter[] parameters) {  \n         SqlConnection conn = new SqlConnection(connectionString);  \n  \n         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  \n            cmd.CommandType = commandType;  \n            cmd.Parameters.AddRange(parameters);  \n  \n            conn.Open();  \n            // When using CommandBehavior.CloseConnection, the connection will be closed when the   \n            // IDataReader is closed.  \n            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  \n  \n            return reader;  \n         }  \n      }  \n   }  \n  \n   static void Main(string[] args) {  \n      String connectionString = \"Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;\";  \n  \n      CountCourses(connectionString, 2012);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Following result is the departments that started from 2007:\");  \n      GetDepartments(connectionString, 2007);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Add the credits when the credits of course is lower than 4.\");  \n      AddCredits(connectionString, 4);  \n      Console.WriteLine();  \n  \n      Console.WriteLine(\"Please press any key to exit...\");  \n      Console.ReadKey();  \n   }  \n  \n   static void CountCourses(String connectionString, Int32 year) {  \n      String commandText = \"Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year\";  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  \n      Int32 count;  \n      if (Int32.TryParse(oValue.ToString(), out count))  \n         Console.WriteLine(\"There {0} {1} course{2} in {3}.\", count > 1 ? \"are\" : \"is\", count, count > 1 ? \"s\" : null, year);  \n   }  \n  \n   // Display the Departments that start from the specified year.  \n   static void GetDepartments(String connectionString, Int32 year) {  \n      String commandText = \"dbo.GetDepartmentsOfSpecifiedYear\";  \n  \n      // Specify the year of StartDate  \n      SqlParameter parameterYear = new SqlParameter(\"@Year\", SqlDbType.Int);  \n      parameterYear.Value = year;  \n  \n      // When the direction of parameter is set as Output, you can get the value after   \n      // executing the command.  \n      SqlParameter parameterBudget = new SqlParameter(\"@BudgetSum\", SqlDbType.Money);  \n      parameterBudget.Direction = ParameterDirection.Output;  \n  \n      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  \n          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  \n         Console.WriteLine(\"{0,-20}{1,-20}{2,-20}{3,-20}\", \"Name\", \"Budget\", \"StartDate\",  \n             \"Administrator\");  \n         while (reader.Read()) {  \n            Console.WriteLine(\"{0,-20}{1,-20:C}{2,-20:d}{3,-20}\", reader[\"Name\"],  \n                reader[\"Budget\"], reader[\"StartDate\"], reader[\"Administrator\"]);  \n         }  \n      }  \n      Console.WriteLine(\"{0,-20}{1,-20:C}\", \"Sum:\", parameterBudget.Value);  \n   }  \n  \n   // If credits of course is lower than the certain value, the method will add the credits.  \n   static void AddCredits(String connectionString, Int32 creditsLow) {  \n      String commandText = \"Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits\";  \n  \n      SqlParameter parameterCredits = new SqlParameter(\"@Credits\", creditsLow);  \n  \n      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  \n  \n      Console.WriteLine(\"{0} row{1} {2} updated.\", rows, rows > 1 ? \"s\" : null, rows > 1 ? \"are\" : \"is\");  \n   }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> osztály."
  remarks: "A alap konstruktor minden mezőt alapértékkel inicializál. Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand> példánya      | Tulajdonságok |} A kezdeti érték |}   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|} üres karakterlánc (&quot;&quot;) |}   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|}&30; |}   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| NULL |}       Módosíthatja az alábbi tulajdonságok keresztül külön hívása a tulajdonság értéke.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._39_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._39_1.cs)]"
  syntax:
    content: public SqlCommand ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> osztály szöveget a lekérdezés."
  remarks: "Ha egy példánya <xref:System.Data.SqlClient.SqlCommand>jön létre, a következő olvasási/írási tulajdonsága kezdeti értékekre.</xref:System.Data.SqlClient.SqlCommand>      | Tulajdonságok |} A kezdeti érték |}   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|}&30; |}   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>|} null |}       Módosíthatja az alábbi tulajdonságok keresztül külön hívása a tulajdonság értéke.</xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.  \n  \n [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._21_1.vb)]\n [!code-cs[Classic WebData SqlCommand.SqlCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._21_1.cs)]"
  syntax:
    content: public SqlCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "A lekérdezés szövegét."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> osztály szöveget a lekérdezés és a <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand> példánya      | Tulajdonságok |} A kezdeti érték |}   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|}&30; |}   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Egy új <xref:System.Data.SqlClient.SqlConnection>Ez az érték a `connection` paraméter. |}       A kapcsolódó tulajdonság beállítása az összes paramétert az érték módosítására képes.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/csharp/c858d494-4959-470c-91ba-_1.cs)]\n [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/add/codesnippet/visualbasic/c858d494-4959-470c-91ba-_1.vb)]"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "A lekérdezés szövegét."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> kapcsolatot, amely jelöli az SQL Server-példányra."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> osztály szöveget a lekérdezés egy <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>, és a <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref>."
  remarks: "Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Data.SqlClient.SqlCommand>.</xref:System.Data.SqlClient.SqlCommand> példánya      | Tulajdonságok |} A kezdeti érték |}   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|}&30; |}   | <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>| `CommandType.Text`|   | <xref:System.Data.SqlClient.SqlCommand.Connection%2A>| Egy új <xref:System.Data.SqlClient.SqlConnection>Ez az érték a `connection` paraméter. |}       A kapcsolódó tulajdonság beállítása az összes paramétert az érték módosítására képes.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.CommandText%2A>"
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "A lekérdezés szövegét."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> kapcsolatot, amely jelöli az SQL Server-példányra."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "A <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> , amelyben a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> hajt végre."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)'
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> a megadott parancs szövege, a kapcsolat, a tranzakció és a titkosítási beállítás osztályt."
  syntax:
    content: public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);
    parameters:
    - id: cmdText
      type: System.String
      description: "A lekérdezés szövegét."
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> kapcsolatot, amely jelöli az SQL Server-példányra."
    - id: transaction
      type: System.Data.SqlClient.SqlTransaction
      description: "A <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> , amelyben a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> hajt végre."
    - id: columnEncryptionSetting
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "A titkosítási beállításokkal. További információkért lásd: [mindig titkosítja](https://msdn.microsoft.com/library/mt163865.aspx)."
  overload: System.Data.SqlClient.SqlCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  id: BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által ismertetett aszinkron végrehajtása <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "A BeginExecuteNonQuery metódus elindítja a folyamatot is aszinkron módon lehet egy [!INCLUDE[tsql](~/add/includes/tsql-md.md)] utasítás vagy tárolt eljárás, amely nem ad vissza, sort, hogy más feladatok futtathatók egyszerre, amíg az utasítás végrehajtása történik. Az utasítás befejezése után meg kell hívnia a fejlesztők a <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metódus a művelet befejezéséhez.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> A BeginExecuteNonQuery metódus azonnal visszaadja (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> BeginExecuteNonQuery nincs hatással), de addig, amíg a kód végrehajtja a megfelelő <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metódus hívása, azt kell nem hajtható végre: Indítsa el a szinkron vagy aszinkron végrehajtásának azonos más hívási <xref:System.Data.SqlClient.SqlCommand>objektum.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> Hívja a <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>előtt a parancs végrehajtása befejeződött okai a <xref:System.Data.SqlClient.SqlCommand>objektum letiltása, amíg a végrehajtás befejeződik.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       Vegye figyelembe, hogy a parancs szövege és paraméterek kell küldeni a kiszolgáló szinkron módon történik. Ha nagy parancs vagy sok paraméterek kerülnek, ez a módszer blokkolhatják írási műveletek során. A parancs el lett küldve, a metódus azonnal visszaadja a választ a kiszolgáló – várakozás nélkül után ez azt jelenti, hogy olvasási műveletek aszinkron jellegűek.       Ez a túlterhelés nem támogatja a visszahívási eljárást, a fejlesztők kell annak meghatározásához, hogy a parancs futása befejeződött, vagy lekérdezési használatával a <xref:System.IAsyncResult.IsCompleted%2A>tulajdonsága a <xref:System.IAsyncResult>; BeginExecuteNonQuery metódus által visszaadott vagy várja meg, <xref:System.IAsyncResult.AsyncWaitHandle%2A>a visszaadott <xref:System.IAsyncResult>.</xref:System.IAsyncResult> tulajdonsága</xref:System.IAsyncResult.AsyncWaitHandle%2A> egy vagy több parancsból megvalósításának</xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>"
  example:
  - "The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously. In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text. Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._34_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.sqlclient._34_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével kérdezze le, vagy várja meg, eredményeket, vagy mindkét; Ez az érték is szükséges hívásakor <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, amely az érintett sorok számát adja vissza.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hiba történt a parancs szövege végrehajtása közben.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A név-érték pár &quot;az aszinkron feldolgozás = true&quot; ki lett hagyva a kapcsolati karakterláncot, ezt a kapcsolatot definiáló belül <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  id: BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által ismertetett aszinkron végrehajtása <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, egy visszahívási eljárás és állapotának információt."
  remarks: "A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metódus elindítja a folyamatot is a Transact-SQL-utasítás vagy tárolt eljárás nem ad vissza a sorok, aszinkron módon lehet, hogy más feladatok futtathatók egyszerre, amíg az utasítás végrehajtása történik.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Az utasítás befejezése után meg kell hívnia a fejlesztők a <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metódus a művelet befejezéséhez.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metódus azonnal visszaadja (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> BeginExecuteNonQuery nincs hatással), de addig, amíg a kód végrehajtja a megfelelő <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>metódus hívása, azt kell nem hajtható végre: Indítsa el a szinkron vagy aszinkron végrehajtásának azonos más hívási <xref:System.Data.SqlClient.SqlCommand>objektum.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Hívja a <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>előtt a parancs végrehajtása befejeződött okai a <xref:System.Data.SqlClient.SqlCommand>objektum letiltása, amíg a végrehajtás befejeződik.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>       A `callback` paraméter lehetővé teszi, hogy adjon meg egy <xref:System.AsyncCallback>delegált is nevezett, az utasítás befejeződésekor.</xref:System.AsyncCallback> Hívása a <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A>delegált művelet belül, vagy az alkalmazáson belül más helyről származó mód.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> Emellett minden objektumot továbbíthatja a `asyncStateObject` paraméter, és a visszahívás eljárás kérheti le az adatokat a <xref:System.IAsyncResult.AsyncState%2A>tulajdonság.</xref:System.IAsyncResult.AsyncState%2A>       Vegye figyelembe, hogy a parancs szövege és paraméterek kell küldeni a kiszolgáló szinkron módon történik. Ha nagy parancs vagy sok paraméterek kerülnek, ez a módszer blokkolhatják írási műveletek során. A parancs el lett küldve, a metódus azonnal visszaadja a választ a kiszolgáló – várakozás nélkül után ez azt jelenti, hogy olvasási műveletek aszinkron jellegűek.       A visszahívási eljárás a háttérszálon, a Microsoft .NET közös nyelvi futtatókörnyezet által biztosított a hajt végre, mert nagyon fontos, hogy szánjon egy szigorú megközelítés kezelnek az alkalmazások belül a szálak közötti interakció. Például hogy nem működhet együtt az űrlap tartalmát belül a visszahívási eljárásnak; kell rendelkeznie az űrlap frissítése, át kell váltania vissza az űrlap szál művelet végrehajtásához a munkáját. Ebben a témakörben a példa bemutatja, ezt a viselkedést.       A visszahívási eljárás kivételeket okozott a művelet végrehajtása során felmerülő hibákat. A kivétel a visszahívási eljárás, és nem az alkalmazás kezelni kell. Ebben a témakörben további információt a példa tekintse meg a visszahívási eljárás kivételek kezelése."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteNonQuery method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteNonQueryForm.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>, amelyet a parancs végrehajtásának befejezése delegált.</xref:System.AsyncCallback> Adjon át <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Microsoft Visual Basic) azt jelzi, hogy nincs visszahívás szükséges."
    - id: stateObject
      type: System.Object
      description: "A felhasználói állapot objektum a visszahívási eljárásnak átadott. Az objektum az az objektum eljárás használatával belül beolvasni a <xref:System.IAsyncResult.AsyncState*>tulajdonság.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével kérdezze le, vagy várja meg, eredményeket, vagy mindkét; Ez az érték is szükséges hívásakor <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*>, amely az érintett sorok számát adja vissza.</xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hiba történt a parancs szövege végrehajtása közben.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A név-érték pár &quot;az aszinkron feldolgozás = true&quot; ki lett hagyva a kapcsolati karakterláncot, ezt a kapcsolatot definiáló belül <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  id: BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által ismertetett aszinkron végrehajtása <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, és egy vagy több eredményhalmazt lekéri a kiszolgálóról."
  remarks: "A BeginExecuteReader metódus elindítja a folyamatot is a Transact-SQL-utasítás vagy tárolt eljárás, amely visszaadja a sorokat, aszinkron módon lehet, hogy más feladatok futtathatók egyszerre, amíg az utasítás végrehajtása történik. Az utasítás befejezése után meg kell hívnia a fejlesztők a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metódus befejezheti a műveletet, és lekéréséhez a <xref:System.Data.SqlClient.SqlDataReader>a parancs által visszaadott.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> A BeginExecuteReader metódus azonnal visszaadja az eredményeket, de addig, amíg a kód végrehajtja a megfelelő <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metódus hívása, azt kell nem hajtható végre: Indítsa el a szinkron vagy aszinkron végrehajtásának azonos más hívási <xref:System.Data.SqlClient.SqlCommand>objektum.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Hívja a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>előtt a parancs végrehajtása befejeződött okai a <xref:System.Data.SqlClient.SqlCommand>objektum letiltása, amíg a végrehajtás befejeződik.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       Vegye figyelembe, hogy a parancs szövege és paraméterek kell küldeni a kiszolgáló szinkron módon történik. Ha nagy parancs vagy sok paraméterek kerülnek, ez a módszer blokkolhatják írási műveletek során. A parancs el lett küldve, a metódus azonnal visszaadja a választ a kiszolgáló – várakozás nélkül után ez azt jelenti, hogy olvasási műveletek aszinkron jellegűek. Bár a parancs végrehajtása aszinkron, továbbra is szinkron érték lekérése is. Ez azt jelenti, hogy a hívások <xref:System.Data.SqlClient.SqlDataReader.Read%2A>Előfordulhat, hogy blokkolja, ha további adatokra szükség, és a mögöttes hálózati olvasási művelet blokkok.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Ez a túlterhelés nem támogatja a visszahívási eljárást, a fejlesztők kell annak meghatározásához, hogy a parancs futása befejeződött, vagy lekérdezési használatával a <xref:System.IAsyncResult.IsCompleted%2A>tulajdonsága a <xref:System.IAsyncResult>; BeginExecuteReader metódus által visszaadott vagy várja meg, <xref:System.IAsyncResult.AsyncWaitHandle%2A>a visszaadott <xref:System.IAsyncResult>.</xref:System.IAsyncResult> tulajdonsága</xref:System.IAsyncResult.AsyncWaitHandle%2A> egy vagy több parancsból megvalósításának</xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Ha <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vagy BeginExecuteReader hozzáférés XML-adatokra, SQL Server rendszer vissza XML eredményt 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._4_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével kérdezze le, vagy várja meg, eredményeket, vagy mindkét; Ez az érték is szükséges hívásakor <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, mely értéket ad vissza egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> példány használható a visszaadott sorok beolvasása.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hiba történt a parancs szövege végrehajtása közben.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A név-érték pár &quot;az aszinkron feldolgozás = true&quot; ki lett hagyva a kapcsolati karakterláncot, ezt a kapcsolatot definiáló belül <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  id: BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által ismertetett aszinkron végrehajtása <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> egyikével a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékeket."
  remarks: "A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metódus elindítja a folyamatot is a Transact-SQL-utasítás vagy tárolt eljárás, amely visszaadja a sorokat, aszinkron módon lehet, hogy más feladatok futtathatók egyszerre, amíg az utasítás végrehajtása történik.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Az utasítás befejezése után meg kell hívnia a fejlesztők a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metódus befejezheti a műveletet, és lekéréséhez a <xref:System.Data.SqlClient.SqlDataReader>a parancs által visszaadott.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metódus azonnal visszaadja az eredményeket, de addig, amíg a kód végrehajtja a megfelelő <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metódus hívása, azt kell nem hajtható végre: Indítsa el a szinkron vagy aszinkron végrehajtásának azonos más hívási <xref:System.Data.SqlClient.SqlCommand>objektum.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Hívja a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>előtt a parancs végrehajtása befejeződött okai a <xref:System.Data.SqlClient.SqlCommand>objektum letiltása, amíg a végrehajtás befejeződik.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       A `behavior` paraméter lehetővé teszi, hogy a parancs és a kapcsolat viselkedését szabályozó beállítások megadása. Ezeket az értékeket is kombinálható (a programozási nyelvet `OR` operátor); általában fejlesztők a `CommandBehavior.CloseConnection` győződjön meg arról, hogy a kapcsolat megszakad a futtatókörnyezet érték amikor a <xref:System.Data.SqlClient.SqlDataReader>le van zárva.</xref:System.Data.SqlClient.SqlDataReader>       Vegye figyelembe, hogy a parancs szövege és paraméterek kell küldeni a kiszolgáló szinkron módon történik. Ha nagy parancs vagy sok paraméterek kerülnek, ez a módszer blokkolhatják írási műveletek során. A parancs el lett küldve, a metódus azonnal visszaadja a választ a kiszolgáló – várakozás nélkül után ez azt jelenti, hogy olvasási műveletek aszinkron jellegűek. Bár a parancs végrehajtása aszinkron, továbbra is szinkron érték lekérése is. Ez azt jelenti, hogy a hívások <xref:System.Data.SqlClient.SqlDataReader.Read%2A>Előfordulhat, hogy blokkolja, ha további adatokra szükség, és a mögöttes hálózati olvasási művelet blokkok.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       Ez a túlterhelés nem támogatja a visszahívási eljárást, a fejlesztők kell vagy kérdezze le annak meghatározásához, hogy a parancs futása befejeződött, <xref:System.IAsyncResult.IsCompleted%2A>a <xref:System.IAsyncResult>visszaadott <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metódus; vagy várja meg, <xref:System.IAsyncResult.AsyncWaitHandle%2A>a visszaadott <xref:System.IAsyncResult>.</xref:System.IAsyncResult> tulajdonsága</xref:System.IAsyncResult.AsyncWaitHandle%2A> egy vagy több parancsból befejezésének</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> tulajdonság</xref:System.IAsyncResult.IsCompleted%2A> használatával       Ha <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>XML-adatok eléréséhez az SQL Server eredményeket ad vissza semmilyen XML 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following console application starts the process of retrieving a data reader asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.  \n  \n This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.  \n  \n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/visualbasic/d7d83823-a2e6-4b2d-a7a2-_1.vb)]\n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/add/codesnippet/csharp/d7d83823-a2e6-4b2d-a7a2-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Egy a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékek jelző utasítás végrehajtása és adatszolgáltató beállításait."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével lekérdezésére, várja meg az eredményeket, vagy mindkettőt; ezt az értéket is van szükség, ha a meghívás <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, mely értéket ad vissza egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> példány használható a visszaadott sorok beolvasása.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hiba történt a parancs szövege végrehajtása közben.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A név-érték pár &quot;az aszinkron feldolgozás = true&quot; ki lett hagyva a kapcsolati karakterláncot, ezt a kapcsolatot definiáló belül <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  id: BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által ismertetett aszinkron végrehajtása <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> és egy vagy több eredményhalmazt lekéri a kiszolgálóról, egy visszahívási eljárás és állapotának információt."
  remarks: "A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metódus elindítja a folyamatot is a Transact-SQL-utasítás vagy tárolt eljárás, amely visszaadja a sorokat, aszinkron módon lehet, hogy más feladatok futtathatók egyszerre, amíg az utasítás végrehajtása történik.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Az utasítás befejezése után meg kell hívnia a fejlesztők a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metódus befejezheti a műveletet, és lekéréséhez a <xref:System.Data.SqlClient.SqlDataReader>a parancs által visszaadott.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metódus azonnal visszaadja az eredményeket, de addig, amíg a kód végrehajtja a megfelelő <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metódus hívása, azt kell nem hajtható végre: Indítsa el a szinkron vagy aszinkron végrehajtásának azonos más hívási <xref:System.Data.SqlClient.SqlCommand>objektum.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Hívja a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>a parancs végrehajtásának befejezése előtt ok a <xref:System.Data.SqlClient.SqlCommand>objektum letiltása, amíg a végrehajtás befejeződik.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       A `callback` paraméter lehetővé teszi, hogy adjon meg egy <xref:System.AsyncCallback>delegált is nevezett, az utasítás befejeződésekor.</xref:System.AsyncCallback> Hívása a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>delegált művelet belül, vagy az alkalmazáson belül más helyről származó mód.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Emellett minden objektumot továbbíthatja a `stateObject` paraméter, és a visszahívás eljárás kérheti le az adatokat a <xref:System.IAsyncResult.AsyncState%2A>tulajdonság.</xref:System.IAsyncResult.AsyncState%2A>       Vegye figyelembe, hogy a parancs szövege és paraméterek kell küldeni a kiszolgáló szinkron módon történik. Ha nagy parancs vagy sok paraméterek kerülnek, ez a módszer blokkolhatják írási műveletek során. A parancs el lett küldve, a metódus azonnal visszaadja a választ a kiszolgáló – várakozás nélkül után ez azt jelenti, hogy olvasási műveletek aszinkron jellegűek. Bár a parancs végrehajtása aszinkron, továbbra is szinkron érték lekérése is. Ez azt jelenti, hogy a hívások <xref:System.Data.SqlClient.SqlDataReader.Read%2A>Előfordulhat, hogy blokkolja, ha további adatokra szükség, és a mögöttes hálózati olvasási művelet blokkok.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       A visszahívási eljárásnak a háttérszálon, a Microsoft .NET-futtatókörnyezet által biztosított a hajt végre, mert nagyon fontos, hogy szánjon egy szigorú megközelítés kezelnek az alkalmazások belül a szálak közötti interakció. Például hogy nem működhet együtt az űrlap tartalmát belül a visszahívási eljárásnak; kell rendelkeznie az űrlap frissítése, át kell váltania vissza az űrlap szál művelet végrehajtásához a munkáját. Ebben a témakörben a példa bemutatja, ezt a viselkedést.       A visszahívási eljárás kivételeket okozott a művelet végrehajtása során felmerülő hibákat. A kivétel a visszahívási eljárás, és nem az alkalmazás kezelni kell. Ebben a témakörben további információt a példa tekintse meg a visszahívási eljárás kivételek kezelése.       Ha <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>XML-adatok eléréséhez az SQL Server eredményeket ad vissza semmilyen XML 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to BeginExecuteReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>, amelyet a parancs végrehajtásának befejezése delegált.</xref:System.AsyncCallback> Adjon át <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Microsoft Visual Basic) azt jelzi, hogy nincs visszahívás szükséges."
    - id: stateObject
      type: System.Object
      description: "A felhasználói állapot objektum a visszahívási eljárásnak átadott. Az objektum az az objektum eljárás használatával belül beolvasni a <xref:System.IAsyncResult.AsyncState*>tulajdonság.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével lekérdezésére, várjon, amíg eredménye, vagy mindkettőt; Ez az érték is szükséges hívásakor <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, mely értéket ad vissza egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> példányon, amely használható a visszaadott sorok beolvasása.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hiba történt a parancs szövege végrehajtása közben.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A név-érték pár &quot;az aszinkron feldolgozás = true&quot; ki lett hagyva a kapcsolati karakterláncot, ezt a kapcsolatot definiáló belül <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  id: BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által ismertetett aszinkron végrehajtása <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>, egyikével a <xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;> </xref> értékeket, és lekérése közben egy vagy több eredményhalmazt fel azokat a kiszolgálóról, egy visszahívási eljárás és állapotának információt."
  remarks: "A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metódus elindítja a folyamatot is a Transact-SQL-utasítás vagy tárolt eljárás, amely visszaadja a sorokat, aszinkron módon lehet, hogy más feladatok futtathatók egyszerre, amíg az utasítás végrehajtása történik.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Az utasítás befejezése után meg kell hívnia a fejlesztők a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metódus befejezheti a műveletet, és lekéréséhez a <xref:System.Data.SqlClient.SqlDataReader>a parancs által visszaadott.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metódus azonnal visszaadja az eredményeket, de addig, amíg a kód végrehajtja a megfelelő <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>metódus hívása, azt kell nem hajtható végre: Indítsa el a szinkron vagy aszinkron végrehajtásának azonos más hívási <xref:System.Data.SqlClient.SqlCommand>objektum.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Hívja a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>előtt a parancs végrehajtása befejeződött okai a <xref:System.Data.SqlClient.SqlCommand>objektum letiltása, amíg a végrehajtás befejeződik.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>       A `callback` paraméter lehetővé teszi, hogy adjon meg egy <xref:System.AsyncCallback>delegált is nevezett, az utasítás befejeződésekor.</xref:System.AsyncCallback> Hívása a <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A>delegált művelet belül, vagy az alkalmazáson belül más helyről származó mód.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> Emellett minden objektumot továbbíthatja a `stateObject` paraméter, és a visszahívás eljárás kérheti le az adatokat a <xref:System.IAsyncResult.AsyncState%2A>tulajdonság.</xref:System.IAsyncResult.AsyncState%2A>       A `behavior` paraméter lehetővé teszi, hogy a parancs és a kapcsolat viselkedését szabályozó beállítások megadása. Ezeket az értékeket is kombinálható (a programozási nyelvet `Or` operátor); általában fejlesztők a `CloseConnection` győződjön meg arról, hogy a kapcsolat megszakad a futtatókörnyezet érték amikor a <xref:System.Data.SqlClient.SqlDataReader>le van zárva.</xref:System.Data.SqlClient.SqlDataReader> A fejlesztők is optimalizálhatja a működését a <xref:System.Data.SqlClient.SqlDataReader>megadásával a `SingleRow` értéke, ha ismert előre, hogy a Transact-SQL utasítás vagy tárolt eljárás csak sort adja vissza egy egyetlen.</xref:System.Data.SqlClient.SqlDataReader>       Vegye figyelembe, hogy a parancs szövege és paraméterek kell küldeni a kiszolgáló szinkron módon történik. Ha nagy parancs vagy sok paraméterek kerülnek, ez a módszer blokkolhatják írási műveletek során. A parancs el lett küldve, a metódus azonnal visszaadja a választ a kiszolgáló – várakozás nélkül után ez azt jelenti, hogy olvasási műveletek aszinkron jellegűek. Bár a parancs végrehajtása aszinkron, továbbra is szinkron érték lekérése is. Ez azt jelenti, hogy a hívások <xref:System.Data.SqlClient.SqlDataReader.Read%2A>Előfordulhat, hogy blokkolja, ha további adatokra szükség, és a mögöttes hálózati olvasási művelet blokkok.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       A visszahívási eljárás a háttérszálon, a Microsoft .NET közös nyelvi futtatókörnyezet által biztosított a hajt végre, mert nagyon fontos, hogy szánjon egy szigorú megközelítés kezelnek az alkalmazások belül a szálak közötti interakció. Például, hogy nem működhet tartalmával egy képernyőn belül a visszahívási eljárás--kell rendelkeznie az űrlap frissítése át kell váltania vissza az űrlap szál művelet végrehajtásához a munkáját. Ebben a témakörben a példa bemutatja, ezt a viselkedést.       A visszahívási eljárás kivételeket okozott a művelet végrehajtása során felmerülő hibákat. A kivétel a visszahívási eljárás, és nem az alkalmazás kezelni kell. Ebben a témakörben további információt a példa tekintse meg a visszahívási eljárás kivételek kezelése.       Ha <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>XML-adatok eléréséhez SQL Server rendszer az eredményeket bármely XML 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). Because the sample executes the command asynchronously, the form remains responsive while awaiting the results. This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>, amelyet a parancs végrehajtásának befejezése delegált.</xref:System.AsyncCallback> Adjon át <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Microsoft Visual Basic) azt jelzi, hogy nincs visszahívás szükséges."
    - id: stateObject
      type: System.Object
      description: "A felhasználói állapot objektum a visszahívási eljárásnak átadott. Az objektum az az objektum eljárás használatával belül beolvasni a <xref:System.IAsyncResult.AsyncState*>tulajdonság.</xref:System.IAsyncResult.AsyncState*>"
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Egy a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékek jelző utasítás végrehajtása és adatszolgáltató beállításait."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével kérdezze le, vagy várja meg, eredményeket, vagy mindkét; Ez az érték is szükséges hívásakor <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*>, mely értéket ad vissza egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> példányon, amely használható a visszaadott sorok beolvasása.</xref:System.Data.SqlClient.SqlCommand.EndExecuteReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hiba történt a parancs szövege végrehajtása közben.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A név-érték pár &quot;az aszinkron feldolgozás = true&quot; ki lett hagyva a kapcsolati karakterláncot, ezt a kapcsolatot definiáló belül <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  id: BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által ismertetett aszinkron végrehajtása <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> és visszaadja az eredményeket egy <xref:System.Xml.XmlReader>objektum.</xref:System.Xml.XmlReader>"
  remarks: "A BeginExecuteXmlReader metódus elindítja a folyamatot is aszinkron módon lehet futtatni egy sort adja vissza, XML, Transact-SQL utasítást, hogy más feladatok futtathatók egyszerre, amíg az utasítás végrehajtása történik. Az utasítás befejezése után meg kell hívnia a fejlesztők a `EndExecuteXmlReader` a parancs által visszaadott metódus befejezheti a műveletet, és az XML-kód beolvasása. A BeginExecuteXmlReader metódus azonnal visszaadja az eredményeket, de addig, amíg a kód végrehajtja a megfelelő `EndExecuteXmlReader` metódus hívása, azt kell nem hajtható végre: Indítsa el a szinkron vagy aszinkron végrehajtásának megegyezik más hívási <xref:System.Data.SqlClient.SqlCommand>objektum.</xref:System.Data.SqlClient.SqlCommand> Hívja a `EndExecuteXmlReader` előtt a parancs végrehajtása befejeződött okai a <xref:System.Data.SqlClient.SqlCommand>objektum letiltása, amíg a végrehajtás befejeződik.</xref:System.Data.SqlClient.SqlCommand>       A <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>tulajdonság szokásos megadja a Transact-SQL-utasítás érvényes FOR XML záradék.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Azonban `CommandText` is megadhat olyan utasításban, amely visszaadja `ntext` érvényes XML-t tartalmazó adatok.       Egy tipikus <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>lekérdezés formázható például C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` Ez a módszer is használható egy egysoros, egyoszlopos eredményhalmaz beolvasni.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Ebben az esetben, ha egynél több olyan sort adja vissza, a `EndExecuteXmlReader` metódus rendeli a <xref:System.Xml.XmlReader>az eredményt a többi állítsa be az értéket az első sort, és elvetések.</xref:System.Xml.XmlReader>       A több aktív eredménykészlet (MARS) beállítása szolgáltatás lehetővé teszi, hogy ugyanazt a kapcsolatot használják több művelet.       Vegye figyelembe, hogy a parancs szövege és paraméterek kell küldeni a kiszolgáló szinkron módon történik. Ha nagy parancs vagy sok paraméterek kerülnek, ez a módszer blokkolhatják írási műveletek során. A parancs el lett küldve, a metódus azonnal visszaadja a választ a kiszolgáló – várakozás nélkül után ez azt jelenti, hogy olvasási műveletek aszinkron jellegűek. Bár a parancs végrehajtása aszinkron, továbbra is szinkron érték lekérése is.       Mivel ez a túlterhelés nem támogatja a visszahívási eljárást, fejlesztők kell vagy lekérdezési annak megállapításához, hogy a parancs futása befejeződött, használja a <xref:System.IAsyncResult.IsCompleted%2A>tulajdonsága a <xref:System.IAsyncResult>; BeginExecuteXmlReader metódus által visszaadott vagy várja meg, <xref:System.IAsyncResult.AsyncWaitHandle%2A>a visszaadott <xref:System.IAsyncResult>.</xref:System.IAsyncResult> tulajdonsága</xref:System.IAsyncResult.AsyncWaitHandle%2A> egy vagy több parancsból megvalósításának</xref:System.IAsyncResult> </xref:System.IAsyncResult.IsCompleted%2A>       Ha <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>XML-adatok eléréséhez az SQL Server eredményeket ad vissza semmilyen XML 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following console application starts the process of retrieving XML data asynchronously. While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value. Once the process has completed, the code retrieves the XML and displays its contents.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._41_1.cs)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader ();
    parameters: []
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével kérdezze le, vagy várja meg, eredményeket, vagy mindkét; Ez az érték is szükséges hívásakor <xref uid=&quot;langword_csharp_EndExecuteXmlReader&quot; name=&quot;EndExecuteXmlReader&quot; href=&quot;&quot;> </xref>, amely csak egyetlen XML-értéket adja vissza.</xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hiba történt a parancs szövege végrehajtása közben.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A név-érték pár &quot;az aszinkron feldolgozás = true&quot; ki lett hagyva a kapcsolati karakterláncot, ezt a kapcsolatot definiáló belül <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  id: BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kezdeményezi a Transact-SQL-utasítás vagy tárolt eljárás által ismertetett aszinkron végrehajtása <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> és visszaadja az eredményeket egy <xref:System.Xml.XmlReader>objektum visszahívási eljárás használatával.</xref:System.Xml.XmlReader>"
  remarks: "A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>metódus elindítja a folyamatot is a Transact-SQL-utasítás vagy tárolt eljárás, amely sort adja vissza, XML, aszinkron módon lehet, hogy más feladatok futtathatók egyszerre, amíg az utasítás végrehajtása történik.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Az utasítás befejezése után meg kell hívnia a fejlesztők a <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metódus befejezheti a műveletet, és a kért XML-adatok beolvasása.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> A <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>metódus azonnal visszaadja az eredményeket, de addig, amíg a kód végrehajtja a megfelelő <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metódus hívása, azt kell nem hajtható végre: Indítsa el a szinkron vagy aszinkron végrehajtásának azonos más hívási <xref:System.Data.SqlClient.SqlCommand>objektum.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Hívja a <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>előtt a parancs végrehajtása befejeződött okai a <xref:System.Data.SqlClient.SqlCommand>objektum letiltása, amíg a végrehajtás befejeződik.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       A <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>tulajdonság szokásos megadja a Transact-SQL-utasítás érvényes FOR XML záradék.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Azonban `CommandText` is megadhat olyan utasításban, amely érvényes XML-t tartalmazó adatokat ad vissza. Ez a módszer is használható egy egysoros, egyoszlopos eredményhalmaz beolvasása. Ebben az esetben, ha egynél több olyan sort adja vissza, a <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metódus rendeli a <xref:System.Xml.XmlReader>az eredményt a többi állítsa be az értéket az első sort, és elvetések.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       Egy tipikus BeginExecuteXmlReader lekérdezés formázható például C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` Ez a módszer is használható egy egysoros, egyoszlopos eredményhalmaz beolvasása. Ebben az esetben, ha egynél több olyan sort adja vissza, a <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>metódus rendeli a <xref:System.Xml.XmlReader>az eredményt a többi állítsa be az értéket az első sort, és elvetések.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>       A több aktív eredménykészlet (MARS) beállítása szolgáltatás lehetővé teszi, hogy ugyanazt a kapcsolatot használják több művelet.       A `callback` paraméter lehetővé teszi, hogy adjon meg egy <xref:System.AsyncCallback>delegált is nevezett, az utasítás befejeződésekor.</xref:System.AsyncCallback> Hívása a <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A>delegált művelet belül, vagy az alkalmazáson belül más helyről származó mód.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> Emellett minden objektumot továbbíthatja a `stateObject` paraméter, és a visszahívás eljárás kérheti le az adatokat a <xref:System.IAsyncResult.AsyncState%2A>tulajdonság.</xref:System.IAsyncResult.AsyncState%2A>       Vegye figyelembe, hogy a parancs szövege és paraméterek kell küldeni a kiszolgáló szinkron módon történik. Ha nagy parancs vagy sok paraméter küldte, ez a módszer blokkolhatják írási műveletek során. A parancs el lett küldve, a metódus azonnal visszaadja a választ a kiszolgáló – várakozás nélkül után ez azt jelenti, hogy olvasási műveletek aszinkron jellegűek.       A visszahívási eljárás kivételeket okozott a művelet végrehajtása során felmerülő hibákat. A kivétel a visszahívási eljárás, és nem az alkalmazás kezelni kell. Ebben a témakörben további információt a példa tekintse meg a visszahívási eljárás kivételek kezelése.       Ha <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>XML-adatok eléréséhez SQL Server rendszer az eredményeket bármely XML 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following Windows application demonstrates the use of the BeginExecuteXmlReader method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command). This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to BeginExecuteXmlReader.  \n  \n This example demonstrates many important techniques. This includes calling a method that interacts with the form from a separate thread. In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.  \n  \n To set up this example, create a new Windows application. Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control). Add the following code to the form's class, modifying the connection string as needed for your environment.  \n  \n [!code-cs[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/csharp/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormCS/Form1.cs#1)]\n [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/add/codesnippet/visualbasic/DataWorks SqlCommand.BeginExecuteXmlReaderAsync.TesterFormVB/Form1.vb#1)]"
  syntax:
    content: public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>, amelyet a parancs végrehajtásának befejezése delegált.</xref:System.AsyncCallback> Adjon át <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Microsoft Visual Basic) azt jelzi, hogy nincs visszahívás szükséges."
    - id: stateObject
      type: System.Object
      description: "A felhasználói állapot objektum a visszahívási eljárásnak átadott. Az objektum az az objektum eljárás használatával belül beolvasni a <xref:System.IAsyncResult.AsyncState*>tulajdonság.</xref:System.IAsyncResult.AsyncState*>"
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével lekérdezésére, várja meg az eredményeket, vagy mindkettőt; Ez az érték akkor is szükséges, ha a <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*>neve, a parancs XML formátumban a eredményt ad vissza, amely.</xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*> </xref:System.IAsyncResult>"
  overload: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Hiba történt a parancs szövege végrehajtása közben.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A név-érték pár &quot;az aszinkron feldolgozás = true&quot; ki lett hagyva a kapcsolati karakterláncot, ezt a kapcsolatot definiáló belül <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Cancel
  id: Cancel
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Szakítsa meg a végrehajtásának próbál egy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Nincs mit megszakítja, semmi nem történik. Azonban ha folyamatban van egy parancsot, és a visszavonása sikertelen, nincs kivétel jön létre.       Egyes esetekben, ritkán fordul elő, ha meghívja a <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>hívhatja <xref:System.Data.SqlClient.SqlDataReader.Close%2A>(implicitily vagy explicit módon) előtt hívja meg a Mégse gombra, és majd hívás Mégse, a Mégse parancs nem küldhető el az SQL Server és az eredménykészlet továbbra is követően meghívja a <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A> adatfolyamként</xref:System.Data.SqlClient.SqlDataReader.Close%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ennek elkerülése érdekében győződjön meg arról, hogy az olvasó vagy a kapcsolat bezárása előtt Mégse meghívja-e."
  example:
  - "The following example demonstrates the use of the Cancel method.  \n  \n [!code-vb[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._13_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.sqlclient._13_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Clone
  id: Clone
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Létrehoz egy új <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objektum, amely az aktuális példány másolata."
  syntax:
    content: public System.Data.SqlClient.SqlCommand Clone ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Egy új <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objektum, amely ezt a példányt egy példányát."
  overload: System.Data.SqlClient.SqlCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a parancs a oszloptitkosítási beállítás."
  syntax:
    content: public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }
    return:
      type: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
      description: "Az oszloptitkosítási beállítás a parancsot."
  overload: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandText
  id: CommandText
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a Transact-SQL utasítás, tábla- vagy tárolt eljárás végrehajtásához az adatforrásban."
  remarks: "Ha a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>tulajdonsága `StoredProcedure`, a tárolt eljárás nevét kell megadni a CommandText tulajdonság.</xref:System.Data.SqlClient.SqlCommand.CommandType%2A> Lehet, hogy a felhasználó szükség escape karakter szintaxist használja, ha a tárolt eljárás neve speciális karaktereket tartalmaz. A parancs végrehajtása során ez a tárolt eljárás egyik hívásakor a `Execute` módszerek.       A Microsoft .NET Framework Data Provider az SQL Server nem támogatja a kérdőjel (?) helyőrző paraméterek átadása a Transact-SQL-utasítás vagy a parancs által hívott tárolt eljárás `CommandType.Text`. Ebben az esetben elnevezett paramétert kell használni. Például: ```   SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID   ``` további információkért lásd: [paraméterek konfigurálása és paraméter adattípusok](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._56_1.vb)]\n [!code-cs[Classic WebData SqlCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._56_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "A Transact-SQL utasítás vagy tárolt eljárás végrehajtásához. Az alapértelmezett érték egy üres karakterlánc."
  overload: System.Data.SqlClient.SqlCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a várakozási idő a parancs-végrehajtási kísérlet megszakítása és hibaüzenet előtt."
  remarks: "A 0 érték azt jelzi, hogy nincs korlát (a parancs-végrehajtási kísérlet határozatlan ideig vár).      > [!NOTE] > A CommandTimeout tulajdonság aszinkron metódushívások például <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> során figyelmen kívül       A CommandTimeout tulajdonság nincs hatása, ha a parancs végrehajtása környezeti kapcsolat ellen (egy <xref:System.Data.SqlClient.SqlConnection>megnyitott &quot;környezeti kapcsolat = true&quot; a kapcsolódási karakterláncban).</xref:System.Data.SqlClient.SqlConnection>      > [!NOTE] > Ez a tulajdonság, akkor az időtúllépési (az összes hálózati metódus meghívása során olvasható csomagok) az összes hálózati olvasások parancsvégrehajtás vagy az eredmények feldolgozása során. Időtúllépés az első sort adja vissza, és nem része a felhasználó feldolgozási idő után továbbra is fordulhat, csak a hálózati olvasási ideje.   >> Például, hogy 30 másodperc idővel rendelkező <xref:System.Data.SqlClient.SqlDataReader.Read%2A>van szükség, két hálózati csomagokat, majd 30 másodperc is a hálózati csomagok olvasni rendelkezik.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Ha meghívja a <xref:System.Data.SqlClient.SqlDataReader.Read%2A>Ebben az esetben lesz a szükséges adatokat olvasni egy másik 30 másodperc.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>      ```   using System;   using System.Data.SqlClient;   ///    public class A {      ///       public static void Main() {         string connectionString = &quot;&quot;;         // Wait for 5 second delay in the command         string queryString = &quot;waitfor delay &quot;00:00:05&quot;&quot;;         using (SqlConnection connection = new SqlConnection(connectionString)) {            connection.Open();            SqlCommand command = new SqlCommand(queryString, connection);            // Setting command timeout to 1 second            command.CommandTimeout = 1;            try {               command.ExecuteNonQuery();            }            catch (SqlException e) {               Console.WriteLine(&quot;Got expected SqlException due to command timeout &quot;);               Console.WriteLine(e);            }         }      }   }   ```"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "Az az idő másodpercben. a végrehajtandó parancs. Az alapértelmezett érték 30 másodperc."
  overload: System.Data.SqlClient.SqlCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CommandType
  id: CommandType
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja, hogy egy érték, amely jelzi, hogyan a <xref:System.Data.SqlClient.SqlCommand.CommandText*>tulajdonsága kell értelmezni.</xref:System.Data.SqlClient.SqlCommand.CommandText*>"
  remarks: "Amikor a CommandType tulajdonság beállítása `StoredProcedure`, állítsa be a <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>tulajdonság nevére, a következő tárolt eljárást.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> A parancs végrehajtása során ez a tárolt eljárás, ha meghívja a végrehajtási módszer.       A Microsoft .NET Framework Data Provider az SQL Server nem támogatja a kérdőjel (?) helyőrző paraméterek átadása az SQL-utasítás vagy tárolt eljárás hívása a CommandType <xref:System.Data.CommandType>.</xref:System.Data.CommandType> Ebben az esetben elnevezett paramétert kell használni. Például: válasszon * a felhasználók hol CustomerID = @CustomerID további információkért lásd: [paraméterek konfigurálása és paraméter adattípusok](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._8_1.vb)]\n [!code-cs[Classic WebData IDbCommand.CommandTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._8_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Egy a <xref href=&quot;System.Data.CommandType&quot;> </xref> értékeket. Az alapértelmezett érték <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az érték nem egy érvényes <xref href=&quot;System.Data.CommandType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> példány által használt a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>."
  remarks: "Ha a parancs egy meglévő tranzakcióban van bejegyezve, és a kapcsolat módosul, a parancs végrehajtása közben <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> kivételhibát       Ha a <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>tulajdonsága nem null értékű, és a tranzakció már véglegesítve lett vagy visszaállításra, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>értéke null.</xref:System.Data.SqlClient.SqlCommand.Transaction%2A> </xref:System.Data.SqlClient.SqlCommand.Transaction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._22_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._22_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlConnection Connection { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "A kapcsolatot egy adatforrással. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A Connection tulajdonság megváltozott, amíg a parancs részvételt kezdeményezett tranzakcióban..."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Létrehoz egy új példányát egy <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> objektum."
  remarks: "A CreateParameter metódus <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A> szigorú típusmegadású verziója telepítve"
  syntax:
    content: public System.Data.SqlClient.SqlParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlParameter
      description: "A <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  id: DbConnection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a Windows űrlaptervezőben vezérlőben látható legyen-e a command objektum."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "Egy érték, amely jelzi, hogy a vezérlő látható legyen-e a command objektum. Az alapértelmezett érték **true**."
  overload: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  id: EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Aszinkron Transact-SQL-utasítás végrehajtása befejeződik."
  remarks: "A hívás esetén <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>végrehajtani egy [!INCLUDE[tsql](~/add/includes/tsql-md.md)] utasítás, meg kell hívnia EndExecuteNonQuery a művelet befejezéséhez.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> Ha a parancs végrehajtása során nem rendelkezik még befejeződött, a metódus blokkok, amíg a művelet be nem fejeződik. Felhasználók is győződjön meg arról, hogy a parancs befejeződött-e a művelet használatával a <xref:System.IAsyncResult>által visszaadott példány a <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>metódus.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> </xref:System.IAsyncResult> Ha egy visszahívási eljárás hívásában megadott <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, ezt a metódust kell meghívni.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteNonQuery method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.
  syntax:
    content: public int EndExecuteNonQuery (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*> hívás által visszaadott</xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "Az érintett sorok száma (megegyező viselkedést <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>).</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>paraméterek egyike null értékű (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteNonQuery egynél többször lett meghívva egy egyetlen parancs végrehajtásra, vagy a metódus lett egyeznek, a végrehajtási metódus (például a kód végrehajtásának <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> hívás befejezéséhez EndExecuteNonQuery nevű ellen"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A megadott időn <> </> *> eltelt, és az aszinkron művelet a megadott <> </> *> nincs kész.       Bizonyos esetekben <xref:System.IAsyncResult>megadható <xref uid=&quot;langword_csharp_IsCompleted&quot; name=&quot;IsCompleted&quot; href=&quot;&quot;> </xref> helytelenül.</xref:System.IAsyncResult> Ha ez történik, és EndExecuteNonQuery nevezik, EndExecuteNonQuery felvethet egy SqlException hiba, ha a megadott idő <> </> *> eltelt, és az aszinkron művelet a megadott <> </> *> nincs kész. Ez a helyzet kijavításához használata kell CommandTimeout értékét, vagy csökkentse az aszinkron művelet által végzett munkát."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  id: EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Transact-SQL-utasítás, vissza a kért aszinkron végrehajtásának befejezése <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "A hívás esetén <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>Transact-SQL-utasítás végrehajtásához meg kell hívnia EndExecuteReader a művelet befejezéséhez.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Ha a parancs végrehajtása során nem rendelkezik még befejeződött, a metódus blokkok, amíg a művelet be nem fejeződik. Felhasználók is győződjön meg arról, hogy a parancs befejeződött-e a művelet használatával a <xref:System.IAsyncResult>által visszaadott példány a <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>metódus.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.IAsyncResult> Ha egy visszahívási eljárás hívásában megadott <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, ezt a metódust kell meghívni.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.
  syntax:
    content: public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader*> hívás által visszaadott</xref:System.IAsyncResult>"
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> használható a kért sorok beolvasása objektum."
  overload: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>paraméterek egyike null értékű (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteReader egynél többször lett meghívva egy egyetlen parancs végrehajtásra, vagy a metódus lett egyeznek, a végrehajtási metódus (például a kód végrehajtásának <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> hívás befejezéséhez EndExecuteReader nevű ellen"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  id: EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Transact-SQL utasítás, ad vissza a kért adatok XML formátumban aszinkron végrehajtása befejeződik."
  remarks: "A hívás esetén <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>Transact-SQL-utasítás végrehajtásához meg kell hívnia EndExecuteXmlReader a művelet befejezéséhez.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> Ha a parancs végrehajtása során nem rendelkezik még befejeződött, a metódus blokkok, amíg a művelet be nem fejeződik. Felhasználók is győződjön meg arról, hogy a parancs befejeződött-e a művelet használatával a <xref:System.IAsyncResult>által visszaadott példány a <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>metódus.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.IAsyncResult> Ha egy visszahívási eljárás hívásában megadott <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, ezt a metódust kell meghívni.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>"
  example:
  - For examples demonstrating the use of the EndExecuteXmlReader method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.
  syntax:
    content: public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*> hívás által visszaadott</xref:System.IAsyncResult>"
    return:
      type: System.Xml.XmlReader
      description: "Egy <xref:System.Xml.XmlReader>objektum, amely segítségével az eredményül kapott XML-adatok beolvasása.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>paraméterek egyike null értékű (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Microsoft Visual Basic)"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "EndExecuteXmlReader egynél többször lett meghívva egy egyetlen parancs végrehajtásra, vagy a metódus lett egyeznek, a végrehajtási metódus (például a kód végrehajtásának <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*>.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*> hívás befejezéséhez EndExecuteXmlReader nevű ellen"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.Common.DbDataReader
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Fel kell venni a párbeszédpanelre."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hajt végre a kapcsolat a Transact-SQL utasítást, és az érintett sorok számát adja vissza."
  remarks: "Katalógus műveletek (például egy adatbázis szerkezetének lekérdezése vagy adatbázis-objektumok, például a táblák létrehozásához), vagy módosítsa az adatbázis adatainak használata nélkül használhatja a ExecuteNonQuery egy <xref:System.Data.DataSet>frissítési, beszúrási vagy törlési utasítás végrehajtásával.</xref:System.Data.DataSet>       Bár a ExecuteNonQuery nem sort adja vissza, kimeneti paramétereket és visszatérési értékek paraméterek leképezve feltöltött adatok.       A frissítési, beszúrási és DELETE utasítások a visszatérési értéke a parancs által érintett sorok száma. Egy eseményindító megtalálható egy tábla éppen beszúrt vagy frissített, ha az eredményül kapott értéket szerepel az insert vagy az update művelet és az eseményindító vagy eseményindítók érintett sorok számát is érintett sorok száma. Kimutatások minden más típusú visszatérési értéke -1. Ha a visszaállítás történik, az eredményül kapott értéket is -1."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._23_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._23_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Az érintett sorok száma."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Kivétel történt egy zárolt sorra a parancs végrehajtása közben. Ez a kivétel nem jön létre, amikor a Microsoft .NET-keretrendszer 1.0-s verzióját használja.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*>, amely végrehajtja a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] utasítást a kapcsolat és az érintett sorok számát adja vissza.</xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery*> A megszakítási jogkivonatot kérni, hogy a művelet elhagyásra kerül, az időkorlát lejárta előtt használható.  A visszaadott feladatobjektum keresztül kivételek lesz jelentve."
  remarks: "Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Feladat befejezése előtt ugyanazon egynél többször hívja meg executenonqueryasync használatával.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]a parancs szövege végrehajtása közben hibát adott vissza.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Elküldi a <> </> *> való a <> </> *> és összeállít egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>."
  remarks: "Ha a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>tulajdonsága `StoredProcedure`, a <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>tulajdonsághoz a tárolt eljárás nevét kell megadni.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> A parancs végrehajtása során ez a tárolt eljárás ExecuteReader hívásakor.      > [!NOTE] > Tranzakció van-e holtpontba, ha lehetséges, hogy nem kell kivétel csak <xref:System.Data.SqlClient.SqlDataReader.Read%2A>nevezik.</xref:System.Data.SqlClient.SqlDataReader.Read%2A>       A több aktív eredménykészlet (MARS) beállítása szolgáltatás lehetővé teszi, hogy ugyanazt a kapcsolatot használja több műveletekhez.       Ha ExecuteReader vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>XML-adatok eléréséhez SQL Server rendszer az eredményeket bármely XML 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._22_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._22_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Kivétel történt egy zárolt sorra a parancs végrehajtása közben. Ez a kivétel nem jön létre, amikor a Microsoft .NET-keretrendszer 1.0-s verzióját használja.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat jelenlegi állapota: lezárva. ExecuteReader igényel a megnyitott <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Elküldi a <> </> *> való a <> </> *>, és összeállít egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> egyikével a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékek."
  remarks: "Ha a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>tulajdonsága `StoredProcedure`, a <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>tulajdonsághoz a tárolt eljárás nevét kell megadni.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> </xref:System.Data.SqlClient.SqlCommand.CommandType%2A> A parancs végrehajtása során ez a tárolt eljárás <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> hívásakor      > [!NOTE] > Használata <xref:System.Data.CommandBehavior>a nagy értékek és a bináris adatok lekérdezéséhez.</xref:System.Data.CommandBehavior> Ellenkező esetben egy <xref:System.OutOfMemoryException>akkor fordulhat elő, és a rendszer lezárja a kapcsolatot.</xref:System.OutOfMemoryException>       A több aktív eredménykészlet (MARS) beállítása szolgáltatás lehetővé teszi, hogy ugyanazt a kapcsolatot használja több műveletekhez.       Ha <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>XML-adatok eléréséhez SQL Server rendszer az eredményeket bármely XML 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.sqlclient._14_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._14_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Egy a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékeket."
    return:
      type: System.Data.SqlClient.SqlDataReader
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <> </> *>, mely küld a <> </> *> való a <xref:System.Data.SqlClient.SqlCommand.Connection*>és összeállít egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> A visszaadott feladatobjektum keresztül kivételek lesz jelentve."
  remarks: "Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Érvénytelen <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> érték."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ExecuteReaderAsync egynél többször hívja meg ugyanazon a feladat befejezése előtt.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]a parancs szövege végrehajtása közben hibát adott vissza.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <> </> *>, mely küld a <> </> *> való a <xref:System.Data.SqlClient.SqlCommand.Connection*>, és létrehozza a <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*> A visszaadott feladatobjektum keresztül kivételek lesz jelentve."
  remarks: "Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Az utasítás végrehajtása és adatszolgáltató beállítások.  Ha értéke <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>olvassa be a teljes sor visszatérés feladat elvégzése előtt.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Érvénytelen <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> érték."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ExecuteReaderAsync egynél többször hívja meg ugyanazon a feladat befejezése előtt.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]a parancs szövege végrehajtása közben hibát adott vissza.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <> </> *>, mely küld a <> </> *> való a <xref:System.Data.SqlClient.SqlCommand.Connection*>és összeállít egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Connection*>       A megszakítási jogkivonatot kérni, hogy a művelet elhagyásra kerül, az időkorlát lejárta előtt használható.  A visszaadott feladatobjektum keresztül kivételek lesz jelentve."
  remarks: "Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Érvénytelen <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> érték."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>csak egyszer ugyanazon feladat befejezése előtt.</xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*>       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]a parancs szövege végrehajtása közben hibát adott vissza.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <> </> *>, mely küld a <> </> *> a a <xref:System.Data.SqlClient.SqlCommand.Connection*>, és összeállít egy <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> a megszakítási jogkivonat segítségével, hogy a művelet elhagyásra kerül, az időkorlát lejárta előtt kérelem.</xref:System.Data.SqlClient.SqlCommand.Connection*>  A visszaadott feladatobjektum keresztül kivételek lesz jelentve."
  remarks: "Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Az utasítás végrehajtása és adatszolgáltató beállítások.  Ha értéke <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>olvassa be a teljes sor visszatérés feladat elvégzése előtt.</xref:System.Data.SqlClient.SqlDataReader.ReadAsync*>"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Érvénytelen <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> érték."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ExecuteReaderAsync egynél többször hívja meg ugyanazon a feladat befejezése előtt.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]a parancs szövege végrehajtása közben hibát adott vissza.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Végrehajtja a lekérdezést, és a lekérdezés által visszaadott eredménykészlet első sorának első oszlopát adja vissza. További oszlopok vagy sorok figyelmen kívül lesznek hagyva."
  remarks: "A ExecuteScalar metódus használatával (például az összesített érték) egyetlen értéket egy adatbázisból. Ehhez szükséges, hogy kevesebb mint a <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>módszert, és a <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> által visszaadott adatok használatával egyetlen értékének létrehozásához szükséges műveletek végrehajtásával</xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> kódot       Egy tipikus ExecuteScalar lekérdezés formázható az alábbi C# példában látható módon:```   cmd.CommandText = &quot;SELECT COUNT(*) FROM dbo.region&quot;;   Int32 count = (Int32) cmd.ExecuteScalar();   ```"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteScalar. The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source. The function returns the new **Identity** column value if a new row was inserted, 0 on failure.  \n  \n [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "Az eredménye, vagy null hivatkozást az első sorának első oszlopát (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Visual Basic nyelvben), ha az eredménykészlet üres. Legfeljebb 2033 karaktert adja vissza."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Kivétel történt egy zárolt sorra a parancs végrehajtása közben. Ez a kivétel nem jön létre, amikor a Microsoft .NET-keretrendszer 1.0-s verzióját használja.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*>, ami aszinkron módon végrehajtja a lekérdezést, és a lekérdezés által visszaadott eredménykészlet első sorának első oszlopát adja vissza.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalar*> További oszlopok vagy sorok figyelmen kívül lesznek hagyva.       A megszakítási jogkivonatot kérni, hogy a művelet elhagyásra kerül, az időkorlát lejárta előtt használható. A visszaadott feladatobjektum keresztül kivételek lesz jelentve."
  remarks: "Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ExecuteScalarAsync egynél többször hívja meg ugyanazon a feladat befejezése előtt.       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]a parancs szövege végrehajtása közben hibát adott vissza.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  id: ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Elküldi a <> </> *> számára a <> </> *> és összeállít egy <xref:System.Xml.XmlReader>objektum.</xref:System.Xml.XmlReader>"
  remarks: "A <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>általában a tulajdonság határozza meg a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] utasítást egy érvényes FOR XML záradék.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A> Azonban <xref:System.Data.SqlClient.SqlCommand.CommandText%2A>is megadhat olyan utasításban, amely visszaadja `ntext` vagy `nvarchar` érvényes XML vagy egy meghatározott oszlop tartalmát tartalmazó adatok a `xml` adattípus.</xref:System.Data.SqlClient.SqlCommand.CommandText%2A>       Egy tipikus ExecuteXmlReader lekérdezés formázható például a Microsoft Visual C#: ```   SqlCommand command = new SqlCommand(&quot;SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA&quot;, SqlConn);   ``` Ez a módszer is használható egy egysoros, egyoszlopos eredményhalmaz tartalmazó XML-adatok beolvasása. Ebben az esetben, ha egynél több sort ad vissza, a ExecuteXmlReader metódus csatolja a <xref:System.Xml.XmlReader>az eredményt a többi állítsa be az értéket az első sort, és elvetések.</xref:System.Xml.XmlReader>       A több aktív eredménykészlet (MARS) beállítása szolgáltatás lehetővé teszi, hogy ugyanazt a kapcsolatot használja több műveletekhez.       Ha <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>XML-adatok eléréséhez SQL Server rendszer az eredményeket bármely XML 2,033 karakternél több sorban 2,033 karakter hosszúságú.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Ez a viselkedés elkerülése érdekében használja a ExecuteXmlReader vagy <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>FOR XML lekérdezések elolvasására.</xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> További információ cikke Q310378, &quot;Probléma: XML adatok van csonkolt amikor Ön használata SqlDataReader,&quot; a Microsoft Tudásbázis http://support.microsoft.com címen."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using ExecuteXmlReader. The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/csharp/m-system.data.sqlclient._42_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._42_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader ExecuteXmlReader ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: "Egy <xref:System.Xml.XmlReader>objektum.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Kivétel történt egy zárolt sorra a parancs végrehajtása közben. Ez a kivétel nem jön létre, amikor a Microsoft .NET-keretrendszer 1.0-s verzióját használja.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  id: ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <> </> *>, mely küld a <> </> *> való a <xref:System.Data.SqlClient.SqlCommand.Connection*>és összeállít egy <xref:System.Xml.XmlReader>objektum.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       A visszaadott feladatobjektum keresztül kivételek lesz jelentve."
  remarks: "Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>csak egyszer ugyanazon tevékenység befejezése előtt.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]a parancs szövege végrehajtása közben hibát adott vissza.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  id: ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <> </> *>, mely küld a <> </> *> való a <xref:System.Data.SqlClient.SqlCommand.Connection*>és összeállít egy <xref:System.Xml.XmlReader>objektum.</xref:System.Xml.XmlReader> </xref:System.Data.SqlClient.SqlCommand.Connection*>       A megszakítási jogkivonatot kérni, hogy a művelet elhagyásra kerül, az időkorlát lejárta előtt használható.  A visszaadott feladatobjektum keresztül kivételek lesz jelentve."
  remarks: "Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<System.Xml.XmlReader> ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task{System.Xml.XmlReader}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A <>*> other than **Binary** or **VarBinary** was used when <>*> was set to <xref:System.IO.Stream>.</xref:System.IO.Stream> További információ a streaming: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md).       A <>*> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <>*> was set to <xref:System.IO.TextReader>.</xref:System.IO.TextReader>       A <>*> other than **Xml** was used when <>*> was set to <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>csak egyszer ugyanazon tevékenység befejezése előtt.</xref:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*>       A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> zárva, vagy kihagyott egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md).       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]a parancs szövege végrehajtása közben hibát adott vissza.       Időtúllépés történt egy adatfolyam-művelet során. További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történt egy <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref:System.IO.Stream>, <xref:System.Xml.XmlReader>vagy <xref:System.IO.TextReader>objektum be lett zárva egy adatfolyam-művelet során.</xref:System.IO.TextReader> </xref:System.Xml.XmlReader> </xref:System.IO.Stream>  További információ a streaming: [SqlClient Streaming támogatási](../Topic/SqlClient%20Streaming%20Support.md)."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Notification
  id: Notification
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdez vagy beállít egy értéket, amely meghatározza a <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> objektum kötve ezt a parancsot."
  remarks: "Ahhoz, hogy a érvénybe lépéséhez a parancs végrehajtása előtt meg kell adni a tulajdonság értékét."
  syntax:
    content: public System.Data.Sql.SqlNotificationRequest Notification { get; set; }
    return:
      type: System.Data.Sql.SqlNotificationRequest
      description: "Ha értéke null (alapértelmezett), nem kap értesítést kell kérni."
  overload: System.Data.SqlClient.SqlCommand.Notification*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  id: NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy az alkalmazás kell automatikusan lekérdezési értesítések fogadására a egy közös <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> objektum."
  remarks: "Ez a szolgáltatás az ASP.NET alkalmazásokban értesítéseket egy ASP-lap SQL-kiszolgálón végrehajtott összes parancs használható. Ez lehetővé teszi az ASP.NET gyorsítótárazásához a lap csak a lekérdezések a lap megjelenítéséhez használt egy másik eredménye eredményezne. Automatikus részvétel.       Ez a tulajdonság csak az SQL Server verzióit, amelyek támogatják a lekérdezésértesítések vonatkozik. Régebbi verziók esetében a tulajdonság beállítása **igaz** nincs hatással az alkalmazás."
  syntax:
    content: public bool NotificationAutoEnlist { get; set; }
    return:
      type: System.Boolean
      description: '**Igaz** Ha az alkalmazás automatikusan kapja meg a lekérdezésértesítések; ellenkező esetben **hamis**. Az alapértelmezett érték **igaz**.'
  overload: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Parameters
  id: Parameters
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Gets the <xref href=&quot;System.Data.SqlClient.SqlParameterCollection&quot;></xref>."
  remarks: "A Microsoft .NET Framework Data Provider az SQL Server nem támogatja a kérdőjel (?) helyőrző paraméterek átadása egy SQL-utasítás vagy a parancs által hívott tárolt eljárás `CommandType.Text`. Ebben az esetben elnevezett paramétert kell használni. Például: válasszon * a felhasználók hol CustomerID = @CustomerID > [!NOTE] > a gyűjteményben szereplő paraméterek nem egyeznek meg a hajthatnak végre a lekérdezés követelményeinek, ha hiba vonhat maga után.       További információkért lásd: [paraméterek konfigurálása és paraméter adattípusok](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.  \n  \n [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._32_1.vb)]\n [!code-cs[DataWorks SqlParameterCollection.AddWithValue#1](~/add/codesnippet/csharp/p-system.data.sqlclient._32_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlParameterCollection Parameters { get; }
    return:
      type: System.Data.SqlClient.SqlParameterCollection
      description: "A Transact-SQL utasítás vagy tárolt eljárás paramétereit. Az alapértelmezett érték egy üres gyűjteményt."
  overload: System.Data.SqlClient.SqlCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Prepare
  id: Prepare
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "A parancs egy előkészített verziót hoz létre az SQL Server egy példányán."
  remarks: "Ha <xref:System.Data.SqlClient.SqlCommand.CommandType%2A>értéke `StoredProcedure`, előkészítési hívása sikeres legyen, bár előfordulhat, hogy egy nem op.</xref:System.Data.SqlClient.SqlCommand.CommandType%2A>       Prepare meghívása előtt adja meg mindegyik paraméter adattípusa elő kell készíteni az utasításban. Mindegyik paraméterhez, amelyen a változó hosszúságú adattípus, meg kell adni a <xref:System.Data.SqlClient.SqlParameter.Size%2A>tulajdonság szükséges maximális méretét.</xref:System.Data.SqlClient.SqlParameter.Size%2A> Készítse elő hibát ad vissza, ha ezek a feltételek nem teljesülnek.      > [!NOTE] > Az adatbázis-környezet módosítja a Transact-SQL végrehajtása `USE <database>` utasítást, vagy hívja a <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>módszer, majd előkészítése hívható meg még egyszer.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>       Ha egy `Execute` metódus után hívja előkészítése, a paraméter értéke, amely nagyobb, mint a megadott érték a <xref:System.Data.SqlClient.SqlParameter.Size%2A>tulajdonság automatikusan méretűre csonkolja a paraméter eredeti megadott mérete, és nem csonkolás jelez hibát.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       A kimeneti paraméterek (akár előkészítve, vagy sem) a felhasználó által megadott adattípusúnak kell lennie. Ha megad egy változó hosszúságú adattípus, meg kell adni a maximális <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</xref:System.Data.SqlClient.SqlParameter.Size%2A>       Visual Studio 2010 előtt Prepare kivételt okozott.  Visual Studio 2010 verziótól kezdve ez a módszer nem kivételt jelez."
  example:
  - "The following example demonstrates the use of the Prepare method.  \n  \n [!code-vb[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._45_1.vb)]\n [!code-cs[Classic WebData SqlCommand.Prepare#1](~/add/codesnippet/csharp/m-system.data.sqlclient._45_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.Prepare*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Alaphelyzetbe állítja a <xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>tulajdonság az alapértelmezett értékre.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout*>"
  remarks: "Az alapértelmezett érték a <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>30 másodperc.</xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  id: StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Transact-SQL utasítás a végrehajtás befejezését követően következik be."
  syntax:
    content: public event System.Data.StatementCompletedEventHandler StatementCompleted;
    return:
      type: System.Data.StatementCompletedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Létrehoz egy új <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objektum, amely az aktuális példány másolata."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Egy új <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objektum, amely ezt a példányt egy példányát."
  overload: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.Transaction
  id: Transaction
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;> </xref> belül, amely a <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> hajt végre."
  remarks: "A tranzakció tulajdonság nem állítható, ha azt már be van állítva, egy adott értékre, és a parancs végrehajtása folyamatban van. Ha a transaction tulajdonság értéke egy <xref:System.Data.SqlClient.SqlTransaction>objektum, amely nem csatlakozik-e azonos <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>objektum kivételt vált ki, amikor legközelebb megpróbál egy utasítás végrehajtásához.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlTransaction>"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction Transaction { get; set; }
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "The <xref href=&quot;System.Data.SqlClient.SqlTransaction&quot;></xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a parancs eredménye való alkalmazásának módja a <xref href=&quot;System.Data.DataRow&quot;> </xref> használatakor a **frissítés** metódusában a <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "Az alapértelmezett <xref:System.Data.UpdateRowSource>értéke **mindkét** kivéve, ha a parancs automatikusan jön létre (abban az esetben, mivel a <xref:System.Data.SqlClient.SqlCommandBuilder>), ebben az esetben az alapértelmezett érték a **nincs**.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.UpdateRowSource>       További információk a **UpdatedRowSource** tulajdonság, lásd: [DataAdapter paraméterek](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Egy a <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> értékeket."
  overload: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlCommand.#ctor
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand()
  nameWithType: SqlCommand.SqlCommand()
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand()
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String)
  nameWithType: SqlCommand.SqlCommand(String)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction)
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  nameWithType: SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
  fullName: System.Data.SqlClient.SqlCommand.SqlCommand(String,SqlConnection,SqlTransaction,SqlCommandColumnEncryptionSetting)
- uid: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommandColumnEncryptionSetting
  nameWithType: SqlCommandColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommandColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery()
  nameWithType: SqlCommand.BeginExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery()
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(AsyncCallback,Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader()
  nameWithType: SqlCommand.BeginExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  nameWithType: SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteReader(AsyncCallback,Object,CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader()
  nameWithType: SqlCommand.BeginExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader(AsyncCallback,Object)
  nameWithType: SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
  fullName: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(AsyncCallback,Object)
- uid: System.Data.SqlClient.SqlCommand.Cancel
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel()
  nameWithType: SqlCommand.Cancel()
  fullName: System.Data.SqlClient.SqlCommand.Cancel()
- uid: System.Data.SqlClient.SqlCommand.Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone()
  nameWithType: SqlCommand.Clone()
  fullName: System.Data.SqlClient.SqlCommand.Clone()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
  fullName: System.Data.SqlClient.SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
  fullName: System.Data.SqlClient.SqlCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlCommand.CommandType
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
  fullName: System.Data.SqlClient.SqlCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
  fullName: System.Data.SqlClient.SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: SqlCommand.CreateDbParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: SqlCommand.CreateParameter()
  fullName: System.Data.SqlClient.SqlCommand.CreateParameter()
- uid: System.Data.SqlClient.SqlParameter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
  fullName: System.Data.SqlClient.SqlCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
  fullName: System.Data.SqlClient.SqlCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
  fullName: System.Data.SqlClient.SqlCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
  fullName: System.Data.SqlClient.SqlCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlCommand.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlCommand.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteNonQuery(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult)
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteReader(IAsyncResult)
- uid: System.Data.SqlClient.SqlDataReader
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader(IAsyncResult)
  nameWithType: SqlCommand.EndExecuteXmlReader(IAsyncResult)
  fullName: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(IAsyncResult)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.Common.DbDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: DbDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: SqlCommand.ExecuteNonQuery()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: SqlCommand.ExecuteReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync()
  nameWithType: SqlCommand.ExecuteReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync()
- uid: System.Threading.Tasks.Task{System.Data.SqlClient.SqlDataReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<SqlDataReader>
  nameWithType: Task<SqlDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.SqlClient.SqlDataReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Data.SqlClient.SqlDataReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.SqlClient.SqlDataReader
    name: SqlDataReader
    nameWithType: SqlDataReader
    fullName: SqlDataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: SqlCommand.ExecuteScalar()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalar()
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader()
  nameWithType: SqlCommand.ExecuteXmlReader()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReader()
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync()
  nameWithType: SqlCommand.ExecuteXmlReaderAsync()
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync()
- uid: System.Threading.Tasks.Task{System.Xml.XmlReader}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<XmlReader>
  nameWithType: Task<XmlReader>
  fullName: System.Threading.Tasks.Task<System.Xml.XmlReader>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Xml.XmlReader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: XmlReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync(CancellationToken)
  nameWithType: SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlCommand.Notification
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
  fullName: System.Data.SqlClient.SqlCommand.Notification
- uid: System.Data.Sql.SqlNotificationRequest
  parent: System.Data.Sql
  isExternal: false
  name: SqlNotificationRequest
  nameWithType: SqlNotificationRequest
  fullName: System.Data.Sql.SqlNotificationRequest
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
  fullName: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
  fullName: System.Data.SqlClient.SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlParameterCollection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlParameterCollection
  nameWithType: SqlParameterCollection
  fullName: System.Data.SqlClient.SqlParameterCollection
- uid: System.Data.SqlClient.SqlCommand.Prepare
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare()
  nameWithType: SqlCommand.Prepare()
  fullName: System.Data.SqlClient.SqlCommand.Prepare()
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: SqlCommand.ResetCommandTimeout()
  fullName: System.Data.SqlClient.SqlCommand.ResetCommandTimeout()
- uid: System.Data.SqlClient.SqlCommand.StatementCompleted
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: StatementCompleted
  nameWithType: SqlCommand.StatementCompleted
  fullName: System.Data.SqlClient.SqlCommand.StatementCompleted
- uid: System.Data.StatementCompletedEventHandler
  parent: System.Data
  isExternal: false
  name: StatementCompletedEventHandler
  nameWithType: StatementCompletedEventHandler
  fullName: System.Data.StatementCompletedEventHandler
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlCommand.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlCommand.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlCommand.Transaction
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
  fullName: System.Data.SqlClient.SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
  fullName: System.Data.SqlClient.SqlCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.SqlClient.SqlCommand.#ctor*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand.SqlCommand
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteNonQuery
  nameWithType: SqlCommand.BeginExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteReader
  nameWithType: SqlCommand.BeginExecuteReader
- uid: System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: BeginExecuteXmlReader
  nameWithType: SqlCommand.BeginExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.Cancel*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Cancel
  nameWithType: SqlCommand.Cancel
- uid: System.Data.SqlClient.SqlCommand.Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Clone
  nameWithType: SqlCommand.Clone
- uid: System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlCommand.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlCommand.CommandText*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandText
  nameWithType: SqlCommand.CommandText
- uid: System.Data.SqlClient.SqlCommand.CommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: SqlCommand.CommandTimeout
- uid: System.Data.SqlClient.SqlCommand.CommandType*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CommandType
  nameWithType: SqlCommand.CommandType
- uid: System.Data.SqlClient.SqlCommand.Connection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Connection
  nameWithType: SqlCommand.Connection
- uid: System.Data.SqlClient.SqlCommand.CreateDbParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: SqlCommand.CreateDbParameter
- uid: System.Data.SqlClient.SqlCommand.CreateParameter*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: CreateParameter
  nameWithType: SqlCommand.CreateParameter
- uid: System.Data.SqlClient.SqlCommand.DbConnection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbConnection
  nameWithType: SqlCommand.DbConnection
- uid: System.Data.SqlClient.SqlCommand.DbParameterCollection*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: SqlCommand.DbParameterCollection
- uid: System.Data.SqlClient.SqlCommand.DbTransaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DbTransaction
  nameWithType: SqlCommand.DbTransaction
- uid: System.Data.SqlClient.SqlCommand.DesignTimeVisible*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: SqlCommand.DesignTimeVisible
- uid: System.Data.SqlClient.SqlCommand.Dispose*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Dispose
  nameWithType: SqlCommand.Dispose
- uid: System.Data.SqlClient.SqlCommand.EndExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteNonQuery
  nameWithType: SqlCommand.EndExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.EndExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteReader
  nameWithType: SqlCommand.EndExecuteReader
- uid: System.Data.SqlClient.SqlCommand.EndExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: EndExecuteXmlReader
  nameWithType: SqlCommand.EndExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: SqlCommand.ExecuteDbDataReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync
  nameWithType: SqlCommand.ExecuteDbDataReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQuery*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: SqlCommand.ExecuteNonQuery
- uid: System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteNonQueryAsync
  nameWithType: SqlCommand.ExecuteNonQueryAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: SqlCommand.ExecuteReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteReaderAsync
  nameWithType: SqlCommand.ExecuteReaderAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalar*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: SqlCommand.ExecuteScalar
- uid: System.Data.SqlClient.SqlCommand.ExecuteScalarAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteScalarAsync
  nameWithType: SqlCommand.ExecuteScalarAsync
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReader*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReader
  nameWithType: SqlCommand.ExecuteXmlReader
- uid: System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ExecuteXmlReaderAsync
  nameWithType: SqlCommand.ExecuteXmlReaderAsync
- uid: System.Data.SqlClient.SqlCommand.Notification*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Notification
  nameWithType: SqlCommand.Notification
- uid: System.Data.SqlClient.SqlCommand.NotificationAutoEnlist*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: NotificationAutoEnlist
  nameWithType: SqlCommand.NotificationAutoEnlist
- uid: System.Data.SqlClient.SqlCommand.Parameters*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Parameters
  nameWithType: SqlCommand.Parameters
- uid: System.Data.SqlClient.SqlCommand.Prepare*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Prepare
  nameWithType: SqlCommand.Prepare
- uid: System.Data.SqlClient.SqlCommand.ResetCommandTimeout*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: SqlCommand.ResetCommandTimeout
- uid: System.Data.SqlClient.SqlCommand.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlCommand.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlCommand.Transaction*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: Transaction
  nameWithType: SqlCommand.Transaction
- uid: System.Data.SqlClient.SqlCommand.UpdatedRowSource*
  parent: System.Data.SqlClient.SqlCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: SqlCommand.UpdatedRowSource
