### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.SendActivity
  id: SendActivity
  children:
  - System.Workflow.Activities.SendActivity.#ctor
  - System.Workflow.Activities.SendActivity.#ctor(System.String)
  - System.Workflow.Activities.SendActivity.AfterResponse
  - System.Workflow.Activities.SendActivity.AfterResponseEvent
  - System.Workflow.Activities.SendActivity.BeforeSend
  - System.Workflow.Activities.SendActivity.BeforeSendEvent
  - System.Workflow.Activities.SendActivity.ChannelToken
  - System.Workflow.Activities.SendActivity.Context
  - System.Workflow.Activities.SendActivity.CustomAddress
  - System.Workflow.Activities.SendActivity.CustomAddressProperty
  - System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  - System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  - System.Workflow.Activities.SendActivity.InitializeProperties
  - System.Workflow.Activities.SendActivity.ParameterBindings
  - System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  - System.Workflow.Activities.SendActivity.ServiceOperationInfo
  - System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  langs:
  - csharp
  name: SendActivity
  nameWithType: SendActivity
  fullName: System.Workflow.Activities.SendActivity
  type: Class
  summary: "Ügyféltevékenység modellek szinkron meghívását egy [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] szolgáltatási művelet."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]A SendActivity tevékenység lehetővé teszi, hogy részt vesz a beszélgetést a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] szolgáltatás előre definiált üzenet exchange minta használatával.      > [!NOTE] > A SendActivity tevékenysége egy blokkoló tevékenységet, ami azt jelenti, hogy a munkafolyamat-végrehajtási blokkolva van, amíg a tevékenység végrehajtásának befejeződése.       Az üzenet exchange minták SendActivity tevékenység által támogatott tartalmazza:-One-way küldése üzenet a SendActivity tevékenység üzenetet küld, de nem várt választ a szolgáltatásból.      -Kérés küldése - kap választ az SendActivity tevékenység üzenetet, és megvárja, amíg a választ a szolgáltatásból.      -Küldési kérelmek – hiba a SendActivity tevékenység üzenetet, és várjon, amíg nem választ kap, vagy egy hiba érkezett a szolgáltatás. Végrehajtásakor a send tevékenységet jelez az összes, az a kiszolgálóról fogadott hibák. <xref:System.Workflow.ComponentModel.FaultHandlerActivity>tevékenységek, beleértve az ügyfél munkafolyamat kezelésére használható.</xref:System.Workflow.ComponentModel.FaultHandlerActivity>      > [!NOTE] > Ez a tevékenység része [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]. A megfelelő tevékenység [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], <xref:System.ServiceModel.Activities.Send>.</xref:System.ServiceModel.Activities.Send> lásd:"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))]

      public sealed class SendActivity : System.Workflow.ComponentModel.Activity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SendActivity()
  nameWithType: SendActivity.SendActivity()
  fullName: System.Workflow.Activities.SendActivity.SendActivity()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> osztály."
  remarks: "A <xref:System.Workflow.Activities.SendActivity>fájlban a kód mellett a munkafolyamat-tervező által létrehozott általában meghívni a konstruktort.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.  This example was adapted from the `Conversations` SDK sample.  \n  \n [!code-cs[SendActivity#16](~/add/codesnippet/csharp/m-system.workflow.activi_9_1.cs)]"
  syntax:
    content: public SendActivity ();
    parameters: []
  overload: System.Workflow.Activities.SendActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SendActivity(String)
  nameWithType: SendActivity.SendActivity(String)
  fullName: System.Workflow.Activities.SendActivity.SendActivity(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> és a megadott osztály <xref uid=&quot;langword_csharp_name&quot; name=&quot;name&quot; href=&quot;&quot;> </xref> tulajdonság."
  remarks: "A <xref:System.Workflow.Activities.SendActivity>fájlban a kód mellett a munkafolyamat-tervező által létrehozott általában meghívni a konstruktort.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.  \n  \n [!code-cs[SendActivity#17](~/add/codesnippet/csharp/m-system.workflow.activi_17_1.cs)]"
  syntax:
    content: public SendActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "Hozzárendelt érték <xref:System.Workflow.ComponentModel.Activity.Name*>Amikor a tevékenység inicializálása.</xref:System.Workflow.ComponentModel.Activity.Name*>"
  overload: System.Workflow.Activities.SendActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.AfterResponse
  id: AfterResponse
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: AfterResponse
  nameWithType: SendActivity.AfterResponse
  fullName: System.Workflow.Activities.SendActivity.AfterResponse
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "A válasz érkezett a szolgáltatás után következik be."
  remarks: "Ebben az eseménykezelőben az eseményhez kapcsolódó az eredményül kapott értéket kiolvasni a meghívott szolgáltatási művelet használható."
  example:
  - "The following example shows how to use the `AfterResponse` event.  \n  \n [!code-cs[SendActivity#2](~/add/codesnippet/csharp/e-system.workflow.activi_4_1.cs)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.SendActivityEventArgs> AfterResponse;
    return:
      type: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.AfterResponseEvent
  id: AfterResponseEvent
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: AfterResponseEvent
  nameWithType: SendActivity.AfterResponseEvent
  fullName: System.Workflow.Activities.SendActivity.AfterResponseEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Jelzi a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> fertőzi a <xref href=&quot;System.Workflow.Activities.SendActivity.AfterResponse&quot;> </xref> esemény."
  remarks: "A függőség esemény tulajdonság is használja a kötéshez a küldési tevékenység <xref:System.Workflow.Activities.SendActivity.AfterResponse>a munkafolyamat osztályhoz nyilvános eseménykezelő esemény</xref:System.Workflow.Activities.SendActivity.AfterResponse>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.BeforeSend
  id: BeforeSend
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: BeforeSend
  nameWithType: SendActivity.BeforeSend
  fullName: System.Workflow.Activities.SendActivity.BeforeSend
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Akkor következik be, mielőtt a <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> tevékenység az üzenet elküldése a szolgáltatást."
  remarks: "Ebben az eseménykezelőben az eseményhez kapcsolódó segítségével állítsa be a paraméterértékeket a következő szolgáltatási művelethez meghívott.      > [!NOTE] > Keretében egy <xref:System.Workflow.Activities.SendActivity>nem állítható be ebben az eseménykezelőben.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to use the `BeforeSend` event. This example was adapted from the `Conversations` SDK sample.  \n  \n [!code-cs[SendActivity#3](~/add/codesnippet/csharp/e-system.workflow.activi_3_1.cs)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.SendActivityEventArgs> BeforeSend;
    return:
      type: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.BeforeSendEvent
  id: BeforeSendEvent
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: BeforeSendEvent
  nameWithType: SendActivity.BeforeSendEvent
  fullName: System.Workflow.Activities.SendActivity.BeforeSendEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Jelzi a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> fertőzi a <xref href=&quot;System.Workflow.Activities.SendActivity.BeforeSend&quot;> </xref> esemény."
  remarks: "A függőség esemény tulajdonság is használja a kötéshez a küldési tevékenység <xref:System.Workflow.Activities.SendActivity.BeforeSend>a munkafolyamat osztályhoz nyilvános eseménykezelő esemény</xref:System.Workflow.Activities.SendActivity.BeforeSend>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.ChannelToken
  id: ChannelToken
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
  fullName: System.Workflow.Activities.SendActivity.ChannelToken
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "<xref href=&quot;System.Workflow.Activities.ChannelToken&quot;></xref>használja a <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> hozzárendelni magát egy ügyfél-csatornát."
  remarks: "A csatorna jogkivonata a csatorna nevét, a csatornát, és a végpont-konfiguráció nevét a csatorna létrehozásához használt körét határozza meg. A végpont nevének a konfigurációs fájlban van az address, binding és adatai egy szolgáltatás, amely a <xref:System.Workflow.Activities.SendActivity>tevékenység kommunikál.</xref:System.Workflow.Activities.SendActivity>       A csatorna jogkivonata megadja a csatorna egyedi nevét és a jogkivonat tulajdonostevékenységének neve is. A csatorna jogkivonata több küldési tevékenység, szeretne használni a azonos végpont való kommunikációhoz egy olyan között megosztható legyen."
  example:
  - "The following example shows how to access the `ChannelToken` property. This example was adapted from the `CalculatorClient` SDK sample.  \n  \n [!code-cs[SendActivity#7](~/add/codesnippet/csharp/p-system.workflow.activi_31_1.cs)]"
  syntax:
    content: public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }
    return:
      type: System.Workflow.Activities.ChannelToken
      description: "A <xref href=&quot;System.Workflow.Activities.ChannelToken&quot;> </xref> meghatározása az ügyfél csatorna, amely egy <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> egy szolgáltatással való kommunikációra használja."
  overload: System.Workflow.Activities.SendActivity.ChannelToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.Context
  id: Context
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: Context
  nameWithType: SendActivity.Context
  fullName: System.Workflow.Activities.SendActivity.Context
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "A korrelációs azonosító is beleértve az ügyfél és az kommunikál, a szolgáltatás közötti kommunikációhoz használt környezet tartalmazó dictionary adja vissza."
  remarks: "Környezet adatainak az ügyfél és a szolgáltatás kommunikál, és tartalmazza a korrelációs azonosító többek között közötti kommunikációhoz használatos."
  example:
  - "The following example shows how to access the `Context` property. This example was adapted from the `CalculatorClient` SDK sample.  \n  \n [!code-cs[SendActivity#8](~/add/codesnippet/csharp/p-system.workflow.activi_10_1.cs)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; set; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A szótár-alapú gyűjtemény tartalmaz <xref:System.Xml.XmlQualifiedName>kulcsok és az azokhoz kapcsolódó <xref:System.String>értékek.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.SendActivity.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.CustomAddress
  id: CustomAddress
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
  fullName: System.Workflow.Activities.SendActivity.CustomAddress
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Lekérdezi vagy beállítja a szolgáltatással való kommunikációra használt egyéni cím."
  remarks: "Ha telepítve van, ez az érték határozza meg a végpont címét, a művelet szolgál."
  example:
  - "The following example shows how to access the `CustomAddress` property. This example was adapted from the `CalculatorClient` SDK sample.  \n  \n [!code-cs[SendActivity#9](~/add/codesnippet/csharp/p-system.workflow.activi_11_1.cs)]"
  syntax:
    content: public string CustomAddress { get; set; }
    return:
      type: System.String
      description: "Karakterlánc-érték, amelynek értéke a cím egy szolgáltatás figyeli."
  overload: System.Workflow.Activities.SendActivity.CustomAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.CustomAddressProperty
  id: CustomAddressProperty
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: CustomAddressProperty
  nameWithType: SendActivity.CustomAddressProperty
  fullName: System.Workflow.Activities.SendActivity.CustomAddressProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Jelzi a <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> a a <xref:System.Workflow.Activities.SendActivity.CustomAddress*>tulajdonság.</xref:System.Workflow.Activities.SendActivity.CustomAddress*>"
  remarks: "Ha telepítve van, ez az érték határozza meg a végpont címét, a művelet szolgál."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: SendActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.SendActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Workflow.Activities.SendActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: GetContext(Activity,ChannelToken,Type)
  nameWithType: SendActivity.GetContext(Activity,ChannelToken,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,ChannelToken,Type)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Lekérdezi vagy beállítja a környezet adatainak küldési művelet."
  remarks: "Környezet adatainak az ügyfél és a szolgáltatás kommunikál, és tartalmazza a korrelációs azonosító többek között közötti kommunikációhoz használatos."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[SendActivity#12](~/add/codesnippet/csharp/b396dd3f-071b-4a03-8e75-_1.cs)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Tevékenység, amelynek környezetben információkra szükség."
    - id: endpoint
      type: System.Workflow.Activities.ChannelToken
      description: "Korrelációs egy olyan végpont-információkat."
    - id: contractType
      type: System.Type
      description: "A <xref:System.Type>az szolgáltatás által megvalósított egyezmény.</xref:System.Type>"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A szótár-alapú gyűjtemény tartalmaz <xref:System.Xml.XmlQualifiedName>kulcsok és az azokhoz kapcsolódó <xref:System.String>értékek.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.SendActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: GetContext(Activity,String,String,Type)
  nameWithType: SendActivity.GetContext(Activity,String,String,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,String,String,Type)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Statikus metódus, amely egy Tevékenységpéldány, egy adott tevékenység, a neve, a tulajdonos tevékenység által használt végpontnév megadott környezeti információkat ad vissza, és egy <xref:System.Type>Az adategyezmény típusa képviselő objektum.</xref:System.Type>"
  remarks: "Környezet adatainak az ügyfél és a szolgáltatás kommunikál, és tartalmazza a korrelációs azonosító többek között közötti kommunikációhoz használatos."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[SendActivity#15](~/add/codesnippet/csharp/3882c89a-5f09-4566-9b94-_1.cs)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Tevékenység, amelynek környezetben információkra szükség."
    - id: endpointName
      type: System.String
      description: "A végpont neve korrelációban állnak a szolgáltatás használatos."
    - id: ownerActivityName
      type: System.String
      description: "A tulajdonos tevékenység nevét."
    - id: contractType
      type: System.Type
      description: "A <xref:System.Type>az szolgáltatás által megvalósított egyezmény.</xref:System.Type>"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A szótár-alapú gyűjtemény tartalmaz <xref:System.Xml.XmlQualifiedName>kulcsok és az azokhoz kapcsolódó <xref:System.String>értékek.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.SendActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: SendActivity.InitializeProperties()
  fullName: System.Workflow.Activities.SendActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.SendActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
  fullName: System.Workflow.Activities.SendActivity.ParameterBindings
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Lekérdezi a nek köthető paraméterek gyűjteménye a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] szolgáltatás formális paraméter listájához."
  remarks: "Adja meg a szolgáltatási művelet paramétereit és nyilvános mező és tulajdonságait, amely tartalmazza a munkafolyamat közötti kötések ParameterBindings használható a <xref:System.Workflow.Activities.SendActivity>tevékenység.</xref:System.Workflow.Activities.SendActivity> Ha a <xref:System.Workflow.Activities.SendActivity>tevékenység hajt végre, a megfelelő paraméterértékeket pedig olvassa a munkafolyamat tulajdonságainak vannak kötve, és a szolgáltatási művelet paraméterként a szolgáltatásnak küldött.</xref:System.Workflow.Activities.SendActivity>       ParameterBindings is használható a visszatérési értékek lekérése egy szolgáltatási műveletre.       A szolgáltatási művelet az összes paramétert kell kötni. Kötetlen művelet paramétereket fordító figyelmeztetések készítsen, és a paraméter alapértelmezett értéke kapnak, amikor a <xref:System.Workflow.Activities.SendActivity>meghívták.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to access the `ParameterBindings` property. This example was adapted from the `Conversations` SDK sample.  \n  \n [!code-cs[SendActivity#0](~/add/codesnippet/csharp/p-system.workflow.activi_32_1.cs)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "A <xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref> paraméterek kötődni."
  overload: System.Workflow.Activities.SendActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  id: ReturnValuePropertyName
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ReturnValuePropertyName
  nameWithType: SendActivity.ReturnValuePropertyName
  fullName: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "A visszatérési érték a szolgáltatás által küldött használt tulajdonság nevét, amely a <xref uid=&quot;langword_csharp_SendActivity&quot; name=&quot;SendActivity&quot; href=&quot;&quot;> </xref> tevékenység kommunikál."
  remarks: "Ez a karakterlánc a visszatérési érték a beolvasandó használható a <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A>társított a <xref:System.Workflow.Activities.SendActivity>tevékenység a <xref:System.Workflow.Activities.SendActivity.AfterResponse>eseménykezelő.</xref:System.Workflow.Activities.SendActivity.AfterResponse> </xref:System.Workflow.Activities.SendActivity> </xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A>"
  example:
  - "The following example shows how to access the `ReturnValuePropertyName` field.  \n  \n [!code-cs[SendActivity#6](~/add/codesnippet/csharp/f-system.workflow.activi_2_1.cs)]"
  syntax:
    content: public const string ReturnValuePropertyName;
    return:
      type: System.String
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  id: ServiceOperationInfo
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "A szerződés és a szolgáltatás működésére határozza meg, amely a <xref uid=&quot;langword_csharp_SendActivity&quot; name=&quot;SendActivity&quot; href=&quot;&quot;> </xref> tevékenység kommunikál."
  remarks: "A <xref:System.Workflow.Activities.SendActivity>tevékenység mindig hivatkozik a meglévő szerződést és a meghatározott műveleteket.</xref:System.Workflow.Activities.SendActivity> Nem rendelkeznek, amely lehetővé teszi egy <xref:System.Workflow.Activities.SendActivity>tevékenység maga szerződés meghatározása.</xref:System.Workflow.Activities.SendActivity>"
  example:
  - "The following example shows how to access the `ServiceOperationInfo` property. This example was adapted from the `Conversations` SDK sample.  \n  \n [!code-cs[SendActivity#1](~/add/codesnippet/csharp/p-system.workflow.activi_13_1.cs)]"
  syntax:
    content: public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }
    return:
      type: System.Workflow.Activities.TypedOperationInfo
      description: "A <xref href=&quot;System.Workflow.Activities.TypedOperationInfo&quot;> </xref> objektum, amely tartalmazza a szerződés nevét, a adategyezmény-típusa, a művelet neve, (amelyek különböző lehet a tényleges metódus neve), hogy a művelet egy egyirányú művelet, és többek között a működésével kapcsolatos paraméterek módszerre vonatkozó adatok."
  overload: System.Workflow.Activities.SendActivity.ServiceOperationInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  id: SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "A statikus metódus, amely beállítja a környezeti információkat egy <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> tevékenységre, egy Tevékenységpéldány, egy adott tevékenység által használt végpontnak egy <xref:System.Type>objektum, amely a szerződés és a környezet adatainak maga típusát jelöli.</xref:System.Type>"
  remarks: "Környezet adatainak az ügyfél és a szolgáltatás kommunikál, és tartalmazza a korrelációs azonosító többek között közötti kommunikációhoz használatos."
  example:
  - "The following example shows how to use the `SetContext` method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "A tevékenység példányának társítja a környezetben információk."
    - id: endpoint
      type: System.Workflow.Activities.ChannelToken
      description: "A végpont korrelációban állnak a szolgáltatás használatos."
    - id: contractType
      type: System.Type
      description: "A <xref:System.Type>az szolgáltatás által megvalósított egyezmény.</xref:System.Type>"
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A környezet adatainak beállításához."
  overload: System.Workflow.Activities.SendActivity.SetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  id: SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SetContext(Activity,String,String,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "A statikus metódus, amely beállítja a környezeti információkat egy <xref href=&quot;System.Workflow.Activities.SendActivity&quot;> </xref> tevékenységre, egy Tevékenységpéldány, egy adott tevékenység, a neve, a tulajdonos tevékenység által használt végpontnév egy <xref:System.Type>objektum, amely a szerződés és a környezet adatainak maga típusát jelöli.</xref:System.Type>"
  remarks: ''
  example:
  - "The following example shows how to use the `SetContext` method.  \n  \n [!code-cs[SendActivity#15](~/add/codesnippet/csharp/c25fc5a7-578b-454d-aade-_1.cs)]"
  syntax:
    content: public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "A tevékenység példányának társítja a környezetben információk."
    - id: endpointName
      type: System.String
      description: "Korrelációban állnak a szolgáltatás használatos a végpont neve."
    - id: ownerActivityName
      type: System.String
      description: "A tulajdonos tevékenység neve."
    - id: contractType
      type: System.Type
      description: "A <xref:System.Type>az szolgáltatás által megvalósított egyezmény.</xref:System.Type>"
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A környezet adatainak beállításához."
  overload: System.Workflow.Activities.SendActivity.SetContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.SendActivity.#ctor
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity()
  nameWithType: SendActivity.SendActivity()
  fullName: System.Workflow.Activities.SendActivity.SendActivity()
- uid: System.Workflow.Activities.SendActivity.#ctor(System.String)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity(String)
  nameWithType: SendActivity.SendActivity(String)
  fullName: System.Workflow.Activities.SendActivity.SendActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.SendActivity.AfterResponse
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: AfterResponse
  nameWithType: SendActivity.AfterResponse
  fullName: System.Workflow.Activities.SendActivity.AfterResponse
- uid: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SendActivityEventArgs>
  nameWithType: EventHandler<SendActivityEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.SendActivityEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.SendActivityEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.SendActivityEventArgs
    name: SendActivityEventArgs
    nameWithType: SendActivityEventArgs
    fullName: SendActivityEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.SendActivity.AfterResponseEvent
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: AfterResponseEvent
  nameWithType: SendActivity.AfterResponseEvent
  fullName: System.Workflow.Activities.SendActivity.AfterResponseEvent
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.SendActivity.BeforeSend
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: BeforeSend
  nameWithType: SendActivity.BeforeSend
  fullName: System.Workflow.Activities.SendActivity.BeforeSend
- uid: System.Workflow.Activities.SendActivity.BeforeSendEvent
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: BeforeSendEvent
  nameWithType: SendActivity.BeforeSendEvent
  fullName: System.Workflow.Activities.SendActivity.BeforeSendEvent
- uid: System.Workflow.Activities.SendActivity.ChannelToken
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
  fullName: System.Workflow.Activities.SendActivity.ChannelToken
- uid: System.Workflow.Activities.ChannelToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ChannelToken
  nameWithType: ChannelToken
  fullName: System.Workflow.Activities.ChannelToken
- uid: System.Workflow.Activities.SendActivity.Context
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Context
  nameWithType: SendActivity.Context
  fullName: System.Workflow.Activities.SendActivity.Context
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.SendActivity.CustomAddress
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
  fullName: System.Workflow.Activities.SendActivity.CustomAddress
- uid: System.Workflow.Activities.SendActivity.CustomAddressProperty
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddressProperty
  nameWithType: SendActivity.CustomAddressProperty
  fullName: System.Workflow.Activities.SendActivity.CustomAddressProperty
- uid: System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: SendActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.SendActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext(Activity,ChannelToken,Type)
  nameWithType: SendActivity.GetContext(Activity,ChannelToken,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,ChannelToken,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext(Activity,String,String,Type)
  nameWithType: SendActivity.GetContext(Activity,String,String,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,String,String,Type)
- uid: System.Workflow.Activities.SendActivity.InitializeProperties
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: SendActivity.InitializeProperties()
  fullName: System.Workflow.Activities.SendActivity.InitializeProperties()
- uid: System.Workflow.Activities.SendActivity.ParameterBindings
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
  fullName: System.Workflow.Activities.SendActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ReturnValuePropertyName
  nameWithType: SendActivity.ReturnValuePropertyName
  fullName: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.SendActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.TypedOperationInfo
  parent: System.Workflow.Activities
  isExternal: false
  name: TypedOperationInfo
  nameWithType: TypedOperationInfo
  fullName: System.Workflow.Activities.TypedOperationInfo
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext(Activity,String,String,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
- uid: System.Workflow.Activities.SendActivity.#ctor*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity
  nameWithType: SendActivity.SendActivity
- uid: System.Workflow.Activities.SendActivity.ChannelToken*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
- uid: System.Workflow.Activities.SendActivity.Context*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Context
  nameWithType: SendActivity.Context
- uid: System.Workflow.Activities.SendActivity.CustomAddress*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
- uid: System.Workflow.Activities.SendActivity.Execute*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Execute
  nameWithType: SendActivity.Execute
- uid: System.Workflow.Activities.SendActivity.GetContext*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext
  nameWithType: SendActivity.GetContext
- uid: System.Workflow.Activities.SendActivity.InitializeProperties*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: SendActivity.InitializeProperties
- uid: System.Workflow.Activities.SendActivity.ParameterBindings*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.SendActivity.SetContext*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext
  nameWithType: SendActivity.SetContext
