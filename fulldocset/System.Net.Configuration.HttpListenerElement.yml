### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.HttpListenerElement
  id: HttpListenerElement
  children:
  - System.Net.Configuration.HttpListenerElement.#ctor
  - System.Net.Configuration.HttpListenerElement.Properties
  - System.Net.Configuration.HttpListenerElement.Timeouts
  - System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  langs:
  - csharp
  name: HttpListenerElement
  nameWithType: HttpListenerElement
  fullName: System.Net.Configuration.HttpListenerElement
  type: Class
  summary: "A konfigurációs fájl HttpListener elemének jelöli. Ez az osztály nem örökölhető."
  remarks: "This class corresponds to the \\<httpListener> Element (Network Settings) configuration element. This class provides programmatic access to information that can be stored in configuration files.  \n  \n The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.  \n  \n When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> property.  \n  \n The `http.sys` service exposes two request URI strings:  \n  \n-   Raw URI  \n  \n-   Converted URI  \n  \n The raw URI is the <xref:System.Uri?displayProperty=fullName> provided in the request line of a HTTP request:  \n  \n `GET /path/`  \n  \n `Host: www.contoso.com`  \n  \n The raw URI provided by `http.sys` for the request mentioned above, is \"/path/\". This represents the string following the HTTP verb as it was sent over the network.  \n  \n The `http.sys` service creates a converted URI from the information provided in the request by using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to. This is done by comparing the information from the request with a set of registered URI prefixes. The HTTP Server SDK documentation refers to this converted URI as the [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) structure.  \n  \n In order to be able to compare the request with registered URI prefixes, some normalization to the request needs to be done. For the sample above the converted URI would be as follows:  \n  \n `http://www.contoso.com/path/`  \n  \n The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=fullName> property value and the string in the request line to create a converted URI. In addition, `http.sys` and the <xref:System.Uri?displayProperty=fullName> class also do the following:  \n  \n-   Un-escapes all percent encoded values.  \n  \n-   Converts percent-encoded non-ASCII characters into a UTF-16 character representation. Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).  \n  \n-   Executes other normalization steps, like path compression.  \n  \n Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.  \n  \n Therefore `http.sys` provides two registry keys for modifying the process:  \n  \n|Registry Key|Default Value|Description|  \n|------------------|-------------------|-----------------|  \n|EnableNonUTF8|1|If zero, `http.sys` accepts only UTF-8-encoded URLs.<br /><br /> If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.|  \n|FavorUTF8|1|If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.<br /><br /> If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.|  \n  \n When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.  \n  \n There is a need for supporting characters besides characters and numbers in URIs. An example is the following URI, which is used to retrieve customer information for customer number \"1/3812\":  \n  \n `http://www.contoso.com/Customer('1%2F3812')/`  \n  \n Note the percent-encoded slash in the Uri (%2F). This is necessary, since in this case the slash character represents data and not a path delimiter.  \n  \n Passing the string to Uri constructor will lead to the following URI:  \n  \n `http://www.contoso.com/Customer('1/3812')/`  \n  \n Splitting the path into its segments would result in the following elements:  \n  \n `Customer('1`  \n  \n `3812')`  \n  \n This is not the intent of the sender of the request.  \n  \n If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property."
  syntax:
    content: 'public sealed class HttpListenerElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: HttpListenerElement()
  nameWithType: HttpListenerElement.HttpListenerElement()
  fullName: System.Net.Configuration.HttpListenerElement.HttpListenerElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Configuration.HttpListenerElement&quot;> </xref> osztály."
  syntax:
    content: public HttpListenerElement ();
    parameters: []
  overload: System.Net.Configuration.HttpListenerElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.Properties
  id: Properties
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: System.Net.Configuration.HttpListenerElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Net.Configuration.HttpListenerElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.Timeouts
  id: Timeouts
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: System.Net.Configuration.HttpListenerElement.Timeouts
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Az alapértelmezett időkorlát elemek használt lekérdezi egy <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektum."
  syntax:
    content: public System.Net.Configuration.HttpListenerTimeoutsElement Timeouts { get; }
    return:
      type: System.Net.Configuration.HttpListenerTimeoutsElement
      description: "Returns <xref href=&quot;System.Net.Configuration.HttpListenerTimeoutsElement&quot;></xref>.       A használt időtúllépés elemek egy <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektum."
  overload: System.Net.Configuration.HttpListenerElement.Timeouts*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  id: UnescapeRequestUrl
  parent: System.Net.Configuration.HttpListenerElement
  langs:
  - csharp
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Egy érték, amely azt jelzi, ha lekérdezi <xref href=&quot;System.Net.HttpListener&quot;> </xref> használ, a nyers unescaped URI-azonosítója nem a konvertált URI."
  remarks: "A UnescapeRequestUrl a tulajdonság azt jelzi, ha <xref:System.Net.HttpListener>használ, a nyers unescaped URI nem az átalakított URI, ahol százalék-kódolású értékkel lesznek konvertálva, és más normalizálási intézkedéseket.</xref:System.Net.HttpListener>       Ha egy <xref:System.Net.HttpListener>példány keresztül kérelem érkezik a `http.sys` szolgáltatás, létrehoz egy példányát a URI karakterlánc által biztosított `http.sys`, és teszi ki, mint a <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName>tulajdonság.</xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=fullName> </xref:System.Net.HttpListener>       A `http.sys` szolgáltatás elérhetővé teszi a kérelem URI két karakterláncot: - nyers URI - konvertálni URI a nyers URI megadása a <xref:System.Uri?displayProperty=fullName>egy HTTP-kérelem a kérelem sorban megadott: `GET /path/` `Host: www.contoso.com` által biztosított nyers URI `http.sys` a fent említett kérelem: &quot;/ eleresi_ut /&quot;.       </xref:System.Uri?displayProperty=fullName> A karakterlánc a következő HTTP-műveletet, a hálózaton keresztül küldött jelképez.       A `http.sys` szolgáltatás használatával a HTTP-kérelem sorban megadott URI-Azonosítót a kérelemben megadott adatok alapján hoz létre a konvertált URI és az állomásfejléc meghatározásához az eredeti kiszolgálón a kérés továbbítani kell. Ez a regisztrált URI-előtagok állítja be a kért információ összehasonlításával történik. A HTTP-kiszolgáló SDK-dokumentáció hivatkozik a konvertált URI, mint a [HTTP_COOKED_URL](http://go.microsoft.com/fwlink/?LinkID=166108) struktúra.       Ahhoz, hogy a kérelem URI-előtagok regisztrált összehasonlítására, néhány normalizálási kérésre azért van szükség. A fent a konvertált URI a minta a következőképpen nézne ki: `http://www.contoso.com/path/` a `http.sys` szolgáltatás hatékonyan ötvözi a <xref:System.Uri.Host%2A?displayProperty=fullName>tulajdonság értéke és a karakterlánc a konvertált URI létrehozásához vonal.</xref:System.Uri.Host%2A?displayProperty=fullName> Emellett `http.sys` és a <xref:System.Uri?displayProperty=fullName>osztály is tegye a következőket:-az összes kódolt százalékértékeknek Un-Kilépés.</xref:System.Uri?displayProperty=fullName>      -Százalék-kódolású nem ASCII-karaktereket alakítja át a UTF-16 karaktert megjelenítése. Vegye figyelembe, hogy az UTF-8 és ANSI/DBCS-karakterek támogatottak-e továbbá az Unicode-karaktereket (Unicode kódolással % uXXXX formátumban).      -, Elérési út tömörítési hasonló más normalizálási lépéseket hajtja végre.       A kérés nem tartalmaz semmilyen információt, hogy a használt értékek százalék-kódolású kódolást, mert nem lehet úgy, ha a százalék-kódolású értékek elemzése helyes kódolását meghatározásához.       Ezért `http.sys` a módosítását a folyamat két beállításkulcsot tartalmaz: |} Beállításkulcs |} Alapértelmezett érték |} Leírás |}   |------------------|-------------------|-----------------|   | EnableNonUTF8 |}&1; |} Ha nulla, `http.sys` csak az UTF-8 kódolású URL-címeket fogad el.<br /><br /> Ha nullától eltérő, `http.sys` is fogad az ANSI kódolású vagy DBCS kódolású URL-címek kérésekben. |}   | FavorUTF8 |}&1; |} Ha nullától eltérő, `http.sys` mindig próbál dekódolása URL-címet UTF-8 először; Ha a konverzió sikertelen, és EnableNonUTF8 nem nulla, a Http.sys, majd megpróbálja dekódolni a ANSI vagy kétbájtos Karaktereket.<br /><br /> Ha nulla (és EnableNonUTF8 nem nulla), `http.sys` dekódolása ANSI vagy DBCS; Ha adott próbál eljárás nem vezet eredményre, UTF-8 konverzió megkísérli. |}       Amikor <xref:System.Net.HttpListener>kap, akkor használja, hogy az átalakított URI `http.sys` számára a bemeneti a <xref:System.Net.HttpListenerRequest.Url%2A>tulajdonság.</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Net.HttpListener>       -T támogató karakterek betűk és számok mellett az URI-azonosítók szükség van. Példa: a következő URI Azonosítót, amely ügyféladatok ügyfél beolvasásához használt &quot;1/3812&quot; number: `http://www.contoso.com/Customer(&quot;1%2F3812&quot;)/` vegye figyelembe az URI-azonosító (%&2;F) százalék-kódolású törtvonallal. Erre akkor szükség, mivel ebben az esetben a perjel karakter jelzi az adatokat, és nem egy elérési út határolóját.       A karakterlánc átadni Uri konstruktor irányítja a következő URI Azonosítót: `http://www.contoso.com/Customer(&quot;1/3812&quot;)/` a következő elemeket az elérési út bontani a szegmensek eredményeznének: `Customer(&quot;1` `3812&quot;)` ez nem az a kísérlet történt a kérelem küldőjének.              A UnescapeRequestUrl tulajdonság értéke HAMIS, ha ezt követően amikor a <xref:System.Net.HttpListener>kap, a konvertált URI helyett használja a nyers URI `http.sys` szerint bemeneti, hogy a <xref:System.Net.HttpListenerRequest.Url%2A>tulajdonság.</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Net.HttpListener>"
  syntax:
    content: public bool UnescapeRequestUrl { get; }
    return:
      type: System.Boolean
      description: "Logikai érték, amely jelzi, ha <xref href=&quot;System.Net.HttpListener&quot;> </xref> a konvertált URI helyett a nyers unescaped URI-t használja."
  overload: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.HttpListenerElement.#ctor
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: HttpListenerElement()
  nameWithType: HttpListenerElement.HttpListenerElement()
  fullName: System.Net.Configuration.HttpListenerElement.HttpListenerElement()
- uid: System.Net.Configuration.HttpListenerElement.Properties
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerElement.Properties
  fullName: System.Net.Configuration.HttpListenerElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.HttpListenerElement.Timeouts
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
  fullName: System.Net.Configuration.HttpListenerElement.Timeouts
- uid: System.Net.Configuration.HttpListenerTimeoutsElement
  parent: System.Net.Configuration
  isExternal: false
  name: HttpListenerTimeoutsElement
  nameWithType: HttpListenerTimeoutsElement
  fullName: System.Net.Configuration.HttpListenerTimeoutsElement
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
  fullName: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Configuration.HttpListenerElement.#ctor*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: HttpListenerElement
  nameWithType: HttpListenerElement.HttpListenerElement
- uid: System.Net.Configuration.HttpListenerElement.Properties*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Properties
  nameWithType: HttpListenerElement.Properties
- uid: System.Net.Configuration.HttpListenerElement.Timeouts*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: Timeouts
  nameWithType: HttpListenerElement.Timeouts
- uid: System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl*
  parent: System.Net.Configuration.HttpListenerElement
  isExternal: false
  name: UnescapeRequestUrl
  nameWithType: HttpListenerElement.UnescapeRequestUrl
