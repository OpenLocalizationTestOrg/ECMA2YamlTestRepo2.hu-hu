### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeDescriptionProvider
  id: TypeDescriptionProvider
  children:
  - System.ComponentModel.TypeDescriptionProvider.#ctor
  - System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  - System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  - System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  langs:
  - csharp
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
  type: Class
  summary: "Kiegészítő metaadatokra ahhoz, hogy biztosítja a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: "A TypeDescriptionProvider osztály dinamikusan bővíti a típusú információk is társítva vannak egy típus vagy az objektum hozzáadása, módosítása vagy jellemzőiket, például a attribútumokat, a tulajdonságok és az események elrejtése. A metaadatok a <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> egyetlen kínáló több típusú leírás szolgáltatóosztályok lehet       Két módon egy TypeDescriptionProvider rendelkező hozzárendelni egy <xref:System.ComponentModel.TypeDescriptor>: - tervezéskor, amikor a célosztály rendelhetők hozzá a megfelelő <xref:System.ComponentModel.TypeDescriptionProviderAttribute>címke.</xref:System.ComponentModel.TypeDescriptionProviderAttribute> </xref:System.ComponentModel.TypeDescriptor>      -At futási időt, ha egy, a <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>módszerek a <xref:System.ComponentModel.TypeDescriptor>osztály hívható.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> E túlterhelt metódusok vagy a célobjektum, vagy az osztálytípusa igényelnek.       A TypeDescriptionProvider osztály az azonos típusú, a konstrukció során megadott szülőobjektummal támaszkodik. Ez lehetővé teszi az osztályok, amelyek a <xref:System.ComponentModel.CustomTypeDescriptor>módszerek szelektív felülbírálására.</xref:System.ComponentModel.CustomTypeDescriptor>       TypeDescriptionProvider példánya csak beépített egyéni típusra vonatkozó adat teljesítményre gyakorolt hatás minimalizálása kérésre.       Ez az osztály nem örökölhető."
  syntax:
    content: public abstract class TypeDescriptionProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: TypeDescriptionProvider()
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> osztály."
  remarks: "Ez a konstruktor értéke megegyezik a másik hívása <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29>paraméter értéke rendelkező konstruktor `null`.</xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29>"
  syntax:
    content: protected TypeDescriptionProvider ();
    parameters: []
  overload: System.ComponentModel.TypeDescriptionProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.ComponentModel.TypeDescriptionProvider)'
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: TypeDescriptionProvider(TypeDescriptionProvider)
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> osztály egy szülő típusleírás-szolgáltató használatával."
  remarks: "Ha a `parent` paraméter `null`, minden <xref:System.ComponentModel.TypeDescriptionProvider>módszerek visszatér az alapértelmezett értékeket.</xref:System.ComponentModel.TypeDescriptionProvider> Ellenkező esetben az összes <xref:System.ComponentModel.TypeDescriptionProvider>módszerek azt delegálják, módszerekre `parent`.</xref:System.ComponentModel.TypeDescriptionProvider>       A következő táblázat alapértelmezett visszatérési értékeit <xref:System.ComponentModel.TypeDescriptionProvider>módszerek.</xref:System.ComponentModel.TypeDescriptionProvider>      | Módszer |} Alapértelmezett visszatérési érték |}   |------------|--------------------------|   | <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>| `null`|   | <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>| Egy újonnan létrehozott objektum keresztül <xref:System.Activator.CreateInstance%2A>metódus hívásakor. |}   | <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>| Egy <xref:System.ComponentModel.CustomTypeDescriptor>osztály az alapértelmezett példányán. |}   | <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>| Egy <xref:System.ComponentModel.CustomTypeDescriptor>osztály az alapértelmezett példányán. |}   | <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>| A `objectType` első paramétere. |}</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> </xref:System.ComponentModel.CustomTypeDescriptor> </xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.CustomTypeDescriptor> </xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> </xref:System.Activator.CreateInstance%2A> </xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> </xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>"
  syntax:
    content: protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);
    parameters:
    - id: parent
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A szülő típusleírás-szolgáltató."
  overload: System.ComponentModel.TypeDescriptionProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Létrehoz egy objektumot, amely egy másik adattípus helyére is."
  remarks: "A <xref:System.IServiceProvider>által a `provider` paraméter a <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> <xref:System.ComponentModel.TypeDescriptor>osztálytól</xref:System.ComponentModel.TypeDescriptor> metódusában</xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> átadott</xref:System.IServiceProvider> Ha `provider` nem `null`, a szolgáltató típusleírás-szolgáltató által használható a létrehozási híváshoz kapcsolatos további környezet beszerzése.       A CreateInstance módszer `virtual` és alapértelmezés szerint a eredményét adja vissza a <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>metódus Ha `provider` van `null`.</xref:System.Activator.CreateInstance%2A?displayProperty=fullName> Ha `provider` van `null`, ez a metódus által aktivált a szülő szolgáltató CreateInstance metódusában."
  syntax:
    content: public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Egy nem kötelező szolgáltatót."
    - id: objectType
      type: System.Type
      description: "A típusú objektum létrehozásához. Ez a paraméter akkor soha nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: argTypes
      type: System.Type[]
      description: "Az objektum konstruktor átadni a különböző képviselő típusok választható tömbjét. A tömb lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy nulla hosszúságú."
    - id: args
      type: System.Object[]
      description: "Egy nem kötelező tömböt paramétert, hogy az objektum konstruktor."
    return:
      type: System.Object
      description: "A helyettesítő <xref:System.Object>.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptionProvider.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  id: GetCache(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetCache(Object)
  nameWithType: TypeDescriptionProvider.GetCache(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetCache(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy objektum gyorsítótár elért lekérdezi egy <xref:System.Collections.IDictionary>kulcs/érték párok.</xref:System.Collections.IDictionary>"
  remarks: "A <xref:System.ComponentModel.TypeDescriptor>metaadatok gyűjteményei összetett műveletek elvégzésére lehet szükség.</xref:System.ComponentModel.TypeDescriptor> Mivel típusok nincsenek-e távolítva a memóriából a tartomány élettartama a <xref:System.ComponentModel.TypeDescriptor>osztály automatikusan gyorsítótárazzák ezeket a műveleteket típusától függően eredményeit.</xref:System.ComponentModel.TypeDescriptor> Egyes műveletek azonban élő figyelőobjektum-példányok használata. Ezeket a műveleteket nem gyorsítótárazza a <xref:System.ComponentModel.TypeDescriptor>osztálynál, mert a gyorsítótár őket volna, hogy az objektum nem szemétgyűjtő.</xref:System.ComponentModel.TypeDescriptor> Ehelyett a <xref:System.ComponentModel.TypeDescriptor>osztály lehetővé teszi, hogy egy objektum gyorsítótár érhető el, mint egy <xref:System.Collections.IDictionary>a kulcs/érték párok, egy olyan objektumon léteznie.</xref:System.Collections.IDictionary> </xref:System.ComponentModel.TypeDescriptor> A GetCache metódus a gyorsítótár egy példányát adja vissza. A GetCache metódus visszaadható `null` nem támogatott gyorsítótár objektum esetén.       Az alapértelmezett <xref:System.ComponentModel.TypeDescriptionProvider>által használt <xref:System.ComponentModel.TypeDescriptor>megvizsgálja-e meg, hogy egy elhelyezni komponenst, amely megvalósítja az objektumot a <xref:System.ComponentModel.Design.IDictionaryService>felületet.</xref:System.ComponentModel.Design.IDictionaryService> </xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptionProvider> Ha az objektum, akkor a szótár szolgáltatást használ az objektum-gyorsítótár. Ellenkező esetben az objektum az eredmény `null`. Más típusú leírás szolgáltatók által biztosított a saját megvalósítási itt. Például függőségi objektum csak csatolhat a szolgáltatáskéréshez <xref:System.Collections.IDictionary>.</xref:System.Collections.IDictionary> típusú tulajdonság"
  syntax:
    content: public virtual System.Collections.IDictionary GetCache (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Az objektum a gyorsítótárban beszerzéséhez."
    return:
      type: System.Collections.IDictionary
      description: "Egy <xref:System.Collections.IDictionary>Ha a megadott objektum támogatja a gyorsítótárazást; ellenkező esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IDictionary>"
  overload: System.ComponentModel.TypeDescriptionProvider.GetCache*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  id: GetExtendedTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetExtendedTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Kiterjesztett egyéni típusleíró lekérdezi az adott objektumhoz."
  remarks: "Egy kiterjesztett típusleíró egy egyéni típusleíró definiált más objektumok által hozzáadott ehhez az objektumhoz, de a tulajdonságok nincsenek ajánlatok ténylegesen az objektumon. Például a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] összetevő modell, objektumok, hogy implementálja a <xref:System.ComponentModel.IExtenderProvider>felület tulajdonságok csatolhat más objektumok, amelyek logikai ugyanabban a tárolóban.</xref:System.ComponentModel.IExtenderProvider> A túlterhelt <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metódusok nem ad vissza, amely a extra kiterjesztett tulajdonságok biztosít egy típusleíró.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> A GetExtendedTypeDescriptor metódus a kiterjesztett tulajdonságok adja vissza. A <xref:System.ComponentModel.TypeDescriptor>automatikusan egyesíti a két tulajdonság gyűjtemények eredményei.</xref:System.ComponentModel.TypeDescriptor> Amíg a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] összetevő modellt támogatja csak a kiterjesztett tulajdonságok, GetExtendedTypeDescriptor használhat a kiterjesztett attribútumok, valamint az események, ha típusleírás-szolgáltató támogatja.       GetExtendedTypeDescriptor van `virtual` és alapértelmezés szerint adja vissza egy egyéni típusleíró üres eredményeket ad vissza, ha a szülő-szolgáltató sem lett átadva. Ha a szülő szolgáltató lett átadva, ez a módszer a szülő szolgáltató GetExtendedTypeDescriptor metódus által aktivált."
  syntax:
    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Az objektum a kiterjesztett típusleíró beszerzéséhez."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "Egy <xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref> kiterjesztett metaadatok objektum is nyújt."
  overload: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  id: GetExtenderProviders(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetExtenderProviders(Object)
  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott objektum a extender szolgáltatók beolvasása."
  syntax:
    content: protected virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Az objektum bővítővezérlő-szolgáltatók eléréséhez."
    return:
      type: System.ComponentModel.IExtenderProvider[]
      description: "A szolgáltatók extender tömb <code> instance </code>."
  overload: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lekérdezi a megadott összetevő neve, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha az összetevő nincs neve."
  syntax:
    content: public virtual string GetFullComponentName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "A megadott összetevő."
    return:
      type: System.String
      description: "A megadott összetevő neve."
  overload: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Az adott objektum elleni normál reflexiós hajt végre."
  remarks: "A <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>metódus egy alacsonyabb szintű verziója telepítve a <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metódus.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Ha nincs egyéni típusleíró is található az objektum <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>való-objektuma alapján normál reflexiós.</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>       Ez akkor használja, ha egy leíró típustag helyett egy típus egy példányát használó hívott."
  syntax:
    content: public Type GetReflectionType (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "A típus egy példányát (nem lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>)."
    return:
      type: System.Type
      description: "A reflexió típusú <code> instance </code>."
  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Normál reflexiós szemben a típus végzi."
  remarks: "A <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>metódus egy alacsonyabb szintű verziója telepítve a <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metódus.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Ha nincs egyéni típusleíró is található az objektum <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>való-objektuma alapján normál reflexiós.</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>       Ez akkor használja, ha egy típusú példány helyett egy típust használó leíró tag hívott."
  syntax:
    content: public Type GetReflectionType (Type objectType);
    parameters:
    - id: objectType
      type: System.Type
      description: "Az objektumtípust, amelyre vonatkozóan szeretné lekérdezni a <xref href=&quot;System.Reflection.IReflect&quot;> </xref>."
    return:
      type: System.Type
      description: "A reflexió típusú <code> objectType </code>."
  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  id: GetReflectionType(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetReflectionType(Type,Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type,Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Normál reflexiós szemben az adott objektumnak az adott típusú hajt végre."
  remarks: "A <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>metódus egy alacsonyabb szintű verziója telepítve a <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metódus.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> Ha nincs egyéni típusleíró is található az objektum <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>való-objektuma alapján normál reflexiós.</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>"
  syntax:
    content: public virtual Type GetReflectionType (Type objectType, object instance);
    parameters:
    - id: objectType
      type: System.Type
      description: "Az objektumtípust, amelyre vonatkozóan szeretné lekérdezni a <xref href=&quot;System.Reflection.IReflect&quot;> </xref>."
    - id: instance
      type: System.Object
      description: "A típus egy példánya. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Type
      description: "A reflexió típusú <code> objectType </code>."
  overload: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A reflexió típus alakítja futásidejű típus."
  remarks: "A GetRuntimeType metódus megfordítja a<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> metódust a reflexió típuskonverzió vissza az futásidejű típus.</xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> A GetRuntimeType metódussal részesíti előnyben, mint a <xref:System.Type.UnderlyingSystemType%2A>tulajdonság, amely korábbi verzióiban használt a futásidejű adja vissza.</xref:System.Type.UnderlyingSystemType%2A>"
  syntax:
    content: public virtual Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "Az egyenértékű futásidejű átalakítása típusa."
    return:
      type: System.Type
      description: "A <xref:System.Type>futásidejű egyenértékű jelöli, amelyek <code> reflectionType </code>.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reflectionType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  id: GetTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy egyéni típusleíró lekérdezi az adott objektumhoz."
  syntax:
    content: public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "A típus egy példánya. Lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha egyetlen példánya lett átadva a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "Egy <xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref> metaadatok típusának is nyújt."
  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  id: GetTypeDescriptor(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetTypeDescriptor(Type)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy egyéni típusleíró lekéri a megadott típus."
  syntax:
    content: public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);
    parameters:
    - id: objectType
      type: System.Type
      description: "A típusú objektum, amelynek a típusleíró beolvasása."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "Egy <xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref> metaadatok típusának is nyújt."
  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  id: GetTypeDescriptor(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: GetTypeDescriptor(Type,Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type,Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lekérdezi a megadott típus és az objektum egy egyéni típus leírója."
  remarks: "Ez a módszer mint prototyped `virtual` és egy üres leíró alapértelmezés szerint visszaadja, ha a szülő-szolgáltató sem lett átadva. Ha a szülő szolgáltató lett átadva, ez a módszer a szülő szolgáltató GetTypeDescriptor metódus által aktivált."
  syntax:
    content: public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);
    parameters:
    - id: objectType
      type: System.Type
      description: "A típusú objektum, amelynek a típusleíró beolvasása."
    - id: instance
      type: System.Object
      description: "A típus egy példánya. Lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha egyetlen példánya lett átadva a <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
    return:
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "Egy <xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref> metaadatok típusának is nyújt."
  overload: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy érték, amely azt jelzi, hogy a megadott típus a leírása és a Típus Leírás szolgáltatók láncában kompatibilis lekérdezi."
  syntax:
    content: public virtual bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A típus kompatibilitás ellenőrzéséhez."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> type </code> kompatibilis a leírása és a Típus Leírás szolgáltatók láncában; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeDescriptionProvider.IsSupportedType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: TypeDescriptionProvider()
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider()
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider()
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: TypeDescriptionProvider(TypeDescriptionProvider)
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
  fullName: System.ComponentModel.TypeDescriptionProvider.TypeDescriptionProvider(TypeDescriptionProvider)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptionProvider.CreateInstance(IServiceProvider,Type,Type[],Object[])
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetCache(Object)
  nameWithType: TypeDescriptionProvider.GetCache(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetCache(Object)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetExtendedTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(Object)
- uid: System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetExtenderProviders(Object)
  nameWithType: TypeDescriptionProvider.GetExtenderProviders(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(Object)
- uid: System.ComponentModel.IExtenderProvider[]
  parent: System.ComponentModel
  isExternal: false
  name: IExtenderProvider
  nameWithType: IExtenderProvider
  fullName: System.ComponentModel.IExtenderProvider[]
  spec.csharp:
  - uid: System.ComponentModel.IExtenderProvider
    name: IExtenderProvider
    nameWithType: IExtenderProvider
    fullName: IExtenderProvider[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptionProvider.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Object)
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type)
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetReflectionType(Type,Object)
  nameWithType: TypeDescriptionProvider.GetReflectionType(Type,Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetReflectionType(Type,Object)
- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: TypeDescriptionProvider.GetRuntimeType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(Type)
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetTypeDescriptor(Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Object)
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetTypeDescriptor(Type)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type)
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetTypeDescriptor(Type,Object)
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor(Type,Object)
  fullName: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(Type,Object)
- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: TypeDescriptionProvider.IsSupportedType(Type)
  fullName: System.ComponentModel.TypeDescriptionProvider.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.TypeDescriptionProvider.#ctor*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider.TypeDescriptionProvider
- uid: System.ComponentModel.TypeDescriptionProvider.CreateInstance*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: CreateInstance
  nameWithType: TypeDescriptionProvider.CreateInstance
- uid: System.ComponentModel.TypeDescriptionProvider.GetCache*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetCache
  nameWithType: TypeDescriptionProvider.GetCache
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetExtendedTypeDescriptor
  nameWithType: TypeDescriptionProvider.GetExtendedTypeDescriptor
- uid: System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetExtenderProviders
  nameWithType: TypeDescriptionProvider.GetExtenderProviders
- uid: System.ComponentModel.TypeDescriptionProvider.GetFullComponentName*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetFullComponentName
  nameWithType: TypeDescriptionProvider.GetFullComponentName
- uid: System.ComponentModel.TypeDescriptionProvider.GetReflectionType*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetReflectionType
  nameWithType: TypeDescriptionProvider.GetReflectionType
- uid: System.ComponentModel.TypeDescriptionProvider.GetRuntimeType*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetRuntimeType
  nameWithType: TypeDescriptionProvider.GetRuntimeType
- uid: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: GetTypeDescriptor
  nameWithType: TypeDescriptionProvider.GetTypeDescriptor
- uid: System.ComponentModel.TypeDescriptionProvider.IsSupportedType*
  parent: System.ComponentModel.TypeDescriptionProvider
  isExternal: false
  name: IsSupportedType
  nameWithType: TypeDescriptionProvider.IsSupportedType
