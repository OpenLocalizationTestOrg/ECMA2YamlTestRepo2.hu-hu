### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceSecurityContext
  id: ServiceSecurityContext
  children:
  - System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  - System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)
  - System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  - System.ServiceModel.ServiceSecurityContext.Anonymous
  - System.ServiceModel.ServiceSecurityContext.AuthorizationContext
  - System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies
  - System.ServiceModel.ServiceSecurityContext.Current
  - System.ServiceModel.ServiceSecurityContext.IsAnonymous
  - System.ServiceModel.ServiceSecurityContext.PrimaryIdentity
  - System.ServiceModel.ServiceSecurityContext.WindowsIdentity
  langs:
  - csharp
  name: ServiceSecurityContext
  nameWithType: ServiceSecurityContext
  fullName: System.ServiceModel.ServiceSecurityContext
  type: Class
  summary: "A távoli fél biztonsági környezetében jelöli. Az ügyfélen, a szolgáltatás identitásának jelöli, és a szolgáltatásban, az ügyfél azonosítójának jelöli."
  remarks: "The data is part of the <xref:System.ServiceModel.Security.SecurityMessageProperty> for a message.  \n  \n Use this class to obtain information about a remote *security context* at runtime. A security context is created when a client is successfully authenticated and authorized to access a method. When a message is successfully authenticated and authorized, the security information from the client and for the current service instance can be obtained from an instance of this class.  \n  \n You can retrieve an instance of the ServiceSecurityContext from the <xref:System.ServiceModel.OperationContext.Current%2A> property of the <xref:System.ServiceModel.OperationContext> class, or use it from within a service operation method, as shown in the following example.  \n  \n## Parsing a ClaimSet  \n A common use of the class is to retrieve the current set of claims for the purpose of identifying or authorizing a client when accessing a method. The <xref:System.IdentityModel.Claims.ClaimSet> class contains a collection of <xref:System.IdentityModel.Claims.Claim> objects, and each can be parsed to determine whether a specific claim is present. If the specified claim is provided, authorization can be granted. This functionality is provided by overriding the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method of the <xref:System.ServiceModel.ServiceAuthorizationManager> class.  For a complete example, see the [Authorization Policy](~/add/includes/ajax-current-ext-md.md).  \n  \n## Cookie Mode and IsAuthenticated  \n Note that under some circumstances, the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A> property of the <xref:System.Security.Principal.IIdentity> interface returns `true` even if the remote client is authenticated as an anonymous user. (The <xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A> property returns an implementation of the <xref:System.Security.Principal.IIdentity> interface.) The following circumstances must be true for this to occur:  \n  \n-   The service uses Windows authentication.  \n  \n-   The service allows anonymous logons.  \n  \n-   The binding is a [\\&lt;customBinding\\&gt;](../Topic/%3CcustomBinding%3E.md).  \n  \n-   The custom binding includes a `<security>` element.  \n  \n-   The `<security>` element includes a [\\&lt;secureConversationBootstrap\\&gt;](../Topic/%3CsecureConversationBootstrap%3E.md) with the `requireSecurityContextCancellation` attribute set to `false`."
  example:
  - "The following example uses the ServiceSecurityContext class to provide information about the current security context. The code creates an instance of the <xref:System.IO.StreamWriter> class to write the information to a file.  \n  \n [!code-vb[ServiceSecurityContext#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_2_1.vb)]\n [!code-cs[ServiceSecurityContext#1](~/add/codesnippet/csharp/t-system.servicemodel.se_2_1.cs)]  \n  \n The following example shows an implementation of the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method that uses the ServiceSecurityContext to parse a set of claims.  \n  \n [!code-vb[ServiceSecurityContext#2](~/add/codesnippet/visualbasic/t-system.servicemodel.se_2_2.vb)]\n [!code-cs[ServiceSecurityContext#2](~/add/codesnippet/csharp/t-system.servicemodel.se_2_2.cs)]"
  syntax:
    content: public class ServiceSecurityContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  id: '#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})'
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: ServiceSecurityContext.ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: System.ServiceModel.ServiceSecurityContext.ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;> </xref> osztály házirendek objektum a gyűjteményhez."
  remarks: "Az alapértelmezett házirend-láncolás motort használja, ez a konstruktor."
  syntax:
    content: public ServiceSecurityContext (System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);
    parameters:
    - id: authorizationPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; típusú <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> , amely tartalmazza az engedélyezési házirendeket."
  overload: System.ServiceModel.ServiceSecurityContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)
  id: '#ctor(System.IdentityModel.Policy.AuthorizationContext)'
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: ServiceSecurityContext(AuthorizationContext)
  nameWithType: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext)
  fullName: System.ServiceModel.ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;> </xref> osztály a megadott engedélyezési paraméterekkel."
  remarks: "Ez a konstruktor használható, forgatókönyvek az alkalmazást futtató saját házirend-láncolás motort tartalmaz, amely egy <xref:System.IdentityModel.Policy.AuthorizationContext>.</xref:System.IdentityModel.Policy.AuthorizationContext> eredményezi Az alapértelmezett házirend motor, használja a konstruktorok használatát, amelyek gyűjteménye <xref:System.IdentityModel.Policy.IAuthorizationPolicy>paraméterként.</xref:System.IdentityModel.Policy.IAuthorizationPolicy>"
  syntax:
    content: public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext);
    parameters:
    - id: authorizationContext
      type: System.IdentityModel.Policy.AuthorizationContext
      description: "Egy <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> , amelyek engedélyezési információkat tartalmaznak."
  overload: System.ServiceModel.ServiceSecurityContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  id: '#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})'
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: ServiceSecurityContext(AuthorizationContext,ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext,ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: System.ServiceModel.ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext,ReadOnlyCollection<IAuthorizationPolicy>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;> </xref> osztály a megadott engedélyezési paraméterek és a házirendek gyűjteménye."
  syntax:
    content: public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext, System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> authorizationPolicies);
    parameters:
    - id: authorizationContext
      type: System.IdentityModel.Policy.AuthorizationContext
      description: "Egy <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> , amely tartalmazza az engedélyezési beállítások."
    - id: authorizationPolicies
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; típusú <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> , amely tartalmazza az engedélyezési házirendeket."
  overload: System.ServiceModel.ServiceSecurityContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.Anonymous
  id: Anonymous
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: Anonymous
  nameWithType: ServiceSecurityContext.Anonymous
  fullName: System.ServiceModel.ServiceSecurityContext.Anonymous
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy példányát adja vissza a <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;> </xref> osztály, amely tartalmaz egy üres gyűjteményt, a jogcímek, az identitások és az egyéb környezeti adatok egy névtelen félnek képviselő szolgál."
  syntax:
    content: public static System.ServiceModel.ServiceSecurityContext Anonymous { get; }
    return:
      type: System.ServiceModel.ServiceSecurityContext
      description: "Az üres példánya a <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;> </xref>."
  overload: System.ServiceModel.ServiceSecurityContext.Anonymous*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationContext
  id: AuthorizationContext
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: AuthorizationContext
  nameWithType: ServiceSecurityContext.AuthorizationContext
  fullName: System.ServiceModel.ServiceSecurityContext.AuthorizationContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Az engedélyezési adatok lekérése. Ez az osztály példánya.  A <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> gyűjteményét tartalmazza <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;> </xref> , hogy az alkalmazás kérdezze meg végre, és lekéri az információkat a fél."
  syntax:
    content: public System.IdentityModel.Policy.AuthorizationContext AuthorizationContext { get; }
    return:
      type: System.IdentityModel.Policy.AuthorizationContext
      description: "Egy <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;> </xref> , amely tartalmazza az engedélyezési beállítások."
  overload: System.ServiceModel.ServiceSecurityContext.AuthorizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies
  id: AuthorizationPolicies
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: AuthorizationPolicies
  nameWithType: ServiceSecurityContext.AuthorizationPolicies
  fullName: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ez az osztály példánya rendelt házirendek gyűjteményének beolvasása."
  remarks: ''
  example:
  - '[Managing Claims and Authorization with the Identity Model](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> AuthorizationPolicies { get; set; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; típusú <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> , amely tartalmazza a házirendeket."
  overload: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.Current
  id: Current
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: Current
  nameWithType: ServiceSecurityContext.Current
  fullName: System.ServiceModel.ServiceSecurityContext.Current
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Lekérdezi az aktuális <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;> </xref>."
  syntax:
    content: public static System.ServiceModel.ServiceSecurityContext Current { get; }
    return:
      type: System.ServiceModel.ServiceSecurityContext
      description: "Az aktuális <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;> </xref>."
  overload: System.ServiceModel.ServiceSecurityContext.Current*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.IsAnonymous
  id: IsAnonymous
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: IsAnonymous
  nameWithType: ServiceSecurityContext.IsAnonymous
  fullName: System.ServiceModel.ServiceSecurityContext.IsAnonymous
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy érték, amely azt jelzi, hogy az aktuális ügyfél megadta a hitelesítő adatokat a szolgáltatás lekérdezi."
  syntax:
    content: public bool IsAnonymous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az ügyfél megadta a hitelesítő adatok; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ServiceSecurityContext.IsAnonymous*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity
  id: PrimaryIdentity
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: PrimaryIdentity
  nameWithType: ServiceSecurityContext.PrimaryIdentity
  fullName: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Lekérdezi az aktuális beállításhoz társított elsődleges identitását."
  remarks: "Az elsődleges azonosítót az aktuális felhasználó hitelesítésére használt hitelesítő adatok származik. A hitelesítő adatokat egy X.509 tanúsítvány, az identitás akkor összefűzése a tulajdonos neve és az ujjlenyomat (ebben a sorrendben). A tulajdonos neve elkülönül az ujjlenyomat pontosvesszőt és szóköz. Ha a tanúsítvány Tárgy mezőjében `null`, az elsődleges azonosítót tartalmazza, csak pontosvesszővel válassza el, egy szóközzel és az ujjlenyomat.       A kétirányú üzenet exchange minta közvetlen Kerberos-hitelesítés használata esetén ez a tulajdonság üres, a visszahívás válik, és a claimset is üres. Ez nem fordulhat elő, amikor *SspiNegotiated* használja a rendszer Kerberos helyett.       A Kerberos-kérelmező jogkivonat segítségével csak az ügyfélen határoz meg a szolgáltatás. Az engedélyezési házirendben létrehozott tartalmaz egy jogcímet, ha egyszerű Szolgáltatásnevet; Emiatt a jogcímek nem identitás. A legtöbb esetben nincs probléma, mert <xref:System.ServiceModel.ServiceSecurityContext>nem használatos az ügyfélen.</xref:System.ServiceModel.ServiceSecurityContext> A visszahívás során duplex forgatókönyvek a visszahívás megvizsgálja ezt a tulajdonságot, ha azt lekérése név nélküli identitás."
  example:
  - 'For an example of using the `PrimaryIdentity` property to authorize a client using a certificate, see [How to: Examine the Security Context](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public System.Security.Principal.IIdentity PrimaryIdentity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: "Egy <xref:System.Security.Principal.IIdentity>a jelenlegi beállítások társított.</xref:System.Security.Principal.IIdentity>"
  overload: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceSecurityContext.WindowsIdentity
  id: WindowsIdentity
  parent: System.ServiceModel.ServiceSecurityContext
  langs:
  - csharp
  name: WindowsIdentity
  nameWithType: ServiceSecurityContext.WindowsIdentity
  fullName: System.ServiceModel.ServiceSecurityContext.WindowsIdentity
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Lekérdezi az aktuális beállítás a Windows-identitását."
  remarks: "A távoli fél nem rendelhető hozzá egy Windows-fiókot, ha a <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>tulajdonsága `true`.</xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A>"
  example:
  - "<xref:System.Security.Permissions.PrincipalPermissionAttribute>  \n  \n <xref:System.Security.Principal.IPrincipal>"
  syntax:
    content: public System.Security.Principal.WindowsIdentity WindowsIdentity { get; }
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "A <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> , amely a Windows-tartományi felhasználó jelöli."
  overload: System.ServiceModel.ServiceSecurityContext.WindowsIdentity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: ServiceSecurityContext.ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: System.ServiceModel.ServiceSecurityContext.ServiceSecurityContext(ReadOnlyCollection<IAuthorizationPolicy>)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: ServiceSecurityContext(AuthorizationContext)
  nameWithType: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext)
  fullName: System.ServiceModel.ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext)
- uid: System.IdentityModel.Policy.AuthorizationContext
  parent: System.IdentityModel.Policy
  isExternal: false
  name: AuthorizationContext
  nameWithType: AuthorizationContext
  fullName: System.IdentityModel.Policy.AuthorizationContext
- uid: System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: ServiceSecurityContext(AuthorizationContext,ReadOnlyCollection<IAuthorizationPolicy>)
  nameWithType: ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext,ReadOnlyCollection<IAuthorizationPolicy>)
  fullName: System.ServiceModel.ServiceSecurityContext.ServiceSecurityContext(AuthorizationContext,ReadOnlyCollection<IAuthorizationPolicy>)
- uid: System.ServiceModel.ServiceSecurityContext.Anonymous
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: Anonymous
  nameWithType: ServiceSecurityContext.Anonymous
  fullName: System.ServiceModel.ServiceSecurityContext.Anonymous
- uid: System.ServiceModel.ServiceSecurityContext
  parent: System.ServiceModel
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: ServiceSecurityContext
  fullName: System.ServiceModel.ServiceSecurityContext
- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationContext
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: AuthorizationContext
  nameWithType: ServiceSecurityContext.AuthorizationContext
  fullName: System.ServiceModel.ServiceSecurityContext.AuthorizationContext
- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: AuthorizationPolicies
  nameWithType: ServiceSecurityContext.AuthorizationPolicies
  fullName: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies
- uid: System.ServiceModel.ServiceSecurityContext.Current
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: Current
  nameWithType: ServiceSecurityContext.Current
  fullName: System.ServiceModel.ServiceSecurityContext.Current
- uid: System.ServiceModel.ServiceSecurityContext.IsAnonymous
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: IsAnonymous
  nameWithType: ServiceSecurityContext.IsAnonymous
  fullName: System.ServiceModel.ServiceSecurityContext.IsAnonymous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: PrimaryIdentity
  nameWithType: ServiceSecurityContext.PrimaryIdentity
  fullName: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.ServiceModel.ServiceSecurityContext.WindowsIdentity
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: WindowsIdentity
  nameWithType: ServiceSecurityContext.WindowsIdentity
  fullName: System.ServiceModel.ServiceSecurityContext.WindowsIdentity
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.ServiceModel.ServiceSecurityContext.#ctor*
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: ServiceSecurityContext.ServiceSecurityContext
- uid: System.ServiceModel.ServiceSecurityContext.Anonymous*
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: Anonymous
  nameWithType: ServiceSecurityContext.Anonymous
- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationContext*
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: AuthorizationContext
  nameWithType: ServiceSecurityContext.AuthorizationContext
- uid: System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies*
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: AuthorizationPolicies
  nameWithType: ServiceSecurityContext.AuthorizationPolicies
- uid: System.ServiceModel.ServiceSecurityContext.Current*
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: Current
  nameWithType: ServiceSecurityContext.Current
- uid: System.ServiceModel.ServiceSecurityContext.IsAnonymous*
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: IsAnonymous
  nameWithType: ServiceSecurityContext.IsAnonymous
- uid: System.ServiceModel.ServiceSecurityContext.PrimaryIdentity*
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: PrimaryIdentity
  nameWithType: ServiceSecurityContext.PrimaryIdentity
- uid: System.ServiceModel.ServiceSecurityContext.WindowsIdentity*
  parent: System.ServiceModel.ServiceSecurityContext
  isExternal: false
  name: WindowsIdentity
  nameWithType: ServiceSecurityContext.WindowsIdentity
