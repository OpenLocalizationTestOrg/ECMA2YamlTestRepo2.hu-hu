### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XamlReader
  id: XamlReader
  children:
  - System.Windows.Markup.XamlReader.#ctor
  - System.Windows.Markup.XamlReader.CancelAsync
  - System.Windows.Markup.XamlReader.GetWpfSchemaContext
  - System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  - System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  - System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  - System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  - System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  - System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  - System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  - System.Windows.Markup.XamlReader.LoadCompleted
  - System.Windows.Markup.XamlReader.Parse(System.String)
  - System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  langs:
  - csharp
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Windows.Markup.XamlReader
  type: Class
  summary: "XAML olvassa be, és létrehoz egy diagramot, használatával a WPF alapértelmezett XAML-kódot és egy társított XAML-objektum olvasási."
  remarks: "A szinkron <xref:System.Windows.Markup.XamlReader.Load%2A>módszerek statikusak, de az aszinkron <xref:System.Windows.Markup.XamlReader.LoadAsync%2A>módszerek nem statikusak, és igényelnek a használandó XamlReader osztály egy példányát.</xref:System.Windows.Markup.XamlReader.LoadAsync%2A> </xref:System.Windows.Markup.XamlReader.Load%2A>       A kimenetét a `Load` módszerek az egyetlen objektumot, és a legfelső szintű objektum létrehozott objektumfához vagy objektumdiagram jelöli. Objektumgrafikonok XamlReader által létrehozott általában bekerülnek a futási időben WPF-alkalmazás meglévő objektumfához. Ellenkező esetben az új objektumdiagram tekinthető leválasztva a WPF alkalmazásmodell alkalmazásában. Ez azt jelenti, hogy nem jeleníti meg, és nem használt bármely használatával, az objektum fa módszerek alkalmazhatók a WPF-alkalmazás fő objektumfához (például az API-k <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</xref:System.Windows.Media.VisualTreeHelper> </xref:System.Windows.LogicalTreeHelper> </xref:System.Windows.FrameworkElement.FindName%2A> Az objektum fa fogalmakat további információkért lásd: [a WPF fák](~/add/includes/ajax-current-ext-md.md).       XamlReader a következő elsődleges szituációkat:- **klónozása/objektum gyári**: kiegészítő mechanizmusok nélkül referencia típus általában nem szerepelhet egynél több helyen szerepel a WPF objektumfához. (További-nyújtanak támogatást megosztása, vagy használja újra a WPF mechanizmust például alapuló objektumok <xref:System.Windows.Freezable>, vagy annak támogatásáért gyakran megosztható objektumok például <xref:System.Windows.Media.Brush>elem a hivatkozott, amely egy <xref:System.Windows.ResourceDictionary>.)</xref:System.Windows.ResourceDictionary> </xref:System.Windows.Media.Brush> </xref:System.Windows.Freezable> Egy olyan objektum, amely már szerepel az objektumfához klónozni módja szerializálja az objektumot <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName>.</xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName> használatával Ezt követően használhatja a szerializált karakterlánc bemenetként hívása <xref:System.Windows.Markup.XamlReader.Load%2A>, az adatfolyam vagy <xref:System.Xml.XmlReader>köztes.</xref:System.Xml.XmlReader> </xref:System.Windows.Markup.XamlReader.Load%2A>      - **Just-in-time adatok alapján hozhat létre, objektumok**: gyakran más módja van a meglévő objektumot állapotának módosítása késői kötés vagy a felhasználó által megadott bemeneti rendelkezik. Például használhatja ugyanazt az értéket egynél több tulajdonság beállítására, vagy használja az adatkötés. De ha egy olyan forgatókönyvet, ahol még objektum létrehozásához típus csak meghatározható futási időben vagy felhasználói beavatkozást igényel, majd hozza létre ilyen objektum által egy karakterláncot kiépítése <xref:System.Windows.Markup.XamlReader.Load%2A>bemeneti a gyakran hasznos technika.</xref:System.Windows.Markup.XamlReader.Load%2A>      - **Meglévő erőforrás technikák segítségével**: A <xref:System.IO.Stream>használt típusának gyakran más keretrendszerek vagy technológiák adatokat vagy objektumokat alkalmazás határokon keresztül történő átvitele vagy hasonló helyzeteket.</xref:System.IO.Stream> Ezután a <xref:System.IO.Stream>technikák tárolásához vagy XAML-formátumú adatokat, az alkalmazás részeként az objektum létrehozásához használni.</xref:System.IO.Stream>      - **Dokumentumok rögzített:** töltődik be az alkalmazás helyi vagy letöltött XPS-dokumentumok, hogy a WPF-alkalmazás objektumfából, és a felhasználói felület.      > [!NOTE] > Időnként ebben a dokumentációban objektumdiagram, szemben az objektumfához ismerteti. Egy szigorú szülő-gyermek kapcsolat mindig szerepel a futási idő objektum-kapcsolatokra futási idő WPF-alkalmazás, így objektumdiagram szélesebb körben alkalmazható terminológia. Azonban mert a WPF is két másik fába conceptualization API-k (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) a fa metaphor is érvényesek megfelelően a WPF legtöbbször valós.</xref:System.Windows.Media.VisualTreeHelper> </xref:System.Windows.LogicalTreeHelper> Az XAML nyelvi szempontjából azonban diagramot legtöbbször a legjobb módszer gondolniuk objektumok létrehozását kívül XAML, mert az XAML nyelvi maga nem feltétlenül adja meg segítő osztály módszereit, amelyek, hogy a kapcsolatok jobban fastruktúrában újra hozni.      ## Kódelérés-biztonsági, Laza XAML és XamlReader XAML közvetlenül képviselő objektum által okozott és végrehajtási nyelvet. Ezért XAML-kódban létrehozott elemek rendelkezésre áll a rendszer-erőforrások (például hálózati hozzáférés, a fájl rendszer IO,) együttműködhet generált egyenértékűként kód does.       [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]támogatja a [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] biztonsági keretrendszere [!INCLUDE[TLA#tla_cas](~/add/includes/tlasharptla-cas-md.md)]. Ez azt jelenti, hogy [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] fut az internet zónában tartalom lecsökkentette végrehajtási engedélyeket. &quot;Bő XAML&quot; (noncompiled XAML lapjain értelmezi betöltése során egy XAML-megjelenítőben) és [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] internet zónában általában futnak, és használja ugyanazokat a engedéllyel.  Azonban az XAML-kódot teljesen megbízható alkalmazásoknak betöltött ugyanolyan szintű hozzáférése legyen a rendszererőforrások rendelkezik, a tároló alkalmazás nem. További információkért lásd: [WPF részlegesen megbízható biztonsági](~/add/includes/ajax-current-ext-md.md).       Ezekre az utasításokra XamlReader gyakorolt hatás, hogy az alkalmazás tervezési döntéseket kell hozniuk megbízhatósági arról az XAML-t úgy dönt, hogy betölteni. Ha XAML-kódot, amely nem megbízható tölt be, vegye fontolóra a saját elszigetelés technika hogyan tölthető be az eredményül kapott diagramot.       XamlReader részlegesen megbízható kód által is hívható. Ebben az esetben internetes biztonsági zóna kódelérés-biztonsági van alkalmazva. Ha semmit a betöltött XAML-kódban érvénytelen Internet zóna biztonsági, egy XAML elemzési kivétel történt. A XBAP Fejlesztett és a részlegesen megbízható kapcsolat, a platform szintjén, ahol XamlReader végrehajtása része, amelyek más esetben megegyező kivétel viselkedést explicit részlegesen megbízható kapcsolat hívások beolvasása.      ## WPF XAML XAML olvasók/írók és XAML nyelvi Versioning [!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)] nyelvi szolgáltatásokat tartalmaz, mint például és. Használhatja a aláírások `Load` vagy `Parse` ezeket a szolgáltatásokat használó XAML betöltése. Azonban ezen nyelvi funkciók nem támogatottak az XAML-kódot, amely jelölőnyelvi fordításakor kell (például az XAML a **lap** felépítési művelet a WPF-alkalmazások, illetve bármely XAML-kódot, amely magában foglalja a jelölés során fordítási feladat a build műveletek).       WPF-típusok és a WPF technológia általában támogatja a WPF internals elérésére használó fogalmak. Például hogyan valósítja meg a WPF függőségi tulajdonságok támaszkodik hatékony típustag keresési belső technikákat. Ezek belső hozzáférést engedélyezte az XAML-t a megadott API-k írásakor vagy olvasásakor <xref:System.Windows.Markup.XamlWriter>és az XamlReader a <xref:System.Windows.Markup>névtér és PresentationFramework szerelvény.</xref:System.Windows.Markup> </xref:System.Windows.Markup.XamlWriter> Azonban alacsonyabb szintű XAML-olvasók és XAML-írót a System.Xaml szerelvény (osztályok alapján <xref:System.Xaml.XamlReader?displayProperty=fullName>, <xref:System.Xaml.XamlWriter?displayProperty=fullName>) nincs hozzáférése a WPF internals.</xref:System.Xaml.XamlWriter?displayProperty=fullName> </xref:System.Xaml.XamlReader?displayProperty=fullName> A WPF-specifikus szerelvény nem System.Xaml a függőség van. A WPF internals hozzáféréssel, nem System.Xaml olvasók és író megfelelően nem lehet betölteni, vagy mentse az összes WPF típusokat, vagy WPF-típusok alapján. Különösen a System.Xaml olvasók és írók nem ismeri a tulajdonságtároló, vagy hogyan alkalmazza a WPF stílusok, erőforrásszótárakban és sablonok a mintaadatokról biztonsági WPF-függőség tulajdonság például fogalmak. Ezért megválaszthatja, hogy: - WPF típusok tölt be, és/vagy XAML használ BAML űrlapon bármely olyan módon, ha a PresentationFramework XAML-olvasók és XAML-íróhoz.      – Ha nem a WPF-típus vagy XAML BAML formájában hagyatkoznia és nem használ másik meghatározott technológia XAML-olvasó vagy XAML-író végrehajtására vonatkozó adott keretrendszer okokból használja System.Xaml XAML-olvasók és XAML-íróhoz.      ## Biztonsági megvalósítási System.Xaml .NET 4 XamlReader az a hívható API felület a WPF keretrendszert szintű XAML elemző. Az azonos alapul szolgáló XAML elemző is végez a futásidejű XAML betöltése és értelmezése WPF-alkalmazások, hogy a célkiszolgáló [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] és [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)].       Ha céloz meg [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], a külső API megegyezik, de végrehajtása részei a épülnek a [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] a System.Xaml szerelvény, ami javítja a műszaki és jelentéskészítési aspektusait XAML elemzése számos általános XAML-implementációjában. Célcsoport-kezelési [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] feltétlenül tartalmazza az elvégzendő többek között a System.Xaml hivatkozást, és a végrehajtási, mint például a jelentett kivételek származhatnak System.Xaml típusok.      <a name=&quot;xamlTextUsage_XamlReader&quot;></a>## XAML szöveg kihasználtsága"
  example:
  - "The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.  The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the XamlReader class.  \n  \n [!code-cs[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public class XamlReader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Windows.Markup.XamlReader.XamlReader()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref> osztály."
  syntax:
    content: public XamlReader ();
    parameters: []
  overload: System.Windows.Markup.XamlReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.CancelAsync
  id: CancelAsync
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: XamlReader.CancelAsync()
  fullName: System.Windows.Markup.XamlReader.CancelAsync()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Az aktuális aszinkron betöltés művelet megszakítása, ha van egy függőben lévő aszinkron betöltés művelet."
  remarks: "CancelAsync egy aszinkron művelet; ezért néhány betöltése fordulhat elő, mielőtt a művelet végrehajtása megszakadt."
  syntax:
    content: public void CancelAsync ();
    parameters: []
  overload: System.Windows.Markup.XamlReader.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext
  id: GetWpfSchemaContext
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: GetWpfSchemaContext()
  nameWithType: XamlReader.GetWpfSchemaContext()
  fullName: System.Windows.Markup.XamlReader.GetWpfSchemaContext()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Értéket ad vissza egy <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> objektum, amely a WPF séma környezetben beállításait jelölik a <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  syntax:
    content: public static System.Xaml.XamlSchemaContext GetWpfSchemaContext ();
    parameters: []
    return:
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> objektum, amely a WPF séma környezetben beállításait jelölik a <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  overload: System.Windows.Markup.XamlReader.GetWpfSchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(Stream)
  nameWithType: XamlReader.Load(Stream)
  fullName: System.Windows.Markup.XamlReader.Load(Stream)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Olvassa be az XAML-kódot a megadott <xref:System.IO.Stream>, és adja vissza egy <xref:System.Object>, amely gyökerén helyezkedik el a megfelelő objektum.</xref:System.Object> </xref:System.IO.Stream>"
  remarks: ''
  example:
  - "The following example saves a <xref:System.Windows.Controls.Button> into a <xref:System.IO.MemoryStream> using the <xref:System.Windows.Markup.XamlWriter> class. The stream is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.  \n  \n [!code-cs[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public static object Load (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Az XAML adatfolyam formában betöltéséhez."
    return:
      type: System.Object
      description: "Az objektum a létrehozott objektum fa gyökerében."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  id: Load(System.Xaml.XamlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(XamlReader)
  nameWithType: XamlReader.Load(XamlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XamlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Olvassa be az XAML keresztül a megadott <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> és egy objektumot, amely a megfelelő objektum fa gyökere."
  remarks: "A bemeneti <xref:System.Xaml.XamlReader> <xref:System.Windows.Baml2006.Baml2006Reader>.</xref:System.Windows.Baml2006.Baml2006Reader> is lehet.</xref:System.Xaml.XamlReader> Ez a hogyan betöltheti BAML futási időben, vagy honosítási eszköz célokra."
  syntax:
    content: public static object Load (System.Xaml.XamlReader reader);
    parameters:
    - id: reader
      type: System.Xaml.XamlReader
      description: "A <xref href=&quot;System.Xaml.XamlReader&quot;></xref> object. Bemeneti XAML inicializálási várhatóan."
    return:
      type: System.Object
      description: "Az objektum, amely a létrehozott objektum fa gyökere."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XamlReader.Load(XmlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XmlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Olvassa be az XAML-kódot a megadott <xref:System.Xml.XmlReader>és egy objektumot, amely a megfelelő objektum fa gyökere.</xref:System.Xml.XmlReader>"
  remarks: ''
  example:
  - "The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.  The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.  \n  \n [!code-cs[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public static object Load (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A <xref:System.Xml.XmlReader>, amely már betöltötte a bemeneti XML formátumban betöltése XAML.</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "Az objektum, amely a létrehozott objektum fa gyökere."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  id: Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(Stream,ParserContext)
  nameWithType: XamlReader.Load(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Load(Stream,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Olvassa be az XAML-kódot a megadott <xref:System.IO.Stream>és egy objektumot, amely a megfelelő objektum fa gyökere.</xref:System.IO.Stream>"
  syntax:
    content: public static object Load (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Az adatfolyam, amely tartalmazza az XAML-t adjon meg betölteni."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Az elemző által használt környezet adatainak."
    return:
      type: System.Object
      description: "Az objektum, amely a létrehozott objektum fa gyökere."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>parserContext</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  id: LoadAsync(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(Stream)
  nameWithType: XamlReader.LoadAsync(Stream)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Olvassa be az XAML-kódot a megadott <xref:System.IO.Stream>és gyökerén helyezkedik el a megfelelő objektumot ad vissza.</xref:System.IO.Stream>"
  remarks: "Egy aszinkron XAML-betöltési művelethez először visszaállítja az olyan objektumot, amely csak a legfelső szintű objektum. Aszinkron módon XAML elemzése majd továbbra is fennáll, és a legfelső szintű kitölti a gyermekobjektumokra. Ez a ellentétben a tipikus WPF XAML feldolgozási viselkedést és a WPF elveit objektum élettartama való együttműködéshez. A tipikus (nem-aszinkron) interakció minden gyermekgyűjtemény beleértve egy objektum összes tulajdonságának értéke kitöltődnek elemet ad vissza, és a jelentéskészítés, mivel a betöltése előtt. A fa, ahol a legfelső szintű objektum az elérhető legyen az utolsó objektum létrehozásához alulról felfelé módszer viselkedésmódot megfelel.       Ön általában hozzárendelni kívánt a visszaadott objektumot a WPF-alkalmazás objektumfához néhány helyét, a ismeretében, amely a tartalom előfordulhat, hogy továbbra is kell kitöltése és elrendezés növekményes frissítések okozhat, ha a teljes tartalmat ki van téve a felhasználói felület részeként. Ezen okból tipikus különítse el, vagy XAML-kódot az aszinkron módon betöltött objektumok virtualizálása, és az alkalmazás-specifikus logika és alkalmazásállapot használatával értesítheti a mikor <xref:System.Windows.Markup.XamlReader.LoadCompleted>kezeli.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Ahhoz, hogy LoadAsync XAML bemeneti aszinkron módon betöltése a gyökérelemnek az XAML-kódban bemeneti tartalmaznia kell a attribútum és érték `x:SynchronousMode=&quot;Async&quot;`. Az érték kezelnek, és a nagybetűk között. Ha a XAML bemeneti gyökere nem tartalmazhat `x:SynchronousMode=&quot;Async&quot;`, nincs kivétel történt, és a hívás feldolgozása szinkron terhelést, (lásd: <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>       -Példányonként csak egy aszinkron betöltés művelet a <xref:System.Windows.Markup.XamlReader>osztály egyszerre hajtható végre.</xref:System.Windows.Markup.XamlReader>  Ha csak egy aszinkron művelet kísérletet ugyanazt a <xref:System.Windows.Markup.XamlReader>osztály egy <xref:System.InvalidOperationException>vált ki.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Az adatfolyam, amely tartalmazza az XAML-t adjon meg betölteni."
    return:
      type: System.Object
      description: "Az objektum, amely a létrehozott objektum fa gyökere."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Több betöltési művelet várakoznak egyidejűleg azonos <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  id: LoadAsync(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(XmlReader)
  nameWithType: XamlReader.LoadAsync(XmlReader)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(XmlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Olvassa be az XAML-kódot a megadott <xref:System.Xml.XmlReader>és gyökerén helyezkedik el a megfelelő objektumot ad vissza.</xref:System.Xml.XmlReader>"
  remarks: "Egy aszinkron XAML-betöltési művelethez először visszaállítja az olyan objektumot, amely csak a legfelső szintű objektum. Aszinkron módon XAML elemzése majd továbbra is fennáll, és a legfelső szintű kitölti a gyermekobjektumokra. Ez a ellentétben a tipikus WPF XAML feldolgozási viselkedést és a WPF elveit objektum élettartama való együttműködéshez. A tipikus (nem-aszinkron) interakció minden gyermekgyűjtemény beleértve egy objektum összes tulajdonságának értéke kitöltődnek elemet ad vissza, és a jelentéskészítés, mivel a betöltése előtt. A fa, ahol a legfelső szintű objektum az elérhető legyen az utolsó objektum létrehozásához alulról felfelé módszer viselkedésmódot megfelel.       Akkor általában hozzárendelni kívánt a visszaadott objektumot a LoadAsync az alkalmazás objektumfához néhány helyét, a ismeretében, amely a tartalom előfordulhat, hogy továbbra is kell kitöltése és elrendezés növekményes frissítések okozhat, ha a teljes tartalmat ki van téve a felhasználói felület részeként. Ezen okból tipikus különítse el, vagy XAML-kódot az aszinkron módon betöltött objektumok virtualizálása, és az alkalmazás-specifikus logika és alkalmazásállapot használatával értesítheti a mikor <xref:System.Windows.Markup.XamlReader.LoadCompleted>kezeli.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Ahhoz, hogy betöltése LoadAsync XAML bemeneti aszinkron módon történik, az XAML-kód legfelső szintű elemének tartalmaznia kell attribútum és érték `x:SynchronousMode=&quot;Async&quot;`. Az érték kezelnek, és a nagybetűk között. Ha a XAML markup gyökere nem tartalmazhat `x:SynchronousMode=&quot;Async&quot;`, nincs kivétel történt, és helyette a hívás feldolgozása szinkron terhelést, (lásd: <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>       -Példányonként csak egy aszinkron betöltés művelet a <xref:System.Windows.Markup.XamlReader>osztály egyszerre hajtható végre.</xref:System.Windows.Markup.XamlReader>  Ha csak egy aszinkron művelet kísérletet ugyanazt a <xref:System.Windows.Markup.XamlReader>osztály egy <xref:System.InvalidOperationException>vált ki.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Egy meglévő <xref:System.Xml.XmlReader>, amely rendelkezik már betöltött olvasása a XAML bemeneti.</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "A létrehozott objektum fa gyökere."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Több terhelés műveleteket egyidejűleg azonos <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  id: LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(Stream,ParserContext)
  nameWithType: XamlReader.LoadAsync(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Olvassa be az XAML-kódot a megadott <xref:System.IO.Stream>és gyökerén helyezkedik el a megfelelő objektumot ad vissza.</xref:System.IO.Stream>"
  remarks: "Egy aszinkron XAML-betöltési művelethez először visszaállítja az olyan objektumot, amely csak a legfelső szintű objektum. Aszinkron módon XAML elemzése majd továbbra is fennáll, és a legfelső szintű kitölti a gyermekobjektumokra. Ez a ellentétben a tipikus WPF XAML feldolgozási viselkedést és a WPF elveit objektum élettartama való együttműködéshez. A tipikus (nem-aszinkron) interakció minden gyermekgyűjtemény beleértve egy objektum összes tulajdonságának értéke kitöltődnek elemet ad vissza, és a jelentéskészítés, mivel a betöltése előtt. A fa, ahol a legfelső szintű objektum az elérhető legyen az utolsó objektum létrehozásához alulról felfelé módszer viselkedésmódot megfelel.       Ön általában hozzárendelni kívánt a visszaadott objektumot az alkalmazás objektumfához néhány helyét, a ismeretében, amely a tartalom előfordulhat, hogy továbbra is kell kitöltése és elrendezés növekményes frissítések okozhat, ha a teljes tartalmat ki van téve a felhasználói felület részeként. Ezen okból tipikus különítse el, vagy XAML-kódot az aszinkron módon betöltött objektumok virtualizálása, és az alkalmazás-specifikus logika és alkalmazásállapot használatával értesítheti a mikor <xref:System.Windows.Markup.XamlReader.LoadCompleted>kezeli.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Ahhoz, hogy LoadAsync markup betöltése aszinkron módon történik, az XAML-kód gyökérelemének tartalmaznia kell attribútum és érték `x:SynchronousMode=&quot;Async&quot;`. Az érték kezelnek, és a nagybetűk között. Ha a XAML markup gyökere nem tartalmazhat `x:SynchronousMode=&quot;Async&quot;`, nincs kivétel történt, és a hívás feldolgozása szinkron terhelést, (lásd: <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>       -Példányonként csak egy aszinkron betöltés művelet a <xref:System.Windows.Markup.XamlReader>osztály egyszerre hajtható végre.</xref:System.Windows.Markup.XamlReader>  Ha csak egy aszinkron művelet kísérletet ugyanazt a <xref:System.Windows.Markup.XamlReader>osztály egy <xref:System.InvalidOperationException>vált ki.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Egy adatfolyam, amely tartalmazza az XAML-t adjon meg betölteni."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Az elemző által használt környezet adatainak."
    return:
      type: System.Object
      description: "A létrehozott objektum fa gyökere."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Több terhelés műveleteket egyidejűleg azonos <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: XamlReader.LoadCompleted
  fullName: System.Windows.Markup.XamlReader.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Egy aszinkron betöltés művelet befejeződése után következik be."
  remarks: "LoadCompleted is jelenik meg, ha egy aszinkron betöltés művelet megszakítása."
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Parse(String)
  nameWithType: XamlReader.Parse(String)
  fullName: System.Windows.Markup.XamlReader.Parse(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Olvassa be az XAML-kódot a megadott karakterlánc, és objektum beállítása/beolvasása, amely megfelel a megadott kód gyökeréhez."
  remarks: "A megvalósítás hívások <xref:System.Windows.Markup.XamlReader.Load%2A>belső után egy adatfolyamának létrehozásakor a karakterláncból.</xref:System.Windows.Markup.XamlReader.Load%2A> Lásd: <xref:System.Windows.Markup.XamlReader.Load%2A>a további információkat, például lehetséges kivételek.</xref:System.Windows.Markup.XamlReader.Load%2A>"
  syntax:
    content: public static object Parse (string xamlText);
    parameters:
    - id: xamlText
      type: System.String
      description: "A bemeneti XAML más szöveggel egyetlen szöveges karakterláncként."
    return:
      type: System.Object
      description: "A létrehozott objektum fa gyökere."
  overload: System.Windows.Markup.XamlReader.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  id: Parse(System.String,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Parse(String,ParserContext)
  nameWithType: XamlReader.Parse(String,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Parse(String,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Beolvassa a XAML-kód a megadott karakterlánc (használja a megadott <xref href=&quot;System.Windows.Markup.ParserContext&quot;> </xref>) és egy objektumot, amely megfelel a megadott kód gyökeréhez."
  remarks: "A megvalósítás hívások <xref:System.Windows.Markup.XamlReader.Load%2A>belső után egy adatfolyamának létrehozásakor a karakterláncból.</xref:System.Windows.Markup.XamlReader.Load%2A> Lásd: <xref:System.Windows.Markup.XamlReader.Load%2A>a további információkat, például lehetséges kivételek.</xref:System.Windows.Markup.XamlReader.Load%2A>"
  syntax:
    content: public static object Parse (string xamlText, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: xamlText
      type: System.String
      description: "A bemeneti XAML más szöveggel egyetlen szöveges karakterláncként."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Az elemző által használt környezet adatainak."
    return:
      type: System.Object
      description: "A létrehozott objektum fa gyökere."
  overload: System.Windows.Markup.XamlReader.Parse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Markup.XamlReader.#ctor
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Windows.Markup.XamlReader.XamlReader()
- uid: System.Windows.Markup.XamlReader.CancelAsync
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: CancelAsync()
  nameWithType: XamlReader.CancelAsync()
  fullName: System.Windows.Markup.XamlReader.CancelAsync()
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: GetWpfSchemaContext()
  nameWithType: XamlReader.GetWpfSchemaContext()
  fullName: System.Windows.Markup.XamlReader.GetWpfSchemaContext()
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(Stream)
  nameWithType: XamlReader.Load(Stream)
  fullName: System.Windows.Markup.XamlReader.Load(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(XamlReader)
  nameWithType: XamlReader.Load(XamlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XamlReader)
- uid: System.Xaml.XamlReader
  parent: System.Xaml
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
- uid: System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XamlReader.Load(XmlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(Stream,ParserContext)
  nameWithType: XamlReader.Load(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Load(Stream,ParserContext)
- uid: System.Windows.Markup.ParserContext
  parent: System.Windows.Markup
  isExternal: false
  name: ParserContext
  nameWithType: ParserContext
  fullName: System.Windows.Markup.ParserContext
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(Stream)
  nameWithType: XamlReader.LoadAsync(Stream)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream)
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(XmlReader)
  nameWithType: XamlReader.LoadAsync(XmlReader)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(XmlReader)
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(Stream,ParserContext)
  nameWithType: XamlReader.LoadAsync(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream,ParserContext)
- uid: System.Windows.Markup.XamlReader.LoadCompleted
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadCompleted
  nameWithType: XamlReader.LoadCompleted
  fullName: System.Windows.Markup.XamlReader.LoadCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Windows.Markup.XamlReader.Parse(System.String)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse(String)
  nameWithType: XamlReader.Parse(String)
  fullName: System.Windows.Markup.XamlReader.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse(String,ParserContext)
  nameWithType: XamlReader.Parse(String,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Parse(String,ParserContext)
- uid: System.Windows.Markup.XamlReader.#ctor*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader.XamlReader
- uid: System.Windows.Markup.XamlReader.CancelAsync*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: CancelAsync
  nameWithType: XamlReader.CancelAsync
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: GetWpfSchemaContext
  nameWithType: XamlReader.GetWpfSchemaContext
- uid: System.Windows.Markup.XamlReader.Load*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load
  nameWithType: XamlReader.Load
- uid: System.Windows.Markup.XamlReader.LoadAsync*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync
  nameWithType: XamlReader.LoadAsync
- uid: System.Windows.Markup.XamlReader.Parse*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse
  nameWithType: XamlReader.Parse
