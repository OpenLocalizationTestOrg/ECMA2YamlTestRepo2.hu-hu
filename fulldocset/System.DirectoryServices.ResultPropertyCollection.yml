### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ResultPropertyCollection
  id: ResultPropertyCollection
  children:
  - System.DirectoryServices.ResultPropertyCollection.Contains(System.String)
  - System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)
  - System.DirectoryServices.ResultPropertyCollection.Item(System.String)
  - System.DirectoryServices.ResultPropertyCollection.PropertyNames
  - System.DirectoryServices.ResultPropertyCollection.Values
  langs:
  - csharp
  name: ResultPropertyCollection
  nameWithType: ResultPropertyCollection
  fullName: System.DirectoryServices.ResultPropertyCollection
  type: Class
  summary: "A tulajdonságait tartalmazza egy <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> példány."
  remarks: "<xref:System.DirectoryServices.SearchResult>példányok hasonlóak <xref:System.DirectoryServices.DirectoryEntry>példányok.</xref:System.DirectoryServices.DirectoryEntry></xref:System.DirectoryServices.SearchResult> Ez igen jelentős különbség, hogy a <xref:System.DirectoryServices.DirectoryEntry>annak adatait kérdezi le az Active Directory tartományi szolgáltatások hierarchia minden alkalommal, amikor új objektumot érhető el, mivel adatai a <xref:System.DirectoryServices.SearchResult>már elérhető a <xref:System.DirectoryServices.SearchResultCollection>, amely egy <xref:System.DirectoryServices.DirectorySearcher>lekérdezése értéket ad vissza.</xref:System.DirectoryServices.DirectorySearcher> </xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResult> </xref:System.DirectoryServices.DirectoryEntry> Ha mégis megpróbálja beolvasni a <xref:System.DirectoryServices.SearchResult>tulajdonság, amely a lekérdezés nem adott meg a lekérdezés, a tulajdonság nem lesz elérhető.</xref:System.DirectoryServices.SearchResult>"
  syntax:
    content: 'public class ResultPropertyCollection : System.Collections.DictionaryBase'
  inheritance:
  - System.Object
  - System.Collections.DictionaryBase
  implements: []
  inheritedMembers:
  - System.Collections.DictionaryBase.Clear
  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  - System.Collections.DictionaryBase.Count
  - System.Collections.DictionaryBase.Dictionary
  - System.Collections.DictionaryBase.GetEnumerator
  - System.Collections.DictionaryBase.InnerHashtable
  - System.Collections.DictionaryBase.OnClear
  - System.Collections.DictionaryBase.OnClearComplete
  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ResultPropertyCollection.Contains(String)
  fullName: System.DirectoryServices.ResultPropertyCollection.Contains(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Meghatározza, hogy a tulajdonság, amely rendelkezik a megadott név tartozik ehhez a gyűjteményhez."
  syntax:
    content: public bool Contains (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "A tulajdonság található neve."
    return:
      type: System.Boolean
      description: "A visszatérési érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> , ha a megadott tulajdonság tartozik ehhez a gyűjteményhez; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ResultPropertyCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)
  id: CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: CopyTo(ResultPropertyValueCollection[],Int32)
  nameWithType: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)
  fullName: System.DirectoryServices.ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Másolja át a Tulajdonságok át tömbbé, egy adott index a tömb kezdődő ebben a gyűjteményben."
  syntax:
    content: public void CopyTo (System.DirectoryServices.ResultPropertyValueCollection[] array, int index);
    parameters:
    - id: array
      type: System.DirectoryServices.ResultPropertyValueCollection[]
      description: "Típusú tömb <xref href=&quot;System.DirectoryServices.ResultPropertyValueCollection&quot;> </xref> , amely fogadja a gyűjtemény tulajdonságait."
    - id: index
      type: System.Int32
      description: "A nulla alapú tömbindex, amelynél a tulajdonságok másolásához."
  overload: System.DirectoryServices.ResultPropertyCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.Item(System.String)
  id: Item(System.String)
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ResultPropertyCollection.Item(String)
  fullName: System.DirectoryServices.ResultPropertyCollection.Item(String)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A tulajdonság lekérése a gyűjteményt, amely a megadott név."
  remarks: "A C# Ez a tulajdonság akkor az <xref:System.DirectoryServices.ResultPropertyValueCollection>osztály</xref:System.DirectoryServices.ResultPropertyValueCollection> az indexelő       A JScript a típus által definiált indexelt alapértelmezett tulajdonságok használhatók, de meg explicit módon sajátokat nem határozhat meg. Azonban az expando attribútumot az osztály automatikusan tartalmaz egy alapértelmezett megadó indexelt tulajdonsága, amelynek típusa objektumot, és amelynek Indextípus <xref:System.String>.</xref:System.String>"
  syntax:
    content: public System.DirectoryServices.ResultPropertyValueCollection this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "A lekérdezni a tulajdonság nevét."
    return:
      type: System.DirectoryServices.ResultPropertyValueCollection
      description: "A <xref href=&quot;System.DirectoryServices.ResultPropertyValueCollection&quot;> </xref> , amely rendelkezik a megadott név."
  overload: System.DirectoryServices.ResultPropertyCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames
  id: PropertyNames
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: PropertyNames
  nameWithType: ResultPropertyCollection.PropertyNames
  fullName: System.DirectoryServices.ResultPropertyCollection.PropertyNames
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a tulajdonságok nevét ebben a gyűjteményben."
  syntax:
    content: public System.Collections.ICollection PropertyNames { get; }
    return:
      type: System.Collections.ICollection
      description: "Egy <xref:System.Collections.ICollection>, amely tartalmazza az ebben a gyűjteményben tulajdonságainak nevével.</xref:System.Collections.ICollection>"
  overload: System.DirectoryServices.ResultPropertyCollection.PropertyNames*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.Values
  id: Values
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: Values
  nameWithType: ResultPropertyCollection.Values
  fullName: System.DirectoryServices.ResultPropertyCollection.Values
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a tulajdonságok értékei ebben a gyűjteményben."
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Egy <xref:System.Collections.ICollection>, amely tartalmazza a tulajdonságok a gyűjtemény értékei.</xref:System.Collections.ICollection>"
  overload: System.DirectoryServices.ResultPropertyCollection.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.DictionaryBase
- uid: System.DirectoryServices.ResultPropertyCollection.Contains(System.String)
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ResultPropertyCollection.Contains(String)
  fullName: System.DirectoryServices.ResultPropertyCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: CopyTo(ResultPropertyValueCollection[],Int32)
  nameWithType: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)
  fullName: System.DirectoryServices.ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)
- uid: System.DirectoryServices.ResultPropertyValueCollection[]
  parent: System.DirectoryServices
  isExternal: false
  name: ResultPropertyValueCollection
  nameWithType: ResultPropertyValueCollection
  fullName: System.DirectoryServices.ResultPropertyValueCollection[]
  spec.csharp:
  - uid: System.DirectoryServices.ResultPropertyValueCollection
    name: ResultPropertyValueCollection
    nameWithType: ResultPropertyValueCollection
    fullName: ResultPropertyValueCollection[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ResultPropertyCollection.Item(System.String)
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Item(String)
  nameWithType: ResultPropertyCollection.Item(String)
  fullName: System.DirectoryServices.ResultPropertyCollection.Item(String)
- uid: System.DirectoryServices.ResultPropertyValueCollection
  parent: System.DirectoryServices
  isExternal: false
  name: ResultPropertyValueCollection
  nameWithType: ResultPropertyValueCollection
  fullName: System.DirectoryServices.ResultPropertyValueCollection
- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: PropertyNames
  nameWithType: ResultPropertyCollection.PropertyNames
  fullName: System.DirectoryServices.ResultPropertyCollection.PropertyNames
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.DirectoryServices.ResultPropertyCollection.Values
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Values
  nameWithType: ResultPropertyCollection.Values
  fullName: System.DirectoryServices.ResultPropertyCollection.Values
- uid: System.DirectoryServices.ResultPropertyCollection.Contains*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Contains
  nameWithType: ResultPropertyCollection.Contains
- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: CopyTo
  nameWithType: ResultPropertyCollection.CopyTo
- uid: System.DirectoryServices.ResultPropertyCollection.Item*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Item
  nameWithType: ResultPropertyCollection.Item
- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: PropertyNames
  nameWithType: ResultPropertyCollection.PropertyNames
- uid: System.DirectoryServices.ResultPropertyCollection.Values*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Values
  nameWithType: ResultPropertyCollection.Values
