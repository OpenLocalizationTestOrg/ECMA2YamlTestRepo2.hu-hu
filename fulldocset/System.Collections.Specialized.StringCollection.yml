### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringCollection
  id: StringCollection
  children:
  - System.Collections.Specialized.StringCollection.#ctor
  - System.Collections.Specialized.StringCollection.Add(System.String)
  - System.Collections.Specialized.StringCollection.AddRange(System.String[])
  - System.Collections.Specialized.StringCollection.Clear
  - System.Collections.Specialized.StringCollection.Contains(System.String)
  - System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  - System.Collections.Specialized.StringCollection.Count
  - System.Collections.Specialized.StringCollection.GetEnumerator
  - System.Collections.Specialized.StringCollection.IndexOf(System.String)
  - System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  - System.Collections.Specialized.StringCollection.IsReadOnly
  - System.Collections.Specialized.StringCollection.IsSynchronized
  - System.Collections.Specialized.StringCollection.Item(System.Int32)
  - System.Collections.Specialized.StringCollection.Remove(System.String)
  - System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  - System.Collections.Specialized.StringCollection.SyncRoot
  - System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
  type: Class
  summary: "A karakterláncok gyűjteményét képviseli."
  remarks: "StringCollection fogad `null` mint érvényes értéket, és lehetővé teszi a duplikált elemeket.       Karakterláncok összehasonlítására-és nagybetűk.       A gyűjtemény elemszámának segítségével férhetők el az egész szám típusú index.  A gyűjtemény indexek nulla alapú."
  example:
  - "The following code example demonstrates several of the properties and methods of StringCollection.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/cpp/t-system.collections.spe_2_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/csharp/t-system.collections.spe_2_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_2_1.vb)]"
  syntax:
    content: 'public class StringCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: StringCollection()
  nameWithType: StringCollection.StringCollection()
  fullName: System.Collections.Specialized.StringCollection.StringCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> osztály."
  remarks: "Ez a konstruktor O(1) során."
  syntax:
    content: public StringCollection ();
    parameters: []
  overload: System.Collections.Specialized.StringCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: StringCollection.Add(String)
  fullName: System.Collections.Specialized.StringCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Egy karakterláncot ad hozzá az végén a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>elfogadja `null` mint érvényes értéket, és lehetővé teszi a duplikált elemeket.</xref:System.Collections.Specialized.StringCollection>       Ha <xref:System.Collections.Specialized.StringCollection.Count%2A>kisebb, mint a kapacitás, ez a módszer egy O(1) művelet.</xref:System.Collections.Specialized.StringCollection.Count%2A> Ha a kapacitás növelhető meg, hogy megfeleljen az új elem, ez a módszer válik O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/m-system.collections.spe_39_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/m-system.collections.spe_39_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.collections.spe_39_1.vb)]"
  syntax:
    content: public int Add (string value);
    parameters:
    - id: value
      type: System.String
      description: "A karakterlánc végén hozzáadása a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "A nulla alapú indexét, ahol az új elem szerepel."
  overload: System.Collections.Specialized.StringCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])
  id: AddRange(System.String[])
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: AddRange(String[])
  nameWithType: StringCollection.AddRange(String[])
  fullName: System.Collections.Specialized.StringCollection.AddRange(String[])
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Másolja át egy karakterlánc-tömbben elemeinek végének a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>elfogadja `null` mint érvényes értéket, és lehetővé teszi a duplikált elemeket.</xref:System.Collections.Specialized.StringCollection>       Ha a <xref:System.Collections.Specialized.StringCollection>az új elemek lehetővé teszi a kapacitás növelése nélkül, ez a módszer egy O (`n`) műveletet, ahol `n` hozzáadandó elemek száma.</xref:System.Collections.Specialized.StringCollection> Ha a kapacitás növelhető meg, hogy megfeleljen az új elemek, ez a módszer válik O (`n` + `m`) műveletet, ahol `n` hozzáadandó elemek száma és `m` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/m-system.collections.spe_4_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/m-system.collections.spe_4_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.collections.spe_4_1.vb)]"
  syntax:
    content: public void AddRange (string[] value);
    parameters:
    - id: value
      type: System.String[]
      description: "Karakterláncok végén hozzáadása a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Maga a tömb nem lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> elemeket tartalmazhat, de <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: StringCollection.Clear()
  fullName: System.Collections.Specialized.StringCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Eltávolítja az összes karakterlánc a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection.Count%2A>van nullára van állítva, és a gyűjtemény elemeinek más objektumokra mutató hivatkozásokat is kiadásakor.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_2_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_2_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_2_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.StringCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: StringCollection.Contains(String)
  fullName: System.Collections.Specialized.StringCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Határozza meg, hogy a megadott karakterlánc megtalálható a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "A Contains módszer létezik-e egy karakterlánc további műveletek végrehajtása előtt ellenőrizheti.       Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg. Karakterláncok összehasonlítására-és nagybetűk.       Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       A .NET-keretrendszer 2.0-s verziótól kezdődően ez a módszer a gyűjtemény-objektumokat használ <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>metódusai `item` annak meghatározásához, hogy létezik-e elem.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> A .NET-keretrendszer korábbi verzióiban ez a döntés használatával történt a <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>módszerek a `item` paraméter a gyűjtemény objektumokon.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/csharp/m-system.collections.spe_28_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/cpp/m-system.collections.spe_28_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_28_1.vb)]"
  syntax:
    content: public bool Contains (string value);
    parameters:
    - id: value
      type: System.String
      description: "A karakterláncban található a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value</code> is found in the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: StringCollection.CopyTo(String[],Int32)
  fullName: System.Collections.Specialized.StringCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Másolja át a teljes <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> karakterláncok, a megadott indextől a céltömb kezdődő egydimenziós tömb értékeket."
  remarks: "A megadott tömb egy kompatibilis típusúnak kell lennie.       Az elemek kerülnek a <xref:System.Array>ugyanabban a sorrendben, amelyben a számbavevő a <xref:System.Collections.Specialized.StringCollection>telepítéseket a <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> </xref:System.Array>       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/csharp/6398d0a9-11dc-4566-8dea-_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/cpp/6398d0a9-11dc-4566-8dea-_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/visualbasic/6398d0a9-11dc-4566-8dea-_1.vb)]"
  syntax:
    content: public void CopyTo (string[] array, int index);
    parameters:
    - id: array
      type: System.String[]
      description: "A karakterláncok egydimenziós tömb, amely a cél átmásolva elem <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. A <xref:System.Array>kell rendelkeznie a nulla alapú indexelést.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét `array` mely másolása megkezdődik."
  overload: System.Collections.Specialized.StringCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>többdimenziós.       – vagy – a forrás elemeinek száma <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> nagyobb, mint a rendelkezésre álló terület <code>index</code> a cél végére <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A forrás típusa <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> nem konvertálható automatikusan a cél típusa <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Count
  id: Count
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Count
  nameWithType: StringCollection.Count
  fullName: System.Collections.Specialized.StringCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Foglalt karakterláncok száma lekérdezi a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Ez a tulajdonság értékének beolvasása során O(1)."
  example:
  - "The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/csharp/p-system.collections.spe_15_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/cpp/p-system.collections.spe_15_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/visualbasic/p-system.collections.spe_15_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Foglalt karakterláncok száma a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StringCollection.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Értéket ad vissza egy <xref href=&quot;System.Collections.Specialized.StringEnumerator&quot;> </xref> keresztül, amely megismétli a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "[A Visual Basic, a C#]       A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége.  Ezért használatával `foreach` ajánlott, az adatbázis közvetlen módosítása az enumerátor helyett.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>  Ennél a pozíciónál <xref:System.Collections.Specialized.StringEnumerator.Current%2A>nincs definiálva.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       <xref:System.Collections.Specialized.StringEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>vagy <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>nevezik.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A></xref:System.Collections.Specialized.StringEnumerator.Current%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.Specialized.StringEnumerator.Current%2A>átállítása.</xref:System.Collections.Specialized.StringEnumerator.Current%2A></xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Ha <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>visszaadott `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>nincs definiálva.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> <xref:System.Collections.Specialized.StringEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> követ</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenített és annak viselkedését nincs definiálva.       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem biztonságos szál eljárást.  Szál biztonsági felsorolásakor biztosításához zárolhatja a teljes számbavételi művelet során a gyűjteményben.  A gyűjteményt, amelyben több szál olvasására vagy írására érhető el, hogy meg kell valósítani a saját szinkronizálási.       Ez a módszer O(1) során."
  syntax:
    content: public System.Collections.Specialized.StringEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Specialized.StringEnumerator
      description: "A <xref href=&quot;System.Collections.Specialized.StringEnumerator&quot;></xref> for the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: StringCollection.IndexOf(String)
  fullName: System.Collections.Specialized.StringCollection.IndexOf(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "A megadott karakterláncot keres, és visszaadja az első olyan belül nulla alapú indexét a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg. Karakterláncok összehasonlítására-és nagybetűk.       Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       A .NET-keretrendszer 2.0-s verziótól kezdődően ez a módszer a gyűjtemény-objektumokat használ <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>metódusai `item` annak meghatározásához, hogy létezik-e elem.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> A .NET-keretrendszer korábbi verzióiban ez a döntés használatával történt a <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>módszerek a `item` paraméter a gyűjtemény objektumokon.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/csharp/m-system.collections.spe_7_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/cpp/m-system.collections.spe_7_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_7_1.vb)]"
  syntax:
    content: public int IndexOf (string value);
    parameters:
    - id: value
      type: System.String
      description: "Keresse meg a karakterláncot. Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "A első előfordulása nulla alapú indexét <code> value </code> a a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, ha található, ha sikertelen, -1."
  overload: System.Collections.Specialized.StringCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: StringCollection.Insert(Int32,String)
  fullName: System.Collections.Specialized.StringCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Szúr be egy karakterláncot a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> a megadott indexnél."
  remarks: "A <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> tartalmazhat ismétlődő karakterláncot       Ha `index` egyenlő <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> végére kerül</xref:System.Collections.Specialized.StringCollection.Count%2A>       A gyűjtemények összefüggő elemek például a listája, a kurzor követő elemek áthelyezése lefelé megfeleljen az új elem. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportosítva gyűjtők, például egy kivonattáblát gyűjteményére vonatkoznak.       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/5308ad74-fbfb-4390-83de-_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/5308ad74-fbfb-4390-83de-_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/5308ad74-fbfb-4390-83de-_1.vb)]"
  syntax:
    content: public void Insert (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `value` csatlakoztatva van."
    - id: value
      type: System.String
      description: "Helyezze be a karakterláncot. Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> nagyobb, mint <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> csak olvasható."
  remarks: "<xref:System.Collections.Specialized.StringCollection>a típus IsReadOnly tulajdonságának valósítja meg, mert a által a <xref:System.Collections.IList?displayProperty=fullName>felületet.</xref:System.Collections.IList?displayProperty=fullName></xref:System.Collections.Specialized.StringCollection>       A csak olvasható gyűjtemény nem teszi lehetővé a hozzáadása, eltávolítása vagy módosítása az elem a gyűjtemény létrehozása után.       A gyűjtemény csak olvasható egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a módosítását a gyűjtemény; Ezért ha az alapul szolgáló gyűjtemény módosításai, a csak olvasható gyűjtemény tükrözi ezeket a módosításokat.       A <xref:System.Collections.Specialized.StringCollection>példány mindig írható.</xref:System.Collections.Specialized.StringCollection>       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
  fullName: System.Collections.Specialized.StringCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Egy érték, amely jelzi, hogy hozzáférést lekérdezi a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> van (a többszálú futtatásra) szinkronizálva."
  remarks: "<xref:System.Collections.Specialized.StringCollection>megvalósítja a IsSynchronized tulajdonság, mert miatt szükséges a <xref:System.Collections.ICollection>felületet.</xref:System.Collections.ICollection></xref:System.Collections.Specialized.StringCollection>       Egy gyűjtemény számbavétele nincs belsőleg egy szál biztonságos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Az alábbi példakód bemutatja, hogyan a gyűjteményhez történő zárolja a <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>a teljes enumerálása során: [!code-cpp [System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/cpp/p-system.collections.spe_23_1.cpp)][!code-cs[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/csharp/p-system.collections.spe_23_1.cs)][!code-vb[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_23_1.vb) ] a tulajdonság értékének beolvasása során O(1).    </xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: StringCollection.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi vagy beállítja az elem a megadott indexnél."
  remarks: "Ez a tulajdonság lehetővé teszi a hozzáférést egy adott elem a gyűjteményben a következő szintaxissal: `myCollection[index]`.       <xref:System.Collections.Specialized.StringCollection>elfogadja `null` mint érvényes értéket, és lehetővé teszi a duplikált elemeket.</xref:System.Collections.Specialized.StringCollection>       A C# nyelv használ a kulcsszó helyett az Item tulajdonság végrehajtási indexelők meghatározására. Visual Basic elem megvalósítja az alapértelmezett tulajdonság, amely indexelési ugyanezt a funkcionalitást biztosítja.       Ez a tulajdonság értékének beolvasása során O(1); a következő tulajdonság beállítása során is O(1)."
  syntax:
    content: public string this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "A bejegyzés beolvasni vagy megadni nulla alapú indexét."
    return:
      type: System.String
      description: "Az elem a megadott indexnél."
  overload: System.Collections.Specialized.StringCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> egyenlőnek vagy annál nagyobb <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: StringCollection.Remove(String)
  fullName: System.Collections.Specialized.StringCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Egy adott karakterláncot a első előfordulása eltávolítja a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "A <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> tartalmazhat ismétlődő karakterláncot Csak a első előfordulása a rendszer eltávolítja. A megadott karakterlánc összes előfordulásának eltávolításához használja `RemoveAt(IndexOf(value))` ismételten közben <xref:System.Collections.Specialized.StringCollection.IndexOf%2A>nem-1 érték visszaadása.</xref:System.Collections.Specialized.StringCollection.IndexOf%2A>       Ha a <xref:System.Collections.Specialized.StringCollection>a megadott objektum nem tartalmaz a <xref:System.Collections.Specialized.StringCollection>változatlan marad.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Nincs kivétel történt.       A szomszédos elemeket, listák, például a gyűjtemények az elemeket, kövesse az eltávolított elem feljebb a vacated helyszíni elfoglalt. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportosítva gyűjtők, például egy kivonattáblát gyűjteményére vonatkoznak.       Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg. Karakterláncok összehasonlítására-és nagybetűk.       Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_20_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_20_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_20_1.vb)]"
  syntax:
    content: public void Remove (string value);
    parameters:
    - id: value
      type: System.String
      description: "A karakterláncot. Távolítsa el a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: StringCollection.RemoveAt(Int32)
  fullName: System.Collections.Specialized.StringCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Eltávolítja a megadott indexpozíciónál a karakterlánc a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "A szomszédos elemeket, listák, például a gyűjtemények az elemeket, kövesse az eltávolított elem feljebb a vacated helyszíni elfoglalt. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportosítva gyűjtők, például egy kivonattáblát gyűjteményére vonatkoznak.       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_16_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_16_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_16_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A karakterláncot. Távolítsa el a nulla alapú indexét."
  overload: System.Collections.Specialized.StringCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> egyenlőnek vagy annál nagyobb <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
  fullName: System.Collections.Specialized.StringCollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása lekérdezi a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Származtatott osztályok is adja meg a saját szinkronizált verzióját a <xref:System.Collections.Specialized.StringCollection>a SyncRoot tulajdonság használatával.</xref:System.Collections.Specialized.StringCollection> A szinkronizálási kódot kell műveleteket a SyncRoot a <xref:System.Collections.Specialized.StringCollection>, nem közvetlenül a <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> a</xref:System.Collections.Specialized.StringCollection> Ez biztosítja, hogy a gyűjtemények más objektumok származó megfelelő működését. Pontosabban, tart fenn a megfelelő szinkronizálási más szállal, amely előfordulhat, hogy egyidejűleg módosítása a <xref:System.Collections.Specialized.StringCollection>objektum.</xref:System.Collections.Specialized.StringCollection>       Egy gyűjtemény számbavétele nincs belsőleg egy szál biztonságos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Az alábbi példakód bemutatja, hogyan zárolni az adatgyűjtést, a SyncRoot a teljes enumerálása során: [!code-cpp [System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/cpp/p-system.collections.spe_3_1.cpp)][!code-cs[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/csharp/p-system.collections.spe_3_1.cs)][!code-vb[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_3_1.vb) ] a tulajdonság értékének beolvasása során O(1).    "
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Másolja át a teljes <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> egy kompatibilis egydimenziós <xref:System.Array>, a megadott index a céltömb induló.</xref:System.Array>"
  remarks: "A megadott tömb egy kompatibilis típusúnak kell lennie.       Ez a módszer <xref:System.Array.Copy%2A?displayProperty=fullName>elemeinek másolásához.</xref:System.Array.Copy%2A?displayProperty=fullName>       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Az egydimenziós <xref:System.Array>átmásolva elem, amely a cél <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Array> A <xref:System.Array>kell rendelkeznie a nulla alapú indexelést.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét `array` mely másolása megkezdődik."
  overload: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>többdimenziós.       – vagy – a forrás elemeinek száma <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> nagyobb, mint a rendelkezésre álló terület <code>index</code> a cél végére <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A forrás típusa <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> nem konvertálható automatikusan a cél típusa <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Értéket ad vissza egy <xref:System.Collections.IEnumerator>keresztül, amely megismétli a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[A Visual Basic, a C#]       A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége.  Ezért használatával `foreach` ajánlott, az adatbázis közvetlen módosítása az enumerátor helyett.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.IEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.IEnumerator.Reset%2A> At ez elhelyezése, hívja <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.IEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.IEnumerator.Current%2A>átállítása.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Ha <xref:System.Collections.IEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.IEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.IEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.IEnumerator.MoveNext%2A>visszaadott `false`, hívó <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> követ</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenné válik, és <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>egy <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> jelez</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> , vagy hívja a következő Ha a gyűjtemény módosítás közötti <xref:System.Collections.IEnumerator.MoveNext%2A>és <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>adja vissza az elem, értékűre van állítva, akkor is, ha a számláló már érvénytelenné válik.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem biztonságos szál eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Ez a módszer O(1) során."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: StringCollection.System.Collections.IList.Add(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Objektum hozzáadása az végén a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>elfogadja `null` mint érvényes értéket, és lehetővé teszi a duplikált elemeket.</xref:System.Collections.Specialized.StringCollection>       Ha <xref:System.Collections.Specialized.StringCollection.Count%2A>a kapacitás, a kapacitása már megegyezik a <xref:System.Collections.Specialized.StringCollection>automatikusan újra-hozzárendelése a belső tömbnek növekszik és a meglévő elemeket történő átmásolása az új tömb az új elem hozzáadása előtt.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Ha <xref:System.Collections.Specialized.StringCollection.Count%2A>kisebb, mint a kapacitás, ez a módszer egy O(1) művelet.</xref:System.Collections.Specialized.StringCollection.Count%2A> Ha a kapacitás növelhető meg, hogy megfeleljen az új elem, ez a módszer válik O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>végére lehet hozzáadni a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> index, ahol a <code> value </code> hozzá lett adva."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> csak olvasható.       – vagy – a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: StringCollection.System.Collections.IList.Contains(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Meghatározza, hogy egy elem található a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg.       Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       A .NET-keretrendszer 2.0-s verziótól kezdődően ez a módszer a gyűjtemény-objektumokat használ <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>metódusai `item` annak meghatározásához, hogy létezik-e elem.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> A .NET-keretrendszer korábbi verzióiban ez a döntés használatával történt a <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>módszerek a `item` paraméter a gyűjtemény objektumokon.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>keresik a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value</code> is found in the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StringCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "A megadott keres <xref:System.Object>és visszaadja az első olyan belül a teljes nulla alapú indexét <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object>"
  remarks: "A <xref:System.Collections.Specialized.StringCollection>előre az első elem kezdő és záró dátum az utolsó elem keres.</xref:System.Collections.Specialized.StringCollection>       Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg.       Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       A .NET-keretrendszer 2.0-s verziótól kezdődően ez a módszer a gyűjtemény-objektumokat használ <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>metódusai `item` annak meghatározásához, hogy létezik-e elem.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> A .NET-keretrendszer korábbi verzióiban ez a döntés használatával történt a <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>módszerek a `item` paraméter a gyűjtemény objektumokon.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>keresik a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "A első előfordulása nulla alapú indexét <code> value </code> belül a teljes <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, ha található, ha sikertelen, -1."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StringCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Az elem beszúrása a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> a megadott indexnél."
  remarks: "Ha <xref:System.Collections.Specialized.StringCollection.Count%2A>a kapacitás, a kapacitása már megegyezik a <xref:System.Collections.Specialized.StringCollection>automatikusan újra-hozzárendelése a belső tömbnek növekszik és a meglévő elemeket történő átmásolása az új tömb az új elem hozzáadása előtt.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Ha `index` egyenlő <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> végére kerül</xref:System.Collections.Specialized.StringCollection.Count%2A>       A gyűjtemények összefüggő elemek például a listája, a kurzor követő elemek áthelyezése lefelé megfeleljen az új elem. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportosítva gyűjtők, például egy kivonattáblát gyűjteményére vonatkoznak.       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `value` kell beilleszteni."
    - id: value
      type: System.Object
      description: "A <xref:System.Object>lehet beszúrni.</xref:System.Object> Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> nagyobb, mint <xref:System.Collections.Specialized.StringCollection.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> csak olvasható.       – vagy – a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objektumnak egy rögzített méretű."
  remarks: "Rögzített méretű gyűjtemény nem teszi lehetővé hozzáadását és eltávolítását, az elem után a gyűjtemény létrejött, de lehetővé teszi, hogy a meglévő elemeket módosítása.       A gyűjtemény rögzített méretű egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a hozzáadása és eltávolítása elemek; Ezért ha módosítás történik az alapul szolgáló gyűjtemény, hozzáadását és eltávolítását, az elem, beleértve a rögzített méretű gyűjtemény tükrözi ezeket a módosításokat.       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objektum rendelkezik egy rögzített méretű; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objektum csak olvasható."
  remarks: "A csak olvasható gyűjtemény nem teszi lehetővé a hozzáadása, eltávolítása vagy módosítása az elem a gyűjtemény létrehozása után.       A gyűjtemény csak olvasható egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a módosítását a gyűjtemény; Ezért ha az alapul szolgáló gyűjtemény módosításai, a csak olvasható gyűjtemény tükrözi ezeket a módosításokat.       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> objektum csak olvasható; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: StringCollection.System.Collections.IList.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi vagy beállítja az elem a megadott indexnél."
  remarks: "Thismethod lehetővé teszi a hozzáférést egy adott elem a gyűjteményben a következő szintaxissal: `myCollection[index]`.       A C# nyelv használja a [ez](~/add/includes/ajax-current-ext-md.md) kulcsszó helyett a IList.Item tulajdonság végrehajtási indexelők meghatározásához. Visual Basic IList.Item megvalósítja az alapértelmezett tulajdonság, amely indexelési ugyanezt a funkcionalitást biztosítja.       <xref:System.Collections.Specialized.StringCollection>elfogadja `null` mint érvényes értéket, és lehetővé teszi a duplikált elemeket.</xref:System.Collections.Specialized.StringCollection>       Ez a tulajdonság értékének beolvasása során O(1); a következő tulajdonság beállítása során is O(1)."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Az elem lekérése vagy beállítása nulla alapú indexét."
    return:
      type: System.Object
      description: "Az elem a megadott indexnél."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> egyenlőnek vagy annál nagyobb <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: StringCollection.System.Collections.IList.Remove(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Eltávolít egy adott objektum első előfordulásának a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Ha a <xref:System.Collections.Specialized.StringCollection>a megadott objektum nem tartalmaz a <xref:System.Collections.Specialized.StringCollection>változatlan marad.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Nincs kivétel történt.       A szomszédos elemeket, listák, például a gyűjtemények az elemeket, kövesse az eltávolított elem feljebb a vacated helyszíni elfoglalt. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportosítva gyűjtők, például egy kivonattáblát gyűjteményére vonatkoznak.       Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg.       Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>eltávolítása a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> csak olvasható.       – vagy – a <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.Specialized.StringCollection.#ctor
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: StringCollection()
  nameWithType: StringCollection.StringCollection()
  fullName: System.Collections.Specialized.StringCollection.StringCollection()
- uid: System.Collections.Specialized.StringCollection.Add(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Add(String)
  nameWithType: StringCollection.Add(String)
  fullName: System.Collections.Specialized.StringCollection.Add(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: AddRange(String[])
  nameWithType: StringCollection.AddRange(String[])
  fullName: System.Collections.Specialized.StringCollection.AddRange(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.StringCollection.Clear
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Clear()
  nameWithType: StringCollection.Clear()
  fullName: System.Collections.Specialized.StringCollection.Clear()
- uid: System.Collections.Specialized.StringCollection.Contains(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Contains(String)
  nameWithType: StringCollection.Contains(String)
  fullName: System.Collections.Specialized.StringCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: StringCollection.CopyTo(String[],Int32)
  fullName: System.Collections.Specialized.StringCollection.CopyTo(String[],Int32)
- uid: System.Collections.Specialized.StringCollection.Count
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Count
  nameWithType: StringCollection.Count
  fullName: System.Collections.Specialized.StringCollection.Count
- uid: System.Collections.Specialized.StringCollection.GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: StringCollection.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.GetEnumerator()
- uid: System.Collections.Specialized.StringEnumerator
  parent: System.Collections.Specialized
  isExternal: false
  name: StringEnumerator
  nameWithType: StringEnumerator
  fullName: System.Collections.Specialized.StringEnumerator
- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: StringCollection.IndexOf(String)
  fullName: System.Collections.Specialized.StringCollection.IndexOf(String)
- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: StringCollection.Insert(Int32,String)
  fullName: System.Collections.Specialized.StringCollection.Insert(Int32,String)
- uid: System.Collections.Specialized.StringCollection.IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.IsSynchronized
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
  fullName: System.Collections.Specialized.StringCollection.IsSynchronized
- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: StringCollection.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.Item(Int32)
- uid: System.Collections.Specialized.StringCollection.Remove(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Remove(String)
  nameWithType: StringCollection.Remove(String)
  fullName: System.Collections.Specialized.StringCollection.Remove(String)
- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: StringCollection.RemoveAt(Int32)
  fullName: System.Collections.Specialized.StringCollection.RemoveAt(Int32)
- uid: System.Collections.Specialized.StringCollection.SyncRoot
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
  fullName: System.Collections.Specialized.StringCollection.SyncRoot
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: StringCollection.System.Collections.IList.Add(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Add(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: StringCollection.System.Collections.IList.Contains(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StringCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StringCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsFixedSize
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: StringCollection.System.Collections.IList.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Item(Int32)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: StringCollection.System.Collections.IList.Remove(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove(Object)
- uid: System.Collections.Specialized.StringCollection.#ctor*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection.StringCollection
- uid: System.Collections.Specialized.StringCollection.Add*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Add
  nameWithType: StringCollection.Add
- uid: System.Collections.Specialized.StringCollection.AddRange*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: AddRange
  nameWithType: StringCollection.AddRange
- uid: System.Collections.Specialized.StringCollection.Clear*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Clear
  nameWithType: StringCollection.Clear
- uid: System.Collections.Specialized.StringCollection.Contains*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Contains
  nameWithType: StringCollection.Contains
- uid: System.Collections.Specialized.StringCollection.CopyTo*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: CopyTo
  nameWithType: StringCollection.CopyTo
- uid: System.Collections.Specialized.StringCollection.Count*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Count
  nameWithType: StringCollection.Count
- uid: System.Collections.Specialized.StringCollection.GetEnumerator*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: StringCollection.GetEnumerator
- uid: System.Collections.Specialized.StringCollection.IndexOf*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IndexOf
  nameWithType: StringCollection.IndexOf
- uid: System.Collections.Specialized.StringCollection.Insert*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Insert
  nameWithType: StringCollection.Insert
- uid: System.Collections.Specialized.StringCollection.IsReadOnly*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.IsSynchronized*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
- uid: System.Collections.Specialized.StringCollection.Item*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Item
  nameWithType: StringCollection.Item
- uid: System.Collections.Specialized.StringCollection.Remove*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Remove
  nameWithType: StringCollection.Remove
- uid: System.Collections.Specialized.StringCollection.RemoveAt*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: RemoveAt
  nameWithType: StringCollection.RemoveAt
- uid: System.Collections.Specialized.StringCollection.SyncRoot*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: StringCollection.System.Collections.IList.Add
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: StringCollection.System.Collections.IList.Contains
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: StringCollection.System.Collections.IList.IndexOf
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: StringCollection.System.Collections.IList.Insert
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: StringCollection.System.Collections.IList.Item
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: StringCollection.System.Collections.IList.Remove
