### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.ApplicationManager
  id: ApplicationManager
  children:
  - System.Web.Hosting.ApplicationManager.Close
  - System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  - System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  - System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  - System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  - System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  - System.Web.Hosting.ApplicationManager.GetApplicationManager
  - System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  - System.Web.Hosting.ApplicationManager.GetRunningApplications
  - System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  - System.Web.Hosting.ApplicationManager.IsIdle
  - System.Web.Hosting.ApplicationManager.Open
  - System.Web.Hosting.ApplicationManager.ShutdownAll
  - System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  - System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  langs:
  - csharp
  name: ApplicationManager
  nameWithType: ApplicationManager
  fullName: System.Web.Hosting.ApplicationManager
  type: Class
  summary: "ASP.NET alkalmazás tartományok kezelése az ASP.NET-alkalmazást."
  remarks: "A ApplicationManager objektum életciklusának kezelését az objektumok az üzemeltetési környezetben egy ASP.NET-alkalmazás biztosítja. Felelős: - aktiválás és az ASP.NET-alkalmazások inicializálása.      -Az alkalmazás kezelése az alkalmazás élettartamának és objektumok élettartamát regisztrálja.      – Az ilyen objektumok az üzemeltetési környezetben használják az ASP.NET alkalmazás kérelmek feldolgozásához.      -Listájával, amely egy adott időpontban a üzemeltetési folyamatban futó alkalmazásokat."
  syntax:
    content: 'public sealed class ApplicationManager : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.Close
  id: Close
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: Close()
  nameWithType: ApplicationManager.Close()
  fullName: System.Web.Hosting.ApplicationManager.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Leállítja az összes alkalmazástartományban."
  remarks: "Ha a Close metódus hívásakor a hivatkozások száma az alkalmazások, az alkalmazás-kezelővel 0-ra csökkenti, a Close metódus meghívja a <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>metódus.</xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  id: CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(IApplicationHost,Type)
  nameWithType: ApplicationManager.CreateObject(IApplicationHost,Type)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(IApplicationHost,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "A megadott tartomány típusától függően egy objektumot hoz létre."
  remarks: "CreateObject megjelent a .NET-keretrendszer 3.5-ös verziója.  További információkért lásd: [verziója és a függőségek](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);
    parameters:
    - id: appHost
      type: System.Web.Hosting.IApplicationHost
      description: "Egy <xref href=&quot;System.Web.Hosting.IApplicationHost&quot;> </xref> objektum."
    - id: type
      type: System.Type
      description: "A létrehozandó objektumnak típusa."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "A megadott típusú új objektumot <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az alkalmazás fizikai elérési út nem létezik."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appHost</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  id: CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(String,Type,String,String,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Létrehoz egy objektum a megadott tartomány típusát, virtuális és fizikai elérési utat és egy logikai érték, ha már létezik a megadott típusú objektum, amely azt jelzi, hogy hiba viselkedés alapján."
  remarks: "A CreateObject módszert létrehozni és regisztrálni az objektumok az alkalmazásban. Az egyes típusok csak egy objektum hozhatók létre. Ha több, azonos típusú objektumok létrehozásához szükséges, meg kell valósítani egy objektum gyári. További információkért lásd: a Kódpélda ebben a témakörben.       Azonosít egy egyedi azonosítót, az alkalmazások saját alkalmazástartomány futtatja. A CreateObject metódus objektumot hoz létre a megadott típusú alkalmazástartományt az alkalmazás szerepel a `appID` paraméter. Ha egy alkalmazástartomány a megadott alkalmazás nem létezik, egy jön létre, az objektum létrehozása előtt.       A `failIfExists` paraméter CreateObject metódus viselkedését vezérlő, ha a megadott típusú objektum már létezik az alkalmazásban. Ha `failIfExists` van `true`, a CreateObject metódus jelez egy <xref:System.InvalidOperationException>kivétel.</xref:System.InvalidOperationException>       Ha `failIfExists` van `false`, a CreateObject metódus visszaadja a megadott típus a meglévő regisztrált objektumot.       A CreateObject metódushívások további typedValue `throwOnError` paraméterrel `throwOnError` beállítása `false`."
  example:
  - "The following code example is an implementation of the object-factory design pattern for registered objects. Using the factory pattern enables you to register multiple instances of an object. The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.  \n  \n [!code-cs[System.Web.Hosting.ApplicationManager#1](~/add/codesnippet/csharp/37d6d853-1462-44e9-b1c3-_1.cs)]\n [!code-vb[System.Web.Hosting.ApplicationManager#1](~/add/codesnippet/visualbasic/37d6d853-1462-44e9-b1c3-_1.vb)]"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);
    parameters:
    - id: appId
      type: System.String
      description: "Az objektumot birtokló alkalmazás egyedi azonosítója."
    - id: type
      type: System.Type
      description: "A létrehozandó objektumnak típusa."
    - id: virtualPath
      type: System.String
      description: "Az alkalmazás virtuális elérési útja."
    - id: physicalPath
      type: System.String
      description: "Az alkalmazás fizikai elérési útja."
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott típusú objektum kivételt jelenleg regisztrálva van; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> vissza a megadott típus a meglévő regisztrált objektumot."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "A megadott új objektum <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>physicalPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>  \n  \n \\- or -  \n  \n <code>physicalPath</code> is not a valid application path.  \n  \n \\- or -  \n  \n <code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appID</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>failIfExists</code>van <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> és a megadott típusú objektum már be van jegyezve."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  id: CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: CreateObject(String,Type,String,String,Boolean,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Létrehoz egy objektum a megadott tartomány típusa, a virtuális és fizikai elérési útja, a logikai értéket a megadott típusú objektum már létezik, valamint hogy üzemeltetési inicializálási hiba kivételek jelző logikai érték, amely azt jelzi, hogy hiba viselkedés alapján."
  remarks: "Ez túlterhelése a <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>módszer lehetővé teszi a `throwOnError` paraméter, amely lehetővé teszi szabályozhatja, hogy üzemeltetési inicializálási kivételek.</xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> A paraméterekkel nem rendelkező a <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>módszer, amely nem biztosít `throwOnError` a túlterhelési hívja a paraméter `false`.</xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);
    parameters:
    - id: appId
      type: System.String
      description: "Az objektumot birtokló alkalmazás egyedi azonosítója."
    - id: type
      type: System.Type
      description: "A létrehozandó objektumnak típusa."
    - id: virtualPath
      type: System.String
      description: "Az alkalmazás virtuális elérési útja."
    - id: physicalPath
      type: System.String
      description: "Az alkalmazás fizikai elérési útja."
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott típusú objektum kivételt jelenleg regisztrálva van; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> vissza a megadott típus a meglévő regisztrált objektumot."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a throw kivételek üzemeltetéséhez inicializálási hibák; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> nem inicializálási kivételek üzemeltető throw való."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "A megadott új objektum <code> type </code>."
  overload: System.Web.Hosting.ApplicationManager.CreateObject*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>physicalPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>  \n  \n \\- or -  \n  \n <code>physicalPath</code> is not a valid application path.  \n  \n \\- or -  \n  \n <code>type</code> does not implement the <xref href=\"System.Web.Hosting.IRegisteredObject\"></xref> interface."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appID</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>failIfExists</code>van <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> és a megadott típusú objektum már be van jegyezve."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  id: GetAppDomain(System.String)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetAppDomain(String)
  nameWithType: ApplicationManager.GetAppDomain(String)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Lekérdezi a megadott alkalmazás alkalmazástartományt."
  syntax:
    content: public AppDomain GetAppDomain (string appId);
    parameters:
    - id: appId
      type: System.String
      description: "Az alkalmazás egyedi azonosítója."
    return:
      type: System.AppDomain
      description: "Az alkalmazás alkalmazástartományt."
  overload: System.Web.Hosting.ApplicationManager.GetAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  id: GetAppDomain(System.Web.Hosting.IApplicationHost)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetAppDomain(IApplicationHost)
  nameWithType: ApplicationManager.GetAppDomain(IApplicationHost)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(IApplicationHost)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Lekérdezi a megadott állomás használó alkalmazások alkalmazástartományt."
  syntax:
    content: public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);
    parameters:
    - id: appHost
      type: System.Web.Hosting.IApplicationHost
      description: "Az alkalmazástartomány az beszerzése a gazdagépet."
    return:
      type: System.AppDomain
      description: "Az alkalmazás alkalmazástartományt."
  overload: System.Web.Hosting.ApplicationManager.GetAppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager
  id: GetApplicationManager
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetApplicationManager()
  nameWithType: ApplicationManager.GetApplicationManager()
  fullName: System.Web.Hosting.ApplicationManager.GetApplicationManager()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Az egyetlen példányát adja vissza a <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> az ASP.NET gazdafolyamat rendelt objektumot."
  remarks: "Csak egy példányát a <xref:System.Web.Hosting.ApplicationManager>objektum létrehozása egy ASP.NET-állomás folyamat a az alapértelmezett alkalmazástartomány.</xref:System.Web.Hosting.ApplicationManager> Ha egy példányát a <xref:System.Web.Hosting.ApplicationManager>osztály nem érhető el, a GetApplicationManager metódus először létrehoz egy példányát a <xref:System.Web.Hosting.ApplicationManager>osztályhoz, és ezután az újonnan létrehozott objektum beállítása/beolvasása.</xref:System.Web.Hosting.ApplicationManager> </xref:System.Web.Hosting.ApplicationManager> Ha egy példányát a <xref:System.Web.Hosting.ApplicationManager>osztály korábban létrejött, a GetApplicationManager metódus a meglévő objektum beállítása/beolvasása.</xref:System.Web.Hosting.ApplicationManager>"
  example:
  - "The following code example uses the GetApplicationManager method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.  \n  \n [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/visualbasic/m-system.web.hosting.app_0_1.aspx)]\n [!code-cs[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/csharp/m-system.web.hosting.app_0_1.aspx)]"
  syntax:
    content: public static System.Web.Hosting.ApplicationManager GetApplicationManager ();
    parameters: []
    return:
      type: System.Web.Hosting.ApplicationManager
      description: "Az egyetlen példány futhat a <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> futtató ASP.NET gazdafolyamat rendelt objektumot."
  overload: System.Web.Hosting.ApplicationManager.GetApplicationManager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  id: GetObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetObject(String,Type)
  nameWithType: ApplicationManager.GetObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.GetObject(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "A megadott típusú regisztrált objektumot ad vissza a megadott alkalmazás."
  syntax:
    content: public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);
    parameters:
    - id: appId
      type: System.String
      description: "Az objektumot birtokló alkalmazás egyedi azonosítója."
    - id: type
      type: System.Type
      description: "Vissza az objektum típusa."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "A megadott típusú; bejegyzett objektum vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a típus nem lett regisztrálva keresztül hívása a <xref:System.Web.Hosting.ApplicationManager.CreateObject*>metódus.</xref:System.Web.Hosting.ApplicationManager.CreateObject*>"
  overload: System.Web.Hosting.ApplicationManager.GetObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       —or—       <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications
  id: GetRunningApplications
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: GetRunningApplications()
  nameWithType: ApplicationManager.GetRunningApplications()
  fullName: System.Web.Hosting.ApplicationManager.GetRunningApplications()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Adja vissza egy pillanatképet a futó alkalmazások."
  remarks: ''
  example:
  - "The following code example uses the GetRunningApplications method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.  \n  \n [!code-vb[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/visualbasic/m-system.web.hosting.app_1_1.aspx)]\n [!code-cs[System.Web.Hosting.ApplicationInfo#1](~/add/codesnippet/csharp/m-system.web.hosting.app_1_1.aspx)]"
  syntax:
    content: public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();
    parameters: []
    return:
      type: System.Web.Hosting.ApplicationInfo[]
      description: "A tömb <xref href=&quot;System.Web.Hosting.ApplicationInfo&quot;> </xref> objektumok által kezelt alkalmazásokban információkat tartalmazó <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> példány."
  overload: System.Web.Hosting.ApplicationManager.GetRunningApplications*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ApplicationManager.InitializeLifetimeService()
  fullName: System.Web.Hosting.ApplicationManager.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Az alkalmazástartomány biztosít egy végtelen élettartamát a címbérlet letiltásával létrehozás alatt áll."
  remarks: "Ezt a módszert felülbírálja a <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>metódus az alap osztályhoz.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Mindig adja vissza `null` ezzel megakadályozza, hogy az a címbérlet jöjjön létre, amely korlátozza az alkalmazástartomány élettartamát."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.ApplicationManager.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.IsIdle
  id: IsIdle
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: IsIdle()
  nameWithType: ApplicationManager.IsIdle()
  fullName: System.Web.Hosting.ApplicationManager.IsIdle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Visszaad egy értéket, amely azt jelzi, hogy minden, a folyamat által üzemeltetett alkalmazások üresjárati, és nem dolgoz fel kérelmet."
  remarks: "A IsIdle metódus visszaadja `true` üresjárati minden, a folyamat által üzemeltetett alkalmazások esetén."
  syntax:
    content: public bool IsIdle ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a folyamatban szereplő összes alkalmazás üresjárati; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.ApplicationManager.IsIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.Open
  id: Open
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: Open()
  nameWithType: ApplicationManager.Open()
  fullName: System.Web.Hosting.ApplicationManager.Open()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "A felhasználó üzenettörzstáblában manager alkalmazáspéldány hajt végre egy szálbiztos növekmény."
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll
  id: ShutdownAll
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: ShutdownAll()
  nameWithType: ApplicationManager.ShutdownAll()
  fullName: System.Web.Hosting.ApplicationManager.ShutdownAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Eltávolítja az összes alkalmazás-erőforrásokat."
  remarks: "A metódus hívása a ShutdownAll megegyezik hívása a <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>metódus által kezelt összes alkalmazás tartományokban <xref:System.Web.Hosting.ApplicationManager>azonban a ShutdownAll metódus nem hívható a kezelt alkalmazás tartományokon kívüli; példányhoz.</xref:System.Web.Hosting.ApplicationManager> </xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>"
  syntax:
    content: public void ShutdownAll ();
    parameters: []
  overload: System.Web.Hosting.ApplicationManager.ShutdownAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  id: ShutdownApplication(System.String)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: ShutdownApplication(String)
  nameWithType: ApplicationManager.ShutdownApplication(String)
  fullName: System.Web.Hosting.ApplicationManager.ShutdownApplication(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Eltávolítja a megadott alkalmazás."
  remarks: "A metódus hívása a ShutdownApplication megegyezik hívása a <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>módszer egy adott alkalmazás tartomány; azonban a ShutdownApplication metódus hívása kívül felügyelt alkalmazás tartományokból.</xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=fullName>"
  syntax:
    content: public void ShutdownApplication (string appId);
    parameters:
    - id: appId
      type: System.String
      description: "Az alkalmazás memóriából való egyedi azonosítója."
  overload: System.Web.Hosting.ApplicationManager.ShutdownApplication*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  id: StopObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  langs:
  - csharp
  name: StopObject(String,Type)
  nameWithType: ApplicationManager.StopObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.StopObject(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "A megadott objektum eltávolítása az alkalmazásban regisztrált objektumok listáját. Ha az objektum el kell távolítani az utolsó megmaradt objektum regisztrált egy alkalmazást az objektumok listájában, az alkalmazás nincs betöltve."
  syntax:
    content: public void StopObject (string appId, Type type);
    parameters:
    - id: appId
      type: System.String
      description: "Az objektumot birtokló alkalmazás egyedi azonosítója."
    - id: type
      type: System.Type
      description: "A memóriából való objektum típusa."
  overload: System.Web.Hosting.ApplicationManager.StopObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appId</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>type</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Hosting.ApplicationManager.Close
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Close()
  nameWithType: ApplicationManager.Close()
  fullName: System.Web.Hosting.ApplicationManager.Close()
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(IApplicationHost,Type)
  nameWithType: ApplicationManager.CreateObject(IApplicationHost,Type)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(IApplicationHost,Type)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Web.Hosting.IApplicationHost
  parent: System.Web.Hosting
  isExternal: false
  name: IApplicationHost
  nameWithType: IApplicationHost
  fullName: System.Web.Hosting.IApplicationHost
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(String,Type,String,String,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject(String,Type,String,String,Boolean,Boolean)
  nameWithType: ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
  fullName: System.Web.Hosting.ApplicationManager.CreateObject(String,Type,String,String,Boolean,Boolean)
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain(String)
  nameWithType: ApplicationManager.GetAppDomain(String)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(String)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain(IApplicationHost)
  nameWithType: ApplicationManager.GetAppDomain(IApplicationHost)
  fullName: System.Web.Hosting.ApplicationManager.GetAppDomain(IApplicationHost)
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetApplicationManager()
  nameWithType: ApplicationManager.GetApplicationManager()
  fullName: System.Web.Hosting.ApplicationManager.GetApplicationManager()
- uid: System.Web.Hosting.ApplicationManager
  parent: System.Web.Hosting
  isExternal: false
  name: ApplicationManager
  nameWithType: ApplicationManager
  fullName: System.Web.Hosting.ApplicationManager
- uid: System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetObject(String,Type)
  nameWithType: ApplicationManager.GetObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.GetObject(String,Type)
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetRunningApplications()
  nameWithType: ApplicationManager.GetRunningApplications()
  fullName: System.Web.Hosting.ApplicationManager.GetRunningApplications()
- uid: System.Web.Hosting.ApplicationInfo[]
  parent: System.Web.Hosting
  isExternal: false
  name: ApplicationInfo
  nameWithType: ApplicationInfo
  fullName: System.Web.Hosting.ApplicationInfo[]
  spec.csharp:
  - uid: System.Web.Hosting.ApplicationInfo
    name: ApplicationInfo
    nameWithType: ApplicationInfo
    fullName: ApplicationInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ApplicationManager.InitializeLifetimeService()
  fullName: System.Web.Hosting.ApplicationManager.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.ApplicationManager.IsIdle
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: IsIdle()
  nameWithType: ApplicationManager.IsIdle()
  fullName: System.Web.Hosting.ApplicationManager.IsIdle()
- uid: System.Web.Hosting.ApplicationManager.Open
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Open()
  nameWithType: ApplicationManager.Open()
  fullName: System.Web.Hosting.ApplicationManager.Open()
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownAll()
  nameWithType: ApplicationManager.ShutdownAll()
  fullName: System.Web.Hosting.ApplicationManager.ShutdownAll()
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownApplication(String)
  nameWithType: ApplicationManager.ShutdownApplication(String)
  fullName: System.Web.Hosting.ApplicationManager.ShutdownApplication(String)
- uid: System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: StopObject(String,Type)
  nameWithType: ApplicationManager.StopObject(String,Type)
  fullName: System.Web.Hosting.ApplicationManager.StopObject(String,Type)
- uid: System.Web.Hosting.ApplicationManager.Close*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Close
  nameWithType: ApplicationManager.Close
- uid: System.Web.Hosting.ApplicationManager.CreateObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: CreateObject
  nameWithType: ApplicationManager.CreateObject
- uid: System.Web.Hosting.ApplicationManager.GetAppDomain*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetAppDomain
  nameWithType: ApplicationManager.GetAppDomain
- uid: System.Web.Hosting.ApplicationManager.GetApplicationManager*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetApplicationManager
  nameWithType: ApplicationManager.GetApplicationManager
- uid: System.Web.Hosting.ApplicationManager.GetObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetObject
  nameWithType: ApplicationManager.GetObject
- uid: System.Web.Hosting.ApplicationManager.GetRunningApplications*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: GetRunningApplications
  nameWithType: ApplicationManager.GetRunningApplications
- uid: System.Web.Hosting.ApplicationManager.InitializeLifetimeService*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ApplicationManager.InitializeLifetimeService
- uid: System.Web.Hosting.ApplicationManager.IsIdle*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: IsIdle
  nameWithType: ApplicationManager.IsIdle
- uid: System.Web.Hosting.ApplicationManager.Open*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: Open
  nameWithType: ApplicationManager.Open
- uid: System.Web.Hosting.ApplicationManager.ShutdownAll*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownAll
  nameWithType: ApplicationManager.ShutdownAll
- uid: System.Web.Hosting.ApplicationManager.ShutdownApplication*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: ShutdownApplication
  nameWithType: ApplicationManager.ShutdownApplication
- uid: System.Web.Hosting.ApplicationManager.StopObject*
  parent: System.Web.Hosting.ApplicationManager
  isExternal: false
  name: StopObject
  nameWithType: ApplicationManager.StopObject
