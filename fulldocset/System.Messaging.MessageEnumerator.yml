### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageEnumerator
  id: MessageEnumerator
  children:
  - System.Messaging.MessageEnumerator.Close
  - System.Messaging.MessageEnumerator.Current
  - System.Messaging.MessageEnumerator.CursorHandle
  - System.Messaging.MessageEnumerator.Dispose
  - System.Messaging.MessageEnumerator.Dispose(System.Boolean)
  - System.Messaging.MessageEnumerator.MoveNext
  - System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)
  - System.Messaging.MessageEnumerator.RemoveCurrent
  - System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)
  - System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)
  - System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  - System.Messaging.MessageEnumerator.Reset
  - System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: MessageEnumerator
  nameWithType: MessageEnumerator
  fullName: System.Messaging.MessageEnumerator
  type: Class
  summary: "A csak előrefelé bejárható kurzor enumerálása, egy üzenet-várólista üzeneteinek biztosít."
  remarks: "A várólistában lévő üzenetek dinamikus interakcióba MessageEnumerator használja. Keresztül elérhető módszerek a <xref:System.Messaging.MessageQueue>osztály adhat vissza vagy egy, az üzenetek a várólistát, vagy olyan tömb, amely időben, a várólista megadott azonnali - pillanatkép - tartalmazza a megadott metódus lett meghívva dinamikus listára mutató MessageEnumerator.</xref:System.Messaging.MessageQueue>       Pillanatnyi, eltérően enumerátor lehetővé teszi a gyűjtemény módosítható. Egy MessageEnumerator üzenetek eltávolítása a sorból, és a változás azonnal megjelennek a várólistát.       Enumerátor nem távolítja el az üzenetet az üzenetsorból amikor lekérdezi a várólista. Az jelenik meg a jelenlegi kurzor pozíciójával kapcsolatos információkat ad vissza, de hagyja az üzenetet a várólistában.       Egy MessageEnumerator kurzor, a dinamikus listáját vezetője inicializálva. A lista sorrendje megegyezik a várólistában lévő üzenetek sorrendjének üzenet prioritása alapján. A várólista első üzenetébe a kurzor a <xref:System.Messaging.MessageEnumerator.MoveNext%2A>.</xref:System.Messaging.MessageEnumerator.MoveNext%2A> meghívásával áthelyezheti A számbavevő inicializálása után használhatja <xref:System.Messaging.MessageEnumerator.MoveNext%2A>segítségével előre a további üzeneteket.</xref:System.Messaging.MessageEnumerator.MoveNext%2A> Várjon, amíg elérhető nem lesz úgy, hogy az időtúllépés üzenet megadhatja a <xref:System.Messaging.MessageEnumerator.MoveNext%2A>metódus.</xref:System.Messaging.MessageEnumerator.MoveNext%2A>       Mivel a számbavevő dinamikus, egy üzenet, miszerint túl a kurzor aktuális pozíciója (például, kis prioritású virtuális gép), mert a rendszer hozzáfűzi a számbavevő hozzáférhet. Egy üzenet beszúrt előtt a kurzor jelenlegi állapotában nem érhető el. Nincs lehetőség a Visszalépés egy MessageEnumerator. A kurzor lehetővé teszi, hogy a csak előrefelé bejárható mozgása. A <xref:System.Messaging.MessageEnumerator.Reset%2A>módszer lehetővé teszi, vigye a kurzort visszaállítása a várólista elejére.</xref:System.Messaging.MessageEnumerator.Reset%2A>       Egy adott várólistában az MessageEnumerator példányait egymástól függetlenül működnek. Létrehozhat két MessageEnumerator példányokat, amelyek ugyanazon a várólistán vonatkoznak. Az egy MessageEnumerator a várólistán lévő üzenetek által végrehajtott módosítások jelenik meg azonnal a második enumerátor Ha a második enumerátor első. Azonban ha két enumerálók azonos helyzetben rendelkezik, és egyik eltávolítja az adott helyen az üzenetet, kivételt vált ki, ha az egyéb enumerátor megpróbálja értékének beolvasása a <xref:System.Messaging.MessageEnumerator.Current%2A>tulajdonság a most már törölt üzenethez.</xref:System.Messaging.MessageEnumerator.Current%2A>      > [!NOTE] > Példányának létrehozásakor <xref:System.Messaging.MessageQueue>rendelkező <xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName>beállítása `true`, egyetlen másik alkalmazás is módosítható a számbavevő található üzenetek, amíg a kapcsolat a várólistára.</xref:System.Messaging.MessageQueue.DenySharedReceive%2A?displayProperty=fullName> </xref:System.Messaging.MessageQueue>"
  example:
  - "The following example gets a dynamic list of messages in a queue and counts all messages with the <xref:System.Messaging.Message.Priority%2A> property set to <xref:System.Messaging.MessagePriority?displayProperty=fullName>.  \n  \n [!code-cs[MessageQueue.GetMessageEnumerator#1](~/add/codesnippet/csharp/t-system.messaging.messa_2_1.cs)]\n [!code-cpp[MessageQueue.GetMessageEnumerator#1](~/add/codesnippet/cpp/t-system.messaging.messa_2_1.cpp)]\n [!code-vb[MessageQueue.GetMessageEnumerator#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_2_1.vb)]"
  syntax:
    content: 'public class MessageEnumerator : MarshalByRefObject, IDisposable, System.Collections.IEnumerator'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Collections.IEnumerator
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.Close
  id: Close
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: Close()
  nameWithType: MessageEnumerator.Close()
  fullName: System.Messaging.MessageEnumerator.Close()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "A számbavevő társított erőforrásokat felszabadul."
  remarks: "Az operációs rendszer egy megnyitott leírót a várólistára megőrzi a kurzor élettartama során. Ha befejezte a Bezárás gombra a számbavevő hívás használata szabadítsa fel a leíró társított erőforrásokat."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Messaging.MessageEnumerator.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.Current
  id: Current
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: MessageEnumerator.Current
  fullName: System.Messaging.MessageEnumerator.Current
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Lekérdezi az aktuális <xref href=&quot;System.Messaging.Message&quot;> </xref> , hogy ez az enumeráló mutat."
  remarks: "A számbavevő jön létre, amikor a várólista első üzenetének előtt egy helyen vezetője mutat. Ebben az esetben aktuális csak akkor érvényes, és fog kivételt jelez, ha érhető el. Meg kell hívnia <xref:System.Messaging.MessageEnumerator.MoveNext%2A>számára, hogy a várólista első üzenetébe a kurzor.</xref:System.Messaging.MessageEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Messaging.Message Current { get; }
    return:
      type: System.Messaging.Message
      description: "Az aktuális üzenet."
  overload: System.Messaging.MessageEnumerator.Current*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Aktuális hívva az első hívás <> </> *>. Az egérmutatónak a üzenet számbavétel első eleme előtt helyezkedik el.       – vagy – meghívása után kell a jelenlegi hívott <> </> *> vissza kellett <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> (a kurzor jelző is található az üzenet enumerálás utolsó eleme mögé.)"
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Az üzenetet a számbavevő a már nem létezik. Előfordulhat, hogy törölték."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.CursorHandle
  id: CursorHandle
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: CursorHandle
  nameWithType: MessageEnumerator.CursorHandle
  fullName: System.Messaging.MessageEnumerator.CursorHandle
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Lekérdezi a Message Queuing kurzor használatos natív leíró keresse meg a várólista üzeneteit."
  remarks: "Ez a tulajdonság a számbavétel natív leírójának tartalmazza. A számbavevő végzett befejezése után hívható <xref:System.Messaging.MessageEnumerator.Close%2A>felszabadítása ehhez az erőforráshoz.</xref:System.Messaging.MessageEnumerator.Close%2A>"
  syntax:
    content: public IntPtr CursorHandle { get; }
    return:
      type: System.IntPtr
      description: "A kurzor natív leíró."
  overload: System.Messaging.MessageEnumerator.CursorHandle*
  exceptions:
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "A leíró nem létezik."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.Dispose
  id: Dispose
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: Dispose()
  nameWithType: MessageEnumerator.Dispose()
  fullName: System.Messaging.MessageEnumerator.Dispose()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Feloldja a által használt erőforrások a <xref href=&quot;System.Messaging.MessageEnumerator&quot;> </xref>."
  remarks: "A által használt erőforrások Dispose hívása lehetővé teszi a <xref:System.Messaging.MessageEnumerator>foglalhatók le más célra való.</xref:System.Messaging.MessageEnumerator> Dispose kapcsolatos további információkért lásd: [nem felügyelt erőforrások tisztítás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Messaging.MessageEnumerator.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MessageEnumerator.Dispose(Boolean)
  fullName: System.Messaging.MessageEnumerator.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Messaging.MessageEnumerator&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános <xref:System.Messaging.MessageEnumerator.Dispose%2A>metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> </xref:System.Messaging.MessageEnumerator.Dispose%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter `true`, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja, amelyhez a <xref:System.Messaging.MessageEnumerator>hivatkozik.</xref:System.Messaging.MessageEnumerator> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Messaging.MessageEnumerator.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.MoveNext
  id: MoveNext
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: MessageEnumerator.MoveNext()
  fullName: System.Messaging.MessageEnumerator.MoveNext()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Kiadásokban a számbavevő a várólista következő üzenetére, ha jelenleg."
  remarks: "Ha nincs üzenet a várólistában a túlterhelési azonnal visszaadja. Nincs másik többszörös definíciót, amely megvárja-e a megadott <xref:System.TimeSpan>üzenet érkezésére.</xref:System.TimeSpan>       Ha egy üzenet jelenleg nem áll rendelkezésre, mert a várólista, vagy meghaladja az utolsó elem a gyűjteményben az áthelyezett, meg a MoveNext metódust ad vissza `false` a hívó metódus.       Létrehozás után egy elméletben a számbavevő a várólista első üzenetének előtt, és a MoveNext metódust első hívás során a várólista első üzenetének kerülnek nézet."
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a számbavevő sikeresen megtörtént a következő üzenetre; speciális <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha a számbavevő elérte a sor végéig."
  overload: System.Messaging.MessageEnumerator.MoveNext*
  exceptions:
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Adott üzenetsor kivételt váltott ki."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)
  id: MoveNext(System.TimeSpan)
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: MoveNext(TimeSpan)
  nameWithType: MessageEnumerator.MoveNext(TimeSpan)
  fullName: System.Messaging.MessageEnumerator.MoveNext(TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "A számbavevő a várólista következő üzenetére állomásra. Ha a számbavevő a sor végén <xref:System.Messaging.MessageEnumerator.MoveNext*>megvárja, amíg az üzenetet, vagy a megadott időkorlát lejárta.</xref:System.Messaging.MessageEnumerator.MoveNext*>"
  remarks: "Ez a túlterhelés vár, ha nincs üzenet a várólistában, vagy ha a kurzor a várólista véget ért. Ha az üzenet már nem érhető el, mert a várólista üres, vagy mert az utolsó elem a gyűjteményben lévő túl áthelyezett <xref:System.Messaging.MessageEnumerator.MoveNext%2A>megvárja-e a megadott időkorlát.</xref:System.Messaging.MessageEnumerator.MoveNext%2A>       Ha a kurzor már a sor végén <xref:System.Messaging.MessageEnumerator.MoveNext%2A>csak `true` az új üzenet érkezik a megadott időintervallumon belül, ha rendelkezik az összes üzenet alacsonyabb prioritású jelenleg a várólistán lévő és a sor végére kerül.</xref:System.Messaging.MessageEnumerator.MoveNext%2A> Nincs paraméterrel túlterhelés azonnal visszaadja az Ha nincsenek további üzenetek vannak a várólistában.       Létrehozás után egy elméletben a számbavevő az első üzenet a számbavétel, és az első hívás előtt <xref:System.Messaging.MessageEnumerator.MoveNext%2A>számos lehetőséget kínál a nézetben a számbavétel első üzenetét.</xref:System.Messaging.MessageEnumerator.MoveNext%2A>"
  syntax:
    content: public bool MoveNext (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>érhető el, ha a számbavevő a sor végén üzenet várakozási.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a számbavevő sikeresen speciális a következő üzenetre; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , ha a számbavevő elérte a várólistát végén, és az üzenet nem áll rendelkezésre a megadott időn belül a <code> timeout </code> paraméter."
  overload: System.Messaging.MessageEnumerator.MoveNext*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az időtúllépés paraméter megadott értéke érvénytelen. Előfordulhat, hogy határoz meg, negatív szám."
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Adott üzenetsor kivételt váltott ki.       – vagy – időtúllépés történt."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.RemoveCurrent
  id: RemoveCurrent
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: RemoveCurrent()
  nameWithType: MessageEnumerator.RemoveCurrent()
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Eltávolítja az aktuális üzenetet tranzakciós vagy nem tranzakciós sorból, és visszaadja az üzenetet a hívó alkalmazás. Nincs semmilyen üzenet a várólistában lévő érkezésére megadott időkorlát."
  remarks: "RemoveCurrent eltávolítja, és visszaadja az üzenetet a kurzor aktuális helyen.       Várólistára naplózási használ, ha egy példányt a naplóvárólistában levő hasonlóan eltávolítása hatására a <xref:System.Messaging.MessageQueue>osztályának <xref:System.Messaging.MessageQueue.Receive%2A>metódus végzi.</xref:System.Messaging.MessageQueue.Receive%2A> </xref:System.Messaging.MessageQueue>       Eltávolítja az aktuális üzenet, amikor a kurzor a következő üzenet kerül. Nincs hívására <xref:System.Messaging.MessageEnumerator.MoveNext%2A>RemoveCurrent hívása után.</xref:System.Messaging.MessageEnumerator.MoveNext%2A>       A túlterhelési hívásakor a tranzakcionális várósor, a Message Queuing egyetlen belső tranzakció hoz létre."
  syntax:
    content: public System.Messaging.Message RemoveCurrent ();
    parameters: []
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> , amely elérhető a várólista első üzenetének hivatkozik."
  overload: System.Messaging.MessageEnumerator.RemoveCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)
  id: RemoveCurrent(System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: RemoveCurrent(MessageQueueTransaction)
  nameWithType: MessageEnumerator.RemoveCurrent(MessageQueueTransaction)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "A tranzakciós várólistában lévő eltávolítja az aktuális üzenetet, és visszaadja az üzenetet a hívó alkalmazás. Nincs semmilyen üzenet a várólistában lévő érkezésére megadott időkorlát."
  remarks: "<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>eltávolítja és visszaállítja a kurzor aktuális helyen, a belső tranzakció adataival határozzák meg az üzenetet a `transaction` paraméter.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>       Várólistára naplózási használ, ha egy példányt a naplóvárólistában levő hasonlóan eltávolítása hatására a <xref:System.Messaging.MessageQueue>osztályának <xref:System.Messaging.MessageQueue.Receive%2A>metódus végzi.</xref:System.Messaging.MessageQueue.Receive%2A> </xref:System.Messaging.MessageQueue>       Tranzakciós várólisták használata, amikor egy tranzakció visszaállítása okozza-e bármilyen hívásával eltávolított üzenetek <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>vissza kell helyezni a várólista.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Az eltávolítás nem nem vonható vissza, amíg a tranzakció.       Eltávolítja az aktuális üzenet, amikor a kurzor a következő üzenet kerül. Nem kell <xref:System.Messaging.MessageEnumerator.MoveNext%2A> <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> hívása után</xref:System.Messaging.MessageEnumerator.MoveNext%2A> hívható"
  syntax:
    content: public System.Messaging.Message RemoveCurrent (System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "A <xref href=&quot;System.Messaging.MessageQueueTransaction&quot;> </xref> objektum, amely meghatározza a tranzakció, amelyben eltávolítja az üzenetet."
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> , amely elérhető a várólista első üzenetének hivatkozik."
  overload: System.Messaging.MessageEnumerator.RemoveCurrent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>transaction</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)
  id: RemoveCurrent(System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: RemoveCurrent(MessageQueueTransactionType)
  nameWithType: MessageEnumerator.RemoveCurrent(MessageQueueTransactionType)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Eltávolítja az aktuális üzenetet az üzenetsorból, és visszaadja az üzenetet a hívó alkalmazás. Nincs semmilyen üzenet a várólistában lévő érkezésére megadott időkorlát."
  remarks: "<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>eltávolítja és visszaállítja a kurzor aktuális helyen, egy tranzakció környezetében határozzák meg az üzenetet a `transactionType` paraméter.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>       Adja meg `Automatic` a a `transactionType` paraméternek, ha már van egy külső tranzakciós környezet lett átadva a szál az üzenetet használni kívánt csatolva. Adja meg `Single` Ha azt szeretné, hogy az üzenetet egy belső tranzakcióként. Megadhat `None` Ha azt szeretné, egy üzenet fogadása tranzakcionális kívül egy tranzakciós környezet lett átadva.       Várólistára naplózási használ, ha egy példányt a naplóvárólistában levő hasonlóan eltávolítása hatására a <xref:System.Messaging.MessageQueue>osztályának <xref:System.Messaging.MessageQueue.Receive%2A>metódus végzi.</xref:System.Messaging.MessageQueue.Receive%2A> </xref:System.Messaging.MessageQueue>       Tranzakciós várólisták használata, amikor egy tranzakció visszaállítása okozza-e bármilyen hívásával eltávolított üzenetek <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>vissza kell helyezni a várólista.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Az eltávolítás nem nem vonható vissza, amíg a tranzakció.       Eltávolítja az aktuális üzenet, amikor a kurzor a következő üzenet kerül. Nem kell <xref:System.Messaging.MessageEnumerator.MoveNext%2A> <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> hívása után</xref:System.Messaging.MessageEnumerator.MoveNext%2A> hívható"
  syntax:
    content: public System.Messaging.Message RemoveCurrent (System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "Egy a <xref href=&quot;System.Messaging.MessageQueueTransactionType&quot;> </xref> értékek, a tranzakciós környezet lett átadva az üzenet társítandó leíró."
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> , amely elérhető a várólista első üzenetének hivatkozik."
  overload: System.Messaging.MessageEnumerator.RemoveCurrent*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "A <code> transactionType </code> paraméter egyike nem a <xref href=&quot;System.Messaging.MessageQueueTransactionType&quot;> </xref> tagokat."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)
  id: RemoveCurrent(System.TimeSpan)
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: RemoveCurrent(TimeSpan)
  nameWithType: MessageEnumerator.RemoveCurrent(TimeSpan)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(TimeSpan)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Eltávolítja az aktuális üzenetet a sorból, és visszaadja az üzenetet a hívó alkalmazás. Ha egy üzenetet, amely eltávolítja, a metódus visszaadja azt azonnal. A metódus ellenkező esetben a megadott időkorlátnak egy új üzenet érkezésekor vár."
  remarks: "<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>eltávolítja, és visszaadja az üzenetet a kurzor aktuális helyen.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> A sor végén a kurzor esetén ez a módszer túlterhelés megvárja, amíg egy üzenetet, vagy az időköz által megadott a `timeout` paraméter érvényessége lejárt.       Várólistára naplózási használ, ha egy példányt a naplóvárólistában levő hasonlóan eltávolítása hatására a <xref:System.Messaging.MessageQueue>osztályának <xref:System.Messaging.MessageQueue.Receive%2A>metódus végzi.</xref:System.Messaging.MessageQueue.Receive%2A> </xref:System.Messaging.MessageQueue>       Eltávolítja az aktuális üzenet, amikor a kurzor a következő üzenet kerül. Nem kell <xref:System.Messaging.MessageEnumerator.MoveNext%2A> <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> hívása után</xref:System.Messaging.MessageEnumerator.MoveNext%2A> hívható       A túlterhelési hívásakor a tranzakcionális várósor, a Message Queuing egyetlen belső tranzakció hoz létre."
  syntax:
    content: public System.Messaging.Message RemoveCurrent (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az üzenet a várólistában lévő érkezésére várakozási időintervallum."
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> , amely elérhető a várólista első üzenetének hivatkozik."
  overload: System.Messaging.MessageEnumerator.RemoveCurrent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott a <code> timeout </code> paraméter értéke érvénytelen."
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Az időtúllépés történt."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)
  id: RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: RemoveCurrent(TimeSpan,MessageQueueTransaction)
  nameWithType: MessageEnumerator.RemoveCurrent(TimeSpan,MessageQueueTransaction)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(TimeSpan,MessageQueueTransaction)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "A tranzakciós várólistában lévő eltávolítja az aktuális üzenetet, és visszaadja az üzenetet a hívó alkalmazás. Ha egy üzenetet, amely eltávolítja, a metódus visszaadja azt azonnal. A metódus ellenkező esetben a megadott időkorlátnak egy új üzenet érkezésekor vár."
  remarks: "<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>eltávolítja, és visszaadja az üzenetet a kurzor aktuális helyen.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> A sor végén a kurzor esetén ez a módszer túlterhelés megvárja, amíg egy üzenetet, vagy az időköz által megadott a `timeout` paraméter érvényessége lejárt.       Tranzakciós várólisták használata, amikor egy tranzakció visszaállítása okozza-e bármilyen hívásával eltávolított üzenetek <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>vissza kell helyezni a várólista.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Az eltávolítás nem nem vonható vissza, amíg a tranzakció.       Várólistára naplózási használ, ha egy példányt a naplóvárólistában levő hasonlóan eltávolítása hatására a <xref:System.Messaging.MessageQueue>osztályának <xref:System.Messaging.MessageQueue.Receive%2A>metódus végzi.</xref:System.Messaging.MessageQueue.Receive%2A> </xref:System.Messaging.MessageQueue>       Eltávolítja az aktuális üzenet, amikor a kurzor a következő üzenet kerül. Nem kell <xref:System.Messaging.MessageEnumerator.MoveNext%2A> <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> hívása után</xref:System.Messaging.MessageEnumerator.MoveNext%2A> hívható"
  syntax:
    content: public System.Messaging.Message RemoveCurrent (TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az eltávolítani kívánt üzenet várakozási idő időintervallum."
    - id: transaction
      type: System.Messaging.MessageQueueTransaction
      description: "A <xref href=&quot;System.Messaging.MessageQueueTransaction&quot;> </xref> objektum, amely meghatározza a tranzakciós környezet lett átadva az üzenet."
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> , amely elérhető a várólista első üzenetének hivatkozik."
  overload: System.Messaging.MessageEnumerator.RemoveCurrent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott a <code> timeout </code> paraméter értéke érvénytelen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>transaction</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Az időtúllépés történt."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  id: RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: RemoveCurrent(TimeSpan,MessageQueueTransactionType)
  nameWithType: MessageEnumerator.RemoveCurrent(TimeSpan,MessageQueueTransactionType)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(TimeSpan,MessageQueueTransactionType)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Eltávolítja az aktuális üzenetet az üzenetsorból, és visszaadja az üzenetet a hívó alkalmazás. Ha egy üzenetet, amely eltávolítja, a metódus visszaadja azt azonnal. A metódus ellenkező esetben a megadott időkorlátnak egy új üzenet érkezésekor vár."
  remarks: "<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>eltávolítja és visszaállítja a kurzor aktuális helyen, egy tranzakció környezetében határozzák meg az üzenetet a `transactionType` paraméter.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> A sor végén a kurzor esetén ez a módszer túlterhelés megvárja, amíg egy üzenetet, vagy az időköz által megadott a `timeout` paraméter érvényessége lejárt.       Adja meg `Automatic` a a `transactionType` paraméternek, ha már van egy külső tranzakciós környezet lett átadva a szál az üzenetet használni kívánt csatolva. Adja meg `Single` Ha azt szeretné, hogy az üzenetet egy belső tranzakcióként. Megadhat `None` Ha azt szeretné, egy üzenet fogadása tranzakcionális kívül egy tranzakciós környezet lett átadva.       Várólistára naplózási használ, ha egy példányt a naplóvárólistában levő hasonlóan eltávolítása hatására a <xref:System.Messaging.MessageQueue>osztályának <xref:System.Messaging.MessageQueue.Receive%2A>metódus végzi.</xref:System.Messaging.MessageQueue.Receive%2A> </xref:System.Messaging.MessageQueue>       Tranzakciós várólisták használata, amikor egy tranzakció visszaállítása okozza-e bármilyen hívásával eltávolított üzenetek <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>vissza kell helyezni a várólista.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> Az eltávolítás nem nem vonható vissza, amíg a tranzakció.       Eltávolítja az aktuális üzenet, amikor a kurzor a következő üzenet kerül. Nem kell <xref:System.Messaging.MessageEnumerator.MoveNext%2A> <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>.</xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> hívása után</xref:System.Messaging.MessageEnumerator.MoveNext%2A> hívható"
  syntax:
    content: public System.Messaging.Message RemoveCurrent (TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az eltávolítani kívánt üzenet várakozási idő időintervallum."
    - id: transactionType
      type: System.Messaging.MessageQueueTransactionType
      description: "Egy a <xref href=&quot;System.Messaging.MessageQueueTransactionType&quot;> </xref> értékek, a tranzakciós környezet lett átadva az üzenet társítandó leíró."
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> , amely elérhető a várólista első üzenetének hivatkozik."
  overload: System.Messaging.MessageEnumerator.RemoveCurrent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott a <code> timeout </code> paraméter értéke érvénytelen."
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "Az időtúllépés történt."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "A <code> transactionType </code> paraméter egyike nem a <xref href=&quot;System.Messaging.MessageQueueTransactionType&quot;> </xref> tagokat."
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.Reset
  id: Reset
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: MessageEnumerator.Reset()
  fullName: System.Messaging.MessageEnumerator.Reset()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Alaphelyzetbe állítja az aktuális enumerátor, így a várólista vezetője mutat."
  remarks: "Enumerátor csak áthelyezheti egy előre. Ezt a módszert kezdje újra a folyamatot a várólista elejére.       Az első üzenet után hívja meg alaphelyzetbe állítása, a kurzor mutat. Nem kell hívnia <xref:System.Messaging.MessageEnumerator.MoveNext%2A>alaphelyzetbe állítása a kurzort hívása után továbbítja a várólista első üzenetébe.</xref:System.Messaging.MessageEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Messaging.MessageEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Messaging.MessageEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: MessageEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Messaging.MessageEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Értéket ad vissza egy <xref href=&quot;System.Messaging.Message&quot;> </xref> , amely hivatkozik az jelenik meg a jelenlegi kurzor pozíciójával."
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> , amely hivatkozik az jelenik meg a jelenlegi kurzor pozíciójával."
  overload: System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Messaging.MessageQueueException
  parent: System.Messaging
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.MessageEnumerator.Close
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Close()
  nameWithType: MessageEnumerator.Close()
  fullName: System.Messaging.MessageEnumerator.Close()
- uid: System.Messaging.MessageEnumerator.Current
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Current
  nameWithType: MessageEnumerator.Current
  fullName: System.Messaging.MessageEnumerator.Current
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.MessageEnumerator.CursorHandle
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: CursorHandle
  nameWithType: MessageEnumerator.CursorHandle
  fullName: System.Messaging.MessageEnumerator.CursorHandle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Messaging.MessageEnumerator.Dispose
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Dispose()
  nameWithType: MessageEnumerator.Dispose()
  fullName: System.Messaging.MessageEnumerator.Dispose()
- uid: System.Messaging.MessageEnumerator.Dispose(System.Boolean)
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MessageEnumerator.Dispose(Boolean)
  fullName: System.Messaging.MessageEnumerator.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.MessageEnumerator.MoveNext
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: MessageEnumerator.MoveNext()
  fullName: System.Messaging.MessageEnumerator.MoveNext()
- uid: System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: MoveNext(TimeSpan)
  nameWithType: MessageEnumerator.MoveNext(TimeSpan)
  fullName: System.Messaging.MessageEnumerator.MoveNext(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Messaging.MessageEnumerator.RemoveCurrent
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: RemoveCurrent()
  nameWithType: MessageEnumerator.RemoveCurrent()
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent()
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: RemoveCurrent(MessageQueueTransaction)
  nameWithType: MessageEnumerator.RemoveCurrent(MessageQueueTransaction)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(MessageQueueTransaction)
- uid: System.Messaging.MessageQueueTransaction
  parent: System.Messaging
  isExternal: false
  name: MessageQueueTransaction
  nameWithType: MessageQueueTransaction
  fullName: System.Messaging.MessageQueueTransaction
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: RemoveCurrent(MessageQueueTransactionType)
  nameWithType: MessageEnumerator.RemoveCurrent(MessageQueueTransactionType)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(MessageQueueTransactionType)
- uid: System.Messaging.MessageQueueTransactionType
  parent: System.Messaging
  isExternal: false
  name: MessageQueueTransactionType
  nameWithType: MessageQueueTransactionType
  fullName: System.Messaging.MessageQueueTransactionType
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: RemoveCurrent(TimeSpan)
  nameWithType: MessageEnumerator.RemoveCurrent(TimeSpan)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(TimeSpan)
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: RemoveCurrent(TimeSpan,MessageQueueTransaction)
  nameWithType: MessageEnumerator.RemoveCurrent(TimeSpan,MessageQueueTransaction)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(TimeSpan,MessageQueueTransaction)
- uid: System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: RemoveCurrent(TimeSpan,MessageQueueTransactionType)
  nameWithType: MessageEnumerator.RemoveCurrent(TimeSpan,MessageQueueTransactionType)
  fullName: System.Messaging.MessageEnumerator.RemoveCurrent(TimeSpan,MessageQueueTransactionType)
- uid: System.Messaging.MessageEnumerator.Reset
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Reset()
  nameWithType: MessageEnumerator.Reset()
  fullName: System.Messaging.MessageEnumerator.Reset()
- uid: System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: MessageEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Messaging.MessageEnumerator.System.Collections.IEnumerator.Current
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Messaging.MessageEnumerator.Close*
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Close
  nameWithType: MessageEnumerator.Close
- uid: System.Messaging.MessageEnumerator.Current*
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Current
  nameWithType: MessageEnumerator.Current
- uid: System.Messaging.MessageEnumerator.CursorHandle*
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: CursorHandle
  nameWithType: MessageEnumerator.CursorHandle
- uid: System.Messaging.MessageEnumerator.Dispose*
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Dispose
  nameWithType: MessageEnumerator.Dispose
- uid: System.Messaging.MessageEnumerator.MoveNext*
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: MessageEnumerator.MoveNext
- uid: System.Messaging.MessageEnumerator.RemoveCurrent*
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: RemoveCurrent
  nameWithType: MessageEnumerator.RemoveCurrent
- uid: System.Messaging.MessageEnumerator.Reset*
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: Reset
  nameWithType: MessageEnumerator.Reset
- uid: System.Messaging.MessageEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Messaging.MessageEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: MessageEnumerator.System.Collections.IEnumerator.Current
