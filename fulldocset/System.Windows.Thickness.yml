### YamlMime:ManagedReference
items:
- uid: System.Windows.Thickness
  id: Thickness
  children:
  - System.Windows.Thickness.#ctor(System.Double)
  - System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Thickness.Bottom
  - System.Windows.Thickness.Equals(System.Object)
  - System.Windows.Thickness.Equals(System.Windows.Thickness)
  - System.Windows.Thickness.GetHashCode
  - System.Windows.Thickness.Left
  - System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.Right
  - System.Windows.Thickness.Top
  - System.Windows.Thickness.ToString
  langs:
  - csharp
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
  type: Struct
  summary: "Ismerteti a négyszög körül keret vastagságát. Négy <xref:System.Double>értékek ismertetik a <> </> *>, <> </> *>, <> </> *>, és <> </> *> oldala, illetve.</xref:System.Double>"
  remarks: "Két módon vastagsága értékeket adhat meg. Ha a négy <xref:System.Double>érték a struktúra, akkor a művelet a <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A>és <xref:System.Windows.Thickness.Bottom%2A>oldalakra, illetve a határoló négyszög.</xref:System.Windows.Thickness.Bottom%2A> </xref:System.Windows.Thickness.Right%2A> </xref:System.Windows.Thickness.Top%2A> </xref:System.Windows.Thickness.Left%2A> </xref:System.Double> Egyetlen érték, amely egységes érték vonatkozik a határoló négyszög minden oldalát is megadhat.      <a name=&quot;xamlAttributeUsage_Thickness&quot;></a>## XAML attribútumok használata ```   <object property=&quot;left&quot;/>   - or -   <object property=&quot;left,top&quot;/>   - or -   <object property=&quot; left,top,right,bottom&quot; ... />   ``` <a name=&quot;xamlValues_Thickness&quot;> </a> ## XAML értékek *bal oldali* a keret leírt, vagyis a bal oldali szélének egy <xref:System.Double>érték, amely meghatározza egy [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] mérték, vagy mint egy *qualifiedDouble* (lásd alább).</xref:System.Double>       Ha csak egyetlen mértéket van megadva, adott mérték vonatkozik az összes, a bal oldali, felső, jobb, vastagságú legkisebb értékek. Ha csak két bal felső intézkedéseket vannak megadva, ezeket a mértékeket szimmetrikusan érvényesek-e vastagság: a bal oldali értékét használja a jobb; a felső értéke alsó szolgál.       *felső* leírt, vagyis a keret felső széle egy <xref:System.Double>érték, amely meghatározza egy [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] mérték, vagy mint egy *qualifiedDouble* (lásd alább).</xref:System.Double> Ha csak két bal felső intézkedéseket vannak megadva, ezeket a mértékeket szimmetrikusan érvényesek-e vastagság: a bal oldali értékét használja a jobb; a felső értéke alsó szolgál.       *jobb oldali* a keret, mert leírt jobb szélén egy <xref:System.Double>érték, amely meghatározza egy [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] mérték, vagy mint egy *qualifiedDouble* (lásd alább).</xref:System.Double> Ha nincs megadva, a bal oldali értéket használja.       *alsó* leírt, vagyis a keret alsó széle egy <xref:System.Double>érték, amely meghatározza egy [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] mérték, vagy mint egy *qualifiedDouble* (lásd alább).</xref:System.Double> Ha nincs megadva, a bal oldali értéket használja.       *qualifiedDouble* A *dupla* érték bármely az eszközökről, a fent leírt módon követ egység deklaráció a következő karakterláncok: `px`, `in`, `cm`, `pt`.       `px`(alapértelmezett) [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)] `in` hüvelyk; 1 in == 96px `cm` van centimétert; 1cm==(96/2.54) képpont `pt` pont; 1pt==(96/72) képpont > [!NOTE] > értékek nem a tizedesjel explicit módon, ha a megadott karakterláncként kell tartalmaznia.        A karakterlánc megadva, az &quot;1&quot; [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] értékké értékelődik ki 1.0, amikor a kód hivatkozik."
  example:
  - "The following example shows how to create an instance of a Thickness structure and set its properties by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.ThicknessConverter))]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public struct Thickness : IEquatable<System.Windows.Thickness>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Thickness>
  platform:
  - net462
- uid: System.Windows.Thickness.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Thickness&quot;> </xref> struktúrában, amelynek hossza a megadott egységes mindkét oldalon."
  syntax:
    content: public Thickness (double uniformLength);
    parameters:
    - id: uniformLength
      type: System.Double
      description: "A határoló négyszög minden oldalát alkalmazott egységes hossza."
  overload: System.Windows.Thickness.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Thickness&quot;> </xref> , amely rendelkezik az adott hosszúságú struktúra (megadva egy <xref:System.Double>) alkalmazza a téglalap oldalán.</xref:System.Double>"
  remarks: ''
  example:
  - "The following example shows how to create an instance of a <xref:System.Windows.Thickness> structure by using code.  \n  \n [!code-cs[ThicknessStruct#1](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#1)]\n [!code-xml[ThicknessStruct#1](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#1)]\n [!code-vb[ThicknessStruct#1](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#1)]"
  syntax:
    content: public Thickness (double left, double top, double right, double bottom);
    parameters:
    - id: left
      type: System.Double
      description: "A téglalap bal oldalán vastagságát."
    - id: top
      type: System.Double
      description: "A téglalap felső oldalán vastagságát."
    - id: right
      type: System.Double
      description: "A négyszög jobb oldalán vastagsága"
    - id: bottom
      type: System.Double
      description: "A téglalap alsó vastagságát."
  overload: System.Windows.Thickness.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Bottom
  id: Bottom
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja a szélessége képpontban alsó részén a határoló téglalapon."
  remarks: ''
  example:
  - "The following example shows how to set the value of the Bottom property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Bottom { get; set; }
    return:
      type: System.Double
      description: "A <xref:System.Double>, amely jelöli az szélessége képpontban megadva, az alsó részén a határoló téglalapon ezen példányának <xref href=&quot;System.Windows.Thickness&quot;> </xref>.</xref:System.Double> 1/96 hüvelyk megegyezik egy képpont. Az alapértelmezett érték a 0."
  overload: System.Windows.Thickness.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Összehasonlítja a <xref href=&quot;System.Windows.Thickness&quot;> </xref> másik struktúra <xref:System.Object>az egyezés keresésekor.</xref:System.Object>"
  remarks: "A két lebegőpontos értékek, amelyek logikailag egyenértékű egyenlőség vizsgálata, az értékek üzemelteti a felhalmozhat pontosság hibák miatt sikertelenek lehetnek."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Az objektum összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a két objektum egyenlő; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Thickness.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  id: Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Összehasonlítja a <xref href=&quot;System.Windows.Thickness&quot;> </xref> másik struktúra <xref href=&quot;System.Windows.Thickness&quot;> </xref> struktúra az egyezés keresésekor."
  remarks: "Tesztelési egyenlőség vagy a két lebegőpontos értékek, amelyek logikailag egyenértékű egyenlőtlen felhalmozhat, az értékek üzemelteti a pontosság hibák miatt sikertelenek lehetnek."
  syntax:
    content: public bool Equals (System.Windows.Thickness thickness);
    parameters:
    - id: thickness
      type: System.Windows.Thickness
      description: "Példányának <xref href=&quot;System.Windows.Thickness&quot;> </xref> összehasonlítandó az egyezés keresésekor."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a két példányban <xref href=&quot;System.Windows.Thickness&quot;> </xref> egyenlő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Thickness.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.GetHashCode
  id: GetHashCode
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A szerkezet kivonatkódját adja vissza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Az ezen példányának kivonatoló kódot <xref href=&quot;System.Windows.Thickness&quot;> </xref>."
  overload: System.Windows.Thickness.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Left
  id: Left
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja a szélessége képpontban a határoló téglalapon bal oldalán."
  remarks: ''
  example:
  - "The following example shows how to set the value of the Left property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Left { get; set; }
    return:
      type: System.Double
      description: "A <xref:System.Double>, amely jelöli az szélessége képpontban megadva, a határoló téglalapon ezen példányának bal oldalának <xref href=&quot;System.Windows.Thickness&quot;> </xref>.</xref:System.Double> 1/96 a hüvelyk megegyezik egy képpont. Az alapértelmezett érték a 0."
  overload: System.Windows.Thickness.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Összehasonlítja két <xref href=&quot;System.Windows.Thickness&quot;> </xref> struktúrák az egyezés keresésekor."
  remarks: "A két lebegőpontos értékek, amelyek logikailag egyenértékű egyenlőség vizsgálata, az értékek üzemelteti a felhalmozhat pontosság hibák miatt sikertelenek lehetnek."
  syntax:
    content: public static bool op_Equality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: "Az első struktúra összehasonlítani."
    - id: t2
      type: System.Windows.Thickness
      description: "Az egyéb struktúra összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a két példányban <xref href=&quot;System.Windows.Thickness&quot;> </xref> egyenlő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Thickness.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Összehasonlít két <xref href=&quot;System.Windows.Thickness&quot;> </xref> egyenlőtlen szerkezetek."
  remarks: "Tesztelési egyenlőség vagy a két lebegőpontos értékek, amelyek logikailag egyenértékű egyenlőtlen felhalmozhat, az értékek üzemelteti a pontosság hibák miatt sikertelenek lehetnek."
  syntax:
    content: public static bool op_Inequality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: "Az első struktúra összehasonlítani."
    - id: t2
      type: System.Windows.Thickness
      description: "Az egyéb struktúra összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a két példányban <xref href=&quot;System.Windows.Thickness&quot;> </xref> nincsenek egyenlő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Thickness.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Right
  id: Right
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja a szélessége képpontban a határoló négyszög jobb oldalán."
  remarks: ''
  example:
  - "The following example shows how to set the value of the Right property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Right { get; set; }
    return:
      type: System.Double
      description: "A <xref:System.Double>szélessége képpontban ezen példányának a határoló négyszög jobb oldalán jelöli, amelyek <xref href=&quot;System.Windows.Thickness&quot;> </xref>.</xref:System.Double> 1/96 hüvelyk megegyezik egy képpont. Az alapértelmezett érték a 0."
  overload: System.Windows.Thickness.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.Top
  id: Top
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja a szélessége képpontban a határoló négyszög felső oldalán."
  remarks: ''
  example:
  - "The following example shows how to set the value of the Top property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Top { get; set; }
    return:
      type: System.Double
      description: "A <xref:System.Double>, amely jelzi, hogy a szélessége képpontban megadva, a határoló téglalapon ezen példányának felső oldalának <xref href=&quot;System.Windows.Thickness&quot;> </xref>.</xref:System.Double> 1/96 hüvelyk megegyezik egy képpont. Az alapértelmezett érték a 0."
  overload: System.Windows.Thickness.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Thickness.ToString
  id: ToString
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A karakterlánc alakot adja vissza a <xref href=&quot;System.Windows.Thickness&quot;> </xref> struktúra."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String>jelöli, amelyek a <xref href=&quot;System.Windows.Thickness&quot;> </xref> érték.</xref:System.String>"
  overload: System.Windows.Thickness.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Thickness.#ctor(System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
- uid: System.Windows.Thickness.Bottom
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
- uid: System.Windows.Thickness.Equals(System.Object)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness.GetHashCode
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Thickness.Left
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
- uid: System.Windows.Thickness.Right
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
- uid: System.Windows.Thickness.Top
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
- uid: System.Windows.Thickness.ToString
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Thickness.#ctor*
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness
  nameWithType: Thickness.Thickness
- uid: System.Windows.Thickness.Bottom*
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
- uid: System.Windows.Thickness.Equals*
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals
  nameWithType: Thickness.Equals
- uid: System.Windows.Thickness.GetHashCode*
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode
  nameWithType: Thickness.GetHashCode
- uid: System.Windows.Thickness.Left*
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
- uid: System.Windows.Thickness.op_Equality*
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality
  nameWithType: Thickness.op_Equality
- uid: System.Windows.Thickness.op_Inequality*
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality
  nameWithType: Thickness.op_Inequality
- uid: System.Windows.Thickness.Right*
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
- uid: System.Windows.Thickness.Top*
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
- uid: System.Windows.Thickness.ToString*
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString
  nameWithType: Thickness.ToString
