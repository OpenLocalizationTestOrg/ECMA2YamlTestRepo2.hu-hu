### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.CommandBinding
  id: CommandBinding
  children:
  - System.Windows.Input.CommandBinding.#ctor
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  - System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  - System.Windows.Input.CommandBinding.CanExecute
  - System.Windows.Input.CommandBinding.Command
  - System.Windows.Input.CommandBinding.Executed
  - System.Windows.Input.CommandBinding.PreviewCanExecute
  - System.Windows.Input.CommandBinding.PreviewExecuted
  langs:
  - csharp
  name: CommandBinding
  nameWithType: CommandBinding
  fullName: System.Windows.Input.CommandBinding
  type: Class
  summary: "Van kötve egy <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> az esemény-kezelők, a parancs végrehajtása."
  remarks: "Egy CommandBinding társítja a parancs a <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> és <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> események, amely implementálja, és határozza meg a parancs állapota.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.PreviewExecuted>       Ha a <xref:System.Windows.Input.RoutedCommand.Execute%2A>vagy <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>metódusában egy <xref:System.Windows.Input.RoutedCommand>neve, a <xref:System.Windows.Input.CommandBinding.PreviewExecuted>/<xref:System.Windows.Input.CommandBinding.Executed> vagy a <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>/<xref:System.Windows.Input.CommandBinding.CanExecute> a parancs célszámítógépen események aktiválódnak.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> </xref:System.Windows.Input.RoutedCommand.Execute%2A>  Ha a parancs cél egy CommandBinding a parancs, a megfelelő kezelők nevezzük.  A parancs a célhoz nem tartozik egy CommandBinding ahhoz, hogy a parancs, ha az események vannak áthalad az elem fájában amíg meg nem találja a CommandBinding rendelkező elemet.       Egy CommandBinding korlátozott használatát egy el <xref:System.Windows.Input.ICommand>, amely nem egy<xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand>  Ennek az az oka egy CommandBinding köti a parancsot a <xref:System.Windows.Input.ExecutedRoutedEventHandler>és a <xref:System.Windows.Input.CanExecuteRoutedEventHandler>amely figyelésére a <xref:System.Windows.Input.CommandManager.Executed>és <xref:System.Windows.Input.CommandManager.CanExecute>az irányított események, amelyek következik be, amikor a <xref:System.Windows.Input.RoutedCommand.Execute%2A>és <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>metódusában a <xref:System.Windows.Input.RoutedCommand>nevezzük.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> </xref:System.Windows.Input.RoutedCommand.Execute%2A> </xref:System.Windows.Input.CommandManager.CanExecute> </xref:System.Windows.Input.CommandManager.Executed> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.ExecutedRoutedEventHandler>"
  syntax:
    content: public class CommandBinding
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor
  id: '#ctor'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding()
  nameWithType: CommandBinding.CommandBinding()
  fullName: System.Windows.Input.CommandBinding.CommandBinding()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> osztály."
  syntax:
    content: public CommandBinding ();
    parameters: []
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  id: '#ctor(System.Windows.Input.ICommand)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand)
  nameWithType: CommandBinding.CommandBinding(ICommand)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> osztály a megadott <xref:System.Windows.Input.ICommand>.</xref:System.Windows.Input.ICommand> használatával"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "A parancsot az új kiinduló <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> meg."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  id: '#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> használatával a megadott osztály <xref:System.Windows.Input.ICommand>és a megadott <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> eseménykezelő.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "A parancsot az új kiinduló <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> meg."
    - id: executed
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "A kezelő-a <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> az új esemény <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  id: '#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)'
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> használatával a megadott osztály <xref:System.Windows.Input.ICommand>és a megadott <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> és <xref href=&quot;System.Windows.Input.CommandBinding.CanExecute&quot;> </xref> eseménykezelők.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public CommandBinding (System.Windows.Input.ICommand command, System.Windows.Input.ExecutedRoutedEventHandler executed, System.Windows.Input.CanExecuteRoutedEventHandler canExecute);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "A parancsot az új kiinduló <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> meg."
    - id: executed
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "A kezelő-a <xref href=&quot;System.Windows.Input.CommandBinding.Executed&quot;> </xref> az új esemény <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
    - id: canExecute
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "A kezelő-a <xref href=&quot;System.Windows.Input.CommandBinding.CanExecute&quot;> </xref> az új esemény <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref>."
  overload: System.Windows.Input.CommandBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.CanExecute
  id: CanExecute
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: CanExecute
  nameWithType: CommandBinding.CanExecute
  fullName: System.Windows.Input.CommandBinding.CanExecute
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Akkor következik be, amikor ez a parancs tartozó <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> indít el egy ellenőrzést annak meghatározásához, hogy a parancs a parancs cél hajtható végre."
  remarks: "Ha a <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>metódust egy <xref:System.Windows.Input.RoutedCommand>neve, a <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>egy esemény jelenik meg a parancs célszámítógépen.</xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A>  Ha az esemény nem kezelt, a CanExecute esemény következik be.  Ha a parancs céljának egy <xref:System.Windows.Input.CommandBinding>ahhoz, hogy a parancs, amely a CanExecute kezelőt <xref:System.Windows.Input.CommandBinding>nevezik.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Ha a parancs a célhoz nem tartozik egy <xref:System.Windows.Input.CommandBinding>ahhoz, hogy a parancs a CanExecute esemény buborékok össze a elem fa keres egy elem, amely rendelkezik egy <xref:System.Windows.Input.CommandBinding>és a parancshoz tartozó.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>      <a name=&quot;routedEventInfo_CanExecute&quot;></a>## Irányított események adatait |||   |-|-|   | Alkalmazásazonosító mezőben |} <xref:System.Windows.Input.CommandManager.CanExecuteEvent>|   | Útválasztási stratégia |} Propagálása felfelé |}   | Delegált |} <xref:System.Windows.Input.CanExecuteRoutedEventHandler>|      -A megfelelő bújtatás esemény <xref:System.Windows.Input.CommandBinding.PreviewCanExecute>.</xref:System.Windows.Input.CommandBinding.PreviewCanExecute> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.CommandManager.CanExecuteEvent>"
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandwithhandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.  \n  \n [!code-cs[commandwithhandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlercanexecutehandler)]\n [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlercanexecutehandler)]"
  syntax:
    content: public event System.Windows.Input.CanExecuteRoutedEventHandler CanExecute;
    return:
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.Command
  id: Command
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: Command
  nameWithType: CommandBinding.Command
  fullName: System.Windows.Input.CommandBinding.Command
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Lekérdezi vagy beállítja a <xref:System.Windows.Input.ICommand>Ez társított <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref>.</xref:System.Windows.Input.ICommand>"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandWithHandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[commandhandlerprocedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[commandhandlerprocedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> which sets <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> to `true`.  \n  \n [!code-cs[commandWithHandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlercanexecutehandler)]\n [!code-vb[commandWithHandler#CommandHandlerCanExecuteHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlercanexecutehandler)]  \n  \n The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.  \n  \n [!code-cs[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlerexecutedhandler)]\n [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlerexecutedhandler)]"
  syntax:
    content: public System.Windows.Input.ICommand Command { get; set; }
    return:
      type: System.Windows.Input.ICommand
      description: "Ehhez a kötéshez társított parancsot."
  overload: System.Windows.Input.CommandBinding.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.Executed
  id: Executed
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: Executed
  nameWithType: CommandBinding.Executed
  fullName: System.Windows.Input.CommandBinding.Executed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Akkor következik be, amikor ez a parancs tartozó <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> hajt végre."
  remarks: "Ha egy <xref:System.Windows.Input.RoutedCommand>hajt végre, riasztást a <xref:System.Windows.Input.CommandBinding.PreviewExecuted>esemény a parancs célszámítógépen.</xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.RoutedCommand>  Ha a <xref:System.Windows.Input.CommandBinding.PreviewExecuted>esemény nem kezelik, a végrehajtott egy esemény jelenik meg a parancs célszámítógépen.</xref:System.Windows.Input.CommandBinding.PreviewExecuted>  Ha a parancs céljának egy <xref:System.Windows.Input.CommandBinding>az adott parancs, a végrehajtott kezelő, amely <xref:System.Windows.Input.CommandBinding>nevezik.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Ha a parancs a célhoz nem tartozik egy <xref:System.Windows.Input.CommandBinding>, amely az adott parancs a végrehajtott esemény be egy elem, amelynek keresése elem fában buborékok egy <xref:System.Windows.Input.CommandBinding>és a parancshoz tartozó.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Ha egy <xref:System.Windows.Input.CommandBinding>nem található, a parancs nem kezeli.</xref:System.Windows.Input.CommandBinding>      <a name=&quot;routedEventInfo_Executed&quot;></a>## Irányított események adatait |||   |-|-|   | Alkalmazásazonosító mezőben |} <xref:System.Windows.Input.CommandManager.ExecutedEvent>|   | Útválasztási stratégia |} Propagálása felfelé |}   | Delegált |} <xref:System.Windows.Input.ExecutedRoutedEventHandler>|      -A megfelelő bújtatás esemény <xref:System.Windows.Input.CommandBinding.PreviewExecuted>.</xref:System.Windows.Input.CommandBinding.PreviewExecuted> </xref:System.Windows.Input.ExecutedRoutedEventHandler> </xref:System.Windows.Input.CommandManager.ExecutedEvent>"
  example:
  - "The following example creates a <xref:System.Windows.Input.CommandBinding> that maps an <xref:System.Windows.Input.ExecutedRoutedEventHandler> and a <xref:System.Windows.Input.CanExecuteRoutedEventArgs> handler to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.  \n  \n [!code-xml[commandwithhandler#CommandHandlerCommandBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlercommandbinding)]  \n  \n [!code-cs[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerbindinginit)]\n [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerbindinginit)]  \n  \n The following shows the <xref:System.Windows.Input.ExecutedRoutedEventHandler> which creates a <xref:System.Windows.MessageBox> when the command is executed.  \n  \n [!code-cs[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/csharp/commandWithHandler/Window1.xaml.cs#commandhandlerexecutedhandler)]\n [!code-vb[commandWithHandler#CommandHandlerExecutedHandler](~/add/codesnippet/visualbasic/commandWithHandler/Window1.xaml.vb#commandhandlerexecutedhandler)]"
  syntax:
    content: public event System.Windows.Input.ExecutedRoutedEventHandler Executed;
    return:
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.PreviewCanExecute
  id: PreviewCanExecute
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: PreviewCanExecute
  nameWithType: CommandBinding.PreviewCanExecute
  fullName: System.Windows.Input.CommandBinding.PreviewCanExecute
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Akkor következik be, amikor ez a parancs tartozó <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> indít el egy ellenőrzést annak meghatározásához, hogy a parancs az aktuális parancs cél hajtható végre."
  remarks: "Ha a <xref:System.Windows.Input.RoutedCommand.CanExecute%2A>metódust egy <xref:System.Windows.Input.RoutedCommand>nevezik, az esemény jelenik meg a parancs célszámítógépen, ha a parancs céljának PreviewCanExecute egy <xref:System.Windows.Input.CommandBinding>ahhoz, hogy a parancs.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.RoutedCommand.CanExecute%2A> Ezt követően a <xref:System.Windows.Input.CommandBinding.CanExecute>, amelyek kezelője <xref:System.Windows.Input.CommandBinding>nevezik.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.CanExecute>  Ha a parancs a célhoz nem tartozik egy <xref:System.Windows.Input.CommandBinding>a parancs a <xref:System.Windows.Input.CommandBinding.CanExecute>esemény buborékok össze a elem fa keres egy elem, amely rendelkezik egy <xref:System.Windows.Input.CommandBinding>és a parancshoz tartozó.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CommandBinding>  Ha az esemény nem kezelt, a <xref:System.Windows.Input.CommandBinding.CanExecute>egy esemény jelenik meg.</xref:System.Windows.Input.CommandBinding.CanExecute>      <a name=&quot;routedEventInfo_PreviewCanExecute&quot;></a>## Irányított események adatait |||   |-|-|   | Alkalmazásazonosító mezőben |} <xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>|   | Útválasztási stratégia |} Bújtatás |}   | Delegált |} <xref:System.Windows.Input.CanExecuteRoutedEventHandler>|      -A megfelelő kísérlet esemény <xref:System.Windows.Input.CommandBinding.CanExecute>.</xref:System.Windows.Input.CommandBinding.CanExecute> </xref:System.Windows.Input.CanExecuteRoutedEventHandler> </xref:System.Windows.Input.CommandManager.PreviewCanExecuteEvent>"
  syntax:
    content: public event System.Windows.Input.CanExecuteRoutedEventHandler PreviewCanExecute;
    return:
      type: System.Windows.Input.CanExecuteRoutedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.CommandBinding.PreviewExecuted
  id: PreviewExecuted
  parent: System.Windows.Input.CommandBinding
  langs:
  - csharp
  name: PreviewExecuted
  nameWithType: CommandBinding.PreviewExecuted
  fullName: System.Windows.Input.CommandBinding.PreviewExecuted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Akkor következik be, amikor ez a parancs tartozó <xref href=&quot;System.Windows.Input.CommandBinding&quot;> </xref> hajt végre."
  remarks: "Ha egy <xref:System.Windows.Input.RoutedCommand>végrehajtása során, a parancs célszámítógépen a PreviewExecuted esemény riasztást.</xref:System.Windows.Input.RoutedCommand>  Ha a parancs céljának egy <xref:System.Windows.Input.CommandBinding>a parancs a PreviewExecuted, amelyek kezelője <xref:System.Windows.Input.CommandBinding>nevezik.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Ha a parancs a célhoz nem tartozik egy <xref:System.Windows.Input.CommandBinding>ahhoz, hogy a parancs a PreviewExecuted esemény alagutak le a elem fa keres egy elem, amely rendelkezik egy <xref:System.Windows.Input.CommandBinding>és a parancshoz tartozó.</xref:System.Windows.Input.CommandBinding> </xref:System.Windows.Input.CommandBinding>  Az előnézet esemény nem kezelt, ha a <xref:System.Windows.Input.CommandBinding.Executed>egy esemény jelenik meg a parancs célon.</xref:System.Windows.Input.CommandBinding.Executed>      <a name=&quot;routedEventInfo_PreviewExecuted&quot;></a>## Irányított események adatait |||   |-|-|   | Alkalmazásazonosító mezőben |} <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>|   | Útválasztási stratégia |} Bújtatás |}   | Delegált |} <xref:System.Windows.Input.ExecutedRoutedEventHandler>|      -A megfelelő kísérlet esemény <xref:System.Windows.Input.CommandBinding.Executed>.</xref:System.Windows.Input.CommandBinding.Executed> </xref:System.Windows.Input.ExecutedRoutedEventHandler> </xref:System.Windows.Input.CommandManager.PreviewExecutedEvent>"
  syntax:
    content: public event System.Windows.Input.ExecutedRoutedEventHandler PreviewExecuted;
    return:
      type: System.Windows.Input.ExecutedRoutedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.CommandBinding.#ctor
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding()
  nameWithType: CommandBinding.CommandBinding()
  fullName: System.Windows.Input.CommandBinding.CommandBinding()
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand)
  nameWithType: CommandBinding.CommandBinding(ICommand)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand)
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler)
- uid: System.Windows.Input.ExecutedRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: ExecutedRoutedEventHandler
  nameWithType: ExecutedRoutedEventHandler
  fullName: System.Windows.Input.ExecutedRoutedEventHandler
- uid: System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  nameWithType: CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
  fullName: System.Windows.Input.CommandBinding.CommandBinding(ICommand,ExecutedRoutedEventHandler,CanExecuteRoutedEventHandler)
- uid: System.Windows.Input.CanExecuteRoutedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: CanExecuteRoutedEventHandler
  nameWithType: CanExecuteRoutedEventHandler
  fullName: System.Windows.Input.CanExecuteRoutedEventHandler
- uid: System.Windows.Input.CommandBinding.CanExecute
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CanExecute
  nameWithType: CommandBinding.CanExecute
  fullName: System.Windows.Input.CommandBinding.CanExecute
- uid: System.Windows.Input.CommandBinding.Command
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Command
  nameWithType: CommandBinding.Command
  fullName: System.Windows.Input.CommandBinding.Command
- uid: System.Windows.Input.CommandBinding.Executed
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Executed
  nameWithType: CommandBinding.Executed
  fullName: System.Windows.Input.CommandBinding.Executed
- uid: System.Windows.Input.CommandBinding.PreviewCanExecute
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: PreviewCanExecute
  nameWithType: CommandBinding.PreviewCanExecute
  fullName: System.Windows.Input.CommandBinding.PreviewCanExecute
- uid: System.Windows.Input.CommandBinding.PreviewExecuted
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: PreviewExecuted
  nameWithType: CommandBinding.PreviewExecuted
  fullName: System.Windows.Input.CommandBinding.PreviewExecuted
- uid: System.Windows.Input.CommandBinding.#ctor*
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: CommandBinding
  nameWithType: CommandBinding.CommandBinding
- uid: System.Windows.Input.CommandBinding.Command*
  parent: System.Windows.Input.CommandBinding
  isExternal: false
  name: Command
  nameWithType: CommandBinding.Command
