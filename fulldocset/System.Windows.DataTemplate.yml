### YamlMime:ManagedReference
items:
- uid: System.Windows.DataTemplate
  id: DataTemplate
  children:
  - System.Windows.DataTemplate.#ctor
  - System.Windows.DataTemplate.#ctor(System.Object)
  - System.Windows.DataTemplate.DataTemplateKey
  - System.Windows.DataTemplate.DataType
  - System.Windows.DataTemplate.Triggers
  - System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: DataTemplate
  nameWithType: DataTemplate
  fullName: System.Windows.DataTemplate
  type: Class
  summary: "Leírja egy objektumot visual szerkezetét."
  remarks: "Egy DataTemplate használatával adja meg a képi megjelenítés a adatok objektumok. DataTemplate objektumok különösen hasznosak meg kötésekor egy <xref:System.Windows.Controls.ItemsControl>, mint egy <xref:System.Windows.Controls.ListBox>egy egész gyűjteményre.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.ItemsControl> Részletes útmutatást nélkül egy <xref:System.Windows.Controls.ListBox>jelenít meg a gyűjtemény az objektumok karakterláncos ábrázolása.</xref:System.Windows.Controls.ListBox> Ebben az esetben egy DataTemplate segítségével az adatok objektumok megjelenítését. A DataTemplate tartalmának a adatobjektumainak visual szerkezete válik.       Egy részletes ismertető témakörben található [Templating – áttekintés](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a DataTemplate inline. The DataTemplate specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>. In this example, the data object is a class called `Task`. Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.  \n  \n [!code-xml[DataTemplatingIntro_snip#Inline](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#inline)]  \n  \n It is more common to define a DataTemplate in the resources section so it can be a reusable object, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  \n[!code-xml[DataTemplatingIntro_snip#AsResource](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#asresource)]  \n[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  \n  \n Now you can use `myTaskTemplate` as a resource, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#MyTaskTemplate](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#mytasktemplate)]  \n  \n For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)."
  syntax:
    content: >-
      [System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")]

      public class DataTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> osztály."
  syntax:
    content: public DataTemplate ();
    parameters: []
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> és a megadott osztály <xref:System.Windows.DataTemplate.DataType*>tulajdonság.</xref:System.Windows.DataTemplate.DataType*>"
  remarks: "Tekintse meg az osztály nevét, használja a [x: típus Kódkiterjesztés](~/add/includes/ajax-current-ext-md.md). Ha a sablon az célja, hogy [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] adatok, azt a karakterláncot, amely az adatok a címke nevét jelöli."
  syntax:
    content: public DataTemplate (object dataType);
    parameters:
    - id: dataType
      type: System.Object
      description: "Ha a sablon objektum adatai számára készült, akkor az objektum nevét."
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataTemplateKey
  id: DataTemplateKey
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Az alapértelmezett kulcsa lekérdezi a <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  remarks: "Ha nincs megadva a [x: Key direktíva](~/add/includes/ajax-current-ext-md.md) a egy <xref:System.Windows.DataTemplate>szerepel egy <xref:System.Windows.ResourceDictionary>, a DataTemplateKey kulcsként.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.DataTemplate>"
  syntax:
    content: public object DataTemplateKey { get; }
    return:
      type: System.Object
      description: "Az alapértelmezett kulcsa a <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataType
  id: DataType
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja a típusát, amelyekre a megadott <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> készült."
  remarks: "Ez a tulajdonság nagyon hasonlít a <xref:System.Windows.Style.TargetType%2A> <xref:System.Windows.Style>osztály</xref:System.Windows.Style> tulajdonsága</xref:System.Windows.Style.TargetType%2A> Ha megadta Ez a tulajdonság típusának megadása nélkül egy `x:Key`, a <xref:System.Windows.DataTemplate>automatikusan alkalmazva lesz az adott típusú adatok objektum.</xref:System.Windows.DataTemplate> Vegye figyelembe, hogy ha így tesz, amely a `x:Key` implicit módon be van állítva. Ezért ha ez <xref:System.Windows.DataTemplate>egy `x:Key` érték, a implicit mérvadóak `x:Key` és a <xref:System.Windows.DataTemplate>automatikusan nem alkalmazandó.</xref:System.Windows.DataTemplate> </xref:System.Windows.DataTemplate>       Vegye figyelembe azt is, ha köti a <xref:System.Windows.Controls.ContentControl>gyűjteményének `Task` objektumok, a <xref:System.Windows.Controls.ContentControl>nem használja a <xref:System.Windows.DataTemplate>automatikusan.</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Controls.ContentControl> Ez azért, mert a kötés a egy <xref:System.Windows.Controls.ContentControl>segítségével különböztetheti meg egymástól, hogy a teljes gyűjteményt vagy az egyes objektumok kötni kívánt további információra van szüksége.</xref:System.Windows.Controls.ContentControl> Ha a <xref:System.Windows.Controls.ContentControl>nyomon követéséhez a kijelölés egy <xref:System.Windows.Controls.ItemsControl>típusa, beállíthatja a <xref:System.Windows.Data.Binding.Path%2A>tulajdonsága a <xref:System.Windows.Controls.ContentControl>kötése &quot;`/`&quot; annak jelzésére, hogy érdekli, az aktuális elem.</xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Data.Binding.Path%2A> </xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ContentControl> Egy vonatkozó példáért lásd: [Útmutató: a gyűjtemény és a megjelenített információk alapján kiválasztása kötést létrehozni](~/add/includes/ajax-current-ext-md.md). Ellenkező esetben meg kell adnia a <xref:System.Windows.DataTemplate>explicit módon úgy, hogy a <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>tulajdonság.</xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> </xref:System.Windows.DataTemplate>       A DataType tulajdonság akkor különösen hasznos, ha rendelkezik egy <xref:System.Windows.Data.CompositeCollection>különböző típusú adatok objektumok.</xref:System.Windows.Data.CompositeCollection>       Ha ez a tulajdonság egy XML-elem, amely nincs az alapértelmezett névtérben célozza, akkor meg kell előznie az elem nevét, a névtér vagy egy névteret jelölő. XML-keresztül közzétett LINQ XML-, a névteret kell használni, megjelenik egy zárójel escape-karaktersorozatot utasításnak: ```xaml   <DataTemplate DataType=&quot;{}{http://myNamespace}Details&quot;>   ``` For XML XPath keresztül közzétett, az elem neve előtt egy példánya által létrehozott névtér jelzésével <xref:System.Windows.Data.XmlNamespaceMapping>: ```xaml   <DataTemplate DataType=&quot;mn:Details&quot;>   ``` <a name=&quot;xamlAttributeUsage_DataType&quot;> </a> ## XAML attribútumok használata ```   <object DataType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_DataType&quot;> </a> ## XAML értékek *typeName* célja, hogy a sablon Objektumadatok, ha ez a tulajdonság tartalmazza az objektum (karakterláncként) nevét.            </xref:System.Windows.Data.XmlNamespaceMapping> Tekintse meg az osztály nevét, használja a [x: típus Kódkiterjesztés](~/add/includes/ajax-current-ext-md.md). Ha a sablon az célja, hogy [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] adatokat, ez a tulajdonság az XML-elem nevét tartalmazza. Lásd: az XML-elem nem alapértelmezett névtér megadásával kapcsolatos részletek dokumentáció megjegyzés."
  syntax:
    content: public object DataType { get; set; }
    return:
      type: System.Object
      description: "Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.Triggers
  id: Triggers
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi a eseményindítók gyűjteménye, amelyek tulajdonságértékek alkalmazni, vagy egy vagy több feltétel alapján műveletek végrehajtására."
  remarks: "Eseményindítók belül egy sablon létrehozásakor kell a Setter elemek, illetve a beállítás, amelyek az adatok sablon hatókörén belül. Ellenkező esetben lehet megfelelőbbek, amelynek célja az adatokat tartalmazó stílus használatával eseményindítók létrehozásához. Például, ha köti a <xref:System.Windows.Controls.ListBox>, a tárolók azok <xref:System.Windows.Controls.ListBoxItem>objektumok.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox> Ha eseményindítók segítségével állítsa be a tulajdonságokat, amelyek nincsenek hatókörén belül a <xref:System.Windows.DataTemplate>, akkor elképzelhető, hogy a megfelelő létrehozásához egy <xref:System.Windows.Controls.ListBoxItem>stílus és eseményindítók belül a stílus létrehozása.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.DataTemplate> További információkért lásd: mi tartozik egy DataTemplate? az a [Templating – áttekintés](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Ez a tulajdonság csak akkor állítható [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] gyűjtemény szintaxist révén, vagy a gyűjtemény objektumra való hozzáférés és a különböző módszerekkel például hozzáadása. A gyűjtemény objektumra maga eléréséhez a tulajdonság csak olvasható, magát a gyűjteményt írható-olvasható.      <a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a>## XAML tulajdonság elemek használata ```   <object>     <object.Triggers>       OneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> ## XAML értékek *OneOrMoreTriggers* nulla vagy több <xref:System.Windows.TriggerBase>objektumok.</xref:System.Windows.TriggerBase>      "
  example:
  - "The following <xref:System.Windows.DataTemplate> demonstrates the use of the Triggers property.  \n  \n [!code-xml[DataBindingLab#AuctionItemDataTemplate](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemdatatemplate)]  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Egy eseményindító objektumok gyűjteménye. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ellenőrzi a sablonalapú szülő meghatározott szabályok alapján."
  remarks: "A módszert használja a következő szabályokat: - a `templatedParent` egy null értékű <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement> kell lennie.      -A <xref:System.Windows.DataTemplate> <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> kell alkalmazni</xref:System.Windows.DataTemplate>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "Az elem a sablont alkalmaz."
  overload: System.Windows.DataTemplate.ValidateTemplatedParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.Windows.DataTemplate.#ctor
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DataTemplate.DataTemplateKey
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.DataTemplate.#ctor*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate
  nameWithType: DataTemplate.DataTemplate
- uid: System.Windows.DataTemplate.DataTemplateKey*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
- uid: System.Windows.DataTemplate.ValidateTemplatedParent*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: DataTemplate.ValidateTemplatedParent
