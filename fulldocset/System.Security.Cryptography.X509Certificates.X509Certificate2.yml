### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  id: X509Certificate2
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  - System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  langs:
  - csharp
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  type: Class
  summary: "Egy X.509 tanúsítvány jelöli."
  remarks: "A nemzetközi szabványügyi (ISO) munkacsoportok származó X.509 szerkezetét. Ez a struktúra segítségével különféle adatokat, beleértve az identitás, jogosultság és jogosult attribútumok (engedélyek, kor, nemét, hely, kapcsolat és így tovább) jelöl. Annak ellenére, hogy az ISO-paramétereknek legrészletesebb szerkezetére magát, a X509Certificate2 osztály célja, hogy a meghatározott előírásoknak, az Internet Engineering Task Force (IETF) nyilvános kulcsokra épülő infrastruktúrát, X.509 (PKIX) munkacsoport által kibocsátott használati forgatókönyvek a modell. A legrészletesebb ezen specifikációk az RFC 3280 &quot;[tanúsítvány és visszavont tanúsítványok listáját (CRL) Tanúsítványprofil](http://go.microsoft.com/fwlink/?LinkId=45286).&quot;      > [!IMPORTANT] > Kezdve a [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)], ez valósít meg írja be a <xref:System.IDisposable>felületet.</xref:System.IDisposable> Ha befejezte a típussal, ezért fel kell azt közvetlenül vagy közvetve. Arra, hogy a típus közvetlenül, hívja az <xref:System.IDisposable.Dispose%2A>metódust egy `try` / `catch` blokk.</xref:System.IDisposable.Dispose%2A> Eltávolítása után közvetve, használjon egy nyelvi szerkezet például `using` (a C#) vagy `Using` (a Visual Basic nyelvben). A &quot;Használatával az objektum, amely megvalósítja IDisposable&quot; szakaszában talál további információt a <xref:System.IDisposable>felületet a témakörben.</xref:System.IDisposable>   >> Céloz alkalmazások esetében a [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] és korábbi verziókban a X509Certificate2 osztály nem valósítja meg a <xref:System.IDisposable>felületet, és így nem kell egy `Dispose` metódus.</xref:System.IDisposable>"
  example:
  - "The following example demonstrates how to use an X509Certificate2 object to encrypt and decrypt a file.  \n  \n [!code-vb[X509Certificate2#1](~/add/codesnippet/visualbasic/t-system.security.crypto_122_1.vb)]\n [!code-cs[X509Certificate2#1](~/add/codesnippet/csharp/t-system.security.crypto_122_1.cs)]  \n  \n The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/t-system.security.crypto_122_2.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/t-system.security.crypto_122_2.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/t-system.security.crypto_122_2.vb)]"
  syntax:
    content: 'public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate'
  inheritance:
  - System.Object
  - System.Security.Cryptography.X509Certificates.X509Certificate
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2()
  nameWithType: X509Certificate2.X509Certificate2()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2()
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály."
  remarks: "Ez a konstruktor létrehoz egy üres <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum, szemben a más konstruktorok ehhez az osztályhoz, amelyek egy bájttömböt, mutató vagy tanúsítványfájl Tanúsítványadatok.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/m-system.security.crypto_122_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/m-system.security.crypto_122_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/m-system.security.crypto_122_1.cpp)]"
  syntax:
    content: public X509Certificate2 ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[])
  nameWithType: X509Certificate2.X509Certificate2(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály használatával egy bájttömböt adatait."
  remarks: "Ez a konstruktor létrehoz egy új <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum egy bájttömbben a tanúsítvány adatait használja.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> A bájttömb (DER) kódolású bináris vagy Base64 kódolású X.509 adatok lehetnek. A bájttömb is lehet a PKCS7 (Authenticode) aláírt fájlt. az objektum létrehozásához használt az aláíró tanúsítványt.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(IntPtr)
  nameWithType: X509Certificate2.X509Certificate2(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(IntPtr)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály egy nem felügyelt leíró használatával."
  remarks: "Ez a konstruktor létrehoz egy új <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum egy leíró használatával a Microsoft kriptográfiai API tanúsítványkörnyezet `PCCERT_CONTEXT`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Vegye figyelembe, hogy ez a konstruktor közvetlen hívónak engedélyre van szüksége, nem felügyelt kód.      > [!IMPORTANT] > A konstruktor a tanúsítványkörnyezet másolatát hozza létre. Nem feltételezik, hogy a környezet struktúra a konstruktornak átadott érvényes; Előfordulhat, hogy jelentek. Az aktuális másolatát beszerezheti `PCCERT_CONTEXT` a struktúra a <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>tulajdonság, de az nem érvényes az élettartama során csak a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>"
  syntax:
    content: public X509Certificate2 (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "A nem felügyelt kód tanúsítványkörnyezet mutató hivatkozások. A C struktúra neve <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(X509Certificate)
  nameWithType: X509Certificate2.X509Certificate2(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(X509Certificate)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály használatával egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektum."
  remarks: "Ezzel a módszerrel hoz létre egy új példányt a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>osztály használatával egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate>objektum.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> objektum."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String)
  nameWithType: X509Certificate2.X509Certificate2(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály használatával egy tanúsítvány fájlneve."
  remarks: "Ez a konstruktor létrehoz egy új <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>egy tanúsítvány fájlneve objektumba.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Támogatja a bináris kódolás (DER) vagy az alkalmazás Base64 kódolást.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítványfájl neve."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  id: '#ctor(System.Byte[],System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],SecureString)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály egy bájttömböt és jelszó használatával."
  remarks: "Ez a konstruktor használt PKCS12 (PFX) fájlok, amelyek tartalmazzák a tanúsítvány titkos kulcsa. Ez a helyes jelszót rendelkező konstruktor hívása visszafejti a titkos kulcsot, és menti a kulcstároló.      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, System.Security.SecureString password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
    - id: password
      type: System.Security.SecureString
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],String)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály egy bájttömböt és jelszó használatával."
  remarks: "Ez a konstruktor létrehoz egy új <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum, egy bájttömböt és a tanúsítvány adatainak eléréséhez szükséges jelszót.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> A tanúsítvány titkos kulcsot tartalmazó PKCS12 (PFX) fájlokkal használható. Ez a helyes jelszót rendelkező konstruktor hívása visszafejti a titkos kulcsot, és menti a kulcstároló.      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, string password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
    - id: password
      type: System.String
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály a megadott szerializálási és adatfolyam környezet adatainak használatával."
  syntax:
    content: protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Az új deszerializálásához szükséges szerializálási adatokat <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Az adatfolyam nem deszerializálhatók a forrás környezetfüggő információt."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,SecureString)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály egy tanúsítvány fájlneve és jelszó használatával."
  remarks: "Ez a konstruktor használt PKCS12 (PFX) fájlok, amelyek tartalmazzák a tanúsítvány titkos kulcsa. Ez a helyes jelszót rendelkező konstruktor hívása visszafejti a titkos kulcsot, és menti a kulcstároló.      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (string fileName, System.Security.SecureString password);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítványfájl neve."
    - id: password
      type: System.Security.SecureString
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,String)
  nameWithType: X509Certificate2.X509Certificate2(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály használatával egy tanúsítvány fájlneve és a tanúsítvány eléréséhez használt jelszó."
  remarks: "Ez a konstruktor létrehoz egy új <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektumba a tanúsítvány fájlneve és a tanúsítvány eléréséhez szükséges jelszót.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> A tanúsítvány titkos kulcsot tartalmazó PKCS12 (PFX) fájlokkal használható. Ez a helyes jelszót rendelkező konstruktor hívása visszafejti a titkos kulcsot, és menti a kulcstároló.      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName, string password);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítványfájl neve."
    - id: password
      type: System.String
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály használatával egy bájttömböt, jelszó és a kulcstároló jelzőt."
  remarks: "Ez a konstruktor használt PKCS12 (PFX) fájlok, amelyek tartalmazzák a tanúsítvány titkos kulcsa. Ez a helyes jelszót rendelkező konstruktor hívása visszafejti a titkos kulcsot, és menti azt, hogy a Microsoft kriptográfiai API kriptográfiai szolgáltató (CSP).      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
    - id: password
      type: System.Security.SecureString
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "A számbavétel tagértékeinek értékeket, hogy a vezérlő, hol és hogyan a tanúsítvány importálásához."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály használatával egy bájttömböt, jelszó és a kulcstároló jelzőt."
  remarks: "Ez a konstruktor létrehoz egy új <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>byte használó tömbben, a tanúsítvány-adatok és a kulcstároló jelzőt eléréséhez szükséges jelszót.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> A tanúsítvány titkos kulcsot tartalmazó PKCS12 (PFX) fájlokkal használható. Ez a helyes jelszót rendelkező konstruktor hívása visszafejti a titkos kulcsot, és menti azt, hogy a Microsoft kriptográfiai API kriptográfiai szolgáltató (CSP).      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `rawData`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
    - id: password
      type: System.String
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "A számbavétel tagértékeinek értékeket, hogy a vezérlő, hol és hogyan a tanúsítvány importálásához."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály használatával egy tanúsítvány fájlneve, jelszó és a kulcstároló jelzőt."
  remarks: "Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítványfájl neve."
    - id: password
      type: System.Security.SecureString
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "A számbavétel tagértékeinek értékeket, hogy a vezérlő, hol és hogyan a tanúsítvány importálásához."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály használatával tanúsítványfájl neve, a tanúsítványt, és a kulcstároló jelzőt eléréséhez használt jelszót."
  remarks: "Ez a konstruktor létrehoz egy új <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>tanúsítványfájl használatával objektum nevével, a tanúsítványt, és a kulcstároló jelzőt eléréséhez szükséges jelszót.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be.       Ha létrehoz egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>tanúsítvány egy PKCS7 aláírt fájl áruház megadásával `fileName`, a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>jön létre az aláíró tanúsítvány a tárolóban, nem pedig az összes, a tanúsítványok a tárolóban.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítványfájl neve."
    - id: password
      type: System.String
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "A számbavétel tagértékeinek értékeket, hogy a vezérlő, hol és hogyan a tanúsítvány importálásához."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány hiba történik. Például:-a tanúsítványfájl nem létezik.      – A tanúsítvány érvénytelen.      – A tanúsítvány jelszava helytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  id: Archived
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Archived
  nameWithType: X509Certificate2.Archived
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi vagy beállítja a érték jelzi, hogy egy X.509 tanúsítvány archiválva legyen."
  remarks: "Ez a tulajdonság csak egy tanúsítványt egy tároló társított be. Ha a tulajdonság van beállítva, és hozzáadta a tanúsítványt a tanúsítványtárolóba, az érték megőrződjenek. A tulajdonság be van egy tárolójából beolvasni egy tanúsítványt, ha az érték azonnal megőrződjenek.       Egy X.509 áruházban archivált tanúsítványok nem szerepelnek a visszaadott a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>objektum, kivéve, ha az archivált tulajdonsága `true`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> Nincs fizikai archiválási tevékenység Archived érték beállításához vagy következik be."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_26_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_26_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public bool Archived { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tanúsítvány archiválásakor <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha a tanúsítvány nem archiválható.."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány nem olvasható."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  id: Extensions
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Extensions
  nameWithType: X509Certificate2.Extensions
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a gyűjteménye <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Extension&quot;> </xref> objektumok."
  remarks: "Az X.509 v3 tanúsítvány formátuma meghatározott a bővítmények lehetővé teszi a a tanúsítvány szereplő adatok. Bővítmények számos által meghatározott ISO az X.509 v3-definícióban, valamint az RFC 3280 PKIX &quot;[tanúsítvány és visszavont tanúsítványok listáját (CRL) Tanúsítványprofil](http://go.microsoft.com/fwlink/?LinkId=45286).&quot; Közös bővítmények kulcshasználat kapcsolatos információk (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), kulcs azonosítók (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), tanúsítvány-házirendek, visszavonási információkat (CRL elérési helye bővítmény) és egyéb felhasználásra.</xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> </xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_97_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_97_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_97_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
      description: "Egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ExtensionCollection&quot;> </xref> objektum."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány nem olvasható."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi vagy beállítja a tanúsítvánnyal társított alias."
  remarks: "Rövid nevek található X.509 tanúsítvány beállítható tulajdonságai. Szolgálnak, hogy egy felhasználó aliasok társítandó tanúsítványokat, így azok könnyen azonosítható legyen.       Ha az egyszerű nevet nem létezik-e a tanúsítvány, egy üres karakterlánc (&quot;&quot;) adja vissza."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_16_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_16_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_16_1.vb)]"
  syntax:
    content: public string FriendlyName { get; set; }
    return:
      type: System.String
      description: "A tanúsítvány rövid neve."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány nem olvasható."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  id: GetCertContentType(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetCertContentType(Byte[])
  nameWithType: X509Certificate2.GetCertContentType(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy bájttömböt lévő tanúsítvány típusát jelöli."
  remarks: "Ez a módszer lehetővé teszi típusának megfelelő tanúsítványtároló egy fájlban felderítése."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/a34c0539-d23c-4bd1-9b29-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/a34c0539-d23c-4bd1-9b29-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/a34c0539-d23c-4bd1-9b29-_1.cpp)]"
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> objektum."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rawData</code>egy nulla hosszúságú, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  id: GetCertContentType(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetCertContentType(String)
  nameWithType: X509Certificate2.GetCertContentType(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(String)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Azt jelzi, hogy a fájlban található tanúsítvány típusát."
  remarks: "Ez a módszer lehetővé teszi típusának megfelelő tanúsítványtároló egy fájlban felderítése."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítványfájl neve."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> objektum."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  id: GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetNameInfo(X509NameType,Boolean)
  nameWithType: X509Certificate2.GetNameInfo(X509NameType,Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(X509NameType,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a tulajdonos és a kiállító nevét a tanúsítványból."
  remarks: "Ez a metódus mindig használandó elemzése a tanúsítványt, mivel több helyen is megtalálható sok név-érték helyett. Ezzel a módszerrel biztosítja, hogy a megfelelő névre van-e vissza."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/3126ffa7-3ffc-4612-bfb2-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/3126ffa7-3ffc-4612-bfb2-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/3126ffa7-3ffc-4612-bfb2-_1.cpp)]"
  syntax:
    content: public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);
    parameters:
    - id: nameType
      type: System.Security.Cryptography.X509Certificates.X509NameType
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509NameType&quot;> </xref> a tárgy értéke."
    - id: forIssuer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátó neve; tartalmazza Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "A tanúsítvány neve."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  id: HasPrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum tartalmazza a titkos kulcsot."
  syntax:
    content: public bool HasPrivateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum tartalmazza a titkos kulcs; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány környezet érvénytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[])
  nameWithType: X509Certificate2.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Kitölti egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum egy bájttömböt származó adatokkal."
  remarks: "Ez a módszer használható egy X.509 tanúsítvány nyers bájt tömbje és feltölti a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>a hozzájuk társított értékeket objektum.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Ez a metódus csak egy bájttömböt fogad el, mert csak a szükséges jelszó, beleértve a Base64 kódolású vagy DER kódolású X.509-tanúsítvány vagy PFX/PKCS12 tanúsítvány tanúsítványtípusok használható. Vegye figyelembe, hogy a tanúsítvány PFX/PKCS12 tartalmazhatnak egynél több tanúsítvány. Ebben az esetben társított titkos kulcsot az első tanúsítványt használja, vagy ha nincs titkos kulcs található, az első tanúsítványt használja."
  syntax:
    content: public override void Import (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String)
  nameWithType: X509Certificate2.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Kitölti egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum tanúsítványfájl származó információkkal."
  remarks: "Ez a módszer a például egy fájl, amely egy X.509 tanúsítvány jelöl, és feltölti a .cer kiterjesztésű tanúsítványfájlt, használja a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum a fájl tartalmazza a tanúsítvánnyal.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Ez a metódus több tanúsítványtípusok, beleértve a Base64 kódolású vagy DER kódolású X.509-tanúsítványokat, PFX/PKCS12 tanúsítványokat és aláíró tanúsítványok például Authenticode használható. Vegye figyelembe, hogy a tanúsítvány PFX/PKCS12 tartalmazhatnak egynél több tanúsítvány. Ebben az esetben társított titkos kulcsot az első tanúsítványt használja, vagy ha nincs titkos kulcs található, az első tanúsítványt használja."
  syntax:
    content: public override void Import (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítvány neve."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Kitölti egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum, egy bájttömböt, jelszó és a kulcstároló jelzőt adatait használó."
  remarks: "Ezt a módszert tanúsítványtípusok például Base64-kódolású vagy DER kódolású X.509-tanúsítványokat, vagy PFX/PKCS12 tanúsítványokat. Vegye figyelembe, hogy a tanúsítvány PFX/PKCS12 tartalmazhatnak egynél több tanúsítvány. Ebben az esetben társított titkos kulcsot az első tanúsítványt használja, vagy ha nincs titkos kulcs található, az első tanúsítványt használja.      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be."
  syntax:
    content: public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
    - id: password
      type: System.Security.SecureString
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "A számbavétel tagértékeinek értékeket, hogy a vezérlő, hol és hogyan a tanúsítvány importálásához."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Kitölti egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum, egy bájttömböt, jelszó és jelzők adatait használó importálásáról a titkos kulcs meghatározására."
  remarks: "Ez a módszer segítségével feltölti egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektumba jelszót a tanúsítványhoz, a bájttömb által képviselt.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> A <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>érték hol és hogyan használható a titkos kulcs importálása.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>       Ezt a módszert egy bájttömböt fogad, és tanúsítványtípusok például Base64-kódolású vagy DER kódolású X.509-tanúsítványokat vagy PFX/PKCS12 tanúsítványok használható. Vegye figyelembe, hogy a tanúsítvány PFX/PKCS12 tartalmazhatnak egynél több tanúsítvány. Ebben az esetben társított titkos kulcsot az első tanúsítványt használja, vagy ha nincs titkos kulcs található, az első tanúsítványt használja.      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/af855297-61a6-47ed-8dcb-_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/af855297-61a6-47ed-8dcb-_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/af855297-61a6-47ed-8dcb-_1.vb)]"
  syntax:
    content: public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Egy X.509 tanúsítvány adatait tartalmazó bájttömb."
    - id: password
      type: System.String
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "A számbavétel tagértékeinek értékeket, hogy a vezérlő, hol és hogyan a tanúsítvány importálásához."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Kitölti egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum a tanúsítványfájlt, jelszó és a kulcstároló jelzőt származó információkkal."
  remarks: '**Biztonsági megjegyzés** egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be.'
  syntax:
    content: public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítványfájl neve."
    - id: password
      type: System.Security.SecureString
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "A számbavétel tagértékeinek értékeket, hogy a vezérlő, hol és hogyan a tanúsítvány importálásához."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Tölti fel az <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum adataival a tanúsítványfájlt, a jelszót, és egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&quot;> </xref> érték."
  remarks: "Ez a módszer használható feltöltése egy <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum adataival a tanúsítványfájlt, a jelszót, és egy <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>érték.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Egy jelszót a forrás kód soha nem merevlemez kód.  Használatával szerelvényből le kell kérni a jelszavakat kódolt a [Ildasm.exe (IL kicsomagoló)](~/add/includes/ajax-current-ext-md.md), hexadecimális szerkesztővel, vagy egyszerűen nyissa meg a szerelvény egy szövegszerkesztőben, például a Notepad.exe be."
  syntax:
    content: public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "A tanúsítványfájl neve."
    - id: password
      type: System.String
      description: "X.509 tanúsítvány adatainak eléréséhez szükséges jelszót."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "A számbavétel tagértékeinek értékeket, hogy a vezérlő, hol és hogyan a tanúsítvány importálásához."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  id: IssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a tanúsítvány kiállítójának megkülönböztető neve."
  remarks: "Ez a tulajdonság a tanúsítványt kiállító hitelesítésszolgáltatót (CA) nevét tartalmazza. A tanúsítvány neve beszerzéséhez használja a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>metódus.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>       A megkülönböztető nevet a tanúsítványnak a tanúsítvány tulajdonosára vagy a kiállító képviselő szöveges alakot. Ez ábrázolását névattribútuma áll (például &quot;CN Nev, OU = = MyOrgUnit, C = US&quot;)."
  example:
  - "The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_20_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_20_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_20_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
      description: "Egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X500DistinguishedName&quot;> </xref> objektum, amely tartalmazza a tanúsítvány kiállítójának neve."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány környezet érvénytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  id: NotAfter
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a dátum a helyi időt, amely után a tanúsítvány hatályát veszti."
  remarks: "Ez a tulajdonság azt jelzi, hogy a lejárat dátumát, amelyen a tanúsítvány érvénytelenné válik."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_116_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_116_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_116_1.vb)]"
  syntax:
    content: public DateTime NotAfter { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>a tanúsítvány lejárati dátuma képviselő objektum.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány nem olvasható."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  id: NotBefore
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a dátum a helyi idő, amikor a tanúsítvány hatályba lép."
  remarks: "Ez a tulajdonság azt jelzi, hogy a dátum, amikor a tanúsítvány hatályba lép."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_85_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_85_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_85_1.vb)]"
  syntax:
    content: public DateTime NotBefore { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>az életbelépési dátum a tanúsítvány képviselő objektum.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány nem olvasható."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  id: PrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> a tanúsítványhoz tartozó titkos kulcs képviselő objektum."
  remarks: "Jelenleg ez a tulajdonság támogatja-e csak RSA vagy a DSA kulcsokat, így adja vissza, vagy egy <xref:System.Security.Cryptography.RSACryptoServiceProvider>vagy egy <xref:System.Security.Cryptography.DSACryptoServiceProvider>objektum.</xref:System.Security.Cryptography.DSACryptoServiceProvider> </xref:System.Security.Cryptography.RSACryptoServiceProvider> Ha a titkos kulcs nélküli a tanúsítvány, adja vissza, `null`.      > [!WARNING] > Megadásával ez a tulajdonság `null` vagy egy másik kulcsot első törlése nélkül, a titkos kulcs fájlja a lemezen marad.       Ezt a tulajdonságot társított titkos kulcs megfelelően törléséhez állítsa be `PersistKeyInCsp` való `false`, majd hívja a <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>metódus.</xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_115_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_115_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_115_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Egy <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> objektum, amely DSA vagy RSA kriptográfiai szolgáltató."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kulcs értéke nem egy RSA vagy a DSA-kulcs, vagy a kulcs nem olvasható."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Az érték a tulajdonság beállítása <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A titkos kulcs kulcsalgoritmus nem támogatott."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "Az X.509 kulcsok nem egyeznek."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kriptográfiai szolgáltatóhoz kulcs <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "A tanúsítványhoz tartozó PublicKey objektum beolvasása."
  remarks: "Ez a tulajdonság adja vissza egy PublicKey objektum, amely tartalmazza az objektumazonosítót (<xref:System.Security.Cryptography.Oid>) a nyilvánoskulcs-képzési algoritmus a ASN.1-kódolású paraméterekkel és a ASN.1 kódolású kulcs értékét képviselő.</xref:System.Security.Cryptography.Oid>       A kulcs megjelölése is beszerezhető egy <xref:System.Security.Cryptography.AsymmetricAlgorithm>objektum PublicKey tulajdonság Vezérlőpultjának.</xref:System.Security.Cryptography.AsymmetricAlgorithm> Ez a tulajdonság támogatja csak RSA vagy a DSA kulcsokat, így adja vissza, vagy egy <xref:System.Security.Cryptography.RSACryptoServiceProvider>vagy egy <xref:System.Security.Cryptography.DSACryptoServiceProvider>objektum, amely a nyilvános kulcsot jelöl.</xref:System.Security.Cryptography.DSACryptoServiceProvider> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_120_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_120_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_120_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.PublicKey
      description: "Egy PublicKey objektum."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kulcs értéke nem egy RSA vagy a DSA-kulcs, vagy a kulcs nem olvasható."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  id: RawData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: RawData
  nameWithType: X509Certificate2.RawData
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a tanúsítványhoz tartozó nyers adatok."
  remarks: ''
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_59_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_59_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_59_1.cpp)]"
  syntax:
    content: public byte[] RawData { get; }
    return:
      type: System.Byte[]
      description: "A, egy bájttömböt a tanúsítványhoz tartozó nyers adatok."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Certificate2.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Állapotát visszaállítja egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> objektum."
  remarks: "Ez a módszer a tanúsítvány állapotának visszaállítására használható. Szabadulnak a tanúsítványhoz tartozó erőforrásokat."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  id: SerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a tanúsítvány sorozatszáma."
  remarks: "A tanúsítvány sorozatszáma az eredeti X.509 protokoll részét képezi. A sorozatszám a tanúsítvány kiállítójának, más néven a tanúsítvány hitelesítésszolgáltatói (CA) által kiadott egyedi szám."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_114_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_114_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_114_1.vb)]"
  syntax:
    content: public string SerialNumber { get; }
    return:
      type: System.String
      description: "A tanúsítvány sorozatszáma."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a tanúsítvány aláírásának létrehozására használt algoritmus."
  remarks: "Az objektumazonosító (<xref:System.Security.Cryptography.Oid>) típusát jelöli a tanúsítvány által használt aláírási algoritmust.</xref:System.Security.Cryptography.Oid>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/6cab3ad3-94fb-4ecd-9a6c-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/6cab3ad3-94fb-4ecd-9a6c-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/6cab3ad3-94fb-4ecd-9a6c-_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.Oid SignatureAlgorithm { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "Az objektum azonosítóját adja vissza (<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>) aláírási algoritmus."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány nem olvasható."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  id: SubjectName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "A tanúsítvány tulajdonosának megkülönböztető nevét lekérése."
  remarks: "A tulajdonos megkülönböztető név esetén a felhasználó a tanúsítvány. A megkülönböztető nevet a tanúsítványnak a tulajdonos képviselő szöveges alakot vagy a tanúsítvány kiállítója. Ez ábrázolását például áll névattribútuma, &quot;CN Nev, OU = = MyOrgUnit, C = US&quot;."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_80_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_80_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_80_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
      description: "Egy <xref href=&quot;System.Security.Cryptography.X509Certificates.X500DistinguishedName&quot;> </xref> objektum, amely a tanúsítvány tulajdonosának nevét jelöli."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány környezet érvénytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  id: Thumbprint
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a tanúsítvány ujjlenyomata."
  remarks: "Az ujjlenyomat dinamikusan generálta az SHA1 algoritmusok, és a tanúsítvány fizikailag nem létezik. Mivel az ujjlenyomata a tanúsítvány egyedi érték, gyakran használt egy adott tanúsítvány található a tanúsítványtárolóban."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_51_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_51_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_51_1.vb)]"
  syntax:
    content: public string Thumbprint { get; }
    return:
      type: System.String
      description: "A tanúsítvány ujjlenyomatát."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: ToString()
  nameWithType: X509Certificate2.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy X.509 tanúsítvány szöveg formátumban jeleníti meg."
  remarks: "Mivel az összes `ToString` módszerek, a kimenet nem feltétlenül egységes megjelenés a .NET-keretrendszer verziója, a metódus eredménye nem elemezhető a tartalomhoz. A tulajdonságok használatát a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum szerezze be a tartalommal kapcsolatos pontos információk, vagy használja a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A>beszerzéséhez a tanúsítvány adatait.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Ez a módszer a tanúsítvány szöveg formátumban jeleníti meg."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/m-system.security.crypto_81_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/m-system.security.crypto_81_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/m-system.security.crypto_81_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A tanúsítvány adatait."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: X509Certificate2.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy X.509 tanúsítvány szöveg formátumban jeleníti meg."
  remarks: "Mivel az összes `ToString` módszerek, a kimenet nem feltétlenül egységes megjelenés a .NET-keretrendszer verziója, a metódus eredménye nem elemezhető a tartalomhoz. A tulajdonságok használatát a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>objektum pontos tájékoztatást kaphat.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Ez a módszer a tanúsítvány szöveg formátumban jeleníti meg. Ha a `verbose` paraméter értéke `true`, a szöveg megjelenítése a nyilvános kulcs, a titkos kulcs és a bővítmények tartalmazza. Ha `verbose` értéke `false`, a szöveg megjelenítése érhetők el az X.509-tanúsítvány, például az ujjlenyomat, a sorozatszám, a tulajdonos és a kiállító nevét és a érvényességi dátumának mezőket tartalmaz."
  example:
  - "The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/38d69126-bcaf-4cee-a89b-_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/38d69126-bcaf-4cee-a89b-_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/38d69126-bcaf-4cee-a89b-_1.vb)]"
  syntax:
    content: public override string ToString (bool verbose);
    parameters:
    - id: verbose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a nyilvános kulcsot, a titkos kulcsot, a bővítmények és a stb; megjelenítéséhez <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> hasonló információk megjelenítéséhez a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> osztály, például az ujjlenyomat, a sorozatszám, a tulajdonos és a kiállító nevét és a stb."
    return:
      type: System.String
      description: "A tanúsítvány adatait."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  id: Verify
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Verify()
  nameWithType: X509Certificate2.Verify()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Egy X.509-lánc alapvető érvényesítési házirenddel érvényesítést végez."
  remarks: "Ez a módszer a tanúsítvány egy egyszerű láncot alkot, és az alap házirend vonatkozik, hogy lánc. Ha módosítania kell a hibával kapcsolatos további információért, érvényesíteni a tanúsítványt közvetlenül használatával a <xref:System.Security.Cryptography.X509Certificates.X509Chain>objektum.</xref:System.Security.Cryptography.X509Certificates.X509Chain>       Vegye figyelembe, hogy az alapértelmezett motor láncolás karakterlánccal bírálható felül az <xref:System.Security.Cryptography.CryptoConfig>osztályhoz.</xref:System.Security.Cryptography.CryptoConfig> A Microsoft Windows Server 2003, az alapértelmezett motor megfelel az RFC3280, ismertetett specifikációjának &quot;[tanúsítvány és visszavont tanúsítványok listáját (CRL) Tanúsítványprofil](http://go.microsoft.com/fwlink/?LinkId=45286).&quot;"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/m-system.security.crypto_98_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/m-system.security.crypto_98_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/m-system.security.crypto_98_1.cpp)]"
  syntax:
    content: public bool Verify ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az érvényesítés sikeres; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha az érvényesítés meghiúsul."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány nem olvasható."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  id: Version
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Version
  nameWithType: X509Certificate2.Version
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Lekérdezi a tanúsítvány X.509 formátumú verziója."
  remarks: "X.509 tanúsítvány több verziója is van. Ez a tulajdonság azonosítja a tanúsítványt használja formátum. Például &quot;3&quot; 3-as verziójú tanúsítványt adott vissza."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_37_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_37_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_37_1.vb)]"
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "A tanúsítvány formátuma."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Version*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A tanúsítvány nem olvasható."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2()
  nameWithType: X509Certificate2.X509Certificate2()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[])
  nameWithType: X509Certificate2.X509Certificate2(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(IntPtr)
  nameWithType: X509Certificate2.X509Certificate2(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(X509Certificate)
  nameWithType: X509Certificate2.X509Certificate2(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String)
  nameWithType: X509Certificate2.X509Certificate2(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],SecureString)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],String)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,SecureString)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,String)
  nameWithType: X509Certificate2.X509Certificate2(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  nameWithType: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Archived
  nameWithType: X509Certificate2.Archived
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Extensions
  nameWithType: X509Certificate2.Extensions
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
- uid: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ExtensionCollection
  nameWithType: X509ExtensionCollection
  fullName: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType(Byte[])
  nameWithType: X509Certificate2.GetCertContentType(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  nameWithType: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType(String)
  nameWithType: X509Certificate2.GetCertContentType(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetNameInfo(X509NameType,Boolean)
  nameWithType: X509Certificate2.GetNameInfo(X509NameType,Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(X509NameType,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509NameType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509NameType
  nameWithType: X509NameType
  fullName: System.Security.Cryptography.X509Certificates.X509NameType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[])
  nameWithType: X509Certificate2.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String)
  nameWithType: X509Certificate2.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
- uid: System.Security.Cryptography.X509Certificates.X500DistinguishedName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X500DistinguishedName
  nameWithType: X500DistinguishedName
  fullName: System.Security.Cryptography.X509Certificates.X500DistinguishedName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
- uid: System.Security.Cryptography.X509Certificates.PublicKey
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: PublicKey
  nameWithType: PublicKey
  fullName: System.Security.Cryptography.X509Certificates.PublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: RawData
  nameWithType: X509Certificate2.RawData
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Reset()
  nameWithType: X509Certificate2.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString()
  nameWithType: X509Certificate2.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString(Boolean)
  nameWithType: X509Certificate2.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Verify()
  nameWithType: X509Certificate2.Verify()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Version
  nameWithType: X509Certificate2.Version
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Archived
  nameWithType: X509Certificate2.Archived
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Extensions
  nameWithType: X509Certificate2.Extensions
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType
  nameWithType: X509Certificate2.GetCertContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetNameInfo
  nameWithType: X509Certificate2.GetNameInfo
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import
  nameWithType: X509Certificate2.Import
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: RawData
  nameWithType: X509Certificate2.RawData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Reset
  nameWithType: X509Certificate2.Reset
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString
  nameWithType: X509Certificate2.ToString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Verify
  nameWithType: X509Certificate2.Verify
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Version
  nameWithType: X509Certificate2.Version
