### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceFilter
  id: TraceFilter
  children:
  - System.Diagnostics.TraceFilter.#ctor
  - System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  langs:
  - csharp
  name: TraceFilter
  nameWithType: TraceFilter
  fullName: System.Diagnostics.TraceFilter
  type: Class
  summary: "Az alaposztály biztosít a nyomkövetési szűrő megvalósítások esetében."
  remarks: "Nyomkövetési szűrők nyomkövetésfigyelők által használható arra, hogy egy további réteget szűrés túl nyomkövetési kapcsolók által biztosított. A nyomkövetés-figyelő a nyomkövetési szűrő megtalálható a figyelő <xref:System.Diagnostics.TraceListener.Filter%2A>tulajdonság.</xref:System.Diagnostics.TraceListener.Filter%2A> Nyomkövetési kapcsolók annak megállapítása, hogy a nyomkövetés a nyomkövetésfigyelők küldendő. Nyomkövetési szűrők engedélyezése az egyes nyomkövetésfigyelők annak meghatározásához, hogy van-e a nyomkövetés a kapcsolódó kimeneti közepes kellene írni. Például minden nyomkövetési szűrő alapján, a nyomkövetés is lehet írni a konzol által egy <xref:System.Diagnostics.ConsoleTraceListener>, de nem az Eseménynapló <xref:System.Diagnostics.EventLogTraceListener>.</xref:System.Diagnostics.EventLogTraceListener> </xref:System.Diagnostics.ConsoleTraceListener>       -Nyomkövetésfigyelők, amelyek öröklése a szűrőket, amelyek a TraceFilter osztályból származik használhatja a <xref:System.Diagnostics.TraceListener>osztály nyomon követve események szűrése végrehajtásához.</xref:System.Diagnostics.TraceListener> TraceFilter tartalmaz egy módszert, <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>, amely eseményadatokat vesz igénybe, és adja vissza egy jelzőt, amely megadja, hogy az esemény nyomon kell követni.</xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>"
  syntax:
    content: public abstract class TraceFilter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceFilter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TraceFilter
  langs:
  - csharp
  name: TraceFilter()
  nameWithType: TraceFilter.TraceFilter()
  fullName: System.Diagnostics.TraceFilter.TraceFilter()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.TraceFilter&quot;> </xref> osztály."
  syntax:
    content: protected TraceFilter ();
    parameters: []
  overload: System.Diagnostics.TraceFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  id: ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  parent: System.Diagnostics.TraceFilter
  langs:
  - csharp
  name: ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  nameWithType: TraceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  fullName: System.Diagnostics.TraceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Amikor felül van bírálva a származtatott osztály, határozza meg, hogy a nyomkövetés-figyelő nyomon kell követnie a esemény."
  remarks: ''
  example:
  - "The following code example shows how to override the ShouldTrace method to indicate tracing should occur when the trace event type of the event is equal to <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>.  \n  \n [!code-cs[System.Diagnostics.TraceFilter#2](~/add/codesnippet/csharp/9ccfab59-d4f0-4d0a-b482-_1.cs)]\n [!code-vb[System.Diagnostics.TraceFilter#2](~/add/codesnippet/visualbasic/9ccfab59-d4f0-4d0a-b482-_1.vb)]\n [!code-cpp[System.Diagnostics.TraceFilter#2](~/add/codesnippet/cpp/9ccfab59-d4f0-4d0a-b482-_1.cpp)]"
  syntax:
    content: public abstract bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);
    parameters:
    - id: cache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely ismerteti a nyomkövetési esemény."
    - id: source
      type: System.String
      description: "A forrás nevére."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékek került, ami miatt a nyomkövetési esemény típusának megadásával."
    - id: id
      type: System.Int32
      description: "A nyomkövetési azonosító szám."
    - id: formatOrMessage
      type: System.String
      description: "Vagy a tömb a megadott argumentumok írásra használatos formátum a `args` paraméter, vagy egy írni."
    - id: args
      type: System.Object[]
      description: "Egy argumentum objektumokból álló tömb."
    - id: data1
      type: System.Object
      description: "A nyomkövetési objektum."
    - id: data
      type: System.Object[]
      description: "A nyomkövetési adatok objektumokból álló tömb."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a megadott esemény; nyomkövetéséhez Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.TraceFilter.ShouldTrace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.TraceFilter.#ctor
  parent: System.Diagnostics.TraceFilter
  isExternal: false
  name: TraceFilter()
  nameWithType: TraceFilter.TraceFilter()
  fullName: System.Diagnostics.TraceFilter.TraceFilter()
- uid: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  parent: System.Diagnostics.TraceFilter
  isExternal: false
  name: ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  nameWithType: TraceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  fullName: System.Diagnostics.TraceFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceFilter.#ctor*
  parent: System.Diagnostics.TraceFilter
  isExternal: false
  name: TraceFilter
  nameWithType: TraceFilter.TraceFilter
- uid: System.Diagnostics.TraceFilter.ShouldTrace*
  parent: System.Diagnostics.TraceFilter
  isExternal: false
  name: ShouldTrace
  nameWithType: TraceFilter.ShouldTrace
