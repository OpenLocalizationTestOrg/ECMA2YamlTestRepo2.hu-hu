### YamlMime:ManagedReference
items:
- uid: System.Net.Security.AuthenticatedStream
  id: AuthenticatedStream
  children:
  - System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.IsAuthenticated
  - System.Net.Security.AuthenticatedStream.IsEncrypted
  - System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  - System.Net.Security.AuthenticatedStream.IsServer
  - System.Net.Security.AuthenticatedStream.IsSigned
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  langs:
  - csharp
  name: AuthenticatedStream
  nameWithType: AuthenticatedStream
  fullName: System.Net.Security.AuthenticatedStream
  type: Class
  summary: "Módszereket biztosít a hitelesítő adatok továbbításához közötti adatfolyam és kér vagy az alkalmazások ügyfél-kiszolgáló hitelesítése."
  remarks: "Absztrakt osztály módszerek és a hitelesített adatfolyamok vonatkozó tulajdonságok biztosít.       Hitelesített adatfolyamok biztosíthat a hitelesítési adatok aláírása és titkosítási szolgáltatások, amelyek segítségével az integritásra és a titkosítás használata a <xref:System.Net.Security.AuthenticatedStream.InnerStream%2A>.</xref:System.Net.Security.AuthenticatedStream.InnerStream%2A> továbbított adatok karbantartása       A biztonsági protokoll abból származó AuthenticatedStream együtt az ügyfél és kiszolgáló támogatott biztonsági protokollok osztály által megvalósított határozza meg az alkalmazás számára elérhető funkciókat. A <xref:System.Net.Security.NegotiateStream>és <xref:System.Net.Security.SslStream>osztályok AuthenticatedStream örökölhet és valósítja meg az egyeztetési és a Secure Sockets Layer biztonsági protokoll, illetve.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.NegotiateStream>"
  example:
  - "The following code example demonstrates displaying the properties of an authenticated stream.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/t-system.net.security.au_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/t-system.net.security.au_1.cs)]"
  syntax:
    content: 'public abstract class AuthenticatedStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: AuthenticatedStream(Stream,Boolean)
  nameWithType: AuthenticatedStream.AuthenticatedStream(Stream,Boolean)
  fullName: System.Net.Security.AuthenticatedStream.AuthenticatedStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> osztály."
  remarks: "Ha a `true` a a `leaveStreamOpen` paraméter bezárása a <xref:System.Net.Security.AuthenticatedStream>nincs hatása a `innerStream` adatfolyam.</xref:System.Net.Security.AuthenticatedStream>       Ez a konstruktor hitelesített adatfolyam implementers nyújtanak, és csak a <xref:System.Net.Security.AuthenticatedStream>.</xref:System.Net.Security.AuthenticatedStream> származtatott osztályok által hívható"
  syntax:
    content: protected AuthenticatedStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "A <xref:System.Boolean>, amely jelzi, hogy bezárja a <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> objektum is bezárja `innerStream`.</xref:System.Boolean>"
  overload: System.Net.Security.AuthenticatedStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>innerStream</code> egyenlő <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AuthenticatedStream.Dispose(Boolean)
  fullName: System.Net.Security.AuthenticatedStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()`metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter értéke igaz, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja a <xref:System.Net.Security.AuthenticatedStream>hivatkozik.</xref:System.Net.Security.AuthenticatedStream> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Net.Security.AuthenticatedStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.InnerStream
  id: InnerStream
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: InnerStream
  nameWithType: AuthenticatedStream.InnerStream
  fullName: System.Net.Security.AuthenticatedStream.InnerStream
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi az ez által használt adatfolyam <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> az adatok küldésére és fogadására."
  remarks: "<xref:System.Net.Security.AuthenticatedStream>Ezt a tulajdonságot, az adatfolyam a <xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>.</xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> átadott eléréséhez használható</xref:System.Net.Security.AuthenticatedStream> öröklő"
  syntax:
    content: protected System.IO.Stream InnerStream { get; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objektum.</xref:System.IO.Stream>"
  overload: System.Net.Security.AuthenticatedStream.InnerStream*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: AuthenticatedStream.IsAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy sikeres volt-e a hitelesítés.</xref:System.Boolean>"
  remarks: "A való hitelesítési módszerek a <xref:System.Net.Security.AuthenticatedStream>.</xref:System.Net.Security.AuthenticatedStream> öröklő osztály is definiál"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_3_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_3_1.cs)]"
  syntax:
    content: public abstract bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a sikeres hitelesítés történt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: AuthenticatedStream.IsEncrypted
  fullName: System.Net.Security.AuthenticatedStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy adatokat küld a ez <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> titkosítva van.</xref:System.Boolean>"
  remarks: "Titkosítási segít megvédeni az az adatok védelme; kulcstartó ennek segítségével győződjön meg arról, hogy közben az átvitel során, akkor nem lehet visszafejteni harmadik felek által."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_0_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_0_1.cs)]"
  syntax:
    content: public abstract bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatok titkosítva a hálózaton keresztül továbbított előtt és visszafejtése amikor eléri a távoli végpont; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: AuthenticatedStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy kiszolgáló és az ügyfél hitelesített.</xref:System.Boolean>"
  remarks: "Nem minden biztonsági protokoll támogatja a kölcsönös hitelesítés. E kölcsönös hitelesítés támogatja-e a biztonsági protokoll öröklő osztály megvalósítva a <xref:System.Net.Security.AuthenticatedStream>, ellenőrizze a osztály dokumentációját.</xref:System.Net.Security.AuthenticatedStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_4_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_4_1.cs)]"
  syntax:
    content: public abstract bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az ügyfél és kiszolgáló hitelesített; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsServer
  id: IsServer
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsServer
  nameWithType: AuthenticatedStream.IsServer
  fullName: System.Net.Security.AuthenticatedStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy a kapcsolat helyi oldalán megtörténtét kiszolgálóként.</xref:System.Boolean>"
  remarks: "A legtöbb biztonsági-protokollok ügyfél-kiszolgáló hitelesítéséhez használt határozza meg az adott viselkedést és a követelmények alapján, hogy csatlakoznak-e az ügyfél vagy a kiszolgáló hitelesítéséhez szükséges hitelesítő adatokat ellátására."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_2_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_2_1.cs)]"
  syntax:
    content: public abstract bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a helyi végpont volt hitelesítve, a kiszolgálói oldalon ügyfél-kiszolgáló hitelesített kapcsolatot; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha a helyi végpont hitelesített az ügyféllel."
  overload: System.Net.Security.AuthenticatedStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: AuthenticatedStream.IsSigned
  fullName: System.Net.Security.AuthenticatedStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy az adatok küldése az adatfolyam van aláírva,.</xref:System.Boolean>"
  remarks: "Adatok aláírása segít megvédeni az adatok; kulcstartó ennek segítségével a címzettje határozza meg, hogy az adatok módosították az átvitel során."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclNegoAsyncClient#6](~/add/codesnippet/cpp/p-system.net.security.au_1_1.cpp)]\n [!code-cs[NclNegoAsyncClient#6](~/add/codesnippet/csharp/p-system.net.security.au_1_1.cs)]"
  syntax:
    content: public abstract bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatok alá van írva, mielőtt titkosítatlanul; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  id: LeaveInnerStreamOpen
  parent: System.Net.Security.AuthenticatedStream
  langs:
  - csharp
  name: LeaveInnerStreamOpen
  nameWithType: AuthenticatedStream.LeaveInnerStreamOpen
  fullName: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi, hogy az adatfolyam használják, ez <xref href=&quot;System.Net.Security.AuthenticatedStream&quot;> </xref> vonatkozó adatot küldeni és fogadni nyitva maradt."
  remarks: "Ha beállítása `true`, ez az osztály példányának bezárása után a az osztály a konstruktornak átadott folyam nem megszűnik. Ha beállítása `false`, ez az osztály példányának bezárása is bezárja az aláhúzott átviteli adatfolyamot. Ennek a tulajdonságnak az alapértelmezett érték `false`."
  syntax:
    content: public bool LeaveInnerStreamOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a belső stream maradt nyitva; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: AuthenticatedStream(Stream,Boolean)
  nameWithType: AuthenticatedStream.AuthenticatedStream(Stream,Boolean)
  fullName: System.Net.Security.AuthenticatedStream.AuthenticatedStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AuthenticatedStream.Dispose(Boolean)
  fullName: System.Net.Security.AuthenticatedStream.Dispose(Boolean)
- uid: System.Net.Security.AuthenticatedStream.InnerStream
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: InnerStream
  nameWithType: AuthenticatedStream.InnerStream
  fullName: System.Net.Security.AuthenticatedStream.InnerStream
- uid: System.Net.Security.AuthenticatedStream.IsAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: AuthenticatedStream.IsAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsAuthenticated
- uid: System.Net.Security.AuthenticatedStream.IsEncrypted
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsEncrypted
  nameWithType: AuthenticatedStream.IsEncrypted
  fullName: System.Net.Security.AuthenticatedStream.IsEncrypted
- uid: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: AuthenticatedStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated
- uid: System.Net.Security.AuthenticatedStream.IsServer
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsServer
  nameWithType: AuthenticatedStream.IsServer
  fullName: System.Net.Security.AuthenticatedStream.IsServer
- uid: System.Net.Security.AuthenticatedStream.IsSigned
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsSigned
  nameWithType: AuthenticatedStream.IsSigned
  fullName: System.Net.Security.AuthenticatedStream.IsSigned
- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: LeaveInnerStreamOpen
  nameWithType: AuthenticatedStream.LeaveInnerStreamOpen
  fullName: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
- uid: System.Net.Security.AuthenticatedStream.#ctor*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: AuthenticatedStream
  nameWithType: AuthenticatedStream.AuthenticatedStream
- uid: System.Net.Security.AuthenticatedStream.Dispose*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: Dispose
  nameWithType: AuthenticatedStream.Dispose
- uid: System.Net.Security.AuthenticatedStream.InnerStream*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: InnerStream
  nameWithType: AuthenticatedStream.InnerStream
- uid: System.Net.Security.AuthenticatedStream.IsAuthenticated*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: AuthenticatedStream.IsAuthenticated
- uid: System.Net.Security.AuthenticatedStream.IsEncrypted*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsEncrypted
  nameWithType: AuthenticatedStream.IsEncrypted
- uid: System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: AuthenticatedStream.IsMutuallyAuthenticated
- uid: System.Net.Security.AuthenticatedStream.IsServer*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsServer
  nameWithType: AuthenticatedStream.IsServer
- uid: System.Net.Security.AuthenticatedStream.IsSigned*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: IsSigned
  nameWithType: AuthenticatedStream.IsSigned
- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen*
  parent: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: LeaveInnerStreamOpen
  nameWithType: AuthenticatedStream.LeaveInnerStreamOpen
