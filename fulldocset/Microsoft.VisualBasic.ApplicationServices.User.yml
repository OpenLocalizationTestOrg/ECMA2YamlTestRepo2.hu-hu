### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.User
  id: User
  children:
  - Microsoft.VisualBasic.ApplicationServices.User.#ctor
  - Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  - Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  - Microsoft.VisualBasic.ApplicationServices.User.Name
  langs:
  - csharp
  name: User
  nameWithType: User
  fullName: Microsoft.VisualBasic.ApplicationServices.User
  type: Class
  summary: "Hozzáférést biztosít azokhoz a jelenlegi felhasználó adatait."
  remarks: "A tulajdonságok és módszerek által elérhetővé tett a `My.User` objektum eléréséhez a jelenlegi felhasználó adatait. A &quot;current user&quot; szerinti módja kissé eltér a Windows és a webes alkalmazások között. Windows alkalmazások az aktuális felhasználónak a felhasználó, aki futtatja az alkalmazást. A webalkalmazás az aktuális felhasználónak a felhasználó, aki hozzáfér az alkalmazás.       A `My.User` tulajdonság is hozzáférést biztosít a <xref:System.Security.Principal.IPrincipal>az aktuális felhasználó.</xref:System.Security.Principal.IPrincipal> Egy egyszerű objektum által jelképezett a felhasználó biztonsági környezetében, beleértve, a felhasználó identitása és a szerepköröket, amelyhez a felhasználó tartozik.       A Windows-alkalmazások ennek a tulajdonságnak azonos funkciókat biztosítják a <xref:System.Threading.Thread.CurrentPrincipal%2A>tulajdonság.</xref:System.Threading.Thread.CurrentPrincipal%2A> Webes alkalmazásokhoz, ennek a tulajdonságnak azonos funkciókat biztosítják a <xref:System.Web.HttpContext.User%2A>tulajdonság által visszaadott objektum a <xref:System.Web.HttpContext.Current%2A>tulajdonság.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A>      > [!NOTE] > A Windows-alkalmazások, csak a épülő projektek a **Windows-alkalmazás** sablon inicializálása a `My.User` objektum alapértelmezés szerint. Inicializálnia kell az összes többi Windows projekttípus, a `My.User` meghívásával objektum a <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>metódus explicit módon, vagy egy érték <xref:System.Threading.Thread.CurrentPrincipal%2A>.</xref:System.Threading.Thread.CurrentPrincipal%2A> hozzárendelésével</xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>      > [!NOTE] > A `My.User` objektum nem tud jelenteni az aktuális Windows-felhasználó, amikor a Windows 95 és Windows 98 futtatható, mert az operációs rendszereket támogatja a bejelentkezett felhasználó fogalmát kapcsolatos információkat. Egyéni hitelesítési használatához meg kell valósítani a `My.User` objektum ezen operációs rendszereken."
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public class User
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.User&quot;> </xref> osztály."
  remarks: "A tulajdonságok és módszerek által elérhetővé tett a `My.User` objektum eléréséhez a jelenlegi felhasználó adatait."
  syntax:
    content: public User ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  id: CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Lekérdezi vagy beállítja a jelenlegi claimsprincipal (a szerepalapú biztonság)."
  remarks: "Beállíthatja a `My.User.CurrentPrincipal` tulajdonsága olyan objektumra, amely megvalósítja a <xref:System.Security.Principal.IPrincipal>egyéni hitelesítési engedélyezéséhez interface.</xref:System.Security.Principal.IPrincipal>       A legtöbb projekttípusok Ez a tulajdonság lekérdezi és beállítja a szál aktuális rendszerbiztonsági tag. Az ASP.NET-alkalmazások Ez a tulajdonság és beállítása a jelenlegi HTTP-kérelem felhasználói identitás tartozó biztonsági információkat.       Ez az egy speciális; azt nem jeleníti meg a IntelliSense kivéve, ha megadja a **összes** fülre.      ## Projekttípus rendelkezésre állása |||   |-|-|   | Projekttípus |} Rendelkezésre álló |}   | Windows-alkalmazás |} **Yes**|   | Szalagtár osztály |} **Yes**|   | Konzolalkalmazás |} **Yes**|   | Windows könyvtár szabályozása |} **Yes**|   | Webalkalmazás-vezérlő könyvtár |} **Yes**|   | Windows-szolgáltatás |} **Yes**|   | Webhely |} **Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "A <xref:System.Security.Principal.IPrincipal>érték a biztonsági környezet.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívónak nincs engedélye a kell beállítania a rendszerbiztonsági tag."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  id: InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "A szál aktuális rendszerbiztonsági tag beállítása a Windows-felhasználót, hogy az alkalmazást."
  remarks: "Használhatja a `My.User.InitializeWithWindowsUser` metódus a szál aktuális rendszerbiztonsági tag beállítása a Windows-felhasználót, hogy az alkalmazást. A Visual Basic alkalmazásmodell Windows alkalmazások alapértelmezés szerint ez a metódus meghívja indításkor. A más típusú projekt meg kell adni a szál aktuális rendszerbiztonsági tag a metódus explicit hívása, vagy egy értéket a <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       A Windows-projektek egyikére a `My.User` objektum alapul a szál aktuális rendszerbiztonsági tag; ezért ezt a módszert módosíthatja az adatokat `My.User` adja vissza. Az ASP.NET-alkalmazások a `My.User` objektum van az aktuális HTTP-kérelem felhasználó identitása alapján, és nincsenek hatással a metódus.      > [!NOTE] > Pontos viselkedését a `My.User` objektum alkalmazás és az alkalmazás futó operációs rendszer függ. További információkért lásd: a <xref:Microsoft.VisualBasic.ApplicationServices.User>osztály áttekintése.</xref:Microsoft.VisualBasic.ApplicationServices.User>       Ez az egy speciális; azt nem jeleníti meg a IntelliSense kivéve, ha megadja a **összes** fülre.      ## Projekttípus rendelkezésre állása |||   |-|-|   | Projekttípus |} Rendelkezésre álló |}   | Windows-alkalmazás |} **Yes**|   | Szalagtár osztály |} **Yes**|   | Konzolalkalmazás |} **Yes**|   | Windows könyvtár szabályozása |} **Yes**|   | Webalkalmazás-vezérlő könyvtár |} **Yes**|   | Windows-szolgáltatás |} **Yes**|   | Webhely |} **Yes**|"
  syntax:
    content: public void InitializeWithWindowsUser ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  id: InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Lekérdezi vagy beállítja az elsődleges objektumot képviselő az aktuális felhasználó."
  remarks: "Az a <xref:Microsoft.VisualBasic.ApplicationServices.User>objektum, ez a tulajdonság becsomagolja a <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>tulajdonság.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:Microsoft.VisualBasic.ApplicationServices.User> Bírálja felül ezt a módszert arra, hogy másképp viselkednek származtatott osztályban. Például a <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>tulajdonság felülbírálja ezt a tulajdonságot.</xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Egy <xref:System.Security.Principal.IPrincipal>az aktuális felhasználó képviselő objektum.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  id: IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a felhasználó hitelesítése."
  remarks: "A `My.User.IsAuthenticated` tulajdonság lehetővé teszi, hogy a határozza meg, ha az aktuális felhasználó hitelesítése.      > [!NOTE] > Pontos viselkedését `My.User` objektum az az alkalmazás és az alkalmazás futó operációs rendszer függ. További információkért lásd: a <xref:Microsoft.VisualBasic.ApplicationServices.User>osztály áttekintése.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Projekttípus rendelkezésre állása |||   |-|-|   | Projekttípus |} Rendelkezésre álló |}   | Windows-alkalmazás |} **Yes**|   | Szalagtár osztály |} **Yes**|   | Konzolalkalmazás |} **Yes**|   | Windows könyvtár szabályozása |} **Yes**|   | Webalkalmazás-vezérlő könyvtár |} **Yes**|   | Windows-szolgáltatás |} **Yes**|   | Webhely |} **Yes**|"
  example:
  - "This example verifies that the user has been authenticated before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#2](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#2)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Ha a felhasználó hitelesítési; Ellenkező esetben <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  id: IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Meghatározza, hogy az aktuális felhasználói szerepkörnek is tagja a megadott."
  remarks: "A `My.User.IsInRole` módszer lehetővé teszi, hogy a megállapítja, hogy az aktuális felhasználónak-e a megadott szerepkör tagja.       A paraméterekkel nem rendelkező a `My.User.IsInRole` metódus azon definícióváltozatát karakterlánc egyszerű hozzáférést biztosít a <xref:System.Security.Principal.IPrincipal.IsInRole%2A>módszer az aktuális rendszerbiztonsági tag.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       A paraméterekkel nem rendelkező a `My.User.IsInRole` metódus azon definícióváltozatát, egy `BuiltInRole` számbavételi eltérően, attól függően, hogy a jelenlegi claimsprincipal viselkedik. Ha egy Windows egyszerű (<xref:System.Security.Principal.WindowsPrincipal>), a függvény `role` egyenértékű a <xref:System.Security.Principal.WindowsBuiltInRole>számbavételi és <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> hívása eredményét adja vissza</xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Ha az aktuális rendszerbiztonsági tag egy másik tagot, ez a függvény nevét adja meg a számbavételi érték `role` az elsődleges <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metódus.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > Pontos viselkedését a `My.User` objektum az az alkalmazás és az alkalmazás futó operációs rendszer függ. További információkért lásd: a <xref:Microsoft.VisualBasic.ApplicationServices.User>osztály áttekintése.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Projekttípus rendelkezésre állása |||   |-|-|   | Projekttípus |} Rendelkezésre álló |}   | Windows-alkalmazás |} **Yes**|   | Szalagtár osztály |} **Yes**|   | Konzolalkalmazás |} **Yes**|   | Windows könyvtár szabályozása |} **Yes**|   | Webalkalmazás-vezérlő könyvtár |} **Yes**|   | Windows-szolgáltatás |} **Yes**|   | Webhely |} **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);
    parameters:
    - id: role
      type: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
      description: "A beépített Windows-szerepkör, amelyek esetében szeretne ellenőrizze tagságát."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Ha az aktuális felhasználó tagja a megadott szerepkör; Ellenkező esetben <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Meghatározza, hogy az aktuális felhasználói szerepkörnek is tagja a megadott."
  remarks: "A `My.User.IsInRole` módszer lehetővé teszi, hogy a megállapítja, hogy az aktuális felhasználónak-e a megadott szerepkör tagja.       A paraméterekkel nem rendelkező a `My.User.IsInRole` metódus azon definícióváltozatát karakterlánc egyszerű hozzáférést biztosít a <xref:System.Security.Principal.IPrincipal.IsInRole%2A>módszer az aktuális rendszerbiztonsági tag.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       A paraméterekkel nem rendelkező a `My.User.IsInRole` metódus azon definícióváltozatát, egy `BuiltInRole` számbavételi eltérően, attól függően, hogy a jelenlegi claimsprincipal viselkedik. Ha egy Windows egyszerű (<xref:System.Security.Principal.WindowsPrincipal>), a függvény `role` egyenértékű a <xref:System.Security.Principal.WindowsBuiltInRole>számbavételi és <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> hívása eredményét adja vissza</xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Ha az aktuális rendszerbiztonsági tag egy másik tagot, ez a függvény nevét adja meg a számbavételi érték `role` az elsődleges <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metódus.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > Pontos viselkedését a `My.User` objektum az az alkalmazás és az alkalmazás futó operációs rendszer függ. További információkért lásd: a <xref:Microsoft.VisualBasic.ApplicationServices.User>osztály áttekintése.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Projekttípus rendelkezésre állása |||   |-|-|   | Projekttípus |} Rendelkezésre álló |}   | Windows-alkalmazás |} **Yes**|   | Szalagtár osztály |} **Yes**|   | Konzolalkalmazás |} **Yes**|   | Windows könyvtár szabályozása |} **Yes**|   | Webalkalmazás-vezérlő könyvtár |} **Yes**|   | Windows-szolgáltatás |} **Yes**|   | Webhely |} **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "A szerepkör, amelyek esetében szeretne ellenőrizze tagságát neve."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Ha az aktuális felhasználó tagja a megadott szerepkör; Ellenkező esetben <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  id: Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Lekérdezi az aktuális felhasználónak a nevét."
  remarks: "You can use the `My.User` object to get information about the current user.  \n  \n The principal that authenticates the user also controls the format of the user name. By default, an application uses Windows authentication, and the user name has the format DOMAIN\\USERNAME. A custom implementation of the principal does not necessarily use the same format.  \n  \n> [!NOTE]\n>  The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.  \n  \n> [!NOTE]\n>  The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs. For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Az aktuális felhasználó neve."
  overload: Microsoft.VisualBasic.ApplicationServices.User.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: BuiltInRole
  nameWithType: BuiltInRole
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User
  nameWithType: User.User
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser
  nameWithType: User.InitializeWithWindowsUser
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole
  nameWithType: User.IsInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
