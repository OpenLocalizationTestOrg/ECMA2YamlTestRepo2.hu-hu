### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  id: LinqDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.ContextCreated&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Deleted&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Inserted&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Selected&quot;></xref>, and <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Updated&quot;></xref> events."
  remarks: "A LinqDataSourceStatusEventArgs osztály segítségével vizsgálja meg az adatok által végrehajtott műveletek eredményeit a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő.</xref:System.Web.UI.WebControls.LinqDataSource> Egy LinqDataSourceStatusEventArgs objektum eseménykezelőinek továbbítódik a <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, és <xref:System.Web.UI.WebControls.LinqDataSource.Updated>eseményeit a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>       Ha az adatok művelet sikeresen befejeződött, az eredményül kapott objektum van tárolva a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>tulajdonság és a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonság `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Ha az adatok művelet sikertelen volt, a az művelet közben történt kivétel tárolja a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonság és a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>tulajdonság `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Ha Ön kezeli a kivétel által képviselt a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonságot, állítsa be a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>tulajdonságot `true` , hogy a kivételt nem fog jelezni.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>       Visszaállíthatja az keresztül egy lekérdezés által visszaadott rekordok teljes száma a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_259_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_259_1.aspx)]"
  syntax:
    content: 'public class LinqDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Exception)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> osztály kivétel történt az adatok művelet használatával."
  remarks: "Ez a konstruktor kivételt vált ki, az adatok művelet során használatos. A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>automatikusan tulajdonsága `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>"
  syntax:
    content: public LinqDataSourceStatusEventArgs (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: "A következő hiba történt az adatok művelet során."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Object)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> osztály olyan objektum, amely tartalmazza az adatokat a adatok művelet használatával."
  remarks: "Ez a konstruktor szolgál az művelet hiba nélkül befejeződött. A `result` paraméter az művelet eredményét jelölő objektumot tartalmaz. A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>automatikusan tulajdonsága `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>"
  syntax:
    content: public LinqDataSourceStatusEventArgs (object result);
    parameters:
    - id: result
      type: System.Object
      description: "Egy objektum, amely tartalmazza az adatokat, amelyek az Adatműveletek."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  id: '#ctor(System.Object,System.Int32)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Object,Int32)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> osztály egy objektummal, amely tartalmazza az adatokat az művelet és a visszaadott sorok száma."
  syntax:
    content: public LinqDataSourceStatusEventArgs (object result, int totalRowCount);
    parameters:
    - id: result
      type: System.Object
      description: "Egy objektum, amely tartalmazza az adatokat, amelyek az Adatműveletek."
    - id: totalRowCount
      type: System.Int32
      description: "Az adatműveletek lekérés visszaküldött sorok száma."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi a kivétellel, hogy az művelet során."
  remarks: "Az adatok művelet során kivétel következik be, a kivétel tárolódnak az Exception tulajdonság. Az eseménykezelők hozhat létre a <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, és <xref:System.Web.UI.WebControls.LinqDataSource.Updated>események és olvasható be a kivételt, ha vannak ilyenek, a kivétel tulajdonságon keresztül.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the Exception property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, so the value is not known until the insert operation has finished. The exception message is logged if the Exception property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_503_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_503_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "Egy <xref:System.Exception>objektum, amely a kivételt jelenti. Ha hiba történt; ellenkező esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a kivétel kezelése történt meg, és, hogy azt nem okozhat újra."
  remarks: "Az eseménykezelők hozhat létre a <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, és <xref:System.Web.UI.WebControls.LinqDataSource.Updated>események ezek a műveletek közben történt kivételek vizsgálata.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> A kivétel kezeléséhez, és nem szeretné, hogy újra kell-e fel, ha a tulajdonsága ExceptionHandled `true`. Ha nem állít a ExceptionHandled tulajdonság `true`, a kivétel a következő eseménykezelő a hívási veremben propagálódik."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The ExceptionHandled property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_702_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_702_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kivétel látta; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  id: Result
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az adatok művelet eredménye képviselő objektum."
  remarks: "Az eredmény tulajdonsággal vizsgálja meg az Adatműveletek visszaadott értékek. A kimeneti paraméterek beolvasása az Adatműveletek, vagy egy lekérdezés által visszaadott értékek módosítása.       Az eredmény tulajdonságban tárolt adatok végrehajtott Adatműveletek függ. Amikor törli az adatokat, az eredmény tulajdonsága tartalmazza-e a megadott típusú objektum a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság, és az eredeti értékeket, amelyeket a lett törölve az adatforrásból.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Beszúrásakor, vagy frissítse az adatokat, az eredmény tulajdonsága tartalmazza-e a megadott típusú objektum a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság, az új értékekkel mentett az adatforráshoz.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Adatok kiválasztásakor a Result tulajdonsága tartalmazza a lekérdezés eredményeit.       Ha a select lekérdezés szerint csoportosítja az adatokat, vagy jelöljön ki egy tulajdonságok részhalmazát, a megadott típus a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság, az eredmény tulajdonság dinamikusan létrehozott típusú objektumot tartalmaz.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Ellenkező esetben a Result tulajdonsága tartalmazza a megadott típusú objektum a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the Result property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_302_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_302_1.aspx)]"
  syntax:
    content: public object Result { get; }
    return:
      type: System.Object
      description: "Egy objektum, amely tartalmazza az művelet adatait."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  id: TotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "A sorok teljes számát egy lekérése egy adatbeolvasási műveletet."
  remarks: "A totalrowcount tulajdonsággal rekordok száma lekérése a következő adatkészletben a adatainak lekérése közben. Általában ez a tulajdonság beolvasása, hozzáadta az adatok lapok és megjelenítendő rekordok teljes száma.       Adatok lapozható van folyamatban, amikor a totalrowcount tulajdonság értéke eltérhet a tényleges a lekérdezés által visszaadott sorok száma. Ennek oka az, a lekérdezés csak az adatok lap szükséges számát adja vissza.       A totalrowcount tulajdonság tartalmazza a rekordok egy lekérdezés által csak akkor, ha az eseménykezelőben érhető el a <xref:System.Web.UI.WebControls.LinqDataSource.Selected>esemény.</xref:System.Web.UI.WebControls.LinqDataSource.Selected> Ha a tulajdonság elérése eseménykezelő a <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, vagy <xref:System.Web.UI.WebControls.LinqDataSource.Updated>esemény, a totalrowcount tulajdonság tartalmazza a -1.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>       A totalrowcount tulajdonság függ a <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>tulajdonsága a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő, és a a `AllowPaging` az adathoz kötött vezérlő tulajdonsága.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> A következő táblázat összefoglalja a totalrowcount tulajdonság lehetséges értékei.      | Vezérlő linqdatasource adatforrás autopage attribútuma tulajdonsága |} Adathoz kötött vezérlő az AllowPaging tulajdonság |} Totalrowcount tulajdonság |} Eredménye |}   |-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|   | `true`|`true`| A lekérdezés rekordok száma. |} Adatokat a rendszer automatikusan lapozható. |}   | `false`|`false`| A lekérdezés rekordok száma. |} Az adatok nem lapozható memóriakészlet. |}   | `true`|`false`|-1| Az adatok nem lapozható memóriakészlet. |}   | `false`|`true`| Az érték rendelt <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>tulajdonság a kezelő-a <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>esemény. |} Adatok van lapozható megadott értékek alapján, hogy a megadott Ha testreszabta a lapozás. |}</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> </xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>"
  example:
  - "The following example shows a Web page with a <xref:System.Web.UI.WebControls.LinqDataSource> control, a <xref:System.Web.UI.WebControls.GridView> control, and a <xref:System.Web.UI.WebControls.Literal> control. The <xref:System.Web.UI.WebControls.LinqDataSource> control defines an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_60_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_60_1.aspx)]  \n  \n The following example shows the code for the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event. The value of the TotalRowCount property is assigned to the <xref:System.Web.UI.WebControls.Literal> control.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_60_2.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_60_2.cs)]"
  syntax:
    content: public int TotalRowCount { get; }
    return:
      type: System.Int32
      description: "Az adatok lekérése műveletből; adatkészlet sorok száma –&1; Ha a <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> objektum módosítás Adatműveletek során létrehozott; -1, ha engedélyezte a lapozás testreszabott beállításával <> </> *> való <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> és beállításával <> </> *> való <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Exception)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Object)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Object,Int32)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
