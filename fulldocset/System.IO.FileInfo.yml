### YamlMime:ManagedReference
items:
- uid: System.IO.FileInfo
  id: FileInfo
  children:
  - System.IO.FileInfo.#ctor(System.String)
  - System.IO.FileInfo.AppendText
  - System.IO.FileInfo.CopyTo(System.String)
  - System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  - System.IO.FileInfo.Create
  - System.IO.FileInfo.CreateText
  - System.IO.FileInfo.Decrypt
  - System.IO.FileInfo.Delete
  - System.IO.FileInfo.Directory
  - System.IO.FileInfo.DirectoryName
  - System.IO.FileInfo.Encrypt
  - System.IO.FileInfo.Exists
  - System.IO.FileInfo.GetAccessControl
  - System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  - System.IO.FileInfo.IsReadOnly
  - System.IO.FileInfo.Length
  - System.IO.FileInfo.MoveTo(System.String)
  - System.IO.FileInfo.Name
  - System.IO.FileInfo.Open(System.IO.FileMode)
  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  - System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.FileInfo.OpenRead
  - System.IO.FileInfo.OpenText
  - System.IO.FileInfo.OpenWrite
  - System.IO.FileInfo.Replace(System.String,System.String)
  - System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  - System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  - System.IO.FileInfo.ToString
  langs:
  - csharp
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
  type: Class
  summary: "Tulajdonságok és metódusok létrehozásához, másolás, törlés, áttelepítése, valamint a fájlok megnyitása és létrehozása során támogatások <xref href=&quot;System.IO.FileStream&quot;> </xref> objektumok. Ez az osztály nem örökölhető.       Keresse meg a .NET-keretrendszer forráskód ehhez a típushoz, tekintse meg a [hivatkozás forrás](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the FileInfo class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.  \n  \n If you are performing multiple operations on the same file, it can be more efficient to use FileInfo instance methods instead of the corresponding static methods of the <xref:System.IO.File> class, because a security check will not always be necessary.  \n  \n Many of the FileInfo methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific FileInfo members such as <xref:System.IO.FileInfo.Open%2A>, <xref:System.IO.FileInfo.OpenRead%2A>, <xref:System.IO.FileInfo.OpenText%2A>, <xref:System.IO.FileInfo.CreateText%2A>, or <xref:System.IO.FileInfo.Create%2A>.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various FileInfo methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n The FileInfo class provides the following properties that enable you to retrieve information about a file. For an example of how to use each property, see the property pages.  \n  \n-   The <xref:System.IO.FileInfo.Directory%2A> property retrieves an object that represents the parent directory of a file.  \n  \n-   The <xref:System.IO.FileInfo.DirectoryName%2A> property retrieves the full path of the parent directory of a file.  \n  \n-   The <xref:System.IO.FileInfo.Exists%2A> property checks for the presence of a file before operating on it.  \n  \n-   The <xref:System.IO.FileInfo.IsReadOnly%2A> property retrieves or sets a value that specifies whether a file can be modified.  \n  \n-   The <xref:System.IO.FileInfo.Length%2A> retrieves the size of a file.  \n  \n-   The <xref:System.IO.FileInfo.Name%2A> retrieves the name of a file."
  example:
  - "The following example demonstrates some of the main members of the `FileInfo` class.  \n  \n When the properties are first retrieved, FileInfo calls the <xref:System.IO.FileSystemInfo.Refresh%2A> method and caches information about the file. On subsequent calls, you must call <xref:System.IO.FileSystemInfo.Refresh%2A> to get the latest copy of the information.  \n  \n [!code-cs[FInfo Class#1](~/add/codesnippet/csharp/t-system.io.fileinfo_1.cs)]\n [!code-cpp[FInfo Class#1](~/add/codesnippet/cpp/t-system.io.fileinfo_1.cpp)]\n [!code-vb[FInfo Class#1](~/add/codesnippet/visualbasic/t-system.io.fileinfo_1.vb)]  \n  \n This example produces output similar to the following.  \n  \n```  \nHello  \nAnd  \nWelcome  \nC:\\Users\\userName\\AppData\\Local\\Temp\\tmp70AB.tmp was copied to C:\\Users\\userName\\AppData\\Local\\Temp\\tmp70CB.tmp.  \nC:\\Users\\userName\\AppData\\Local\\Temp\\tmp70CB.tmp was successfully deleted.  \n```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileInfo : System.IO.FileSystemInfo
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.FileSystemInfo
  implements: []
  inheritedMembers:
  - System.IO.FileSystemInfo.Attributes
  - System.IO.FileSystemInfo.CreationTime
  - System.IO.FileSystemInfo.CreationTimeUtc
  - System.IO.FileSystemInfo.Extension
  - System.IO.FileSystemInfo.FullName
  - System.IO.FileSystemInfo.FullPath
  - System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.LastAccessTime
  - System.IO.FileSystemInfo.LastAccessTimeUtc
  - System.IO.FileSystemInfo.LastWriteTime
  - System.IO.FileSystemInfo.LastWriteTimeUtc
  - System.IO.FileSystemInfo.OriginalPath
  - System.IO.FileSystemInfo.Refresh
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.FileInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: FileInfo(String)
  nameWithType: FileInfo.FileInfo(String)
  fullName: System.IO.FileInfo.FileInfo(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IO.FileInfo&quot;> </xref> osztály, amely egy burkolót egy fájl elérési útját."
  remarks: "A teljesen minősített vagy relatív fájlneve adhat meg, de a biztonsági ellenőrzés lekérdezi a teljesen minősített nevet."
  example:
  - "The following example uses this constructor to create two files, which are then written to, read from, copied, and deleted.  \n  \n [!code-cpp[finfo ctor#1](~/add/codesnippet/cpp/m-system.io.fileinfo.sha_1.cpp)]\n [!code-cs[finfo ctor#1](~/add/codesnippet/csharp/m-system.io.fileinfo.sha_1.cs)]\n [!code-vb[finfo ctor#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.sha_1.vb)]  \n  \n The following example opens an existing file or creates a file, appends text to the file, and displays the results.  \n  \n [!code-cpp[fileinfomain#1](~/add/codesnippet/cpp/m-system.io.fileinfo.sha_2.cpp)]\n [!code-cs[fileinfomain#1](~/add/codesnippet/csharp/m-system.io.fileinfo.sha_2.cs)]\n [!code-vb[fileinfomain#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.sha_2.vb)]"
  syntax:
    content: public FileInfo (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Az új fájl teljesen minősített neve, vagy a fájl relatív neve. A könyvtárelválasztó-karakterrel az elérési út nem végződhet."
  overload: System.IO.FileInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A fájl neve üres, csak szóközöket tartalmaz, vagy érvénytelen karaktereket tartalmaz."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Való hozzáférés <code> fileName </code> megtagadva."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "A megadott elérési út vagy fájlnév meghaladja a rendszerben meghatározott maximális hosszúság. Például a Windows-alapú platformokon elérési utak legfeljebb 248 karakterből kell állnia, és a fájl nevének 260 karakternél rövidebbnek kell lennie."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>fileName</code>a karakterlánc közepén kettőspontot (:) tartalmazza."
  platform:
  - net462
- uid: System.IO.FileInfo.AppendText
  id: AppendText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: AppendText()
  nameWithType: FileInfo.AppendText()
  fullName: System.IO.FileInfo.AppendText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Létrehoz egy <xref:System.IO.StreamWriter>szöveg, amely hozzáfűzi a fájl ezen példánya által képviselt a <xref href=&quot;System.IO.FileInfo&quot;> </xref>.</xref:System.IO.StreamWriter>"
  remarks: ''
  example:
  - "The following example appends text to a file and reads from the file.  \n  \n [!code-vb[finfo appendtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.app_1.vb)]\n [!code-cpp[finfo appendtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.app_1.cpp)]\n [!code-cs[finfo appendtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.app_1.cs)]  \n  \n The following example demonstrates appending text to the end of a file and also displays the result of the append operation to the console. The first time this routine is called, the file is created if it does not exist. After that, the specified text is appended to the file.  \n  \n [!code-vb[fileinfoappendtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.app_2.vb)]\n [!code-cpp[fileinfoappendtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.app_2.cpp)]\n [!code-cs[fileinfoappendtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.app_2.cs)]"
  syntax:
    content: public System.IO.StreamWriter AppendText ();
    parameters: []
    return:
      type: System.IO.StreamWriter
      description: "A new <xref uid=&quot;langword_csharp_StreamWriter&quot; name=&quot;StreamWriter&quot; href=&quot;&quot;></xref>."
  overload: System.IO.FileInfo.AppendText*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.CopyTo(System.String)
  id: CopyTo(System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CopyTo(String)
  nameWithType: FileInfo.CopyTo(String)
  fullName: System.IO.FileInfo.CopyTo(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Másolja át egy már létező fájlt egy új fájlba, letiltva a meglévő fájl felülírása."
  remarks: "Használja a <xref:System.IO.FileInfo.CopyTo%2A>lehetővé a meglévő fájl felülírásának.</xref:System.IO.FileInfo.CopyTo%2A>      > [!CAUTION] > Lehetőség szerint kerülje a rövid fájlnevek (például XXXXXX~1.XXX) ezzel a módszerrel. Ha két fájlok egyenértékű rövid fájlnevek, akkor ez a módszer előfordulhat, hogy sikertelen és kivételt és/vagy nemkívánatos viselkedést eredményezi"
  example:
  - "The following example demonstrates both overloads of the `CopyTo` method.  \n  \n [!code-cpp[finfo copyto2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_1_1.cpp)]\n [!code-cs[finfo copyto2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_1_1.cs)]\n [!code-vb[finfo copyto2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_1_1.vb)]  \n  \n The following example demonstrates copying one file to another file, throwing an exception if the destination file already exists.  \n  \n [!code-cpp[FileInfoCopyTo1#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_1_2.cpp)]\n [!code-cs[FileInfoCopyTo1#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_1_2.cs)]\n [!code-vb[FileInfoCopyTo1#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_1_2.vb)]"
  syntax:
    content: public System.IO.FileInfo CopyTo (string destFileName);
    parameters:
    - id: destFileName
      type: System.String
      description: "Másolja az új fájl neve."
    return:
      type: System.IO.FileInfo
      description: "Egy új fájl teljes elérési útja."
  overload: System.IO.FileInfo.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>üres, csak szóközöket tartalmaz, vagy érvénytelen karaktereket tartalmaz."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történik, vagy a célfájl már létezik."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Az elérési út átadott, vagy a fájl éppen áthelyezik egy másik meghajtót."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott könyvtár <code> destFileName </code> nem létezik."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "A megadott elérési út vagy fájlnév meghaladja a rendszerben meghatározott maximális hosszúság. Például a Windows-alapú platformokon elérési utak legfeljebb 248 karakterből kell állnia, és a fájl nevének 260 karakternél rövidebbnek kell lennie."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>a karakterláncon belüli kettőspontot (:) tartalmaz, de nem adja meg a kötet."
  platform:
  - net462
- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  id: CopyTo(System.String,System.Boolean)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CopyTo(String,Boolean)
  nameWithType: FileInfo.CopyTo(String,Boolean)
  fullName: System.IO.FileInfo.CopyTo(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Egy új fájlt, így a meglévő fájl felülírása egy már létező fájlt másolja."
  remarks: "Ezt a módszert engedélyezése vagy tiltása a meglévő fájlok felülírása. Használja a <xref:System.IO.FileInfo.CopyTo%2A>metódus alapértelmezés szerint egy meglévő fájl felülírásának elkerülése érdekében.</xref:System.IO.FileInfo.CopyTo%2A>      > [!CAUTION] > Lehetőség szerint kerülje a rövid fájlnevek (például XXXXXX~1.XXX) ezzel a módszerrel. Ha két fájlok egyenértékű rövid fájlnevek, akkor ez a módszer előfordulhat, hogy sikertelen és kivételt és/vagy nemkívánatos viselkedést eredményezi"
  example:
  - "The following example demonstrates both overloads of the `CopyTo` method.  \n  \n [!code-cpp[finfo copyto2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_0_1.cpp)]\n [!code-cs[finfo copyto2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_0_1.cs)]\n [!code-vb[finfo copyto2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_0_1.vb)]  \n  \n The following example demonstrates copying one file to another file, specifying whether to overwrite a file that already exists.  \n  \n [!code-cs[fileinfocopyto#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cop_0_2.cs)]\n [!code-cpp[fileinfocopyto#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cop_0_2.cpp)]\n [!code-vb[fileinfocopyto#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cop_0_2.vb)]"
  syntax:
    content: public System.IO.FileInfo CopyTo (string destFileName, bool overwrite);
    parameters:
    - id: destFileName
      type: System.String
      description: "Másolja az új fájl neve."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>engedélyezi a meglévő fájl felülírásának; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.FileInfo
      description: "Egy új fájlt, vagy egy meglévő felülírásának fájlt, ha <code> overwrite </code> van <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Ha a fájl létezik és <code> overwrite </code> van <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, egy <xref:System.IO.IOException>vált ki.</xref:System.IO.IOException>"
  overload: System.IO.FileInfo.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>üres, csak szóközöket tartalmaz, vagy érvénytelen karaktereket tartalmaz."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Hiba történik, vagy a célfájl már létezik, és <code> overwrite </code> van <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott könyvtár <code> destFileName </code> nem létezik."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Az elérési út átadott, vagy a fájl éppen áthelyezik egy másik meghajtót."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "A megadott elérési út vagy fájlnév meghaladja a rendszerben meghatározott maximális hosszúság. Például a Windows-alapú platformokon elérési utak legfeljebb 248 karakterből kell állnia, és a fájl nevének 260 karakternél rövidebbnek kell lennie."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>a karakterlánc közepén kettőspontot (:) tartalmazza."
  platform:
  - net462
- uid: System.IO.FileInfo.Create
  id: Create
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Create()
  nameWithType: FileInfo.Create()
  fullName: System.IO.FileInfo.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Létrehoz egy fájlt."
  remarks: "Alapértelmezés szerint az új fájlok teljes olvasási/írási hozzáférést kapnak a minden felhasználó számára.       Ez a módszer egy burkolót <xref:System.IO.File.Create%2A?displayProperty=fullName>.</xref:System.IO.File.Create%2A?displayProperty=fullName> által biztosított funkcióknak"
  example:
  - "The following example creates a reference to a file, and then creates the file on disk using `FileInfo.Create()`.  \n  \n [!code-cpp[fileinfodelete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_0_1.cpp)]\n [!code-vb[fileinfodelete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_0_1.vb)]\n [!code-cs[fileinfodelete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_0_1.cs)]  \n  \n The following example creates a file, adds some text to it, and reads from the file.  \n  \n [!code-vb[finfo create#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_0_2.vb)]\n [!code-cs[finfo create#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_0_2.cs)]\n [!code-cpp[finfo create#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_0_2.cpp)]"
  syntax:
    content: public System.IO.FileStream Create ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "Egy új fájlt."
  overload: System.IO.FileInfo.Create*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.CreateText
  id: CreateText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: CreateText()
  nameWithType: FileInfo.CreateText()
  fullName: System.IO.FileInfo.CreateText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Létrehoz egy <xref:System.IO.StreamWriter>, amely egy új szöveges fájlba ír.</xref:System.IO.StreamWriter>"
  remarks: "Alapértelmezés szerint az új fájlok teljes olvasási/írási hozzáférést kapnak a minden felhasználó számára."
  example:
  - "The following example demonstrates the `CreateText` method.  \n  \n [!code-cpp[finfo createtext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.cre_1_1.cpp)]\n [!code-vb[finfo createtext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.cre_1_1.vb)]\n [!code-cs[finfo createtext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.cre_1_1.cs)]"
  syntax:
    content: public System.IO.StreamWriter CreateText ();
    parameters: []
    return:
      type: System.IO.StreamWriter
      description: "A new <xref uid=&quot;langword_csharp_StreamWriter&quot; name=&quot;StreamWriter&quot; href=&quot;&quot;></xref>."
  overload: System.IO.FileInfo.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A fájlnév pedig egy könyvtárat."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A lemez csak olvasható."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  platform:
  - net462
- uid: System.IO.FileInfo.Decrypt
  id: Decrypt
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Decrypt()
  nameWithType: FileInfo.Decrypt()
  fullName: System.IO.FileInfo.Decrypt()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "A jelenlegi fiókot a titkosított fájl visszafejti a <xref:System.IO.FileInfo.Encrypt*>metódus.</xref:System.IO.FileInfo.Encrypt*>"
  remarks: "A visszafejtési mód lehetővé teszi a használatával titkosított fájl visszafejtése a <xref:System.IO.FileInfo.Encrypt%2A>metódus.</xref:System.IO.FileInfo.Encrypt%2A>  A visszafejtési mód csak az aktuális felhasználói fiók használatával titkosított fájlok fejtheti vissza.       Mind a <xref:System.IO.FileInfo.Encrypt%2A>és a visszafejtés módszer használata a kriptográfiai szolgáltató (CSP) telepítve a számítógépen, és a titkosítási kulcsai a folyamat a metódus hívása.</xref:System.IO.FileInfo.Encrypt%2A>       A jelenlegi fájlrendszer formázott NTFS és a jelenlegi operációs rendszer kell lennie a Microsoft Windows NT vagy újabb verzióját kell."
  example:
  - "The following code example uses the <xref:System.IO.FileInfo.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file.  \n  \n [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.fileinfo.dec_1.cpp)]\n [!code-cs[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.fileinfo.dec_1.cs)]\n [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.dec_1.vb)]"
  syntax:
    content: public void Decrypt ();
    parameters: []
  overload: System.IO.FileInfo.Decrypt*
  exceptions:
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Érvénytelen meghajtót lett megadva."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl az aktuális szerint <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum nem található."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl megnyitásakor i/o-hiba történt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nincs NTFS fájlrendszert."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Az aktuális operációs rendszer nem Microsoft Windows NT vagy újabb."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A fájl az aktuális szerint <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum csak olvasható.       – vagy – ez a művelet nem támogatott a jelenlegi platformon.       – vagy – a hívó nem rendelkezik a szükséges engedéllyel."
  platform:
  - net462
- uid: System.IO.FileInfo.Delete
  id: Delete
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Delete()
  nameWithType: FileInfo.Delete()
  fullName: System.IO.FileInfo.Delete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Véglegesen töröl egy fájlt."
  remarks: "Ha a fájl nem létezik, ez a metódus nincs semmi hatása."
  example:
  - "The following example demonstrates the `Delete` method.  \n  \n [!code-cpp[finfo delete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.del_1.cpp)]\n [!code-cs[finfo delete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.del_1.cs)]\n [!code-vb[finfo delete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.del_1.vb)]  \n  \n The following example creates, closes, and deletes a file.  \n  \n [!code-cpp[fileinfodelete#1](~/add/codesnippet/cpp/m-system.io.fileinfo.del_2.cpp)]\n [!code-vb[fileinfodelete#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.del_2.vb)]\n [!code-cs[fileinfodelete#1](~/add/codesnippet/csharp/m-system.io.fileinfo.del_2.cs)]"
  syntax:
    content: public override void Delete ();
    parameters: []
  overload: System.IO.FileInfo.Delete*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A cél fájl megnyitása vagy a Microsoft Windows NT rendszerű számítógépre memórialeképezési.       – vagy – a fájl egy megnyitott leírót, és az operációs rendszer Windows XP vagy annál régebbi. A megnyitott leírót oka lehet fájlok és könyvtárak felsorolása. További információkért lásd: [hogyan: számbavétele könyvtárak és fájlok](~/add/includes/ajax-current-ext-md.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Az elérési út egy könyvtár."
  platform:
  - net462
- uid: System.IO.FileInfo.Directory
  id: Directory
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Directory
  nameWithType: FileInfo.Directory
  fullName: System.IO.FileInfo.Directory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lekérdezi a szülőkönyvtárat példánya."
  remarks: "A szülőkönyvtárat karakterláncként használatához a <xref:System.IO.FileInfo.DirectoryName%2A>tulajdonság.</xref:System.IO.FileInfo.DirectoryName%2A>"
  example:
  - "The following example opens or creates a file, determines its full path, and determines and displays the full contents of the directory.  \n  \n [!code-cs[fileinfodirectory#1](~/add/codesnippet/csharp/p-system.io.fileinfo.dir_0_1.cs)]\n [!code-vb[fileinfodirectory#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.dir_0_1.vb)]\n [!code-cpp[fileinfodirectory#1](~/add/codesnippet/cpp/p-system.io.fileinfo.dir_0_1.cpp)]"
  syntax:
    content: public System.IO.DirectoryInfo Directory { get; }
    return:
      type: System.IO.DirectoryInfo
      description: "A <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> a fájl-jének szülőkönyvtárában képviselő objektum."
  overload: System.IO.FileInfo.Directory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott elérési út érvénytelen, például egy le nem képezett meghajtón alatt."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  platform:
  - net462
- uid: System.IO.FileInfo.DirectoryName
  id: DirectoryName
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
  fullName: System.IO.FileInfo.DirectoryName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lekérdezi egy karakterlánc, amely a könyvtár elérési útját."
  remarks: "A szülő könyvtárban eléréséhez a <xref:System.IO.DirectoryInfo>objektumazonosító, használja a <xref:System.IO.FileInfo.Directory%2A>tulajdonság.</xref:System.IO.FileInfo.Directory%2A> </xref:System.IO.DirectoryInfo>       Első meghívásakor <xref:System.IO.FileInfo>hívások <xref:System.IO.FileSystemInfo.Refresh%2A>és gyorsítótárba helyezi azt a fájl adatainak.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> A további hívások, meg kell hívnia <xref:System.IO.FileSystemInfo.Refresh%2A>az információkat a legújabb példányának.</xref:System.IO.FileSystemInfo.Refresh%2A>"
  example:
  - "The following example retrieves the full path of the specified file.  \n  \n [!code-cs[System.IO.FileInfo members#3](~/add/codesnippet/csharp/p-system.io.fileinfo.dir_1_1.cs)]\n [!code-cpp[System.IO.FileInfo members#3](~/add/codesnippet/cpp/p-system.io.fileinfo.dir_1_1.cpp)]\n [!code-vb[System.IO.FileInfo members#3](~/add/codesnippet/visualbasic/p-system.io.fileinfo.dir_1_1.vb)]"
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "Egy karakterlánc, amely a könyvtár elérési útját."
  overload: System.IO.FileInfo.DirectoryName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>lett átadva a könyvtár neve."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "A teljes elérési útja 260 karakterből áll."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  platform:
  - net462
- uid: System.IO.FileInfo.Encrypt
  id: Encrypt
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Encrypt()
  nameWithType: FileInfo.Encrypt()
  fullName: System.IO.FileInfo.Encrypt()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Egy fájl titkosítja az, hogy csak a fájl titkosításához használt fiók képes a visszafejtésre."
  remarks: "A titkosítási módszer lehetővé teszi, hogy a fájl titkosítását, hogy csak a metódus hívásához használt fiók lehet visszafejteni.  Használja a <xref:System.IO.FileInfo.Decrypt%2A>metódus titkosítása módszerrel titkosítása a fájl visszafejtése.</xref:System.IO.FileInfo.Decrypt%2A>       Mindkét titkosítása metódus és a <xref:System.IO.FileInfo.Decrypt%2A>módszer használata a kriptográfiai szolgáltató (CSP) telepítve a számítógépen, és a titkosítási kulcsai a folyamat a metódus hívása.</xref:System.IO.FileInfo.Decrypt%2A>       A jelenlegi fájlrendszer formázott NTFS és a jelenlegi operációs rendszer kell lennie a Microsoft Windows NT vagy újabb verzióját kell."
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.FileInfo.Decrypt%2A> method to encrypt a file and then decrypt it.  \n  \n [!code-cpp[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.fileinfo.enc_1.cpp)]\n [!code-cs[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.fileinfo.enc_1.cs)]\n [!code-vb[IO.FileInfo.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.enc_1.vb)]"
  syntax:
    content: public void Encrypt ();
    parameters: []
  overload: System.IO.FileInfo.Encrypt*
  exceptions:
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Érvénytelen meghajtót lett megadva."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl az aktuális szerint <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum nem található."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl megnyitásakor i/o-hiba történt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nincs NTFS fájlrendszert."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Az aktuális operációs rendszer nem Microsoft Windows NT vagy újabb."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A fájl az aktuális szerint <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum csak olvasható.       – vagy – ez a művelet nem támogatott a jelenlegi platformon.       – vagy – a hívó nem rendelkezik a szükséges engedéllyel."
  platform:
  - net462
- uid: System.IO.FileInfo.Exists
  id: Exists
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Exists
  nameWithType: FileInfo.Exists
  fullName: System.IO.FileInfo.Exists
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lekérdezi egy érték, amely jelzi, hogy a fájl létezik-e."
  remarks: "Első meghívásakor <xref:System.IO.FileInfo>hívások <xref:System.IO.FileSystemInfo.Refresh%2A>és gyorsítótárba helyezi azt a fájl adatainak.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> A további hívások, meg kell hívnia <xref:System.IO.FileSystemInfo.Refresh%2A>az információkat a legújabb példányának.</xref:System.IO.FileSystemInfo.Refresh%2A>       Az Exists tulajdonság beolvasása `false` meghatározni, hogy létezik-e a megadott fájl során bármilyen hiba esetén. Ez akkor fordulhat elő, például egy fájl neve érvénytelen karaktereket vagy túl sok karakterből áll, hibás vagy hiányzó lemez átadásakor kivételek előléptetése helyzetekben, vagy ha a hívónak nincs engedélye a fájl olvasásához."
  example:
  - "The following code example uses the Exists property ensure a file exists before opening it.  You can use this technique to throw a custom exception when the file is not found.  \n  \n [!code-cpp[IO.FileInfo.Exists#1](~/add/codesnippet/cpp/p-system.io.fileinfo.exi_1.cpp)]\n [!code-cs[IO.FileInfo.Exists#1](~/add/codesnippet/csharp/p-system.io.fileinfo.exi_1.cs)]\n [!code-vb[IO.FileInfo.Exists#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.exi_1.vb)]"
  syntax:
    content: public override bool Exists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a fájl létezik; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha a fájl nem létezik, vagy ha a fájl egy könyvtárat."
  overload: System.IO.FileInfo.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.GetAccessControl
  id: GetAccessControl
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: FileInfo.GetAccessControl()
  fullName: System.IO.FileInfo.GetAccessControl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lekérdezi a <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objektum, amely magában foglalja a hozzáférés-vezérlési lista (ACL) a fájl az aktuális szerint bejegyzésekkel <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum."
  remarks: "A hozzáférés-vezérlési lista (ACL) az adott fájl bejegyzésekkel a GetAccessControl metódus használatával.       Hozzáférés-vezérlési Listában egyéni felhasználók számára és/vagy csoportot, akik rendelkeznek, vagy nincs jogosultsága, egy adott művelethez a megadott fájl ismerteti. További információkért lásd: [hogyan: hozzáadása vagy eltávolítása a hozzáférés-vezérlési lista bejegyzések](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the GetAccessControl method and the <xref:System.IO.FileInfo.SetAccessControl%2A> method to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.fileinfo.get_1.cpp)]\n [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.get_1.vb)]\n [!code-cs[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.fileinfo.get_1.cs)]"
  syntax:
    content: public System.Security.AccessControl.FileSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> az aktuális fájl hozzáférés-vezérlési szabályok beágyazó objektum."
  overload: System.IO.FileInfo.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl megnyitásakor i/o-hiba történt."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Az aktuális operációs rendszer nem Microsoft Windows 2000 vagy újabb."
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "A jelenlegi rendszer-fiók nem rendelkezik rendszergazdai jogosultságokkal."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "A fájl nem található."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ez a művelet nem támogatott a jelenlegi platformon.       – vagy – a hívó nem rendelkezik a szükséges engedéllyel."
  platform:
  - net462
- uid: System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: GetAccessControl(AccessControlSections)
  nameWithType: FileInfo.GetAccessControl(AccessControlSections)
  fullName: System.IO.FileInfo.GetAccessControl(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lekérdezi a <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> hozzáférés-vezérlési lista (ACL) bejegyzés a fájl az aktuális szerint a megadott típusú beágyazó objektum <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum."
  remarks: "A hozzáférés-vezérlési lista (ACL) az adott fájl bejegyzésekkel a GetAccessControl metódus használatával.       Hozzáférés-vezérlési Listában egyéni felhasználók számára és/vagy csoportot, akik rendelkeznek, vagy nincs jogosultsága, egy adott művelethez a megadott fájl ismerteti. További információkért lásd: [hogyan: hozzáadása vagy eltávolítása a hozzáférés-vezérlési lista bejegyzések](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Security.AccessControl.FileSecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Egy a <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> érték, amely meghatározza, melyik csoport hozzáférés szabályozásához bejegyzéseinek beolvasása."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> az aktuális fájl hozzáférés-vezérlési szabályok beágyazó objektum."
  overload: System.IO.FileInfo.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl megnyitásakor i/o-hiba történt."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Az aktuális operációs rendszer nem Microsoft Windows 2000 vagy újabb."
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "A jelenlegi rendszer-fiók nem rendelkezik rendszergazdai jogosultságokkal."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "A fájl nem található."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ez a művelet nem támogatott a jelenlegi platformon.       – vagy – a hívó nem rendelkezik a szükséges engedéllyel."
  platform:
  - net462
- uid: System.IO.FileInfo.IsReadOnly
  id: IsReadOnly
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
  fullName: System.IO.FileInfo.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lekérdezi vagy beállítja egy érték, amely azt határozza meg, ha az aktuális fájl csak olvasható."
  remarks: "A típus IsReadOnly tulajdonságának használatával gyorsan határozza meg, vagy legyen-e az aktuális fájl csak olvasható.       Első meghívásakor <xref:System.IO.FileInfo>hívások <xref:System.IO.FileSystemInfo.Refresh%2A>és gyorsítótárba helyezi azt a fájl adatainak.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> A további hívások, meg kell hívnia <xref:System.IO.FileSystemInfo.Refresh%2A>az információkat a legújabb példányának.</xref:System.IO.FileSystemInfo.Refresh%2A>"
  example:
  - "The following example uses the IsReadOnly property to mark a file as read only and then mark it as read-write.  \n  \n [!code-cs[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/csharp/p-system.io.fileinfo.isr_1.cs)]\n [!code-vb[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.isr_1.vb)]\n [!code-cpp[IO.FileInfo.IsReadOnly#1](~/add/codesnippet/cpp/p-system.io.fileinfo.isr_1.cpp)]"
  syntax:
    content: public bool IsReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális fájl írásvédett; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.FileInfo.IsReadOnly*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl az aktuális szerint <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum nem található."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl megnyitásakor i/o-hiba történt."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Ez a művelet nem támogatott a jelenlegi platformon.       – vagy – a hívó nem rendelkezik a szükséges engedéllyel."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A felhasználónak nincs írási engedélye, de a tulajdonság beállításához megkísérelt <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.FileInfo.Length
  id: Length
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Length
  nameWithType: FileInfo.Length
  fullName: System.IO.FileInfo.Length
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "A méretet, lekérdezi az aktuális fájl bájtban."
  remarks: "A Length tulajdonságot értéke előre összeállított Ha az aktuális példányát a <xref:System.IO.FileInfo>objektumot adott vissza a következő <xref:System.IO.DirectoryInfo>módszerek:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>- <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>ahhoz, hogy a legutóbbi értékét, hívja az <xref:System.IO.FileSystemInfo.Refresh%2A>metódus.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.EnumerateFiles%2A> </xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> </xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> </xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.DirectoryInfo.GetDirectories%2A> </xref:System.IO.DirectoryInfo> </xref:System.IO.FileInfo>"
  example:
  - "The following example displays the size of the specified files.  \n  \n [!code-cpp[FileLength#1](~/add/codesnippet/cpp/p-system.io.fileinfo.len_1.cpp)]\n [!code-cs[FileLength#1](~/add/codesnippet/csharp/p-system.io.fileinfo.len_1.cs)]\n [!code-vb[FileLength#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.len_1.vb)]"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "Az aktuális fájl bájtban mérete."
  overload: System.IO.FileInfo.Length*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>a fájl vagy könyvtár állapotát nem lehet frissíteni.</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl nem létezik.       – vagy – a <xref uid=&quot;langword_csharp_Length&quot; name=&quot;Length&quot; href=&quot;&quot;> </xref> tulajdonság könyvtár neve."
  platform:
  - net462
- uid: System.IO.FileInfo.MoveTo(System.String)
  id: MoveTo(System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: MoveTo(String)
  nameWithType: FileInfo.MoveTo(String)
  fullName: System.IO.FileInfo.MoveTo(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "A megadott fájl áthelyezése egy új helyre, adjon meg egy új fájlnevet is biztosít."
  remarks: "Ez a módszer használható kötetek között. Például a fájl c:\\MyFile.txt d:\\public helyezheti át, és NewFile.txt átnevezték."
  example:
  - "The following example demonstrates moving a file to a different location and renaming the file.  \n  \n [!code-cs[IO.FileInfo.MoveTo#1](~/add/codesnippet/csharp/m-system.io.fileinfo.mov_1.cs)]\n [!code-vb[IO.FileInfo.MoveTo#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.mov_1.vb)]"
  syntax:
    content: public void MoveTo (string destFileName);
    parameters:
    - id: destFileName
      type: System.String
      description: "Az elérési útja, helyezi át a fájlt, amely adhat meg másik fájlnevet."
  overload: System.IO.FileInfo.MoveTo*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/o-hiba lép fel, mint például a célfájl már létezik, vagy a céleszköz nem áll készen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destFileName</code>üres, csak szóközöket tartalmaz, vagy érvénytelen karaktereket tartalmaz."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>destFileName</code>csak olvasható vagy könyvtár."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl nem található."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott elérési út érvénytelen, például egy le nem képezett meghajtón alatt."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "A megadott elérési út vagy fájlnév meghaladja a rendszerben meghatározott maximális hosszúság. Például a Windows-alapú platformokon elérési utak legfeljebb 248 karakterből kell állnia, és a fájl nevének 260 karakternél rövidebbnek kell lennie."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destFileName</code>a karakterlánc közepén kettőspontot (:) tartalmazza."
  platform:
  - net462
- uid: System.IO.FileInfo.Name
  id: Name
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Name
  nameWithType: FileInfo.Name
  fullName: System.IO.FileInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lekérdezi a fájl nevét."
  remarks: "Első meghívásakor <xref:System.IO.FileInfo>hívások <xref:System.IO.FileSystemInfo.Refresh%2A>és gyorsítótárba helyezi azt a fájl adatainak.</xref:System.IO.FileSystemInfo.Refresh%2A> </xref:System.IO.FileInfo> A további hívások, meg kell hívnia <xref:System.IO.FileSystemInfo.Refresh%2A>az információkat a legújabb példányának.</xref:System.IO.FileSystemInfo.Refresh%2A>       A fájl nevét a kiterjesztést is magában foglalja."
  example:
  - "The following example uses the `Name` property to display the names of files in the current directory.  \n  \n [!code-cs[fileinfoname#1](~/add/codesnippet/csharp/p-system.io.fileinfo.name_1.cs)]\n [!code-cpp[fileinfoname#1](~/add/codesnippet/cpp/p-system.io.fileinfo.name_1.cpp)]\n [!code-vb[fileinfoname#1](~/add/codesnippet/visualbasic/p-system.io.fileinfo.name_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "A fájl nevét."
  overload: System.IO.FileInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode)
  id: Open(System.IO.FileMode)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode)
  nameWithType: FileInfo.Open(FileMode)
  fullName: System.IO.FileInfo.Open(FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Megnyit egy fájlt a meghatározott módban."
  remarks: ''
  example:
  - "The following example opens a file, adds some information to the file, and reads the file.  \n  \n [!code-cs[finfo open1#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_0_1.cs)]\n [!code-cpp[finfo open1#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_0_1.cpp)]\n [!code-vb[finfo open1#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_0_1.vb)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> állandó adja meg a módot (például <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>), amelyben a fájl megnyitásához."
    return:
      type: System.IO.FileStream
      description: "Az olvasási/írási hozzáférést a megadott módban megnyitott és megosztása visszavonható fájl."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl nem található."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A fájl csak olvasható vagy könyvtár."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott elérési út érvénytelen, például egy le nem képezett meghajtón alatt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl már meg nyitva."
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode,FileAccess)
  nameWithType: FileInfo.Open(FileMode,FileAccess)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Megnyit egy fájlt a megadott módban olvasási, írási vagy olvasási/írási hozzáférést."
  remarks: ''
  example:
  - "The following example opens a file as read-only and reads from the file.  \n  \n [!code-vb[finfo open2#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_2_1.vb)]\n [!code-cpp[finfo open2#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_2_1.cpp)]\n [!code-cs[finfo open2#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_2_1.cs)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> állandó adja meg a módot (például <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>), amelyben a fájl megnyitásához."
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> adjuk meg, hogy a fájl megnyitásához állandó <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;> </xref>, vagy <xref uid=&quot;langword_csharp_ReadWrite&quot; name=&quot;ReadWrite&quot; href=&quot;&quot;> </xref> hozzáférés fájlt."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> megnyitni a megadott és a hozzáférést, és megosztása visszavonható objektum."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl nem található."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>csak olvasható vagy könyvtár."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott elérési út érvénytelen, például egy le nem képezett meghajtón alatt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl már meg nyitva."
  platform:
  - net462
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Open(FileMode,FileAccess,FileShare)
  nameWithType: FileInfo.Open(FileMode,FileAccess,FileShare)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Megnyit egy fájlt a megadott olvasási, írási vagy olvasási/írási hozzáférést és a megadott megosztási beállítás módban."
  remarks: ''
  example:
  - "The following example demonstrates opening a file for reading and writing, but disallowing access to other users or processes.  \n  \n [!code-cpp[fileinfoopen#1](~/add/codesnippet/cpp/8bd38f9d-a8ac-4cea-8fda-_1.cpp)]\n [!code-cs[fileinfoopen#1](~/add/codesnippet/csharp/8bd38f9d-a8ac-4cea-8fda-_1.cs)]\n [!code-vb[fileinfoopen#1](~/add/codesnippet/visualbasic/8bd38f9d-a8ac-4cea-8fda-_1.vb)]"
  syntax:
    content: public System.IO.FileStream Open (System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> állandó adja meg a módot (például <xref uid=&quot;langword_csharp_Open&quot; name=&quot;Open&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;> </xref>), amelyben a fájl megnyitásához."
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> adjuk meg, hogy a fájl megnyitásához állandó <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;> </xref>, vagy <xref uid=&quot;langword_csharp_ReadWrite&quot; name=&quot;ReadWrite&quot; href=&quot;&quot;> </xref> hozzáférés fájlt."
    - id: share
      type: System.IO.FileShare
      description: "A <xref href=&quot;System.IO.FileShare&quot;> </xref> típusának megadásával állandó hozzáférni más <xref uid=&quot;langword_csharp_FileStream&quot; name=&quot;FileStream&quot; href=&quot;&quot;> </xref> objektumok kell ezt a fájlt."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> megnyitni a megadott üzemmódot, az access, az objektum és a megosztási beállítások."
  overload: System.IO.FileInfo.Open*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl nem található."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>csak olvasható vagy könyvtár."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott elérési út érvénytelen, például egy le nem képezett meghajtón alatt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl már meg nyitva."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenRead
  id: OpenRead
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenRead()
  nameWithType: FileInfo.OpenRead()
  fullName: System.IO.FileInfo.OpenRead()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Létrehoz egy csak olvasható <xref href=&quot;System.IO.FileStream&quot;> </xref>."
  remarks: "Ez a módszer egy csak olvasható <xref:System.IO.FileStream> <xref:System.IO.FileShare>módra van állítva <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileShare> objektum</xref:System.IO.FileStream> ad vissza"
  example:
  - "The following example opens a file as read-only and reads from it.  \n  \n [!code-vb[finfo openread#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_4_1.vb)]\n [!code-cs[finfo openread#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_4_1.cs)]\n [!code-cpp[finfo openread#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_4_1.cpp)]"
  syntax:
    content: public System.IO.FileStream OpenRead ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "Egy új írásvédett <xref href=&quot;System.IO.FileStream&quot;> </xref> objektum."
  overload: System.IO.FileInfo.OpenRead*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>csak olvasható vagy könyvtár."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott elérési út érvénytelen, például egy le nem képezett meghajtón alatt."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A fájl már meg nyitva."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenText
  id: OpenText
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenText()
  nameWithType: FileInfo.OpenText()
  fullName: System.IO.FileInfo.OpenText()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Létrehoz egy <xref:System.IO.StreamReader>UTF8 kódolás olvasó egy meglévő szövegfájlból.</xref:System.IO.StreamReader>"
  remarks: ''
  example:
  - "The following example reads text from a file.  \n  \n [!code-cpp[finfo opentext#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_1_1.cpp)]\n [!code-cs[finfo opentext#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_1_1.cs)]\n [!code-vb[finfo opentext#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_1_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenText ();
    parameters: []
    return:
      type: System.IO.StreamReader
      description: "Egy új <xref uid=&quot;langword_csharp_StreamReader&quot; name=&quot;StreamReader&quot; href=&quot;&quot;> </xref> az UTF8 kódolást."
  overload: System.IO.FileInfo.OpenText*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl nem található."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>csak olvasható vagy könyvtár."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott elérési út érvénytelen, például egy le nem képezett meghajtón alatt."
  platform:
  - net462
- uid: System.IO.FileInfo.OpenWrite
  id: OpenWrite
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: OpenWrite()
  nameWithType: FileInfo.OpenWrite()
  fullName: System.IO.FileInfo.OpenWrite()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Létrehoz egy csak írható <xref href=&quot;System.IO.FileStream&quot;> </xref>."
  remarks: "A OpenWrite metódus megnyit egy fájlt, ha egy már létezik a fájl elérési útját, vagy egy új fájlt hoz létre, ha még nem létezik. Egy már létező fájlt, azt nem az új szöveg hozzáfűzése a létező szöveg. Ehelyett felülírja a meglévő karaktereket az új karakternél. Ha felülírja a hosszabb karakterlánc (például &quot;Ez egy tesztművelet OpenWrite metódus&quot;) rövidebb karakterláncot (például &quot;második Futtatás&quot;), a fájl tartalmazza-e a karakterláncok vegyesen (&quot;második runtest OpenWrite metódus&quot;)."
  example:
  - "The following example opens a file for writing and then reads from the file.  \n  \n [!code-cs[finfo openwrite#1](~/add/codesnippet/csharp/m-system.io.fileinfo.ope_3_1.cs)]\n [!code-vb[finfo openwrite#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.ope_3_1.vb)]\n [!code-cpp[finfo openwrite#1](~/add/codesnippet/cpp/m-system.io.fileinfo.ope_3_1.cpp)]"
  syntax:
    content: public System.IO.FileStream OpenWrite ();
    parameters: []
    return:
      type: System.IO.FileStream
      description: "A csak írható megosztása visszavonható <xref href=&quot;System.IO.FileStream&quot;> </xref> objektum egy új vagy meglévő fájl."
  overload: System.IO.FileInfo.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Példányának létrehozásakor megadott elérési út a <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum csak olvasható vagy könyvtár."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Példányának létrehozásakor megadott elérési út a <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum érvénytelen, például egy le nem képezett meghajtón alatt."
  platform:
  - net462
- uid: System.IO.FileInfo.Replace(System.String,System.String)
  id: Replace(System.String,System.String)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Replace(String,String)
  nameWithType: FileInfo.Replace(String,String)
  fullName: System.IO.FileInfo.Replace(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "A megadott fájl tartalmát cseréli a fájlt a jelenlegi leírt <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum, az eredeti fájl törlése, és a fájlok biztonsági másolatának létrehozásához."
  remarks: "A csere metódus a megadott fájl tartalmát cseréli le az aktuális fájl tartalmát <xref:System.IO.FileInfo>objektum.</xref:System.IO.FileInfo>  Is létrehoz egy biztonsági másolatot a fájlról, amely le lett cserélve.  Végül adja vissza egy új <xref:System.IO.FileInfo>objektum, amely a felülírt fájl ismerteti.</xref:System.IO.FileInfo>      > [!CAUTION] > Ez a módszer Windows 2000 környezetben sikeres lesz, ha a `destFileName` csak olvasható, és nem hoz egy kivételt. <xref:System.IO.FileInfo.IsReadOnly%2A>Annak ellenőrzéséhez, ha a célfájl előtt cserélje le azt. csak olvasható tulajdonság</xref:System.IO.FileInfo.IsReadOnly%2A>       Adjon át `null` számára a `destBackupFileName` paraméternek, ha nem szeretné lecserélni a fájl biztonsági mentés létrehozásához."
  example:
  - "The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-cs[IO.FileInfo.Replace#1](~/add/codesnippet/csharp/m-system.io.fileinfo.rep_0_1.cs)]\n [!code-vb[IO.FileInfo.Replace#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.rep_0_1.vb)]\n [!code-cpp[IO.FileInfo.Replace#1](~/add/codesnippet/cpp/m-system.io.fileinfo.rep_0_1.cpp)]"
  syntax:
    content: public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: destinationFileName
      type: System.String
      description: "A fájl lecseréli az aktuális fájl nevét."
    - id: destinationBackupFileName
      type: System.String
      description: "A a fájl nevéhez, amellyel biztonsági másolatot készíteni a fájl által a `destFileName` paraméter."
    return:
      type: System.IO.FileInfo
      description: "A <xref href=&quot;System.IO.FileInfo&quot;> </xref> szerint fájl adatainak beágyazó objektum a <code> destFileName </code> paraméter."
  overload: System.IO.FileInfo.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az elérési út szerint a <code> destFileName </code> paraméter út formátuma nem volt.       – vagy – az elérési út szerint a <code> destBackupFileName </code> paraméter út formátuma nem volt."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl az aktuális szerint <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum nem található.       – vagy – a fájl által a <code> destinationFileName </code> paraméter nem található."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Az aktuális operációs rendszer nem Microsoft Windows NT vagy újabb."
  platform:
  - net462
- uid: System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.Boolean)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: Replace(String,String,Boolean)
  nameWithType: FileInfo.Replace(String,String,Boolean)
  fullName: System.IO.FileInfo.Replace(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "A megadott fájl tartalmát cseréli a fájlt a jelenlegi leírt <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum, az eredeti fájl törlése, és a fájlok biztonsági másolatának létrehozásához.  Is megadja, hogy figyelmen kívül hagyja a hibák."
  remarks: "A csere metódus a megadott fájl tartalmát cseréli le az aktuális fájl tartalmát <xref:System.IO.FileInfo>objektum.</xref:System.IO.FileInfo>  Is létrehoz egy biztonsági másolatot a fájlról, amely le lett cserélve.  Végül adja vissza egy új <xref:System.IO.FileInfo>objektum, amely a felülírt fájl ismerteti.</xref:System.IO.FileInfo>      > [!CAUTION] > Ez a módszer Windows 2000 környezetben sikeres lesz, ha a `destFileName` csak olvasható, és nem hoz egy kivételt. <xref:System.IO.FileInfo.IsReadOnly%2A>Annak ellenőrzéséhez, ha a célfájl előtt cserélje le azt. csak olvasható tulajdonság</xref:System.IO.FileInfo.IsReadOnly%2A>       Adjon át `null` számára a `destBackupFileName` paraméternek, ha nem szeretné lecserélni a fájl biztonsági mentés létrehozásához."
  example:
  - "The following example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-cs[IO.FileInfo.Replace#1](~/add/codesnippet/csharp/m-system.io.fileinfo.rep_1_1.cs)]\n [!code-vb[IO.FileInfo.Replace#1](~/add/codesnippet/visualbasic/m-system.io.fileinfo.rep_1_1.vb)]\n [!code-cpp[IO.FileInfo.Replace#1](~/add/codesnippet/cpp/m-system.io.fileinfo.rep_1_1.cpp)]"
  syntax:
    content: public System.IO.FileInfo Replace (string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: destinationFileName
      type: System.String
      description: "A fájl lecseréli az aktuális fájl nevét."
    - id: destinationBackupFileName
      type: System.String
      description: "A a fájl nevéhez, amellyel biztonsági másolatot készíteni a fájl által a `destFileName` paraméter."
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a csere fájlhoz, figyelmen kívül (például attribútumok és hozzáférés-vezérlési listák) hibák kicserélt fájlból Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.FileInfo
      description: "A <xref href=&quot;System.IO.FileInfo&quot;> </xref> szerint fájl adatainak beágyazó objektum a <code> destFileName </code> paraméter."
  overload: System.IO.FileInfo.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az elérési út szerint a <code> destFileName </code> paraméter út formátuma nem volt.       – vagy – az elérési út szerint a <code> destBackupFileName </code> paraméter út formátuma nem volt."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl az aktuális szerint <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum nem található.       – vagy – a fájl által a <code> destinationFileName </code> paraméter nem található."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Az aktuális operációs rendszer nem Microsoft Windows NT vagy újabb."
  platform:
  - net462
- uid: System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.Security.AccessControl.FileSecurity)
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: SetAccessControl(FileSecurity)
  nameWithType: FileInfo.SetAccessControl(FileSecurity)
  fullName: System.IO.FileInfo.SetAccessControl(FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Hozzáférés-vezérlési lista (ACL) bejegyzés szerint alkalmazza a <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objektum által az aktuális fájl <xref href=&quot;System.IO.FileInfo&quot;> </xref> objektum."
  remarks: "A SetAccessControl módszer vonatkozik a noninherited ACL listát jelölő aktuális fájl hozzáférés-vezérlési lista (ACL) bejegyzés.       A SetAccessControl módszert lehet hozzáadni vagy eltávolítani az ACL-bejegyzések fájlból van szüksége.      > [!CAUTION] > A hozzáférés-vezérlési lista megadása a `fileSecurity` paraméter lecseréli a meglévő hozzáférés-vezérlési lista a fájl. Engedélyek egy új felhasználó hozzáadásához használja a <xref:System.IO.Directory.GetAccessControl%2A>metódus a meglévő ACL lekéréséhez, módosítása és SetAccessControl használatával alkalmazza azt a fájl biztonsági.</xref:System.IO.Directory.GetAccessControl%2A>       Hozzáférés-vezérlési Listában egyéni felhasználók számára és/vagy csoportot, akik rendelkeznek, vagy nincs jogosultsága, egy adott művelethez a megadott fájl ismerteti. További információkért lásd: [hogyan: hozzáadása vagy eltávolítása a hozzáférés-vezérlési lista bejegyzések](~/add/includes/ajax-current-ext-md.md).       A SetAccessControl metódus csak továbbra is fennáll <xref:System.Security.AccessControl.FileSecurity>objektum létrehozása után módosított objektumok.</xref:System.Security.AccessControl.FileSecurity>  Ha egy <xref:System.Security.AccessControl.FileSecurity>objektum nem lett módosítva, azt nem maradnak meg a fájlhoz.</xref:System.Security.AccessControl.FileSecurity>  Ezért, nincs lehetőség a beolvasni egy <xref:System.Security.AccessControl.FileSecurity>objektumra egy fájlból, és alkalmazza újra ugyanazt az objektumot egy másik fájlba.</xref:System.Security.AccessControl.FileSecurity>       A hozzáférés-vezérlési lista adatokat másolhat egy fájlt egy másikra: 1.  Használja a <xref:System.IO.FileInfo.GetAccessControl%2A>metódusának segítéségével lekérheti a <xref:System.Security.AccessControl.FileSecurity>objektum a forrásfájlból.</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.FileInfo.GetAccessControl%2A>      2.  Hozzon létre egy új <xref:System.Security.AccessControl.FileSecurity>objektum a célfájl.</xref:System.Security.AccessControl.FileSecurity>      3.  Használja a <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>vagy <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>módszer a forrás <xref:System.Security.AccessControl.FileSecurity>objektumhoz a hozzáférés-vezérlési lista adatokat beolvasni.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  Használja a <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>vagy <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>metódus az információ másolásához beolvasni a 3. lépésben a cél- <xref:System.Security.AccessControl.FileSecurity>objektum.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  A célkiszolgálón állítsa <xref:System.Security.AccessControl.FileSecurity>objektum a SetAccessControl metódussal a fájlhoz.</xref:System.Security.AccessControl.FileSecurity>"
  example:
  - "The following code example uses the <xref:System.IO.FileInfo.GetAccessControl%2A> method and the SetAccessControl method to add and then remove an ACL entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cpp[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/c24a4717-31ac-4834-901c-_1.cpp)]\n [!code-vb[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/c24a4717-31ac-4834-901c-_1.vb)]\n [!code-cs[IO.FileInfo.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/c24a4717-31ac-4834-901c-_1.cs)]"
  syntax:
    content: public void SetAccessControl (System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objektum, amely az aktuális fájl alkalmazandó hozzáférés-vezérlési lista (ACL) bejegyzés ismerteti."
  overload: System.IO.FileInfo.SetAccessControl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "A fájl nem található vagy nem módosított."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A jelenlegi folyamat nem rendelkezik hozzáféréssel a fájl megnyitásához."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Az aktuális operációs rendszer nem Microsoft Windows 2000 vagy újabb."
  platform:
  - net462
- uid: System.IO.FileInfo.ToString
  id: ToString
  parent: System.IO.FileInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: FileInfo.ToString()
  fullName: System.IO.FileInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Az elérési út karakterláncként adja vissza."
  remarks: "A ToString metódus által visszaadott karakterlánc elérési utat, amely a konstruktornak átadott jelöli.  Amikor létrehoz egy <xref:System.IO.FileInfo>objektumba a konstruktorok a ToString metódus visszaadja a teljesen minősített elérési útja.</xref:System.IO.FileInfo>  Azonban vannak esetek, ahol a ToString metódus által visszaadott karakterlánc nem felel meg a teljes elérési útja.  Például amikor hoz létre egy <xref:System.IO.FileInfo>objektum alapján, a <xref:System.IO.DirectoryInfo.GetFiles%2A>módszer, a ToString metódus nem felel meg a teljes mértékben minősített elérési útja.</xref:System.IO.DirectoryInfo.GetFiles%2A> </xref:System.IO.FileInfo>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Egy karakterlánc, amely az elérési út."
  overload: System.IO.FileInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.FileSystemInfo
  isExternal: false
  name: System.IO.FileSystemInfo
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  parent: System.Security.AccessControl
  isExternal: false
  name: PrivilegeNotHeldException
  nameWithType: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.IO.FileInfo.#ctor(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: FileInfo(String)
  nameWithType: FileInfo.FileInfo(String)
  fullName: System.IO.FileInfo.FileInfo(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileInfo.AppendText
  parent: System.IO.FileInfo
  isExternal: false
  name: AppendText()
  nameWithType: FileInfo.AppendText()
  fullName: System.IO.FileInfo.AppendText()
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.FileInfo.CopyTo(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo(String)
  nameWithType: FileInfo.CopyTo(String)
  fullName: System.IO.FileInfo.CopyTo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO.FileInfo.CopyTo(System.String,System.Boolean)
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo(String,Boolean)
  nameWithType: FileInfo.CopyTo(String,Boolean)
  fullName: System.IO.FileInfo.CopyTo(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.FileInfo.Create
  parent: System.IO.FileInfo
  isExternal: false
  name: Create()
  nameWithType: FileInfo.Create()
  fullName: System.IO.FileInfo.Create()
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.FileInfo.CreateText
  parent: System.IO.FileInfo
  isExternal: false
  name: CreateText()
  nameWithType: FileInfo.CreateText()
  fullName: System.IO.FileInfo.CreateText()
- uid: System.IO.FileInfo.Decrypt
  parent: System.IO.FileInfo
  isExternal: false
  name: Decrypt()
  nameWithType: FileInfo.Decrypt()
  fullName: System.IO.FileInfo.Decrypt()
- uid: System.IO.FileInfo.Delete
  parent: System.IO.FileInfo
  isExternal: false
  name: Delete()
  nameWithType: FileInfo.Delete()
  fullName: System.IO.FileInfo.Delete()
- uid: System.IO.FileInfo.Directory
  parent: System.IO.FileInfo
  isExternal: false
  name: Directory
  nameWithType: FileInfo.Directory
  fullName: System.IO.FileInfo.Directory
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.FileInfo.DirectoryName
  parent: System.IO.FileInfo
  isExternal: false
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
  fullName: System.IO.FileInfo.DirectoryName
- uid: System.IO.FileInfo.Encrypt
  parent: System.IO.FileInfo
  isExternal: false
  name: Encrypt()
  nameWithType: FileInfo.Encrypt()
  fullName: System.IO.FileInfo.Encrypt()
- uid: System.IO.FileInfo.Exists
  parent: System.IO.FileInfo
  isExternal: false
  name: Exists
  nameWithType: FileInfo.Exists
  fullName: System.IO.FileInfo.Exists
- uid: System.IO.FileInfo.GetAccessControl
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl()
  nameWithType: FileInfo.GetAccessControl()
  fullName: System.IO.FileInfo.GetAccessControl()
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.FileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl(AccessControlSections)
  nameWithType: FileInfo.GetAccessControl(AccessControlSections)
  fullName: System.IO.FileInfo.GetAccessControl(AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.FileInfo.IsReadOnly
  parent: System.IO.FileInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
  fullName: System.IO.FileInfo.IsReadOnly
- uid: System.IO.FileInfo.Length
  parent: System.IO.FileInfo
  isExternal: false
  name: Length
  nameWithType: FileInfo.Length
  fullName: System.IO.FileInfo.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.FileInfo.MoveTo(System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: MoveTo(String)
  nameWithType: FileInfo.MoveTo(String)
  fullName: System.IO.FileInfo.MoveTo(String)
- uid: System.IO.FileInfo.Name
  parent: System.IO.FileInfo
  isExternal: false
  name: Name
  nameWithType: FileInfo.Name
  fullName: System.IO.FileInfo.Name
- uid: System.IO.FileInfo.Open(System.IO.FileMode)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode)
  nameWithType: FileInfo.Open(FileMode)
  fullName: System.IO.FileInfo.Open(FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode,FileAccess)
  nameWithType: FileInfo.Open(FileMode,FileAccess)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.FileInfo
  isExternal: false
  name: Open(FileMode,FileAccess,FileShare)
  nameWithType: FileInfo.Open(FileMode,FileAccess,FileShare)
  fullName: System.IO.FileInfo.Open(FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.FileInfo.OpenRead
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenRead()
  nameWithType: FileInfo.OpenRead()
  fullName: System.IO.FileInfo.OpenRead()
- uid: System.IO.FileInfo.OpenText
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenText()
  nameWithType: FileInfo.OpenText()
  fullName: System.IO.FileInfo.OpenText()
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.FileInfo.OpenWrite
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenWrite()
  nameWithType: FileInfo.OpenWrite()
  fullName: System.IO.FileInfo.OpenWrite()
- uid: System.IO.FileInfo.Replace(System.String,System.String)
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace(String,String)
  nameWithType: FileInfo.Replace(String,String)
  fullName: System.IO.FileInfo.Replace(String,String)
- uid: System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace(String,String,Boolean)
  nameWithType: FileInfo.Replace(String,String,Boolean)
  fullName: System.IO.FileInfo.Replace(String,String,Boolean)
- uid: System.IO.FileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)
  parent: System.IO.FileInfo
  isExternal: false
  name: SetAccessControl(FileSecurity)
  nameWithType: FileInfo.SetAccessControl(FileSecurity)
  fullName: System.IO.FileInfo.SetAccessControl(FileSecurity)
- uid: System.IO.FileInfo.ToString
  parent: System.IO.FileInfo
  isExternal: false
  name: ToString()
  nameWithType: FileInfo.ToString()
  fullName: System.IO.FileInfo.ToString()
- uid: System.IO.FileInfo.#ctor*
  parent: System.IO.FileInfo
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo.FileInfo
- uid: System.IO.FileInfo.AppendText*
  parent: System.IO.FileInfo
  isExternal: false
  name: AppendText
  nameWithType: FileInfo.AppendText
- uid: System.IO.FileInfo.CopyTo*
  parent: System.IO.FileInfo
  isExternal: false
  name: CopyTo
  nameWithType: FileInfo.CopyTo
- uid: System.IO.FileInfo.Create*
  parent: System.IO.FileInfo
  isExternal: false
  name: Create
  nameWithType: FileInfo.Create
- uid: System.IO.FileInfo.CreateText*
  parent: System.IO.FileInfo
  isExternal: false
  name: CreateText
  nameWithType: FileInfo.CreateText
- uid: System.IO.FileInfo.Decrypt*
  parent: System.IO.FileInfo
  isExternal: false
  name: Decrypt
  nameWithType: FileInfo.Decrypt
- uid: System.IO.FileInfo.Delete*
  parent: System.IO.FileInfo
  isExternal: false
  name: Delete
  nameWithType: FileInfo.Delete
- uid: System.IO.FileInfo.Directory*
  parent: System.IO.FileInfo
  isExternal: false
  name: Directory
  nameWithType: FileInfo.Directory
- uid: System.IO.FileInfo.DirectoryName*
  parent: System.IO.FileInfo
  isExternal: false
  name: DirectoryName
  nameWithType: FileInfo.DirectoryName
- uid: System.IO.FileInfo.Encrypt*
  parent: System.IO.FileInfo
  isExternal: false
  name: Encrypt
  nameWithType: FileInfo.Encrypt
- uid: System.IO.FileInfo.Exists*
  parent: System.IO.FileInfo
  isExternal: false
  name: Exists
  nameWithType: FileInfo.Exists
- uid: System.IO.FileInfo.GetAccessControl*
  parent: System.IO.FileInfo
  isExternal: false
  name: GetAccessControl
  nameWithType: FileInfo.GetAccessControl
- uid: System.IO.FileInfo.IsReadOnly*
  parent: System.IO.FileInfo
  isExternal: false
  name: IsReadOnly
  nameWithType: FileInfo.IsReadOnly
- uid: System.IO.FileInfo.Length*
  parent: System.IO.FileInfo
  isExternal: false
  name: Length
  nameWithType: FileInfo.Length
- uid: System.IO.FileInfo.MoveTo*
  parent: System.IO.FileInfo
  isExternal: false
  name: MoveTo
  nameWithType: FileInfo.MoveTo
- uid: System.IO.FileInfo.Name*
  parent: System.IO.FileInfo
  isExternal: false
  name: Name
  nameWithType: FileInfo.Name
- uid: System.IO.FileInfo.Open*
  parent: System.IO.FileInfo
  isExternal: false
  name: Open
  nameWithType: FileInfo.Open
- uid: System.IO.FileInfo.OpenRead*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenRead
  nameWithType: FileInfo.OpenRead
- uid: System.IO.FileInfo.OpenText*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenText
  nameWithType: FileInfo.OpenText
- uid: System.IO.FileInfo.OpenWrite*
  parent: System.IO.FileInfo
  isExternal: false
  name: OpenWrite
  nameWithType: FileInfo.OpenWrite
- uid: System.IO.FileInfo.Replace*
  parent: System.IO.FileInfo
  isExternal: false
  name: Replace
  nameWithType: FileInfo.Replace
- uid: System.IO.FileInfo.SetAccessControl*
  parent: System.IO.FileInfo
  isExternal: false
  name: SetAccessControl
  nameWithType: FileInfo.SetAccessControl
- uid: System.IO.FileInfo.ToString*
  parent: System.IO.FileInfo
  isExternal: false
  name: ToString
  nameWithType: FileInfo.ToString
