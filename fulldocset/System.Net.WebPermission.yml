### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "Vezérlők jogosultsága a HTTP-alapú internetes erőforrások eléréséhez."
  remarks: "A WebPermission biztosít módszerek és a Tulajdonságok internetes erőforrásokhoz való hozzáférés vezérlése érdekében. A WebPermission használhatja az erőforrás-alapú korlátozott vagy nem korlátozott hozzáférést biztosítani a <xref:System.Security.Permissions.PermissionState>a WebPermission jön létre, amely van beállítva.</xref:System.Security.Permissions.PermissionState>       A WebPermission példány létrehozása hívásával saját konstruktoraikban, használja a következő paraméterek egyikét:-paraméter nélkül. Az alapértelmezett <xref:System.Security.Permissions.PermissionState> <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> Adja meg <xref:System.Security.Permissions.PermissionState>bármely URI-t a célosztállyal használható engedélyezéséhez vagy <xref:System.Security.Permissions.PermissionState>URI-azonosítók használatával adhatja csak hozzá az <xref:System.Net.WebPermission.AddPermission%2A>metódus.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -A <xref:System.Net.NetworkAccess>érték és a URI karakterlánc.</xref:System.Net.NetworkAccess> A megadott URI azonosító által biztosított engedélyekkel rendelkezik a <xref:System.Net.NetworkAccess>érték.</xref:System.Net.NetworkAccess>      -A <xref:System.Net.NetworkAccess>megadása pedig URI reguláris kifejezéssel.</xref:System.Net.NetworkAccess>       A <xref:System.Net.WebPermission.ConnectList%2A>és <xref:System.Net.WebPermission.AcceptList%2A>tartsa a URI-k, amelyek engedéllyel rendelkeznek.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.WebPermission.ConnectList%2A> A listák valamelyik URI hozzáadásához használja a <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> Ha a <xref:System.Net.NetworkAccess>, a <xref:System.Net.NetworkAccess>paramétert, az URI nem kerülnek be a <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess> A WebPermission kapcsolatokat engedélyezi a célosztály számára olyan URI-kat a <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A> megfelelő      > [!CAUTION] > Internetes erőforráshoz való hozzáférés megtagadásához kell megtagadja a hozzáférést az összes lehetséges elérési utat adott erőforráshoz. Ehhez a <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>state paraméter értéke <xref:System.Security.CodeAccessPermission.Deny%2A>.</xref:System.Security.CodeAccessPermission.Deny%2A> metódust</xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName> hívja. A jobb megoldás, csak az adott erőforráshoz való hozzáférés engedélyezéséhez. Témával kapcsolatban további információkért tekintse meg a [NIB: a megtagadási metódussal](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) témakör.      > [!NOTE] > Megtagadja a hozzáférést, csak a erőforrás kanonikus elérési utat kell. Nincs szükség az összes elérési szintaktikai eltéréseket használandó.      > [!NOTE] > Felhasználói nevét és az alapértelmezett port információit üres karaktert törölni a a <xref:System.Uri>számára megadott reguláris kifejezés argumentummal összehasonlítás előtt a <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>konstruktor.</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> Ha a reguláris kifejezés tartalmazza a felhasználói adatok vagy az alapértelmezett portszám, akkor minden bejövő <xref:System.Uri>s nem felel meg a reguláris kifejezésnek.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Net.WebPermission&quot;> </xref> osztály."
  remarks: "Létrehoz egy új példányt a <xref:System.Net.WebPermission>osztályhoz.</xref:System.Net.WebPermission> Ez a konstruktor létrehoz egy üres engedéllyel, amely nem biztosít semmilyen jogot."
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Net.WebPermission&quot;> </xref> osztály, amely az összes megfelelt követelményeket, vagy sikertelen lesz minden iránti igények kielégítése érdekében."
  remarks: "Értékét a `state` paraméter vagy <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>vagy <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>, illetve ad eredményt a következő teljes korlátozott, vagy teljesen korlátozás nélkül hozzáférnek az összes biztonsági változók.</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName> Ha úgy állítja be <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>, majd az egyes URI-azonosítók <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> használatával hozzáférést biztosíthat</xref:System.Security.Permissions.PermissionState?displayProperty=fullName>"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.WebPermission&quot;> </xref> osztály a megadott hozzáférési engedélyekkel a megadott URI-hoz."
  remarks: "Ez a konstruktor inicializálja a <xref:System.Net.WebPermission>és engedélyt ad a célként megadott vagy a távoli kapcsolat üzemeltetni, vagy fogadja el a távoli állomás kapcsolat szerint URI segítségével ellenőrizze a `uriString` paraméter.</xref:System.Net.WebPermission>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Azt jelzi, hogy milyen a megadott URI-hoz való hozzáférés NetworkAccess érték. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>azt jelzi, hogy az alkalmazás a helyi erőforráshoz az internetről érkező kapcsolatok fogadására. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>azt jelzi, hogy az alkalmazás adott internetes erőforrások eléréséhez."
    - id: uriString
      type: System.String
      description: "Mely hozzáférés jogok URI karakterlánc."
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.WebPermission&quot;> </xref> osztály a megadott hozzáférési engedélyekkel a megadott URI reguláris kifejezést."
  remarks: "Ez a konstruktor inicializálja a <xref:System.Net.WebPermission>és engedélyt ad a célként megadott vagy a távoli kapcsolat üzemeltetni, vagy fogadja el a távoli állomás kapcsolat szerint URI segítségével ellenőrizze a `uriRegex`paraméter.</xref:System.Net.WebPermission>      > [!NOTE] > Javasoljuk, hogy hozzon létre `uriRegex` használatával a <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, és <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>jelzők.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > A URI karakterlánc jelölt be van jelölve, a megfelelő reguláris kifejezések listája alapján (<xref:System.Net.WebPermission.AcceptList%2A> vagy <xref:System.Net.WebPermission.ConnectList%2A>) két módon.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Először is be van jelölve a URI karakterlánc jelölt; megfelelő listája alapján Ezután ha nem megfelelő, a URI karakterlánc jelölt alakítható egy <xref:System.Uri>és be van jelölve, a megfelelő listája alapján.</xref:System.Uri>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> érték, amely azt jelzi, hogy milyen a megadott URI-hoz való hozzáférés. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>azt jelzi, hogy az alkalmazás a helyi erőforráshoz az internetről érkező kapcsolatok fogadására. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>azt jelzi, hogy az alkalmazás adott internetes erőforrások eléréséhez."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Reguláris kifejezés, amely leírja a URI-azonosítója, amelyhez hozzáférési engedélyezhető van."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ez a tulajdonság egy egyetlen enumerálást ad vissza fogadja el a engedélyekről <xref href=&quot;System.Net.WebPermission&quot;> </xref>. A lehetséges objektumokat, a visszaadott felsorolásban szereplő típusok <xref:System.String>és &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Ez a tulajdonság lehetővé teszi őket a <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> helyi erőforrások listájának lekérése Az osztály, amelyhez alkalmazott <xref:System.Net.WebPermission>csak a bejövő kapcsolatokat ezen a listán található helyi erőforrások fogadására jogosult.</xref:System.Net.WebPermission>      > [!NOTE] > Ebben a listában <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> használatával adhat hozzá URI-azonosítók      > [!NOTE] > A URI karakterlánc jelölt be van jelölve, a megfelelő reguláris kifejezések listája alapján (AcceptList vagy <xref:System.Net.WebPermission.ConnectList%2A>) két módon.</xref:System.Net.WebPermission.ConnectList%2A> Először is be van jelölve a URI karakterlánc jelölt; megfelelő listája alapján Ezután ha nem megfelelő, a URI karakterlánc jelölt alakítható egy <xref:System.Uri>és be van jelölve, a megfelelő listája alapján.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "A <xref:System.Collections.IEnumerator>tartalmazó felület fogadja el az engedélyek.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Hozzáadja a megadott URI-karakterláncot a megadott hozzáférési engedélyekkel a jelenlegi <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Ha a megadott <xref:System.Security.Permissions.PermissionState>, a <xref:System.Security.Permissions.PermissionState>, AddPermission segítségével engedélyezheti, hogy `uriString` a cél az osztályt a</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> A ahogyan `uriString` használhatja a célelem által osztály által meghatározott `access`. Adja meg <xref:System.Net.NetworkAccess>a hozzáférés paraméter által megadott URI hozzáadása a `uriString` paraméter URI listáját fogadja el a karakterláncok, vagy adjon meg <xref:System.Net.NetworkAccess>a hozzáférést az URI azonosító hozzáadása a listához URI paraméter csatlakoztathat karakterláncok.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > AddPermission hívja a <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>nem lesz hatása, mivel minden URI-azonosítók az engedélyt.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>      > [!NOTE] > A URI karakterlánc jelölt be van jelölve, a megfelelő reguláris kifejezések listája alapján (<xref:System.Net.WebPermission.AcceptList%2A> vagy <xref:System.Net.WebPermission.ConnectList%2A>) két módon.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Először is be van jelölve a URI karakterlánc jelölt; megfelelő listája alapján Ezután ha nem megfelelő, a URI karakterlánc jelölt alakítható egy <xref:System.Uri>és be van jelölve, a megfelelő listája alapján.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "A <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> , amely megadja, hogy a hozzáférési jogok, amelyeket az URI-azonosítóval."
    - id: uriString
      type: System.String
      description: "Egy karakterlánc, amely a jogok mely hozzáférés URI."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Hozzáadja a megadott URI azonosító a megadott hozzáférési engedélyekkel a jelenlegi <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Ha a megadott <xref:System.Security.Permissions.PermissionState>, a <xref:System.Security.Permissions.PermissionState>, használjon <xref:System.Net.WebPermission.AddPermission%2A>való használatának engedélyezése `uriRegex` a cél az osztályt a</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> Adja meg <xref:System.Net.NetworkAccess>, a `access` paraméter által megadott URI hozzáadása a `uriRegex` paraméter URI listáját fogadja el a karakterláncok, vagy adjon meg <xref:System.Net.NetworkAccess>a hozzáférést az URI azonosító hozzáadása a listához URI paraméter csatlakoztathat karakterláncok.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > Hívása <xref:System.Net.WebPermission.AddPermission%2A>a egy <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>példány nem lesz hatása, engedélyt minden URI-azonosítók.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > Javasoljuk, hogy hozzon létre `uriRegex` használatával a <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, és <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>jelzők.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > A URI karakterlánc jelölt be van jelölve, a megfelelő reguláris kifejezések listája alapján (<xref:System.Net.WebPermission.AcceptList%2A> vagy <xref:System.Net.WebPermission.ConnectList%2A>) két módon.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> Először is be van jelölve a URI karakterlánc jelölt; megfelelő listája alapján Ezután ha nem megfelelő, a URI karakterlánc jelölt alakítható egy <xref:System.Uri>és be van jelölve, a megfelelő listája alapján.</xref:System.Uri>"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Egy NetworkAccess, amely meghatározza a hozzáférési jogok, amelyeket az URI-azonosítóval."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Reguláris kifejezés, amely a jogok mely hozzáférés URI ismerteti."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ez a tulajdonság egy egyetlen enumerálást ad vissza kapcsolódási engedélyeinek ennek birtokában <xref href=&quot;System.Net.WebPermission&quot;> </xref>. A lehetséges objektumokat, a visszaadott felsorolásban szereplő típusok <xref:System.String>és &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Ez a tulajdonság a <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> távoli erőforrások listájának lekérése Az osztály, amelyhez alkalmazott <xref:System.Net.WebPermission>csak akkor van engedélye csatlakozni a listában található erőforrásokkal.</xref:System.Net.WebPermission>      > [!NOTE] > Ebben a listában <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> használatával adhat hozzá URI-azonosítók      > [!NOTE] > A URI karakterlánc jelölt be van jelölve, a megfelelő reguláris kifejezések listája alapján (<xref:System.Net.WebPermission.AcceptList%2A> vagy ConnectList) két módon.</xref:System.Net.WebPermission.AcceptList%2A> Először is be van jelölve a URI karakterlánc jelölt; megfelelő listája alapján Ezután ha nem megfelelő, a URI karakterlánc jelölt alakítható egy <xref:System.Uri>és be van jelölve, a megfelelő listája alapján.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "A <xref:System.Collections.IEnumerator>felület, amely tartalmazza a kapcsolódási engedélyeinek.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Másolatot készít egy <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "A <xref:System.Security.IPermission>visszaadott által a azonos elérhető erőforrások, mint az eredeti <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> metódus jelöli</xref:System.Security.IPermission> Ezt a módszert felülbírálja <xref:System.Security.CodeAccessPermission.Copy%2A>, és támogatja a <xref:System.Security.IPermission>felületet.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Egy új példányt a <xref href=&quot;System.Net.WebPermission&quot;> </xref> osztály, amely rendelkezik az eredetivel megegyező értékeket."
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rekonstruálja egy <xref href=&quot;System.Net.WebPermission&quot;> </xref> az XML-kódolás."
  remarks: "A FromXml metódus Rekonstruálja <xref:System.Net.WebPermission>az XML-kódolás az <xref:System.Security.SecurityElement>osztály</xref:System.Security.SecurityElement> definiálva, amely</xref:System.Net.WebPermission>       Használja a <xref:System.Net.WebPermission.ToXml%2A>XML-kódolás módszer a <xref:System.Net.WebPermission>, beleértve az állapotadatokat.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission.ToXml%2A>"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "Az XML-kódolás, amelyből hozza létre újból a <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> securityElement </code> paraméter<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>Nincs ilyen engedélyelem."
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Két logikai metszetét adja vissza <xref href=&quot;System.Net.WebPermission&quot;> </xref> példányok."
  remarks: "INTERSECT értéket ad vissza egy <xref:System.Net.WebPermission>, amely tartalmazza ezeket az engedélyeket, amelyek közös mindkét `target` és az aktuális példány.</xref:System.Net.WebPermission>       Ezt a módszert felülbírálja <xref:System.Security.CodeAccessPermission.Intersect%2A>, és támogatja a <xref:System.Security.IPermission>felületet.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> való összehasonlításra az aktuális példány."
    return:
      type: System.Security.IPermission
      description: "Egy új <xref href=&quot;System.Net.WebPermission&quot;> </xref> , amely jelzi, hogy az aktuális példány metszetét és a <code> target </code> paraméter. Ha a metszetének nincs megadva, a metódus visszaadja <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy típusa<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Meghatározza, hogy az aktuális <xref href=&quot;System.Net.WebPermission&quot;> </xref> a megadott objektum részhalmaza."
  remarks: "Ha az aktuális <xref:System.Net.WebPermission>teljesen által tartalmazott kapcsolódó erőforrások olyan készletét adja meg a `target` paramétert, majd az aktuális <xref:System.Net.WebPermission>részhalmaza `target`.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission> Ez a módszer IsSubsetOf felülbírálja és támogatására van megvalósítva a <xref:System.Security.IPermission>felületet.</xref:System.Security.IPermission>"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> az aktuális összehasonlítandó <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális példány egy részét a <code> target </code> paraméter; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Ha a cél <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a metódus visszaadja <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> egy üres aktuális engedélyt, amely nincs korlátlan és <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> más módon."
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A célként megadott paraméter nem egy példánya <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az aktuális példány tartalmaz egy Regex-kódolású jobbra, és a rendszer nem pontosan ugyanaz a célpéldány jobbra található."
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Általános engedély állapotát ellenőrzi a <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Ha <xref:System.Net.WebPermission>van <xref:System.Security.Permissions.PermissionState>, akkor a célosztály használható minden URI-azonosítók.</xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission> Konkrét engedély ellenkező esetben bármely URI-azonosítóhoz tartozó használni kívánt kell megadni.      > [!NOTE] > Használata <xref:System.Net.WebPermission.AddPermission%2A>hozzáadása egy URI-t, és adja meg az engedélyeket.</xref:System.Net.WebPermission.AddPermission%2A>"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Létrehoz egy XML-kódolása egy <xref href=&quot;System.Net.WebPermission&quot;> </xref> és a jelenlegi állapotában."
  remarks: "Használja a <xref:System.Net.WebPermission.FromXml%2A> <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> állapot adatainak helyreállítása</xref:System.Net.WebPermission.FromXml%2A>"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref> , amely tartalmaz egy XML-kódolású megjelenítése a <xref href=&quot;System.Net.WebPermission&quot;> </xref>, beleértve az állapotadatokat."
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Logikai Uniójának visszaadása két példányai között a <xref href=&quot;System.Net.WebPermission&quot;> </xref> osztály."
  remarks: "Unióját adja vissza egy <xref:System.Net.WebPermission>mindkét az engedélyeket tartalmazó `target` és az aktuális példány.</xref:System.Net.WebPermission>"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> az aktuális egyesítenie <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;> </xref> , amely jelöli az Unió az aktuális példány és a <code> target </code> paraméter. If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. Ha a cél <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a módszer az aktuális olyan másolatát adja vissza <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "célja nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy típusú <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
