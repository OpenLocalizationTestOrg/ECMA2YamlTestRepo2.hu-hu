### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression
  id: OrderByExpression
  children:
  - System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  - System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  - System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  - System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  langs:
  - csharp
  name: OrderByExpression
  nameWithType: OrderByExpression
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression
  type: Class
  summary: "Egy rendezési kifejezés alkalmazandó módot biztosít egy <xref:System.Linq.IQueryable>objektum.</xref:System.Linq.IQueryable>"
  remarks: "A OrderByExpression osztály a <xref:System.Web.UI.WebControls.QueryExtender>vezérlő adatokat növekvő vagy csökkenő sorrendben rendezni.</xref:System.Web.UI.WebControls.QueryExtender> Az az elem az alapértelmezett összehasonlítót a rendezési végzi.       A <xref:System.Web.UI.WebControls.QueryExtender>vezérlő beállítások, amelyekkel adatok szűrése számos támogat.</xref:System.Web.UI.WebControls.QueryExtender> Miután a szűrőbeállításokat, a OrderByExpression objektum segítségével rendezze az adatokat.       Az adatok mező rendezése segítségével megadhatja a <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A>tulajdonság.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> A rendezési irány használatával adja meg a <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>tulajdonság.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> Miután a OrderByExpression objektum telepítve van az adatforráshoz, használhatja a <xref:System.Web.UI.WebControls.Expressions.ThenBy>egy másik adatmező hajtsa végre a következő rendezési kifejezéseket.</xref:System.Web.UI.WebControls.Expressions.ThenBy>"
  example:
  - "The following example shows how to search the Products table of the AdventureWorks database for products that have names that start with the string that is specified in the `SearchTextBox` text box. The OrderByExpression object sorts the data by the ListPrice data field in descending order and then by the product ID field in ascending order. The result of the query that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ThenByExpressions")]

      [System.Web.UI.PersistChildren(false)]

      public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: OrderByExpression()
  nameWithType: OrderByExpression.OrderByExpression()
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.OrderByExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> osztály."
  syntax:
    content: public OrderByExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: DataField
  nameWithType: OrderByExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Lekérdezi vagy beállítja a tulajdonsága a <xref:System.Linq.IQueryable>objektum szerinti rendezéshez.</xref:System.Linq.IQueryable>"
  remarks: "A <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>objektum rendezi az adatokat egy adatmező.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression> További rendezési művelet egy másik adatmezőhöz a használatával hajtható végre a <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>tulajdonság.</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the product ID field in ascending order. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "A tulajdonság a <xref:System.Linq.IQueryable>adatforrás-objektum szerinti rendezéshez.</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  id: Direction
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: Direction
  nameWithType: OrderByExpression.Direction
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Lekérdezi vagy beállítja a rendezés irányát a <xref:System.Linq.IQueryable>adatforrás-objektum.</xref:System.Linq.IQueryable>"
  remarks: "A <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>osztály a <xref:System.Web.UI.WebControls.QueryExtender>vezérlő adatokat növekvő vagy csökkenő sorrendben rendezni.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression> A rendezési művelet irányát a irány tulajdonság használatával van megadva."
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the ProductID field in ascending order. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.SortDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "Az adatforrás-objektum rendezés irányát."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: OrderByExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Egy rendezési kifejezés vonatkozik egy <xref:System.Linq.IQueryable>objektum alapján egy <> </> *> érték és egy <> </> *> érték.</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "Meghatározza az adatforrás a rendezést alkalmazza."
    return:
      type: System.Linq.IQueryable
      description: "A kifejezésben használt adatforrás egy példánya."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  id: ThenByExpressions
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  langs:
  - csharp
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Lekérdezi vagy beállítja a gyűjteménye <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> kifejezések után egy <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> értéken az adatforráshoz."
  remarks: "Után egy rendezési művelet szerint történik a <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>a a <xref:System.Web.UI.WebControls.QueryExtender>szabályozásához későbbi rendezési művelet végrehajtható ThenByExpressions tulajdonságának használatával.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.OrderByExpression>"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then by the product ID field in ascending order using the ThenByExpressions. This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Web.UI.WebControls.Expressions.ThenBy> ThenByExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Web.UI.WebControls.Expressions.ThenBy}
      description: "A gyűjteménye <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref> kifejezések után a <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref> vonatkozik az adatforrás."
  overload: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: OrderByExpression()
  nameWithType: OrderByExpression.OrderByExpression()
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.OrderByExpression()
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: DataField
  nameWithType: OrderByExpression.DataField
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: Direction
  nameWithType: OrderByExpression.Direction
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: OrderByExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
  fullName: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions
- uid: System.Collections.ObjectModel.Collection{System.Web.UI.WebControls.Expressions.ThenBy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ThenBy>
  nameWithType: Collection<ThenBy>
  fullName: System.Collections.ObjectModel.Collection<System.Web.UI.WebControls.Expressions.ThenBy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Web.UI.WebControls.Expressions.ThenBy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.Expressions.ThenBy
    name: ThenBy
    nameWithType: ThenBy
    fullName: ThenBy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: OrderByExpression
  nameWithType: OrderByExpression.OrderByExpression
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.DataField*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: DataField
  nameWithType: OrderByExpression.DataField
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.Direction*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: Direction
  nameWithType: OrderByExpression.Direction
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: GetQueryable
  nameWithType: OrderByExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions*
  parent: System.Web.UI.WebControls.Expressions.OrderByExpression
  isExternal: false
  name: ThenByExpressions
  nameWithType: OrderByExpression.ThenByExpressions
