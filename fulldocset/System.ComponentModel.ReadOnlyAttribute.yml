### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ReadOnlyAttribute
  id: ReadOnlyAttribute
  children:
  - System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)
  - System.ComponentModel.ReadOnlyAttribute.Default
  - System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)
  - System.ComponentModel.ReadOnlyAttribute.GetHashCode
  - System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute
  - System.ComponentModel.ReadOnlyAttribute.IsReadOnly
  - System.ComponentModel.ReadOnlyAttribute.No
  - System.ComponentModel.ReadOnlyAttribute.Yes
  langs:
  - csharp
  name: ReadOnlyAttribute
  nameWithType: ReadOnlyAttribute
  fullName: System.ComponentModel.ReadOnlyAttribute
  type: Class
  summary: "Megadja, hogy ehhez az attribútumhoz van kötve a tulajdonság csak olvasható vagy olvasási/írási. Ez az osztály nem örökölhető."
  remarks: "A ReadOnlyAttribute megjelölt tagok beállítása `true` vagy, amelyek nem rendelkeznek egy `Set` módszer nem módosítható. Ezt az attribútumot nem tartalmazó, vagy a ReadOnlyAttribute a jelölt tagok beállítása `false` olvasási/írási, és módosíthatja őket. Az alapértelmezett érték <xref:System.ComponentModel.ReadOnlyAttribute.No>.</xref:System.ComponentModel.ReadOnlyAttribute.No>      > [!IMPORTANT] > A <xref:System.ComponentModel.PropertyDescriptor>osztály érvénybe lépteti a ReadOnlyAttribute a tervezési környezetben és a futási időben.</xref:System.ComponentModel.PropertyDescriptor> Ha bejelöli a ReadOnlyAttribute egy tulajdonság beállítása `true`, ez az attribútum értéke a konstans tag <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</xref:System.ComponentModel.ReadOnlyAttribute.Yes> Egy tulajdonság a beállítása ReadOnlyAttribute jelölésű `false`, <xref:System.ComponentModel.ReadOnlyAttribute.No>.</xref:System.ComponentModel.ReadOnlyAttribute.No> értéke Ezért amikor az a kód attribútum értékének ellenőrizni kívánja, meg kell adnia a attribútum vagy <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName> <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName>       További információkért lásd: [attribútumok](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example marks a property as read-only.  \n  \n [!code-cs[Classic ReadOnlyAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._82_1.cs)]\n [!code-vb[Classic ReadOnlyAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._82_1.vb)]\n [!code-cpp[Classic ReadOnlyAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._82_1.cpp)]  \n  \n The next code example shows how to check the value of the ReadOnlyAttribute for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next, it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Then it returns the attributes for this property and saves them in the attributes variable.  \n  \n The example presents two different ways of checking the value of the ReadOnlyAttribute. In the second code fragment, the example calls the <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> property to check the value.  \n  \n [!code-cs[Classic ReadOnlyAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._82_2.cs)]\n [!code-vb[Classic ReadOnlyAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._82_2.vb)]\n [!code-cpp[Classic ReadOnlyAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._82_2.cpp)]  \n  \n If you marked a class with the ReadOnlyAttribute, use the following code example to check the value.  \n  \n [!code-cs[Classic ReadOnlyAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._82_3.cs)]\n [!code-vb[Classic ReadOnlyAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._82_3.vb)]\n [!code-cpp[Classic ReadOnlyAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._82_3.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class ReadOnlyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: ReadOnlyAttribute(Boolean)
  nameWithType: ReadOnlyAttribute.ReadOnlyAttribute(Boolean)
  fullName: System.ComponentModel.ReadOnlyAttribute.ReadOnlyAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ComponentModel.ReadOnlyAttribute&quot;> </xref> osztály."
  remarks: "Tagok megjelölt a <xref:System.ComponentModel.ReadOnlyAttribute>beállítása `true` vagy, amelyek nem rendelkeznek egy `Set` módszer nem módosítható.</xref:System.ComponentModel.ReadOnlyAttribute> Ezt az attribútumot nem tartalmazó, vagy a jelölt tagok a <xref:System.ComponentModel.ReadOnlyAttribute>beállítása `false` olvasási/írási, és módosíthatja őket.</xref:System.ComponentModel.ReadOnlyAttribute> Az alapértelmezett érték <xref:System.ComponentModel.ReadOnlyAttribute.No>.</xref:System.ComponentModel.ReadOnlyAttribute.No>      > [!NOTE] >, Ha bejelöli az adott tulajdonsághoz a <xref:System.ComponentModel.ReadOnlyAttribute>beállítása `true`, ez az attribútum értéke a konstans tag <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</xref:System.ComponentModel.ReadOnlyAttribute.Yes> </xref:System.ComponentModel.ReadOnlyAttribute> Egy tulajdonság az megjelölve a <xref:System.ComponentModel.ReadOnlyAttribute>beállítása `false`, <xref:System.ComponentModel.ReadOnlyAttribute.No>.</xref:System.ComponentModel.ReadOnlyAttribute.No> értéke</xref:System.ComponentModel.ReadOnlyAttribute> Ezért amikor az a kód attribútum értékének ellenőrizni kívánja, meg kell adnia a attribútum vagy <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName> <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName>"
  example:
  - "The following code example marks a property as read-only. This code creates a new <xref:System.ComponentModel.ReadOnlyAttribute>, sets its value to <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cpp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._35_1.cpp)]\n [!code-vb[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._35_1.vb)]\n [!code-cs[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._35_1.cs)]"
  syntax:
    content: public ReadOnlyAttribute (bool isReadOnly);
    parameters:
    - id: isReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>jelzi, hogy ehhez az attribútumhoz van kötve a tulajdonság csak olvasható; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> mutatja be, hogy a tulajdonság olvasási/írási."
  overload: System.ComponentModel.ReadOnlyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.Default
  id: Default
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: Default
  nameWithType: ReadOnlyAttribute.Default
  fullName: System.ComponentModel.ReadOnlyAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Az alapértelmezett értékét adja meg a <xref href=&quot;System.ComponentModel.ReadOnlyAttribute&quot;> </xref>, amely <xref href=&quot;System.ComponentModel.ReadOnlyAttribute.No&quot;> </xref> (Ez azt jelenti, hogy ehhez az attribútumhoz kötött tulajdonság olvasás/írás). Ez <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> mező csak olvasható."
  remarks: "Ha ez az érték az adott tulajdonsághoz, ez az attribútum a konstans tag <xref:System.ComponentModel.ReadOnlyAttribute>.</xref:System.ComponentModel.ReadOnlyAttribute> értéke Ezért ha azt szeretné, ellenőrizze, hogy az attribútum értéke ezt az értéket a kódban, meg kell adnia a attribútum <xref:System.ComponentModel.ReadOnlyAttribute?displayProperty=fullName>.</xref:System.ComponentModel.ReadOnlyAttribute?displayProperty=fullName>"
  syntax:
    content: public static readonly System.ComponentModel.ReadOnlyAttribute Default;
    return:
      type: System.ComponentModel.ReadOnlyAttribute
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ReadOnlyAttribute.Equals(Object)
  fullName: System.ComponentModel.ReadOnlyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Azt jelzi, hogy ez a példány és egy adott objektum egyenlő."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Hasonlítsa össze egy másik objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> value </code> egyenlő ehhez a példányhoz; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReadOnlyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ReadOnlyAttribute.GetHashCode()
  fullName: System.ComponentModel.ReadOnlyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Az adott példány kivonatkódját adja vissza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Az aktuális kivonatoló kódot <xref href=&quot;System.ComponentModel.ReadOnlyAttribute&quot;> </xref>."
  overload: System.ComponentModel.ReadOnlyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: ReadOnlyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Meghatározza, hogy ez az attribútum az alapértelmezett."
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az attribútum az alapértelmezett érték az adott attribútum osztály; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.IsReadOnly
  id: IsReadOnly
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ReadOnlyAttribute.IsReadOnly
  fullName: System.ComponentModel.ReadOnlyAttribute.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lekérdezi egy érték, amely jelzi, hogy ehhez az attribútumhoz van kötve a tulajdonság csak olvasható."
  remarks: ''
  example:
  - "The following code example checks to see whether `MyProperty` is read-only. First, the code gets the attributes for `MyProperty` by doing the following:  \n  \n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \n  \n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \n  \n-   Saving the attributes for this property in the attributes variable.  \n  \n Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.ReadOnlyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is read-only.  \n  \n [!code-cs[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.componentmodel._25_1.cs)]\n [!code-cpp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/add/codesnippet/cpp/p-system.componentmodel._25_1.cpp)]\n [!code-vb[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._25_1.vb)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez az attribútum a tulajdonság van kötve csak olvasható; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> olvasási/írási tulajdonság esetén."
  overload: System.ComponentModel.ReadOnlyAttribute.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.No
  id: No
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: No
  nameWithType: ReadOnlyAttribute.No
  fullName: System.ComponentModel.ReadOnlyAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Meghatározza, hogy a tulajdonság ehhez az attribútumhoz van kötve olvasási/írási, és módosíthatja. Ez <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> mező csak olvasható."
  remarks: "Ez a beállítás alapértelmezés szerint ez az attribútum.       Ha bejelöli az adott tulajdonsághoz a <xref:System.ComponentModel.ReadOnlyAttribute>beállítása `false`, ez az attribútum értéke a konstans tag szám</xref:System.ComponentModel.ReadOnlyAttribute> Ezért ha azt szeretné, ellenőrizze, hogy az attribútum értéke ezt az értéket a kódban, meg kell adni az attribútum nem."
  syntax:
    content: public static readonly System.ComponentModel.ReadOnlyAttribute No;
    return:
      type: System.ComponentModel.ReadOnlyAttribute
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ReadOnlyAttribute.Yes
  id: Yes
  parent: System.ComponentModel.ReadOnlyAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: ReadOnlyAttribute.Yes
  fullName: System.ComponentModel.ReadOnlyAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Megadja, hogy ehhez az attribútumhoz van kötve a tulajdonság csak olvasható, és nem lehet módosítani a server Explorer. Ez <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> mező csak olvasható."
  remarks: "Ha bejelöli az adott tulajdonsághoz a <xref:System.ComponentModel.ReadOnlyAttribute>beállítása `true`, ez az attribútum értéke Yes konstans tag.</xref:System.ComponentModel.ReadOnlyAttribute> Ezért ha azt szeretné, ellenőrizze, hogy az attribútum értéke ezt az értéket a kódban, meg kell adnia a attribútum Igen, mert."
  syntax:
    content: public static readonly System.ComponentModel.ReadOnlyAttribute Yes;
    return:
      type: System.ComponentModel.ReadOnlyAttribute
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: ReadOnlyAttribute(Boolean)
  nameWithType: ReadOnlyAttribute.ReadOnlyAttribute(Boolean)
  fullName: System.ComponentModel.ReadOnlyAttribute.ReadOnlyAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ReadOnlyAttribute.Default
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: Default
  nameWithType: ReadOnlyAttribute.Default
  fullName: System.ComponentModel.ReadOnlyAttribute.Default
- uid: System.ComponentModel.ReadOnlyAttribute
  parent: System.ComponentModel
  isExternal: false
  name: ReadOnlyAttribute
  nameWithType: ReadOnlyAttribute
  fullName: System.ComponentModel.ReadOnlyAttribute
- uid: System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ReadOnlyAttribute.Equals(Object)
  fullName: System.ComponentModel.ReadOnlyAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ReadOnlyAttribute.GetHashCode
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ReadOnlyAttribute.GetHashCode()
  fullName: System.ComponentModel.ReadOnlyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: ReadOnlyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.ReadOnlyAttribute.IsReadOnly
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyAttribute.IsReadOnly
  fullName: System.ComponentModel.ReadOnlyAttribute.IsReadOnly
- uid: System.ComponentModel.ReadOnlyAttribute.No
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: No
  nameWithType: ReadOnlyAttribute.No
  fullName: System.ComponentModel.ReadOnlyAttribute.No
- uid: System.ComponentModel.ReadOnlyAttribute.Yes
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: Yes
  nameWithType: ReadOnlyAttribute.Yes
  fullName: System.ComponentModel.ReadOnlyAttribute.Yes
- uid: System.ComponentModel.ReadOnlyAttribute.#ctor*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: ReadOnlyAttribute
  nameWithType: ReadOnlyAttribute.ReadOnlyAttribute
- uid: System.ComponentModel.ReadOnlyAttribute.Equals*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: Equals
  nameWithType: ReadOnlyAttribute.Equals
- uid: System.ComponentModel.ReadOnlyAttribute.GetHashCode*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ReadOnlyAttribute.GetHashCode
- uid: System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: ReadOnlyAttribute.IsDefaultAttribute
- uid: System.ComponentModel.ReadOnlyAttribute.IsReadOnly*
  parent: System.ComponentModel.ReadOnlyAttribute
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyAttribute.IsReadOnly
