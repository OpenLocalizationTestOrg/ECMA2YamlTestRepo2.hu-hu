### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSource
  id: TraceSource
  children:
  - System.Diagnostics.TraceSource.#ctor(System.String)
  - System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  - System.Diagnostics.TraceSource.Attributes
  - System.Diagnostics.TraceSource.Close
  - System.Diagnostics.TraceSource.Flush
  - System.Diagnostics.TraceSource.GetSupportedAttributes
  - System.Diagnostics.TraceSource.Listeners
  - System.Diagnostics.TraceSource.Name
  - System.Diagnostics.TraceSource.Switch
  - System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceSource.TraceInformation(System.String)
  - System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  - System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  langs:
  - csharp
  name: TraceSource
  nameWithType: TraceSource
  fullName: System.Diagnostics.TraceSource
  type: Class
  summary: "Számos módszerek és tulajdonságait, amelyek lehetővé teszik az alkalmazások a kód végrehajtása és a nyomkövetési üzenetek társítani a forrásként."
  remarks: "The TraceSource class is used by applications to produce traces that can be associated with the application. TraceSource provides tracing methods that allow you to easily trace events, trace data, and issue informational traces. Trace output from TraceSource can be controlled by configuration file settings. The configuration file is located in the folder with the application executable and has the name of the application with the .config file name extension added. For example, the name of the configuration file for TraceSourceSample.exe is TraceSourceSample.exe.config. The configuration file can be used to determine where the trace information is to be sent and what levels of activity are to be traced. The following example shows the contents of a sample application configuration file.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <sources>  \n      <source name=\"TraceTest\" switchName=\"SourceSwitch\"   \n        switchType=\"System.Diagnostics.SourceSwitch\" >  \n        <listeners>  \n          <add name=\"console\" />  \n          <remove name =\"Default\" />  \n        </listeners>  \n      </source>  \n    </sources>  \n    <switches>  \n      <!-- You can set the level at which tracing is to occur -->  \n      <add name=\"SourceSwitch\" value=\"Warning\" />  \n        <!-- You can turn tracing off -->  \n        <!--add name=\"SourceSwitch\" value=\"Off\" -->  \n    </switches>  \n    <sharedListeners>  \n      <add name=\"console\"   \n        type=\"System.Diagnostics.ConsoleTraceListener\"   \n        initializeData=\"false\"/>  \n    </sharedListeners>  \n    <trace autoflush=\"true\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"console\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n The TraceSource class is identified by the name of a source, typically the name of the application.  The trace messages coming from a particular component can be initiated by a particular trace source, allowing all messages coming from that component to be easily identified.  \n  \n TraceSource defines tracing methods but does not actually provide any specific mechanism for generating and storing tracing data. The tracing data is produced by trace listeners, which are plug-ins that can be loaded by trace sources.  \n  \n> [!NOTE]\n>  You should not call the tracing methods during finalization. Doing so can result in an <xref:System.ObjectDisposedException> being thrown.  \n  \n You can customize the tracing output's target by adding or removing <xref:System.Diagnostics.TraceListener> instances to or from the collection stored in the <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=fullName> property. By default, trace output is produced using an instance of the <xref:System.Diagnostics.DefaultTraceListener> class. The preceding configuration file example demonstrates removing the <xref:System.Diagnostics.DefaultTraceListener> and adding a <xref:System.Diagnostics.ConsoleTraceListener> to produce the trace output for the trace source. For more information, see [\\&lt;listeners\\&gt;](../Topic/%3Clisteners%3E%20Element%20for%20%3Csource%3E.md) and [\\&lt;sharedListeners\\&gt;](../Topic/%3CsharedListeners%3E%20Element.md).  \n  \n> [!NOTE]\n>  Adding a trace listener to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the TraceSource methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.  \n  \n The <xref:System.Diagnostics.SourceSwitch> class provides the means to dynamically control the tracing output. The preceding configuration file example shows how you can turn off tracing from a trace source and control the level at which tracing occurs.  You can modify the value of the source switch without recompiling your application. For information on using the configuration file to set a switch, see <xref:System.Diagnostics.Switch> and [How to: Create, Initialize and Configure Trace Switches](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  If you modify a configuration file while an application is executing, the application must be stopped and restarted or the <xref:System.Diagnostics.Trace.Refresh%2A> method must be called before the new settings take effect.  \n  \n The <xref:System.Diagnostics.TraceEventType> enumeration is used to define the event type of the trace message. Trace filters use the <xref:System.Diagnostics.TraceEventType> to determine if a trace listener should produce the trace message.  \n  \n The trace listeners can optionally have an additional layer of filtering through a trace filter.  If a trace listener has an associated filter, the listener calls the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method on that filter to determine whether or not to produce the trace information.  \n  \n The trace listeners use the values of the <xref:System.Diagnostics.Trace> class properties <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> to format trace output. You can use configuration file attributes to set the <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> properties. The following example sets the <xref:System.Diagnostics.Trace.AutoFlush%2A> property to `false` and the <xref:System.Diagnostics.Trace.IndentSize%2A> property to 3.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"3\" />  \n  </system.diagnostics>  \n</configuration>  \n```"
  example:
  - "The following code example shows the use of the TraceSource class to forward traces to listeners.  The example also demonstrates switch and filter usage.  \n  \n [!code-cpp[System.Diagnostics.TraceSource2#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_3_1.cpp)]\n [!code-cs[System.Diagnostics.TraceSource2#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_3_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public class TraceSource
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceSource(String)
  nameWithType: TraceSource.TraceSource(String)
  fullName: System.Diagnostics.TraceSource.TraceSource(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.TraceSource&quot;> </xref> osztály, az adatforrásra vonatkozóan megadott néven."
  remarks: "Az adatforrás neve nyomkövetéseit azonosítására szolgál. Használja a <xref:System.Diagnostics.SourceFilter>annak meghatározásához, hogy egy nyomkövetés-figyelő a nyomkövetési kell előállítania.</xref:System.Diagnostics.SourceFilter> Az ajánlott eljárás, hogy az alkalmazás nevét használja a forrás neve.      > [!NOTE] > Nincs szükség, hozzon létre egy új <xref:System.Diagnostics.TraceSource>példány az egyes nyomkövetési kérelmek.</xref:System.Diagnostics.TraceSource> Hozzon létre egyet <xref:System.Diagnostics.TraceSource>példányt, és az alkalmazás összes tárolni kívánt nyomkövetési kérelmek használni.</xref:System.Diagnostics.TraceSource>"
  example:
  - "The following code example shows the use of the TraceSource constructor to create a new <xref:System.Diagnostics.TraceSource> object. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#9](~/add/codesnippet/csharp/m-system.diagnostics.tra_28_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#9](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_28_1.vb)]"
  syntax:
    content: public TraceSource (string name);
    parameters:
    - id: name
      type: System.String
      description: "A forrás (általában az alkalmazás neve) neve."
  overload: System.Diagnostics.TraceSource.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>üres karakterlánc (&quot;&quot;)."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  id: '#ctor(System.String,System.Diagnostics.SourceLevels)'
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceSource(String,SourceLevels)
  nameWithType: TraceSource.TraceSource(String,SourceLevels)
  fullName: System.Diagnostics.TraceSource.TraceSource(String,SourceLevels)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.TraceSource&quot;> </xref> osztályt, mely nyomkövetés során a forrás- és az alapértelmezett forrás szint számára megadott név alapján kerül sor."
  remarks: "Az adatforrás neve nyomkövetéseit azonosítására szolgál. Által használható egy <xref:System.Diagnostics.SourceSwitch>annak megállapításához, hogy nyomkövetés megtörténik vagy egy <xref:System.Diagnostics.SourceFilter>annak megállapításához, hogy a nyomkövetési eredményezett.</xref:System.Diagnostics.SourceFilter> </xref:System.Diagnostics.SourceSwitch> Az alapértelmezett forrás szintet használja egy <xref:System.Diagnostics.EventTypeFilter>annak megállapításához, hogy nyomkövetés megtörténik a forrás szint nyomon követését az üzenet alapján.</xref:System.Diagnostics.EventTypeFilter>      > [!NOTE] > Nincs szükség, hozzon létre egy új <xref:System.Diagnostics.TraceSource>példány az egyes nyomkövetési kérelmek.</xref:System.Diagnostics.TraceSource> Hozzon létre egyet <xref:System.Diagnostics.TraceSource>példányt, és az alkalmazás összes tárolni kívánt nyomkövetési kérelmek használni.</xref:System.Diagnostics.TraceSource>"
  syntax:
    content: public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);
    parameters:
    - id: name
      type: System.String
      description: "A forrás-, az alkalmazás nevét nevére."
    - id: defaultLevel
      type: System.Diagnostics.SourceLevels
      description: "Tagértékeinek a számbavételi érték, amely meghatározza a nyomkövetés, amellyel forrás alapértelmezett szint."
  overload: System.Diagnostics.TraceSource.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>üres karakterlánc (&quot;&quot;)."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Attributes
  id: Attributes
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Attributes
  nameWithType: TraceSource.Attributes
  fullName: System.Diagnostics.TraceSource.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi az alkalmazás konfigurációs fájljában definiált egyéni kapcsoló attribútumait."
  remarks: "A attribútumok tulajdonsága azonosítja az alkalmazás konfigurációs fájljában hivatkozott egyéni attribútumait. Nem hivatkozott egyéni attribútumok nem sorolja. Öröklő a <xref:System.Diagnostics.TraceSource>osztály felülbírálásával adhat hozzá az egyéni attribútumok a <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=fullName>metódus törlését és az egyéni attribútumok nevében egy karakterlánc-tömbben.</xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceSource>       Az alábbiakban található a nyomkövetési forrás elem adjon meg az egyéni attribútumot minta `SecondTraceSourceAttribute`:```   <sources>     <source name=&quot;TraceTest&quot; switchName=&quot;TestSourceSwitch&quot;        switchType=&quot;Testing.MySourceSwitch, TraceSample&quot;        SecondTraceSourceAttribute=&quot;two&quot;>     </source>   </sources>   ```"
  example:
  - "The following code sample shows how to display the custom attributes for a <xref:System.Diagnostics.TraceSource>.  This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#14](~/add/codesnippet/csharp/p-system.diagnostics.tra_7_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#14](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_7_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> tartalmazó a nyomkövetési kapcsolóban egyéni attribútumait."
  overload: System.Diagnostics.TraceSource.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Close
  id: Close
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Close()
  nameWithType: TraceSource.Close()
  fullName: System.Diagnostics.TraceSource.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetési figyelő gyűjtemény nyomkövetésfigyelők bezárása."
  remarks: "A Close metódus hívások a <xref:System.Diagnostics.TraceListener.Close%2A>minden nyomkövetés-figyelő a módszer a <xref:System.Diagnostics.TraceSource.Listeners%2A>gyűjtemény.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.Close%2A>"
  example:
  - "The following code example shows how you can use the Close method to close all the listeners in the collection. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_21_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_21_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Diagnostics.TraceSource.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Flush
  id: Flush
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Flush()
  nameWithType: TraceSource.Flush()
  fullName: System.Diagnostics.TraceSource.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetési figyelő gyűjtemény nyomkövetésfigyelők kiürítése."
  remarks: "A kiürítési metódushívások a <xref:System.Diagnostics.TraceListener.Flush%2A>minden nyomkövetés-figyelő a módszer a <xref:System.Diagnostics.TraceSource.Listeners%2A>gyűjtemény.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.Flush%2A>"
  example:
  - "The following code example shows how you can use the Flush method to flush all the listeners in the collection. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_15_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_15_1.vb)]"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Diagnostics.TraceSource.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kísérlet történt egy esemény nyomon követése véglegesítése során."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: TraceSource.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceSource.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi az egyéni attribútumok a nyomkövetési forrást által támogatott."
  remarks: "Az alapértelmezett implementációja GetSupportedAttributes adja vissza `null`."
  example:
  - "The following code example shows an override of the GetSupportedAttributes method to identify the custom attributes for the `MyTraceSource` class.  \n  \n [!code-cs[System.Diagnostics.TraceSource#33](~/add/codesnippet/csharp/m-system.diagnostics.tra_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#33](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_0_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "A nyomkövetési forrást által támogatott egyéni attribútumok elnevezési karakterlánc-tömbben vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nincs egyéni attribútum esetén."
  overload: System.Diagnostics.TraceSource.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Listeners
  id: Listeners
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Listeners
  nameWithType: TraceSource.Listeners
  fullName: System.Diagnostics.TraceSource.Listeners
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetési forrást nyomkövetésfigyelők gyűjteményének beolvasása."
  remarks: "Ez a tulajdonság használatával eléréséhez és a nyomkövetésfigyelők meg műveleteket elvégezni."
  syntax:
    content: public System.Diagnostics.TraceListenerCollection Listeners { get; }
    return:
      type: System.Diagnostics.TraceListenerCollection
      description: "A <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref> , amely tartalmazza a forrás társított active nyomkövetésfigyelők."
  overload: System.Diagnostics.TraceSource.Listeners*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Name
  id: Name
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Name
  nameWithType: TraceSource.Name
  fullName: System.Diagnostics.TraceSource.Name
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a nyomkövetési forrás nevére."
  remarks: "A név állítja be a `name` a konstruktornak átadott paraméter. A nyomkövetési forrást a használatával jelentheti a `name` attribútumot a konfigurációs fájlban.       A következő XML-elem látható utaló a nyomkövetési forrást a konfigurációs fájlban.      ```   <configuration>     <system.diagnostics>       <sources>         <source name=&quot;TraceTest&quot;>         </source>       </sources>     </system.diagnostics>   </configuration>   ```"
  example:
  - "The following code sample shows how to name a trace source in the constructor call.  This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#9](~/add/codesnippet/csharp/p-system.diagnostics.tra_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#9](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_0_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A nyomkövetési forrást neve."
  overload: System.Diagnostics.TraceSource.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.Switch
  id: Switch
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: Switch
  nameWithType: TraceSource.Switch
  fullName: System.Diagnostics.TraceSource.Switch
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a forrás kapcsoló értéke."
  remarks: "A kapcsoló tulajdonság lehetővé teszi, hogy a nyomkövetési forrás hívások a figyelők előtt üzenetek szűrését.       Ellenőrizze, hogy nyomkövetési hívások létre kell-e, illetve figyelmen kívül hagyja a kapcsoló a használható. Minden nyomkövetési metódus meghívja a <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>metódusában a <xref:System.Diagnostics.SourceSwitch>annak megállapításához, hogy folytatja a nyomkövetési.</xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Ha a hívás eredménye `true`, a figyelők nevezzük."
  syntax:
    content: public System.Diagnostics.SourceSwitch Switch { get; set; }
    return:
      type: System.Diagnostics.SourceSwitch
      description: "A <xref href=&quot;System.Diagnostics.SourceSwitch&quot;> </xref> forrás kapcsoló értékét képviselő objektum."
  overload: System.Diagnostics.TraceSource.Switch*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Kapcsoló értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceData(TraceEventType,Int32,Object)
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetésfigyelők a nyomkövetési adatokat ír az <xref:System.Diagnostics.TraceSource.Listeners*>gyűjtemény a megadott esemény típusa, eseményazonosító és nyomkövetési adatok használatával.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "A TraceData módszer, például a <xref:System.Diagnostics.TraceSource.TraceEvent%2A>metódus, automatikus eszközök számára készült, de azt is lehetővé teszi, hogy egy további objektumot, például egy kivétel példányt, a nyomkövetést csatlakoztatása.</xref:System.Diagnostics.TraceSource.TraceEvent%2A>       A TraceData metódushívások a <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=fullName>metódusában a <xref:System.Diagnostics.SourceSwitch>által visszaadott objektum a <xref:System.Diagnostics.TraceSource.Switch%2A>tulajdonság.</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=fullName> Ha <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>adja vissza `true`, TraceData meghívja a megfelelő <xref:System.Diagnostics.TraceListener.TraceData%2A>összes figyelői metódusa.</xref:System.Diagnostics.TraceListener.TraceData%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Ellenkező esetben TraceData adja vissza, a figyelők metódusok meghívása nélkül.      > [!NOTE] > A <xref:System.Diagnostics.EventLogTraceListener>objektum egy legfeljebb `id` értékének 65 535.</xref:System.Diagnostics.EventLogTraceListener> Ha a `id` megadott érték nagyobb, mint 65 535, a <xref:System.Diagnostics.EventLogTraceListener>objektum által használt 65 535.</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the TraceData method to filter and forward a trace message to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#28](~/add/codesnippet/csharp/65c1aeb6-b0df-4e32-8afc-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#28](~/add/codesnippet/visualbasic/65c1aeb6-b0df-4e32-8afc-_1.vb)]"
  syntax:
    content: public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Az esemény adja meg a nyomkövetési adatok a számbavételi érték egyikét."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: data
      type: System.Object
      description: "A nyomkövetési adatokat."
  overload: System.Diagnostics.TraceSource.TraceData*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kísérlet történt egy esemény nyomon követése véglegesítése során."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceData(TraceEventType,Int32,Object[])
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetésfigyelők a nyomkövetési adatokat ír az <xref:System.Diagnostics.TraceSource.Listeners*>adatgyűjtést, a megadott eseménytípus eseményazonosító és nyomkövetési adatok tömb.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "A TraceData módszer, például a <xref:System.Diagnostics.TraceSource.TraceEvent%2A>metódus, automatikus eszközök számára készült, de lehetővé teszi további objektumok, például egy kivétel példány és egy Veremkivonat a követni kívánt csatolni.</xref:System.Diagnostics.TraceSource.TraceEvent%2A>       A TraceData metódushívások a <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>metódusában a <xref:System.Diagnostics.SourceSwitch>által visszaadott objektum a <xref:System.Diagnostics.TraceSource.Switch%2A>tulajdonság.</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Ha <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>adja vissza `true`, TraceData meghívja a megfelelő <xref:System.Diagnostics.TraceListener.TraceData%2A>összes figyelői metódusa.</xref:System.Diagnostics.TraceListener.TraceData%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Ellenkező esetben TraceData adja vissza, a figyelők metódusok meghívása nélkül.      > [!NOTE] > A <xref:System.Diagnostics.EventLogTraceListener>objektum egy legfeljebb `id` értékének 65 535.</xref:System.Diagnostics.EventLogTraceListener> Ha a `id` megadott érték nagyobb, mint 65 535, a <xref:System.Diagnostics.EventLogTraceListener>objektum által használt 65 535.</xref:System.Diagnostics.EventLogTraceListener>"
  syntax:
    content: public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Az esemény adja meg a nyomkövetési adatok a számbavételi érték egyikét."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: data
      type: System.Object[]
      description: "A nyomkövetési adatokat tartalmazó objektum tömb."
  overload: System.Diagnostics.TraceSource.TraceData*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kísérlet történt egy esemény nyomon követése véglegesítése során."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetésfigyelők a nyomkövetési esemény üzenetet ír a <xref:System.Diagnostics.TraceSource.Listeners*>adatgyűjtést, a megadott esemény típusa és eseményazonosító.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "A TraceEvent metódus olyan nyomkövetési események eszközök által automatikusan feldolgozható. Például egy felügyeleti eszköz értesítheti a rendszergazda, ha egy adott esemény megadott erőforrása által követett.       A TraceEvent metódushívások a <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>metódusában a <xref:System.Diagnostics.SourceSwitch>által visszaadott objektum a <xref:System.Diagnostics.TraceSource.Switch%2A>tulajdonság.</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Ha <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>adja vissza `true`, TraceEvent meghívja a megfelelő <xref:System.Diagnostics.TraceListener.TraceEvent%2A>minden egyes figyelő metódusában.</xref:System.Diagnostics.TraceListener.TraceEvent%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Ellenkező esetben TraceEvent adja vissza, a figyelők metódusok meghívása nélkül.       A nyomkövetés tartalmában az adott figyelő. A módszer a figyelő végrehajtása nem bírálja felül, ha az alapértelmezett eredménye a nyomkövetési forrást, numerikus identitása és az eseménytípus nevét.  További nyomkövetési tartalma függ a figyelő <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság értéke.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      > [!NOTE] > A <xref:System.Diagnostics.EventLogTraceListener>objektum egy legfeljebb `id` értékének 65 535.</xref:System.Diagnostics.EventLogTraceListener> Ha a `id` megadott érték nagyobb, mint 65 535, a <xref:System.Diagnostics.EventLogTraceListener>65 535 használja.</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the TraceEvent method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#17](~/add/codesnippet/csharp/b6759a68-e7ea-4d5d-941c-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#17](~/add/codesnippet/visualbasic/b6759a68-e7ea-4d5d-941c-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Az esemény adja meg a nyomkövetési adatok a számbavételi érték egyikét."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kísérlet történt egy esemény nyomon követése véglegesítése során."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32,String)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetésfigyelők a nyomkövetési esemény üzenetet ír a <xref:System.Diagnostics.TraceSource.Listeners*>gyűjtemény a megadott esemény típusa, az esemény azonosítója és az üzenet.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "A TraceEvent metódus olyan nyomkövetési események eszközök által automatikusan feldolgozható. Például egy felügyeleti eszköz értesítheti a rendszergazda, ha egy adott esemény megadott erőforrása által követett.       A TraceEvent metódushívások a <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>metódusában a <xref:System.Diagnostics.SourceSwitch>által visszaadott objektum a <xref:System.Diagnostics.TraceSource.Switch%2A>tulajdonság.</xref:System.Diagnostics.TraceSource.Switch%2A> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Ha <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>adja vissza `true`, TraceEvent meghívja a megfelelő <xref:System.Diagnostics.TraceListener.TraceEvent%2A>minden egyes figyelő metódusában.</xref:System.Diagnostics.TraceListener.TraceEvent%2A> </xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Ellenkező esetben TraceEvent adja vissza, a figyelők metódusok meghívása nélkül.       A nyomkövetés tartalmában az adott figyelő. A módszer a figyelő végrehajtása nem bírálja felül, ha az alapértelmezett eredménye a nyomkövetési forrást, numerikus identitása, az esemény típusát és az üzenet nevét.  További nyomkövetési tartalma függ a figyelő <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság értéke.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      > [!NOTE] > A <xref:System.Diagnostics.EventLogTraceListener>objektum egy legfeljebb `id` értékének 65 535.</xref:System.Diagnostics.EventLogTraceListener> Ha a `id` megadott érték nagyobb, mint 65 535, a <xref:System.Diagnostics.EventLogTraceListener>objektum által használt 65 535.</xref:System.Diagnostics.EventLogTraceListener>"
  example:
  - "The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#18](~/add/codesnippet/csharp/8dfa18b2-1bd6-4ef8-88ea-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#18](~/add/codesnippet/visualbasic/8dfa18b2-1bd6-4ef8-88ea-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Az esemény adja meg a nyomkövetési adatok a számbavételi érték egyikét."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: message
      type: System.String
      description: "A nyomkövetési üzenet az írása."
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kísérlet történt egy esemény nyomon követése véglegesítése során."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceEvent(TraceEventType,Int32,String,Object[])
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetésfigyelők a nyomkövetési eseményt ír a <xref:System.Diagnostics.TraceSource.Listeners*>gyűjtemény a megadott esemény típusa, esemény azonosítóját, és argumentum tömb és formátum használatával.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "For more information about the `format` parameter, see [Composite Formatting](~/add/includes/ajax-current-ext-md.md).  \n  \n The TraceEvent method is intended to trace events that can be processed automatically by tools. For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.  \n  \n The TraceEvent method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property. If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, TraceEvent calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener. Otherwise, TraceEvent returns without calling the listeners' methods.  \n  \n The trace content is listener specific. The default [TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method writes the source name, event type, and numeric identity in the trace header, then calls the [String.Format(IFormatProvider, String, Object\\[\\])](assetId:///M:System.String.Format(System.IFormatProvider,System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method, passing the `format` string and `args` array and using the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=fullName> property to format the string as the message output.  \n  \n> [!NOTE]\n>  The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535. If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535."
  example:
  - "The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#24](~/add/codesnippet/csharp/9afa3050-f770-4c89-8f1f-_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#24](~/add/codesnippet/visualbasic/9afa3050-f770-4c89-8f1f-_1.vb)]"
  syntax:
    content: public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Az esemény adja meg a nyomkövetési adatok a számbavételi érték egyikét."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: format
      type: System.String
      description: "Összetett formázó karakterlánc (lásd a megjegyzések), amely szöveget tartalmaz összekeverve nulla vagy több formátum elemek, amelyek megfelelnek az objektumok a `args` tömb."
    - id: args
      type: System.Object[]
      description: "Egy <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> formázásához nulla vagy több objektumot tartalmazó tömb."
  overload: System.Diagnostics.TraceSource.TraceEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code>érvénytelen.       – vagy – a szám, amely jelzi a formázásához argumentumot kisebb nullánál, vagy nagyobb, mint vagy egyenlő számú objektumok formázásához."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kísérlet történt egy esemény nyomon követése véglegesítése során."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String)
  id: TraceInformation(System.String)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceInformation(String)
  nameWithType: TraceSource.TraceInformation(String)
  fullName: System.Diagnostics.TraceSource.TraceInformation(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetésfigyelők, a tájékoztató üzenet ír a <xref:System.Diagnostics.TraceSource.Listeners*>adatgyűjtést, a megadott üzenet.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "A TraceInformation metódus biztosít egy tájékoztató üzenet, olvassa el a felhasználók és eszközök által nem javasolt.       TraceInformation hívások a <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>módszer beállítása `eventType` való <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>, és átadja a tájékoztató üzenet üzenet karakterláncként kell beállítani.</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> A <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>metódus meghívja a <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>minden nyomkövetési figyelő metódusában.</xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> </xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>"
  syntax:
    content: public void TraceInformation (string message);
    parameters:
    - id: message
      type: System.String
      description: "Írás a tájékoztató üzenet."
  overload: System.Diagnostics.TraceSource.TraceInformation*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kísérlet történt egy esemény nyomon követése véglegesítése során."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  id: TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceInformation(String,Object[])
  nameWithType: TraceSource.TraceInformation(String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceInformation(String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nyomkövetésfigyelők, a tájékoztató üzenet ír a <xref:System.Diagnostics.TraceSource.Listeners*>gyűjtemény a megadott objektum-köréről és formázást.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "For more information about the `format` parameter, see [Composite Formatting](~/add/includes/ajax-current-ext-md.md).  \n  \n The TraceInformation method provides an informational message intended to be read by users and not by tools.  \n  \n TraceInformation calls the [TraceEvent(TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method, setting `eventType` to <xref:System.Diagnostics.TraceEventType?displayProperty=fullName> and passing the message content as an object array with formatting information. The [TraceEvent(TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method in turn calls the [TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object\\[\\])](assetId:///M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method of each trace listener."
  syntax:
    content: public void TraceInformation (string format, object[] args);
    parameters:
    - id: format
      type: System.String
      description: "Összetett formázó karakterlánc (lásd a megjegyzések), amely szöveget tartalmaz összekeverve nulla vagy több formátum elemek, amelyek megfelelnek az objektumok a `args` tömb."
    - id: args
      type: System.Object[]
      description: "Nulla vagy több objektum formázása tartalmazó tömb."
  overload: System.Diagnostics.TraceSource.TraceInformation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>format</code>érvénytelen.       – vagy – a szám, amely jelzi a formázásához argumentumot kisebb nullánál, vagy nagyobb, mint vagy egyenlő számú objektumok formázásához."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Kísérlet történt egy esemény nyomon követése véglegesítése során."
  platform:
  - net462
- uid: System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceSource
  langs:
  - csharp
  name: TraceTransfer(Int32,String,Guid)
  nameWithType: TraceSource.TraceTransfer(Int32,String,Guid)
  fullName: System.Diagnostics.TraceSource.TraceTransfer(Int32,String,Guid)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Nyomkövetési átviteli üzenetet ír a nyomkövetésfigyelők a a <xref:System.Diagnostics.TraceSource.Listeners*>adatgyűjtést, a megadott azonosítószáma, az üzenet és a kapcsolódó tevékenység azonosítója.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "A TraceTransfer metódushívások a <xref:System.Diagnostics.TraceListener.TraceTransfer%2A>minden nyomkövetés-figyelő a módszer a <xref:System.Diagnostics.TraceSource.Listeners%2A>tulajdonság a nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:System.Diagnostics.TraceListener.TraceTransfer%2A> Az alapértelmezett <xref:System.Diagnostics.TraceListener.TraceTransfer%2A>alaposztály metódus <xref:System.Diagnostics.TraceListener>hívások osztály a <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName>metódus feldolgozni a hívást, beállítása `eventType` való <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>és karakteres hozzáfűzése a `relatedActivityId` GUID `message`.</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=fullName> </xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListener.TraceTransfer%2A>       TraceTransfer olyan <xref:System.Diagnostics.CorrelationManager>.</xref:System.Diagnostics.CorrelationManager> logikai műveletekkel együtt használható A `relatedActivityId` paraméter vonatkozik a <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>tulajdonsága egy <xref:System.Diagnostics.CorrelationManager>objektum.</xref:System.Diagnostics.CorrelationManager> </xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Ha egy logikai művelet egy tevékenységben kezdődik, és továbbítja a másikra, a második tevékenység naplózza az átvitel TraceTransfer metódus meghívásával. A TraceTransfer hívást az új tevékenység identitás vonatkozik a korábbi identitását. Ezt a funkciót az a legvalószínűbb fogyasztó egy nyomkövetés-megjelenítő, amely logikai műveleteket, amelyek több tevékenység több."
  syntax:
    content: public void TraceTransfer (int id, string message, Guid relatedActivityId);
    parameters:
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: message
      type: System.String
      description: "A nyomkövetési üzenet az írása."
    - id: relatedActivityId
      type: System.Guid
      description: "Egy struktúra, amely a kapcsolódó tevékenységet azonosítja."
  overload: System.Diagnostics.TraceSource.TraceTransfer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Diagnostics.TraceSource.#ctor(System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource(String)
  nameWithType: TraceSource.TraceSource(String)
  fullName: System.Diagnostics.TraceSource.TraceSource(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource(String,SourceLevels)
  nameWithType: TraceSource.TraceSource(String,SourceLevels)
  fullName: System.Diagnostics.TraceSource.TraceSource(String,SourceLevels)
- uid: System.Diagnostics.SourceLevels
  parent: System.Diagnostics
  isExternal: false
  name: SourceLevels
  nameWithType: SourceLevels
  fullName: System.Diagnostics.SourceLevels
- uid: System.Diagnostics.TraceSource.Attributes
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Attributes
  nameWithType: TraceSource.Attributes
  fullName: System.Diagnostics.TraceSource.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.TraceSource.Close
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Close()
  nameWithType: TraceSource.Close()
  fullName: System.Diagnostics.TraceSource.Close()
- uid: System.Diagnostics.TraceSource.Flush
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Flush()
  nameWithType: TraceSource.Flush()
  fullName: System.Diagnostics.TraceSource.Flush()
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: TraceSource.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceSource.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceSource.Listeners
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Listeners
  nameWithType: TraceSource.Listeners
  fullName: System.Diagnostics.TraceSource.Listeners
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Diagnostics.TraceSource.Name
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Name
  nameWithType: TraceSource.Name
  fullName: System.Diagnostics.TraceSource.Name
- uid: System.Diagnostics.TraceSource.Switch
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Switch
  nameWithType: TraceSource.Switch
  fullName: System.Diagnostics.TraceSource.Switch
- uid: System.Diagnostics.SourceSwitch
  parent: System.Diagnostics
  isExternal: false
  name: SourceSwitch
  nameWithType: SourceSwitch
  fullName: System.Diagnostics.SourceSwitch
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData(TraceEventType,Int32,Object)
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData(TraceEventType,Int32,Object[])
  nameWithType: TraceSource.TraceData(TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceSource.TraceData(TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32)
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32,String)
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String)
- uid: System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent(TraceEventType,Int32,String,Object[])
  nameWithType: TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceEvent(TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation(String)
  nameWithType: TraceSource.TraceInformation(String)
  fullName: System.Diagnostics.TraceSource.TraceInformation(String)
- uid: System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation(String,Object[])
  nameWithType: TraceSource.TraceInformation(String,Object[])
  fullName: System.Diagnostics.TraceSource.TraceInformation(String,Object[])
- uid: System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceTransfer(Int32,String,Guid)
  nameWithType: TraceSource.TraceTransfer(Int32,String,Guid)
  fullName: System.Diagnostics.TraceSource.TraceTransfer(Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.TraceSource.#ctor*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceSource
  nameWithType: TraceSource.TraceSource
- uid: System.Diagnostics.TraceSource.Attributes*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Attributes
  nameWithType: TraceSource.Attributes
- uid: System.Diagnostics.TraceSource.Close*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Close
  nameWithType: TraceSource.Close
- uid: System.Diagnostics.TraceSource.Flush*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Flush
  nameWithType: TraceSource.Flush
- uid: System.Diagnostics.TraceSource.GetSupportedAttributes*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: TraceSource.GetSupportedAttributes
- uid: System.Diagnostics.TraceSource.Listeners*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Listeners
  nameWithType: TraceSource.Listeners
- uid: System.Diagnostics.TraceSource.Name*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Name
  nameWithType: TraceSource.Name
- uid: System.Diagnostics.TraceSource.Switch*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: Switch
  nameWithType: TraceSource.Switch
- uid: System.Diagnostics.TraceSource.TraceData*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceData
  nameWithType: TraceSource.TraceData
- uid: System.Diagnostics.TraceSource.TraceEvent*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceEvent
  nameWithType: TraceSource.TraceEvent
- uid: System.Diagnostics.TraceSource.TraceInformation*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceInformation
  nameWithType: TraceSource.TraceInformation
- uid: System.Diagnostics.TraceSource.TraceTransfer*
  parent: System.Diagnostics.TraceSource
  isExternal: false
  name: TraceTransfer
  nameWithType: TraceSource.TraceTransfer
