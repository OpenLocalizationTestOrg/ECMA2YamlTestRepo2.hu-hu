### YamlMime:ManagedReference
items:
- uid: System.Web.HttpUtility
  id: HttpUtility
  children:
  - System.Web.HttpUtility.#ctor
  - System.Web.HttpUtility.HtmlAttributeEncode(System.String)
  - System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpUtility.HtmlDecode(System.String)
  - System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpUtility.HtmlEncode(System.Object)
  - System.Web.HttpUtility.HtmlEncode(System.String)
  - System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpUtility.JavaScriptStringEncode(System.String)
  - System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)
  - System.Web.HttpUtility.ParseQueryString(System.String)
  - System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecode(System.String)
  - System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])
  - System.Web.HttpUtility.UrlDecodeToBytes(System.String)
  - System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpUtility.UrlEncode(System.Byte[])
  - System.Web.HttpUtility.UrlEncode(System.String)
  - System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])
  - System.Web.HttpUtility.UrlEncodeToBytes(System.String)
  - System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)
  - System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  - System.Web.HttpUtility.UrlEncodeUnicode(System.String)
  - System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)
  - System.Web.HttpUtility.UrlPathEncode(System.String)
  langs:
  - csharp
  name: HttpUtility
  nameWithType: HttpUtility
  fullName: System.Web.HttpUtility
  type: Class
  summary: "Módszereket biztosít a kódolási és dekódolási URL-címeket, ha a beérkező webes kérelmek feldolgozásához. Ez az osztály nem örökölhető."
  remarks: "A HttpUtility osztály használja belső a <xref:System.Web.HttpServerUtility>osztály, amelynek metódusok és a tulajdonságok érhetők el a belső ASP.NET keresztül <xref:System.Web.HttpContext.Server%2A>objektum.</xref:System.Web.HttpContext.Server%2A> </xref:System.Web.HttpServerUtility> Emellett a HttpUtility osztály kódolási és dekódolási, amelyek nem érhető el a <xref:System.Web.HttpContext.Server%2A>.</xref:System.Web.HttpContext.Server%2A> a segédprogram-metódusokat tartalmaz-e       Kódolni, vagy egy webes alkalmazás kívül eső értékeket dekódolni, használja az <xref:System.Net.WebUtility>osztályhoz.</xref:System.Net.WebUtility>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.HttpUtility.UrlEncode%2A>, <xref:System.Web.HttpUtility.UrlDecode%2A> and <xref:System.Web.HttpUtility.ParseQueryString%2A> methods of the HttpUtility class.  \n  \n [!code-cs[HttpUtilityExample#1](~/add/codesnippet/csharp/t-system.web.httputility_1.aspx)]\n [!code-vb[HttpUtilityExample#1](~/add/codesnippet/visualbasic/t-system.web.httputility_1.aspx)]"
  syntax:
    content: public sealed class HttpUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpUtility.#ctor
  id: '#ctor'
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HttpUtility()
  nameWithType: HttpUtility.HttpUtility()
  fullName: System.Web.HttpUtility.HttpUtility()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.HttpUtility&quot;> </xref> osztály."
  remarks: "A <xref:System.Web.HttpUtility>osztály elérhetővé teszi a kódolási módszerek és dekódolási karakterlánc-alapú URL-címek, URL-cím jogkivonatokat és az elérési útnak.</xref:System.Web.HttpUtility> <xref:System.Web.HttpUtility>Belső <xref:System.Web.HttpServerUtility>osztály</xref:System.Web.HttpServerUtility> által használt</xref:System.Web.HttpUtility>"
  syntax:
    content: public HttpUtility ();
    parameters: []
  overload: System.Web.HttpUtility.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlAttributeEncode(System.String)
  id: HtmlAttributeEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlAttributeEncode(String)
  nameWithType: HttpUtility.HtmlAttributeEncode(String)
  fullName: System.Web.HttpUtility.HtmlAttributeEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Minimálisan alakít át egy HTML-kódolású karakterlánc."
  remarks: "A HtmlAttributeEncode metódus egy HTML-attribútum értéke való megfelelő karakterek kódolja.       A karakterláncos eredményben HtmlAttributeEncode metódusa csak a dupla idézett attribútum használható. Biztonsági problémák léphetnek fel egyetlen idézett attribútumokkal a HtmlAttributeEncode módszer használata esetén."
  syntax:
    content: public static string HtmlAttributeEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "A karakterlánc kódolása."
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.HtmlAttributeEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  id: HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpUtility.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlAttributeEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Minimálisan karakterlánccá alakítja át egy HTML-kódolású karakterlánc, és elküldi a kódolt karakterláncot egy <xref:System.IO.TextWriter>kimeneti adatfolyam.</xref:System.IO.TextWriter>"
  remarks: "A HtmlAttributeEncode metódus csak idézőjelek (&quot;), változónevekben (&) alakítja át, és bal oldali szög szögletes zárójelbe)<) to equivalent character entities. to=&quot;&quot; equivalent=&quot;&quot; character=&quot;&quot;></) to equivalent character entities.> Jelentősen gyorsabb, mint a <xref:System.Web.HttpUtility.HtmlEncode%2A>metódus.</xref:System.Web.HttpUtility.HtmlEncode%2A>       A karakterláncos eredményben HtmlAttributeEncode metódusa csak a dupla idézett attribútum használható. Biztonsági problémák léphetnek fel egyetlen idézett attribútumokkal a HtmlAttributeEncode módszer használata esetén."
  syntax:
    content: public static void HtmlAttributeEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "A karakterlánc kódolása"
    - id: output
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>kimeneti adatfolyam.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpUtility.HtmlAttributeEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlDecode(System.String)
  id: HtmlDecode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlDecode(String)
  nameWithType: HttpUtility.HtmlDecode(String)
  fullName: System.Web.HttpUtility.HtmlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konvertálja töltött be a dekódolt karakterlánc HTTP átvitel HTML-kódolású karakterlánc."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding. For example, when embedded in a block of text, the characters \\< and > are encoded as &lt; and &gt; for HTTP transmission.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following code example demonstrates the <xref:System.Web.HttpUtility.HtmlEncode%2A> and HtmlDecode methods of the <xref:System.Web.HttpUtility> class. The input string is encoded using the <xref:System.Web.HttpUtility.HtmlEncode%2A> method. The encoded string obtained is then decoded using the HtmlDecode method.  \n  \n [!code-vb[HttpUtility_HtmlDecode#1](~/add/codesnippet/visualbasic/m-system.web.httputility_2_1.vb)]\n [!code-cs[HttpUtility_HtmlDecode#1](~/add/codesnippet/csharp/m-system.web.httputility_2_1.cs)]"
  syntax:
    content: public static string HtmlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "A karakterlánc dekódolására."
    return:
      type: System.String
      description: "A dekódolt karakterlánc."
  overload: System.Web.HttpUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Karakterlánc, amely már a HTML-kódolja a dekódolt karakterlánc, és elküldi a dekódolt karakterlánc alakít egy <xref:System.IO.TextWriter>kimeneti adatfolyam.</xref:System.IO.TextWriter>"
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding. For example, when embedded in a block of text, the characters \\< and > are encoded as &lt; and &gt; for HTTP transmission.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static void HtmlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "A karakterlánc dekódolására."
    - id: output
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>kimeneti adatfolyam.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlEncode(System.Object)
  id: HtmlEncode(System.Object)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlEncode(Object)
  nameWithType: HttpUtility.HtmlEncode(Object)
  fullName: System.Web.HttpUtility.HtmlEncode(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Az objektumhoz tartozó karakterlánc-ábrázolása alakít át egy HTML-kódolású karakterlánc, és a kódolt karakterláncot ad vissza."
  remarks: "Kódolni, vagy egy webes alkalmazás kívül eső értékeket dekódolni, használja az <xref:System.Net.WebUtility>osztályhoz.</xref:System.Net.WebUtility>"
  syntax:
    content: public static string HtmlEncode (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Egy objektum."
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlEncode(System.String)
  id: HtmlEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlEncode(String)
  nameWithType: HttpUtility.HtmlEncode(String)
  fullName: System.Web.HttpUtility.HtmlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Alakít át egy HTML-kódolású karakterlánc."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding. For example, when embedded in a block of text, the characters \\< and > are encoded as &lt; and &gt; for HTTP transmission.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following code example demonstrates the HtmlEncode and <xref:System.Web.HttpUtility.HtmlDecode%2A> methods of the <xref:System.Web.HttpUtility> class. The input string is encoded using the HtmlEncode method. The encoded string obtained is then decoded using the <xref:System.Web.HttpUtility.HtmlDecode%2A> method.  \n  \n [!code-vb[HttpUtility_HtmlDecode#1](~/add/codesnippet/visualbasic/m-system.web.httputility_0_1.vb)]\n [!code-cs[HttpUtility_HtmlDecode#1](~/add/codesnippet/csharp/m-system.web.httputility_0_1.cs)]"
  syntax:
    content: public static string HtmlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "A karakterlánc kódolása."
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy karakterlánc alakít át egy HTML-kódolású karakterlánc, és a kimenetet visszaadja a <xref:System.IO.TextWriter>kimeneti adatfolyam.</xref:System.IO.TextWriter>"
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding. For example, when embedded in a block of text, the characters \\< and >, are encoded as &lt; and &gt; for HTTP transmission.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static void HtmlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "A karakterlánc kódolása"
    - id: output
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>kimeneti adatfolyam.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.JavaScriptStringEncode(System.String)
  id: JavaScriptStringEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: JavaScriptStringEncode(String)
  nameWithType: HttpUtility.JavaScriptStringEncode(String)
  fullName: System.Web.HttpUtility.JavaScriptStringEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy karakterlánc kódolja."
  syntax:
    content: public static string JavaScriptStringEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "Egy karakterlánc kódolása."
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.JavaScriptStringEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)
  id: JavaScriptStringEncode(System.String,System.Boolean)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: JavaScriptStringEncode(String,Boolean)
  nameWithType: HttpUtility.JavaScriptStringEncode(String,Boolean)
  fullName: System.Web.HttpUtility.JavaScriptStringEncode(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy karakterlánc kódolja."
  syntax:
    content: public static string JavaScriptStringEncode (string value, bool addDoubleQuotes);
    parameters:
    - id: value
      type: System.String
      description: "Egy karakterlánc kódolása."
    - id: addDoubleQuotes
      type: System.Boolean
      description: "Egy érték, amely jelzi, hogy idézőjelek szerepelni fog a kódolású karakterlánc körül."
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.JavaScriptStringEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.ParseQueryString(System.String)
  id: ParseQueryString(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: ParseQueryString(String)
  nameWithType: HttpUtility.ParseQueryString(String)
  fullName: System.Web.HttpUtility.ParseQueryString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Elemzi a lekérdezési karakterláncot egy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> használatával <xref:System.Text.Encoding.UTF8*>kódolás.</xref:System.Text.Encoding.UTF8*>"
  remarks: "Az ParseQueryString metódusnak <xref:System.Text.Encoding.UTF8%2A>Formátum a visszaadott a lekérdezési karakterlánc elemzéséhez <xref:System.Collections.Specialized.NameValueCollection>, URL-kódolású karaktert dekódolni vannak, és ugyanazon lekérdezési karakterlánc paraméter többször szerepel a listában külön bejegyzésként értékekhez elválasztó vessző.</xref:System.Collections.Specialized.NameValueCollection> </xref:System.Text.Encoding.UTF8%2A>      > [!IMPORTANT] > A ParseQueryString metódust használja a lekérdezési karakterláncokat előfordulhat, hogy felhasználói bevitel, amelyek a potenciális biztonsági kockázatot jelent. Alapértelmezés szerint az ASP.NET-weblapok ellenőrizze, hogy felhasználói bevitel nem tartalmaz parancsfájl vagy HTML-elem. További információkért lásd: [parancsfájl biztonsági réseket áttekintése](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the ParseQueryString method. Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n [!code-cs[HttpUtility_ParseQueryString#1](~/add/codesnippet/csharp/m-system.web.httputility_1_1.aspx)]\n [!code-vb[HttpUtility_ParseQueryString#1](~/add/codesnippet/visualbasic/m-system.web.httputility_1_1.aspx)]"
  syntax:
    content: public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query);
    parameters:
    - id: query
      type: System.String
      description: "A lekérdezési karakterlánc elemzése."
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> lekérdezés-paraméterek és értékek."
  overload: System.Web.HttpUtility.ParseQueryString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>query</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)
  id: ParseQueryString(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: ParseQueryString(String,Encoding)
  nameWithType: HttpUtility.ParseQueryString(String,Encoding)
  fullName: System.Web.HttpUtility.ParseQueryString(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Elemzi a lekérdezési karakterláncot egy <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> a megadott <xref:System.Text.Encoding>.</xref:System.Text.Encoding> használatával"
  remarks: "A visszaadott a <xref:System.Collections.Specialized.NameValueCollection>, URL-kódolású karaktert dekódolni vannak, és ugyanazon lekérdezési karakterlánc paraméter többször szerepel a listában külön bejegyzésként értékekhez elválasztó vessző.</xref:System.Collections.Specialized.NameValueCollection>      > [!IMPORTANT] > A ParseQueryString metódust használja a lekérdezési karakterláncokat előfordulhat, hogy felhasználói bevitel, amelyek a potenciális biztonsági kockázatot jelent. Alapértelmezés szerint az ASP.NET-weblapok ellenőrizze, hogy felhasználói bevitel nem tartalmaz parancsfájl vagy HTML-elem. További információkért lásd: [parancsfájl biztonsági réseket áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query, System.Text.Encoding encoding);
    parameters:
    - id: query
      type: System.String
      description: "A lekérdezési karakterlánc elemzése."
    - id: encoding
      type: System.Text.Encoding
      description: "A <xref:System.Text.Encoding>használatára.</xref:System.Text.Encoding>"
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> lekérdezés-paraméterek és értékek."
  overload: System.Web.HttpUtility.ParseQueryString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>query</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encoding</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecode(System.String)
  id: UrlDecode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecode(String)
  nameWithType: HttpUtility.UrlDecode(String)
  fullName: System.Web.HttpUtility.UrlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konvertálja a dekódolt karakterlánc be egy URL-címben továbbításra kódolású karakterlánc."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlDecode (string str);
    parameters:
    - id: str
      type: System.String
      description: "A karakterlánc dekódolására."
    return:
      type: System.String
      description: "A dekódolt karakterlánc."
  overload: System.Web.HttpUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)
  id: UrlDecode(System.Byte[],System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecode(Byte[],Encoding)
  nameWithType: HttpUtility.UrlDecode(Byte[],Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(Byte[],Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "URL-kódolású bájttömb alakítja át a megadott dekódolási objektummal dekódolt karakterlánc."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlDecode (byte[] bytes, System.Text.Encoding e);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "A dekódolás bájttömb."
    - id: e
      type: System.Text.Encoding
      description: "A <xref:System.Text.Encoding>, amely megadja, hogy a dekódolási séma.</xref:System.Text.Encoding>"
    return:
      type: System.String
      description: "A dekódolt karakterlánc."
  overload: System.Web.HttpUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)
  id: UrlDecode(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecode(String,Encoding)
  nameWithType: HttpUtility.UrlDecode(String,Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy URL-kódolású karakterlánc alakítja a dekódolt karakterlánc, a megadott kódolási objektummal."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlDecode (string str, System.Text.Encoding e);
    parameters:
    - id: str
      type: System.String
      description: "A karakterlánc dekódolására."
    - id: e
      type: System.Text.Encoding
      description: "A <xref:System.Text.Encoding>, amely megadja, hogy a dekódolási séma.</xref:System.Text.Encoding>"
    return:
      type: System.String
      description: "A dekódolt karakterlánc."
  overload: System.Web.HttpUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)
  id: UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecode(Byte[],Int32,Int32,Encoding)
  nameWithType: HttpUtility.UrlDecode(Byte[],Int32,Int32,Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(Byte[],Int32,Int32,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "URL-kódolású bájttömb alakítja át a megadott kódolási objektummal, a tömb a megadott pozíciótól kezdődően, és a megadott számú bájt Folytatás dekódolt karakterlánc."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlDecode (byte[] bytes, int offset, int count, System.Text.Encoding e);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "A dekódolás bájttömb."
    - id: offset
      type: System.Int32
      description: "Megkezdéséhez dekódolás a byte pozíciója."
    - id: count
      type: System.Int32
      description: "Dekódolás bájtok száma."
    - id: e
      type: System.Text.Encoding
      description: "A <xref:System.Text.Encoding>objektum, amely meghatározza a dekódolási séma.</xref:System.Text.Encoding>"
    return:
      type: System.String
      description: "A dekódolt karakterlánc."
  overload: System.Web.HttpUtility.UrlDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, but <code>count</code> does not equal <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the length of the <code>bytes</code> array.  \n  \n \\- or -  \n  \n <code>count</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, or <code>count</code> + <code>offset</code> is greater than the length of the <code>bytes</code> array."
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])
  id: UrlDecodeToBytes(System.Byte[])
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecodeToBytes(Byte[])
  nameWithType: HttpUtility.UrlDecodeToBytes(Byte[])
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy URL-kódolású bájttömb alakítja át a dekódolt bájttömb."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlDecodeToBytes (byte[] bytes);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "A dekódolás bájttömb."
    return:
      type: System.Byte[]
      description: "A dekódolt bájttömb."
  overload: System.Web.HttpUtility.UrlDecodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.String)
  id: UrlDecodeToBytes(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecodeToBytes(String)
  nameWithType: HttpUtility.UrlDecodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Konvertálja a dekódolt bájttömb egy URL-kódolású karakterlánc."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlDecodeToBytes (string str);
    parameters:
    - id: str
      type: System.String
      description: "A karakterlánc dekódolására."
    return:
      type: System.Byte[]
      description: "A dekódolt bájttömb."
  overload: System.Web.HttpUtility.UrlDecodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)
  id: UrlDecodeToBytes(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecodeToBytes(String,Encoding)
  nameWithType: HttpUtility.UrlDecodeToBytes(String,Encoding)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "URL-kódolású karakterláncnak egy a megadott dekódolási objektummal dekódolt bájttömb konvertálja."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlDecodeToBytes (string str, System.Text.Encoding e);
    parameters:
    - id: str
      type: System.String
      description: "A karakterlánc dekódolására."
    - id: e
      type: System.Text.Encoding
      description: "A <xref:System.Text.Encoding>objektum, amely meghatározza a dekódolási séma.</xref:System.Text.Encoding>"
    return:
      type: System.Byte[]
      description: "A dekódolt bájttömb."
  overload: System.Web.HttpUtility.UrlDecodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  id: UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlDecodeToBytes(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlDecodeToBytes(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy URL-kódolású bájttömb alakítja át a dekódolt bájttömb, a tömb a megadott pozíciótól kezdődően és folytatás a megadott számú bájt."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlDecodeToBytes (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "A dekódolás bájttömb."
    - id: offset
      type: System.Int32
      description: "A bájttömb kezdőpontját dekódolás pozíciója."
    - id: count
      type: System.Int32
      description: "Dekódolás bájtok száma."
    return:
      type: System.Byte[]
      description: "A dekódolt bájttömb."
  overload: System.Web.HttpUtility.UrlDecodeToBytes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, but <code>count</code> does not equal <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the length of the <code>bytes</code> array.  \n  \n \\- or -  \n  \n <code>count</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, or <code>count</code> + <code>offset</code> is greater than the length of the <code>bytes</code> array."
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncode(System.Byte[])
  id: UrlEncode(System.Byte[])
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncode(Byte[])
  nameWithType: HttpUtility.UrlEncode(Byte[])
  fullName: System.Web.HttpUtility.UrlEncode(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy bájttömböt alakít át egy URL-cím kódolású karakterlánc."
  remarks: "The UrlEncode method can be used to encode the entire URL, including query-string values. If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when the characters \\< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlEncode (byte[] bytes);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "A tömb kódolására bájtban kifejezve."
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncode(System.String)
  id: UrlEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncode(String)
  nameWithType: HttpUtility.UrlEncode(String)
  fullName: System.Web.HttpUtility.UrlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "URL karakterlánc kódolja."
  remarks: "The UrlEncode method can be used to encode the entire URL, including query-string values. If characters such as blanks and punctuation are passed in an HTTP stream without encoding, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when the characters \\< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.  \n  \n You can encode a URL using with the UrlEncode method or the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method. However, the methods return different results. The UrlEncode method converts each space character to a plus character (+). The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method converts each space character into the string \"%20\", which represents a space in hexadecimal notation. Use the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method when you encode the path portion of a URL in order to guarantee a consistent decoded URL, regardless of which platform or browser performs the decoding.  \n  \n The UrlEncode method uses UTF-8 encoding by default. Therefore, using the UrlEncode method provides the same results as using the <xref:System.Web.HttpUtility.UrlEncode%2A> method and specifying <xref:System.Text.Encoding.UTF8%2A> as the second parameter.  \n  \n <xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the UrlEncode method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses the UrlEncode method to encode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlEncode (string str);
    parameters:
    - id: str
      type: System.String
      description: "A szöveg kódolása."
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)
  id: UrlEncode(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncode(String,Encoding)
  nameWithType: HttpUtility.UrlEncode(String,Encoding)
  fullName: System.Web.HttpUtility.UrlEncode(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "A megadott kódolási objektummal URL karakterlánc kódolja."
  remarks: "This method can be used to encode the entire URL, including query-string values. If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when the characters \\< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlEncode (string str, System.Text.Encoding e);
    parameters:
    - id: str
      type: System.String
      description: "A szöveg kódolása."
    - id: e
      type: System.Text.Encoding
      description: "A <xref:System.Text.Encoding>objektum, amely meghatározza a kódolási sémát.</xref:System.Text.Encoding>"
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)
  id: UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlEncode(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy bájttömböt alakít át egy URL-kódolású karakterlánc, a tömb a megadott pozíciótól kezdődően és folytatás a megadott számú bájt."
  remarks: "The <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> method can be used to encode the entire URL, including query-string values. If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when the characters \\< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static string UrlEncode (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "A tömb kódolására bájtban kifejezve."
    - id: offset
      type: System.Int32
      description: "A bájttömb kezdőpontját kódolás pozíciója."
    - id: count
      type: System.Int32
      description: "Kódolni bájtok száma."
    return:
      type: System.String
      description: "Egy kódolású karakterlánc."
  overload: System.Web.HttpUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])
  id: UrlEncodeToBytes(System.Byte[])
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeToBytes(Byte[])
  nameWithType: HttpUtility.UrlEncodeToBytes(Byte[])
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Bájttömb alakít át egy URL-kódolású bájttömb."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlEncodeToBytes (byte[] bytes);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "A tömb kódolására bájtban kifejezve."
    return:
      type: System.Byte[]
      description: "A kódolt bájttömb."
  overload: System.Web.HttpUtility.UrlEncodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.String)
  id: UrlEncodeToBytes(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeToBytes(String)
  nameWithType: HttpUtility.UrlEncodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy URL-kódolású bájttömb karakterlánccá alakítja."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlEncodeToBytes (string str);
    parameters:
    - id: str
      type: System.String
      description: "A karakterlánc kódolása."
    return:
      type: System.Byte[]
      description: "A kódolt bájttömb."
  overload: System.Web.HttpUtility.UrlEncodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)
  id: UrlEncodeToBytes(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeToBytes(String,Encoding)
  nameWithType: HttpUtility.UrlEncodeToBytes(String,Encoding)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy karakterlánc alakít át egy URL-kódolású bájttömb a megadott kódolási objektummal."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlEncodeToBytes (string str, System.Text.Encoding e);
    parameters:
    - id: str
      type: System.String
      description: "A karakterlánc kódolása"
    - id: e
      type: System.Text.Encoding
      description: "A <xref:System.Text.Encoding>, amely megadja, hogy a kódolási sémát.</xref:System.Text.Encoding>"
    return:
      type: System.Byte[]
      description: "A kódolt bájttömb."
  overload: System.Web.HttpUtility.UrlEncodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  id: UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeToBytes(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlEncodeToBytes(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Bájttömb alakít át egy URL-kódolású bájttömb, a tömb a megadott pozíciótól kezdődően és folytatás a megadott számú bájt."
  remarks: "If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end. URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding. For example, when embedded in a block of text to be transmitted in a URL, the characters \\< and > are encoded as %3c and %3e.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  syntax:
    content: public static byte[] UrlEncodeToBytes (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "A tömb kódolására bájtban kifejezve."
    - id: offset
      type: System.Int32
      description: "A bájttömb kezdőpontját kódolás pozíciója."
    - id: count
      type: System.Int32
      description: "Kódolni bájtok száma."
    return:
      type: System.Byte[]
      description: "A kódolt bájttömb."
  overload: System.Web.HttpUtility.UrlEncodeToBytes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, but <code>count</code> does not equal <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref> or greater than the length of the <code>bytes</code> array.  \n  \n \\- or -  \n  \n <code>count</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>, or <code>count</code> + <code>offset</code> is greater than the length of the <code>bytes</code> array."
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeUnicode(System.String)
  id: UrlEncodeUnicode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeUnicode(String)
  nameWithType: HttpUtility.UrlEncodeUnicode(String)
  fullName: System.Web.HttpUtility.UrlEncodeUnicode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy karakterlánc alakít át egy Unicode karakterlánc."
  remarks: "Ha egy HTTP-adatfolyamban átadott karaktereket például üres cellákat és írásjelek, akkor a fogadó végén félreértelmezheti. URL-kódolást alakítja át a karakterek, amelyek nem érvényesek a karakter-entitás alakokat; URL-CÍMÉT URL dekódolási megfordítja a kódolást. Például, amikor az egy URL-címben, a karakterek továbbítandó szövegblokk ágyazott \\< és >: %3 c. és %&3;e van kódolva."
  syntax:
    content: public static string UrlEncodeUnicode (string str);
    parameters:
    - id: str
      type: System.String
      description: "Alakítandó karakterláncot."
    return:
      type: System.String
      description: "Egy Unicode karakterlánc %<code> UnicodeValue </code> jelöléssel."
  overload: System.Web.HttpUtility.UrlEncodeUnicode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)
  id: UrlEncodeUnicodeToBytes(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlEncodeUnicodeToBytes(String)
  nameWithType: HttpUtility.UrlEncodeUnicodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlEncodeUnicodeToBytes(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy Unicode karakterlánc bájttömb konvertálja."
  remarks: "Ha egy HTTP-adatfolyamban átadott karaktereket például üres cellákat és írásjelek, akkor a fogadó végén félreértelmezheti. URL-kódolást alakítja át a karakterek, amelyek nem érvényesek a karakter-entitás alakokat; URL-CÍMÉT URL dekódolási megfordítja a kódolást. Például, amikor az egy URL-címben, a karakterek továbbítandó szövegblokk ágyazott \\< és >: %3 c. és %&3;e van kódolva."
  syntax:
    content: public static byte[] UrlEncodeUnicodeToBytes (string str);
    parameters:
    - id: str
      type: System.String
      description: "Alakítandó karakterláncot."
    return:
      type: System.Byte[]
      description: "Egy bájttömböt."
  overload: System.Web.HttpUtility.UrlEncodeUnicodeToBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpUtility.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.HttpUtility
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpUtility.UrlPathEncode(String)
  fullName: System.Web.HttpUtility.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ne használjon; csak a böngészővel készült. <xref:System.Web.HttpUtility.UrlEncode*>.</xref:System.Web.HttpUtility.UrlEncode*> Használata"
  syntax:
    content: public static string UrlPathEncode (string str);
    parameters:
    - id: str
      type: System.String
      description: "A szöveg kódolása."
    return:
      type: System.String
      description: "A kódolt szöveg."
  overload: System.Web.HttpUtility.UrlPathEncode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpUtility.#ctor
  parent: System.Web.HttpUtility
  isExternal: false
  name: HttpUtility()
  nameWithType: HttpUtility.HttpUtility()
  fullName: System.Web.HttpUtility.HttpUtility()
- uid: System.Web.HttpUtility.HtmlAttributeEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlAttributeEncode(String)
  nameWithType: HttpUtility.HtmlAttributeEncode(String)
  fullName: System.Web.HttpUtility.HtmlAttributeEncode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpUtility.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlAttributeEncode(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpUtility.HtmlDecode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlDecode(String)
  nameWithType: HttpUtility.HtmlDecode(String)
  fullName: System.Web.HttpUtility.HtmlDecode(String)
- uid: System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlDecode(String,TextWriter)
- uid: System.Web.HttpUtility.HtmlEncode(System.Object)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlEncode(Object)
  nameWithType: HttpUtility.HtmlEncode(Object)
  fullName: System.Web.HttpUtility.HtmlEncode(Object)
- uid: System.Web.HttpUtility.HtmlEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlEncode(String)
  nameWithType: HttpUtility.HtmlEncode(String)
  fullName: System.Web.HttpUtility.HtmlEncode(String)
- uid: System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpUtility.HtmlEncode(String,TextWriter)
- uid: System.Web.HttpUtility.JavaScriptStringEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: JavaScriptStringEncode(String)
  nameWithType: HttpUtility.JavaScriptStringEncode(String)
  fullName: System.Web.HttpUtility.JavaScriptStringEncode(String)
- uid: System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)
  parent: System.Web.HttpUtility
  isExternal: false
  name: JavaScriptStringEncode(String,Boolean)
  nameWithType: HttpUtility.JavaScriptStringEncode(String,Boolean)
  fullName: System.Web.HttpUtility.JavaScriptStringEncode(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpUtility.ParseQueryString(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: ParseQueryString(String)
  nameWithType: HttpUtility.ParseQueryString(String)
  fullName: System.Web.HttpUtility.ParseQueryString(String)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: ParseQueryString(String,Encoding)
  nameWithType: HttpUtility.ParseQueryString(String,Encoding)
  fullName: System.Web.HttpUtility.ParseQueryString(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpUtility.UrlDecode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode(String)
  nameWithType: HttpUtility.UrlDecode(String)
  fullName: System.Web.HttpUtility.UrlDecode(String)
- uid: System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode(Byte[],Encoding)
  nameWithType: HttpUtility.UrlDecode(Byte[],Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(Byte[],Encoding)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode(String,Encoding)
  nameWithType: HttpUtility.UrlDecode(String,Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(String,Encoding)
- uid: System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode(Byte[],Int32,Int32,Encoding)
  nameWithType: HttpUtility.UrlDecode(Byte[],Int32,Int32,Encoding)
  fullName: System.Web.HttpUtility.UrlDecode(Byte[],Int32,Int32,Encoding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes(Byte[])
  nameWithType: HttpUtility.UrlDecodeToBytes(Byte[])
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(Byte[])
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes(String)
  nameWithType: HttpUtility.UrlDecodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(String)
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes(String,Encoding)
  nameWithType: HttpUtility.UrlDecodeToBytes(String,Encoding)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(String,Encoding)
- uid: System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlDecodeToBytes(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlDecodeToBytes(Byte[],Int32,Int32)
- uid: System.Web.HttpUtility.UrlEncode(System.Byte[])
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode(Byte[])
  nameWithType: HttpUtility.UrlEncode(Byte[])
  fullName: System.Web.HttpUtility.UrlEncode(Byte[])
- uid: System.Web.HttpUtility.UrlEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode(String)
  nameWithType: HttpUtility.UrlEncode(String)
  fullName: System.Web.HttpUtility.UrlEncode(String)
- uid: System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode(String,Encoding)
  nameWithType: HttpUtility.UrlEncode(String,Encoding)
  fullName: System.Web.HttpUtility.UrlEncode(String,Encoding)
- uid: System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlEncode(Byte[],Int32,Int32)
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes(Byte[])
  nameWithType: HttpUtility.UrlEncodeToBytes(Byte[])
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(Byte[])
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes(String)
  nameWithType: HttpUtility.UrlEncodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(String)
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes(String,Encoding)
  nameWithType: HttpUtility.UrlEncodeToBytes(String,Encoding)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(String,Encoding)
- uid: System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes(Byte[],Int32,Int32)
  nameWithType: HttpUtility.UrlEncodeToBytes(Byte[],Int32,Int32)
  fullName: System.Web.HttpUtility.UrlEncodeToBytes(Byte[],Int32,Int32)
- uid: System.Web.HttpUtility.UrlEncodeUnicode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeUnicode(String)
  nameWithType: HttpUtility.UrlEncodeUnicode(String)
  fullName: System.Web.HttpUtility.UrlEncodeUnicode(String)
- uid: System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeUnicodeToBytes(String)
  nameWithType: HttpUtility.UrlEncodeUnicodeToBytes(String)
  fullName: System.Web.HttpUtility.UrlEncodeUnicodeToBytes(String)
- uid: System.Web.HttpUtility.UrlPathEncode(System.String)
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpUtility.UrlPathEncode(String)
  fullName: System.Web.HttpUtility.UrlPathEncode(String)
- uid: System.Web.HttpUtility.#ctor*
  parent: System.Web.HttpUtility
  isExternal: false
  name: HttpUtility
  nameWithType: HttpUtility.HttpUtility
- uid: System.Web.HttpUtility.HtmlAttributeEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlAttributeEncode
  nameWithType: HttpUtility.HtmlAttributeEncode
- uid: System.Web.HttpUtility.HtmlDecode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpUtility.HtmlDecode
- uid: System.Web.HttpUtility.HtmlEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpUtility.HtmlEncode
- uid: System.Web.HttpUtility.JavaScriptStringEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: JavaScriptStringEncode
  nameWithType: HttpUtility.JavaScriptStringEncode
- uid: System.Web.HttpUtility.ParseQueryString*
  parent: System.Web.HttpUtility
  isExternal: false
  name: ParseQueryString
  nameWithType: HttpUtility.ParseQueryString
- uid: System.Web.HttpUtility.UrlDecode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecode
  nameWithType: HttpUtility.UrlDecode
- uid: System.Web.HttpUtility.UrlDecodeToBytes*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlDecodeToBytes
  nameWithType: HttpUtility.UrlDecodeToBytes
- uid: System.Web.HttpUtility.UrlEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncode
  nameWithType: HttpUtility.UrlEncode
- uid: System.Web.HttpUtility.UrlEncodeToBytes*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeToBytes
  nameWithType: HttpUtility.UrlEncodeToBytes
- uid: System.Web.HttpUtility.UrlEncodeUnicode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeUnicode
  nameWithType: HttpUtility.UrlEncodeUnicode
- uid: System.Web.HttpUtility.UrlEncodeUnicodeToBytes*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlEncodeUnicodeToBytes
  nameWithType: HttpUtility.UrlEncodeUnicodeToBytes
- uid: System.Web.HttpUtility.UrlPathEncode*
  parent: System.Web.HttpUtility
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpUtility.UrlPathEncode
