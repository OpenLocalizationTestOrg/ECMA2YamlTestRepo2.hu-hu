### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpClientHandler
  id: HttpClientHandler
  children:
  - System.Net.Http.HttpClientHandler.#ctor
  - System.Net.Http.HttpClientHandler.AllowAutoRedirect
  - System.Net.Http.HttpClientHandler.AutomaticDecompression
  - System.Net.Http.HttpClientHandler.ClientCertificateOptions
  - System.Net.Http.HttpClientHandler.CookieContainer
  - System.Net.Http.HttpClientHandler.Credentials
  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  - System.Net.Http.HttpClientHandler.PreAuthenticate
  - System.Net.Http.HttpClientHandler.Proxy
  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  - System.Net.Http.HttpClientHandler.SupportsProxy
  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  - System.Net.Http.HttpClientHandler.UseCookies
  - System.Net.Http.HttpClientHandler.UseDefaultCredentials
  - System.Net.Http.HttpClientHandler.UseProxy
  langs:
  - csharp
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
  type: Class
  summary: "A által használt alapértelmezett üzenetkezelő <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref>."
  remarks: "Az HttpClientHandler és az abból származtatott osztályok a fejlesztők számos lehetőséget proxyk közötti hitelesítés konfigurálása."
  example:
  - '[!code-cs[System.Net.Http.HttpClientHandler#1](~/add/codesnippet/csharp/t-system.net.http.httpcl_0_1.cs)]'
  syntax:
    content: 'public class HttpClientHandler : System.Net.Http.HttpMessageHandler'
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpMessageHandler.Dispose
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: HttpClientHandler()
  nameWithType: HttpClientHandler.HttpClientHandler()
  fullName: System.Net.Http.HttpClientHandler.HttpClientHandler()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Létrehoz egy új egy <xref href=&quot;System.Net.Http.HttpClientHandler&quot;> </xref> osztály."
  syntax:
    content: public HttpClientHandler ();
    parameters: []
  overload: System.Net.Http.HttpClientHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
  fullName: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a kezelő átirányítási válaszok kell követnie."
  remarks: "AllowAutoRedirect beállítása `true` Ha azt szeretné, hogy a kezelő automatikusan hajtsa végre a HTTP-átirányítás fejlécek az új helyre az erőforrás. Átirányítások követése maximális számának állítja be a <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A>tulajdonság.</xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A>       Ha AllowAutoRedirect `false`, összes HTTP választ egy HTTP-állapotkód: 300 399 a rendszer visszairányítja az alkalmazást.       Az engedélyezési fejléc nincs bejelölve, az automatikus-átirányítások, és a kezelő automatikusan megpróbálja újra hitelesíteni az átirányított helyen. A gyakorlatban ez azt jelenti, hogy egy alkalmazás hitelesítési fejlécéhez egyéni hitelesítési adatait nem állítható, ha lehetséges átirányítási hibát. Ehelyett az alkalmazás kell megvalósítani, és egy egyéni hitelesítési modul regisztrálása."
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a, ha a kezelő érdemes követnie átirányítási válaszok; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.AllowAutoRedirect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  id: AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.AutomaticDecompression
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a tartalom HTTP-válasz automatikus kibontása a kezelő által használt kitömörítés módszer típusát."
  syntax:
    content: public System.Net.DecompressionMethods AutomaticDecompression { get; set; }
    return:
      type: System.Net.DecompressionMethods
      description: "A kezelő által használt automatikus kitömörítés módszer. Az alapértelmezett érték: <xref:System.Net.DecompressionMethods>.</xref:System.Net.DecompressionMethods>"
  overload: System.Net.Http.HttpClientHandler.AutomaticDecompression*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  id: ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
  fullName: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, ha a tanúsítványt a tanúsítványtárolóból automatikus kiválasztásának, vagy ha a hívó számára engedélyezett adjon át egy adott ügyféltanúsítványt."
  syntax:
    content: public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }
    return:
      type: System.Net.Http.ClientCertificateOption
      description: "Az ehhez a kezelőhöz tartozó biztonsági tanúsítványok gyűjteménye."
  overload: System.Net.Http.HttpClientHandler.ClientCertificateOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  id: CookieContainer
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
  fullName: System.Net.Http.HttpClientHandler.CookieContainer
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a kiszolgálói cookie-kat tárolásához a kezelő által használt cookie-k tároló."
  remarks: "A CookieContainer tulajdonság nyújt egy példányát a <xref:System.Net.CookieContainer>osztályt, amely tartalmazza az ehhez a kezelőhöz tartozó cookie-kat.</xref:System.Net.CookieContainer>       Ha a <xref:System.Net.Http.HttpClientHandler.UseCookies%2A>tulajdonság `true`, a CookieContainer tulajdonság adja meg a cookie-k tároló tárolja a kiszolgálói cookie-kat.</xref:System.Net.Http.HttpClientHandler.UseCookies%2A> A felhasználó beállíthatja a cookie-kra e tulajdonság használatával kérelmek elküldése előtt. Ha a <xref:System.Net.Http.HttpClientHandler.UseCookies%2A>tulajdonság értéke &quot;false&quot; és a felhasználó hozzáadja a cookie-k CookieContainer, a cookie-k figyelmen kívül hagyva, és nem küldi el a kiszolgálónak.</xref:System.Net.Http.HttpClientHandler.UseCookies%2A> A CookieContainer beállítást `null` fog kivételt jelez."
  syntax:
    content: public System.Net.CookieContainer CookieContainer { get; set; }
    return:
      type: System.Net.CookieContainer
      description: "A kiszolgálói cookie-kat tárolásához a kezelő által használt cookie-k tárolója."
  overload: System.Net.Http.HttpClientHandler.CookieContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.Credentials
  id: Credentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
  fullName: System.Net.Http.HttpClientHandler.Credentials
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a kezelő által használt hitelesítési adatokat."
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "A hitelesítés hitelesítő adatait, a kezelő társított. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HttpClientHandler.Dispose(Boolean)
  fullName: System.Net.Http.HttpClientHandler.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Net.Http.HttpClientHandler&quot;> </xref> és a felügyelt erőforrások opcionálisan értékesít."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()` metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter `true`, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja, amelyhez a <xref:System.Net.Http.HttpClientHandler>hivatkozik.</xref:System.Net.Http.HttpClientHandler> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> kiadásokban csak a nem felügyelt erőforrások."
  overload: System.Net.Http.HttpClientHandler.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  id: MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
  fullName: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja, hogy a kezelő a következő átirányítások maximális számát."
  remarks: "A MaxAutomaticRedirections tulajdonság átirányítások követése, ha a kérelmek maximális számát határozza meg a <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>tulajdonság `true`.</xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>"
  syntax:
    content: public int MaxAutomaticRedirections { get; set; }
    return:
      type: System.Int32
      description: "A kezelő a következő átirányítási válaszok maximális száma. Az alapértelmezett érték 50."
  overload: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  id: MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
  fullName: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a kezelő által használt kérések maximális tartalom puffer mérete."
  remarks: "Egy alkalmazás korlátozni a kérelem puffer mérete kisebb értéket állíthat be a MaxRequestContentBufferSize tulajdonság. Ha a kérelem tartalmának mérete nagyobb, mint a MaxRequestContentBufferSize tulajdonság, akkor a rendszer kivételt hoz létre."
  syntax:
    content: public long MaxRequestContentBufferSize { get; set; }
    return:
      type: System.Int64
      description: "A kérelem maximális tartalom puffer mérete bájtban. Az alapértelmezett érték 2 gigabájt."
  overload: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
  fullName: System.Net.Http.HttpClientHandler.PreAuthenticate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy küld-e a kezelő egy engedélyezési fejléc mellékel a kérelemhez."
  remarks: "Miután egy ügyfél kérelmet egy adott <xref:System.Uri>sikeresen hitelesített, ha a PreAuthenticate tulajdonság `true` és hitelesítő adatok vannak megadva, <xref:System.Net.Http.HttpClientHandler>megadott hitelesítő adatok listája alapján megegyezik a <xref:System.Net.Http.HttpClientHandler.Credentials%2A>tulajdonság.</xref:System.Net.Http.HttpClientHandler.Credentials%2A> </xref:System.Net.Http.HttpClientHandler> </xref:System.Uri> Bármely hitelesítési fejlécéhez zajlik minden egyes kérelemmel <xref:System.Uri>, amely megfelel az adott <xref:System.Uri>legfeljebb az utolsó törtvonallal.</xref:System.Uri> </xref:System.Uri>       Ha az ügyfél egy adott kérelem <xref:System.Uri>van hitelesítése sikertelen volt. a kérelem használ szabványon alapuló hitelesítési eljárások.</xref:System.Uri>       Az első kérésre kivételével a PreAuthenticate tulajdonság azt jelzi, hogy a későbbi hitelesítési adatokat küldhet egy <xref:System.Uri>, amely megfelel az adott <xref:System.Uri>legfeljebb nélkül váró támadható meg a kiszolgáló által a legutóbbi törtvonallal.</xref:System.Uri> </xref:System.Uri>"
  syntax:
    content: public bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kezelő egy HTTP-engedélyezési fejléc kérések küldése a hitelesítés után az megtörtént; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.PreAuthenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.Proxy
  id: Proxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
  fullName: System.Net.Http.HttpClientHandler.Proxy
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a kezelő által használt proxy adatait."
  remarks: "The Proxy property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources. To specify that no proxy should be used, set the Proxy property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.  \n  \n The local computer or application config file may specify that a default proxy be used. If the Proxy property is specified, then the proxy settings from the Proxy property override the local computer or application config file and the handler will use the proxy settings specified. If no proxy is specified in a config file and the Proxy property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer. If there are no proxy settings in Internet Explorer, the request is sent directly to the server.  \n  \n The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer. For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of \"nt*\" from Internet Explorer as a regular expression of \"nt.\\*\". So a URL of \" http://nt.com\" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.  \n  \n The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass. The class considers a destination to be local if any of the following conditions are met:  \n  \n1.  The destination contains a flat name (no dots in the URL).  \n  \n2.  The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.  \n  \n3.  The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>)."
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "A proxy adatait, a kezelő által használt. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Létrehoz egy új <xref href=&quot;System.Net.Http.HttpResponseMessage&quot;> </xref> található információk alapján a <xref href=&quot;System.Net.Http.HttpRequestMessage&quot;> </xref> , nem blokkolja a műveletet."
  remarks: "Ez a művelet esetében nem blokkolja. Egy példányát adja vissza <xref:System.Threading.Tasks.Task%601>képviseli az aszinkron művelet.</xref:System.Threading.Tasks.Task%601> A művelet befejeződésekor <xref:System.Threading.Tasks.Task%601.Result%2A>tartalmazza a válaszüzenetben.</xref:System.Threading.Tasks.Task%601.Result%2A>"
  syntax:
    content: protected override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "A HTTP-kérelem üzenet."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási token megszakítja a műveletet."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClientHandler.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  id: SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy érték, amely jelzi, hogy a kezelő támogatja-e a tartalom kibontása automatikus válasz lekérése."
  syntax:
    content: public virtual bool SupportsAutomaticDecompression { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a, ha a kezelő támogatja az automatikus válasz tartalom kibontása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  id: SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
  fullName: System.Net.Http.HttpClientHandler.SupportsProxy
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy érték, amely jelzi, hogy a kezelő támogatja-e a proxy beállításainak lekérése."
  syntax:
    content: public virtual bool SupportsProxy { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a, ha a kezelő támogatja a proxybeállítások; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.SupportsProxy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  id: SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
  fullName: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy érték, amely jelzi, hogy a kezelő támogatja-e a konfigurációs beállításokat lekérdezi a <> </> *> és <> </> *> tulajdonságait."
  syntax:
    content: public virtual bool SupportsRedirectConfiguration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a, ha a kezelő támogatja a konfigurációs beállításokat a <> </> *> és <> </> *> tulajdonságok; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.UseCookies
  id: UseCookies
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
  fullName: System.Net.Http.HttpClientHandler.UseCookies
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy használja-e a kezelő a <xref:System.Net.Http.HttpClientHandler.CookieContainer*>tulajdonság tárolásához a kiszolgálói cookie-kat, és ezek a cookie-kérés küldésekor.</xref:System.Net.Http.HttpClientHandler.CookieContainer*>"
  syntax:
    content: public bool UseCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a, ha a kezelő támogatja használja a <xref:System.Net.Http.HttpClientHandler.CookieContainer*>tulajdonság tárolásához a kiszolgálói cookie-kat, és ezek a cookie-kérés; küldésekor egyébként <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Net.Http.HttpClientHandler.CookieContainer*> Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.UseCookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
  fullName: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja egy érték, amely meghatározza, hogy alapértelmezett hitelesítő adatok küldése az által a kezelő számára."
  remarks: "Ez a tulajdonság beállítása `true` amikor kérések száma szerint a <xref:System.Net.Http.HttpClientHandler>objektumot, ha a kiszolgáló által kért hitelesítése történik a bejelentkezett felhasználó hitelesítő adataival.</xref:System.Net.Http.HttpClientHandler> Ügyfélalkalmazások ez pedig a legtöbb esetben a kívánt viselkedés. A középső rétegbeli alkalmazások, például ASP.NET-alkalmazások helyett ezt a tulajdonságot, akkor általában állítania a <xref:System.Net.Http.HttpClientHandler.Credentials%2A>tulajdonság az ügyfél, akinek a nevében a kérelem hitelesítő adatokhoz.</xref:System.Net.Http.HttpClientHandler.Credentials%2A>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az alapértelmezett hitelesítő adatok használata esetén; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.UseDefaultCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClientHandler.UseProxy
  id: UseProxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
  fullName: System.Net.Http.HttpClientHandler.UseProxy
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy használja-e a kezelő egy proxy a kéréseket."
  syntax:
    content: public bool UseProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kezelő kell használnak proxyt kérelmek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.HttpClientHandler.UseProxy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpMessageHandler
  isExternal: false
  name: System.Net.Http.HttpMessageHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Http.HttpClientHandler.#ctor
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: HttpClientHandler()
  nameWithType: HttpClientHandler.HttpClientHandler()
  fullName: System.Net.Http.HttpClientHandler.HttpClientHandler()
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
  fullName: System.Net.Http.HttpClientHandler.AllowAutoRedirect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.AutomaticDecompression
- uid: System.Net.DecompressionMethods
  parent: System.Net
  isExternal: true
  name: DecompressionMethods
  nameWithType: DecompressionMethods
  fullName: System.Net.DecompressionMethods
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
  fullName: System.Net.Http.HttpClientHandler.ClientCertificateOptions
- uid: System.Net.Http.ClientCertificateOption
  parent: System.Net.Http
  isExternal: false
  name: ClientCertificateOption
  nameWithType: ClientCertificateOption
  fullName: System.Net.Http.ClientCertificateOption
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
  fullName: System.Net.Http.HttpClientHandler.CookieContainer
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.Http.HttpClientHandler.Credentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
  fullName: System.Net.Http.HttpClientHandler.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpClientHandler.Dispose(Boolean)
  fullName: System.Net.Http.HttpClientHandler.Dispose(Boolean)
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
  fullName: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
  fullName: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
  fullName: System.Net.Http.HttpClientHandler.PreAuthenticate
- uid: System.Net.Http.HttpClientHandler.Proxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
  fullName: System.Net.Http.HttpClientHandler.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.HttpClientHandler.SendAsync(HttpRequestMessage,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.Http.HttpResponseMessage>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
  fullName: System.Net.Http.HttpClientHandler.SupportsProxy
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
  fullName: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
- uid: System.Net.Http.HttpClientHandler.UseCookies
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
  fullName: System.Net.Http.HttpClientHandler.UseCookies
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
  fullName: System.Net.Http.HttpClientHandler.UseDefaultCredentials
- uid: System.Net.Http.HttpClientHandler.UseProxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
  fullName: System.Net.Http.HttpClientHandler.UseProxy
- uid: System.Net.Http.HttpClientHandler.#ctor*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: HttpClientHandler
  nameWithType: HttpClientHandler.HttpClientHandler
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
- uid: System.Net.Http.HttpClientHandler.CookieContainer*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
- uid: System.Net.Http.HttpClientHandler.Credentials*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
- uid: System.Net.Http.HttpClientHandler.Dispose*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Dispose
  nameWithType: HttpClientHandler.Dispose
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
- uid: System.Net.Http.HttpClientHandler.Proxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
- uid: System.Net.Http.HttpClientHandler.SendAsync*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SendAsync
  nameWithType: HttpClientHandler.SendAsync
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.SupportsProxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
- uid: System.Net.Http.HttpClientHandler.UseCookies*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
- uid: System.Net.Http.HttpClientHandler.UseProxy*
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
