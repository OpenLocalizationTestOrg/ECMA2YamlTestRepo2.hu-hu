### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleDataReader
  id: OracleDataReader
  children:
  - System.Data.OracleClient.OracleDataReader.Close
  - System.Data.OracleClient.OracleDataReader.Depth
  - System.Data.OracleClient.OracleDataReader.FieldCount
  - System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetEnumerator
  - System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.GetSchemaTable
  - System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.HasRows
  - System.Data.OracleClient.OracleDataReader.IsClosed
  - System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  - System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  - System.Data.OracleClient.OracleDataReader.Item(System.String)
  - System.Data.OracleClient.OracleDataReader.NextResult
  - System.Data.OracleClient.OracleDataReader.Read
  - System.Data.OracleClient.OracleDataReader.RecordsAffected
  langs:
  - csharp
  name: OracleDataReader
  nameWithType: OracleDataReader
  fullName: System.Data.OracleClient.OracleDataReader
  type: Class
  summary: "Biztosítja az adatok sorok csak előrefelé bejárható adatfolyam olvasásakor adatforrás. Ez az osztály nem örökölhető."
  remarks: "Az OracleDataReader létrehozásához meg kell hívnia a <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>metódusában a <xref:System.Data.OracleClient.OracleCommand>objektum, egy konstruktor közvetlen használata helyett.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Lehet, hogy a végzett módosítások eredményhalmazt egy másik folyamat vagy szál adatok olvasása során az OracleDataReader a felhasználó számára látható.       <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>és <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>hívása csak tulajdonságok vannak után az OracleDataReader bezárult.</xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A></xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> Néhány esetben meg kell hívnia <xref:System.Data.OracleClient.OracleDataReader.Close%2A> <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>.</xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> hívása előtt</xref:System.Data.OracleClient.OracleDataReader.Close%2A>       Egyszerre több OracleDataReader lehet megnyitva.       A következő két Visual Basic példák bemutatják, hogyan lehet egy Oracle lekéréséhez használja az OracleDataReader `REF CURSOR`. Ezekben a példákban a táblázatot, amely határozzák meg az Oracle Scott/Tiger sémát, és a következő PL/SQL-csomagot és csomagtörzse van szükség. Ezek a példák használata a kiszolgálón kell létrehozni.       A következő Oracle-csomag létrehozása az Oracle-kiszolgálón.      ```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR IN OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```Hozzon létre a következő Oracle csomagtörzse az Oracle-kiszolgálóhoz.      ```      CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO <> 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;   /   ```A Visual Basic példa végrehajtja a PL/SQL tárolt eljárás, amely visszaadja a `REF CURSOR` paramétert, és beolvassa az OracleDataReader, értékét.      ```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = &quot;CURSPKG.OPEN_ONE_CURSOR&quot;      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter(&quot;N_EMPNO&quot;, OracleType.Number)).Value = 7369      command.Parameters.Add(New OracleParameter(&quot;IO_CURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader()      While (reader.Read())         &quot; Do something with the values.      End While      reader.Close()      connection.Close()   End Sub   ```A Visual Basic példa két visszaadó PL/SQL tárolt eljárás végrehajtása `REF CURSOR` paraméterek, és olvasási egy OracleDataReader a értékét.      ```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim dataSet As New DataSet()      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = &quot;CURSPKG.OPEN_TWO_CURSORS&quot;      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter(&quot;EMPCURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output      command.Parameters.Add(New OracleParameter(&quot;DEPTCURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader(CommandBehavior.CloseConnection)      While (reader.Read())         &quot; Do something with the values.      End While      reader.NextResult()      While (reader.Read())           &quot; Do something with the values.      End While      reader.Close()      connection.Close()    End Sub   ```Ebben a példában a C# az Oracle-táblát hoz létre, és betölti az adatokkal. Ebben a példában a következő példának, amely bemutatja az OracleDataReader OracleType struktúrák használatával az adatok eléréséhez használt futtatása előtt kell futtatni.      ```c#   public void Setup(string connectionString)   {      OracleConnection connection = new OracleConnection(connectionString);      try      {         connection.Open();         OracleCommand command = connection.CreateCommand();         command.CommandText =&quot;CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))&quot;;         command.ExecuteNonQuery();         command.CommandText =&quot;INSERT INTO OracleTypesTable VALUES (&quot;test&quot;, 2, to_date(&quot;2000-01-11 12:54:01&quot;,&quot;yyyy-mm-dd hh24:mi:ss&quot;), &quot;0001020304&quot;)&quot;;         command.ExecuteNonQuery();         command.CommandText=&quot;SELECT * FROM OracleTypesTable&quot;;      }      catch(Exception)      {      }      finally      {         connection.Close();      }   }   ```Ebben a példában a C# az OracleDataReader hozzáférni adataihoz, és használja több <xref:System.Data.OracleClient.OracleType>struktúrákat, hogy az adatok megjelenítéséhez.</xref:System.Data.OracleClient.OracleType>      ```c#   public void ReadOracleTypesExample(string connectionString)   {      OracleConnection connection = new OracleConnection(connectionString);      connection.Open();      OracleCommand command = connection.CreateCommand();      try      {         command.CommandText = &quot;SELECT * FROM OracleTypesTable&quot;;         OracleDataReader reader = command.ExecuteReader();         reader.Read();         //Using the Oracle specific getters for each type is faster than         //using GetOracleValue.         //First column, MyVarchar2, is a VARCHAR2 data type in Oracle Server         //and maps to OracleString.         OracleString oraclestring1 = reader.GetOracleString(0);         Console.WriteLine(&quot;OracleString &quot; + oraclestring1.ToString());            //Second column, MyNumber, is a NUMBER data type in Oracle Server         //and maps to OracleNumber.         OracleNumber oraclenumber1 = reader.GetOracleNumber(1);         Console.WriteLine(&quot;OracleNumber &quot; + oraclenumber1.ToString());            //Third column, MyDate, is a DATA data type in Oracle Server         //and maps to OracleDateTime.         OracleDateTime oracledatetime1 = reader.GetOracleDateTime(2);         Console.WriteLine(&quot;OracleDateTime &quot; + oracledatetime1.ToString());            //Fourth column, MyRaw, is a RAW data type in Oracle Server and         //maps to OracleBinary.         OracleBinary oraclebinary1 = reader.GetOracleBinary(3);            //Calling value on a null OracleBinary throws         //OracleNullValueException; therefore, check for a null value.         if (oraclebinary1.IsNull==false)         {            foreach(byte b in oraclebinary1.Value)            {               Console.WriteLine(&quot;byte &quot; + b.ToString());            }         }         reader.Close();      }      catch(Exception e)      {         Console.WriteLine(e.ToString());      }      finally      {         connection.Close();      }   }   ```"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an OracleDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OracleDataReader, then the <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleDataReader#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_9_1.vb)]\n [!code-cs[Classic WebData OracleDataReader#1](~/add/codesnippet/csharp/t-system.data.oracleclie_9_1.cs)]"
  syntax:
    content: 'public sealed class OracleDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Close
  id: Close
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OracleDataReader.Close()
  fullName: System.Data.OracleClient.OracleDataReader.Close()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Bezárja a <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> objektum."
  remarks: "Egynél több <xref:System.Data.OracleClient.OracleDataReader>egy adott időpontban lehet megnyitva.</xref:System.Data.OracleClient.OracleDataReader>      > [!CAUTION] > Ne hívja meg `Close` vagy `Dispose` használjanak, egy `DataReader`, vagy bármely más felügyelt objektumot a `Finalize` az osztály. A véglegesítőt, a kiadás csak nem felügyelt erőforrást, amely a osztály birtokolja közvetlenül. Ha az osztály nem rendelkezik a nem felügyelt erőforrás nem tartalmaznak egy `Finalize` az osztálydefiníció metódust. További információkért lásd: [szemétgyűjtés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Depth
  id: Depth
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OracleDataReader.Depth
  fullName: System.Data.OracleClient.OracleDataReader.Depth
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "A mélységű beágyazást hozhat létre az aktuális sor jelző érték beolvasása."
  remarks: "A legkülső táblának a mélység értéke nulla."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "A mélységű beágyazást hozhat létre az aktuális sor."
  overload: System.Data.OracleClient.OracleDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.FieldCount
  id: FieldCount
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
  fullName: System.Data.OracleClient.OracleDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi az oszlopok számát az aktuális sor."
  remarks: "Rejtett mezők tartalmazza. Használjon <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>Rejtett mezők kizárásához.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>       Egy lekérdezést, amely nem ad vissza a sorok végrehajtása, után FieldCount 0 értéket adja vissza."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Ha nem található érvényes Rekordkészletben lévő, 0; Ellenkező esetben az aktuális rekord oszlopok számát. Az alapértelmezett érték a -1."
  overload: System.Data.OracleClient.OracleDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nincs adatforrás jelenleg nincs kapcsolat."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OracleDataReader.GetBoolean(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékét a logikai értékként."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "Olyan logikai érték, amely az oszlop értéke."
  overload: System.Data.OracleClient.OracleDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OracleDataReader.GetByte(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékét a bájtban."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Byte
      description: "A bájtban megadott oszlop értéke."
  overload: System.Data.OracleClient.OracleDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Beolvassa bájtos adatfolyam a megadott oszlop eltolásánál kezdődő, a puffer tömbként, az adott puffer eltolástól kezdve."
  remarks: "GetBytes mező a rendelkezésre álló bájtok számát adja vissza. A legtöbb esetben ez a mező pontos hossza. Előfordulhat azonban, a visszaadott száma kisebb, mint a mező értéke igaz hossza Ha `GetBytes` bájt beszerezni a mező már felhasználták. Ennek az lehet az eset például, ha a <xref:System.Data.OracleClient.OracleDataReader>nagy adatszerkezet éppen olvas be egy pufferbe.</xref:System.Data.OracleClient.OracleDataReader> További információkért lásd: a `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> beállítása       Null értékű puffer át, ha GetBytes a mező hossza (bájt) adja vissza."
  syntax:
    content: public override long GetBytes (int i, long fieldOffset, byte[] buffer2, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: fieldOffset
      type: System.Int64
      description: "Az index a mezőt, ha az olvasási művelet megkezdéséhez belül."
    - id: buffer2
      type: System.Byte[]
      description: "A puffer, amelybe bájtos adatfolyam olvasására."
    - id: bufferoffset
      type: System.Int32
      description: "Az index ahol `buffer` megkezdése az írási művelet."
    - id: length
      type: System.Int32
      description: "Olvassa el a bájtok száma."
    return:
      type: System.Int64
      description: "A tényleges, beolvasott bájtok száma."
  overload: System.Data.OracleClient.OracleDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OracleDataReader.GetChar(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értéke egy karakter."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Char
      description: "A megadott oszlop karakterként értéke."
  overload: System.Data.OracleClient.OracleDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Beolvassa adatfolyam karaktereket a megadott oszlop eltolásánál kezdődő, a puffer tömbként, az adott puffer eltolástól kezdve."
  remarks: "GetChars mező a rendelkezésre álló karakterek számát adja vissza. A legtöbb esetben ez a mező pontos hossza. Előfordulhat azonban, a visszaadott száma kisebb, mint a mező értéke igaz hossza Ha `GetChars` karakterek beszerezni a mező már felhasználták. Ennek az lehet az eset például, ha a <xref:System.Data.OracleClient.OracleDataReader>nagy adatszerkezet éppen olvas be egy pufferbe.</xref:System.Data.OracleClient.OracleDataReader> További információkért lásd: a `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> beállítása       Ha a puffer null értékű. GetChars a mező hossza karaktert adja vissza."
  syntax:
    content: public override long GetChars (int i, long fieldOffset, char[] buffer2, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: fieldOffset
      type: System.Int64
      description: "Az olvasási művelet esetén a kezdéshez a soron belüli index."
    - id: buffer2
      type: System.Char[]
      description: "A puffer, amelybe az adatok másolása."
    - id: bufferoffset
      type: System.Int32
      description: "Az index ahol `buffer` megkezdése az írási művelet."
    - id: length
      type: System.Int32
      description: "Olvassa el a karakterek száma."
    return:
      type: System.Int64
      description: "Olvassa el a tényleges karakterszámot."
  overload: System.Data.OracleClient.OracleDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OracleDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a forrás adattípus neve."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A forrás adattípus neve."
  overload: System.Data.OracleClient.OracleDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OracleDataReader.GetDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref uid=&quot;langword_csharp_DateTime&quot; name=&quot;DateTime&quot; href=&quot;&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.DateTime
      description: "A megadott oszlop, mint az érték egy <xref uid=&quot;langword_csharp_DateTime&quot; name=&quot;DateTime&quot; href=&quot;&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OracleDataReader.GetDecimal(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Decimal
      description: "A megadott oszlop, mint az érték egy <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OracleDataReader.GetDouble(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értéke, egy kétszeres pontosságú lebegőpontos számot."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Double
      description: "A megadott oszlop, mint egy kétszeres pontosságú lebegőpontos szám értékének."
  overload: System.Data.OracleClient.OracleDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OracleDataReader.GetEnumerator()
  fullName: System.Data.OracleClient.OracleDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Értéket ad vissza egy <xref:System.Collections.IEnumerator>, amelyek segítségével a sorokat az Adatolvasó iterációt.</xref:System.Collections.IEnumerator>"
  remarks: "Bár ez a metódus explicit módon számbevevőre beolvasni, a foreach-t támogató nyelvű összeállításához, egyszerűbb közvetlenül ahhoz, hogy a sorokat az Adatolvasó iterációt az ismétlési szerkezet használni."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>, amelyek segítségével a sorokat az Adatolvasó iterációt.</xref:System.Collections.IEnumerator>"
  overload: System.Data.OracleClient.OracleDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OracleDataReader.GetFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Type
      description: "A <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  overload: System.Data.OracleClient.OracleDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OracleDataReader.GetFloat(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékének egy egyszeres pontosságú lebegőpontos számot."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Single
      description: "Egy egyszeres pontosságú lebegőpontos számot a megadott oszlop értéke."
  overload: System.Data.OracleClient.OracleDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OracleDataReader.GetGuid(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értéke, egy globálisan egyedi azonosítóját (GUID)."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Guid
      description: "A megadott GUID-oszlop értéke."
  overload: System.Data.OracleClient.OracleDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OracleDataReader.GetInt16(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékének aláírt 16 bites egész számként."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int16
      description: "A megadott oszlop, mint a 16 bites előjeles egész érték."
  overload: System.Data.OracleClient.OracleDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OracleDataReader.GetInt32(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékének aláírt 32 bites egész számként."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int32
      description: "A megadott oszlop, mint egy 32 bites előjeles egész érték."
  overload: System.Data.OracleClient.OracleDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OracleDataReader.GetInt64(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékének egy 64 bites előjeles egész számként."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int64
      description: "A megadott oszlop, mint egy 64 bites előjeles egész érték."
  overload: System.Data.OracleClient.OracleDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OracleDataReader.GetName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop neve."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "Egy karakterlánc, amely a megadott oszlop neve."
  overload: System.Data.OracleClient.OracleDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  id: GetOracleBFile(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleBFile(Int32)
  nameWithType: OracleDataReader.GetOracleBFile(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBFile(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleBFile GetOracleBFile (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "A megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleBFile*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  id: GetOracleBinary(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleBinary(Int32)
  nameWithType: OracleDataReader.GetOracleBinary(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBinary(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleBinary GetOracleBinary (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "A megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleBinary*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  id: GetOracleDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleDateTime(Int32)
  nameWithType: OracleDataReader.GetOracleDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleDateTime&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleDateTime GetOracleDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OracleClient.OracleDateTime
      description: "A megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleDateTime&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  id: GetOracleLob(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleLob(Int32)
  nameWithType: OracleDataReader.GetOracleLob(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleLob(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleLob GetOracleLob (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OracleClient.OracleLob
      description: "A megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleLob*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  id: GetOracleMonthSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleMonthSpan(Int32)
  nameWithType: OracleDataReader.GetOracleMonthSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleMonthSpan&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OracleClient.OracleMonthSpan
      description: "A megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleMonthSpan&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  id: GetOracleNumber(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleNumber(Int32)
  nameWithType: OracleDataReader.GetOracleNumber(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleNumber(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleNumber&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleNumber GetOracleNumber (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OracleClient.OracleNumber
      description: "A megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleNumber&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleNumber*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  id: GetOracleString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleString(Int32)
  nameWithType: OracleDataReader.GetOracleString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleString(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleString&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleString GetOracleString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OracleClient.OracleString
      description: "A megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleString&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  id: GetOracleTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleTimeSpan(Int32)
  nameWithType: OracleDataReader.GetOracleTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleTimeSpan&quot;> </xref> objektum."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OracleClient.OracleTimeSpan
      description: "A megadott oszlop, mint az érték egy <xref href=&quot;System.Data.OracleClient.OracleTimeSpan&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  id: GetOracleValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleValue(Int32)
  nameWithType: OracleDataReader.GetOracleValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Az oszlop értékének beolvasása a megadott sorszám az Oracle-formátumában."
  remarks: "Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull>"
  syntax:
    content: public object GetOracleValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Object
      description: "A Oracle érték visszaadása."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  id: GetOracleValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleValues(Object[])
  nameWithType: OracleDataReader.GetOracleValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Az attribútumoszlopoknak lekérdezi az aktuális sor Oracle formátumban."
  remarks: "A legtöbb alkalmazás esetén a GetOracleValues módszert biztosít egy hatékony azt jelenti, hogy az összes oszlop beolvasása, hanem minden oszlop külön-külön beolvasása.       Megadhat egy <xref:System.Object>tömb, amely tartalmazza az eredményül kapott sor szereplő oszlopok száma nem lépi.</xref:System.Object> Csak a adatok mennyisége az <xref:System.Object>tömb, amely tárolja a tömb másolandó.</xref:System.Object> Is átadhatja az <xref:System.Object>tömb, amelynek hossza nagyobb, mint az eredményül kapott sor szereplő oszlopok száma.</xref:System.Object>       Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull>"
  syntax:
    content: public int GetOracleValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Típusú tömb <xref:System.Object>amelybe az attribútumoszlopoknak másolásához.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A több példányban <xref:System.Object>a tömbben.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetOracleValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OracleDataReader.GetOrdinal(String)
  fullName: System.Data.OracleClient.OracleDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a oszlop sorszáma, az oszlop neve a."
  remarks: "GetOrdinal először a kis-és nagybetűket keresést hajt végre. Ha nem sikerül, egy második nem betűérzékeny keresési történik. A metódus jelez egy `IndexOutOfRange` kivétel, ha a nulláról indulva számított oszlop sorszáma nem található.       GetOrdinal kana-szélesség-és nagybetűk megkülönböztetése nélkül.       Mivel a sorszám-alapú keresését hatékonyabb, mint elnevezett keresések, nem hatékony GetOrdinal hívni a hurkon belül. Ehelyett GetOrdinal egyszer hívja, és hozzárendelheti a eredményeket egy egész változót a hurkon belül használható."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub ReadOracleData(ByVal connectionString As String)  \n  \n    Dim queryString As String = \"SELECT OrderID, CustomerID FROM Orders\"  \n    Dim connection As New OracleConnection(connectionString)  \n    Dim command As New OracleCommand(queryString, connectionString)  \n  \n    connection.Open()  \n  \n    Dim reader As OracleDataReader = command.ExecuteReader()  \n  \n    Dim custIdCol As Integer = reader.GetOrdinal(\"CustomerID\")  \n  \n    Do While reader.Read()  \n        Console.WriteLine(\"CustomerID = {0}\", reader.GetString(custIdCol))  \n    Loop  \n  \n    reader.Close()  \n    connection.Close()  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic void ReadOracleData(string connectionString)  \n{  \n    string queryString = \"SELECT OrderID, CustomerID FROM Orders\";  \n    OracleConnection connection = new OracleConnection(connectionString);  \n    OracleCommand command = new OracleCommand(queryString,connection);  \n  \n    connection.Open();  \n    OracleDataReader reader = command.ExecuteReader();  \n  \n    int custIdCol = reader.GetOrdinal(\"CustomerID\");  \n  \n    while (reader.Read())  \n        Console.WriteLine(\"CustomerID = {0}\", reader.GetString(custIdCol));  \n  \n    reader.Close();  \n    connection.Close();  \n}  \n```"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Int32
      description: "A nulla alapú oszlopból."
  overload: System.Data.OracleClient.OracleDataReader.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi egy <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> az alapul szolgáló szolgáltató adott Kapcsolatmező-típus, amely egy ábrázolása."
  syntax:
    content: public override Type GetProviderSpecificFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "An <xref:System.Int32>.</xref:System.Int32>"
    return:
      type: System.Type
      description: "Lekérdezi egy <xref:System.Object>az alapul szolgáló szolgáltató adott Kapcsolatmező-típus, amely egy ábrázolása.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi egy <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> az alapul szolgáló szolgáltató adott Kapcsolatmező-típus, amely egy ábrázolása."
  syntax:
    content: public override object GetProviderSpecificValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "An <xref:System.Int32>.</xref:System.Int32>"
    return:
      type: System.Object
      description: "Lekérdezi egy <xref:System.Object>az alapul szolgáló szolgáltató adott Kapcsolatmező-típus, amely egy ábrázolása.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: OracleDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi az alapul szolgáló szolgáltató adott értékekre ábrázolása-objektumok tömbjét."
  remarks: "A legtöbb alkalmazás esetén a GetProviderSpecificValues módszert biztosít egy hatékony azt jelenti, hogy az összes oszlop beolvasása, hanem minden oszlop külön-külön beolvasása.       Megadhat egy <xref:System.Object>tömb, amely tartalmazza az eredményül kapott sor szereplő oszlopok száma nem lépi.</xref:System.Object> Csak a adatok mennyisége az <xref:System.Object>tömb, amely tárolja a tömb másolandó.</xref:System.Object> Is átadhatja az <xref:System.Object>tömb, amelynek hossza nagyobb, mint az eredményül kapott sor szereplő oszlopok száma.</xref:System.Object>       Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull>"
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "<xref:System.Object>.</xref:System.Object> Tömbje"
    return:
      type: System.Int32
      description: "A több példányban <xref:System.Object>a tömbben.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OracleDataReader.GetSchemaTable()
  fullName: System.Data.OracleClient.OracleDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az OracleDataReader oszlop metaadatai."
  remarks: "A GetSchemaTable metódus az egyes oszlopok metaadatainak sorrendje a következő adja vissza: |} DataReader oszlop |} Leírás |}   |-----------------------|-----------------|   | Oszlopnév |} Az oszlop; neve Ez nem lehet egyedi. Ha az oszlop neve nem lehet megállapítani, null értéket ad vissza. Ez a név mindig tükrözi az aktuális nézet vagy parancs szöveges oszlop legutóbbi elnevezési. |}   | ColumnOrdinal |} Az oszlop nulla alapú sorszámát. Ez az oszlop nem tartalmazhat null értékű. |}   | ColumnSize |} A lehetséges legfeljebb egy értéket a oszlopban. Olyan oszlopok esetében, a rögzített hosszúságú adattípus, ez az adattípus mérete. |}   | NumericPrecision |} Ha <xref:System.Data.OracleClient.OracleParameter.DbType%2A>egy numerikus adattípusú, ez az oszlop maximális pontosság.</xref:System.Data.OracleClient.OracleParameter.DbType%2A> A pontosság attól függ, hogy az oszlop definíciója. `Float`és `Double` az Oracle adattípusok a következők bináris pontosság. |}   | NumericScale |} Ha <xref:System.Data.OracleClient.OracleParameter.DbType%2A>egy numerikus adattípusú, a tizedesvesszőtől jobbra számjegyek száma.</xref:System.Data.OracleClient.OracleParameter.DbType%2A> `Float`és `Double` az Oracle adattípusok a következők bináris méretezési. |}   | DataType |} A közös nyelvi futtatókörnyezet típusú <xref:System.Data.OracleClient.OracleParameter.DbType%2A>leképezve. |}   | IsLong |} `true` Ha az oszlop bináris hosszú objektum (BLOB), amely tartalmazza a nagyon hosszú adatokat tartalmaz. |}   | AllowDBNull |} `true` Ha a fogyasztó állíthatja be az oszlop null értékűre; ellenkező esetben `false`.</xref:System.Data.OracleClient.OracleParameter.DbType%2A> Egy oszlop tartalmazhat null értékeket, akkor is, ha nem állítható be null értékűre. |}   | IsUnique |} `true`: A visszaadott táblázat az alaptáblában szereplő két sorok <xref:System.Data.Common.SchemaTableColumn.BaseTableName>-ugyanaz az érték lehet ebben az oszlopban.</xref:System.Data.Common.SchemaTableColumn.BaseTableName> **IsUnique** garantáltan `true` Ha az oszlop képezi a kulcs önmagában, vagy ha nincs a típus csak ebben az oszlopban alkalmazó egyedi korlátozás. `false`: Az oszlop tartalmazhat ismétlődő értékeket alaptábla. Ez az oszlop alapértelmezett értéke false. |}   | IsKey |} `true`: Az oszlop a sorhalmazban oszlopkészleteket egyike, amelyek együttesen, egyedi módon azonosítja az sor. Az oszlopok csoportja **IsKey** igaz értékre állítva egyedi módon kell azonosítania a sorhalmaz egyik sorában. Esetében nem követelmény, hogy az oszlopok csoportja-e a minimális számú oszlopot. Az oszlopok csoportja az alaptábla elsődleges kulcs, egyedi megkötésen vagy egyedi index eredményezhet. `false`: Az oszlop nem szükséges a sor egyedi azonosításához. |}   | BaseTableName |} A tábla vagy nézet a tárolóban, amely tartalmazza az oszlop neve. Egy null értéket, ha az alaptábla neve nem határozható meg. Az oszlop alapértelmezett értéke null. |}   | BaseColumnName |} Az adattár oszlop neve. Előfordulhat, hogy ez lehet ugyanaz, mint a visszaadott oszlopnevet, a **ColumnName** oszlop Ha alias lett megadva. Egy null értéket, ha az alap oszlop neve nem határozható meg, vagy származtatott, de nem azonos a sorkészlet-oszlophoz esetén egy oszlopot az adatok tárolásához. Ez az oszlop alapértelmezett értéke null értékű. |}   | BaseSchemaName |} A séma a tárolóban, amely tartalmazza az oszlop neve. Egy null értéket, ha az alap séma neve nem határozható meg. Ez az oszlop alapértelmezett értéke null értékű. |}       Egy sor minden oszlopának az eredmények set visszaküldött.      > [!NOTE] > Hogy metaadatok a megfelelő adatokat ad vissza, meg kell hívnia <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>rendelkező a `behavior` paraméter `KeyInfo`.</xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> Ellenkező esetben a séma tábla oszlopai némelyike térhetnek vissza alapértelmezett, null, vagy helytelen az adatok."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai."
  overload: System.Data.OracleClient.OracleDataReader.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OracleDataReader.GetString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékének karakterláncként."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A megadott oszlop karakterláncként értéke."
  overload: System.Data.OracleClient.OracleDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: OracleDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref uid=&quot;langword_csharp_System.TimeSpan&quot; name=&quot;System.TimeSpan&quot; href=&quot;&quot;> </xref>."
  remarks: "Hívás <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>a metódus hívása előtt null értékeket kereső.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public TimeSpan GetTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.TimeSpan
      description: "A megadott oszlop, mint a <xref:System.TimeSpan>.</xref:System.TimeSpan> értéke"
  overload: System.Data.OracleClient.OracleDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OracleDataReader.GetValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Az oszlop értékének beolvasása a megadott sorszám natív formátumában."
  remarks: "Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull> Ez a metódus által visszaadott érték okozhatja az Oracle szám adattípus átalakítása .NET decimális típusú. Ha az érték túl nagy a rendszer ne tárolja őket a .NET decimális, ez a módszer jelez egy <xref:System.Data.OracleClient.OracleException>, amely egy túlcsordulásos kivétel.</xref:System.Data.OracleClient.OracleException>"
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Object
      description: "A visszatérési érték."
  overload: System.Data.OracleClient.OracleDataReader.GetValue*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Az érték túl nagy a .NET decimális tárolja."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OracleDataReader.GetValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Feltölti az oszlop értékekkel, az aktuális sor egy objektumokból álló tömb."
  remarks: "A legtöbb alkalmazás esetén a GetValues módszert biztosít egy hatékony azt jelenti, hogy az összes oszlop beolvasása, hanem minden oszlop külön-külön beolvasása.       Megadhat egy <xref:System.Object>tömb, amely tartalmazza az eredményül kapott sor szereplő oszlopok száma nem lépi.</xref:System.Object> Csak a adatok mennyisége az <xref:System.Object>tömb, amely tárolja a tömb másolandó.</xref:System.Object> Is átadhatja az <xref:System.Object>tömb, amelynek hossza nagyobb, mint az eredményül kapott sor szereplő oszlopok száma.</xref:System.Object>       Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull> A visszaadott érték a <xref:System.Object>tömb okozhatja az Oracle szám adattípus átalakítása .NET decimális típusú.</xref:System.Object> Ha az érték túl nagy a rendszer ne tárolja őket a .NET decimális, ez a módszer jelez egy <xref:System.Data.OracleClient.OracleException>, amely egy túlcsordulásos kivétel.</xref:System.Data.OracleClient.OracleException>"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Típusú tömb <xref:System.Object>amelybe az attribútumoszlopoknak másolásához.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A több példányban <xref:System.Object>a tömbben.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetValues*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Az érték túl nagy a .NET decimális tárolja."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.HasRows
  id: HasRows
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OracleDataReader.HasRows
  fullName: System.Data.OracleClient.OracleDataReader.HasRows
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> egy vagy több sort tartalmaz."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> tartalmaz egy vagy több sor; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.IsClosed
  id: IsClosed
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
  fullName: System.Data.OracleClient.OracleDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Azt jelzi, hogy a <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> le van zárva."
  remarks: "IsClosed és <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>hívása után csak tulajdonságok vannak a <xref:System.Data.OracleClient.OracleDataReader>le van zárva.</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> lezárt; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OracleDataReader.IsDBNull(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi egy érték, amely jelzi, hogy az oszlop nem létező vagy a hiányzó értékeket tartalmaz."
  remarks: "Kiadását okozó hiba elkerüléséhez hívja meg ezt a metódust ellenőrizze a beírt hívása előtt null értékek beolvasása módszerek (például <xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>, <xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>, és így tovább).</xref:System.Data.OracleClient.OracleDataReader.GetChar%2A> </xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>"
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott oszlop érték egyenértékű <xref href=&quot;System.DBNull&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OracleDataReader.Item(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékét az adott a oszlopból natív formátumában."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "A sorszám oszlopot."
    return:
      type: System.Object
      description: "A megadott oszlop natív formátumában értéke."
  overload: System.Data.OracleClient.OracleDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Az átadott index kívül esik a tartományon keresztül <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*> 0 volt"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OracleDataReader.Item(String)
  fullName: System.Data.OracleClient.OracleDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megadott oszlop értékét az oszlop neve a natív formátumában."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Az oszlop nevét."
    return:
      type: System.Object
      description: "A megadott oszlop natív formátumában értéke."
  overload: System.Data.OracleClient.OracleDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Egyetlen oszlop sincs a megadott néven nem található."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.NextResult
  id: NextResult
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OracleDataReader.NextResult()
  fullName: System.Data.OracleClient.OracleDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kiadásokban a <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> a következő eredménye"
  remarks: "Használjon egy `REF CURSOR` adott metódus hívásakor."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha több eredményhalmazt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Read
  id: Read
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OracleDataReader.Read()
  fullName: System.Data.OracleClient.OracleDataReader.Read()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kiadásokban a <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> a következő bejegyzéshez."
  remarks: "Az alapértelmezett pozíciója a <xref:System.Data.OracleClient.OracleDataReader>korábbi az első rekordra.</xref:System.Data.OracleClient.OracleDataReader> Ezért meg kell hívnia olvasható adatok elérése megkezdéséhez.       Egynél több <xref:System.Data.OracleClient.OracleDataReader>egy adott időpontban lehet megnyitva.</xref:System.Data.OracleClient.OracleDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an <xref:System.Data.OracleClient.OracleDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OracleClient.OracleDataReader>, then the <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oracleclie_4_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_4_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha további sorokat; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
  fullName: System.Data.OracleClient.OracleDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a megváltozott, szúrja be, vagy törli azokat az SQL-utasítás végrehajtása sorok száma."
  remarks: "A RecordsAffected tulajdonság nincs beállítva mindaddig, amíg az összes sor olvasása, és bezárja a <xref:System.Data.OracleClient.OracleDataReader>.</xref:System.Data.OracleClient.OracleDataReader>       <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>és RecordsAffected hívása után csak tulajdonságok a <xref:System.Data.OracleClient.OracleDataReader>le van zárva.</xref:System.Data.OracleClient.OracleDataReader></xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "A sorok száma megváltozott, szúrja be, vagy törölték. a SELECT utasítás; -1 0, ha a sorok érintettek, vagy az utasítás végrehajtása sikertelen volt."
  overload: System.Data.OracleClient.OracleDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.OracleClient.OracleDataReader.Close
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Close()
  nameWithType: OracleDataReader.Close()
  fullName: System.Data.OracleClient.OracleDataReader.Close()
- uid: System.Data.OracleClient.OracleDataReader.Depth
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Depth
  nameWithType: OracleDataReader.Depth
  fullName: System.Data.OracleClient.OracleDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleDataReader.FieldCount
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
  fullName: System.Data.OracleClient.OracleDataReader.FieldCount
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OracleDataReader.GetBoolean(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OracleDataReader.GetByte(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OracleDataReader.GetChar(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OracleDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OracleDataReader.GetDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OracleDataReader.GetDecimal(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OracleDataReader.GetDouble(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OracleDataReader.GetEnumerator()
  fullName: System.Data.OracleClient.OracleDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OracleDataReader.GetFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OracleDataReader.GetFloat(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OracleDataReader.GetGuid(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OracleDataReader.GetInt16(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OracleDataReader.GetInt32(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt32(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OracleDataReader.GetInt64(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt64(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OracleDataReader.GetName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetName(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBFile(Int32)
  nameWithType: OracleDataReader.GetOracleBFile(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBFile(Int32)
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBinary(Int32)
  nameWithType: OracleDataReader.GetOracleBinary(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBinary(Int32)
- uid: System.Data.OracleClient.OracleBinary
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBinary
  nameWithType: OracleBinary
  fullName: System.Data.OracleClient.OracleBinary
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleDateTime(Int32)
  nameWithType: OracleDataReader.GetOracleDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(Int32)
- uid: System.Data.OracleClient.OracleDateTime
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleDateTime
  nameWithType: OracleDateTime
  fullName: System.Data.OracleClient.OracleDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleLob(Int32)
  nameWithType: OracleDataReader.GetOracleLob(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleLob(Int32)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleMonthSpan(Int32)
  nameWithType: OracleDataReader.GetOracleMonthSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(Int32)
- uid: System.Data.OracleClient.OracleMonthSpan
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleMonthSpan
  nameWithType: OracleMonthSpan
  fullName: System.Data.OracleClient.OracleMonthSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleNumber(Int32)
  nameWithType: OracleDataReader.GetOracleNumber(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleNumber(Int32)
- uid: System.Data.OracleClient.OracleNumber
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleNumber
  nameWithType: OracleNumber
  fullName: System.Data.OracleClient.OracleNumber
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleString(Int32)
  nameWithType: OracleDataReader.GetOracleString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleString(Int32)
- uid: System.Data.OracleClient.OracleString
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleTimeSpan(Int32)
  nameWithType: OracleDataReader.GetOracleTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(Int32)
- uid: System.Data.OracleClient.OracleTimeSpan
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTimeSpan
  nameWithType: OracleTimeSpan
  fullName: System.Data.OracleClient.OracleTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValue(Int32)
  nameWithType: OracleDataReader.GetOracleValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValues(Object[])
  nameWithType: OracleDataReader.GetOracleValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OracleDataReader.GetOrdinal(String)
  fullName: System.Data.OracleClient.OracleDataReader.GetOrdinal(String)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: OracleDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(Object[])
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OracleDataReader.GetSchemaTable()
  fullName: System.Data.OracleClient.OracleDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OracleDataReader.GetString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetString(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: OracleDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OracleDataReader.GetValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetValue(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OracleDataReader.GetValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetValues(Object[])
- uid: System.Data.OracleClient.OracleDataReader.HasRows
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: HasRows
  nameWithType: OracleDataReader.HasRows
  fullName: System.Data.OracleClient.OracleDataReader.HasRows
- uid: System.Data.OracleClient.OracleDataReader.IsClosed
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
  fullName: System.Data.OracleClient.OracleDataReader.IsClosed
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OracleDataReader.IsDBNull(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.IsDBNull(Int32)
- uid: System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OracleDataReader.Item(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.Item(Int32)
- uid: System.Data.OracleClient.OracleDataReader.Item(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OracleDataReader.Item(String)
  fullName: System.Data.OracleClient.OracleDataReader.Item(String)
- uid: System.Data.OracleClient.OracleDataReader.NextResult
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OracleDataReader.NextResult()
  fullName: System.Data.OracleClient.OracleDataReader.NextResult()
- uid: System.Data.OracleClient.OracleDataReader.Read
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Read()
  nameWithType: OracleDataReader.Read()
  fullName: System.Data.OracleClient.OracleDataReader.Read()
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
  fullName: System.Data.OracleClient.OracleDataReader.RecordsAffected
- uid: System.Data.OracleClient.OracleDataReader.Close*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Close
  nameWithType: OracleDataReader.Close
- uid: System.Data.OracleClient.OracleDataReader.Depth*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Depth
  nameWithType: OracleDataReader.Depth
- uid: System.Data.OracleClient.OracleDataReader.FieldCount*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OracleDataReader.GetBoolean
- uid: System.Data.OracleClient.OracleDataReader.GetByte*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetByte
  nameWithType: OracleDataReader.GetByte
- uid: System.Data.OracleClient.OracleDataReader.GetBytes*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OracleDataReader.GetBytes
- uid: System.Data.OracleClient.OracleDataReader.GetChar*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChar
  nameWithType: OracleDataReader.GetChar
- uid: System.Data.OracleClient.OracleDataReader.GetChars*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChars
  nameWithType: OracleDataReader.GetChars
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OracleDataReader.GetDataTypeName
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OracleDataReader.GetDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OracleDataReader.GetDecimal
- uid: System.Data.OracleClient.OracleDataReader.GetDouble*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OracleDataReader.GetDouble
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OracleDataReader.GetEnumerator
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OracleDataReader.GetFieldType
- uid: System.Data.OracleClient.OracleDataReader.GetFloat*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OracleDataReader.GetFloat
- uid: System.Data.OracleClient.OracleDataReader.GetGuid*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OracleDataReader.GetGuid
- uid: System.Data.OracleClient.OracleDataReader.GetInt16*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OracleDataReader.GetInt16
- uid: System.Data.OracleClient.OracleDataReader.GetInt32*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OracleDataReader.GetInt32
- uid: System.Data.OracleClient.OracleDataReader.GetInt64*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OracleDataReader.GetInt64
- uid: System.Data.OracleClient.OracleDataReader.GetName*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetName
  nameWithType: OracleDataReader.GetName
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBFile
  nameWithType: OracleDataReader.GetOracleBFile
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBinary
  nameWithType: OracleDataReader.GetOracleBinary
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleDateTime
  nameWithType: OracleDataReader.GetOracleDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleLob
  nameWithType: OracleDataReader.GetOracleLob
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleMonthSpan
  nameWithType: OracleDataReader.GetOracleMonthSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleNumber
  nameWithType: OracleDataReader.GetOracleNumber
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleString
  nameWithType: OracleDataReader.GetOracleString
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleTimeSpan
  nameWithType: OracleDataReader.GetOracleTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValue
  nameWithType: OracleDataReader.GetOracleValue
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValues
  nameWithType: OracleDataReader.GetOracleValues
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OracleDataReader.GetOrdinal
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: OracleDataReader.GetProviderSpecificFieldType
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: OracleDataReader.GetProviderSpecificValue
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: OracleDataReader.GetProviderSpecificValues
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OracleDataReader.GetSchemaTable
- uid: System.Data.OracleClient.OracleDataReader.GetString*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetString
  nameWithType: OracleDataReader.GetString
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: OracleDataReader.GetTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValue
  nameWithType: OracleDataReader.GetValue
- uid: System.Data.OracleClient.OracleDataReader.GetValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValues
  nameWithType: OracleDataReader.GetValues
- uid: System.Data.OracleClient.OracleDataReader.HasRows*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: HasRows
  nameWithType: OracleDataReader.HasRows
- uid: System.Data.OracleClient.OracleDataReader.IsClosed*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OracleDataReader.IsDBNull
- uid: System.Data.OracleClient.OracleDataReader.Item*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item
  nameWithType: OracleDataReader.Item
- uid: System.Data.OracleClient.OracleDataReader.NextResult*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: NextResult
  nameWithType: OracleDataReader.NextResult
- uid: System.Data.OracleClient.OracleDataReader.Read*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Read
  nameWithType: OracleDataReader.Read
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
