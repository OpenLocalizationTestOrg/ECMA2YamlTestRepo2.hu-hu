### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  id: ISecurityContextSecurityTokenCache
  children:
  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)
  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts
  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)
  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)
  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)
  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)
  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)
  - System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)
  langs:
  - csharp
  name: ISecurityContextSecurityTokenCache
  nameWithType: ISecurityContextSecurityTokenCache
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  type: Interface
  summary: "Megadásuk után ez az interfész a biztonsági környezet jogkivonat gyorsítótára szerződés határozza meg."
  syntax:
    content: public interface ISecurityContextSecurityTokenCache
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)
  id: AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  langs:
  - csharp
  name: AddContext(SecurityContextSecurityToken)
  nameWithType: ISecurityContextSecurityTokenCache.AddContext(SecurityContextSecurityToken)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(SecurityContextSecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "A biztonsági környezet biztonsági jogkivonatot ad hozzá a jogkivonatok gyorsítótárát."
  syntax:
    content: public void AddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);
    parameters:
    - id: token
      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
      description: "The <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;></xref>."
  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts
  id: ClearContexts
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  langs:
  - csharp
  name: ClearContexts()
  nameWithType: ISecurityContextSecurityTokenCache.ClearContexts()
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Törli a tartalom jogkivonatok gyorsítótárát."
  syntax:
    content: public void ClearContexts ();
    parameters: []
  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)
  id: GetAllContexts(System.Xml.UniqueId)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  langs:
  - csharp
  name: GetAllContexts(UniqueId)
  nameWithType: ISecurityContextSecurityTokenCache.GetAllContexts(UniqueId)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(UniqueId)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Lekérdezi a biztonsági környezet biztonsági gyűjteménye token azonosítók, amelyek megfelelnek egy adott környezetben."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.SecurityContextSecurityToken> GetAllContexts (System.Xml.UniqueId contextId);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "A megadott biztonsági környezet azonosítóját."
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityContextSecurityToken}
      description: "Általános gyűjteménye <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;> </xref>s."
  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)
  id: GetContext(System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  langs:
  - csharp
  name: GetContext(UniqueId,UniqueId)
  nameWithType: ISecurityContextSecurityTokenCache.GetContext(UniqueId,UniqueId)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(UniqueId,UniqueId)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "A biztonsági környezet biztonsági jogkivonat azonosítója, amely megfelel a megadott környezetben Azonosítóját és a generáció lekérdezi."
  syntax:
    content: public System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "A megadott biztonsági környezet azonosítóját."
    - id: generation
      type: System.Xml.UniqueId
      description: "A <xref:System.Xml.UniqueId>, amely jelzi, hogy a generáció.</xref:System.Xml.UniqueId>"
    return:
      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
      description: "A megfelelő <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;> </xref>."
  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)
  id: RemoveAllContexts(System.Xml.UniqueId)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  langs:
  - csharp
  name: RemoveAllContexts(UniqueId)
  nameWithType: ISecurityContextSecurityTokenCache.RemoveAllContexts(UniqueId)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(UniqueId)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Eltávolítja az összes jogkivonatot a gyorsítótárból, amelyek megfelelnek egy adott környezetben."
  syntax:
    content: public void RemoveAllContexts (System.Xml.UniqueId contextId);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "A megadott biztonsági környezet azonosítóját."
  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)
  id: RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  langs:
  - csharp
  name: RemoveContext(UniqueId,UniqueId)
  nameWithType: ISecurityContextSecurityTokenCache.RemoveContext(UniqueId,UniqueId)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(UniqueId,UniqueId)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Eltávolítja a jogkivonatot, amely megfelel egy adott környezetben Azonosítót és a generáció a gyorsítótárból."
  syntax:
    content: public void RemoveContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);
    parameters:
    - id: contextId
      type: System.Xml.UniqueId
      description: "A megadott biztonsági környezet azonosítóját."
    - id: generation
      type: System.Xml.UniqueId
      description: "A <xref:System.Xml.UniqueId>, amely jelzi, hogy a generáció.</xref:System.Xml.UniqueId>"
  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)
  id: TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  langs:
  - csharp
  name: TryAddContext(SecurityContextSecurityToken)
  nameWithType: ISecurityContextSecurityTokenCache.TryAddContext(SecurityContextSecurityToken)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(SecurityContextSecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "Próbálja meg egy token felvétele a gyorsítótárba."
  syntax:
    content: public bool TryAddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);
    parameters:
    - id: token
      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
      description: "The <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a token felvétele sikeresen megtörtént a gyorsítótárba; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>dátum vagy idő külső korlátok."
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)
  id: UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  langs:
  - csharp
  name: UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)
  nameWithType: ISecurityContextSecurityTokenCache.UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "A jogkivonat a gyorsítótárban a lejárati dátum frissíti."
  syntax:
    content: public void UpdateContextCachingTime (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, DateTime expirationTime);
    parameters:
    - id: context
      type: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
      description: "The <xref href=&quot;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&quot;></xref>."
    - id: expirationTime
      type: System.DateTime
      description: "Az új lejárati dátuma és időpontja."
  overload: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: AddContext(SecurityContextSecurityToken)
  nameWithType: ISecurityContextSecurityTokenCache.AddContext(SecurityContextSecurityToken)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(SecurityContextSecurityToken)
- uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: SecurityContextSecurityToken
  nameWithType: SecurityContextSecurityToken
  fullName: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: ClearContexts()
  nameWithType: ISecurityContextSecurityTokenCache.ClearContexts()
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts()
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: GetAllContexts(UniqueId)
  nameWithType: ISecurityContextSecurityTokenCache.GetAllContexts(UniqueId)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(UniqueId)
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityContextSecurityToken}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<SecurityContextSecurityToken>
  nameWithType: Collection<SecurityContextSecurityToken>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.SecurityContextSecurityToken>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Security.Tokens.SecurityContextSecurityToken>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
    name: SecurityContextSecurityToken
    nameWithType: SecurityContextSecurityToken
    fullName: SecurityContextSecurityToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: GetContext(UniqueId,UniqueId)
  nameWithType: ISecurityContextSecurityTokenCache.GetContext(UniqueId,UniqueId)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(UniqueId,UniqueId)
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: RemoveAllContexts(UniqueId)
  nameWithType: ISecurityContextSecurityTokenCache.RemoveAllContexts(UniqueId)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(UniqueId)
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: RemoveContext(UniqueId,UniqueId)
  nameWithType: ISecurityContextSecurityTokenCache.RemoveContext(UniqueId,UniqueId)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(UniqueId,UniqueId)
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: TryAddContext(SecurityContextSecurityToken)
  nameWithType: ISecurityContextSecurityTokenCache.TryAddContext(SecurityContextSecurityToken)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(SecurityContextSecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)
  nameWithType: ISecurityContextSecurityTokenCache.UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)
  fullName: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(SecurityContextSecurityToken,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext*
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: AddContext
  nameWithType: ISecurityContextSecurityTokenCache.AddContext
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts*
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: ClearContexts
  nameWithType: ISecurityContextSecurityTokenCache.ClearContexts
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts*
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: GetAllContexts
  nameWithType: ISecurityContextSecurityTokenCache.GetAllContexts
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext*
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: GetContext
  nameWithType: ISecurityContextSecurityTokenCache.GetContext
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts*
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: RemoveAllContexts
  nameWithType: ISecurityContextSecurityTokenCache.RemoveAllContexts
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext*
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: RemoveContext
  nameWithType: ISecurityContextSecurityTokenCache.RemoveContext
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext*
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: TryAddContext
  nameWithType: ISecurityContextSecurityTokenCache.TryAddContext
- uid: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime*
  parent: System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache
  isExternal: false
  name: UpdateContextCachingTime
  nameWithType: ISecurityContextSecurityTokenCache.UpdateContextCachingTime
