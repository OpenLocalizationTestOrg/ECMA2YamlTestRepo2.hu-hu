### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbTransaction
  id: DbTransaction
  children:
  - System.Data.Common.DbTransaction.#ctor
  - System.Data.Common.DbTransaction.Commit
  - System.Data.Common.DbTransaction.Connection
  - System.Data.Common.DbTransaction.DbConnection
  - System.Data.Common.DbTransaction.Dispose
  - System.Data.Common.DbTransaction.Dispose(System.Boolean)
  - System.Data.Common.DbTransaction.IsolationLevel
  - System.Data.Common.DbTransaction.Rollback
  - System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection
  langs:
  - csharp
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
  type: Class
  summary: "A tranzakció alaposztálya."
  syntax:
    content: 'public abstract class DbTransaction : MarshalByRefObject, IDisposable, System.Data.IDbTransaction'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Data.IDbTransaction
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: DbTransaction()
  nameWithType: DbTransaction.DbTransaction()
  fullName: System.Data.Common.DbTransaction.DbTransaction()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inicializál egy új <xref href=&quot;System.Data.Common.DbTransaction&quot;> </xref> objektum."
  syntax:
    content: protected DbTransaction ();
    parameters: []
  overload: System.Data.Common.DbTransaction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.Commit
  id: Commit
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: DbTransaction.Commit()
  fullName: System.Data.Common.DbTransaction.Commit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Az adatbázis-tranzakció érvényesítése."
  syntax:
    content: public abstract void Commit ();
    parameters: []
  overload: System.Data.Common.DbTransaction.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.Connection
  id: Connection
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: Connection
  nameWithType: DbTransaction.Connection
  fullName: System.Data.Common.DbTransaction.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Megadja a <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> a tranzakcióhoz rendelt objektumot."
  remarks: "Egyetlen alkalmazás rendelkezhet több adatforrás-kapcsolatok, az nulla vagy több tranzakció. Ez a tulajdonság lehetővé teszi egy adott tranzakcióhoz tartozó kapcsolati objektum."
  syntax:
    content: public System.Data.Common.DbConnection Connection { get; }
    return:
      type: System.Data.Common.DbConnection
      description: "A <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> a tranzakcióhoz rendelt objektumot."
  overload: System.Data.Common.DbTransaction.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.DbConnection
  id: DbConnection
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: DbConnection
  nameWithType: DbTransaction.DbConnection
  fullName: System.Data.Common.DbTransaction.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Megadja a <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> a tranzakcióhoz rendelt objektumot."
  remarks: "Egyetlen alkalmazás rendelkezhet több adatforrás-kapcsolatok, az nulla vagy több tranzakció. Ez a tulajdonság lehetővé teszi egy adott tranzakcióhoz tartozó kapcsolati objektum."
  syntax:
    content: protected abstract System.Data.Common.DbConnection DbConnection { get; }
    return:
      type: System.Data.Common.DbConnection
      description: "A <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> a tranzakcióhoz rendelt objektumot."
  overload: System.Data.Common.DbTransaction.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.Dispose
  id: Dispose
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: Dispose()
  nameWithType: DbTransaction.Dispose()
  fullName: System.Data.Common.DbTransaction.Dispose()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Data.Common.DbTransaction&quot;> </xref>."
  remarks: "<xref:System.Data.Common.DbTransaction.Dispose%2A>a tranzakció visszaállítása kell.</xref:System.Data.Common.DbTransaction.Dispose%2A> Azonban <xref:System.Data.Common.DbTransaction.Dispose%2A>szolgáltatóspecifikus, és nem kell lecserélni <xref:System.Data.Common.DbTransaction.Rollback%2A>.</xref:System.Data.Common.DbTransaction.Rollback%2A> hívása</xref:System.Data.Common.DbTransaction.Dispose%2A> viselkedése"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Data.Common.DbTransaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbTransaction.Dispose(Boolean)
  fullName: System.Data.Common.DbTransaction.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Data.Common.DbTransaction&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "<xref:System.Data.Common.DbTransaction.Dispose%2A>a tranzakció visszaállítása kell.</xref:System.Data.Common.DbTransaction.Dispose%2A> Azonban <xref:System.Data.Common.DbTransaction.Dispose%2A>szolgáltatóspecifikus, és nem kell lecserélni <xref:System.Data.Common.DbTransaction.Rollback%2A>.</xref:System.Data.Common.DbTransaction.Rollback%2A> hívása</xref:System.Data.Common.DbTransaction.Dispose%2A> viselkedése"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Ha <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja a <xref href=&quot;System.Data.Common.DbTransaction&quot;> </xref> hivatkozik."
  overload: System.Data.Common.DbTransaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.IsolationLevel
  id: IsolationLevel
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: DbTransaction.IsolationLevel
  fullName: System.Data.Common.DbTransaction.IsolationLevel
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Megadja a <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> ebben a tranzakcióban."
  syntax:
    content: public abstract System.Data.IsolationLevel IsolationLevel { get; }
    return:
      type: System.Data.IsolationLevel
      description: "A <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> ebben a tranzakcióban."
  overload: System.Data.Common.DbTransaction.IsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.Rollback
  id: Rollback
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: Rollback()
  nameWithType: DbTransaction.Rollback()
  fullName: System.Data.Common.DbTransaction.Rollback()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Visszaállítja a tranzakció egy függőben lévő állapot."
  syntax:
    content: public abstract void Rollback ();
    parameters: []
  overload: System.Data.Common.DbTransaction.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection
  id: System#Data#IDbTransaction#Connection
  isEii: true
  parent: System.Data.Common.DbTransaction
  langs:
  - csharp
  name: System.Data.IDbTransaction.Connection
  nameWithType: DbTransaction.System.Data.IDbTransaction.Connection
  fullName: System.Data.Common.DbTransaction.System.Data.IDbTransaction.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> társított a tranzakció vagy null hivatkozás. Ha a tranzakció már nem érvényes objektum."
  syntax:
    content: System.Data.IDbConnection System.Data.IDbTransaction.Connection { get; }
    return:
      type: System.Data.IDbConnection
      description: "A <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> a tranzakcióhoz rendelt objektumot."
  overload: System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Data.Common.DbTransaction.#ctor
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: DbTransaction()
  nameWithType: DbTransaction.DbTransaction()
  fullName: System.Data.Common.DbTransaction.DbTransaction()
- uid: System.Data.Common.DbTransaction.Commit
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Commit()
  nameWithType: DbTransaction.Commit()
  fullName: System.Data.Common.DbTransaction.Commit()
- uid: System.Data.Common.DbTransaction.Connection
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Connection
  nameWithType: DbTransaction.Connection
  fullName: System.Data.Common.DbTransaction.Connection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common.DbTransaction.DbConnection
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: DbConnection
  nameWithType: DbTransaction.DbConnection
  fullName: System.Data.Common.DbTransaction.DbConnection
- uid: System.Data.Common.DbTransaction.Dispose
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Dispose()
  nameWithType: DbTransaction.Dispose()
  fullName: System.Data.Common.DbTransaction.Dispose()
- uid: System.Data.Common.DbTransaction.Dispose(System.Boolean)
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbTransaction.Dispose(Boolean)
  fullName: System.Data.Common.DbTransaction.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbTransaction.IsolationLevel
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: DbTransaction.IsolationLevel
  fullName: System.Data.Common.DbTransaction.IsolationLevel
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Common.DbTransaction.Rollback
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Rollback()
  nameWithType: DbTransaction.Rollback()
  fullName: System.Data.Common.DbTransaction.Rollback()
- uid: System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: System.Data.IDbTransaction.Connection
  nameWithType: DbTransaction.System.Data.IDbTransaction.Connection
  fullName: System.Data.Common.DbTransaction.System.Data.IDbTransaction.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.Common.DbTransaction.#ctor*
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction.DbTransaction
- uid: System.Data.Common.DbTransaction.Commit*
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Commit
  nameWithType: DbTransaction.Commit
- uid: System.Data.Common.DbTransaction.Connection*
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Connection
  nameWithType: DbTransaction.Connection
- uid: System.Data.Common.DbTransaction.DbConnection*
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: DbConnection
  nameWithType: DbTransaction.DbConnection
- uid: System.Data.Common.DbTransaction.Dispose*
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Dispose
  nameWithType: DbTransaction.Dispose
- uid: System.Data.Common.DbTransaction.IsolationLevel*
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: IsolationLevel
  nameWithType: DbTransaction.IsolationLevel
- uid: System.Data.Common.DbTransaction.Rollback*
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: Rollback
  nameWithType: DbTransaction.Rollback
- uid: System.Data.Common.DbTransaction.System#Data#IDbTransaction#Connection*
  parent: System.Data.Common.DbTransaction
  isExternal: false
  name: System.Data.IDbTransaction.Connection
  nameWithType: DbTransaction.System.Data.IDbTransaction.Connection
