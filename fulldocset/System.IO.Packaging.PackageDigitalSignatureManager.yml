### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageDigitalSignatureManager
  id: PackageDigitalSignatureManager
  children:
  - System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  - System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  - System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  - System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  - System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  - System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  - System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  - System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  - System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  - System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  - System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  - System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  - System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  - System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  - System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  - System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  langs:
  - csharp
  name: PackageDigitalSignatureManager
  nameWithType: PackageDigitalSignatureManager
  fullName: System.IO.Packaging.PackageDigitalSignatureManager
  type: Class
  summary: "Egy segédprogram osztályt biztosít a létrehozása és a digitális aláírások egy <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>."
  remarks: "PackageDigitalSignatureManager épít, architektúrájának [!INCLUDE[TLA#tla_netframewk](~/add/includes/tlasharptla-netframewk-md.md)] digitális aláírás osztályokat, és egy segédprogram osztályt biztosít a gyakori feladatok végrehajtása a digitális aláírások használatával <xref:System.IO.Packaging.Package>elemei.</xref:System.IO.Packaging.Package>       Csomag digitális aláírások kapcsolatos további információkért lásd az MSDN-cikkben digitális aláírási keretrendszer az Open Packaging Conventions érhető el a [http://go.microsoft.com/fwlink/?LinkId=74494](http://go.microsoft.com/fwlink/?LinkId=74494)."
  example:
  - "The following example shows how to use the PackageDigitalSignatureManager.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public sealed class PackageDigitalSignatureManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  id: '#ctor(System.IO.Packaging.Package)'
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: PackageDigitalSignatureManager(Package)
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IO.Packaging.PackageDigitalSignatureManager&quot;> </xref> osztály egy adott való használatra <xref href=&quot;System.IO.Packaging.Package&quot;> </xref>."
  remarks: "A cél csomag társított az aláírás-kezelő inicializálása során van beállítva. Miután be van állítva, az aláírás-kezelő társított csomag nem módosítható. Hozzon létre egy új aláírás csomagonként manager igény szerint."
  example:
  - "The following example shows how to use this constructor.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public PackageDigitalSignatureManager (System.IO.Packaging.Package package);
    parameters:
    - id: package
      type: System.IO.Packaging.Package
      description: "A csomag társított Ez az aláírás-kezelő."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  id: CertificateOption
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi vagy beállítja a beállítás által használt beágyazás X.509-tanúsítvány a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign*>metódus csomagrészeket digitális aláírására.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign*>"
  remarks: "Ez a tulajdonság határozza meg az aláíró X.509 tanúsítvány tárolására szolgáló része digitális aláírása során."
  example:
  - "The following example shows how to set this property in preparation to digitally sign the parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }
    return:
      type: System.IO.Packaging.CertificateEmbeddingOption
      description: "Egy a <xref href=&quot;System.IO.Packaging.CertificateEmbeddingOption&quot;> </xref> értékeket."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  id: Countersign
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign()
  nameWithType: PackageDigitalSignatureManager.Countersign()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A felhasználó által kiválasztott X.509 tanúsítvánnyal a csomagban lévő összes aláírások countersigns."
  remarks: "Ha nincs X.509 tanúsítvány hívásában van megadva, ez a módszer megnyitja egy tanúsítvány kiválasztása párbeszédpanelt, amely felszólítja a felhasználót, hogy válassza ki az aláíráshoz használandó tanúsítványt.       Az ablak leíróját beállítani a <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>tulajdonság, hogy a tanúsítvány kiválasztása párbeszédpanelen az adott időszakra modális ellenjegyzés hívása előtt.</xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Az aláírás vettek fel a ellenjegyzés; mint vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha tanúsítványa nem található, vagy a felhasználó megszakította a tanúsítvány kiválasztása párbeszédpanelen."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A megadott X.509 tanúsítvánnyal a csomagban lévő összes aláírások countersigns."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az X.509 tanúsítvány, amelyet a ellenjegyzés aláírás."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "Egy ellenjegyzés is felvettek aláírását."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>van<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  id: Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Countersign(X509Certificate,IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A megadott X.509 tanúsítvánnyal aláírások listája countersigns."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<Uri> signatures);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "A megadott mindegyikének ellenjegyezni X.509-tanúsítvány `signatures`."
    - id: signatures
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "Aláírásokhoz ellenjegyezni listája."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "A digitális aláírás ellenjegyezni mindegyikének a <code> signatures </code>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either the <code>certificate</code> or <code>signatures</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A csomag nincs aláírva <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objektumok."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A csomag nem tartalmaz <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> részeit."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  id: DefaultHashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] karakterlánc, amely azonosítja az alapértelmezett kivonatoló algoritmus hozhat létre és aláírások ellenőrzése."
  remarks: "A szabványos alapértelmezett kivonatoló algoritmus <xref:System.IO.Packaging.PackageDigitalSignatureManager>osztály <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>([!INCLUDE[TLA#tla_sha1](~/add/includes/ajax-current-ext-md.md)]).</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> </xref:System.IO.Packaging.PackageDigitalSignatureManager>       A <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>tulajdonság lekérdezi vagy beállítja a tényleges kivonatoló algoritmust, ennek segítségével hozzon létre és aláírások ellenőrzése.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>       A DefaultHashAlgorithm tulajdonság jellemzően alaphelyzetbe állítja a <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>tulajdonság vissza az alapértelmezett ideiglenes módosítás után.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>"
  syntax:
    content: public static string DefaultHashAlgorithm { get; }
    return:
      type: System.String
      description: "A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] karakterlánc, amely azonosítja az alapértelmezett kivonatoló algoritmus hozhat létre és aláírások ellenőrzése."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  id: GetSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: GetSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.GetSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Visszaadja a digitális aláírás az adott aláírás [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);
    parameters:
    - id: signatureUri
      type: System.Uri
      description: "A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] a digitális aláírás való visszatéréshez."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "A megadott digitális aláírás <code> signatureUri </code>, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha az aláírás az adott <code> signatureUri </code> nem található."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  id: HashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi vagy beállítja a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] azonosítóját, a <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> példány létrehozásához és aláírások ellenőrzése."
  remarks: "Az alapértelmezett kivonatoló algoritmus azonosítója a szabványos digitális aláírás-kezelő <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>(<xref:System.Security.Cryptography.SHA1>– biztonságos kivonatoló algoritmus 1.0-s verzió).</xref:System.Security.Cryptography.SHA1> </xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url>       Ha explicit módon beállítva ellenkező esetben ez a tulajdonság beolvasása ugyanazt az értéket, mint a <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.</xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>       A HashAlgorithm tulajdonságot általában nem módosul az alapértelmezett. Ez a tulajdonság csak akkor, ha egy másik ismert használó aláírás és hozzáférhető módosítani kell <xref:System.Security.Cryptography.HashAlgorithm>a rendszer észlelt.</xref:System.Security.Cryptography.HashAlgorithm>  Ha befejezte az aláírás másik kivonatoló algoritmust használó, hívja <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>való állítsa vissza a HashAlgorithm tulajdonság alapértelmezett.</xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>"
  syntax:
    content: public string HashAlgorithm { get; set; }
    return:
      type: System.String
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] azonosítóját, a <xref href=&quot;System.Security.Cryptography.HashAlgorithm&quot;> </xref> példány létrehozásához és aláírások ellenőrzése."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A karakterláncot a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] beállításához van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A karakterláncot a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] beállítása értéke üres."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  id: InvalidSignatureEvent
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: InvalidSignatureEvent
  nameWithType: PackageDigitalSignatureManager.InvalidSignatureEvent
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Akkor következik be, amikor <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*>észlel aláírása érvénytelen.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*>"
  syntax:
    content: public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;
    return:
      type: System.IO.Packaging.InvalidSignatureEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  id: IsSigned
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Egy érték, amely azt jelzi, hogy a csomag tartalmaz-e aláírásokkal lekérdezi."
  remarks: "A IsSigned tulajdonság nem végzi el az aláírás-ellenőrzés. Ha az aláírások jelen, és IsSigned `true`, egy vagy több aláírás esetleg nem érvényesek.  Hívás <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A>parancs beírásával ellenőrizze, hogy a aláírások érvényesek, és nem változtak.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A>"
  example:
  - "The following example shows how to use the IsSigned property to determine if a package contains digital signatures.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigvalidate)]\n [!code-cs[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigvalidate)]"
  syntax:
    content: public bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a csomag tartalmaz aláírások; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  id: ParentWindow
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi vagy beállítja a leírót a szülő ablakába tanúsítvány kiválasztása párbeszédpanel megjelenítése."
  remarks: "Egy tanúsítvány kiválasztása párbeszédpanel akkor jelenik meg, ha csak egy <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>hívás nem tanúsítványokat tartalmazza.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> Ha nincs megadva, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>jelenik meg a tanúsítvány kiválasztása párbeszédpanel, amely lehetővé teszi a felhasználó választhatja ki, mely az aláíráshoz használandó tanúsítványt.</xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>"
  syntax:
    content: public IntPtr ParentWindow { get; set; }
    return:
      type: System.IntPtr
      description: "A tanúsítvány kiválasztása párbeszédpanel megjelenítéséhez a szülő ablak leíróját."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  id: RemoveAllSignatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: RemoveAllSignatures()
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Eltávolítja a csomag digitális aláírásokat."
  remarks: "Ez a módszer minden X.509 tanúsítvány is eltávolítja a csomagban található.  Szüntesse meg az összes aláírások és tanúsítványok, hívja <xref:System.IO.Packaging.Package.Flush%2A>az áruházra mutató összes változtatások megőrzéséhez.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: public void RemoveAllSignatures ();
    parameters: []
  overload: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  id: RemoveSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: RemoveSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.RemoveSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Eltávolítja a megadott aláírással rendelkező digitális aláírás [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  remarks: "Ez a módszer is eltávolítja a társított X.509-tanúsítvány, ha bármely más digitális aláírás nem hivatkozik rá.       Miután eltávolította a aláírás, hívja <xref:System.IO.Packaging.Package.Flush%2A>megőrizni a tároló módosítása.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: public void RemoveSignature (Uri signatureUri);
    parameters:
    - id: signatureUri
      type: System.Uri
      description: "A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] , a <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> eltávolítása."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A felhasználótól egy X.509 tanúsítvány, amely csomagrészeket megadott listája digitális aláírására szolgál majd."
  remarks: "Ahhoz, hogy egy adott időszakra modális a tanúsítvány-kiválasztás párbeszédpanel, állítsa be a <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>tulajdonság bejelentkezési hívása előtt.</xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A>       Bejelentkezési tanúsítványok nem fogja kérni, ha nincs alapértelmezett tanúsítványtárolójában."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "A listája [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] a a <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> elemek aláírásához."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "A digitális aláírás listájának aláírásához használt <code> parts </code>."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A megadott X.509 tanúsítvánnyal csomagrészeket listája jelentkezik."
  remarks: ''
  example:
  - "The following example shows how to digitally sign a list of parts within a <xref:System.IO.Packaging.Package>.  For the complete example, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "A listája [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] a a <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> elemek aláírásához."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az X.509 tanúsítvány digitális aláírására a megadott mindegyikének használandó `parts`."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "A megadott listájának aláírásához használt digitális aláírást <code> parts </code>; vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha tanúsítványa nem található, vagy a felhasználó kattintott &quot;Mégse gombra&quot; a tanúsítvány kiválasztása párbeszédpanel."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "-Szal csomagrészeket és a csomag kapcsolatokat a megadott X.509 tanúsítvánnyal listáját."
  remarks: "Közötti `parts` és `relationshipSelectors` aláírásához legalább egy elemet kell tartalmaznia."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "A listája [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] a a <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objektumok aláírásához."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az X.509 tanúsítvány digitális aláírására minden egyes megadott részek és kapcsolatok használatára."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "A listája <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objektumok aláírásához."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "A megadott elemek aláírásához használt digitális aláírást a <code> parts </code> és <code> relationshipSelectors </code> sorolja fel."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sem <code> parts </code> sem <code> relationshipSelectors </code> aláírásához objektumokat adja meg."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Csomagrészeket és kapcsolata csomag megadott X.509 tanúsítvány aláírja és [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "A `parts` lehet, hogy a lista üres vagy `null` Ha `relationshipSelectors` legalább egy bejegyzést tartalmaz.       A `relationshipSelectors` lehet, hogy a lista üres vagy `null` Ha `parts` legalább egy bejegyzést tartalmaz.       Között a `parts` listája és `relationshipSelectors` aláírásához legalább egy elemet kell tartalmaznia."
  example:
  - "The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigsign)]\n [!code-cs[PackageDigitalSignature#PackageDigSigSign](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigsign)]"
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors, string signatureId);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "A listája [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] a a <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objektumok aláírásához."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az X.509 tanúsítvány digitális aláírására minden egyes megadott részek és kapcsolatok használatára."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "A listája <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objektumok aláírásához."
    - id: signatureId
      type: System.String
      description: "Az aláírás társítandó azonosító karakterláncot."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "A megadott elemek aláírásához használt digitális aláírást a <code> parts </code> és <code> relationshipSelectors </code> sorolja fel."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sem <code> parts </code> sem <code> relationshipSelectors </code> adja meg a elemeket aláírásához."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Csomagrészeket, csomag kapcsolatokat vagy egy megadott X.509-tanúsítvány és aláírással rendelkező egyéni objektumok listájának aláírja [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "Jelentkezzen be a legalább egy elemet kell `parts`, `relationshipSelectors`, `signatureObjects`, vagy `objectReferences`.      > [!NOTE] > A feltételek `Object`, `Manifest`, `Reference`, `SignatureProperties`, és `Transform` a következő két megjegyzések elemtípus és a W3C XML-aláírás szintaxist és a feldolgozási specifikációja által definiált címkék című [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/).       Ezt és az egyéb <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>metódus túlterhelés használata az aktuális <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A>tartalmaz, amely meghatározza egy `Transform` alkalmazni a csomagrészt <xref:System.IO.Packaging.PackagePart.ContentType%2A>.</xref:System.IO.Packaging.PackagePart.ContentType%2A> alapján</xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> </xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>  A Microsoft nyitott csomagolás egyezmények (OPC) specifikáció jelenleg lehetővé teszi, hogy csak két érvényes `Transform` algoritmusok: a&14; és C14N.  A W3C XML-aláírás szintaxisát és feldolgozásának szabványos nem engedélyezi üres `Manifest` címkék.  Is az Open Packaging Conventions megadását igényli a <xref:System.IO.Packaging.Package>-adott `Object` egyaránt tartalmazó címke `Manifest` és `SignatureProperties` címkék.</xref:System.IO.Packaging.Package>  Minden egyes `Manifest` címke továbbá tartalmaznia kell legalább egy `Reference` címke.  Ezekkel a címkékkel megkövetelése minden aláírás jelentkezzen legalább egy <xref:System.IO.Packaging.PackagePart>(nem üres részek címke) vagy <xref:System.IO.Packaging.PackageRelationship>(nem üres `relationshipSelectors`) akkor is, ha az aláírást ahhoz szükséges, hogy csak jelentkezzen `signatureObjects` vagy `objectReferences`.</xref:System.IO.Packaging.PackageRelationship> </xref:System.IO.Packaging.PackagePart>       Ez a bejelentkezési módszer figyelmen kívül hagyja a <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>társított minden egyes tulajdonság <xref:System.Security.Cryptography.Xml.Reference>definiált `objectReferences`.</xref:System.Security.Cryptography.Xml.Reference> </xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>       Ez a bejelentkezési túlterhelés generációja támogatást nyújt a [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] egyéni igénylő aláírások `Object` címkék.  Az összes megadott `Object` címke kell aláírni, a megfelelő `Reference` kódot meg kell adni a egy [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] , amely megadja a `Object` címke helyi töredék szintaxisban.  Például ha a `Object` címke rendelkezik &quot;mutat&quot;, az URI Azonosítót a `Reference` címke &quot;#myObject&quot; lenne.  Az aláíratlan objektumokat, nem `Reference` szükséges."
  syntax:
    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.DataObject> signatureObjects, System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.Reference> objectReferences);
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "A listája [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] a a <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> objektumok aláírásához."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az X.509 tanúsítvány digitális aláírására minden egyes megadott részek és kapcsolatok használatára."
    - id: relationshipSelectors
      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
      description: "A listája <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> objektumok aláírásához."
    - id: signatureId
      type: System.String
      description: "Az aláírás társítandó azonosító karakterláncot."
    - id: signatureObjects
      type: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject}
      description: "Egyéni adatok objektumok aláírásához listája."
    - id: objectReferences
      type: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference}
      description: "Aláírásához egyéni objektumokra való hivatkozások listáját."
    return:
      type: System.IO.Packaging.PackageDigitalSignature
      description: "A megadott elemek aláírásához használt digitális aláírást a <code> parts </code> és <code> relationshipSelectors </code> sorolja fel."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Neither <code>parts</code>, <code>relationshipSelectors</code>, <code>signatureObjects</code>, nor <code>objectReferences</code> specify any elements to sign."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <> </> *> olyan rész alatt aláírt hivatkozik egy üres <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vagy nincs megadva <> </> *>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>signatureId</code>nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , és nem egy érvényes [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] Sémaazonosító (például egy vezető numerikus számjegyet kezdődik)."
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  id: SignatureOrigin
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi a [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] a aláírás származási rész."
  remarks: "A SignatureOrigin [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] csomag eltérőek lehetnek, mert a név hivatalosan nincs definiálva. Amíg ez a megvalósítás általában a ugyanazon alapértelmezett értéket használja, ez a tulajdonság által visszaadott értéket fogja tartalmazni, függetlenül a forrás már létezik az aktuális <xref:System.IO.Packaging.Package>.</xref:System.IO.Packaging.Package>"
  syntax:
    content: public Uri SignatureOrigin { get; }
    return:
      type: System.Uri
      description: "A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] a aláírás származási rész."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  id: SignatureOriginRelationshipType
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi az alapértelmezett aláírás származási kapcsolat típusát."
  syntax:
    content: public static string SignatureOriginRelationshipType { get; }
    return:
      type: System.String
      description: "Alapértelmezett aláírás származási kapcsolat típusát."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  id: Signatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi a csomagban található összes aláírások gyűjteménye."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature> Signatures { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageDigitalSignature}
      description: "Összes a <xref href=&quot;System.IO.Packaging.PackageDigitalSignature&quot;> </xref> objektumok."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.Signatures*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  id: TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi vagy beállítja a <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> aláírás létrehozásához használt dátum/idő formátuma"
  remarks: "Az alapértelmezett TimeFormat &quot;Éééé-hh-DDThh:mm:ss.sTZD&quot; érték.       Dátum és idő formátumban kövesse a &quot;W3C dátum és idő formátumban&quot; leírás, szintaxis [http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html). A lent látható módon kell szerepelnie, összetevők a szintaxist és a meghatározott absztrakt.      | A(z) |} Leírás |} Példa |}   |----------------|-----------------|-------------|   | ÉÉÉÉ |} Év |} 2005 |}   | ÉÉÉÉ-HH |} Hónap és év |} 2005-07 |}   | ÉÉÉÉ-HH-NN |} Befejezés dátuma |} 2005-07-28 |}   | ÉÉÉÉ-hh-DDThh:mmTZD |} Fejezze be a dátum plusz órákban és percekben |} 2005-07-28T19:20-01:00 |}   | ÉÉÉÉ-hh-DDThh:mm:ssTZD |} Fejezze be a dátum plusz óra, perceket és másodperceket |} 2005-07-28T19:20:45-01:00 |}   | ÉÉÉÉ-hh-DDThh:mm:ss.sTZD| Dátum plusz óra, perc és tizedes tört pillanatok alatt |} 2005-07-28T19:20:45.75-01:00 |}       ahol: |||   |-|-|   | ÉÉÉÉ |} négyjegyű év (például 2005) |}   | MM |} kétjegyű hónap (01 január =) |}   | DD |} kétjegyű napot a hónapban (01 és 31) |}   | Thh |} kétjegyű óra (00-tól 23, 24 órás időformátum) |}   |} mm |} perc (00 és 59) kétjegyű |}   |} ss |} másodperc (00 és 59) kétjegyű |}   |} s |} másodperc decimális fracion képviselő egy vagy több számjegyet |}   | TZD |} időzóna jelzésével (Z vagy a + óó: pp vagy - hh: mm) |}"
  syntax:
    content: public string TimeFormat { get; set; }
    return:
      type: System.String
      description: "Az aláírás <xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*>.</xref:System.IO.Packaging.PackageDigitalSignature.SigningTime*> létrehozásához használt dátum/idő formátuma"
  overload: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  id: TransformMapping
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Minden egyes meghatározott tartalmazó dictionary lekérdezi <> </> *> és az ahhoz társított [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref>.<> </> *> azonosítója."
  remarks: "Bejelentkezési művelet során a társított átalakító algoritmus az egyes tartalom előtt alkalmazott a <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>végrehajtása.</xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A>       Alapértelmezett tartalom és átalakítás hozzárendeléseket tartalmaz: |} Tartalom |} A ContentType |} Átalakító algoritmus azonosítója |}   |-------------|-----------------|------------------------------------|   | Kapcsolat |} &quot; application/vnd.openxmlformats-Package.Relationships+XML&quot;| <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|   | Digitális aláírás |} &quot; application/vnd.openxmlformats-Package.Digital-Signature-xmlsignature+XML&quot;| <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl></xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public System.Collections.Generic.Dictionary<string,string> TransformMapping { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: "Minden egyes meghatározott tartalmazó dictionary <> </> *> és az ahhoz társított [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] <xref href=&quot;System.Security.Cryptography.Xml.Transform&quot;> </xref>.<> </> *> azonosítója."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: VerifyCertificate(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A megadott X.509 tanúsítvány ellenőrzése."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az X.509 tanúsítvány ellenőrzése."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509ChainStatusFlags&quot;></xref>(a 0 érték) Ha a tanúsítvány ellenőrzése sikeresen befejeződött; Ellenkező esetben a bitenkénti enumerálási hiba jelzők."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  id: VerifySignatures(System.Boolean)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  langs:
  - csharp
  name: VerifySignatures(Boolean)
  nameWithType: PackageDigitalSignatureManager.VerifySignatures(Boolean)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Ellenőrzi a csomagon belül minden aláírt részek."
  remarks: "Ez a metódus csak a digitális aláírások; ellenőrzi nem ellenőrzi a kapcsolódó X.509-tanúsítványokat.  A <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A>módszer akkor használható, az X.509 tanúsítvány ellenőrzése.</xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A>"
  example:
  - "The following example shows how to use this method to validate all signed parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/visualbasic/packagedigitalsignature/packagedigitalsignature.vb#packagedigsigvalidate)]\n [!code-cs[PackageDigitalSignature#PackageDigSigValidate](~/add/codesnippet/csharp/PackageDigitalSignature/PackageDigitalSignature.cs#packagedigsigvalidate)]"
  syntax:
    content: public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);
    parameters:
    - id: exitOnFailure
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az első hiba; kilép Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> a folytatáshoz minden aláírásának ellenőrzése."
    return:
      type: System.IO.Packaging.VerifyResult
      description: "<xref href=&quot;System.IO.Packaging.VerifyResult&quot;></xref>(a 0 érték) Ha az összes aláírások ellenőrzése sikeresen; Ellenkező esetben az enumerálás, amely azonosítja a hibát."
  overload: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: PackageDigitalSignatureManager(Package)
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption
- uid: System.IO.Packaging.CertificateEmbeddingOption
  parent: System.IO.Packaging
  isExternal: false
  name: CertificateEmbeddingOption
  nameWithType: CertificateEmbeddingOption
  fullName: System.IO.Packaging.CertificateEmbeddingOption
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign()
  nameWithType: PackageDigitalSignatureManager.Countersign()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign()
- uid: System.IO.Packaging.PackageDigitalSignature
  parent: System.IO.Packaging
  isExternal: false
  name: PackageDigitalSignature
  nameWithType: PackageDigitalSignature
  fullName: System.IO.Packaging.PackageDigitalSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign(X509Certificate,IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(X509Certificate,IEnumerable<Uri>)
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: GetSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.GetSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: InvalidSignatureEvent
  nameWithType: PackageDigitalSignatureManager.InvalidSignatureEvent
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent
- uid: System.IO.Packaging.InvalidSignatureEventHandler
  parent: System.IO.Packaging
  isExternal: false
  name: InvalidSignatureEventHandler
  nameWithType: InvalidSignatureEventHandler
  fullName: System.IO.Packaging.InvalidSignatureEventHandler
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveAllSignatures()
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures()
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures()
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveSignature(Uri)
  nameWithType: PackageDigitalSignatureManager.RemoveSignature(Uri)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(Uri)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>)
- uid: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PackageRelationshipSelector>
  nameWithType: IEnumerable<PackageRelationshipSelector>
  fullName: System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IO.Packaging.PackageRelationshipSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageRelationshipSelector
    name: PackageRelationshipSelector
    nameWithType: PackageRelationshipSelector
    fullName: PackageRelationshipSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String)
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Sign(IEnumerable<Uri>,X509Certificate,IEnumerable<PackageRelationshipSelector>,String,IEnumerable<DataObject>,IEnumerable<Reference>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DataObject>
  nameWithType: IEnumerable<DataObject>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.DataObject>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Cryptography.Xml.DataObject>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.DataObject
    name: DataObject
    nameWithType: DataObject
    fullName: DataObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Reference>
  nameWithType: IEnumerable<Reference>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.Reference>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Cryptography.Xml.Reference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.Reference
    name: Reference
    nameWithType: Reference
    fullName: Reference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.Signatures
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageDigitalSignature}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PackageDigitalSignature>
  nameWithType: ReadOnlyCollection<PackageDigitalSignature>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Packaging.PackageDigitalSignature
    name: PackageDigitalSignature
    nameWithType: PackageDigitalSignature
    fullName: PackageDigitalSignature
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,String>
  nameWithType: Dictionary<String,String>
  fullName: System.Collections.Generic.Dictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifyCertificate(X509Certificate)
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainStatusFlags
  nameWithType: X509ChainStatusFlags
  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifySignatures(Boolean)
  nameWithType: PackageDigitalSignatureManager.VerifySignatures(Boolean)
  fullName: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(Boolean)
- uid: System.IO.Packaging.VerifyResult
  parent: System.IO.Packaging
  isExternal: false
  name: VerifyResult
  nameWithType: VerifyResult
  fullName: System.IO.Packaging.VerifyResult
- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: PackageDigitalSignatureManager
  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager
- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: CertificateOption
  nameWithType: PackageDigitalSignatureManager.CertificateOption
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Countersign
  nameWithType: PackageDigitalSignatureManager.Countersign
- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: DefaultHashAlgorithm
  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: GetSignature
  nameWithType: PackageDigitalSignatureManager.GetSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: HashAlgorithm
  nameWithType: PackageDigitalSignatureManager.HashAlgorithm
- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: IsSigned
  nameWithType: PackageDigitalSignatureManager.IsSigned
- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: ParentWindow
  nameWithType: PackageDigitalSignatureManager.ParentWindow
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveAllSignatures
  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures
- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: RemoveSignature
  nameWithType: PackageDigitalSignatureManager.RemoveSignature
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Sign
  nameWithType: PackageDigitalSignatureManager.Sign
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOrigin
  nameWithType: PackageDigitalSignatureManager.SignatureOrigin
- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: SignatureOriginRelationshipType
  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType
- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: Signatures
  nameWithType: PackageDigitalSignatureManager.Signatures
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TimeFormat
  nameWithType: PackageDigitalSignatureManager.TimeFormat
- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: TransformMapping
  nameWithType: PackageDigitalSignatureManager.TransformMapping
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifyCertificate
  nameWithType: PackageDigitalSignatureManager.VerifyCertificate
- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*
  parent: System.IO.Packaging.PackageDigitalSignatureManager
  isExternal: false
  name: VerifySignatures
  nameWithType: PackageDigitalSignatureManager.VerifySignatures
