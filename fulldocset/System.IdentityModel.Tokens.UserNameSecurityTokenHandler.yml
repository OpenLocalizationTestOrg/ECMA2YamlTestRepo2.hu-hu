### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  id: UserNameSecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: UserNameSecurityTokenHandler
  nameWithType: UserNameSecurityTokenHandler
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  type: Class
  summary: "Meghatározza az egy absztrakt alaposztály egy <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;> </xref> , amely feldolgozza a biztonsági jogkivonatokat típusú <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>."
  syntax:
    content: 'public abstract class UserNameSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  name: UserNameSecurityTokenHandler()
  nameWithType: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Származtatott osztályok inicializálása konstruktorok hívása a <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityTokenHandler&quot;> </xref> osztály."
  syntax:
    content: protected UserNameSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: UserNameSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Azt jelzi, hogy az aktuális XML-elem olvashatók egy <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>."
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Az XML-olvasó a kezdő elemre pozícionálva. Az olvasó nem kell speciális."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az olvasó mutat egy <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: UserNameSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy érték, amely azt jelzi, hogy a kezelő írhat típusú jogkivonatok lekérdezi <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>."
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kezelő írhat típusú jogkivonatok <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Vissza az URI-azonosítók kérésekben azonosítására szolgál, hogy a kezelő feldolgozza a típusú jogkivonatot."
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "URI, amely azonosítja a jogkivonat típusa, amely támogatja a kezelő készlete."
  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: UserNameSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Beolvassa a <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref> a megadott olvasó."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Az XML-olvasó található a kezdő elem a jogkivonat."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A felhasználónév biztonsági jogkivonatot, amely az XML-fájljából lett deszerializálva."
  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "A jogkivonat nem olvasható."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A jelszó nem egyszerű szöveges formátumú volt."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egy ismeretlen elemet talált a biztonsági jogkivonatban található, vagy a felhasználónév nem lett megadva."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  id: RetainPassword
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  name: RetainPassword
  nameWithType: UserNameSecurityTokenHandler.RetainPassword
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lekérdez vagy beállít egy értéket, amely meghatározza, hogy a jelszó lesz megőrződjön-e a rendszer-indításkori jogkivonatot, amely csatlakozik a <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> ad vissza, amely a <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*>metódus.</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken*>"
  syntax:
    content: public virtual bool RetainPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jelszót kell megőrizni a rendszer-indításkori token; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: UserNameSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lekérdezi a <xref:System.Type>a jogkivonatok, amelyek a kezelő feldolgozza.</xref:System.Type>"
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "Milyen típusú <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: UserNameSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Rendezi sorba a megadott <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref> XML-kódban."
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Az XML-író szerializálni a jogkivonat segítségével."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A token szerializálása."
  overload: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>token</code>Nincs hozzárendelhető a következőből: <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: UserNameSecurityTokenHandler()
  nameWithType: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.UserNameSecurityTokenHandler()
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: UserNameSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: UserNameSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: UserNameSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: RetainPassword
  nameWithType: UserNameSecurityTokenHandler.RetainPassword
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: UserNameSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: UserNameSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: UserNameSecurityTokenHandler
  nameWithType: UserNameSecurityTokenHandler.UserNameSecurityTokenHandler
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: UserNameSecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: UserNameSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: UserNameSecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword*
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: RetainPassword
  nameWithType: UserNameSecurityTokenHandler.RetainPassword
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: UserNameSecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: UserNameSecurityTokenHandler.WriteToken
