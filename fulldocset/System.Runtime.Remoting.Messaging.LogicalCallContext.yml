### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext
  id: LogicalCallContext
  children:
  - System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  - System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  - System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  langs:
  - csharp
  name: LogicalCallContext
  nameWithType: LogicalCallContext
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext
  type: Class
  summary: "Itt tulajdonságait, távoli hívások során a végrehajtási kód elérési úttal rendelkező tevékenységből áll."
  remarks: "A LogicalCallContext osztály egy verziója telepítve a <xref:System.Runtime.Remoting.Messaging.CallContext>módszer során használt osztály hívások távoli alkalmazástartományok.</xref:System.Runtime.Remoting.Messaging.CallContext> A <xref:System.Runtime.Remoting.Messaging.CallContext>a speciális gyűjteményobjektum egy szál metódushívások helyi tárolóhoz hasonló, és biztosít minden logikai végrehajtási szállal egyedi adatok tárolóhelye.</xref:System.Runtime.Remoting.Messaging.CallContext> A tárolóhelyek nem megosztott az más logikai szálak hívás környezetek között. Objektumok adhatók hozzá a <xref:System.Runtime.Remoting.Messaging.CallContext>választ le, illetve a hierarchiában felfelé a végrehajtási kód elérési utat, és megvizsgálta a különféle objektumok mentén az elérési út.</xref:System.Runtime.Remoting.Messaging.CallContext>       Ha egy távoli metódus kérés érkezett egy másik objektum <xref:System.AppDomain>, a <xref:System.Runtime.Remoting.Messaging.CallContext>osztály hoz létre, amely a távoli hívás együtt mozog a LogicalCallContext.</xref:System.Runtime.Remoting.Messaging.CallContext> </xref:System.AppDomain> Csak az adott teszi közzé a objektumokat a <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative>felületet, és tárolja a <xref:System.Runtime.Remoting.Messaging.CallContext>kívül továbbítódnak a <xref:System.AppDomain>a egy LogicalCallContext.</xref:System.AppDomain> </xref:System.Runtime.Remoting.Messaging.CallContext> </xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> Ez az interfész nem támogató objektumok LogicalCallContext példányok távoli metódushívások nem átvitele.      > [!NOTE] > Ez az osztály a hivatkozás lehetővé teszi. Egy SecurityException hiba miatt fordul elő, ha a közvetlen hívónak nincs engedélye infrastruktúra. Lásd: [hivatkozás iránti igények kielégítése érdekében](~/add/includes/ajax-current-ext-md.md) további információt."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class LogicalCallContext : ICloneable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  id: Clone
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: Clone()
  nameWithType: LogicalCallContext.Clone()
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Új objektumot hoz létre, amely az aktuális példány másolata."
  remarks: "A Klónozás eljárással hozható létre az aktuális <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> mély másolatát"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Új objektumot, amely ezt a példányt egy példányát."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  id: FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: FreeNamedDataSlot(String)
  nameWithType: LogicalCallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "A megadott nevű adatok tárhely kiüríti."
  syntax:
    content: public void FreeNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "Az adatok hellyel üres neve."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  id: GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: GetData(String)
  nameWithType: LogicalCallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Lekérdezi az aktuális példány a megadott név rendelt objektumot."
  syntax:
    content: public object GetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "A hívás a környezetben az elem nevét."
    return:
      type: System.Object
      description: "Az objektum a megadott névhez társított logikai hívás környezetében."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Tölti fel a megadott <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> szükség lehet, mert az aktuális adatokkal <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref>."
  remarks: "A megadott <xref:System.Runtime.Serialization.SerializationInfo>azokat az adatokat, hozza létre újra a <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> szükséges</xref:System.Runtime.Serialization.SerializationInfo> beírja az aktuális módszer       Az aktuális metódus <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> megvalósítása"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> adatokkal feltölteni."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A cél- és a szerializálásnak környezetfüggő információt."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye SerializationFormatter."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  id: HasInfo
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy az aktuális <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref> információkat tartalmaz."
  syntax:
    content: public bool HasInfo { get; }
    return:
      type: System.Boolean
      description: "Egy logikai érték, amely jelzi, hogy az aktuális <xref href=&quot;System.Runtime.Remoting.Messaging.LogicalCallContext&quot;> </xref> információkat tartalmaz."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: LogicalCallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Az aktuális példány a megadott objektum tárolja, és azt hozzárendeli a megadott névvel."
  syntax:
    content: public void SetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "Az új elem a hívás környezetben társítandó nevet."
    - id: data
      type: System.Object
      description: "Az objektum hívás környezetében tárolásához."
  overload: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: Clone()
  nameWithType: LogicalCallContext.Clone()
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone()
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: FreeNamedDataSlot(String)
  nameWithType: LogicalCallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetData(String)
  nameWithType: LogicalCallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData(String)
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: SetData(String,Object)
  nameWithType: LogicalCallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: Clone
  nameWithType: LogicalCallContext.Clone
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: FreeNamedDataSlot
  nameWithType: LogicalCallContext.FreeNamedDataSlot
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetData
  nameWithType: LogicalCallContext.GetData
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: GetObjectData
  nameWithType: LogicalCallContext.GetObjectData
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.HasInfo*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: HasInfo
  nameWithType: LogicalCallContext.HasInfo
- uid: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData*
  parent: System.Runtime.Remoting.Messaging.LogicalCallContext
  isExternal: false
  name: SetData
  nameWithType: LogicalCallContext.SetData
