### YamlMime:ManagedReference
items:
- uid: System.Net.ServicePointManager
  id: ServicePointManager
  children:
  - System.Net.ServicePointManager.CertificatePolicy
  - System.Net.ServicePointManager.CheckCertificateRevocationList
  - System.Net.ServicePointManager.DefaultConnectionLimit
  - System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  - System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  - System.Net.ServicePointManager.DnsRefreshTimeout
  - System.Net.ServicePointManager.EnableDnsRoundRobin
  - System.Net.ServicePointManager.EncryptionPolicy
  - System.Net.ServicePointManager.Expect100Continue
  - System.Net.ServicePointManager.FindServicePoint(System.Uri)
  - System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  - System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  - System.Net.ServicePointManager.MaxServicePointIdleTime
  - System.Net.ServicePointManager.MaxServicePoints
  - System.Net.ServicePointManager.ReusePort
  - System.Net.ServicePointManager.SecurityProtocol
  - System.Net.ServicePointManager.ServerCertificateValidationCallback
  - System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  - System.Net.ServicePointManager.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePointManager
  nameWithType: ServicePointManager
  fullName: System.Net.ServicePointManager
  type: Class
  summary: "Kezeli a gyűjteménye <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektumok."
  remarks: "ServicePointManager egy statikus osztály létrehozása, kezelése és az <xref:System.Net.ServicePoint>osztály</xref:System.Net.ServicePoint> példányainak törlése       Amikor egy alkalmazás kísérel meg egy Internet erőforrás egységes erőforrás-azonosító (URI) a ServicePointManager objektumon keresztül csatlakozni, adja meg a ServicePointManager egy <xref:System.Net.ServicePoint>objektum, amely tartalmazza a gazdagépről, illetve a séma URI-Azonosítóval azonosított-kapcsolódási információt.</xref:System.Net.ServicePoint> Ha egy meglévő <xref:System.Net.ServicePoint>, hogy gazdagép és a rendszer a ServicePointManager objektumot ad vissza a meglévő objektum <xref:System.Net.ServicePoint>; ellenkező esetben a ServicePointManager objektum létrehoz egy új objektumot <xref:System.Net.ServicePoint>objektum.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint>       A .NET-keretrendszer 4.6-os tartalmaz egy új biztonsági funkció, amely megakadályozza a nem biztonságos titkosítási és kivonatoló algoritmusokat kapcsolatokhoz. Alkalmazások, a TLS/SSL használatára, például HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, stb. API-k segítségével, és a .NET-keretrendszer 4.6-e állítva a biztonságosabb viselkedés alapértelmezés szerint beolvasása.       A fejlesztők szeretné ezt a viselkedést tilthatják le a meglévő SSL3 szolgáltatások vagy TLS keresztüli RC4 szolgáltatások rendelkező együttműködés megőrzése érdekében. [Ez a cikk](https://support.microsoft.com/kb/3069494) azt ismerteti, hogyan lehet módosítani a kódot, hogy az új funkció le van tiltva."
  example:
  - "The following code example creates a <xref:System.Net.ServicePoint> object for connections to the URI www.contoso.com.  \n  \n [!code-cs[Classic ServicePoint Example#1](~/add/codesnippet/csharp/t-system.net.servicepoin_1.cs)]\n [!code-cpp[Classic ServicePoint Example#1](~/add/codesnippet/cpp/t-system.net.servicepoin_1.cpp)]\n [!code-vb[Classic ServicePoint Example#1](~/add/codesnippet/visualbasic/t-system.net.servicepoin_1.vb)]"
  syntax:
    content: public class ServicePointManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.CertificatePolicy
  id: CertificatePolicy
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: System.Net.ServicePointManager.CertificatePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a kiszolgálótanúsítványok házirend."
  remarks: "Ha a CertificatePolicy tulajdonság értéke egy <xref:System.Net.ICertificatePolicy>illesztőobjektumának, a <xref:System.Net.ServicePointManager>objektum használja a tanúsítvány-házirend az alapértelmezett házirend helyett példánynak definiált.</xref:System.Net.ServicePointManager> </xref:System.Net.ICertificatePolicy>       Az alapértelmezett házirend lehetővé teszi, hogy érvényes tanúsítvány, és érvényes tanúsítványa lejárt."
  example:
  - "The following code example shows how to catch a certificate policy exception for a custom certificate policy. It assumes that the certificate policy object has been defined, that the Uniform Resource Identifier (URI) for the Web resource is contained in the variable `myUri`, and that there is a method named `ProcessResponse` that performs the work of the application.  \n  \n [!code-cpp[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/cpp/p-system.net.servicepoin_14_1.cpp)]\n [!code-cs[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/csharp/p-system.net.servicepoin_14_1.cs)]\n [!code-vb[Classic ServicePointManager.CertificatePolicy Example#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_14_1.vb)]"
  syntax:
    content: public static System.Net.ICertificatePolicy CertificatePolicy { get; set; }
    return:
      type: System.Net.ICertificatePolicy
      description: "Egy objektum, amely megvalósítja a <xref href=&quot;System.Net.ICertificatePolicy&quot;> </xref> felületet."
  overload: System.Net.ServicePointManager.CertificatePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList
  id: CheckCertificateRevocationList
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: System.Net.ServicePointManager.CheckCertificateRevocationList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a <xref:System.Boolean>érték, amely jelzi, hogy a tanúsítványt a visszavont tanúsítványok hatóság ellenőrizi.</xref:System.Boolean>"
  remarks: "Ha a CheckCertificateRevocationList van `true`, a tanúsítványt a rendszer összeveti a tanúsítvány visszavont tanúsítványok listáján, a tanúsítvány érvényesítési folyamat részeként. Az alapértelmezett érték `false`."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_13_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_13_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_13_1.cs)]"
  syntax:
    content: public static bool CheckCertificateRevocationList { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jelölőnégyzet be van jelölve a visszavont tanúsítványok listájának; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.CheckCertificateRevocationList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultConnectionLimit
  id: DefaultConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultConnectionLimit
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a által engedélyezett egyidejű kapcsolatok maximális számát egy <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum."
  remarks: "A DefaultConnectionLimit tulajdonság határozza meg az alapértelmezett az egyidejű kapcsolatok maximális számát, amely a <xref:System.Net.ServicePointManager>objektum rendel a <xref:System.Net.ServicePoint.ConnectionLimit%2A>tulajdonság létrehozásakor <xref:System.Net.ServicePoint>objektumok.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A> </xref:System.Net.ServicePointManager>       A DefaultConnectionLimit tulajdonság módosítása nem érinti a meglévő rendelkezik <xref:System.Net.ServicePoint>objektumok; is érint csak <xref:System.Net.ServicePoint>objektumokat, a módosítás utáni inicializálása.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint> Ez a tulajdonság értéke nem lett beállítva közvetlenül vagy konfiguráció, ha az alapértelmezett érték a állandó <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.</xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>      > [!NOTE] > Módosításait a DefaultConnectionLimit tulajdonság HTTP 1.0 és a HTTP 1.1 kapcsolatokat is érinti. Nincs lehetőség a külön-külön alter HTTP 1.0 és 1.1-es HTTP protokoll a kapcsolathoz megadott korlátot. Ha a környezetben használt kiszolgáló (ASP.NET) kapcsolatok, nagyobb számú DefaultConnectionLimit alapértelmezés szerint ez 10."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_8_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_8_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_8_1.cs)]"
  syntax:
    content: public static int DefaultConnectionLimit { get; set; }
    return:
      type: System.Int32
      description: "Által engedélyezett egyidejű kapcsolatok maximális számának egy <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum. Az alapértelmezett érték 2. Amikor egy alkalmazás egy ASP.NET-gazdagépként fut, nincs lehetőség a tulajdonság értékének módosítják a konfigurációs fájl segítségével, ha az automatikus konfiguráció tulajdonság értéke <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Azonban az érték módosítható programozott módon ha az automatikus konfiguráció tulajdonság <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Az alkalmazástartomány betöltésekor egyszer, állítsa be a kívánt értéket."
  overload: System.Net.ServicePointManager.DefaultConnectionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "DefaultConnectionLimit legyen nagyobb, mint 0."
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  id: DefaultNonPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultNonPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: "Az alapértelmezett nem állandó-kapcsolatok száma (4) engedélyezett egy <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum egy HTTP/1.0-s vagy újabb kiszolgáló kapcsolódik. Ez a mező konstans, de már nem szerepel a .NET-keretrendszer 2.0-s."
  syntax:
    content: public const int DefaultNonPersistentConnectionLimit = 4;
    return:
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  id: DefaultPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DefaultPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: "Az alapértelmezett állandó-kapcsolatok száma (2) engedélyezett egy <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum egy HTTP/1.1-es vagy újabb kiszolgáló kapcsolódik. Ez a mező konstans és inicializáló a <> </> *> tulajdonság Ha értékének a <> </> *> tulajdonság még nincs beállítva, vagy közvetlenül konfigurálással."
  remarks: ''
  example:
  - "The following code example sets the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property using this field.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/f-system.net.servicepoin_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/f-system.net.servicepoin_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/f-system.net.servicepoin_1.cs)]"
  syntax:
    content: public const int DefaultPersistentConnectionLimit = 2;
    return:
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.DnsRefreshTimeout
  id: DnsRefreshTimeout
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: System.Net.ServicePointManager.DnsRefreshTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy mennyi ideig egy tartománynév-szolgáltatás (DNS) névfeloldási érvényes."
  remarks: ''
  example:
  - "The following code example sets this property.  \n  \n [!code-vb[System.Net.ServicePointWhidbey#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_21_1.vb)]\n [!code-cpp[System.Net.ServicePointWhidbey#1](~/add/codesnippet/cpp/p-system.net.servicepoin_21_1.cpp)]\n [!code-cs[System.Net.ServicePointWhidbey#1](~/add/codesnippet/csharp/p-system.net.servicepoin_21_1.cs)]"
  syntax:
    content: public static int DnsRefreshTimeout { get; set; }
    return:
      type: System.Int32
      description: "Az időtúllépési érték ezredmásodpercben. A -1 érték azt jelzi, hogy egy végtelen időtúllépés. Az alapértelmezett értéke 120 000 ezredmásodperc (két perc)."
  overload: System.Net.ServicePointManager.DnsRefreshTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin
  id: EnableDnsRoundRobin
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: System.Net.ServicePointManager.EnableDnsRoundRobin
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a tartománynév-szolgáltatás (DNS) névfeloldási között a megfelelő Internet Protocol (IP) címet forog."
  remarks: "Ha egynél több IP-cím társítva egy állomásnevet, egy DNS-feloldás, az általában csak az első IP-címet adja vissza. Ha ez a tulajdonság `true`, akkor további DNS-megoldások fog Váltás az összes elérhető IP-címek egy adott gazdagép. Ez a beállítás akkor hasznos, ha a szolgáltatás DNS-Kiszolgálókat használ egy terheléselosztási mechanizmus kiszolgálók vagy fürt között."
  example:
  - "The following code example sets this property.  \n  \n [!code-vb[System.Net.ServicePointWhidbey#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_17_1.vb)]\n [!code-cpp[System.Net.ServicePointWhidbey#1](~/add/codesnippet/cpp/p-system.net.servicepoin_17_1.cpp)]\n [!code-cs[System.Net.ServicePointWhidbey#1](~/add/codesnippet/csharp/p-system.net.servicepoin_17_1.cs)]"
  syntax:
    content: public static bool EnableDnsRoundRobin { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Ha egy DNS-feloldás mindig adja meg az első IP-cím ahhoz, hogy egy adott gazdagép; Ellenkező esetben <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.EnableDnsRoundRobin*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.EncryptionPolicy
  id: EncryptionPolicy
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: System.Net.ServicePointManager.EncryptionPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;> </xref> a <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> példány."
  remarks: "Ha az érték nincs megadva a konfigurációs fájlban, a EncryptionPolicy tulajdonság alapértelmezett <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> Ez egy SSL/TLS-munkamenet a alkalmazott <xref:System.Net.ServicePointManager>példány.</xref:System.Net.ServicePointManager>       A Null titkosítás használata esetén szükséges <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> a titkosítási házirend beállítása"
  syntax:
    content: public static System.Net.Security.EncryptionPolicy EncryptionPolicy { get; }
    return:
      type: System.Net.Security.EncryptionPolicy
      description: "A titkosítás-házirendet a <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> példány."
  overload: System.Net.ServicePointManager.EncryptionPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.Expect100Continue
  id: Expect100Continue
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: System.Net.ServicePointManager.Expect100Continue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a <xref:System.Boolean>érték, amely meghatározza, hogy 100-továbbra is viselkedés szolgál.</xref:System.Boolean>"
  remarks: "Ha ez a tulajdonság értéke `true`, 100 – továbbra is viselkedés szolgál. Ügyfél kéri, hogy használja a `PUT` és `POST` módszerek adja hozzá egy várt fejlécet a kérelem a Expect100Continue tulajdonság esetén `true` és <xref:System.Net.HttpWebRequest.ContentLength%2A>tulajdonság értéke csak nullánál nagyobb vagy a <xref:System.Net.HttpWebRequest.SendChunked%2A>tulajdonság értéke igaz.</xref:System.Net.HttpWebRequest.SendChunked%2A> </xref:System.Net.HttpWebRequest.ContentLength%2A> Az ügyfél fogja számít a 100-továbbra is jelzi, hogy az ügyfél küldi az adatokat, hogy a program a kiszolgáló válaszát. Ez a módszer lehetővé teszi az ügyfelek nagy mennyiségű adat küldése a hálózaton keresztül, ha a kiszolgáló, a kérelem fejlécében alapján kívánja a kérelem elutasítása elkerülése érdekében.       Tegyük fel például, a Expect100Continue tulajdonság `false`. A kérelem a kiszolgálóra küldött, az adatokat tartalmazza. Ha elolvasása kérelemfejléc, után a kiszolgáló hitelesítést igényel, és kell küldenie a 401-es választ, az ügyfél kell küldje el újra az adatokat a megfelelő hitelesítési fejléc.       Ha ez a tulajdonság `true`, a kérelem fejlécében a kiszolgálónak küldött. Ha a kiszolgáló nem elutasította a kérelmet, küld egy 100-válasz jelzés, hogy az adatok továbbítani lehet folytatni. Ha az előző példában szemléltetett a kiszolgáló hitelesítést igényel, a 401-es választ küldi el, és az ügyfél nem feleslegesen továbbított adatokat.       Ez a tulajdonság értékének módosítása nem érinti meglévő <xref:System.Net.ServicePoint>objektumok.</xref:System.Net.ServicePoint> Csak az új <xref:System.Net.ServicePoint>után a változás létrehozni objektumot is érint.</xref:System.Net.ServicePoint>       A 100-továbbra is a viselkedés nem használják-e HTTP 1.0 kérelmek akkor is, ha ez a tulajdonság értéke `true`.       A várt 100-viselkedés teljesen 10.1.1 IETF RFC 2616 szakaszban leírt folytatni."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_12_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_12_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_12_1.cs)]"
  syntax:
    content: public static bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ahhoz, hogy 100-továbbra is viselkedését. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.Expect100Continue*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)
  id: FindServicePoint(System.Uri)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(Uri)
  nameWithType: ServicePointManager.FindServicePoint(Uri)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Megállapítja, hogy egy meglévő <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektumot, vagy létrehoz egy új <xref href=&quot;System.Net.ServicePoint&quot;> </xref> kezeléséhez és a megadott kommunikációs objektum <xref:System.Uri>objektum.</xref:System.Uri>"
  remarks: "A FindServicePoint metódus visszaadja a <xref:System.Net.ServicePoint>a megadott Internet-állomásnevet rendelt objektumot.</xref:System.Net.ServicePoint> Ha nincs <xref:System.Net.ServicePoint>objektum létezik-e az adott gazdagép, a <xref:System.Net.ServicePointManager>objektum létrehoz egy.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: "A <xref:System.Uri>objektum az Internet erőforrás kapcsolódni.</xref:System.Uri>"
    return:
      type: System.Net.ServicePoint
      description: "A <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum, amely kezeli a kommunikációt a kérelemhez."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A maximális száma <xref href=&quot;System.Net.ServicePoint&quot;> </xref> meghatározott objektumok <xref:System.Net.ServicePointManager.MaxServicePoints*>el lett érve.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  id: FindServicePoint(System.String,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(String,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(String,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(String,IWebProxy)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Megállapítja, hogy egy meglévő <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektumot, vagy létrehoz egy új <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum és a megadott egységes erőforrás-azonosító (URI) kommunikáció felügyeletét."
  remarks: "A <xref:System.Net.ServicePointManager.FindServicePoint%2A>metódus értéket ad vissza a <xref:System.Net.ServicePoint>a megadott Internet-állomásnevet rendelt objektumot.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.FindServicePoint%2A> Ha nincs <xref:System.Net.ServicePoint>objektum létezik-e az adott gazdagép, a <xref:System.Net.ServicePointManager>objektum létrehoz egy.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example demonstrates calling this method to access a <xref:System.Net.ServicePoint> object.  \n  \n [!code-cpp[System.Net.ServicePoint#7](~/add/codesnippet/cpp/2fec5056-1106-4a0b-b9b3-_1.cpp)]\n [!code-vb[System.Net.ServicePoint#7](~/add/codesnippet/visualbasic/2fec5056-1106-4a0b-b9b3-_1.vb)]\n [!code-cs[System.Net.ServicePoint#7](~/add/codesnippet/csharp/2fec5056-1106-4a0b-b9b3-_1.cs)]"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (string uriString, System.Net.IWebProxy proxy);
    parameters:
    - id: uriString
      type: System.String
      description: "Az internetes erőforrás URI lehet kapcsolatot létesíteni."
    - id: proxy
      type: System.Net.IWebProxy
      description: "A kérelem a proxy adatait."
    return:
      type: System.Net.ServicePoint
      description: "A <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum, amely kezeli a kommunikációt a kérelemhez."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "A megadott URI <code> uriString </code> érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A maximális száma <xref href=&quot;System.Net.ServicePoint&quot;> </xref> meghatározott objektumok <xref:System.Net.ServicePointManager.MaxServicePoints*>el lett érve.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  id: FindServicePoint(System.Uri,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: FindServicePoint(Uri,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(Uri,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri,IWebProxy)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Megállapítja, hogy egy meglévő <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektumot, vagy létrehoz egy új <xref href=&quot;System.Net.ServicePoint&quot;> </xref> kezeléséhez és a megadott kommunikációs objektum <xref:System.Uri>objektum.</xref:System.Uri>"
  remarks: "A <xref:System.Net.ServicePointManager.FindServicePoint%2A>metódus értéket ad vissza a <xref:System.Net.ServicePoint>a megadott Internet-állomásnevet rendelt objektumot.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.FindServicePoint%2A> Ha nincs <xref:System.Net.ServicePoint>objektum létezik-e az adott gazdagép, a <xref:System.Net.ServicePointManager>objektum létrehoz egy.</xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  syntax:
    content: public static System.Net.ServicePoint FindServicePoint (Uri address, System.Net.IWebProxy proxy);
    parameters:
    - id: address
      type: System.Uri
      description: "A <xref:System.Uri>objektum, amely tartalmazza a címet az Internet erőforrás kapcsolódni.</xref:System.Uri>"
    - id: proxy
      type: System.Net.IWebProxy
      description: "A kérelem a proxy adatait."
    return:
      type: System.Net.ServicePoint
      description: "A <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum, amely kezeli a kommunikációt a kérelemhez."
  overload: System.Net.ServicePointManager.FindServicePoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A maximális száma <xref href=&quot;System.Net.ServicePoint&quot;> </xref> meghatározott objektumok <xref:System.Net.ServicePointManager.MaxServicePoints*>el lett érve.</xref:System.Net.ServicePointManager.MaxServicePoints*>"
  platform:
  - net462
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime
  id: MaxServicePointIdleTime
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: System.Net.ServicePointManager.MaxServicePointIdleTime
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja azt a maximális üresjárati ideje egy <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum."
  remarks: "A MaxServicePointIdleTime tulajdonság határozza meg a maximális üresjárati időt, amely a <xref:System.Net.ServicePointManager>objektum rendel a <xref:System.Net.ServicePoint.MaxIdleTime%2A>tulajdonság létrehozásakor <xref:System.Net.ServicePoint>objektumok.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePointManager> Ez az érték módosítása hatással csak <xref:System.Net.ServicePoint>objektumok, hogy az érték módosítása után a rendszer inicializálja.</xref:System.Net.ServicePoint>       Után egy <xref:System.Net.ServicePoint>objektum a megadott ideig üresjáratban <xref:System.Net.ServicePoint.MaxIdleTime%2A>, akkor abban az esetben jogosult a szemétgyűjtés.</xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePoint> A <xref:System.Net.ServicePoint>objektum esetén tétlen kapcsolatok listájának társított a <xref:System.Net.ServicePoint>objektum értéke üres.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#8](~/add/codesnippet/cpp/p-system.net.servicepoin_5_1.cpp)]\n [!code-vb[System.Net.ServicePoint#8](~/add/codesnippet/visualbasic/p-system.net.servicepoin_5_1.vb)]\n [!code-cs[System.Net.ServicePoint#8](~/add/codesnippet/csharp/p-system.net.servicepoin_5_1.cs)]"
  syntax:
    content: public static int MaxServicePointIdleTime { get; set; }
    return:
      type: System.Int32
      description: "A maximális üresjárati idő, ezredmásodpercben megadva, az egy <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektum. Az alapértelmezett érték 100 000 ezredmásodperc (100 másodperc)."
  overload: System.Net.ServicePointManager.MaxServicePointIdleTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxServicePointIdleTime értéke kisebb, mint &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; vagy nagyobb, mint &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePointManager.MaxServicePoints
  id: MaxServicePoints
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: System.Net.ServicePointManager.MaxServicePoints
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja azt a maximális számának <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektumok bármikor fenntartásához."
  remarks: "Ha csökkenti a MaxServicePoints tulajdonság száma alább <xref:System.Net.ServicePoint>objektumok jelenleg érvényben, a <xref:System.Net.ServicePointManager>törli a <xref:System.Net.ServicePoint>objektumok a leghosszabb üresjárati idő feltüntetésével.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint> Ha a száma <xref:System.Net.ServicePoint>aktív kapcsolatok objektumok érték nagyobb, mint MaxServicePoints, értékét a <xref:System.Net.ServicePointManager>objektum törlése a <xref:System.Net.ServicePoint>objektumokat, amint azok üresjárati válnak.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager> </xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#8](~/add/codesnippet/cpp/p-system.net.servicepoin_10_1.cpp)]\n [!code-vb[System.Net.ServicePoint#8](~/add/codesnippet/visualbasic/p-system.net.servicepoin_10_1.vb)]\n [!code-cs[System.Net.ServicePoint#8](~/add/codesnippet/csharp/p-system.net.servicepoin_10_1.cs)]"
  syntax:
    content: public static int MaxServicePoints { get; set; }
    return:
      type: System.Int32
      description: "A maximális száma <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektumok fenntartásához. Az alapértelmezett érték: 0, ami azt jelenti, hogy száma nincs korlátozva <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objektumok."
  overload: System.Net.ServicePointManager.MaxServicePoints*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxServicePoints értéke kisebb, mint 0 vagy nagyobb, mint &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePointManager.ReusePort
  id: ReusePort
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: System.Net.ServicePointManager.ReusePort
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Az érték a tulajdonság <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> feldolgozza az összes kimenő TCP-kapcsolatok a natív szoftvercsatorna-beállítás SO_REUSE_UNICASTPORT használata a szoftvercsatornán HttpWebRequest. Ez azt eredményezi, hogy az alapul szolgáló kimenő portok megosztását. Ez akkor hasznos, ahol nagyszámú kimenő kapcsolatok végzett rövid időn belül, és kevés portok app kockázatokat forgatókönyvek."
  remarks: "Az alapértelmezett érték `false`."
  syntax:
    content: public static bool ReusePort { get; set; }
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>.</xref:System.Boolean> Beolvasása"
  overload: System.Net.ServicePointManager.ReusePort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.SecurityProtocol
  id: SecurityProtocol
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: System.Net.ServicePointManager.SecurityProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a által használt biztonsági protokollt a <xref href=&quot;System.Net.ServicePoint&quot;> </xref> által felügyelt objektumok a <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> objektum."
  remarks: "Ezt a tulajdonságot választja ki a Secure Sockets Layer (SSL) vagy Transport Layer Security (TLS) protokoll használatára csak; a Secure Hypertext Transfer Protocol (HTTPS) protokollt használó új kapcsolatok verziója meglévő kapcsolatokat, nem módosulnak.       Vegye figyelembe, hogy nincs alapértelmezett érték szerepel a tulajdonság szándékosan. A biztonsági fekvő folyamatosan változik, és az alapértelmezett protokollok és a védelmi szintek ismert gyenge elkerülése érdekében adott idő alatt megváltoztak. Alapértelmezett egyéni gépkonfiguráció függenek, és melyik szoftver telepítve van, és amelyen javítások vannak érvényben.       A kód soha nem implicit módon kell függenek, egy adott védelmi szint használatával, vagy azt feltételezi, hogy egy adott biztonsági szint alapértelmezés szerint használt. Ha az alkalmazás használatát egy adott biztonsági szint függ, akkor explicit módon adja meg, amely szintnek, és ellenőrizze, hogy ne feledje, hogy valójában a kapcsolat használatban. További a kódot kell állásuk protokollt támogatják módosítások hatékony kell tervezni, azonosítja, gyakran módosításai kevés előzetes értesítést a felmerülő veszélyek mérséklése érdekében.       A .NET-keretrendszer 4.6-os tartalmaz egy új biztonsági funkció, amely megakadályozza a nem biztonságos titkosítási és kivonatoló algoritmusokat kapcsolatokhoz. Alkalmazások, a TLS/SSL használatára, például HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, stb. API-k segítségével, és a .NET-keretrendszer 4.6-e állítva a biztonságosabb viselkedés alapértelmezés szerint beolvasása.       A fejlesztők szeretné ezt a viselkedést tilthatják le a meglévő SSL3 szolgáltatások vagy TLS keresztüli RC4 szolgáltatások rendelkező együttműködés megőrzése érdekében. [Ez a cikk](https://support.microsoft.com/kb/3069494) azt ismerteti, hogyan lehet módosítani a kódot, hogy az új funkció le van tiltva."
  syntax:
    content: public static System.Net.SecurityProtocolType SecurityProtocol { get; set; }
    return:
      type: System.Net.SecurityProtocolType
      description: "Egy meghatározott értéket a <xref href=&quot;System.Net.SecurityProtocolType&quot;> </xref> enumerálása."
  overload: System.Net.ServicePointManager.SecurityProtocol*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A tulajdonság beállítása a megadott érték nem érvényes <xref href=&quot;System.Net.SecurityProtocolType&quot;> </xref> számbavételi érték."
  platform:
  - net462
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback
  id: ServerCertificateValidationCallback
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: System.Net.ServicePointManager.ServerCertificateValidationCallback
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a visszahívás egy kiszolgálói tanúsítvány érvényesítéséhez."
  remarks: "Az alkalmazás beállíthatja a ServerCertificateValidationCallback tulajdonság az ügyfél által a tanúsítvány egyéni érvényesítési használandó metódusra. Egyéni ellenőrzés során a `sender` paramétert a <xref:System.Net.Security.RemoteCertificateValidationCallback>lehet egy karakterlánc-nevet, vagy abból származtatott objektum <xref:System.Net.WebRequest>(<xref:System.Net.HttpWebRequest>, például) függően a <xref:System.Net.ServicePointManager.CertificatePolicy%2A>tulajdonság.</xref:System.Net.ServicePointManager.CertificatePolicy%2A> </xref:System.Net.HttpWebRequest> </xref:System.Net.WebRequest> </xref:System.Net.Security.RemoteCertificateValidationCallback>       Egyéni érvényesítési nem használatos, ha a tanúsítvány neve összeveti a kérelem létrehozásához használt állomásnevet. Például ha <xref:System.Net.WebRequest.Create%28System.String%29>paraméter lett átadva a &quot;https://www.contoso.com/default.hmtl&quot;, az alapértelmezett viselkedés van az ügyfél ellenőrizze a tanúsítvány www.contoso.com.</xref:System.Net.WebRequest.Create%28System.String%29>"
  syntax:
    content: public static System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }
    return:
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;></xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.ServerCertificateValidationCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Engedélyezheti vagy letilthatja a életben tartási lehetőséget, a TCP-kapcsolat."
  remarks: "Egy alkalmazás kérheti, hogy a TCP/IP-szolgáltató életben tartási csomagok, a TCP-kapcsolat használatának engedélyezése. Az alapértelmezett érték, hogy a TCP-kapcsolatot a életben tartási csomagok használata le van tiltva.       Az alapértelmezett beállításokat, ha a TCP-szoftvercsatorna inicializálva 2 óra időkorlát beállítása a életben tartási és a életben tartási időköze 1 másodperc. A `keepAliveTime` paraméter adja meg az időtúllépés tevékenység nélküli, amíg az első életben tartási csomag küldése történik. A `keepAliveInterval` paraméter határozza meg a időköz ezredmásodpercben közötti egymást követő életben tartási csomagok elküldése ha nyugtázás nélkül érkezett. Életben tartási mintavételt száma nem módosítható, és a 10 értékre van állítva.       A TCP-kapcsolat megszakadása miatt keep-alive, egy <xref:System.Net.Sockets.SocketError>a <xref:System.Net.Sockets.SocketError>minden folyamatban lévő hívások küld vissza a szoftvercsatornán, és bármely ezt követő hívások sikertelen lesz, és egy <xref:System.Net.Sockets.SocketError> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public static void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "Ha igaz, majd a TCP életben tartási lehetőséget, a TCP-kapcsolat beállítása engedélyezve lesz a megadott használatával `keepAliveTime` és `keepAliveInterval` értékeket.       Ha értéke HAMIS, majd a TCP életben tartási lehetőség le van tiltva, és figyelmen kívül hagyja a további paramétereit.       Az alapértelmezett értéke hamis."
    - id: keepAliveTime
      type: System.Int32
      description: "Adja meg az időtúllépés tevékenység nélküli, amíg az első életben tartási csomag küldése történik.       Az érték 0-nál nagyobbnak kell lennie.  Ha értéke kisebb vagy egyenlő nulla átadása egy <xref:System.ArgumentOutOfRangeException>vált ki.</xref:System.ArgumentOutOfRangeException>"
    - id: keepAliveInterval
      type: System.Int32
      description: "A ezredmásodpercben közötti időköz egymást követő életben tartási csomagok elküldése ha nyugtázás nélkül érkezett.       Az érték 0-nál nagyobbnak kell lennie.  Ha értéke kisebb vagy egyenlő nulla átadása egy <xref:System.ArgumentOutOfRangeException>vált ki.</xref:System.ArgumentOutOfRangeException>"
  overload: System.Net.ServicePointManager.SetTcpKeepAlive*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott <code> keepAliveTime </code> vagy <code> keepAliveInterval </code> paraméter értéke kisebb vagy egyenlő, mint 0."
  platform:
  - net462
- uid: System.Net.ServicePointManager.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.ServicePointManager
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: System.Net.ServicePointManager.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Meghatározza, hogy a Nagle algoritmus használja a szolgáltatási pontok által a felügyelt <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> objektum."
  remarks: "Kis adatcsomagok pufferelés és egy csomagban mint küldő által a hálózati forgalom csökkentése érdekében a Nagle algoritmust használnak. Ez a folyamat más néven a &quot;nagling&quot;; széles körben használatos, mivel csökkenti a továbbított csomagok száma, és csökkenti a terhelés csomagonként.       Ez a tulajdonság értékének módosítása nem érinti meglévő <xref:System.Net.ServicePoint>objektumok.</xref:System.Net.ServicePoint> Csak új szolgáltatási pontok után a változás létrehozni vannak hatással.       A Nagle algoritmus IETF RFC 896 teljes leírását."
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[System.Net.ServicePoint#10](~/add/codesnippet/cpp/p-system.net.servicepoin_20_1.cpp)]\n [!code-vb[System.Net.ServicePoint#10](~/add/codesnippet/visualbasic/p-system.net.servicepoin_20_1.vb)]\n [!code-cs[System.Net.ServicePoint#10](~/add/codesnippet/csharp/p-system.net.servicepoin_20_1.cs)]"
  syntax:
    content: public static bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>– a Nagle algoritmus; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePointManager.UseNagleAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.ServicePointManager.CertificatePolicy
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
  fullName: System.Net.ServicePointManager.CertificatePolicy
- uid: System.Net.ICertificatePolicy
  parent: System.Net
  isExternal: false
  name: ICertificatePolicy
  nameWithType: ICertificatePolicy
  fullName: System.Net.ICertificatePolicy
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
  fullName: System.Net.ServicePointManager.CheckCertificateRevocationList
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.ServicePointManager.DefaultConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultConnectionLimit
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultNonPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit
- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultPersistentConnectionLimit
  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit
  fullName: System.Net.ServicePointManager.DefaultPersistentConnectionLimit
- uid: System.Net.ServicePointManager.DnsRefreshTimeout
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
  fullName: System.Net.ServicePointManager.DnsRefreshTimeout
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
  fullName: System.Net.ServicePointManager.EnableDnsRoundRobin
- uid: System.Net.ServicePointManager.EncryptionPolicy
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
  fullName: System.Net.ServicePointManager.EncryptionPolicy
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.ServicePointManager.Expect100Continue
  parent: System.Net.ServicePointManager
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
  fullName: System.Net.ServicePointManager.Expect100Continue
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(Uri)
  nameWithType: ServicePointManager.FindServicePoint(Uri)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri)
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(String,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(String,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(String,IWebProxy)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint(Uri,IWebProxy)
  nameWithType: ServicePointManager.FindServicePoint(Uri,IWebProxy)
  fullName: System.Net.ServicePointManager.FindServicePoint(Uri,IWebProxy)
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
  fullName: System.Net.ServicePointManager.MaxServicePointIdleTime
- uid: System.Net.ServicePointManager.MaxServicePoints
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
  fullName: System.Net.ServicePointManager.MaxServicePoints
- uid: System.Net.ServicePointManager.ReusePort
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
  fullName: System.Net.ServicePointManager.ReusePort
- uid: System.Net.ServicePointManager.SecurityProtocol
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
  fullName: System.Net.ServicePointManager.SecurityProtocol
- uid: System.Net.SecurityProtocolType
  parent: System.Net
  isExternal: false
  name: SecurityProtocolType
  nameWithType: SecurityProtocolType
  fullName: System.Net.SecurityProtocolType
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
  fullName: System.Net.ServicePointManager.ServerCertificateValidationCallback
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePointManager.SetTcpKeepAlive(Boolean,Int32,Int32)
- uid: System.Net.ServicePointManager.UseNagleAlgorithm
  parent: System.Net.ServicePointManager
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
  fullName: System.Net.ServicePointManager.UseNagleAlgorithm
- uid: System.Net.ServicePointManager.CertificatePolicy*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CertificatePolicy
  nameWithType: ServicePointManager.CertificatePolicy
- uid: System.Net.ServicePointManager.CheckCertificateRevocationList*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManager.CheckCertificateRevocationList
- uid: System.Net.ServicePointManager.DefaultConnectionLimit*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DefaultConnectionLimit
  nameWithType: ServicePointManager.DefaultConnectionLimit
- uid: System.Net.ServicePointManager.DnsRefreshTimeout*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManager.DnsRefreshTimeout
- uid: System.Net.ServicePointManager.EnableDnsRoundRobin*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManager.EnableDnsRoundRobin
- uid: System.Net.ServicePointManager.EncryptionPolicy*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManager.EncryptionPolicy
- uid: System.Net.ServicePointManager.Expect100Continue*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManager.Expect100Continue
- uid: System.Net.ServicePointManager.FindServicePoint*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: FindServicePoint
  nameWithType: ServicePointManager.FindServicePoint
- uid: System.Net.ServicePointManager.MaxServicePointIdleTime*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePointIdleTime
  nameWithType: ServicePointManager.MaxServicePointIdleTime
- uid: System.Net.ServicePointManager.MaxServicePoints*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: MaxServicePoints
  nameWithType: ServicePointManager.MaxServicePoints
- uid: System.Net.ServicePointManager.ReusePort*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ReusePort
  nameWithType: ServicePointManager.ReusePort
- uid: System.Net.ServicePointManager.SecurityProtocol*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SecurityProtocol
  nameWithType: ServicePointManager.SecurityProtocol
- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: ServicePointManager.ServerCertificateValidationCallback
- uid: System.Net.ServicePointManager.SetTcpKeepAlive*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: SetTcpKeepAlive
  nameWithType: ServicePointManager.SetTcpKeepAlive
- uid: System.Net.ServicePointManager.UseNagleAlgorithm*
  parent: System.Net.ServicePointManager
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManager.UseNagleAlgorithm
