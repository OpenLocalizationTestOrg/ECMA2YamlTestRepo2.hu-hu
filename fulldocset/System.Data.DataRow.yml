### YamlMime:ManagedReference
items:
- uid: System.Data.DataRow
  id: DataRow
  children:
  - System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  - System.Data.DataRow.AcceptChanges
  - System.Data.DataRow.BeginEdit
  - System.Data.DataRow.CancelEdit
  - System.Data.DataRow.ClearErrors
  - System.Data.DataRow.Delete
  - System.Data.DataRow.EndEdit
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  - System.Data.DataRow.GetChildRows(System.String)
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  - System.Data.DataRow.GetColumnError(System.Int32)
  - System.Data.DataRow.GetColumnError(System.String)
  - System.Data.DataRow.GetColumnsInError
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRow(System.String)
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRows(System.String)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.HasErrors
  - System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  - System.Data.DataRow.IsNull(System.Data.DataColumn)
  - System.Data.DataRow.IsNull(System.Int32)
  - System.Data.DataRow.IsNull(System.String)
  - System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Data.DataColumn)
  - System.Data.DataRow.Item(System.Int32)
  - System.Data.DataRow.Item(System.String)
  - System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.ItemArray
  - System.Data.DataRow.RejectChanges
  - System.Data.DataRow.RowError
  - System.Data.DataRow.RowState
  - System.Data.DataRow.SetAdded
  - System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  - System.Data.DataRow.SetColumnError(System.Int32,System.String)
  - System.Data.DataRow.SetColumnError(System.String,System.String)
  - System.Data.DataRow.SetModified
  - System.Data.DataRow.SetNull(System.Data.DataColumn)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  - System.Data.DataRow.Table
  langs:
  - csharp
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
  type: Class
  summary: "Egy soraiban levő adatok jelöli egy <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "A DataRow, és <xref:System.Data.DataColumn>objektumok <xref:System.Data.DataTable>.</xref:System.Data.DataTable> elsődleges összetevői</xref:System.Data.DataColumn> A DataRow objektum és a tulajdonságai és metódusai segítségével kérje le, majd kiértékelheti; insert, törlése és frissítse az értékeket a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> A <xref:System.Data.DataRowCollection>jelenti. az aktuális DataRow objektumokat a <xref:System.Data.DataTable>, és <xref:System.Data.DataColumnCollection>tartalmazza az <xref:System.Data.DataColumn>objektumok, amelyek ismertetik a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sémája</xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection> A túlterhelt <xref:System.Data.DataRow.Item%2A>adja vissza, vagy állítsa be a <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> tulajdonság</xref:System.Data.DataRow.Item%2A>       A <xref:System.Data.DataRow.HasVersion%2A>és a <xref:System.Data.DataRow.IsNull%2A>Tulajdonságok sorok értéket, és a <xref:System.Data.DataRow.RowState%2A>tulajdonság a szülő <xref:System.Data.DataTable>.</xref:System.Data.DataTable> viszonyítva sor állapotának megállapítása</xref:System.Data.DataRow.RowState%2A> állapotának megállapítása</xref:System.Data.DataRow.IsNull%2A> </xref:System.Data.DataRow.HasVersion%2A>       Új DataRow létrehozásához használja a <xref:System.Data.DataTable.NewRow%2A>metódusában a <xref:System.Data.DataTable>objektum.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> Miután létrehozta az új DataRow, a <xref:System.Data.DataRowCollection.Add%2A>adható hozzá az új DataRow az <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Add%2A> használatát Végezetül hívja a <xref:System.Data.DataRow.AcceptChanges%2A>metódusában a <xref:System.Data.DataTable>objektum hozzáadásának megerősítéséhez.</xref:System.Data.DataTable> </xref:System.Data.DataRow.AcceptChanges%2A> Az adatok hozzáadásáról további információkat a <xref:System.Data.DataTable>, lásd: [adatok hozzáadása a DataTable adattábla](~/add/includes/ajax-current-ext-md.md).</xref:System.Data.DataTable>       Az olyan DataRow törlése a <xref:System.Data.DataRowCollection>meghívásával a <xref:System.Data.DataRowCollection.Remove%2A>metódusában a <xref:System.Data.DataRowCollection>, vagy meghívásával a <xref:System.Data.DataRow.Delete%2A>DataRow metódusa.</xref:System.Data.DataRow.Delete%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection> A <xref:System.Data.DataRowCollection.Remove%2A>metódus eltávolítja a sort a gyűjteményből.</xref:System.Data.DataRowCollection.Remove%2A> Ezzel szemben <xref:System.Data.DataRow.Delete%2A>jelöli meg a DataRow eltávolítása.</xref:System.Data.DataRow.Delete%2A> Tényleges eltávolítása akkor fordul elő, ha meghívja a <xref:System.Data.DataRow.AcceptChanges%2A>metódus.</xref:System.Data.DataRow.AcceptChanges%2A> Meghívásával <xref:System.Data.DataRow.Delete%2A>, hogy programozott módon ellenőrizze, hogy mely sorai vannak megjelölve az eltávolítás előtt tényleges törlése.</xref:System.Data.DataRow.Delete%2A> További információkért lásd: [DataRow törlési](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a new DataRow by calling the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.  \n  \n [!code-vb[Classic WebData DataRow Example#1](~/add/codesnippet/visualbasic/t-system.data.datarow_1.vb)]\n [!code-cs[Classic WebData DataRow Example#1](~/add/codesnippet/csharp/t-system.data.datarow_1.cs)]"
  syntax:
    content: public class DataRow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  id: '#ctor(System.Data.DataRowBuilder)'
  parent: System.Data.DataRow
  langs:
  - csharp
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A DataRow egy új példányát inicializálja. Egy sor a a jelentéskészítő hoz létre. Csak a belső használatra."
  syntax:
    content: protected DataRow (System.Data.DataRowBuilder builder);
    parameters:
    - id: builder
      type: System.Data.DataRowBuilder
      description: "Jelentéskészítő"
  overload: System.Data.DataRow.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.AcceptChanges
  id: AcceptChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Minden, az ezt a sort az AcceptChanges metódus végrehajtása meg lett hívva legutóbbi indítása óta végrehajtott módosítások véglegesítése."
  remarks: "Az AcceptChanges metódus végrehajtása, hívásakor a <xref:System.Data.DataRow.EndEdit%2A>metódus implicit módon nevezik végére végzett módosításokat.</xref:System.Data.DataRow.EndEdit%2A> Ha a <xref:System.Data.DataRow.RowState%2A>a sor a hozzáadott vagy módosított volt a <xref:System.Data.DataRow.RowState%2A>válik Unchanged.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Ha a <xref:System.Data.DataRow.RowState%2A>lett törölve, a sort a rendszer eltávolítja.</xref:System.Data.DataRow.RowState%2A>       Tekintse meg a <xref:System.Data.DataRow.BeginEdit%2A>metódus további információt.</xref:System.Data.DataRow.BeginEdit%2A>       A <xref:System.Data.DataTable>osztály is rendelkezik egy <xref:System.Data.DataTable.AcceptChanges%2A>metódus, amely hatással van az egész tábla módosításai.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataTable> További információt és bemutatja, hogyan kell az egyes adatsorok változások elfogadása vagy elutasítása kódrészlet például: [az AcceptChanges metódus végrehajtása és RejectChanges](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState%2A> is printed.  \n  \n [!code-cs[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ac_1.cs)]\n [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ac_1.vb)]"
  syntax:
    content: public void AcceptChanges ();
    parameters: []
  overload: System.Data.DataRow.AcceptChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  platform:
  - net462
- uid: System.Data.DataRow.BeginEdit
  id: BeginEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Az alkalmazásszerkesztési művelet elindítja egy <xref href=&quot;System.Data.DataRow&quot;> </xref> objektum."
  remarks: "Használja a BeginEdit metódust kell állítania egy <xref:System.Data.DataRow>szerkesztési módba.</xref:System.Data.DataRow> Ebben a módban események ideiglenesen fel vannak függesztve, ha engedélyezi, hogy a felhasználó egynél több sor módosításokat ellenőrzési szabályok elindítása nélkül. Például ha győződjön meg arról, hogy a teljes összeg oszlop értéke megegyezik a tartozik értékeit, és egy sor oszlopai credit, helyezhet el minden egyes sorára sorértékeiből érvényesítési felfüggesztése mindaddig, amíg a felhasználó megpróbál az értékek véglegesítése szerkesztési módba.       A BeginEdit módszer neve implicit módon; adathoz kötött vezérlő értékének megváltozásakor a <xref:System.Data.DataRow.EndEdit%2A>metódus meghívásakor implicit módon lehívásra kerül a <xref:System.Data.DataTable.AcceptChanges%2A>módszer a <xref:System.Data.DataTable>objektum.</xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> A szerkesztési módban, a <xref:System.Data.DataRow>tárolja az eredeti és az új ábrázolásai javasolt értékek.</xref:System.Data.DataRow> Ezért, amíg a <xref:System.Data.DataRow.EndEdit%2A>metódus nem lett meghívva, visszaállíthatja az eredeti vagy javasolt verzió is úgy, hogy vagy `DataRowVersion.Original` vagy `DataRowVersion.Proposed` a a `version` paramétere a <xref:System.Data.DataRow.Item%2A>tulajdonság.</xref:System.Data.DataRow.Item%2A> </xref:System.Data.DataRow.EndEdit%2A> Ezen a ponton végzett módosításokat szakítsa meg hogy a <xref:System.Data.DataRow.CancelEdit%2A>metódus.</xref:System.Data.DataRow.CancelEdit%2A>       Tekintse meg, hogy a sor tartalmazza az eredeti vagy a javasolt értéket, hívja meg a <xref:System.Data.DataRow.HasVersion%2A>metódus.</xref:System.Data.DataRow.HasVersion%2A>      > [!NOTE] > Átmenetileg felfüggeszti a BeginEdit metódus <xref:System.Data.DataTable.RowChanging>események, de a `delete` művelet nem.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The example creates a simple <xref:System.Data.DataTable> with one <xref:System.Data.DataColumn> and five <xref:System.Data.DataRow> objects, and a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> event handler is also added to monitor when the row's value is changing. After invoking BeginEdit on the existing rows, the constraint and event are temporarily disabled and the original and proposed values are printed. The BeginEdit is again invoked to set two rows to the same value. When <xref:System.Data.DataRow.EndEdit%2A> is called, the <xref:System.Data.UniqueConstraint> is enforced on the identical values.  \n  \n [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.be_1.vb)]\n [!code-cs[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.be_1.cs)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Data.DataRow.BeginEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "A metódus lett meghívva belül a <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> esemény."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "A metódus után egy törölt sor lett meghívva."
  platform:
  - net462
- uid: System.Data.DataRow.CancelEdit
  id: CancelEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A soron aktuális Szerkesztés megszakítása."
  remarks: "Tekintse meg a <xref:System.Data.DataRow.BeginEdit%2A>metódus további információt.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example edits the value of one column in the last row of a <xref:System.Windows.Forms.DataGrid> control. The example uses the <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, methods to edit the column's value and commit the change to the row.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ca_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ca_1.cs)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Data.DataRow.CancelEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "A metódus lett meghívva belül a <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> esemény."
  platform:
  - net462
- uid: System.Data.DataRow.ClearErrors
  id: ClearErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A hibákat a sor törlése. Ez magában foglalja a <> </> *> és hibák beállított <> </> *>."
  remarks: "Használjon <xref:System.Data.DataRow.SetColumnError%2A>és <xref:System.Data.DataRow.GetColumnError%2A>és térjen vissza az egyes oszlopok által jelzett hibákat.</xref:System.Data.DataRow.GetColumnError%2A> </xref:System.Data.DataRow.SetColumnError%2A>       Állítsa be a <xref:System.Data.DataRow.RowError%2A>tulajdonság beállítása az egész sort alkalmazó hiba.</xref:System.Data.DataRow.RowError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>metódus.</xref:System.Data.DataRow.HasErrors%2A> Ennek következtében, használhatja a <xref:System.Data.DataRow.GetColumnsInError%2A>metódusának segítéségével lekérheti a hibák az oszlopok.</xref:System.Data.DataRow.GetColumnsInError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The ClearErrors method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.cl_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.cl_1.vb)]"
  syntax:
    content: public void ClearErrors ();
    parameters: []
  overload: System.Data.DataRow.ClearErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Delete
  id: Delete
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Törli a <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  remarks: "Ha a <xref:System.Data.DataRow.RowState%2A>sor kerül, a <xref:System.Data.DataRow.RowState%2A>válik `Detached` , és a sor eltávolítja a tábla <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> hívásakor</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A>       A <xref:System.Data.DataRow.RowState%2A>válik `Deleted` után használja a Delete metódust egy meglévő <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> A leválasztást `Deleted` amíg <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> hívása Ilyenkor a <xref:System.Data.DataRow>törlődik a táblából.</xref:System.Data.DataRow>       Delete nem hívható foreach ismétlődő iteráció során egy <xref:System.Data.DataRowCollection>objektum.</xref:System.Data.DataRowCollection> Törölje a gyűjtemény állapotát módosítja.       A törölt sor is visszaállíthatók, hogy <xref:System.Data.DataRow.RejectChanges%2A>.</xref:System.Data.DataRow.RejectChanges%2A>      > [!NOTE] > A <xref:System.Data.DataRow.BeginEdit%2A>metódus átmenetileg felfüggeszti <xref:System.Data.DataTable.RowChanging>események, de a törlési művelet nem.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with two columns and ten rows. After deleting several <xref:System.Data.DataRow> items with the Delete method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.de_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.de_1.cs)]"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Data.DataRow.Delete*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "A <xref href=&quot;System.Data.DataRow&quot;> </xref> már törölve van."
  platform:
  - net462
- uid: System.Data.DataRow.EndEdit
  id: EndEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A folyamatban lévő a sor Szerkesztés ér véget."
  remarks: "A tulajdonság beállításakor kivételt generál, ha kivétel lép fel a <xref:System.Data.DataTable.RowChanging>esemény.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The following example uses the EndEdit method to end the edit of a <xref:System.Data.DataRow> value if the validation function returns true.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.en_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.en_1.cs)]"
  syntax:
    content: public void EndEdit ();
    parameters: []
  overload: System.Data.DataRow.EndEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "A metódus lett meghívva belül a <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> esemény."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "A Szerkesztés túllépte a korlátozást."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "A sor a táblához tartozik, és a Szerkesztés megpróbálta módosítani egy csak olvasható oszlop értékét."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "A Szerkesztés próbált meg szeretne adni egy olyan oszlop null értéket adott <xref:System.Data.DataColumn.AllowDBNull*>értéke false.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  id: GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a gyermek e sorok <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ChildRelations%2A>tulajdonság.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_8_1.cs)]\n [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_8_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> objektumok vagy nulla hosszúságú tömb."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolat és a sor nem ugyanahhoz a táblához tartozik."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kapcsolat <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nincs az adatok jelen verziójában."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String)
  id: GetChildRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a gyermek sorait egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref:System.Data.DataRelation.RelationName*>, egy <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ChildRelations%2A>tulajdonság.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "A <xref:System.Data.DataRelation.RelationName*>, a <xref href=&quot;System.Data.DataRelation&quot;> </xref> használatára.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> objektumok vagy nulla hosszúságú tömb."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolat és a sor nem ugyanahhoz a táblához tartozik."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a gyermek sorait egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref>, és <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ChildRelations%2A>tulajdonság.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Használja a <xref:System.Data.DataRow.HasVersion%2A>tulajdonság határozza meg hogy a <xref:System.Data.DataRowVersion>, amelyet az létezik.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Ha <xref:System.Data.DataRowVersion>van megadva, a használt verzió függ a <xref:System.Data.DataRow.RowState%2A>, amelyiken sorára `GetChildRows` meghívták.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Ha a sort, amelyen `GetChildRows` meghívták rendelkezik egy `RowState` a `Modified`, `New`, vagy `Unchanged`, a <xref:System.Data.DataRowVersion>a sor verziója használt való beolvasásához használt kapcsolódó gyermeksorok kifejezésnek megfelelő értéket az aktuális verzióban.</xref:System.Data.DataRowVersion> Ha a sort, amelyen `GetChildRows` meghívták rendelkezik egy `RowState` a `Deleted`, a <xref:System.Data.DataRowVersion>kapcsolódó gyermeksorok kifejezésnek megfelelő verziójának értékek beolvasása szolgál a sor verziója.</xref:System.Data.DataRowVersion>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column with the specified version in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/visualbasic/47f0f4a3-cc08-456d-98cc-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/csharp/47f0f4a3-cc08-456d-98cc-_1.cs)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> értékek az adatok beolvasása a verzió megadása. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> objektumok."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolat és a sor nem ugyanahhoz a táblához tartozik."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nem rendelkezik a kért <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  id: GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a gyermek sorait egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref:System.Data.DataRelation.RelationName*>, egy <xref href=&quot;System.Data.DataRelation&quot;> </xref>, és <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ChildRelations%2A>tulajdonság.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Használja a <xref:System.Data.DataRow.HasVersion%2A>tulajdonság határozza meg hogy a <xref:System.Data.DataRowVersion>, amelyet az létezik.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Ha <xref:System.Data.DataRowVersion>van megadva, a használt verzió függ a <xref:System.Data.DataRow.RowState%2A>, amelyiken sorára `GetChildRows` meghívták.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Ha a sort, amelyen `GetChildRows` meghívták rendelkezik egy `RowState` a `Modified`, `New`, vagy `Unchanged`, a <xref:System.Data.DataRowVersion>a sor verziója használt való beolvasásához használt kapcsolódó gyermeksorok kifejezésnek megfelelő értéket az aktuális verzióban.</xref:System.Data.DataRowVersion> Ha a sort, amelyen `GetChildRows` meghívták rendelkezik egy `RowState` a `Deleted`, a <xref:System.Data.DataRowVersion>kapcsolódó gyermeksorok kifejezésnek megfelelő verziójának értékek beolvasása szolgál a sor verziója.</xref:System.Data.DataRowVersion>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "A <xref:System.Data.DataRelation.RelationName*>, a <xref href=&quot;System.Data.DataRelation&quot;> </xref> használatára.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> értékek az adatok beolvasása a verzió megadása. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> objektumok vagy nulla hosszúságú tömb."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolat és a sor nem ugyanahhoz a táblához tartozik."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nem rendelkezik a kért <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  id: GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott hiba leírása <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Használja a <xref:System.Data.DataRow.SetColumnError%2A>metódus oszlop hibák beállításához.</xref:System.Data.DataRow.SetColumnError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>metódus.</xref:System.Data.DataRow.HasErrors%2A> Ennek következtében, használhatja a <xref:System.Data.DataRow.GetColumnsInError%2A>metódusának segítéségével lekérheti a hibák az oszlopok.</xref:System.Data.DataRow.GetColumnsInError%2A> Másik lehetőségként a <xref:System.Data.DataTable.GetErrors%2A>metódusában a <xref:System.Data.DataTable>hibák összes sorát adja vissza.</xref:System.Data.DataTable> </xref:System.Data.DataTable.GetErrors%2A>       A columns gyűjteményben kapcsolatos összes hiba törléséhez használja a <xref:System.Data.DataRow.ClearErrors%2A>metódus.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_1_1.vb)]"
  syntax:
    content: public string GetColumnError (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.String
      description: "A hiba leírása szövegét."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  id: GetColumnError(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a hiba leírása az index által megadott oszlop."
  remarks: "Használja a <xref:System.Data.DataRow.SetColumnError%2A>metódus oszlop hibák beállításához.</xref:System.Data.DataRow.SetColumnError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>metódus.</xref:System.Data.DataRow.HasErrors%2A> Ennek következtében, használhatja a <xref:System.Data.DataRow.GetColumnsInError%2A>metódusának segítéségével lekérheti a hibák az oszlopok.</xref:System.Data.DataRow.GetColumnsInError%2A>       A columns gyűjteményben kapcsolatos összes hiba törléséhez használja a <xref:System.Data.DataRow.ClearErrors%2A>metódus.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_6_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_6_1.vb)]"
  syntax:
    content: public string GetColumnError (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Az oszlop nulla alapú indexét."
    return:
      type: System.String
      description: "A hiba leírása szövegét."
  overload: System.Data.DataRow.GetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A <code> columnIndex </code> argumentum az engedélyezett tartományon kívül esik."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.String)
  id: GetColumnError(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop, hiba leírása."
  remarks: "Használja a <xref:System.Data.DataRow.SetColumnError%2A>metódus oszlop hibák beállításához.</xref:System.Data.DataRow.SetColumnError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>metódus.</xref:System.Data.DataRow.HasErrors%2A> Ennek következtében, használhatja a <xref:System.Data.DataRow.GetColumnsInError%2A>metódusának segítéségével lekérheti a hibák az oszlopok.</xref:System.Data.DataRow.GetColumnsInError%2A>       A columns gyűjteményben kapcsolatos összes hiba törléséhez használja a <xref:System.Data.DataRow.ClearErrors%2A>metódus.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_0_1.vb)]"
  syntax:
    content: public string GetColumnError (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.String
      description: "A hiba leírása szövegét."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnsInError
  id: GetColumnsInError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi az hibák rendelkező oszlopok esetében tömbjét."
  remarks: "A GetColumnsInError lehetővé teszi, hogy kevesebb <xref:System.Data.DataColumn>objektumokat, fel kell dolgozni a hibák csak azokat az oszlopokat, amelyek rendelkeznek a hibát visszaadó.</xref:System.Data.DataColumn> Hibák az egyes oszlopok állítható be a <xref:System.Data.DataRow.SetColumnError%2A>metódus.</xref:System.Data.DataRow.SetColumnError%2A> További csökkentése érdekében a feldolgozási száma, vizsgálja meg a <xref:System.Data.DataRow.HasErrors%2A>tulajdonsága a <xref:System.Data.DataRow>osztályt meghatározásához e egy <xref:System.Data.DataRow>hibát talál GetColumnsInError meghívása előtt.</xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>       Használja a <xref:System.Data.DataRow.ClearErrors%2A>metódus törli az összes hiba a sorban.</xref:System.Data.DataRow.ClearErrors%2A> Ez magában foglalja a <xref:System.Data.DataRow.RowError%2A>.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the GetColumnsInError method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_5_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn[] GetColumnsInError ();
    parameters: []
    return:
      type: System.Data.DataColumn[]
      description: "A tömb <xref href=&quot;System.Data.DataColumn&quot;> </xref> hibákat tartalmaz objektumokat."
  overload: System.Data.DataRow.GetColumnsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  id: GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A szülő sorát lekérdezi egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "Az egy <xref:System.Data.DataSet>, a gyűjtemény összes szülő <xref:System.Data.DataRelation>az adatkészlet által visszaadott objektumok a <xref:System.Data.DataRow.GetParentRows%2A>metódus.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonság.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_3_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_3_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow
      description: "A szülő <xref href=&quot;System.Data.DataRow&quot;> </xref> az aktuális sor."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> relation </code> nem tartozik a <xref href=&quot;System.Data.DataTable&quot;> </xref>.       The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "A gyermeksorhoz több szülősor tartozik."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A sor nem tartozik a gyermektábla a <xref href=&quot;System.Data.DataRelation&quot;> </xref> objektum."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik hozzá."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String)
  id: GetParentRow(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A szülő sorát lekérdezi egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref:System.Data.DataRelation.RelationName*>, egy <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "Az egy <xref:System.Data.DataSet>, a gyűjtemény összes szülő <xref:System.Data.DataRelation>az adatkészlet által visszaadott objektumok a <xref:System.Data.DataRow.GetParentRows%2A>metódus.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonság.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the GetParentRow to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_4_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_4_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow
      description: "A szülő <xref href=&quot;System.Data.DataRow&quot;> </xref> az aktuális sor."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolat és a sor nem ugyanahhoz a táblához tartozik."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "A gyermeksorhoz több szülősor tartozik."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A szülő sorát lekérdezi egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref>, és <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "Az egy <xref:System.Data.DataSet>, a gyűjtemény összes szülő <xref:System.Data.DataRelation>az adatkészlet által visszaadott objektumok a <xref:System.Data.DataRow.GetParentRows%2A>metódus.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonság.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Használja a <xref:System.Data.DataRow.HasVersion%2A>tulajdonság határozza meg hogy a <xref:System.Data.DataRowVersion>, amelyet az létezik.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/visualbasic/a16d1012-4e05-4bd8-9275-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/csharp/a16d1012-4e05-4bd8-9275-_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> értékek az adatok beolvasása a verzió megadása."
    return:
      type: System.Data.DataRow
      description: "A szülő <xref href=&quot;System.Data.DataRow&quot;> </xref> az aktuális sor."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       A <code> relation </code> nem tartozik ez a táblázat szülő kapcsolatok."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "A gyermeksorhoz több szülősor tartozik."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A kapcsolat gyermek tábla nincs a tábla a sor tartozik."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik hozzá."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nincs az adatok jelen verziójában."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  id: GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A szülő sorát lekérdezi egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref:System.Data.DataRelation.RelationName*>, egy <xref href=&quot;System.Data.DataRelation&quot;> </xref>, és <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "Az egy <xref:System.Data.DataSet>, a gyűjtemény összes szülő <xref:System.Data.DataRelation>az adatkészlet által visszaadott objektumok a <xref:System.Data.DataRow.GetParentRows%2A>metódus.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonság.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Használja a <xref:System.Data.DataRow.HasVersion%2A>tulajdonság határozza meg hogy a <xref:System.Data.DataRowVersion>, amelyet az létezik.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_7_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_7_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> értékeket."
    return:
      type: System.Data.DataRow
      description: "A szülő <xref href=&quot;System.Data.DataRow&quot;> </xref> az aktuális sor."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolat és a sor nem ugyanahhoz a táblához tartozik."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "A gyermeksorhoz több szülősor tartozik."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nem rendelkezik a kért <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  id: GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a szülő sorait egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "Az egy <xref:System.Data.DataSet>, a gyűjtemény összes szülő <xref:System.Data.DataRelation>az adatkészlet által visszaadott objektumok a <xref:System.Data.DataRow.GetParentRows%2A>metódus.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonság.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_2_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> objektumok vagy nulla hosszúságú tömb."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Data.DataRelation&quot;> </xref> nem tartozik a sor <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A kapcsolat gyermek tábla nincs a tábla a sor tartozik."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik egy <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String)
  id: GetParentRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a szülő sorait egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref:System.Data.DataRelation.RelationName*>, egy <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "Az egy <xref:System.Data.DataSet>, a gyűjtemény összes szülő <xref:System.Data.DataRelation>az adatkészlet GetParentRows metódus által visszaadott objektumok.</xref:System.Data.DataRelation> </xref:System.Data.DataSet>       A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonság.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> objektumok vagy nulla hosszúságú tömb."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolat és a sor nem ugyanahhoz a táblához tartozik."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a szülő sorait egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref>, és <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "Az egy <xref:System.Data.DataSet>, a gyűjtemény összes szülő <xref:System.Data.DataRelation>az adatkészlet által visszaadott objektumok a <xref:System.Data.DataRow.GetParentRows%2A>metódus.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonság.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Használja a <xref:System.Data.DataRow.HasVersion%2A>tulajdonság határozza meg hogy a <xref:System.Data.DataRowVersion>, amelyet az létezik.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/add/codesnippet/visualbasic/14f3e3ca-84f4-434d-94fa-_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> értékek az adatok beolvasása a verzió megadása."
    return:
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> objektumok vagy nulla hosszúságú tömb."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Data.DataRelation&quot;> </xref> nem tartozik a sor <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A kapcsolat gyermek tábla nincs a tábla a sor tartozik."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik egy <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nem rendelkezik a kért <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  id: GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a szülő sorait egy <xref href=&quot;System.Data.DataRow&quot;> </xref> használata a megadott <xref:System.Data.DataRelation.RelationName*>, egy <xref href=&quot;System.Data.DataRelation&quot;> </xref>, és <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "Az egy <xref:System.Data.DataSet>, a gyűjtemény összes szülő <xref:System.Data.DataRelation>az adatkészlet által visszaadott objektumok a <xref:System.Data.DataRow.GetParentRows%2A>metódus.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       A <xref:System.Data.DataTable>gyűjteményét is tartalmazza <xref:System.Data.DataRelation>által visszaadott objektumok a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonság.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Használja a <xref:System.Data.DataRow.HasVersion%2A>tulajdonság határozza meg hogy a <xref:System.Data.DataRowVersion>, amelyet az létezik.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> értékek az adatok beolvasása a verzió megadása. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> objektumok vagy nulla hosszúságú tömb."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolat és a sor nem ugyanahhoz a táblához tartozik."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nem rendelkezik a kért <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.HasErrors
  id: HasErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Egy érték, amely azt jelzi, hogy vannak-e hibák sor lekérése."
  remarks: "`HasErrors`adja vissza `true` esetleges <xref:System.Data.DataColumn>sorában objektum tartalmazza a hiba, vagy ha a <xref:System.Data.DataRow.RowError%2A>tulajdonsága a <xref:System.Data.DataRow>érték nem egy üres karakterlánc.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowError%2A> </xref:System.Data.DataColumn>       Adatok érvényesítésekor adhatók meg hiba egy sor összes oszlopában. Ilyen oszlop, amikor megjelenik a <xref:System.Windows.Forms.DataGrid?displayProperty=fullName>szabályozása, piros felkiáltójel jelezze, hogy az oszlop hiba van a felhasználó számára meg van jelölve.</xref:System.Windows.Forms.DataGrid?displayProperty=fullName>       Használjon <xref:System.Data.DataRow.SetColumnError%2A>hiba bármely oszlop canusersort.</xref:System.Data.DataRow.SetColumnError%2A>       Használja a <xref:System.Data.DataRow.GetColumnError%2A>és `GetColumnsInError` módszerek vissza oszlopokat hibákkal.</xref:System.Data.DataRow.GetColumnError%2A>       A <xref:System.Data.DataRow.ClearErrors%2A>metódus törli az összes hiba a sor.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example uses the HasErrors to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ha_1.cs)]\n [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasErrors { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a sor tartalmazza a hiba; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  id: HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy létezik-e egy adott verzióját."
  remarks: "Tekintse meg a <xref:System.Data.DataRow.BeginEdit%2A>metódus további információt.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example uses the HasVersion method to determine whether the current value of a column and the proposed value are the same. If so, the edit is canceled. Otherwise, the <xref:System.Data.DataRow.AcceptChanges%2A> method is called to end the edit.  \n  \n [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasVersion (System.Data.DataRowVersion version);
    parameters:
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> érték, amely megadja a sor verzióját."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha létezik a verzió; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  id: IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a megadott <xref href=&quot;System.Data.DataColumn&quot;> </xref> null értéket tartalmaz."
  remarks: ''
  example:
  - "The following example prints each column of each row in each table of a <xref:System.Data.DataSet>. If the row is set to a null value, the value is not printed.  \n  \n [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_2_1.vb)]"
  syntax:
    content: public bool IsNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az oszlop null az értéke. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Int32)
  id: IsNull(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a megadott indexpozíciónál oszlop null értéket tartalmaz."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the IsNull method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_1_1.vb)]"
  syntax:
    content: public bool IsNull (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Az oszlop nulla alapú indexét."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az oszlop null az értéke. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.String)
  id: IsNull(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Egy érték, amely jelzi, hogy az elnevezett oszlopot tartalmaz-e a null érték beolvasása."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_0_1.vb)]"
  syntax:
    content: public bool IsNull (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az oszlop null az értéke. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  id: IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a megadott <xref href=&quot;System.Data.DataColumn&quot;> </xref> és <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> null értéket tartalmaz."
  syntax:
    content: public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> érték, amely megadja a sor verzióját. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az oszlop null az értéke. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  id: Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi vagy beállítja a megadott tárolt adatok <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "A tulajdonság beállításakor kivételt generál, ha kivétel lép fel a <xref:System.Data.DataTable.ColumnChanging>esemény.</xref:System.Data.DataTable.ColumnChanging>       Ha ez azonnali szerkesztési, lásd: <xref:System.Data.DataRow.EndEdit%2A>létrehozható a kivételekhez.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this2 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_3_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column] { get; set; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;> </xref> , amely tartalmazza az adatokat."
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely tartalmazza az adatokat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az oszlop nem tartozik a táblában."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> is null."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt egy érték beállítása a törölt sor."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Az érték és az oszlop adattípusát nem egyeznek."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi vagy beállítja az index által megadott oszlopban tárolt adatokat."
  remarks: "A tulajdonság beállításakor kivételt generál, ha kivétel lép fel a <xref:System.Data.DataTable.ColumnChanging>esemény.</xref:System.Data.DataTable.ColumnChanging>       Ha ez történik, és szerkesztését, <xref:System.Data.DataRow.EndEdit%2A>létrehozható a kivételekhez.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the Item property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_0_1.vb)]\n [!code-cs[Classic WebData DataRow.this Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_0_1.cs)]"
  syntax:
    content: public object this[int columnIndex] { get; set; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Az oszlop nulla alapú indexét."
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely tartalmazza az adatokat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Akkor következik be, és állítson be egy a törölt sor meg."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A <code> columnIndex </code> argumentum az engedélyezett tartományon kívül esik."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Akkor következik be, ha úgy állítja be az értéket, és az új érték <xref:System.Type>nem felel meg a <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi vagy beállítja a megadott oszlopban tárolt adatok."
  remarks: "A tulajdonság beállításakor kivételt generál, ha kivétel lép fel a <xref:System.Data.DataTable.ColumnChanging>esemény.</xref:System.Data.DataTable.ColumnChanging>       Ha ez azonnali szerkesztési, lásd: <xref:System.Data.DataRow.EndEdit%2A>létrehozható a kivételekhez.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_2_1.vb)]\n [!code-cs[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_2_1.cs)]"
  syntax:
    content: public object this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely tartalmazza az adatokat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott oszlop <code> columnName </code> nem található."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Akkor következik be, és állítson be egy a törölt sor meg."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Akkor következik be, ha úgy állítja be egy értéket, és az <xref:System.Type>nem felel meg a <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type>"
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Akkor következik be, null értékű elhelyezni egy oszlopot meg ahol <xref:System.Data.DataColumn.AllowDBNull*>értéke <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  id: Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott verzióját, a megadott tárolt adatok <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "A `version` nem lehet összetéveszthető a <xref:System.Data.DataRow.RowState%2A>tulajdonság.</xref:System.Data.DataRow.RowState%2A> A `version` argumentum a tárolt adatokat használó az oszlop eredeti érték oszlop állapotát írja le.       A tulajdonság beállításakor kivételt generál, ha kivétel lép fel a <xref:System.Data.DataTable.ColumnChanging>esemény.</xref:System.Data.DataTable.ColumnChanging>       Ha ez azonnali szerkesztési, lásd: <xref:System.Data.DataRow.EndEdit%2A>létrehozható a kivételekhez.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a clicked cell in the <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_6_1.cs)]\n [!code-vb[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_6_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;> </xref> , hogy az oszlop adatait tartalmazza."
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> , amely megadja a sor verzióját használni kívánt értékeket. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely tartalmazza az adatokat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az oszlop nem tartozik a táblában."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> column </code> argumentum null értéket tartalmaz."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nincs az adatok jelen verziójában."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  id: Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Az index és az adatok beolvasása verziója által megadott oszlopban tárolt adatok lekérése."
  remarks: "Csak létrehozni vagy frissíteni egy sort a <xref:System.Data.DataRow.BeginEdit%2A>metódus; ehhez hasonlóan a <xref:System.Data.DataRow.EndEdit%2A>metódust kell hívni a Szerkesztés véglegesítése</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRow.BeginEdit%2A> hívás után Után hívja a <xref:System.Data.DataRow.EndEdit%2A>metódust, és meghívása előtt a <xref:System.Data.DataRow.AcceptChanges%2A>metódust, az eredeti és új belső felelősséget javasolt értékek lesznek tárolva.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> Ezért amíg meg nem hívja a <xref:System.Data.DataRow.AcceptChanges%2A>, használhatja a `version` argumentum beállításával megadhatja, melyik verzióját az oszlop értéke van szüksége, vagy a `DataRowVersion.Original` vagy `DataRowVersion.Proposed`.</xref:System.Data.DataRow.AcceptChanges%2A> Azonban, mint hamarosan hívása a <xref:System.Data.DataRow.AcceptChanges%2A>metódust, az oszlop verziója visszatér `DataRowVersion.Original`.</xref:System.Data.DataRow.AcceptChanges%2A> Ha a sor új, is átadhatja `DataRowVersion.Default` lekérdezni az az oszlop alapértelmezett értéket a paraméterhez. Történő átadásakor `DataRowVersion.Current`, a tulajdonság adja vissza az aktuális értéke, függetlenül a verziója lehet.      > [!NOTE] > A <xref:System.Data.DataRow.BeginEdit%2A>módszer neve implicit módon adathoz kötött vezérlő értékének megváltozásakor, vagy ha egy <xref:System.Data.DataRow>objektum hozzáadódik a <xref:System.Data.DataRowCollection>; a <xref:System.Data.DataRow.EndEdit%2A>módszer neve implicit módon hívja az alábbi módszerek: a <xref:System.Data.DataRow.AcceptChanges%2A>metódusában a <xref:System.Data.DataRow>objektum, a <xref:System.Data.DataTable.AcceptChanges%2A>metódusában a <xref:System.Data.DataTable>objektum, vagy a <xref:System.Data.DataRow.CancelEdit%2A>metódus.</xref:System.Data.DataRow.CancelEdit%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> </xref:System.Data.DataRow.BeginEdit%2A>       Ezzel szemben a <xref:System.Data.DataRowVersion>számbavételi `Current` adja vissza az adatok után verzióját a <xref:System.Data.DataRow.EndEdit%2A>metódus meghívása.</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowVersion>       A `version` argumentum nem keverendő össze a a <xref:System.Data.DataRow.RowState%2A>tulajdonság.</xref:System.Data.DataRow.RowState%2A> A `version` argumentum a tárolt adatokat használó az oszlop eredeti érték oszlop állapotát írja le. A <xref:System.Data.DataRow.RowState%2A>tulajdonság a szülő <xref:System.Data.DataTable>.</xref:System.Data.DataTable> viszonyítva teljes sor állapotának leírása</xref:System.Data.DataRow.RowState%2A>       A tulajdonság beállításakor kivételt generál, ha kivétel lép fel a <xref:System.Data.DataTable.ColumnChanging>esemény.</xref:System.Data.DataTable.ColumnChanging>       Ha ez azonnali szerkesztési, lásd: <xref:System.Data.DataRow.EndEdit%2A>létrehozható a kivételekhez.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a column through the <xref:System.Data.DataRow.Item%2A> property of the <xref:System.Data.DataRow> object.  \n  \n [!code-vb[Classic WebData DataRow.this3 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_4_1.vb)]"
  syntax:
    content: public object this[int columnIndex, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Az oszlop nulla alapú indexét."
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> , amely megadja a sor verzióját használni kívánt értékeket. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely tartalmazza az adatokat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A <code> columnIndex </code> argumentum az engedélyezett tartományon kívül esik."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Az érték és az oszlop adattípusát nem egyeznek."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nincs az adatok jelen verziójában."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt egy érték beállítása a törölt sor."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  id: Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott nevű oszlopban tárolt adatok verzióját."
  remarks: "A verzió nem keverendő össze a a <xref:System.Data.DataRow.RowState%2A>tulajdonság.</xref:System.Data.DataRow.RowState%2A> A `version` argumentum a tárolt adatokat használó az oszlop eredeti érték oszlop állapotát írja le. A <xref:System.Data.DataRow.RowState%2A>tulajdonság a szülő <xref:System.Data.DataTable>.</xref:System.Data.DataTable> viszonyítva teljes sor állapotának leírása</xref:System.Data.DataRow.RowState%2A>       A tulajdonság beállításakor kivételt generál, ha kivétel lép fel a <xref:System.Data.DataTable.ColumnChanging>esemény.</xref:System.Data.DataTable.ColumnChanging>       Ha ez azonnali szerkesztési, lásd: <xref:System.Data.DataRow.EndEdit%2A>létrehozható a kivételekhez.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current version of data at a clicked cell of a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_5_1.vb)]\n [!code-cs[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_5_1.cs)]"
  syntax:
    content: public object this[string columnName, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnName
      type: System.String
      description: "Az oszlop neve."
    - id: version
      type: System.Data.DataRowVersion
      description: "Egy a <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> , amely megadja a sor verzióját használni kívánt értékeket. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely tartalmazza az adatokat.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott oszlop <code> columnName </code> nem található."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Az érték és az oszlop adattípusát nem egyeznek."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "A sor nincs az adatok jelen verziójában."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "A sor törölve lett."
  platform:
  - net462
- uid: System.Data.DataRow.ItemArray
  id: ItemArray
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi vagy beállítja a sor a tömb összes értékét."
  remarks: "Ez a tulajdonság segítségével sem értékek tömb keresztül e sor számára. Értékeinek beállításához használhatja ezt a tulajdonságot, ha a tömb méretének és az oszlop gyűjteményként rendelés kell rendelkeznie. Sikeres `null` a ItemArray jelzi, hogy nincs megadva érték.       Felhasználók hozhat létre a kivételek a <xref:System.Data.DataTable.ColumnChanging>esemény vagy a <xref:System.Data.DataTable.RowChanging>esemény.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging>"
  example:
  - "The following examples show how to get and set values using the ItemArray property.  \n  \n [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_1_1.vb)]\n [!code-cs[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_1_1.cs)]"
  syntax:
    content: public object[] ItemArray { get; set; }
    return:
      type: System.Object[]
      description: "<xref:System.Object>.</xref:System.Object> Típusú tömb"
  overload: System.Data.DataRow.ItemArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A tömb mérete nagyobb, mint a tábla oszlopainak száma."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A tömb érték nem egyezik a <xref:System.Data.DataColumn.DataType*>az annak megfelelő <xref href=&quot;System.Data.DataColumn&quot;> </xref>.</xref:System.Data.DataColumn.DataType*>"
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "Szerkesztési túllépte korlátozás."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Szerkesztési megpróbálta módosítani egy csak olvasható oszlop értékét."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Szerkesztési próbált meg null értékű be egy olyan oszlop ahol <xref:System.Data.DataColumn.AllowDBNull*>, a <xref href=&quot;System.Data.DataColumn&quot;> </xref> objektum <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "A sor törölve lett."
  platform:
  - net462
- uid: System.Data.DataRow.RejectChanges
  id: RejectChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A sor óta végrehajtott összes módosítás elutasítja <xref:System.Data.DataRow.AcceptChanges*>utolsó lett meghívva.</xref:System.Data.DataRow.AcceptChanges*>"
  remarks: "Amikor a RejectChanges metódust hívja a <xref:System.Data.DataRow.CancelEdit%2A>metódus implicit módon nevezik megszakítja végzett módosításokat.</xref:System.Data.DataRow.CancelEdit%2A> Ha <xref:System.Data.DataRow.RowState%2A>törölni vagy módosítani, a sor visszaáll az előző értékeit, és <xref:System.Data.DataRow.RowState%2A>változatlan válik.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Ha a <xref:System.Data.DataRow.RowState%2A>ad hozzá, a rendszer eltávolítja a sort.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with 2 columns and 10 rows. After several <xref:System.Data.DataRow> items are deleted with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking RejectChanges.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.re_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.re_1.cs)]"
  syntax:
    content: public void RejectChanges ();
    parameters: []
  overload: System.Data.DataRow.RejectChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "A sor nem tartozik a táblába."
  platform:
  - net462
- uid: System.Data.DataRow.RowError
  id: RowError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi vagy beállítja az egyéni hiba leírása egy sor."
  remarks: "Használja a <xref:System.Data.DataRow.HasErrors%2A>tulajdonságot először döntse el, hogy egy <xref:System.Data.DataRow>hibákat tartalmaz.</xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>"
  example:
  - "The following example sets error text for ten rows of a table displayed in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_1_1.cs)]\n [!code-vb[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_1_1.vb)]"
  syntax:
    content: public string RowError { get; set; }
    return:
      type: System.String
      description: "A hiba leíró szöveg."
  overload: System.Data.DataRow.RowError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.RowState
  id: RowState
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a kapcsolata tekintetében a sor jelenlegi állapotában a <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  remarks: 'A RowState értékének két tényezőktől függ: a sort, milyen típusú művelet végrehajtását, és hogy <xref:System.Data.DataRow.AcceptChanges%2A>a <xref:System.Data.DataRow>.</xref:System.Data.DataRow> meghívták</xref:System.Data.DataRow.AcceptChanges%2A>'
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its RowState is printed.  \n  \n [!code-vb[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_0_1.vb)]\n [!code-cs[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_0_1.cs)]"
  syntax:
    content: public System.Data.DataRowState RowState { get; }
    return:
      type: System.Data.DataRowState
      description: "Egy a <xref href=&quot;System.Data.DataRowState&quot;> </xref> értékeket."
  overload: System.Data.DataRow.RowState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetAdded
  id: SetAdded
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Added&quot; name=&quot;Added&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Változások a <xref:System.Data.DataRow.RowState%2A>, egy <xref:System.Data.DataRow>való `Added`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> Ha vagy nincs az aktuális sor egy `Unchanged` vagy egy `Added` állapotba kerül, hogy jelez egy <xref:System.InvalidOperationException>üzenet, amely `SetAdded` csak hívható meg egy `DataRow` példányán, amelyen a `RowState` van `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetAdded ();
    parameters: []
  overload: System.Data.DataRow.SetAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  id: SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Beállítja a megadott oszlop hibaleírása egy <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Vizsgálja meg a hiba leírása, használja a <xref:System.Data.DataRow.GetColumnError%2A>metódus.</xref:System.Data.DataRow.GetColumnError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>tulajdonság.</xref:System.Data.DataRow.HasErrors%2A> Ennek következtében, használhatja a <xref:System.Data.DataRow.GetColumnsInError%2A>metódusának segítéségével lekérheti a hibák az oszlopok.</xref:System.Data.DataRow.GetColumnsInError%2A>       Ha `null` vagy üres érték az átadott a `error` paraméter, a <xref:System.Data.DataRow>úgy viselkedik, mintha nem történt hiba be lett állítva, és a <xref:System.Data.DataRow.HasErrors%2A>tulajdonság hamis értéket ad vissza.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Egy egyéni hiba leírása a teljes soron beállításához használja a <xref:System.Data.DataRow.RowError%2A>tulajdonság.</xref:System.Data.DataRow.RowError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>metódus.</xref:System.Data.DataRow.HasErrors%2A>       A columns gyűjteményben kapcsolatos összes hiba törléséhez használja a <xref:System.Data.DataRow.ClearErrors%2A>metódus.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_3_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_3_1.vb)]"
  syntax:
    content: public void SetColumnError (System.Data.DataColumn column, string error);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;> </xref> hibaleírása beállításához."
    - id: error
      type: System.String
      description: "A hiba leírása."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  id: SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Beállítja a hibaleírás index által megadott oszlop."
  remarks: "A metódus segítségével állítsa be az egyéni hibák leírásának a megadott oszlopok. Használhatja a <xref:System.Windows.Forms.ErrorProvider>vezérlőt a hiba szövegének.</xref:System.Windows.Forms.ErrorProvider>       Vizsgálja meg a hiba leírása, használja a <xref:System.Data.DataRow.GetColumnError%2A>metódus.</xref:System.Data.DataRow.GetColumnError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>tulajdonság.</xref:System.Data.DataRow.HasErrors%2A> Ennek következtében, használhatja a <xref:System.Data.DataRow.GetColumnsInError%2A>metódusának segítéségével lekérheti a hibák az oszlopok.</xref:System.Data.DataRow.GetColumnsInError%2A>       Ha `null` vagy üres érték az átadott a `error` paraméter, a <xref:System.Data.DataRow>úgy viselkedik, mintha nem történt hiba be lett állítva, és a <xref:System.Data.DataRow.HasErrors%2A>tulajdonság hamis értéket ad vissza.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Egy egyéni hiba leírása a teljes soron beállításához használja a <xref:System.Data.DataRow.RowError%2A>tulajdonság.</xref:System.Data.DataRow.RowError%2A>       A columns gyűjteményben kapcsolatos összes hiba törléséhez használja a <xref:System.Data.DataRow.ClearErrors%2A>metódus.</xref:System.Data.DataRow.ClearErrors%2A>       Teljes sor alkalmazó hibaszöveg beállításához adja meg a <xref:System.Data.DataRow.RowError%2A>tulajdonság.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_0_1.vb)]"
  syntax:
    content: public void SetColumnError (int columnIndex, string error);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Az oszlop nulla alapú indexét."
    - id: error
      type: System.String
      description: "A hiba leírása."
  overload: System.Data.DataRow.SetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A <code> columnIndex </code> argumentum az engedélyezett tartományon kívül"
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  id: SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Beállítja a megadott oszlop hibaleírása."
  remarks: "Egy oszlop neve van beállítva, ha az <xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Data.DataColumn>osztály</xref:System.Data.DataColumn> tulajdonsága</xref:System.Data.DataColumn.ColumnName%2A>       Vizsgálja meg a hiba leírása, használja a <xref:System.Data.DataRow.GetColumnError%2A>metódus.</xref:System.Data.DataRow.GetColumnError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>tulajdonság.</xref:System.Data.DataRow.HasErrors%2A> Ennek következtében, használhatja a <xref:System.Data.DataRow.GetColumnsInError%2A>metódusának segítéségével lekérheti a hibák az oszlopok.</xref:System.Data.DataRow.GetColumnsInError%2A>       Ha `null` vagy üres érték az átadott a `error` paraméter, a <xref:System.Data.DataRow>úgy viselkedik, mintha nem történt hiba be lett állítva, és a <xref:System.Data.DataRow.HasErrors%2A>tulajdonság hamis értéket ad vissza.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Egy egyéni hiba leírása a teljes soron beállításához használja a <xref:System.Data.DataRow.RowError%2A>tulajdonság.</xref:System.Data.DataRow.RowError%2A>       Annak megállapításához, hogy léteznek-e hibák a columns gyűjteményében, használja a <xref:System.Data.DataRow.HasErrors%2A>metódus.</xref:System.Data.DataRow.HasErrors%2A>       A columns gyűjteményben kapcsolatos összes hiba törléséhez használja a <xref:System.Data.DataRow.ClearErrors%2A>metódus.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_1_1.vb)]"
  syntax:
    content: public void SetColumnError (string columnName, string error);
    parameters:
    - id: columnName
      type: System.String
      description: "Az oszlop neve."
    - id: error
      type: System.String
      description: "A hiba leírása."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetModified
  id: SetModified
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Modified&quot; name=&quot;Modified&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Változások a <xref:System.Data.DataRow.Rowstate%2A>, egy <xref:System.Data.DataRow>való `Modified`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Rowstate%2A> Ha vagy nincs az aktuális sor egy `Unchanged` vagy egy `Added` állapotba kerül, hogy jelez egy <xref:System.InvalidOperationException>üzenet, amely `SetModified` csak hívható meg egy `DataRow` példányán, amelyen a `RowState` van `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetModified ();
    parameters: []
  overload: System.Data.DataRow.SetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  id: SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A megadott értékének beállítása <xref href=&quot;System.Data.DataColumn&quot;> </xref> null értékűre."
  remarks: "Használja a <xref:System.Data.DataRow.IsNull%2A>módszer annak meghatározásához, hogy az oszlop null értéket tartalmaz.</xref:System.Data.DataRow.IsNull%2A>"
  syntax:
    content: protected void SetNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
  overload: System.Data.DataRow.SetNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  id: SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A szülő sorát beállítja egy <xref href=&quot;System.Data.DataRow&quot;> </xref> megadott új szülő <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "Az új szülőnek <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataRow.SetParentRow*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  id: SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A szülő sorát beállítja egy <xref href=&quot;System.Data.DataRow&quot;> </xref> megadott új szülő <xref href=&quot;System.Data.DataRow&quot;> </xref> és <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example sets the parent row of a specific child row.  \n  \n [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_2_1.vb)]"
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "Az új szülőnek <xref href=&quot;System.Data.DataRow&quot;> </xref>."
    - id: relation
      type: System.Data.DataRelation
      description: "A kapcsolat <xref href=&quot;System.Data.DataRelation&quot;> </xref> használatára."
  overload: System.Data.DataRow.SetParentRow*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Egyik sor nem tartozik hozzá"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A sorok egyik <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A reláció nem tartozik a <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> , a <xref href=&quot;System.Data.DataSet&quot;> </xref> objektum."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A kapcsolat gyermek <xref href=&quot;System.Data.DataTable&quot;> </xref> nincs a tábla a sor tartozik."
  platform:
  - net462
- uid: System.Data.DataRow.Table
  id: Table
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelynek a sornak a séma."
  remarks: "A <xref:System.Data.DataRow>nem feltétlenül tartozik bármely táblájának sorok gyűjteménye.</xref:System.Data.DataRow> Ez a viselkedés akkor fordul elő, amikor a <xref:System.Data.DataRow>hozott létre, de nem adja hozzá a <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> Ha a <xref:System.Data.DataRow.RowState%2A>tulajdonság beolvasása `DataRowState.Detached`, a sor nincs a gyűjteményben.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example uses the Table property to return a reference to the columns collection of the <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.Table Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ta_1.cs)]\n [!code-vb[Classic WebData DataRow.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ta_1.vb)]"
  syntax:
    content: public System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyhez a sor tartozik."
  overload: System.Data.DataRow.Table*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.RowNotInTableException
  parent: System.Data
  isExternal: false
  name: RowNotInTableException
  nameWithType: RowNotInTableException
  fullName: System.Data.RowNotInTableException
- uid: System.Data.InRowChangingEventException
  parent: System.Data
  isExternal: false
  name: InRowChangingEventException
  nameWithType: InRowChangingEventException
  fullName: System.Data.InRowChangingEventException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.VersionNotFoundException
  parent: System.Data
  isExternal: false
  name: VersionNotFoundException
  nameWithType: VersionNotFoundException
  fullName: System.Data.VersionNotFoundException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
- uid: System.Data.DataRowBuilder
  parent: System.Data
  isExternal: false
  name: DataRowBuilder
  nameWithType: DataRowBuilder
  fullName: System.Data.DataRowBuilder
- uid: System.Data.DataRow.AcceptChanges
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
- uid: System.Data.DataRow.BeginEdit
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
- uid: System.Data.DataRow.CancelEdit
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
- uid: System.Data.DataRow.ClearErrors
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
- uid: System.Data.DataRow.Delete
  parent: System.Data.DataRow
  isExternal: false
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
- uid: System.Data.DataRow.EndEdit
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRow.GetChildRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRow.GetColumnError(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
- uid: System.Data.DataRow.GetColumnsInError
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRow.GetParentRow(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
- uid: System.Data.DataRow.GetParentRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
- uid: System.Data.DataRow.HasErrors
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
- uid: System.Data.DataRow.IsNull(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
- uid: System.Data.DataRow.IsNull(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
- uid: System.Data.DataRow.Item(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
- uid: System.Data.DataRow.Item(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
- uid: System.Data.DataRow.ItemArray
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.RejectChanges
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
- uid: System.Data.DataRow.RowError
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
- uid: System.Data.DataRow.RowState
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.DataRow.SetAdded
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
- uid: System.Data.DataRow.SetModified
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
- uid: System.Data.DataRow.Table
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRow.#ctor*
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow
  nameWithType: DataRow.DataRow
- uid: System.Data.DataRow.AcceptChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges
  nameWithType: DataRow.AcceptChanges
- uid: System.Data.DataRow.BeginEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit
  nameWithType: DataRow.BeginEdit
- uid: System.Data.DataRow.CancelEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit
  nameWithType: DataRow.CancelEdit
- uid: System.Data.DataRow.ClearErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors
  nameWithType: DataRow.ClearErrors
- uid: System.Data.DataRow.Delete*
  parent: System.Data.DataRow
  isExternal: false
  name: Delete
  nameWithType: DataRow.Delete
- uid: System.Data.DataRow.EndEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit
  nameWithType: DataRow.EndEdit
- uid: System.Data.DataRow.GetChildRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows
  nameWithType: DataRow.GetChildRows
- uid: System.Data.DataRow.GetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError
  nameWithType: DataRow.GetColumnError
- uid: System.Data.DataRow.GetColumnsInError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError
  nameWithType: DataRow.GetColumnsInError
- uid: System.Data.DataRow.GetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow
  nameWithType: DataRow.GetParentRow
- uid: System.Data.DataRow.GetParentRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows
  nameWithType: DataRow.GetParentRows
- uid: System.Data.DataRow.HasErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
- uid: System.Data.DataRow.HasVersion*
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion
  nameWithType: DataRow.HasVersion
- uid: System.Data.DataRow.IsNull*
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull
  nameWithType: DataRow.IsNull
- uid: System.Data.DataRow.Item*
  parent: System.Data.DataRow
  isExternal: false
  name: Item
  nameWithType: DataRow.Item
- uid: System.Data.DataRow.ItemArray*
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
- uid: System.Data.DataRow.RejectChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges
  nameWithType: DataRow.RejectChanges
- uid: System.Data.DataRow.RowError*
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
- uid: System.Data.DataRow.RowState*
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
- uid: System.Data.DataRow.SetAdded*
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded
  nameWithType: DataRow.SetAdded
- uid: System.Data.DataRow.SetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError
  nameWithType: DataRow.SetColumnError
- uid: System.Data.DataRow.SetModified*
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified
  nameWithType: DataRow.SetModified
- uid: System.Data.DataRow.SetNull*
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull
  nameWithType: DataRow.SetNull
- uid: System.Data.DataRow.SetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow
  nameWithType: DataRow.SetParentRow
- uid: System.Data.DataRow.Table*
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
