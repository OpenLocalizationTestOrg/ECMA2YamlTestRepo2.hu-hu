### YamlMime:ManagedReference
items:
- uid: System.Web.DefaultHttpHandler
  id: DefaultHttpHandler
  children:
  - System.Web.DefaultHttpHandler.#ctor
  - System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.DefaultHttpHandler.Context
  - System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  - System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  - System.Web.DefaultHttpHandler.IsReusable
  - System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  - System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  - System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler
  fullName: System.Web.DefaultHttpHandler
  type: Class
  summary: "A tulajdonságok és módszerek alapértelmezett HTTP-kezelő jelöli."
  remarks: "A DefaultHttpHandler osztályt aszinkron módon objektum elfogja a bejövő kérelmeket a HTTP-feldolgozási folyamat egyaránt kérelem hozzáférés keresztül az Internet Information Services (IIS) 6.0 van konfigurálva, és nincs explicit kötés a kért bővítmény vonatkozik.       Kérelem hozzáférés az IIS 6.0 rendszerben bevezetett helyettesítő alkalmazástársításhoz funkción keresztül is beállítható. További információért keressen rá a [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) információk helyettesítő alkalmazástársítások URL-címet hozzárendelni.       A DefaultHttpHandler osztályt aszinkron módon osztály megvalósítja az <xref:System.Web.IHttpAsyncHandler>felületet nyújt aszinkron kérelem feldolgozási.</xref:System.Web.IHttpAsyncHandler> HTTP-kezelők kapcsolatos általános információkért lásd: [HTTP-kezelők és a HTTP-modulok áttekintése](~/add/includes/ajax-current-ext-md.md). Emellett további információ: a következő: - aszinkron HTTP-kezelők, létrehozásával kapcsolatban lásd: [forgatókönyv: egy aszinkron HTTP-kezelő létrehozása](~/add/includes/ajax-current-ext-md.md).      -A HTTP-kezelők regisztrálásáról, lásd: [hogyan: HTTP-kezelők regisztrálása](~/add/includes/ajax-current-ext-md.md).       Osztályok az osztályt a DefaultHttpHandler osztályt aszinkron módon adja meg a testreszabott kezelésére vonatkozó kérelmeket is származik. Egy aszinkron HTTP-kezelő a DefaultHttpHandler osztályt aszinkron módon származó sikerült bírálja felül a <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>módszer módosításához a kérelmek feldolgozásának módja.</xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>       A DefaultHttpHandler osztályt aszinkron módon nem használja az ASP.NET-hibákat. Meglévő tartalom, amely használja az IIS hibák, vagy egy illendőségi ISAPI egyéni hiba mechanizmus változatlanul működik."
  example:
  - "The following code example demonstrates how to implement a customized HTTP handler by deriving from the DefaultHttpHandler class.  \n  \n [!code-vb[System.Web.DefaultHttpHandler#1](~/add/codesnippet/visualbasic/t-system.web.defaulthttp_1.vb)]\n [!code-cs[System.Web.DefaultHttpHandler#1](~/add/codesnippet/csharp/t-system.web.defaulthttp_1.cs)]"
  syntax:
    content: 'public class DefaultHttpHandler : System.Web.IHttpAsyncHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpAsyncHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.#ctor
  id: '#ctor'
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> osztály."
  syntax:
    content: public DefaultHttpHandler ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "A HTTP-kezelő egy aszinkron hívás kezdeményezése."
  remarks: "Egy aszinkron használható HTTP-kezelő létrehozásakor a kezelő meg kell valósítania az aszinkron BeginProcessRequest metódus és <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>módszereket, amelyek ASP.NET aszinkron módon nevezzük.</xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>"
  syntax:
    content: public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Olyan objektum, amely a belső kiszolgáló mutató hivatkozások objektumok használt HTTP-kérelmek kiszolgálásához."
    - id: callback
      type: System.AsyncCallback
      description: "A metódus hívására az aszinkron metódushívások befejeződött. Ha `callback` van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a delegált nem hívják meg."
    - id: state
      type: System.Object
      description: "Bármely állapotadatok ahhoz szükséges, hogy a kérelem feldolgozását."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, hogy a folyamat a állapotára vonatkozó információkat tartalmazza.</xref:System.IAsyncResult>"
  overload: System.Web.DefaultHttpHandler.BeginProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A kérelem sikertelen lesz, és a kért fájl feldolgozása előfeltételeit a utótag .asp rendelkezik, vagy a kérelem lett elküldve a POST keresztül."
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.Context
  id: Context
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Lekérdezi a környezetben, az aktuális társított <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> objektum."
  remarks: "A Context tulajdonság férhet hozzá az aktuális <xref:System.Web.HttpContext>objektum származtatott osztályok esetében alkalmazható.</xref:System.Web.HttpContext> Egy <xref:System.Web.HttpContext>objektum férhet hozzá a belső <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, és <xref:System.Web.HttpApplication.Server%2A>a kérelem tulajdonságok.</xref:System.Web.HttpApplication.Server%2A> </xref:System.Web.HttpApplication.Response%2A> </xref:System.Web.HttpApplication.Request%2A> </xref:System.Web.HttpContext> Környezetfüggő adatok elérésével kapcsolatos további információkért lásd: <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "Egy <xref href=&quot;System.Web.HttpContext&quot;> </xref> objektum, amely tartalmazza az aktuális környezetben."
  overload: System.Web.DefaultHttpHandler.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy aszinkron folyamat befejezési módszert kínál."
  remarks: "A EndProcessRequest metódus segítségével throw az aszinkron során észlelt kivételek."
  syntax:
    content: public virtual void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A folyamat állapotára vonatkozó információkat tartalmazó objektum."
  overload: System.Web.DefaultHttpHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  id: ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Lekérdezi a kérelemfejléc és átvitele a kéréssel együtt kérelem értékek gyűjteménye."
  remarks: "A ExecuteUrlHeaders tulajdonság adja vissza egy üres gyűjteményt, kivéve, ha az a <xref:System.Web.DefaultHttpHandler>osztályból</xref:System.Web.DefaultHttpHandler> származtatott osztály a telepítéskor A hozzáadott fejlécek előtt a kérelem vissza az Internet Information Services (IIS) a kérelem fejléc a gyűjtemény lesz hozzáfűzve."
  syntax:
    content: protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> tartalmazó kérelemfejléc és értékeket."
  overload: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Egy logikai érték, jelezve, hogy egy másik kérelem használhatja-e az aktuális példányát lekérdezi a <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> osztály."
  remarks: "Az explicit módon beállítva a IsReusable tulajdonság `true` vagy `false`, bírálja felül a IsReusable tulajdonságot."
  syntax:
    content: public virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> újrafelhasználható; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DefaultHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  id: OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Hívható meg, ha az Előfeltételek megakadályozzák a <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> objektumhoz a kérelem feldolgozásakor."
  remarks: "Az Előfeltételek a kérelem fejlécmezők az ügyfél által megadott, és a kiértékelésük a webkiszolgálón. Például az Előfeltételek használatával az ügyfelek előfordulhat, hogy egy kért metódus (például GET) a rendszer alkalmazza a egy kívánt eltérő erőforrásra. További információkért lásd: 14., &quot;Fejléc mező definíciókat,&quot; szakasz a a [Hypertext Transfer Protocol – a HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) meghatározása a World Wide Web Consortium (W3C) webhelyen.       A OnExecuteUrlPreconditionFailure metódus lehívásra kerül, ha az Előfeltételek megakadályozzák a <xref:System.Web.DefaultHttpHandler>objektumhoz a kérelem feldolgozásakor.</xref:System.Web.DefaultHttpHandler> Deriving osztály felülírhatják a OnExecuteUrlPreconditionFailure metódus kivételt jelez, ha az előfeltételeket nem sikerül. A <xref:System.Web.DefaultHttpHandler>nem lépett fel kivételhiba OnExecuteUrlPreconditionFailure metódus.</xref:System.Web.DefaultHttpHandler>       Az alábbi, akkor sikertelen lesz az Előfeltételek:- <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName> hívja.      - <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName> Hívása      - <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName> Hívása      -A válasz gyorsítótár-házirend módosítása.      -Hozzáadása egy <xref:System.IO.Stream>egy szűrőt, amely az objektumot a <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>tulajdonság.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual void OnExecuteUrlPreconditionFailure ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  id: OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Felülbírálja az aktuális kérelem célként megadott URL-CÍMÉT."
  remarks: "A OverrideExecuteUrlPath metódus visszaadja `null` kivéve, ha azt felülbírálja az a <xref:System.Web.DefaultHttpHandler>osztályból</xref:System.Web.DefaultHttpHandler> származtatott osztály       A OverrideExecuteUrlPath metódus lehívásra kerül, csak ha ASP.NET munkavégző folyamatainak elkülönítési módjának az IIS 6.0 fut, és a válaszban nem volt módosítani előtt a <xref:System.Web.DefaultHttpHandler>objektum lett meghívva.</xref:System.Web.DefaultHttpHandler> A válasz módosul a a következőket:- <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName> hívja.      - <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName> Hívása      - <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName> Hívása      -A válasz gyorsítótár-házirend módosítása.      -Hozzáadása egy <xref:System.IO.Stream>egy szűrőt, amely az objektumot a <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>tulajdonság.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual string OverrideExecuteUrlPath ();
    parameters: []
    return:
      type: System.String
      description: "Felülbírált URL-CÍMÉT használja a kérésben; vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha egy felülbírált URL-cím nem áll rendelkezésre."
  overload: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Lehetővé teszi, hogy egy <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> objektum HTTP webes kérelmek folyamatán."
  remarks: "A: feldolgozási kérelem metódus szinkron módon nem hívható. A származtatott osztályok a <xref:System.Web.DefaultHttpHandler>osztály lehet felülbírálni a testreszabott Kérelemfeldolgozás biztosításához: feldolgozási kérelem.</xref:System.Web.DefaultHttpHandler>"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Egy objektum, amely HTTP-kérelmek kiszolgálásához használt belső server objektumokra mutató hivatkozásokat biztosít."
  overload: System.Web.DefaultHttpHandler.ProcessRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A: feldolgozási kérelem neve szinkron módon történik."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DefaultHttpHandler.#ctor
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.DefaultHttpHandler.Context
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.DefaultHttpHandler.IsReusable
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.DefaultHttpHandler.#ctor*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler.DefaultHttpHandler
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: DefaultHttpHandler.BeginProcessRequest
- uid: System.Web.DefaultHttpHandler.Context*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: DefaultHttpHandler.EndProcessRequest
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Web.DefaultHttpHandler.IsReusable*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath
- uid: System.Web.DefaultHttpHandler.ProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: DefaultHttpHandler.ProcessRequest
