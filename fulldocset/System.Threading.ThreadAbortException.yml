### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadAbortException
  id: ThreadAbortException
  children:
  - System.Threading.ThreadAbortException.ExceptionState
  langs:
  - csharp
  name: ThreadAbortException
  nameWithType: ThreadAbortException
  fullName: System.Threading.ThreadAbortException
  type: Class
  summary: "A kivétel fordul elő, ha a kérés érkezett a <xref:System.Threading.Thread.Abort*>metódus.</xref:System.Threading.Thread.Abort*> Ez az osztály nem örökölhető."
  remarks: "Ha a kérés érkezett a <xref:System.Threading.Thread.Abort%2A>metódus egy szál a közös nyelvi futtatókörnyezet megsemmisítése jelez a ThreadAbortException.</xref:System.Threading.Thread.Abort%2A> ThreadAbortException egy különleges kivételt, amely lehet letiltani, de az automatikusan generál újra végén a `catch` blokkot. Ez a kivétel következik be, amikor a futásidejű összes végrehajtja a `finally` blokkolja a szál befejezése előtt. Mert a szál elvégezhető műveleteket egy unbounded számítási a `finally` blokkok vagy hívás <xref:System.Threading.Thread.ResetAbort%2A?displayProperty=fullName>megszakítja a megszakítást, nem biztos, hogy minden eddiginél véget ér a szál nincs.</xref:System.Threading.Thread.ResetAbort%2A?displayProperty=fullName> Ha azt szeretné, várja meg, amíg a megszakított szál véget ért, hívása a <xref:System.Threading.Thread.Join%2A?displayProperty=fullName>metódus.</xref:System.Threading.Thread.Join%2A?displayProperty=fullName> <xref:System.Threading.Thread.Join%2A>van egy blokkoló hívás, amely nem ad vissza, amíg a szál ténylegesen végrehajtása megszakad.</xref:System.Threading.Thread.Join%2A>      > [!NOTE] > Háttér threadsafter egy felügyelt végrehajtható fájl az összes előtérbeli lánc megszakította a közös nyelvi futtatókörnyezet (CLR) leállásakor <xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>.</xref:System.Threading.Thread.Abort%2A?displayProperty=fullName> nem használ ThreadAbortException, ezért nem használható észlelés, ha háttérszál leállítása folyamatban van a közös nyelvi futtató környezet által.       ThreadAbortException használja a HRESULT COR_E_THREADABORTED, amely 0x80131530 értékkel rendelkezik.      > [!NOTE] > Az örökölt értékének <xref:System.Exception.Data%2A>tulajdonság értéke mindig `null`.</xref:System.Exception.Data%2A>"
  example:
  - "The following example demonstrates aborting a thread. The thread that receives the `ThreadAbortException` uses the <xref:System.Threading.Thread.ResetAbort%2A> method to cancel the abort request and continue executing.  \n  \n [!code-cpp[ThreadAbEx#1](~/add/codesnippet/cpp/t-system.threading.threa_4_1.cpp)]\n [!code-vb[ThreadAbEx#1](~/add/codesnippet/visualbasic/t-system.threading.threa_4_1.vb)]\n [!code-cs[ThreadAbEx#1](~/add/codesnippet/csharp/t-system.threading.threa_4_1.cs)]  \n  \n This code produces the following output:  \n  \n```  \nThread - working.  \nMain - aborting my thread.  \nThread - caught ThreadAbortException - resetting.  \nException message: Thread was being aborted.  \nThread - still alive and working.  \nThread - finished working.  \nMain ending.  \n```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ThreadAbortException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.ThreadAbortException.ExceptionState
  id: ExceptionState
  parent: System.Threading.ThreadAbortException
  langs:
  - csharp
  name: ExceptionState
  nameWithType: ThreadAbortException.ExceptionState
  fullName: System.Threading.ThreadAbortException.ExceptionState
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "A szál megszakítási kapcsolódik az alkalmazás-specifikus információkat tartalmazó objektum beolvasása."
  remarks: "Ez a tulajdonság által visszaadott objektum keresztül megadott a `stateInfo` paramétere a <xref:System.Threading.Thread.Abort%2A>metódus.</xref:System.Threading.Thread.Abort%2A> A pontos tartalom és a használati az objektum az alkalmazás által meghatározott; általában a megszakított szál kifejező információáramlás szolgál."
  example:
  - "The following code example shows how to pass information to a thread that is being aborted.  \n  \n [!code-cs[System.Threading.Thread.Abort2#1](~/add/codesnippet/csharp/p-system.threading.threa_10_1.cs)]\n [!code-cpp[System.Threading.Thread.Abort2#1](~/add/codesnippet/cpp/p-system.threading.threa_10_1.cpp)]\n [!code-vb[System.Threading.Thread.Abort2#1](~/add/codesnippet/visualbasic/p-system.threading.threa_10_1.vb)]"
  syntax:
    content: public object ExceptionState { get; }
    return:
      type: System.Object
      description: "Az alkalmazás-specifikus információkat tartalmazó objektum."
  overload: System.Threading.ThreadAbortException.ExceptionState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Threading.ThreadAbortException.ExceptionState
  parent: System.Threading.ThreadAbortException
  isExternal: false
  name: ExceptionState
  nameWithType: ThreadAbortException.ExceptionState
  fullName: System.Threading.ThreadAbortException.ExceptionState
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.ThreadAbortException.ExceptionState*
  parent: System.Threading.ThreadAbortException
  isExternal: false
  name: ExceptionState
  nameWithType: ThreadAbortException.ExceptionState
