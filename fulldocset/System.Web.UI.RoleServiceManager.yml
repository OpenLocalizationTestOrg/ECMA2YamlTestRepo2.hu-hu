### YamlMime:ManagedReference
items:
- uid: System.Web.UI.RoleServiceManager
  id: RoleServiceManager
  children:
  - System.Web.UI.RoleServiceManager.#ctor
  - System.Web.UI.RoleServiceManager.LoadRoles
  - System.Web.UI.RoleServiceManager.Path
  langs:
  - csharp
  name: RoleServiceManager
  nameWithType: RoleServiceManager
  fullName: System.Web.UI.RoleServiceManager
  type: Class
  summary: "Azt határozza meg a szerepkör-szolgáltatás egyéni végrehajtásának."
  remarks: "A RoleServiceManager osztály felel meg a <xref:System.Web.UI.ScriptManager.RoleService%2A>tulajdonsága a <xref:System.Web.UI.ScriptManager>vagy <xref:System.Web.UI.ScriptManagerProxy>vezérlő.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RoleService%2A>       A szerepkör webszolgáltatás AJAX-kompatibilis alkalmazások használják egy aszinkron webszolgáltatás-hívások segítségével az aktuális hitelesített felhasználó szerepkör információinak lekérése érdekében. RoleServiceManager segítségével adja meg egy alternatív implementáció a szerepkör helyett a beépített webszolgáltatással webszolgáltatás elérési útját.       Az alkalmazás a szerepkör-szolgáltatás használatához engedélyezze a konfigurációs fájlban, és deklarálja azt a lapon. A webszolgáltatás beépített szerepkör használja, ha azt engedélyezni kell, de nem kell explicit módon deklarálja a szerepkör az oldalon a service manager.       Hozzon létre egy egyéni szerepkör-szolgáltatás, meg kell valósítani egy webszolgáltatás, amelyet a két módszer van: `GetRolesForCurrentUser` és `IsCurrentUserInRole`. Ezek a módszerek a beépített szerepkör webszolgáltatás megfelelő módszerként ugyanazzal az aláírással kell rendelkeznie.       A következő példa bemutatja az alapvető osztály struktúra, amely egy egyéni biztonsági szerepkört a webszolgáltatási osztály kell megvalósítani.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] egy egyéni biztonsági szerepkört webszolgáltatás használatához adhat hozzá a szolgáltatás deklarációval markup tegyen egy `RoleService` elem belül a <xref:System.Web.UI.ScriptManager>szabályozzák, a következő példában látható módon.</xref:System.Web.UI.ScriptManager>      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <RoleService Path=&quot;MyRoleService.asmx&quot; LoadRoles=&quot;true&quot; />   </asp:ScriptManager>   ```Szoftveresen is beállíthat a <xref:System.Web.UI.RoleServiceManager.Path%2A>egy egyéni biztonsági szerepkört webszolgáltatás használt tulajdonságát.</xref:System.Web.UI.RoleServiceManager.Path%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class RoleServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.RoleServiceManager&quot;> </xref> osztály."
  syntax:
    content: public RoleServiceManager ();
    parameters: []
  overload: System.Web.UI.RoleServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  id: LoadRoles
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a listában a jelenleg bejelentkezett felhasználói szerepek kell beolvasni."
  remarks: "Ha a LoadRoles tulajdonsága `true`, a szerepkörök a listát a <xref:System.Web.UI.RoleServiceManager>osztály használatával a <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName>metódus.</xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=fullName> </xref:System.Web.UI.RoleServiceManager> A lista majd szerializálni a lap jelölőkódjában.      > [!NOTE] > Amikor LoadRoles van `true`, a böngésző küldött összes szerepkör, amely az aktuális hitelesített felhasználó tartozik. Potenciálisan értesülhet a szerepkör-információ, mert ez egy biztonsági probléma lehet.       A LoadRoles tulajdonság is megadhatók a <xref:System.Web.UI.ScriptManager>vezérlő vagy a hozzárendelt <xref:System.Web.UI.ScriptManagerProxy>vezérlő.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Ha LoadRoles `true` a proxy példányához szerepkörök listájának lekérése és adva a laphoz. Ha LoadRoles `false`, a szerepkörök nem lettek hozzáadva a lap jelölőkódjában. Ebben az esetben a metódus segítségével szerepkör tárolása a memóriában a böngészőben."
  syntax:
    content: public bool LoadRoles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a szerepkörök listáját kell elérni. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.RoleServiceManager.LoadRoles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.RoleServiceManager.Path
  id: Path
  parent: System.Web.UI.RoleServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Lekérdezi vagy beállítja a szerepkör-szolgáltatás elérési útját."
  remarks: "Ha az elérési út tulajdonság nincs beállítva, a visszatérési értéke <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> Ebben az esetben az ASP.NET a beépített hitelesítési webszolgáltatás, amely megfelel a következő belső alapértelmezett elérési utat: ~ / RolesService.svc. Ugyanez a viselkedés akkor fordul elő, ha üres karakterláncot elérési útja vagy az `null`.       Elérési út lehet megadni a <xref:System.Web.UI.ScriptManager>vezérlő vagy a hozzárendelt <xref:System.Web.UI.ScriptManagerProxy>vezérlő.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Ha az elérési út értéke a <xref:System.Web.UI.ScriptManagerProxy>szint, az alábbi feltételek közül mind teljesül:-Ha a vezérlő hierarchiában több proxyobjektumainak, elérési út nem kell állítható be proxy feltünteti.</xref:System.Web.UI.ScriptManagerProxy>      – Ha az elérési út explicit módon van megadva a proxy-objektum, az érték minden más proxyobjektumainak, hogy ez a tulajdonság értéke: azonosnak kell lennie. Ha eltérő proxykiszolgálót objektumok elérési útja eltér a vezérlő hierarchiában egy <xref:System.ArgumentException>kivétel történt.</xref:System.ArgumentException>"
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Az egyéni szerepkör webszolgáltatás elérési útja"
  overload: System.Web.UI.RoleServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A vezérlő hierarchia egynél több egyedi elérési út lett beállítva."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.RoleServiceManager.#ctor
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager()
  nameWithType: RoleServiceManager.RoleServiceManager()
  fullName: System.Web.UI.RoleServiceManager.RoleServiceManager()
- uid: System.Web.UI.RoleServiceManager.LoadRoles
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
  fullName: System.Web.UI.RoleServiceManager.LoadRoles
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.RoleServiceManager.Path
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
  fullName: System.Web.UI.RoleServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.RoleServiceManager.#ctor*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: RoleServiceManager
  nameWithType: RoleServiceManager.RoleServiceManager
- uid: System.Web.UI.RoleServiceManager.LoadRoles*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: LoadRoles
  nameWithType: RoleServiceManager.LoadRoles
- uid: System.Web.UI.RoleServiceManager.Path*
  parent: System.Web.UI.RoleServiceManager
  isExternal: false
  name: Path
  nameWithType: RoleServiceManager.Path
