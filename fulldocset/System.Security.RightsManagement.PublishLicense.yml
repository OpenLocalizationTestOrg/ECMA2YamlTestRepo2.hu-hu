### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.PublishLicense
  id: PublishLicense
  children:
  - System.Security.RightsManagement.PublishLicense.#ctor(System.String)
  - System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)
  - System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)
  - System.Security.RightsManagement.PublishLicense.ContentId
  - System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)
  - System.Security.RightsManagement.PublishLicense.ReferralInfoName
  - System.Security.RightsManagement.PublishLicense.ReferralInfoUri
  - System.Security.RightsManagement.PublishLicense.ToString
  - System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
  langs:
  - csharp
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
  type: Class
  summary: "A közzétételi licenc aláírt jogok felügyelt jelöli."
  remarks: "PublishLicense határozza meg a jogosultságok, a felhasználók és az egyéb biztonsági adatokat biztonsági adatait.  A licenc határozza meg, egy adott számítógép adott felhasználó használatát megadott tartalomvédelemmel ellátott.       A dokumentum szerzője, akik jogosultságokkal információkat a <xref:System.Security.RightsManagement.UnsignedPublishLicense>.</xref:System.Security.RightsManagement.UnsignedPublishLicense> határozza meg a közzétételi folyamat kezdete  Ezután a szerző hoz létre egy aláírt PublishLicense <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> <xref:System.Security.RightsManagement.UnsignedPublishLicense>.</xref:System.Security.RightsManagement.UnsignedPublishLicense> metódus</xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> meghívásával  Az aláírt PublishLicense szerializált formájában majd biztosítható, hogy a végfelhasználók számára, akik segítségével szerezzen be egy <xref:System.Security.RightsManagement.UseLicense>meghívásával a <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>a PublishLicense metódusában.</xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> </xref:System.Security.RightsManagement.UseLicense>  A visszaadott <xref:System.Security.RightsManagement.UseLicense>majd lehetővé teszi, hogy az ügyfélalkalmazás a, amelyeket a felhasználó megadott jogainak.</xref:System.Security.RightsManagement.UseLicense>       Mint más <xref:System.Security.RightsManagement>típusait, a PublishLicense csak teljesen megbízható alkalmazásban használható.</xref:System.Security.RightsManagement>"
  example:
  - "The following example shows how to initialize a PublishLicense by using the <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> method.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class PublishLicense
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: PublishLicense(String)
  nameWithType: PublishLicense.PublishLicense(String)
  fullName: System.Security.RightsManagement.PublishLicense.PublishLicense(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> egy meghatározott osztály szerializált és aláírt <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref>."
  syntax:
    content: public PublishLicense (string signedPublishLicense);
    parameters:
    - id: signedPublishLicense
      type: System.String
      description: "Aláírt és szerializálni A közzétételi licenc."
  overload: System.Security.RightsManagement.PublishLicense.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>signedPublishLicense</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "A licenc érvénytelen."
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)
  id: AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: AcquireUseLicense(SecureEnvironment)
  nameWithType: PublishLicense.AcquireUseLicense(SecureEnvironment)
  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(SecureEnvironment)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Megkísérli a <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> egy felhasználó vagy felhasználói csoport a megadott <xref href=&quot;System.Security.RightsManagement.SecureEnvironment&quot;> </xref>."
  syntax:
    content: public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: "A biztonságos környezetet licenc aktiválása és kötés."
    return:
      type: System.Security.RightsManagement.UseLicense
      description: "A <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> egy felhasználó vagy felhasználói csoport a megadott <code> secureEnvironment </code>."
  overload: System.Security.RightsManagement.PublishLicense.AcquireUseLicense*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>secureEnvironment</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "A hitelesítés sikertelen."
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)
  id: AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: AcquireUseLicenseNoUI(SecureEnvironment)
  nameWithType: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)
  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Megkísérli a <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> egy felhasználó vagy felhasználói csoport a megadott <xref href=&quot;System.Security.RightsManagement.SecureEnvironment&quot;> </xref>."
  remarks: "A AcquireUseLicenseNoUI metódus mellőzi a Windows hálózati hitelesítési párbeszédpanelt. Ha a licenc kérelem elérése megtagadva, mert a felhasználó nem rendelkezik engedéllyel, AcquireUseLicenseNoUI megakadályozza, hogy a hálózati hitelesítés párbeszédpanel megjelenítése. Segítségével csendes megszerzésére tett kísérlet során licencek háttérfeladat vagy egy nem felhasználói felület, amely előfordulhat, hogy zavaró párbeszédpanel jelenik meg az beszerzése."
  syntax:
    content: public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: "A biztonságos környezetet licenc aktiválása és kötés."
    return:
      type: System.Security.RightsManagement.UseLicense
      description: "A <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> egy felhasználó vagy felhasználói csoport a megadott <code> secureEnvironment </code>."
  overload: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>secureEnvironment</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "A hitelesítés sikertelen."
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.ContentId
  id: ContentId
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: ContentId
  nameWithType: PublishLicense.ContentId
  fullName: System.Security.RightsManagement.PublishLicense.ContentId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekéri a gyártó által létrehozott tartalom azonosítója."
  remarks: "Közzétevők hozzon létre egy <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A>a védett tartalom azonosításához.</xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A>"
  syntax:
    content: public Guid ContentId { get; }
    return:
      type: System.Guid
      description: "A gyártó által létrehozott tartalom azonosítója."
  overload: System.Security.RightsManagement.PublishLicense.ContentId*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)
  id: DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: DecryptUnsignedPublishLicense(CryptoProvider)
  nameWithType: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)
  fullName: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Visszaadja a visszafejtett <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref> ez aláírt verzióját <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref>."
  remarks: "A DecryptUnsignedPublishLicense módszer lehetővé teszi, hogy a licenc tulajdonosa és a felhasználók, akik kaptak <xref:System.Security.RightsManagement.ContentRight>kinyerheti az eredeti információt, de a titkosított, amikor a <xref:System.Security.RightsManagement.PublishLicense>lett létrehozva.</xref:System.Security.RightsManagement.PublishLicense> </xref:System.Security.RightsManagement.ContentRight>"
  syntax:
    content: public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "A tartalomvédelmi szolgáltatás tartalomkulcsot a licenc használatára."
    return:
      type: System.Security.RightsManagement.UnsignedPublishLicense
      description: "A visszafejtett, előjel nélküli verzióját a licencet."
  overload: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cryptoProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName
  id: ReferralInfoName
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: ReferralInfoName
  nameWithType: PublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekérdezi a szerző vagy a tartalom közzétevője kapcsolattartójának a neve."
  remarks: "A ReferralInfoName tulajdonság által visszaadott karakterlánc nem titkosított, és akkor is, ha a felhasználó még nem rendelkezik egy <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense> érhető el  A visszaadott karakterlánc lehetővé teszi a felhasználók kapcsolatba <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense> kéréséhez publisher"
  syntax:
    content: public string ReferralInfoName { get; }
    return:
      type: System.String
      description: "A szerző vagy a tartalom közzétevője a kapcsolattartó személy nevét."
  overload: System.Security.RightsManagement.PublishLicense.ReferralInfoName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri
  id: ReferralInfoUri
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: ReferralInfoUri
  nameWithType: PublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekérdezi a kapcsolattartó [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] a szerző vagy a tartalom közzétevője."
  remarks: "A ReferralInfoUri tulajdonság által visszaadott karakterlánc nem titkosított, és akkor is, ha a felhasználó még nem rendelkezik egy <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense> érhető el  A visszaadott karakterlánc lehetővé teszi a felhasználók kapcsolatba <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense> kéréséhez publisher"
  syntax:
    content: public Uri ReferralInfoUri { get; }
    return:
      type: System.Uri
      description: "Az ügyfél [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] a szerző vagy a tartalom közzétevője."
  overload: System.Security.RightsManagement.PublishLicense.ReferralInfoUri*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.ToString
  id: ToString
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: ToString()
  nameWithType: PublishLicense.ToString()
  fullName: System.Security.RightsManagement.PublishLicense.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Visszaadja a szerializált [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] karakterláncot, amelyet ez a licenc létrehozásához használt."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A szerializált [!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)] karakterláncot, amelyet ez a licenc létrehozásához használt."
  overload: System.Security.RightsManagement.PublishLicense.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
  id: UseLicenseAcquisitionUrl
  parent: System.Security.RightsManagement.PublishLicense
  langs:
  - csharp
  name: UseLicenseAcquisitionUrl
  nameWithType: PublishLicense.UseLicenseAcquisitionUrl
  fullName: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekérdezi a [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] való használatra az beszerzése egy <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref>."
  remarks: "A UseLicenseAcquisitionUrl tulajdonságot használja a <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>módszert, ha a felhasználó bejelentkezne <xref:System.Security.RightsManagement.UseLicense>.</xref:System.Security.RightsManagement.UseLicense> </xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>"
  syntax:
    content: public Uri UseLicenseAcquisitionUrl { get; }
    return:
      type: System.Uri
      description: "A [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] való használatra az beszerzése egy <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref>."
  overload: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.RightsManagement.RightsManagementException
  parent: System.Security.RightsManagement
  isExternal: false
  name: RightsManagementException
  nameWithType: RightsManagementException
  fullName: System.Security.RightsManagement.RightsManagementException
- uid: System.Security.RightsManagement.PublishLicense.#ctor(System.String)
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: PublishLicense(String)
  nameWithType: PublishLicense.PublishLicense(String)
  fullName: System.Security.RightsManagement.PublishLicense.PublishLicense(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: AcquireUseLicense(SecureEnvironment)
  nameWithType: PublishLicense.AcquireUseLicense(SecureEnvironment)
  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicense(SecureEnvironment)
- uid: System.Security.RightsManagement.UseLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UseLicense
  nameWithType: UseLicense
  fullName: System.Security.RightsManagement.UseLicense
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: AcquireUseLicenseNoUI(SecureEnvironment)
  nameWithType: PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)
  fullName: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(SecureEnvironment)
- uid: System.Security.RightsManagement.PublishLicense.ContentId
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ContentId
  nameWithType: PublishLicense.ContentId
  fullName: System.Security.RightsManagement.PublishLicense.ContentId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: DecryptUnsignedPublishLicense(CryptoProvider)
  nameWithType: PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)
  fullName: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(CryptoProvider)
- uid: System.Security.RightsManagement.UnsignedPublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense
  fullName: System.Security.RightsManagement.UnsignedPublishLicense
- uid: System.Security.RightsManagement.CryptoProvider
  parent: System.Security.RightsManagement
  isExternal: false
  name: CryptoProvider
  nameWithType: CryptoProvider
  fullName: System.Security.RightsManagement.CryptoProvider
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: PublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: PublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.PublishLicense.ReferralInfoUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Security.RightsManagement.PublishLicense.ToString
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ToString()
  nameWithType: PublishLicense.ToString()
  fullName: System.Security.RightsManagement.PublishLicense.ToString()
- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: UseLicenseAcquisitionUrl
  nameWithType: PublishLicense.UseLicenseAcquisitionUrl
  fullName: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl
- uid: System.Security.RightsManagement.PublishLicense.#ctor*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense.PublishLicense
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicense*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: AcquireUseLicense
  nameWithType: PublishLicense.AcquireUseLicense
- uid: System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: AcquireUseLicenseNoUI
  nameWithType: PublishLicense.AcquireUseLicenseNoUI
- uid: System.Security.RightsManagement.PublishLicense.ContentId*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ContentId
  nameWithType: PublishLicense.ContentId
- uid: System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: DecryptUnsignedPublishLicense
  nameWithType: PublishLicense.DecryptUnsignedPublishLicense
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoName*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: PublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.PublishLicense.ReferralInfoUri*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: PublishLicense.ReferralInfoUri
- uid: System.Security.RightsManagement.PublishLicense.ToString*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: ToString
  nameWithType: PublishLicense.ToString
- uid: System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl*
  parent: System.Security.RightsManagement.PublishLicense
  isExternal: false
  name: UseLicenseAcquisitionUrl
  nameWithType: PublishLicense.UseLicenseAcquisitionUrl
