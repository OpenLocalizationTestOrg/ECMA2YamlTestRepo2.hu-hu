### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint
  id: ConnectionPoint
  children:
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
  - System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
  langs:
  - csharp
  name: ConnectionPoint
  nameWithType: ConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint
  type: Class
  summary: "Működik, mint a kapcsolat definiálása alaposztálya objektumok, amelyek lehetővé teszik a felhasználói vezérlő, és a szolgáltató kijelzők kapcsolaton keresztül adatokat oszthatnak mutasson."
  remarks: "Minden kijelzők kapcsolati adatok megosztása két kiszolgáló vezérlők áll: egy vezérlőt a fogyasztó, a másik pedig a szolgáltató. A kijelzők kapcsolatot, és a kapcsolat objektum alapvető összetevői tárgyalását lásd: a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>osztály áttekintése.</xref:System.Web.UI.WebControls.WebParts.WebPartConnection> Minden kijelzők kapcsolat csatlakozási pontok igényel. A szolgáltató és a felhasználói vezérlő egyes objektummal kell rendelkeznie legalább egy meghatározott ConnectionPoint (azok opcionálisan rendelkezhet több kapcsolódási pont), amely hogyan vezérlő csatlakozhat egy másik vezérlő és oszthatnak meg az adatok részleteit tartalmazza. Egy tényleges kapcsolatot, a szolgáltató rendelkezik saját típusú kapcsolódási pont objektum (a ConnectionPoint alaposztályból származik), egy <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>példány, és a felhasználó rendelkezik a saját objektum egy <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>példány.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       A szolgáltatói csatlakozási pont létrehozásához fejlesztők hozzá kell adnia egy visszahívási metódus a szolgáltatót, amelyet a megvalósított illesztőfelület példánya visszaállítja az ügyféllel. Akkor kell megjelölni a forráskódban a visszahívási metódus egy `ConnectionProvider` kód attribútum (lásd a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>osztály).</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> Hasonlóképpen, egy ügyfél-csatlakozási pont létrehozásához fejlesztők hozzá kell adnia egy metódust az ügyfél, amely megkapja a felület példánya, és kell megjelölni, akkor ez a módszer az egy `ConnectionConsumer` attribútum (lásd a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>osztály).</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>       Amikor a fejlesztők a weblapon kapcsolatok létrehozása, azok statikus vagy dinamikus kapcsolatok hozhatók létre. A kód egy weblap statikus kapcsolatok van deklarálva. Statikus kapcsolat van deklarálva, amikor a fejlesztők jelölhet, mely csatlakozási pontok használják az ügyfél és a szolgáltató számára értékeket rendel a `ProviderConnectionPointID` és `ConsumerConnectionPointID` attribútumok belül a `<asp:webpartconnection>` element címkéjében. Ez a megoldás, különösen akkor hasznos, ha több kapcsolódási pontok meghatározott ügyfelének és szolgáltatójának vezérlőket, mivel lehetővé teszi, hogy mely csatlakozási pontok használata a kapcsolat azonosítására statikus kapcsolat.       Dinamikus kapcsolatok jönnek létre programozott módon, egy fejlesztő kód vagy felhasználók a felhasználói felületen (UI) által biztosított a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>vezérlő.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> Kapcsolat létrehozása a kódban, a fejlesztők egy példányát kell szereznie egy <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>meghívásával objektum a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>metódust a <xref:System.Web.UI.WebControls.WebParts.WebPartManager>vezérlő.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartConnection> A metódus hívása, akkor a fejlesztők a fogyasztók és szolgáltató vezérlőket és a megfelelő csatlakozási pont objektumokat kell rendelkeznie. A csatlakozási pontok mutató hivatkozások beolvasása egy szolgáltatót és egy felhasználói vezérlő, fejlesztők először hívja meg a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>és <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>metódusai a <xref:System.Web.UI.WebControls.WebParts.WebPartManager>vezérlő.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> Ezek a módszerek térjen vissza a megfelelő csatlakozási pont objektumokat, amely viszont átadhatók a kapcsolat létrehozásának módját.       Amikor a szolgáltató és a fogyasztói pont kapcsolatobjektumok is dolgozhat felület ugyanolyan kompatibilis, és adatokat oszthatnak közvetlen kapcsolatot is alkotnak. Ha azonos illesztőfelület típusú, nem működnek a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objektum kell használni olyan típusú, amely az ügyfél képes együttműködni a szolgáltató által a felület példányának lefordítani.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       A ConnectionPoint absztrakt osztály base részleteit fogyasztói és a szolgáltató által megosztott csatlakozási pontok biztosít. Több tulajdonságok ezeket az adatokat tartalmaznak. A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>a tulajdonság azt jelzi, hogy a szolgáltatáskapcsolódási pont részt vehetnek-e egyszerre több kapcsolatot.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> Alapértelmezés szerint szolgáltató kapcsolódási pontok részt vehetnek-több kapcsolat, és ügyfél-csatlakozási pont nem. A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>tulajdonság a szolgáltatáskapcsolódási pont társított kiszolgáló vezérlő típusát jelzi.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Vegye figyelembe, hogy nem csak <xref:System.Web.UI.WebControls.WebParts.WebPart>vezérlőket is alkotnak kapcsolatok; bármely kiszolgálói vezérlőnek egy ASP.NET-vezérlő, az egyéni vezérlő vagy a felhasználói vezérlőt, akkor engedélyezhető, kapcsolatok részt, ha egy <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zóna.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>tulajdonság biztosít a szolgáltatáskapcsolódási pont segítséget nyújtanak a felhasználók, akik hoznak létre kapcsolatokat a felhasználói felületen megjelenített rövid nevét.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>tulajdonság a csatlakozási pont objektum maga karakterlánc azonosítóként szolgál.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>a tulajdonság azt jelzi, hogy milyen típusú illesztőfelület példánya a szolgáltatáskapcsolódási pont együttműködik.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Hogy a megadott csatlakozási pont biztosít vagy használ fel, hogy a illesztő egy példánya határozza meg azt a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>vagy egy <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>objektum.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> </xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       A ConnectionPoint osztály egyik lehetséges módja van. A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>metódus visszaadja a szolgáltatáskapcsolódási pont jelenleg tudni kapcsolatokban is részt voltát jelző logikai érték.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>       A ConnectionPoint osztály is rendelkezik egy nyilvános mezőt, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> Ez a mező alapján határozza meg az alapértelmezett szolgáltatáskapcsolódási pont kapcsolaton keresztül értéket tartalmaz.      > [!NOTE] > Módszerek rendelkezik csak az egyik kötelező paraméter, a szolgáltatáskapcsolódási pont megadásával attribútumai `displayName`, így lehetősége az alapértelmezett csatlakozási pont attribútum létrehozása nélkül azonosítóval. Ilyen esetben a <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>mező megadja a használandó alapértéke.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>"
  example:
  - "The following code example demonstrates the creation of a Web Parts connection that includes the required ConnectionPoint objects. Because the ConnectionPoint class is an abstract base class, instances of its child classes--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--are the actual objects used to form a connection.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change the Web Parts display mode on a page.  \n  \n-   Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.  \n  \n-   A Web page to host all the controls and run the code example.  \n  \n-   An explanation of how to run the example page.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ConnectionPoint_Overview#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_73_1.ascx)]\n [!code-vb[WebParts_ConnectionPoint_Overview#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_73_1.ascx)]  \n  \n The second part of the code example is the source code for the interface and controls. The source file contains a simple interface named `IZipCode`. There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control. Its `ProvideIZipCode` method is the callback method that implements the interface's only member. The method simply returns an instance of the interface. Note that the method is marked with a `ConnectionProvider` attribute in its metadata. This is the mechanism for identifying the method as the callback method for the provider's connection point. The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection. This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control. Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata. This is the mechanism for identifying the connection point method in the consumer control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_73_2.vb)]\n [!code-cs[WebParts_ConnectionPoint_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_73_2.cs)]  \n  \n The third part of the code example is the Web page. Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page. The connection itself is created declaratively within the `<staticconnections>` element on the page. You can also create the connection programmatically; the code for doing that is contained in the `Button1_Click` method. Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer. The `Button2_Click` method accesses the ConnectionPoint objects for both the provider and the consumer, and writes some of their property values to a label in the page.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_73_3.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_73_3.aspx)]  \n  \n After you load the page in a browser, click the **Connection Point Details** button. Information about the provider and consumer connection points established in the declarative connection appears. Next, use the **Display Mode** drop-down control to switch the page into connect mode. On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (represented by a downward arrow in the title bar), click the connect verb. The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page. Click the **Disconnect** button to terminate the existing connection. Use the **Display Mode** control to return the page to browse mode. Next, click the **Dynamic Connection** button to create a connection programmatically. Click the **Connection Point Details** button again, to indicate details about the two connection point objects."
  syntax:
    content: public abstract class ConnectionPoint
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
  id: AllowsMultipleConnections
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: AllowsMultipleConnections
  nameWithType: ConnectionPoint.AllowsMultipleConnections
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Egy érték, amely jelzi, hogy a szolgáltatáskapcsolódási pont támogatja több egyidejű kapcsolatok lekérése."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>objektumok a AllowsMultipleConnections tulajdonság értéke értékre van beállítva `true` (által a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>osztály), mert a kijelzők vezérlő alapértelmezés szerint lehetővé teszi, hogy a szolgáltató kapcsolódási pontok űrlap kapcsolatok több felhasználóból.</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute></xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       Ezzel szemben <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>objektumoknak a AllowsMultipleConnections tulajdonság értéke az `false` (által a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>osztály), mert a kijelzők vezérlő alapértelmezés szerint lehetővé teszi, hogy az ügyfél-kapcsolódási pontok egyszerre csak egy szolgáltató kapcsolatot létesíteni.</xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> </xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>       Módosíthatja az alapértelmezett viselkedés vonatkozó több kapcsolat által a különböző értékeket rendel a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=fullName>tulajdonság (a szolgáltatók) vagy a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=fullName>tulajdonságának (a fogyasztók) a két <xref:System.Attribute>osztályok kapcsolat attribútumaihoz használatos.</xref:System.Attribute> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=fullName> Ha engedélyezi a fogyasztói csatlakozási pontok egyszerre több szolgáltató való kapcsolódáshoz, a kódot kell számos eredményül kapott szinkronizálási problémák."
  example:
  - "The following code example demonstrates the use of the AllowsMultipleConnections property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the AllowsMultipleConnections property on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1358_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1358_1.aspx)]"
  syntax:
    content: public bool AllowsMultipleConnections { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a szolgáltatáskapcsolódási pont támogatja több kapcsolatot is; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
  id: ControlType
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: ControlType
  nameWithType: ConnectionPoint.ControlType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi a <xref:System.Type>a kiszolgáló vezérlő, amelyhez társítva egy szolgáltatáskapcsolódási pont.</xref:System.Type>"
  remarks: "A ControlType tulajdonság értéke gyakran a <xref:System.Web.UI.WebControls.WebParts.WebPart>típusa.</xref:System.Web.UI.WebControls.WebParts.WebPart> Azonban mivel a felhasználói vezérlő vagy a kiszolgálói vezérlőnek részt vehetnek-kapcsolatok Ha megfelelően van engedélyezve, és a el egy <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zóna, a ControlType tulajdonság térhet vissza az említett egyéb kiszolgálói vezérlő, valamint.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Amikor kiszolgáló vezérli, amelyek nincsenek <xref:System.Web.UI.WebControls.WebParts.WebPart>vezérlők kerül egy <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zóna, amelyek törik a egy <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>futás közben, ezért tudnak funkcionálni objektum <xref:System.Web.UI.WebControls.WebParts.WebPart>vezérli, és kapcsolatokban is részt.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Ilyen vezérlők kapcsolatok részt, a ControlType tulajdonság értéke nem ad vissza, de a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>típust; típusát adja meg azt a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objektum gyermekvezérlő, a kiszolgáló vagy a felhasználói vezérlő típust.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the ControlType property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the ControlType property on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_622_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_622_1.aspx)]"
  syntax:
    content: public Type ControlType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>a vezérlőtípus képviselő.</xref:System.Type>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
  id: DefaultID
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: DefaultID
  nameWithType: ConnectionPoint.DefaultID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Egy karakterlánc alapján határozza meg az alapértelmezett csatlakozási pont belül a kiszolgáló vezérlőhöz tartozó kapcsolódási pontok gyűjteményét képviseli."
  remarks: "Amikor a szolgáltatáskapcsolódási pont jön létre, lehetőség a forráskód egy felhasználó vagy a szolgáltató adja meg a csatlakozási pont azonosítója <xref:System.Web.UI.WebControls.WebParts.WebPart>szabályozásához használja a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>vagy egy <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>attribútum.</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> </xref:System.Web.UI.WebControls.WebParts.WebPart> Azonban ha egy attribútumot ad a forráskódban, a szolgáltatáskapcsolódási pont a `ID` paraméter nem kötelező. Az attribútum nem ad meg az Azonosítót, ha a DefaultID mező biztosít karakterlánc, amely az alapértelmezett csatlakozási pont azonosítására szolgál.       A fogyasztó vagy szolgáltató vezérlőkben több kapcsolódási pont meghatározása esetén meg kell határozni az egyes csatlakozási pont azonosítója, hogy a kapcsolódási pontok elkülönítsék kapcsolatok létrehozásakor."
  syntax:
    content: public static readonly string DefaultID;
    return:
      type: System.String
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
  id: DisplayName
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: DisplayName
  nameWithType: ConnectionPoint.DisplayName
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi a karakterlánc, amely egy jól hangzó megjelenítési nevet a felhasználói felületen (UI) kapcsolódási pontot képviselő funkcionál."
  remarks: "Kijelzők VPN-kapcsolat létrehozásához a szolgáltatói és vezérlők, a kapcsolat minden adjon meg legalább egy szolgáltatáskapcsolódási pontot, egy metódust, amely lehetővé teszi, hogy kommunikálni, és megoszthatják az adatokat. Kapcsolódási pont módszerekhez azonosítására, a fejlesztő attribútum a kiválasztott módszerek adja meg. A szolgáltató egy `ConnectionProvider` attribútum van beállítva, a kijelölt visszahívási metódus, és a fogyasztói egy `ConnectionConsumer` attribútum van beállítva a módszert, amelyet a szolgáltató adatait tartalmazó illesztőfelület-példányt kap. Mindkét ezek az attribútumok esetében a egy paraméter, amely mindig van szükség, függetlenül attól, milyen túlterhelési létrehozni az attribútumot van deklarálva van a `displayName` paraméter. A fejlesztőnek kell rendelnie egy karakterláncot megfeleltessen egy jól hangzó megjelenítési nevet a szolgáltatáskapcsolódási pont használható, és karakterláncokat válik a DisplayName tulajdonság értéke.       A DisplayName tulajdonság értéke megjelenik a felhasználói felület weblap kapcsolatok létrehozásakor. Például, ha a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>vezérlő legyen adva a laphoz, létrehoz egy felhasználói felületi vezérlők közötti kapcsolatok létrehozása a felhasználók számára.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> A felhasználó egy lap connect megjelenítési módba vált, és a hivatkozásra kattint a connect művelet után egy <xref:System.Web.UI.WebControls.WebParts.WebPart>szabályozzák, a felhasználói felületen jelenik meg a kapcsolat.</xref:System.Web.UI.WebControls.WebParts.WebPart> Minden vezérlőjének, hogy részt vehetnek-kapcsolat szerepel a felhasználói felület, és minden vezérlő melletti legördülő lista vezérlő, amely a rendelkezésre álló csatlakozási pontok rövid nevét jeleníti meg. Felhasználók kell választania legalább egy szolgáltatáskapcsolódási pont kapcsolatot létesíteni. Az értékek, amelyek szerepelnek a listán, a csatlakozási pontok kapott DisplayName tulajdonságával. A fejlesztők egy egyéni felhasználói Felületüket építése kapcsolatok létrehozására, ha a DisplayName tulajdonsága használhatnak a hasonló módon adja meg egy rövid nevet, amely a szolgáltatáskapcsolódási pont jelöli."
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "Egy jól hangzó megjelenítési nevet tartalmazó karakterlánc egy <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> objektum."
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)
  id: GetEnabled(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: GetEnabled(Control)
  nameWithType: ConnectionPoint.GetEnabled(Control)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Egy érték, amely azt jelzi, hogy a szolgáltatáskapcsolódási pont részt vehetnek-e kapcsolatok adja vissza."
  remarks: "A kiinduló GetEnabled metódust <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>osztály mindig értéket ad vissza `true`, de származtatott osztályokat lehet felülbírálni a metódus visszatérési `true` vagy `false` különböző időpontokban, a állapota alapján `control`.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>"
  example:
  - "The following code example demonstrates the use of the GetEnabled method on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the GetEnabled method on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/a42b3e8f-70fc-455c-a13a-_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/a42b3e8f-70fc-455c-a13a-_1.aspx)]"
  syntax:
    content: public virtual bool GetEnabled (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> vagy egyéb kiszolgálói vezérlőnek társított kapcsolódási pontot."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a vezérlő hozhat létre kapcsolatot; részt a szolgáltatáskapcsolódási pont Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
  id: ID
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: ID
  nameWithType: ConnectionPoint.ID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi a csatlakozási pont azonosítója tartalmazó karakterlánc."
  remarks: "Amikor egy fejlesztő deklarál egy <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>vagy egy <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>attribútum egy metódusra, a vezérlő forráskódban, hogy kapcsolódási pontként, a módszer akkor használható szükség van rá nem deklarálható a `ID` paraméter a csatlakozási pont attribútum.</xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> </xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> A kötelező attribútum értéke a `displayName` paraméter. Egy alapértelmezett azonosító hozzá van rendelve a szolgáltatáskapcsolódási pontot, illetve a <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>mező.</xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>       Ha egy vezérlő kapcsolódási pontként használt csak egyetlen módszer, nem adhatja meg a csatlakozási pont azonosítója szükséges. Csatlakozási pontok megadott több módszer áll rendelkezésre, ha meg kell adnia egy Azonosítót mindegyiknél; Ellenkező esetben kivételt fog jelezni. Minden egyes szolgáltatáskapcsolódási pont Azonosítót rendel, akkor is lehetővé teszik adja meg, melyik szolgáltatáskapcsolódási pont használatára kapcsolatok a weblapok deklarál, vagy hozza létre a címzetteket a kódban."
  example:
  - "The following code example demonstrates the use of the ID property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the ID property on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1125_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1125_1.aspx)]"
  syntax:
    content: public string ID { get; }
    return:
      type: System.String
      description: "A szolgáltatáskapcsolódási pont azonosítóját tartalmazó karakterláncot."
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
  id: InterfaceType
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  langs:
  - csharp
  name: InterfaceType
  nameWithType: ConnectionPoint.InterfaceType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi az illesztő a szolgáltatáskapcsolódási pont által használt típus."
  remarks: "A InterfaceType tulajdonság azt jelzi, hogy milyen típusú felület kapcsolódási pontot használ. Ez segít annak meghatározására, hogy e két vezérlők kompatibilis, és képes a kapcsolat kialakításához. Ha a szolgáltatói csatlakozási pont InterfaceType eltér a fogyasztói csatlakozási pont InterfaceType, akkor a két vezérlők nem kompatibilisek (azaz, hogy nem kell közvetlenül csatlakoztatva átalakítók nélkül), és egy <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objektum használatával kell kapcsolatot létesíteni.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>"
  example:
  - "The following code example demonstrates the use of the InterfaceType property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects. This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.  \n  \n The code in the `Button2_Click` method of the Web page accesses the InterfaceType property on each of the connection point objects and writes each value to a label. Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.  \n  \n [!code-vb[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_359_1.aspx)]\n [!code-cs[WebParts_ConnectionPoint_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_359_1.aspx)]"
  syntax:
    content: public Type InterfaceType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>, amely megfelel az illesztőfelület-típushoz megadott vagy a vezérlő által felhasznált.</xref:System.Type>"
  overload: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: AllowsMultipleConnections
  nameWithType: ConnectionPoint.AllowsMultipleConnections
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: ControlType
  nameWithType: ConnectionPoint.ControlType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: DefaultID
  nameWithType: ConnectionPoint.DefaultID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: DisplayName
  nameWithType: ConnectionPoint.DisplayName
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: GetEnabled(Control)
  nameWithType: ConnectionPoint.GetEnabled(Control)
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: ID
  nameWithType: ConnectionPoint.ID
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: InterfaceType
  nameWithType: ConnectionPoint.InterfaceType
  fullName: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: AllowsMultipleConnections
  nameWithType: ConnectionPoint.AllowsMultipleConnections
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: ControlType
  nameWithType: ConnectionPoint.ControlType
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: DisplayName
  nameWithType: ConnectionPoint.DisplayName
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: GetEnabled
  nameWithType: ConnectionPoint.GetEnabled
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.ID*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: ID
  nameWithType: ConnectionPoint.ID
- uid: System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType*
  parent: System.Web.UI.WebControls.WebParts.ConnectionPoint
  isExternal: false
  name: InterfaceType
  nameWithType: ConnectionPoint.InterfaceType
