### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.AspLog
  id: AspLog
  children:
  - Microsoft.VisualBasic.Logging.AspLog.#ctor
  - Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  langs:
  - csharp
  name: AspLog
  nameWithType: AspLog
  fullName: Microsoft.VisualBasic.Logging.AspLog
  type: Class
  summary: "Az alkalmazás napló figyelői eseményekkel és kivételekkel kapcsolatos adatok írásakor a tulajdonság és biztosít."
  remarks: "A `My.Application.Log` objektum tartalmaz egy egyszerű belépési ponthoz, amelyről eléréséhez a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]tartozó naplózási szolgáltatásokat. A `WriteEntry` és `WriteException` módszerek üzeneteket írni az alkalmazás napló figyelők. A figyelők az alkalmazás konfigurációs fájljában konfigurálhatja. További információkért lásd: [forgatókönyv: módosítása ahol My.Application.Log írja az adatokat](~/add/includes/ajax-current-ext-md.md) és [alkalmazásnaplók használata](~/add/includes/ajax-current-ext-md.md).       A `My.Application.Log` objektum csak ügyfélalkalmazások esetében érhető el. A webes alkalmazásokhoz, használjon `My.Log`. További információkért lásd: <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>.</xref:Microsoft.VisualBasic.Logging.Log?displayProperty=fullName>       Az alábbi táblázatban láthatók példák feladatok érintik a `My.Application.Log` objektum.      | A |} Lásd: |}   |--------|---------|   | Esemény kapcsolatos adatokat ír az alkalmazás napló figyelői |} [Hogyan: napló írásakor](~/add/includes/ajax-current-ext-md.md)|}   | Kivétel kapcsolatos adatokat ír az alkalmazás napló figyelői |} [Útmutató: a kivételeket](~/add/includes/ajax-current-ext-md.md)|}   | Helyének meghatározása `My.Application.Log` írja az adatokat |}[ Forgatókönyv: Meghatározásához, ahol My.Application.Log írja az adatokat](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information. For more information, see [How to: Write Log Messages](../Topic/How%20to:%20Write%20Log%20Messages%20\\(Visual%20Basic\\).md).  \n  \n [!code-vb[VbVbalrMyApplicationLog#11](~/add/codesnippet/visualbasic/VbVbalrMyApplicationLog/Form1.vb#11)]"
  syntax:
    content: 'public class AspLog : Microsoft.VisualBasic.Logging.Log'
  inheritance:
  - System.Object
  - Microsoft.VisualBasic.Logging.Log
  implements: []
  inheritedMembers:
  - Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter
  - Microsoft.VisualBasic.Logging.Log.TraceSource
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)
  - Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)
  - Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Egy új példányát inicializálja a <xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;> </xref> osztály."
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Egy új példányát inicializálja a <xref href=&quot;Microsoft.VisualBasic.Logging.AspLog&quot;> </xref> osztály."
  remarks: 'The `My.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]''s logging services. The `WriteEntry` and `WriteException` methods write messages to the application''s log listeners. The listeners can be configured by the application''s configuration file. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/add/includes/ajax-current-ext-md.md) and [Working with Application Logs](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public AspLog (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.String>.</xref:System.String> A nevét, és a <xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>tulajdonság objektum.</xref:Microsoft.VisualBasic.Logging.Log.TraceSource*>"
  overload: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  id: InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  langs:
  - csharp
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: "Létrehoz egy új <xref href=&quot;Microsoft.VisualBasic.Logging.FileLogTraceListener&quot;> </xref> , és hozzáadja azt a <xref:System.Diagnostics.TraceSource.Listeners*>gyűjtemény.</xref:System.Diagnostics.TraceSource.Listeners*>"
  remarks: "Ezzel a módszerrel hoz létre egy új <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, a nevének beállítása `FileLog`, és konfigurálja a súlyossági szintet az üzenetek naplózása <xref:System.Diagnostics.SourceLevels>és nagyobb.</xref:System.Diagnostics.SourceLevels> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Az új <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>objektum bekerül a <xref:System.Diagnostics.TraceSource.Listeners%2A>gyűjtemény.</xref:System.Diagnostics.TraceSource.Listeners%2A> </xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>       A <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>meghívja a metódust, ha a <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A>tulajdonság nincs beállítva.</xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> </xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> A nyomkövetési forrást konfigurálhatja az alkalmazás konfigurációs fájljában."
  syntax:
    content: protected override void InitializeWithDefaultsSinceNoConfigExists ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.VisualBasic.Logging.Log
  isExternal: false
  name: Microsoft.VisualBasic.Logging.Log
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog()
  nameWithType: AspLog.AspLog()
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog(String)
  nameWithType: AspLog.AspLog(String)
  fullName: Microsoft.VisualBasic.Logging.AspLog.AspLog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists()
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists()
  fullName: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists()
- uid: Microsoft.VisualBasic.Logging.AspLog.#ctor*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: AspLog
  nameWithType: AspLog.AspLog
- uid: Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists*
  parent: Microsoft.VisualBasic.Logging.AspLog
  isExternal: false
  name: InitializeWithDefaultsSinceNoConfigExists
  nameWithType: AspLog.InitializeWithDefaultsSinceNoConfigExists
