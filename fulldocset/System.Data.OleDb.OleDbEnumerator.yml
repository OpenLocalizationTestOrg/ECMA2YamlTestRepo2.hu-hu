### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "Lehetővé teszi a helyi hálózaton belül az összes elérhető OLE DB szolgáltató enumerálása."
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Létrehoz egy példányát a <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> osztály."
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekéri egy <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely minden látható OLE DB-szolgáltató adatait tartalmazza."
  remarks: "Ez a metódus által visszaadott táblázat tartalmazza a következő oszlopokat, amelyek tartalmazzák: |} Oszlop sorszámát |} Oszlop |} Leírás |}   |--------------------|------------|-----------------|   |}&0; |} SOURCES_NAME |} Az állandó neve a natív OLEDB-adatforrás vagy a számbavevő. |}   |&1; |} SOURCES_PARSENAME |} A natív COM-illesztőfelület IParseDisplayName használatával kézjegyet átalakítható emberek számára olvasható neve. A natív OLE DB-adatforrások sorkészlet által visszaadott SOURCES_PARSENAME oszlop felel meg. |}   |}&2; |} SOURCES_DESCRIPTION |} A natív OLE DB adatforrás leírása. A natív OLE DB-adatforrások sorkészlet által visszaadott SOURCES_DESCRIPTION oszlop felel meg. |}   |}&3; |} SOURCES_TYPE |} A következő számbavétel tagjainak egyikét: kötő (0), a DataSource_MDP (1), a DataSource_TDP (2), a számbavételi (3). Ezek a natív OLE DB-adatforrások sorhalmaz SOURCES_TYPE oszlopában visszaadott értékek megegyeznek. |}   |}&4; |} SOURCES_ISPARENT |} Csak számbavételekhez alkalmazható. Ha `true`, azt jelzi, hogy a belépési vonatkozik-e az azonos enumerátor, amelyen GetSourcesRowset lett meghívva, ami azt jelenti, hogy azt is szerepel a részleges felsorolása. A natív OLE DB-adatforrások sorhalmaz SOURCES_ISPARENT oszlopának felel meg |}   |}&5; |} SOURCES_CLSID |} Emberek számára olvasható neve, a natív COM-illesztőfelület IParseDisplayName használatával kézjegyet konvertálható. A natív OLE DB-adatforrások sorkészlet által visszaadott SOURCES_CLSID oszlop felel meg. |}"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Értéket ad vissza egy <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely a látható OLE DB-szolgáltató adatait tartalmazza."
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A szolgáltató nem támogatja az ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Kivétel történt az alapul szolgáló szolgáltatónál."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Egy adott OLE DB-számbavevő használatával adja vissza egy <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> anélkül, hogy egy példányát a jelenleg telepített OLE DB-szolgáltatókat adatait, amely tartalmazza a <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> osztály."
  remarks: "Az olvasó, ez a metódus által visszaadott tartalmazza a következő oszlopokat, amelyek tartalmazzák: |} Oszlopból |} Oszlop |} Leírás |}   |--------------------|------------|-----------------|   |}&0; |} SOURCES_NAME |} Az állandó neve a natív OLE DB adatforrás vagy a számbavevő. |}   |&1; |} SOURCES_PARSENAME |} A natív COM-illesztőfelület segítségével kézjegyet átalakítható emberek számára olvasható neve **IParseDisplayName**. A natív OLE DB-adatforrások sorkészlet által visszaadott SOURCES_PARSENAME oszlop felel meg. |}   |}&2; |} SOURCES_DESCRIPTION |} A natív OLE DB adatforrás leírása. A natív OLE DB-adatforrások sorkészlet által visszaadott SOURCES_DESCRIPTION oszlop felel meg. |}   |}&3; |} SOURCES_TYPE |} A következő számbavétel tagjainak egyikét: kötő (0), a DataSource_MDP (1), a DataSource_TDP (2), a számbavételi (3). Ezek a natív OLE DB-adatforrások sorhalmaz SOURCES_TYPE oszlopában visszaadott értékek megegyeznek. |}   |}&4; |} SOURCES_ISPARENT |} Csak számbavételekhez alkalmazható. Ha `true`, azt jelzi, hogy a belépési vonatkozik-e az azonos enumerátor amelyen **GetSourcesRowset** lett meghívva, ami azt jelenti, hogy azt is szerepel a részleges felsorolása. A natív OLE DB-adatforrások sorhalmaz SOURCES_ISPARENT oszlopának felel meg |}       OLE DB biztosít több enumerátor összetevőket, például a MSDAENUM, MSDASQL enumerátor, SQLNCLI enumerátor, SQLOLEDB enumerátor és mások számára. A számbavevő összetevők és a használatukat kapcsolatos további információkért tekintse meg a [OLE DB programozói dokumentáció](http://go.microsoft.com/fwlink/?LinkId=45232)."
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Értéket ad vissza egy <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> , amely tartalmazza a kért OLE DB-szolgáltatókat, a megadott OLE DB-számbavevő használatával kapcsolatos információkat."
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A szolgáltató nem támogatja a **ISourcesRowset**."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Kivétel történt az alapul szolgáló szolgáltatónál."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> anélkül, hogy egy példányát a jelenleg telepített OLE DB-szolgáltatókat adatait, amely tartalmazza a <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> osztály."
  remarks: "Ez a metódus által visszaadott Adatolvasó tartalmazza a következő oszlopokat, amelyek tartalmazzák: |} Oszlop sorszámát |} Oszlop |} Leírás |}   |--------------------|------------|-----------------|   |}&0; |} SOURCES_NAME |} Az állandó neve a natív OLEDB-adatforrás vagy a számbavevő. |}   |&1; |} SOURCES_PARSENAME |} A natív COM-illesztőfelület IParseDisplayName használatával kézjegyet konvertálható emberek számára olvasható neve. A natív OLE DB-adatforrások sorkészlet által visszaadott SOURCES_PARSENAME oszlop felel meg. |}   |}&2; |} SOURCES_DESCRIPTION |} A natív OLE DB adatforrás leírása. A natív OLE DB-adatforrások sorkészlet által visszaadott SOURCES_DESCRIPTION oszlop felel meg. |}   |}&3; |} SOURCES_TYPE |} A következő számbavétel tagjainak egyikét: kötő (0), a DataSource_MDP (1), a DataSource_TDP (2), a számbavételi (3). Ezek a natív OLE DB-adatforrások sorhalmaz SOURCES_TYPE oszlopában visszaadott értékek megegyeznek. |}   |}&4; |} SOURCES_ISPARENT |} Csak számbavételekhez alkalmazható. Ha `true`, azt jelzi, hogy a belépési vonatkozik-e az azonos enumerátor, amelyen GetSourcesRowset lett meghívva, ami azt jelenti, hogy azt is szerepel a részleges felsorolása. A natív OLE DB-adatforrások sorhalmaz SOURCES_ISPARENT oszlopának felel meg |}   |}&5; |} SOURCES_CLSID |} Emberek számára olvasható neve, a natív COM-illesztőfelület IParseDisplayName használatával kézjegyet konvertálható. A natív OLE DB-adatforrások sorkészlet által visszaadott SOURCES_CLSID oszlop felel meg. |}"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Értéket ad vissza egy <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> , amely a látható OLE DB-szolgáltató adatait tartalmazza."
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A szolgáltató nem támogatja az ISourcesRowset."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Kivétel történt az alapul szolgáló szolgáltatónál."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
