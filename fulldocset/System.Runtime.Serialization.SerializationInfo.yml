### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationInfo
  id: SerializationInfo
  children:
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  - System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  - System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  - System.Runtime.Serialization.SerializationInfo.AssemblyName
  - System.Runtime.Serialization.SerializationInfo.FullTypeName
  - System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetEnumerator
  - System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  - System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  - System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  - System.Runtime.Serialization.SerializationInfo.MemberCount
  - System.Runtime.Serialization.SerializationInfo.ObjectType
  - System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  langs:
  - csharp
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
  type: Class
  summary: "Az összes adatot tárolja szerializálható vagy objektum deszerializálásához szükséges objektum szükséges. Ez az osztály nem örökölhető."
  remarks: "Ez az osztály az egyedi szerializálás viselkedő objektumai használják. A <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>metódus akár <xref:System.Runtime.Serialization.ISerializable>vagy <xref:System.Runtime.Serialization.ISerializationSurrogate>tölti fel a SerializationInfo tároló a nevét, típusát és értékét az szerializálni szeretnének adat.</xref:System.Runtime.Serialization.ISerializationSurrogate> </xref:System.Runtime.Serialization.ISerializable> </xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> Deszerializálás során a kívánt függvényt nyerhet ki ezt az információt.       Objektumok adhatók hozzá a szerializálási idő az SerializationInfo áruházat a <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>módszerek és a deszerializálás az SerializationInfo tároló kinyert a <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A>módszerek.</xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> </xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>       Szerializálási testreszabásával kapcsolatos további információkért lásd: [egyéni szerializálási](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the SerializationInfo for custom serialization and deserialization of various values.  \n  \n [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_18_1.cpp)]\n [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_18_1.cs)]\n [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_18_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SerializationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> osztály."
  remarks: "A <xref:System.Runtime.Serialization.IFormatterConverter>átadása pedig a `converter` paraméter adatokat alakítja át a belső alakból a képernyőn a felhasználónak a kért.</xref:System.Runtime.Serialization.IFormatterConverter> A belső <xref:System.Runtime.Serialization.SerializationInfo>függ tőle létrehozó formázó</xref:System.Runtime.Serialization.SerializationInfo> belüli adatok ábrázolása"
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>az objektum szerializálása.</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "A <xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref> deszerializálása során."
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>converter</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  id: '#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)'
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> osztály."
  syntax:
    content: public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>az objektum szerializálása.</xref:System.Type>"
    - id: converter
      type: System.Runtime.Serialization.IFormatterConverter
      description: "A <xref href=&quot;System.Runtime.Serialization.IFormatterConverter&quot;> </xref> deszerializálása során."
    - id: requireSameTokenInPartialTrust
      type: System.Boolean
      description: "Azt jelzi, hogy szükséges-e az objektum ugyanezt a tokent részlegesen megbízható kapcsolat."
  overload: System.Runtime.Serialization.SerializationInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  id: AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A logikai értéket ad a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException> Példa:```c#   void ISerializable.GetObject(SerializationInfo info, StreamingContext context)   {      // This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, true);      info.AddValue(&quot;abc&quot;, false);      // However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, true);      info.AddValue(&quot;XYZ&quot;, false);   }   ```      ```vb#   Private Sub GetObjectData(ByVal info As SerializationInfo, _   ByVal context As StreamingContext)      &quot; This will not cause an exception to be thrown.      info.AddValue(&quot;ABC&quot;, &quot;upper case&quot;)      info.AddValue(&quot;abc&quot;, &quot;lower case&quot;)      &quot; However, this will cause the SerializationException to be thrown.      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)      info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)   End Sub   ```"
  syntax:
    content: public void AddValue (string name, bool value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Boolean
      description: "Lehet, mert a logikai érték."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  id: AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 8 bites, előjel nélküli egész érték hozzáadja a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, byte value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Byte
      description: "A bájtérték szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  id: AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A karakter Unicode-értékét hozzáadja a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, char value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Char
      description: "A karakterértéket szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  id: AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Hozzáad egy <xref:System.DateTime>be értéket a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolására.</xref:System.DateTime>"
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, DateTime value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.DateTime
      description: "A <xref:System.DateTime>érték szerializálni.</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  id: AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A decimális értéket hozzáadja a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, decimal value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Decimal
      description: "A decimális értéket szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Ha egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  id: AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A kétszeres pontosságú lebegőpontos értéket ad a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, double value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Double
      description: "A szerializálható dupla típusú érték."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  id: AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A 16 bites, előjeles egész érték hozzáadása a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, short value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Int16
      description: "A <xref uid=&quot;langword_csharp_Int16&quot; name=&quot;Int16&quot; href=&quot;&quot;> </xref> érték szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  id: AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A 32 bites, előjeles egész érték hozzáadása a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/b3789dd4-8567-4492-a19c-_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/b3789dd4-8567-4492-a19c-_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/b3789dd4-8567-4492-a19c-_1.vb)]
  syntax:
    content: public void AddValue (string name, int value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Int32
      description: "A <xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> érték szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  id: AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A 64 bites, előjeles egész érték hozzáadása a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, long value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Int64
      description: "A szerializálható Int64 típusú érték."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  id: AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A megadott objektumot ad hozzá a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolóba, ahol hozzá rendelve a megadott nevet."
  remarks: "Az objektum szerepel a `value` paraméter által visszaadott típus szerint szerializált `value`.       Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Object
      description: "A szerializálható érték. Az objektum gyermekek automatikusan lehet szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  id: AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 8 bites előjeles egész érték hozzáadja a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, sbyte value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.SByte
      description: "A <xref uid=&quot;langword_csharp_Sbyte&quot; name=&quot;Sbyte&quot; href=&quot;&quot;> </xref> érték szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  id: AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Az egyszeres pontosságú lebegőpontos értéket hozzáadja a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, float value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Single
      description: "Lehet, mert egyetlen értéket."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  id: AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A 16 bites, előjel nélküli egész érték hozzáadása a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ushort value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.UInt16
      description: "A <xref uid=&quot;langword_csharp_UInt16&quot; name=&quot;UInt16&quot; href=&quot;&quot;> </xref> érték szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  id: AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A 32 bites, előjel nélküli egész érték hozzáadása a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method to customize the serialization of a type. The code adds a string and an integer to an instance of the <xref:System.Runtime.Serialization.SerializationInfo> class in the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method of the <xref:System.Runtime.Serialization.ISerializable> interface. The code also uses the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method to retrieve values from the <xref:System.Runtime.Serialization.SerializationInfo>.  \n  \n [!code-cs[ISerializable_GetObjectData#0](~/add/codesnippet/csharp/44ffdfaa-67f2-436c-9c0d-_1.cs)]\n [!code-vb[ISerializable_GetObjectData#0](~/add/codesnippet/visualbasic/44ffdfaa-67f2-436c-9c0d-_1.vb)]"
  syntax:
    content: public void AddValue (string name, uint value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.UInt32
      description: "A <xref uid=&quot;langword_csharp_UInt32&quot; name=&quot;UInt32&quot; href=&quot;&quot;> </xref> érték szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  id: AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "A 64 bites, előjel nélküli egész érték hozzáadása a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, ulong value);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_UInt64&quot; name=&quot;UInt64&quot; href=&quot;&quot;> </xref> érték szerializálni."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  id: AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Az érték hozzáadása a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárol, ahol <code> value </code> társítva van <code> name </code> és, hogy a szerializált <xref:System.Type> <code> type </code>.</xref:System.Type>"
  remarks: "A hozzárendelt típus mindig az objektum típusa, vagy egyik szülőobjektumtól.       Ha két értéket ad hozzá a nevét, amely kizárólag eltérőek eset, nincs kivételt fog jelezni, amely nincs ajánlott. Azonban két értékének pontos ugyanazzal a névvel, akkor a <xref:System.Runtime.Serialization.SerializationException>jelezni, hogy.</xref:System.Runtime.Serialization.SerializationException>"
  syntax:
    content: public void AddValue (string name, object value, Type type);
    parameters:
    - id: name
      type: System.String
      description: "Az érték társítandó, így később deszerializálni neve."
    - id: value
      type: System.Object
      description: "A szerializálható érték. Az objektum gyermekek automatikusan lehet szerializálni."
    - id: type
      type: System.Type
      description: "A <xref:System.Type>az aktuális objektum társítandó.</xref:System.Type> Ez a paraméter mindig az objektum, vagy az egyik alaposztálya típusúnak kell lennie."
  overload: System.Runtime.Serialization.SerializationInfo.AddValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>name</code> or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Egy érték már társítva van <code> name </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  id: AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekérdezi vagy beállítja a szerelvény neve csak a szerializálás során szerializálható típusú."
  remarks: "A AssemblyName megegyezik által visszaadott érték <xref:System.Reflection.Assembly.FullName%2A>tulajdonságot tartalmazó típus a szerelvény.</xref:System.Reflection.Assembly.FullName%2A> Ez az a szerelvény neve, amely a formázó használja, amikor típusinformációt az objektum szerializálása során.       A szerelvény neve a szerelvény, verzió, kulturális környezet és az objektum bizonyos biztonsági adatainak nevét tartalmazza.       Felhasználók, akik az (például egy adott típusának a proxy elküldeni kívánt) éppen szerializált típus módosítani a tulajdonság értékének állítja be.      > [!CAUTION] > Ne használja ezt a tulajdonságot a deszerializálás során, mert ez a tulajdonság értéke nincs megadva."
  syntax:
    content: public string AssemblyName { get; set; }
    return:
      type: System.String
      description: "A szerelvény lehet, mert a típus teljes nevét."
  overload: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Az érték a tulajdonság értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  id: FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekérdezi vagy beállítja a teljes nevét a <xref:System.Type>szerializálni.</xref:System.Type>"
  remarks: "A FullTypeName megegyezik a mi vissza a <xref:System.Type.FullName%2A> <xref:System.Type>.</xref:System.Type> </xref:System.Type.FullName%2A> meghívásával Ez az a következő típusnév formázó használja, amikor típusinformációt az objektum szerializálása során.       Ez a tulajdonság értékének beállítása a felhasználók, akik módosítani lehet (például egy adott típusának a proxy elküldeni kívánt), mert a típus érdemes.      > [!CAUTION] > Ne használja ezt a tulajdonságot a deszerializálás során, mert ez a tulajdonság értéke nincs megadva."
  syntax:
    content: public string FullTypeName { get; set; }
    return:
      type: System.String
      description: "Lehet, mert a típus teljes neve."
  overload: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Az érték a tulajdonság értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  id: GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy logikai értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték logikai érték, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public bool GetBoolean (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.Boolean
      description: "A társított logikai értéket <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> logikai érték nem konvertálható."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  id: GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 8 bites, előjel nélküli egész számnak lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték nem aláírt 8 bites egész, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public byte GetByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.Byte
      description: "A 8 bites előjel nélküli egész számokat társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem konvertálható a nem aláírt 8 bites egész szám."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  id: GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekéri a karakter Unicode-értékét a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték egy Unicode-karakter, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public char GetChar (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.Char
      description: "A Unicode-karakter társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetChar*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem konvertálható Unicode-karakter."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  id: GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekéri egy <xref:System.DateTime>értéket a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolására.</xref:System.DateTime>"
  remarks: "Ha az érték egy <xref:System.DateTime>, vagy átalakítható egy <xref:System.DateTime>, adott értéke visszaadott; ellenkező esetben egy <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> </xref:System.DateTime> </xref:System.DateTime> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public DateTime GetDateTime (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>rendelt érték, amely <code> name </code>.</xref:System.DateTime>"
  overload: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át egy <xref:System.DateTime>érték.</xref:System.DateTime>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  id: GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekéri egy decimális értéket a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az értéket decimális, vagy konvertálható, decimal, visszaadott érték; Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public decimal GetDecimal (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.Decimal
      description: "Értéke a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> decimális nem lehet konvertálni."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  id: GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy kétszeres pontosságú lebegőpontos értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték dupla típusú értékként, vagy konvertálható, double, visszaadott érték; Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public double GetDouble (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.Double
      description: "A kétszeres pontosságú lebegőpontos értéket társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetDouble*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> egy kétszeres pontosságú lebegőpontos érték nem konvertálható."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Értéket ad vissza egy <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref> használt a név-érték párok az iterációt az <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ez a funkció is, amelyeket őket a adatfolyamba való írása előtt a értékek számba által leggyakrabban használható."
  syntax:
    content: public System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Runtime.Serialization.SerializationInfoEnumerator
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfoEnumerator&quot;> </xref> az a név-érték párok szereplő elemzése a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  overload: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  id: GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 16 bites, előjeles egész értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték 16 bites előjeles egész számokat, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public short GetInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.Int16
      description: "A 16 bites előjeles egész számokat társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át a 16 bites előjeles egész szám."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  id: GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 32 bites, előjeles egész értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték egy 32 bites előjeles egész számokat, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  example:
  - >-
    [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_2_1.cpp)]
     [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_2_1.cs)]
     [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_2_1.vb)]
  syntax:
    content: public int GetInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó értékének nevét."
    return:
      type: System.Int32
      description: "A 32 bites előjeles egész számokat társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át egy 32 bites előjeles egész szám."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  id: GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 64 bites, előjeles egész értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték egy 64 bites előjeles egész számokat, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public long GetInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.Int64
      description: "A 64 bites előjeles egész számokat társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át egy 64 bites előjeles egész szám."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  id: GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy aláírt 8 bites egész számnak lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték egy `Int8`, vagy átalakítható egy `Int8`, ezt az értéket az visszaadott; ellenkező esetben egy <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public sbyte GetSByte (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.SByte
      description: "A 8 bites előjeles egész számokat társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetSByte*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> aláírt 8 bites egész szám nem lehet konvertálni."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  id: GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy egyszeres pontosságú lebegőpontos értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték egy egyszeres pontosságú lebegőpontos számnál, vagy lemezekké lehet alakítani egy, a visszaadott érték; Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public float GetSingle (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó értékének nevét."
    return:
      type: System.Single
      description: "A társított egyszeres pontosságú lebegőpontos értéket <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetSingle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> egy egyszeres pontosságú lebegőpontos érték nem konvertálható."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  id: GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekéri egy <xref:System.String>értéket a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolására.</xref:System.String>"
  remarks: "Ha az érték egy <xref:System.String>, vagy átalakítható egy <xref:System.String>, adott értéke visszaadott; ellenkező esetben egy <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> </xref:System.String> </xref:System.String> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public string GetString (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.String
      description: "A <xref:System.String>társított <code> name </code>.</xref:System.String>"
  overload: System.Runtime.Serialization.SerializationInfo.GetString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át <xref:System.String>.</xref:System.String>"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  id: GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 16 bites, előjel nélküli egész értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték 16 bites előjel nélküli egész számokat, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public ushort GetUInt16 (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.UInt16
      description: "A 16 bites előjel nélküli egész számokat társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át a 16 bites előjel nélküli egész számokat."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  id: GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 32 bites, előjel nélküli egész értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték egy 32 bites előjeles egész számokat, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public uint GetUInt32 (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.UInt32
      description: "A 32 bites előjel nélküli egész számokat társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át egy 32 bites előjel nélküli egész számokat."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  id: GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Egy 64 bites, előjel nélküli egész értéket lekéri a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az érték egy 64 bites előjel nélküli egész számokat, vagy egy, a visszaadott érték; átalakítható Ellenkező esetben a <xref:System.InvalidCastException>vált ki.</xref:System.InvalidCastException> Minden átalakítások végzi <xref:System.Runtime.Serialization.IFormatterConverter>a <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo> társított</xref:System.Runtime.Serialization.IFormatterConverter>"
  syntax:
    content: public ulong GetUInt64 (string name);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    return:
      type: System.UInt64
      description: "A 64 bites előjel nélküli egész számokat társított <code> name </code>."
  overload: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át egy 64 bites előjel nélküli egész számokat."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  id: GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekéri egy értéket a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  remarks: "Ha az adatok tárolódnak a <xref:System.Runtime.Serialization.SerializationInfo>van a kért típus (vagy annak származtatott osztályok egyikét), ezt az értéket ad vissza közvetlenül.</xref:System.Runtime.Serialization.SerializationInfo> Ellenkező esetben <xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>konvertálnia kell a megfelelő típust nevezzük.</xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName>       A GetValue metódus által visszaadott érték is mindig biztonságosan konvertálható a megadott típus a `type` paraméter."
  example:
  - "The following code example demonstrates the use of the GetValue method:  \n  \n [!code-vb[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/visualbasic/a88aeee3-6425-4869-aee2-_1.vb)]\n [!code-cs[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/csharp/a88aeee3-6425-4869-aee2-_1.cs)]\n [!code-cpp[Classic SerializationInfo.GetValue Example#1](~/add/codesnippet/cpp/a88aeee3-6425-4869-aee2-_1.cpp)]"
  syntax:
    content: public object GetValue (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: "A beolvasandó érték társított név."
    - id: type
      type: System.Type
      description: "A <xref:System.Type>érték beolvasása.</xref:System.Type> Ha a tárolt érték nem konvertálható ilyen típusú, a rendszer egy <xref:System.InvalidCastException>.</xref:System.InvalidCastException> kivételhibát"
    return:
      type: System.Object
      description: "A megadott objektum <xref:System.Type>társított <code> name </code>.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.GetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A társított érték <code> name </code> nem alakítható át <code> type </code>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "A megadott nevű elem nem található az aktuális példány."
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  id: IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekérdezi, hogy a szerelvény neve explicit módon beállítva."
  syntax:
    content: public bool IsAssemblyNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Ha a szerelvény neve explicit módon beállítva; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  id: IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekérdezi, hogy a teljes típusnév explicit módon beállítva."
  syntax:
    content: public bool IsFullTypeNameSetExplicit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Ha a teljes típusnév explicit módon beállítva; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  id: MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Lekérdezi a hozzáadott tagok száma a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> tárolja."
  syntax:
    content: public int MemberCount { get; }
    return:
      type: System.Int32
      description: "Az aktuális hozzáadott tagok száma <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  overload: System.Runtime.Serialization.SerializationInfo.MemberCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  id: ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Az objektum FullTypeName típusát adja vissza."
  syntax:
    content: public Type ObjectType { get; }
    return:
      type: System.Type
      description: "Az éppen szerializált objektum típusa."
  overload: System.Runtime.Serialization.SerializationInfo.ObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  id: SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  langs:
  - csharp
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Beállítja a <xref:System.Type>az objektum szerializálása.</xref:System.Type>"
  remarks: "<xref:System.Runtime.Serialization.Formatter>A <xref:System.Type> <xref:System.Runtime.Serialization.SerializationInfo>példány előtt <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> </xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Type> felelős</xref:System.Runtime.Serialization.Formatter> Azonban felhasználók, akik szeretne küldeni az objektumok proxyk kell módosítani a típusát, ez által képviselt <xref:System.Runtime.Serialization.SerializationInfo>példány.</xref:System.Runtime.Serialization.SerializationInfo> Megegyezik a SetType metódussal a beállítás mind a <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>és a <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>.</xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> </xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>"
  example:
  - >-
    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/m-system.runtime.seriali_6_1.cs)]
     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/m-system.runtime.seriali_6_1.cpp)]
     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/m-system.runtime.seriali_6_1.vb)]
  syntax:
    content: public void SetType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>az objektum szerializálása.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationInfo.SetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IFormatterConverter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatterConverter
  nameWithType: IFormatterConverter
  fullName: System.Runtime.Serialization.IFormatterConverter
- uid: System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo(Type,IFormatterConverter,Boolean)
  nameWithType: SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.SerializationInfo(Type,IFormatterConverter,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Boolean)
  nameWithType: SerializationInfo.AddValue(String,Boolean)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Byte)
  nameWithType: SerializationInfo.AddValue(String,Byte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Char)
  nameWithType: SerializationInfo.AddValue(String,Char)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,DateTime)
  nameWithType: SerializationInfo.AddValue(String,DateTime)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Decimal)
  nameWithType: SerializationInfo.AddValue(String,Decimal)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Double)
  nameWithType: SerializationInfo.AddValue(String,Double)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int16)
  nameWithType: SerializationInfo.AddValue(String,Int16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int32)
  nameWithType: SerializationInfo.AddValue(String,Int32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Int64)
  nameWithType: SerializationInfo.AddValue(String,Int64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object)
  nameWithType: SerializationInfo.AddValue(String,Object)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object)
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,SByte)
  nameWithType: SerializationInfo.AddValue(String,SByte)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,SByte)
- uid: System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Single)
  nameWithType: SerializationInfo.AddValue(String,Single)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt16)
  nameWithType: SerializationInfo.AddValue(String,UInt16)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt16)
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt32)
  nameWithType: SerializationInfo.AddValue(String,UInt32)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,UInt64)
  nameWithType: SerializationInfo.AddValue(String,UInt64)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue(String,Object,Type)
  nameWithType: SerializationInfo.AddValue(String,Object,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.AddValue(String,Object,Type)
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
  fullName: System.Runtime.Serialization.SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
  fullName: System.Runtime.Serialization.SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean(String)
  nameWithType: SerializationInfo.GetBoolean(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetBoolean(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte(String)
  nameWithType: SerializationInfo.GetByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetChar(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar(String)
  nameWithType: SerializationInfo.GetChar(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetChar(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime(String)
  nameWithType: SerializationInfo.GetDateTime(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDateTime(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal(String)
  nameWithType: SerializationInfo.GetDecimal(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDecimal(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble(String)
  nameWithType: SerializationInfo.GetDouble(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetDouble(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator()
  nameWithType: SerializationInfo.GetEnumerator()
  fullName: System.Runtime.Serialization.SerializationInfo.GetEnumerator()
- uid: System.Runtime.Serialization.SerializationInfoEnumerator
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfoEnumerator
  nameWithType: SerializationInfoEnumerator
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16(String)
  nameWithType: SerializationInfo.GetInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32(String)
  nameWithType: SerializationInfo.GetInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64(String)
  nameWithType: SerializationInfo.GetInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte(String)
  nameWithType: SerializationInfo.GetSByte(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSByte(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle(String)
  nameWithType: SerializationInfo.GetSingle(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetSingle(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetString(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString(String)
  nameWithType: SerializationInfo.GetString(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetString(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16(String)
  nameWithType: SerializationInfo.GetUInt16(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt16(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32(String)
  nameWithType: SerializationInfo.GetUInt32(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt32(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64(String)
  nameWithType: SerializationInfo.GetUInt64(String)
  fullName: System.Runtime.Serialization.SerializationInfo.GetUInt64(String)
- uid: System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue(String,Type)
  nameWithType: SerializationInfo.GetValue(String,Type)
  fullName: System.Runtime.Serialization.SerializationInfo.GetValue(String,Type)
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
  fullName: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
  fullName: System.Runtime.Serialization.SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
  fullName: System.Runtime.Serialization.SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType(System.Type)
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType(Type)
  nameWithType: SerializationInfo.SetType(Type)
  fullName: System.Runtime.Serialization.SerializationInfo.SetType(Type)
- uid: System.Runtime.Serialization.SerializationInfo.#ctor*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo.SerializationInfo
- uid: System.Runtime.Serialization.SerializationInfo.AddValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AddValue
  nameWithType: SerializationInfo.AddValue
- uid: System.Runtime.Serialization.SerializationInfo.AssemblyName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: AssemblyName
  nameWithType: SerializationInfo.AssemblyName
- uid: System.Runtime.Serialization.SerializationInfo.FullTypeName*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: FullTypeName
  nameWithType: SerializationInfo.FullTypeName
- uid: System.Runtime.Serialization.SerializationInfo.GetBoolean*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetBoolean
  nameWithType: SerializationInfo.GetBoolean
- uid: System.Runtime.Serialization.SerializationInfo.GetByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetByte
  nameWithType: SerializationInfo.GetByte
- uid: System.Runtime.Serialization.SerializationInfo.GetChar*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetChar
  nameWithType: SerializationInfo.GetChar
- uid: System.Runtime.Serialization.SerializationInfo.GetDateTime*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDateTime
  nameWithType: SerializationInfo.GetDateTime
- uid: System.Runtime.Serialization.SerializationInfo.GetDecimal*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDecimal
  nameWithType: SerializationInfo.GetDecimal
- uid: System.Runtime.Serialization.SerializationInfo.GetDouble*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetDouble
  nameWithType: SerializationInfo.GetDouble
- uid: System.Runtime.Serialization.SerializationInfo.GetEnumerator*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetEnumerator
  nameWithType: SerializationInfo.GetEnumerator
- uid: System.Runtime.Serialization.SerializationInfo.GetInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt16
  nameWithType: SerializationInfo.GetInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt32
  nameWithType: SerializationInfo.GetInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetInt64
  nameWithType: SerializationInfo.GetInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetSByte*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSByte
  nameWithType: SerializationInfo.GetSByte
- uid: System.Runtime.Serialization.SerializationInfo.GetSingle*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetSingle
  nameWithType: SerializationInfo.GetSingle
- uid: System.Runtime.Serialization.SerializationInfo.GetString*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetString
  nameWithType: SerializationInfo.GetString
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt16*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt16
  nameWithType: SerializationInfo.GetUInt16
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt32*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt32
  nameWithType: SerializationInfo.GetUInt32
- uid: System.Runtime.Serialization.SerializationInfo.GetUInt64*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetUInt64
  nameWithType: SerializationInfo.GetUInt64
- uid: System.Runtime.Serialization.SerializationInfo.GetValue*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: GetValue
  nameWithType: SerializationInfo.GetValue
- uid: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsAssemblyNameSetExplicit
  nameWithType: SerializationInfo.IsAssemblyNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: IsFullTypeNameSetExplicit
  nameWithType: SerializationInfo.IsFullTypeNameSetExplicit
- uid: System.Runtime.Serialization.SerializationInfo.MemberCount*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: MemberCount
  nameWithType: SerializationInfo.MemberCount
- uid: System.Runtime.Serialization.SerializationInfo.ObjectType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: ObjectType
  nameWithType: SerializationInfo.ObjectType
- uid: System.Runtime.Serialization.SerializationInfo.SetType*
  parent: System.Runtime.Serialization.SerializationInfo
  isExternal: false
  name: SetType
  nameWithType: SerializationInfo.SetType
