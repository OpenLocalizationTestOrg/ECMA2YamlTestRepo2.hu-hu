### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyPropertyKey
  id: DependencyPropertyKey
  children:
  - System.Windows.DependencyPropertyKey.DependencyProperty
  - System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  langs:
  - csharp
  name: DependencyPropertyKey
  nameWithType: DependencyPropertyKey
  fullName: System.Windows.DependencyPropertyKey
  type: Class
  summary: "Függőség tulajdonságazonosító biztosít egy csak olvasható függőség tulajdonság korlátozott írási hozzáférést."
  remarks: "DependencyPropertyKey példányok akkor kapja meg, a metódusok <xref:System.Windows.DependencyProperty.RegisterReadOnly%2A>vagy <xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A>.</xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A> </xref:System.Windows.DependencyProperty.RegisterReadOnly%2A> függőség tulajdonság regisztrációs hívás visszatérési értéke       Regisztrálja a függőség tulajdonság típusának is használhatja a DependencyPropertyKey hívások <xref:System.Windows.DependencyObject.SetValue%2A>és <xref:System.Windows.DependencyObject.ClearValue%2A>osztály logikája, módosítsa a tulajdonság értékét.</xref:System.Windows.DependencyObject.ClearValue%2A> </xref:System.Windows.DependencyObject.SetValue%2A> Ha a kulcs hozzáférési szintjét, kapcsolódó osztályok is használhatja a kulcs és a függőség tulajdonság. Például a kulcs megjelölése belső deklarálhatja, és egyéb típusú belül ugyanaz a szerelvény is beállíthatja, hogy függőség tulajdonság.       A csak olvasható tulajdonság regisztrációjának által visszaadott DependencyPropertyKey nem közzé kell tenni, ugyanis a kulcs teszi ki a tulajdonság állítható be, így defeating regisztrálásával a csak olvasható függőségi tulajdonságként pontot. Is, teszi ki a kulcs hatására nem egyezik a rendelkezésre álló függőség tulajdonság viselkedések és annak [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] tulajdonság burkoló implementációkban rossz osztály Tervező.       Ahelyett, hogy csökkenjen maga a kulcs, érdemes inkább teszi ki a <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A>, DependencyPropertyKey értékének egy `public static readonly` <xref:System.Windows.DependencyProperty>a a osztályhoz</xref:System.Windows.DependencyProperty> </xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> Ez lehetővé teszi, hogy a tulajdonság vissza egy érvényes függőségi tulajdonságazonosító egyes tulajdonság rendszer műveletek, például a helyi számbavétele értékeket. Az így kapott azonosító nem rendelkezik a szolgáltatás összes funkciójáról a egy <xref:System.Windows.DependencyProperty>számos tulajdonság rendszer művelethez.</xref:System.Windows.DependencyProperty>"
  example:
  - "The following example registers a read-only dependency property, and also uses the key for two purposes in other class members: implementing the get \"wrapper\", and as the identifier for a protected determination operation that sets the value based on calculations of other property values.  \n  \n [!code-cs[WPFAquariumSln#RODP](~/add/codesnippet/csharp/WPFAquariumSln/WPFAquariumObjects/Class1.cs#rodp)]\n [!code-vb[WPFAquariumSln#RODP](~/add/codesnippet/visualbasic/wpfaquariumobjects/class1.vb#rodp)]"
  syntax:
    content: public sealed class DependencyPropertyKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyKey.DependencyProperty
  id: DependencyProperty
  parent: System.Windows.DependencyPropertyKey
  langs:
  - csharp
  name: DependencyProperty
  nameWithType: DependencyPropertyKey.DependencyProperty
  fullName: System.Windows.DependencyPropertyKey.DependencyProperty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Lekérdezi a speciális írásvédett függőségi tulajdonságazonosító társított függőségi tulajdonság azonosítója."
  remarks: "A DependencyProperty érték engedélyezi a közös tulajdonság rendszer műveletekbe egyes azonos kapcsolatok használt írható-olvasható függőségi tulajdonságok részt venni a csak olvasható tulajdonság azonosítója.       A get tulajdonságelérő egy csak olvasható függőségi tulajdonság esetében megvalósításához, hozzon létre, és teszi közzé a <xref:System.Windows.DependencyProperty>azonosítója a az osztályhoz.</xref:System.Windows.DependencyProperty> Ez kétféle célt szolgál: - a saját osztály kell a <xref:System.Windows.DependencyProperty>azonosítója a tulajdonság burkoló a &quot;get&quot; leírója megvalósításához.</xref:System.Windows.DependencyProperty> Használja a <xref:System.Windows.DependencyProperty>paramétereként a <xref:System.Windows.DependencyObject.GetValue%2A>hívás, amely a &quot;get&quot; elérő.</xref:System.Windows.DependencyObject.GetValue%2A> </xref:System.Windows.DependencyProperty>      - <xref:System.Windows.DependencyProperty>azonosítók teszi közzé a függőség tulajdonság a tulajdonság rendszerhez, úgy, hogy más módszerekkel támaszkodó metaadat-e hozzáférési engedélye a szabványos formában.</xref:System.Windows.DependencyProperty> Például ha hívott <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>egyes <xref:System.Windows.DependencyObject>helyileg tulajdonságainak beállítása (azonosítók és értékek) az enumerációs azonosítóját, és a csak olvasható függőség tulajdonság visszaadott a <xref:System.Windows.DependencyProperty>ahelyett, hogy a kulcs értékét.</xref:System.Windows.DependencyProperty> </xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> Nem jelentkezik, mintha egy <xref:System.Windows.DependencyProperty>azonosítója nem biztonságosabbá a csak olvasható függőség tulajdonság bármely olyan módon, így csak a tulajdonsághoz több helyen levő, mind a későbbi származtatott osztályok és osztálypéldányok igénylő műveletek.</xref:System.Windows.DependencyProperty>       Teszi közzé a <xref:System.Windows.DependencyProperty>a osztály azonosítója, meghívja a DependencyProperty közvetlenül a kulcsot a.</xref:System.Windows.DependencyProperty> Ez az érték létrehozásához használja a `public static readonly` <xref:System.Windows.DependencyProperty>a osztály, amely a <xref:System.Windows.DependencyPropertyKey>.</xref:System.Windows.DependencyPropertyKey> parallels azonosítója</xref:System.Windows.DependencyProperty>"
  example:
  - "The following example calls DependencyProperty to expose the <xref:System.Windows.DependencyProperty> identifier (`AquariumGraphicProperty`) for the `AquariumGraphic` read-only dependency property on a class. The example also shows the <xref:System.Windows.DependencyPropertyKey> creation (as an internal member) and the get accessor for `AquariumGraphic`.  \n  \n [!code-cs[WPFAquariumSln#RODP](~/add/codesnippet/csharp/WPFAquariumSln/WPFAquariumObjects/Class1.cs#rodp)]\n [!code-vb[WPFAquariumSln#RODP](~/add/codesnippet/visualbasic/wpfaquariumobjects/class1.vb#rodp)]"
  syntax:
    content: public System.Windows.DependencyProperty DependencyProperty { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "A megfelelő függőség tulajdonság azonosítója."
  overload: System.Windows.DependencyPropertyKey.DependencyProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  id: OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyPropertyKey
  langs:
  - csharp
  name: OverrideMetadata(Type,PropertyMetadata)
  nameWithType: DependencyPropertyKey.OverrideMetadata(Type,PropertyMetadata)
  fullName: System.Windows.DependencyPropertyKey.OverrideMetadata(Type,PropertyMetadata)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Felülbírálja a függőség tulajdonság azonosítóval rendelkezik olvasási függőség tulajdonság metaadatai."
  remarks: "Egy csak olvasható függőség tulajdonság a metaadatok felülbírálása hasonló okokból felülbírálása metaadatainak az olvasási és írási függőség tulajdonság szerint történik, és csak olyan hozzáférési kulcs szinten, mert a metaadatok megadott viselkedések módosíthatja a készlet beállításokat (az alapértelmezett érték, például).       Az olvasási és írási függőségi tulajdonságok esetében, felülbírálása egy csak olvasható függőség tulajdonság a metaadatok csak történjen (Ez megfelel az objektumokat, amelyeket regisztrálni a tulajdonság olyan specifikus példányai létrehozásának idő) tulajdonságot rendszerenként helyezés használatban tulajdonság előtt. OverrideMetadata hívások csak belül a statikus konstruktorok magát, mint a biztosító típusú hajtható végre a `forType` ezen metódus, vagy amely egyenértékű inicializálási paramétere.       Ez a módszer hatékonyan továbbítja a <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>metódust, hogy a <xref:System.Windows.DependencyPropertyKey>példányához, a kulcs paramétere.</xref:System.Windows.DependencyPropertyKey> </xref:System.Windows.DependencyProperty.OverrideMetadata%2A>"
  example:
  - "The following example overrides metadata for an existing read-only dependency property that a class inherits. In this case, the scenario goal was to add a coerce value callback that the base property metadata did not have. You could also override metadata for any of the other reasons that overriding metadata is typically appropriate (changing default value, adding <xref:System.Windows.FrameworkPropertyMetadataOptions> values, etc.)  \n  \n [!code-cs[WPFAquariumSln#RODPOverride](~/add/codesnippet/csharp/WPFAquariumSln/WPFAquariumObjects/Class1.cs#rodpoverride)]\n [!code-vb[WPFAquariumSln#RODPOverride](~/add/codesnippet/visualbasic/wpfaquariumobjects/class1.vb#rodpoverride)]"
  syntax:
    content: public void OverrideMetadata (Type forType, System.Windows.PropertyMetadata typeMetadata);
    parameters:
    - id: forType
      type: System.Type
      description: "Amikor a függőség tulajdonság létezik-e, és metaadatok felül kell típusa."
    - id: typeMetadata
      type: System.Windows.PropertyMetadata
      description: "Ehhez a típushoz megadott metaadatok."
  overload: System.Windows.DependencyPropertyKey.OverrideMetadata*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kísérlet történt a metaadat-felülbírálásnak írható-olvasható függőség tulajdonság alapján (nem végezhető el az aláírás használatával)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Metaadatok már létrejött a tulajdonsághoz, mert a megadott típus létezik."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.DependencyPropertyKey.DependencyProperty
  parent: System.Windows.DependencyPropertyKey
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyKey.DependencyProperty
  fullName: System.Windows.DependencyPropertyKey.DependencyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)
  parent: System.Windows.DependencyPropertyKey
  isExternal: false
  name: OverrideMetadata(Type,PropertyMetadata)
  nameWithType: DependencyPropertyKey.OverrideMetadata(Type,PropertyMetadata)
  fullName: System.Windows.DependencyPropertyKey.OverrideMetadata(Type,PropertyMetadata)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.Windows.DependencyPropertyKey.DependencyProperty*
  parent: System.Windows.DependencyPropertyKey
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyPropertyKey.DependencyProperty
- uid: System.Windows.DependencyPropertyKey.OverrideMetadata*
  parent: System.Windows.DependencyPropertyKey
  isExternal: false
  name: OverrideMetadata
  nameWithType: DependencyPropertyKey.OverrideMetadata
