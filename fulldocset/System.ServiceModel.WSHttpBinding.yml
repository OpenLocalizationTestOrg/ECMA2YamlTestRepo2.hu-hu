### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WSHttpBinding
  id: WSHttpBinding
  children:
  - System.ServiceModel.WSHttpBinding.#ctor
  - System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)
  - System.ServiceModel.WSHttpBinding.#ctor(System.String)
  - System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)
  - System.ServiceModel.WSHttpBinding.AllowCookies
  - System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.WSHttpBinding.CreateBindingElements
  - System.ServiceModel.WSHttpBinding.CreateMessageSecurity
  - System.ServiceModel.WSHttpBinding.GetTransport
  - System.ServiceModel.WSHttpBinding.Security
  - System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity
  langs:
  - csharp
  name: WSHttpBinding
  nameWithType: WSHttpBinding
  fullName: System.ServiceModel.WSHttpBinding
  type: Class
  summary: "Egy együttműködésre kötése, amely támogatja az elosztott tranzakciók és biztonságos, megbízható munkamenetek jelöli."
  remarks: "A WSHttpBinding hasonlít a <xref:System.ServiceModel.BasicHttpBinding>webes szolgáltatás további funkciókat is biztosítanak, de.</xref:System.ServiceModel.BasicHttpBinding> HTTP-átvitelt használ, és üzenet biztonságot, mint <xref:System.ServiceModel.BasicHttpBinding>, de azt is biztosít a tranzakciók, megbízható üzenetküldés és WS-Addressing címzést, vagy alapértelmezés szerint engedélyezett, vagy egy egyetlen vezérlő beállítás segítségével érhető el.</xref:System.ServiceModel.BasicHttpBinding>"
  example:
  - "The following sample code shows how to use the WSHttpBinding class.  \n  \n [!code-cs[WSHttpBinding#0](~/add/codesnippet/csharp/t-system.servicemodel.ws_4_1.cs)]\n [!code-vb[WSHttpBinding#0](~/add/codesnippet/visualbasic/t-system.servicemodel.ws_4_1.vb)]"
  syntax:
    content: 'public class WSHttpBinding : System.ServiceModel.WSHttpBindingBase'
  inheritance:
  - System.ServiceModel.Channels.Binding
  - System.ServiceModel.WSHttpBindingBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal
  - System.ServiceModel.WSHttpBindingBase.EnvelopeVersion
  - System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode
  - System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize
  - System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize
  - System.ServiceModel.WSHttpBindingBase.MessageEncoding
  - System.ServiceModel.WSHttpBindingBase.ProxyAddress
  - System.ServiceModel.WSHttpBindingBase.ReaderQuotas
  - System.ServiceModel.WSHttpBindingBase.ReliableSession
  - System.ServiceModel.WSHttpBindingBase.Scheme
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession
  - System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding
  - System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously
  - System.ServiceModel.WSHttpBindingBase.TextEncoding
  - System.ServiceModel.WSHttpBindingBase.TransactionFlow
  - System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: WSHttpBinding()
  nameWithType: WSHttpBinding.WSHttpBinding()
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> osztály."
  remarks: ''
  example:
  - "The following sample code shows how to initialize a new instance of the <xref:System.ServiceModel.WSHttpBinding> class.  \n  \n [!code-cs[WSHttpBinding#1](~/add/codesnippet/csharp/m-system.servicemodel.ws_5_1.cs)]\n [!code-vb[WSHttpBinding#1](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_5_1.vb)]"
  syntax:
    content: public WSHttpBinding ();
    parameters: []
  overload: System.ServiceModel.WSHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)
  id: '#ctor(System.ServiceModel.SecurityMode)'
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: WSHttpBinding(SecurityMode)
  nameWithType: WSHttpBinding.WSHttpBinding(SecurityMode)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(SecurityMode)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> a kötés által használt biztonsági megadott típussal rendelkező osztály."
  remarks: ''
  example:
  - "The following example shows how to initialize a new instance of the <xref:System.ServiceModel.WSHttpBinding> class with a `securityMode` parameter.  \n  \n [!code-cs[WSHttpBinding#7](~/add/codesnippet/csharp/m-system.servicemodel.ws_3_1.cs)]\n [!code-vb[WSHttpBinding#7](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_3_1.vb)]"
  syntax:
    content: public WSHttpBinding (System.ServiceModel.SecurityMode securityMode);
    parameters:
    - id: securityMode
      type: System.ServiceModel.SecurityMode
      description: "Értékének <xref:System.ServiceModel.SecurityMode>, amely megadja, hogy a SOAP-üzenetet, és az ügyfél használt biztonsági típusát.</xref:System.ServiceModel.SecurityMode>"
  overload: System.ServiceModel.WSHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: WSHttpBinding(String)
  nameWithType: WSHttpBinding.WSHttpBinding(String)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> osztály a konfigurációs névvel megadott kötéshez."
  remarks: ''
  example:
  - "The following example shows how to initialize a new instance of the <xref:System.ServiceModel.WSHttpBinding> class with a string argument.  \n  \n [!code-cs[WSHttpBinding#5](~/add/codesnippet/csharp/m-system.servicemodel.ws_6_1.cs)]\n [!code-vb[WSHttpBinding#5](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_6_1.vb)]"
  syntax:
    content: public WSHttpBinding (string configName);
    parameters:
    - id: configName
      type: System.String
      description: "A kötés konfiguráció nevét a <xref href=&quot;System.ServiceModel.Configuration.WSHttpBindingElement&quot;> </xref>."
  overload: System.ServiceModel.WSHttpBinding.#ctor*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "A kötéselem nevű <code> configName </code> nem található."
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)
  id: '#ctor(System.ServiceModel.SecurityMode,System.Boolean)'
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: WSHttpBinding(SecurityMode,Boolean)
  nameWithType: WSHttpBinding.WSHttpBinding(SecurityMode,Boolean)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(SecurityMode,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> osztály a kötés és egy érték, amely azt jelzi, hogy engedélyezve van-e a megbízható munkamenet által használt biztonsági megadott típussal."
  remarks: ''
  example:
  - "The following example shows how to initialize a new instance of the <xref:System.ServiceModel.WSHttpBinding> class with a `securityMode` and `reliableSessionEnabled` parameter.  \n  \n [!code-cs[WSHttpBinding#6](~/add/codesnippet/csharp/07636ed4-d0dd-4ca2-9f3d-_1.cs)]\n [!code-vb[WSHttpBinding#6](~/add/codesnippet/visualbasic/07636ed4-d0dd-4ca2-9f3d-_1.vb)]"
  syntax:
    content: public WSHttpBinding (System.ServiceModel.SecurityMode securityMode, bool reliableSessionEnabled);
    parameters:
    - id: securityMode
      type: System.ServiceModel.SecurityMode
      description: "Értékének <xref:System.ServiceModel.SecurityMode>, amely megadja, hogy a SOAP-üzenetet, és az ügyfél használt biztonsági típusát.</xref:System.ServiceModel.SecurityMode>"
    - id: reliableSessionEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a megbízható munkamenet; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSHttpBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: AllowCookies
  nameWithType: WSHttpBinding.AllowCookies
  fullName: System.ServiceModel.WSHttpBinding.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a WCF-ügyfél automatikusan tárolja, és küldje el újból a egyetlen webszolgáltatás által küldött cookie-kat."
  remarks: "AllowCookies beállítást `true` akkor hasznos, ha egy ügyfél dolgozik egy webszolgáltatás, amelyet a cookie-kat használ.  Ha igénybe veszi a azonos cookie több szolgáltatást, állítsa AllowCookies `false` és kell manuálisan a cookie-fejlécének hozzáadása minden kimenő üzenetet. A következő kód bemutatja, hogyan ehhez:```c#   MyWebServiceClient client = new MyWebServiceClient();              using (new OperationContextScope(client.InnerChannel))           {               client.DoSomething();                  // Extract the cookie embedded in the received web service response               // and stores it locally               HttpResponseMessageProperty response = (HttpResponseMessageProperty)               OperationContext.Current.IncomingMessageProperties[                   HttpResponseMessageProperty.Name];               sharedCookie = response.Headers[&quot;Set-Cookie&quot;];           }              MyOtherWebServiceClient otherClient = new MyOtherWebServiceClient();              using (new OperationContextScope(otherClient.InnerChannel))           {               // Embeds the extracted cookie in the next web service request               // Note that we manually have to create the request object since               // since it doesn&quot;t exist yet at this stage                HttpRequestMessageProperty request = new HttpRequestMessageProperty();               request.Headers[&quot;Cookie&quot;] = sharedCookie;               OperationContext.Current.OutgoingMessageProperties[                   HttpRequestMessageProperty.Name] = request;                  otherClient.DoSomethingElse();           }      ```"
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Ha automatikus cookie-k feldolgozása szükség; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.WSHttpBinding.AllowCookies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WSHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WSHttpBinding.BuildChannelFactory(BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.ServiceModel.WSHttpBinding.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: CreateBindingElements()
  nameWithType: WSHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WSHttpBinding.CreateBindingElements()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy kötést a jelenlegi kötés elemeiben rendezett gyűjteményét adja vissza."
  remarks: "A kötési eleme sorrendje is fontos. A sorrendet, amelyben a protokoll és a szállítási csatorna úgy alakítottak ki és halmozott tükrözi."
  example:
  - "The following example shows how to obtain the <xref:System.ServiceModel.Channels.BindingElementCollection> that contains the ordered stack of binding elements described by <xref:System.ServiceModel.WSHttpBinding> binding.  \n  \n [!code-cs[WSHttpBinding#9](~/add/codesnippet/csharp/m-system.servicemodel.ws_2_1.cs)]\n [!code-vb[WSHttpBinding#9](~/add/codesnippet/visualbasic/m-system.servicemodel.ws_2_1.vb)]"
  syntax:
    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "A <xref:System.ServiceModel.Channels.BindingElementCollection>kötéselemeket szerint rendezett verem tartalmazza a <xref href=&quot;System.ServiceModel.WSHttpBinding&quot;> </xref> kötés.</xref:System.ServiceModel.Channels.BindingElementCollection>"
  overload: System.ServiceModel.WSHttpBinding.CreateBindingElements*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A transport biztonsági üzemmód beállítása, hogy engedélyezve van a megbízható munkamenet nem adhatók meg."
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.CreateMessageSecurity
  id: CreateMessageSecurity
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: CreateMessageSecurity()
  nameWithType: WSHttpBinding.CreateMessageSecurity()
  fullName: System.ServiceModel.WSHttpBinding.CreateMessageSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A biztonsági kötéselem ad vissza a jelenlegi kötés."
  syntax:
    content: protected override System.ServiceModel.Channels.SecurityBindingElement CreateMessageSecurity ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.SecurityBindingElement
      description: "A <xref:System.ServiceModel.Channels.SecurityBindingElement>az aktuális kötésének.</xref:System.ServiceModel.Channels.SecurityBindingElement>"
  overload: System.ServiceModel.WSHttpBinding.CreateMessageSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.GetTransport
  id: GetTransport
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: GetTransport()
  nameWithType: WSHttpBinding.GetTransport()
  fullName: System.ServiceModel.WSHttpBinding.GetTransport()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A jelenlegi kötés a átvitelkötési elemet adja vissza."
  syntax:
    content: protected override System.ServiceModel.Channels.TransportBindingElement GetTransport ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.TransportBindingElement
      description: "A <xref:System.ServiceModel.Channels.TransportBindingElement>az aktuális kötésének.</xref:System.ServiceModel.Channels.TransportBindingElement>"
  overload: System.ServiceModel.WSHttpBinding.GetTransport*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.Security
  id: Security
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: Security
  nameWithType: WSHttpBinding.Security
  fullName: System.ServiceModel.WSHttpBinding.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Az ehhez a kötéshez használt biztonsági beállításainak beolvasása."
  remarks: "Az alapértelmezett biztonság típusa nem használja a <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29>konstruktor.</xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29>"
  example:
  - "The following example shows how to obtain the value of the Security.  \n  \n [!code-cs[WSHttpBinding#8](~/add/codesnippet/csharp/p-system.servicemodel.ws_33_1.cs)]\n [!code-vb[WSHttpBinding#8](~/add/codesnippet/visualbasic/p-system.servicemodel.ws_33_1.vb)]"
  syntax:
    content: public System.ServiceModel.WSHttpSecurity Security { get; set; }
    return:
      type: System.ServiceModel.WSHttpSecurity
      description: "A <xref href=&quot;System.ServiceModel.WSHttpSecurity&quot;> </xref> , amely ehhez a kötéshez használt. Az alapértelmezett érték <> </> *> tulajdonság <> </> *>."
  overload: System.ServiceModel.WSHttpBinding.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity
  id: ShouldSerializeSecurity
  parent: System.ServiceModel.WSHttpBinding
  langs:
  - csharp
  name: ShouldSerializeSecurity()
  nameWithType: WSHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Visszaadja egy érték, amely azt jelzi, hogy a <xref:System.ServiceModel.WSHttpBinding.Security*>tulajdonság alapértelmezett értéke megváltozott, és kell szerializálni.</xref:System.ServiceModel.WSHttpBinding.Security*>"
  syntax:
    content: public bool ShouldSerializeSecurity ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref:System.ServiceModel.WSHttpBinding.Security*>tulajdonság értéke kell lennie, mivel a szerializált; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.WSHttpBinding.Security*>"
  overload: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.WSHttpBindingBase
  isExternal: false
  name: System.ServiceModel.WSHttpBindingBase
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.WSHttpBinding.#ctor
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding()
  nameWithType: WSHttpBinding.WSHttpBinding()
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding()
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding(SecurityMode)
  nameWithType: WSHttpBinding.WSHttpBinding(SecurityMode)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(SecurityMode)
- uid: System.ServiceModel.SecurityMode
  parent: System.ServiceModel
  isExternal: true
  name: SecurityMode
  nameWithType: SecurityMode
  fullName: System.ServiceModel.SecurityMode
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.String)
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding(String)
  nameWithType: WSHttpBinding.WSHttpBinding(String)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding(SecurityMode,Boolean)
  nameWithType: WSHttpBinding.WSHttpBinding(SecurityMode,Boolean)
  fullName: System.ServiceModel.WSHttpBinding.WSHttpBinding(SecurityMode,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.WSHttpBinding.AllowCookies
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WSHttpBinding.AllowCookies
  fullName: System.ServiceModel.WSHttpBinding.AllowCookies
- uid: System.ServiceModel.WSHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: BuildChannelFactory(BindingParameterCollection)
  nameWithType: WSHttpBinding.BuildChannelFactory(BindingParameterCollection)
  fullName: System.ServiceModel.WSHttpBinding.BuildChannelFactory(BindingParameterCollection)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.WSHttpBinding.CreateBindingElements
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: CreateBindingElements()
  nameWithType: WSHttpBinding.CreateBindingElements()
  fullName: System.ServiceModel.WSHttpBinding.CreateBindingElements()
- uid: System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.WSHttpBinding.CreateMessageSecurity
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: CreateMessageSecurity()
  nameWithType: WSHttpBinding.CreateMessageSecurity()
  fullName: System.ServiceModel.WSHttpBinding.CreateMessageSecurity()
- uid: System.ServiceModel.Channels.SecurityBindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: SecurityBindingElement
  nameWithType: SecurityBindingElement
  fullName: System.ServiceModel.Channels.SecurityBindingElement
- uid: System.ServiceModel.WSHttpBinding.GetTransport
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: GetTransport()
  nameWithType: WSHttpBinding.GetTransport()
  fullName: System.ServiceModel.WSHttpBinding.GetTransport()
- uid: System.ServiceModel.Channels.TransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: TransportBindingElement
  nameWithType: TransportBindingElement
  fullName: System.ServiceModel.Channels.TransportBindingElement
- uid: System.ServiceModel.WSHttpBinding.Security
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: Security
  nameWithType: WSHttpBinding.Security
  fullName: System.ServiceModel.WSHttpBinding.Security
- uid: System.ServiceModel.WSHttpSecurity
  parent: System.ServiceModel
  isExternal: false
  name: WSHttpSecurity
  nameWithType: WSHttpSecurity
  fullName: System.ServiceModel.WSHttpSecurity
- uid: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity()
  nameWithType: WSHttpBinding.ShouldSerializeSecurity()
  fullName: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity()
- uid: System.ServiceModel.WSHttpBinding.#ctor*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: WSHttpBinding
  nameWithType: WSHttpBinding.WSHttpBinding
- uid: System.ServiceModel.WSHttpBinding.AllowCookies*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: AllowCookies
  nameWithType: WSHttpBinding.AllowCookies
- uid: System.ServiceModel.WSHttpBinding.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: WSHttpBinding.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.WSHttpBinding.CreateBindingElements*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: CreateBindingElements
  nameWithType: WSHttpBinding.CreateBindingElements
- uid: System.ServiceModel.WSHttpBinding.CreateMessageSecurity*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: CreateMessageSecurity
  nameWithType: WSHttpBinding.CreateMessageSecurity
- uid: System.ServiceModel.WSHttpBinding.GetTransport*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: GetTransport
  nameWithType: WSHttpBinding.GetTransport
- uid: System.ServiceModel.WSHttpBinding.Security*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: Security
  nameWithType: WSHttpBinding.Security
- uid: System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity*
  parent: System.ServiceModel.WSHttpBinding
  isExternal: false
  name: ShouldSerializeSecurity
  nameWithType: WSHttpBinding.ShouldSerializeSecurity
