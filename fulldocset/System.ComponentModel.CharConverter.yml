### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CharConverter
  id: CharConverter
  children:
  - System.ComponentModel.CharConverter.#ctor
  - System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: CharConverter
  nameWithType: CharConverter
  fullName: System.ComponentModel.CharConverter
  type: Class
  summary: "Olyan típuskonvertert különböző más felelősséget érkező vagy oda irányuló konvertálható Unicode karaktert objektumok biztosít."
  remarks: "A konverter csak alakíthatja át egy 1 hosszúságú karakterlánc, illetve onnan karaktert.       Típus konverterek kapcsolatos további információkért tekintse meg a <xref:System.ComponentModel.TypeConverter>alaposztály és [hogyan: valósítja meg az olyan Típuskonvertert](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Kell soha nem hozható létre egy CharConverter példánya. Ehelyett hívja meg az <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> <xref:System.ComponentModel.TypeDescriptor>osztály</xref:System.ComponentModel.TypeDescriptor> metódusában</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> További információkért lásd: az <xref:System.ComponentModel.TypeConverter>Alap osztály</xref:System.ComponentModel.TypeConverter> szereplő példák"
  example:
  - "The following code example converts a variable of type <xref:System.Char> to a string variable, and vice versa.  \n  \n [!code-cs[Converters#5](~/add/codesnippet/csharp/t-system.componentmodel._75_1.cs)]\n [!code-vb[Converters#5](~/add/codesnippet/visualbasic/t-system.componentmodel._75_1.vb)]\n [!code-cpp[Converters#5](~/add/codesnippet/cpp/t-system.componentmodel._75_1.cpp)]"
  syntax:
    content: 'public class CharConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.CharConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CharConverter
  langs:
  - csharp
  name: CharConverter()
  nameWithType: CharConverter.CharConverter()
  fullName: System.ComponentModel.CharConverter.CharConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ComponentModel.CharConverter&quot;> </xref> osztály."
  syntax:
    content: public CharConverter ();
    parameters: []
  overload: System.ComponentModel.CharConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.CharConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy érték, amely jelzi, hogy a konverter az objektumok adott forrástípus alakíthatja át egy Unicode karaktert objektum a megadott környezet használatával lekérdezi."
  remarks: "A konverter csak alakíthatja át egy 1 hosszúságú karakterlánc, illetve onnan karaktert.       A `context` paraméter segítségével további információkhoz juthat a konverter van elindításának az a környezetben. Ez lehet `null`, ezért mindig ellenőrizze. Is, lépjen vissza a helyi objektum tulajdonságainak `null`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Egy <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> formátum környezetet biztosít."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>, amely az átalakítani kívánt típusát jelöli.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a konverter hajthat végre az átalakítás; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.CharConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.CharConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott objektumnak konvertál egy Unicode-karakter objektum."
  remarks: "A konverter csak alakíthatja át egy 1 hosszúságú karakterlánc, illetve onnan karaktert.       A `context` paraméter segítségével további információkhoz juthat a konverter van elindításának az a környezetben. Ez lehet `null`, ezért mindig ellenőrizze. Is, lépjen vissza a helyi objektum tulajdonságainak `null`."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Egy <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> formátum környezetet biztosít."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A kulturális környezet, amelyben `value` konvertálja."
    - id: value
      type: System.Object
      description: "A <xref:System.Object>konvertálni.</xref:System.Object>"
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely jelöli az átalakított <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.CharConverter.ConvertFrom*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>value</code>érték nem érvényes az a cél típusát."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A konverzió nem hajtható végre."
  platform:
  - net462
- uid: System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.CharConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott érték objektum konvertál egy Unicode karaktert objektum argumentumokkal."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Egy <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> formátum környezetet biztosít."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A kulturális környezet, amelyben `value` konvertálja."
    - id: value
      type: System.Object
      description: "A <xref:System.Object>konvertálni.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>konvertálni az értéket.</xref:System.Type>"
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely jelzi, hogy az átalakított érték.</xref:System.Object>"
  overload: System.ComponentModel.CharConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A konverzió nem hajtható végre."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.CharConverter.#ctor
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: CharConverter()
  nameWithType: CharConverter.CharConverter()
  fullName: System.ComponentModel.CharConverter.CharConverter()
- uid: System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.CharConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.CharConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.CharConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.CharConverter.#ctor*
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: CharConverter
  nameWithType: CharConverter.CharConverter
- uid: System.ComponentModel.CharConverter.CanConvertFrom*
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: CharConverter.CanConvertFrom
- uid: System.ComponentModel.CharConverter.ConvertFrom*
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: CharConverter.ConvertFrom
- uid: System.ComponentModel.CharConverter.ConvertTo*
  parent: System.ComponentModel.CharConverter
  isExternal: false
  name: ConvertTo
  nameWithType: CharConverter.ConvertTo
