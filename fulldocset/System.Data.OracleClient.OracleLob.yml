### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleLob
  id: OracleLob
  children:
  - System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.BeginBatch
  - System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  - System.Data.OracleClient.OracleLob.CanRead
  - System.Data.OracleClient.OracleLob.CanSeek
  - System.Data.OracleClient.OracleLob.CanWrite
  - System.Data.OracleClient.OracleLob.ChunkSize
  - System.Data.OracleClient.OracleLob.Clone
  - System.Data.OracleClient.OracleLob.Connection
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleLob.EndBatch
  - System.Data.OracleClient.OracleLob.Erase
  - System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Flush
  - System.Data.OracleClient.OracleLob.IsBatched
  - System.Data.OracleClient.OracleLob.IsNull
  - System.Data.OracleClient.OracleLob.IsTemporary
  - System.Data.OracleClient.OracleLob.Length
  - System.Data.OracleClient.OracleLob.LobType
  - System.Data.OracleClient.OracleLob.Null
  - System.Data.OracleClient.OracleLob.Position
  - System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  - System.Data.OracleClient.OracleLob.Value
  - System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  langs:
  - csharp
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
  type: Class
  summary: "A nagyméretű bináris objektumok jelöli (<xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;></xref>) az Oracle-kiszolgáló tárolt adatok típusát. Ez az osztály nem örökölhető."
  remarks: "Egy OracleLob különbözik egy <xref:System.Data.OracleClient.OracleBFile>abban, hogy az adatok ahelyett, hogy az operációs rendszer fizikai fájlban kiszolgálóján van tárolva.</xref:System.Data.OracleClient.OracleBFile> Egy olvasási és írási objektum eltérően is lehet egy <xref:System.Data.OracleClient.OracleBFile>, amely írásvédett mindig.</xref:System.Data.OracleClient.OracleBFile>       Egy OracleLob lehet az egyik <xref:System.Data.OracleClient.OracleType>adattípusok.</xref:System.Data.OracleClient.OracleType>      | OracleType adattípus |} Leírás |}   |--------------------------|-----------------|   | `Blob`| Az Oracle `BLOB` adattípus, amely tartalmazza a bináris adatok mérete 4 gigabájt (GB). Ez egy <xref:System.Array> <xref:System.Byte>típusú van leképezve. |}   | `Clob`| Az Oracle `CLOB` adattípus, amely karakter adatokat tartalmaz, az alapértelmezett karakter alapján állítsa be a kiszolgálón, 4 GB maximális mérettel.</xref:System.Byte> </xref:System.Array> Ez <xref:System.String>van leképezve. |}   | `NClob`| Az Oracle `NCLOB` adattípus, amely tartalmaz karaktert adatok alapján a nemzeti karakterkészletet, 4 GB maximális mérettel a kiszolgálón.</xref:System.String> Ez <xref:System.String>van leképezve. |}       A .NET-alkalmazás fejlesztője kérheti le az Oracle `LOB` értékeket az alapvető .NET adattípusok, például a <xref:System.Array>típusú <xref:System.Byte>és <xref:System.String>, vagy a speciális OracleLob adattípusú.</xref:System.String> </xref:System.Byte> </xref:System.Array> </xref:System.String> Az adatok olvasása és írása az Oracle OracleLob osztály támogatja `LOB` az Oracle-adatbázisban.       A következők a főbb jellemzőit OracleLob adattípusú, amely megkülönbözteti alapvető .NET adattípusok: - az Oracle beolvasása után `LOB` érték az az Oracle-adatbázisból a OracleLob osztály, módosíthatja a `LOB` adatok nyitva tranzakció és a módosításokat közvetlenül jelennek meg az adatbázishoz. Az Oracle letöltésekor `LOB` az érték egy <xref:System.Array>típusú <xref:System.Byte>vagy <xref:System.String>, és ezek a tömbök frissítse a módosítások nem tükröződnek az adatbázisba.</xref:System.String> </xref:System.Byte> </xref:System.Array>      – Amikor egy darabjának eléréséhez használhatja a OracleLob osztály egy `LOB` érték, csak az adott adatrészlet továbbítódik az Oracle-adatbázishoz az ügyfélnek. Ha a <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>metódus egy darabjának eléréséhez egy `LOB` értéket, az érték a teljes tartalma átadott az Oracle-adatbázisból az ügyfél.</xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>       OracleLob objektum beszerzéséhez hívja meg a <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>metódus.</xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>       Hogyan hozhat létre egy OracleLob, NULL, ebben a formátumban: ```   OracleLob myLob = OracleLob.Null;   ``` ezzel a technikával elsősorban tesztelésére használható e egy `LOB` a kiszolgáló által visszaadott értéke NULL, az ebben a példában látható módon: ```   If(myLob == OracleLob.Null)   ``` A NULL `LOB` hasonlóan viselkedik-e nulla bájtig `LOB` abban a <xref:System.Data.OracleClient.OracleLob.Read%2A>sikeres, és mindig nulla bájt.</xref:System.Data.OracleClient.OracleLob.Read%2A>       Válassza a `LOB` null értéket tartalmazó oszlop <xref:System.Data.OracleClient.OracleLob.Null>.</xref:System.Data.OracleClient.OracleLob.Null> adja vissza.       A tranzakció egy ideiglenes megszerzése előtt kell végrehajtania `LOB`. Ellenkező esetben a <xref:System.Data.OracleClient.OracleDataReader>adatok beszerzésének később meghiúsulhatnak.</xref:System.Data.OracleClient.OracleDataReader>       Egy ideiglenes is megnyithatja `LOB` az Oracle a DBMS_LOB meghívásával. CREATETEMPORARY rendszer tárolt eljárás és kötés egy `LOB` kimeneti paraméterként. Ügyféloldali, egy ideiglenes `LOB` tábla alapú viselkedik `LOB`. Ahhoz például, hogy frissítse az ideiglenes `LOB`, tranzakción belül kell foglalni.       Az alábbi C# példa bemutatja, hogyan nyisson meg egy ideiglenes `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```      > [!NOTE]> Az örökölt <xref:System.IO.Stream.WriteByte%2A>módszer nem jár sikerrel, ha használt karakter adatokkal, és egy <xref:System.InvalidOperationException>vált ki.</xref:System.InvalidOperationException> </xref:System.IO.Stream.WriteByte%2A> Használja a <xref:System.Data.OracleClient.OracleLob.Write%2A>metódus inkább.</xref:System.Data.OracleClient.OracleLob.Write%2A>   >> Ideiglenes `LOB`s csak lezárni, ha a kapcsolat megszakad, de készletezését és ideiglenes terhelés alatt van `LOB`s ne zárja be. Ez az ideiglenes ártalmatlanítása megoldhatók `LOB`, hogy `tempLob.Dispose()`."
  syntax:
    content: 'public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  id: Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "A megadott adatok hozzáfűzi <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> az aktuális <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.       Minden adatforrásból származó `LOB` a jelenlegi végét a rendszer hozzáfűzi `LOB`. Egyik sem helyzete `LOB` értékeli ki, vagy megváltozott a folyamat során.       Az alapul szolgáló adattípusok mindig azonosnak kell lennie. Például, ha az egy <xref:System.Data.OracleClient.OracleType>a cél <xref:System.Data.OracleClient.OracleLob> <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> kell</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType> hozzáfűzi      > [!NOTE] > Ebben a kiadásban a csak olvasható írási művelet `LOB` sikeres lehet, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissül. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public void Append (System.Data.OracleClient.OracleLob source);
    parameters:
    - id: source
      type: System.Data.OracleClient.OracleLob
      description: "A <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> , amelyből adatok hozzáfűzése."
  overload: System.Data.OracleClient.OracleLob.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A forrás <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> null értékű."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A forrás <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> értéke null, vagy a kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A forrás <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  id: BeginBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Kiszolgálóoldali eseményindítók megakadályozza, hogy indítási több olvasási műveletek során."
  remarks: "Megnyitja a `LOB` a <xref:System.Data.OracleClient.OracleLobOpenMode>mód, ezért a `LOB` csak olvasható, nem írható, amíg a megfelelő hívásával <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleLobOpenMode> Kötegelt írási műveletek végrehajtásához a `LOB`, hívja meg <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> <xref:System.Data.OracleClient.OracleLobOpenMode>.</xref:System.Data.OracleClient.OracleLobOpenMode> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>       Az Oracle BeginBatch jelenleg ugyanazon a tranzakción belül egynél többször hívja jelez &quot;ORA-22293: LOB ugyanabban a tranzakcióban már megnyitott&quot; hiba. Emellett ha beszerezte a `LOB` használja egy másik <xref:System.Data.OracleClient.OracleDataReader>, és az eredeti hívó hívása nem a <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metódus, ugyanaz a hiba jön létre.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Ezért meg kell hívni a <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metódust, ha elkészült, a <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> használatával</xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  id: BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Megakadályozza, hogy a kiszolgálóoldali eseményindítók művelet végrehajtása több olvasása során ki és az írási műveletek a megadott hozzáférési mód."
  remarks: "Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.       Hívása <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>jelenleg ugyanazon a tranzakción belül egynél többször jelez az Oracle &quot;ORA-22293: LOB ugyanabban a tranzakcióban már megnyitott&quot; hiba.</xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> Emellett ha beszerezte a `LOB` használja egy másik <xref:System.Data.OracleClient.OracleDataReader>, és az eredeti hívó hívása nem a <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metódus, ugyanaz a hiba jön létre.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Ezért meg kell hívni a <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metódust, ha elkészült, a <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> használatával</xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);
    parameters:
    - id: mode
      type: System.Data.OracleClient.OracleLobOpenMode
      description: "Mód (egy a <xref href=&quot;System.Data.OracleClient.OracleLobOpenMode&quot;> </xref> értékek), amelyben a <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> között a BeginBatch hívás, és a megfelelő elérhető <xref:System.Data.OracleClient.OracleLob.EndBatch*>hívása.</xref:System.Data.OracleClient.OracleLob.EndBatch*>"
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> adatfolyam olvasható."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> adatfolyam támogatja az olvasási, ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha egy <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> van lezárták vagy eltávolították."
  overload: System.Data.OracleClient.OracleLob.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a érték azt jelzi, hogy előre és hátra pozicionálási műveleteket végezheti el."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Ha egy <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> van zárva, vagy használaton, ellenkező esetben <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleLob.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Mindig igaz értéket ad vissza, függetlenül attól, hogy a <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> támogatja-e."
  remarks: "Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával kell elindította egy helyi tranzakció."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Mindig vissza <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, függetlenül attól, hogy egy megnyitott vagy undisposed <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> támogatja-e, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha egy <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> van lezárták vagy eltávolították."
  overload: System.Data.OracleClient.OracleLob.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  id: ChunkSize
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "A lehető legkevesebb le, vagy olvasási/írási művelet során a kiszolgálóra küldött bájtok jelző érték beolvasása."
  remarks: "A adattömbméretet tulajdonsága által visszaadott érték nem a .NET Framework Data Provider – Oracle beállítását. Ehelyett az az érték, amely az Oracle Call Interface (OCI) használ, a kiszolgálóval való kommunikáció során. Ezzel biztosíthatja, hogy az ügyféloldali adattömbök azonos méretűnek adattömbméretet használja. Olvasása vagy írása a kisebb csoportjai nem gyorsítótárazza az adatokat, és hatására a kevésbé optimalizált oda-vissza a kiszolgálóra, mert a teljes csomag nem fogadott vagy elküldött."
  syntax:
    content: public int ChunkSize { get; }
    return:
      type: System.Int32
      description: "A minimális beolvasni vagy küldése bájtok száma."
  overload: System.Data.OracleClient.OracleLob.ChunkSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Létrehoz egy új <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum, amely hivatkozik a azonos Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> az eredeti <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum."
  remarks: "Az új tulajdonságok <xref:System.Data.OracleClient.OracleLob>objektum kezdetben értékük azzal megegyezik az eredeti objektum mint.</xref:System.Data.OracleClient.OracleLob> Azonban a Klónozás befejezése után, minden egyes <xref:System.Data.OracleClient.OracleLob>objektum nem függ a többi.</xref:System.Data.OracleClient.OracleLob> Például a értékének módosítása a <xref:System.Data.OracleClient.OracleLob.Position%2A>tulajdonságot az eredeti <xref:System.Data.OracleClient.OracleLob>nem változtatja meg az értékét <xref:System.Data.OracleClient.OracleLob.Position%2A>a példányon.</xref:System.Data.OracleClient.OracleLob.Position%2A> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Egy új <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum, amely hivatkozik a azonos Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> az eredeti <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum."
  overload: System.Data.OracleClient.OracleLob.Clone*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi a <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> példány által használt a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "A kapcsolatot egy adatforrással."
  overload: System.Data.OracleClient.OracleLob.Connection*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Másolja át a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> egy célra <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Az alapul szolgáló adattípusok mindig azonosnak kell lennie. Például, ha a forrás egy <xref:System.Data.OracleClient.OracleType>a cél <xref:System.Data.OracleClient.OracleLob> <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> is kell lennie</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Ha a célként megadott eltolás cél végén túl van-e `LOB`, a `LOB` való, amelyek a adatokat másolással ki van bővítve. Vége közötti távolságot a `LOB` és a célként megadott eltolás végének lesz kiegészítve, a program nullákat helyez `BLOB` adattípusokkal és -címterét `CLOB` és `NCLOB` adattípusokat.       Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.      > [!NOTE] > Ebben a kiadásban a csak olvasható írási művelet `LOB` előfordulhat, hogy sikeres legyen, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissülni fog. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>   >> A `CopyTo` metódus nem törli a tartalmát a cél `OracleLob` a másolási művelet végrehajtása előtt."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "A cél <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    return:
      type: System.Int64
      description: "Másolja a bájtok száma. Ez nem tartalmazza a bármely tömöttnek bájt."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> megadott a <code> destination </code> paraméterek egyike null értékű."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A művelet nem a tranzakción belül van. a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum értéke null, vagy a kapcsolat le van zárva."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Másolja át a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> egy célra <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> helyezze el a megadott adatokat."
  remarks: "Az alapul szolgáló adattípusok mindig azonosnak kell lennie. Például, ha a forrás egy <xref:System.Data.OracleClient.OracleType>a cél <xref:System.Data.OracleClient.OracleLob> <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> is kell lennie</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Ha a célként megadott eltolás cél végén túl van-e `LOB`, a `LOB` való, amelyek a adatokat másolással ki van bővítve. Vége közötti távolságot `LOB` és a célként megadott eltolás végének lesz kiegészítve, a program nullákat helyez `BLOB` adattípusokkal és -címterét `CLOB` és `NCLOB` adattípusokat.       Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.      > [!NOTE] > Ebben a kiadásban a csak olvasható írási művelet `LOB` sikeres lehet, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissül. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>   >> A `CopyTo` metódus nem törli a tartalmát a cél `OracleLob` a másolási művelet végrehajtása előtt."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "A cél<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    - id: destinationOffset
      type: System.Int64
      description: "Az eltolás, ahová másolni kívánja. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, ennek egy páros számú bájtot kell lennie."
    return:
      type: System.Int64
      description: "Másolja a bájtok száma. Ez nem tartalmazza a bármely tömöttnek bájt."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> megadott a <code> destination </code> paraméter megtelt."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egy megadott értéket a <code> destinationOffset </code> paraméter értéke kisebb nullánál vagy nagyobb, mint 4 GB.       – vagy – A megadott értéket a <code> destinationOffset </code> paraméter egy <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusa nem is.       – vagy – meg kell adnia <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, páros számú bájtot."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A művelet nem a tranzakción belül van. a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum értéke null, vagy a kapcsolat le van zárva."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Másolja át a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> egy célra <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> helyezze el a megadott adatokat, és a forrás eltolás."
  remarks: "Az alapul szolgáló adattípusok mindig azonosnak kell lennie. Például, ha a forrás egy <xref:System.Data.OracleClient.OracleType>a cél <xref:System.Data.OracleClient.OracleLob> <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> is kell lennie</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Ha a célként megadott eltolás cél végén túl van-e `LOB`, a `LOB` való, amelyek a adatokat másolással ki van bővítve. Vége közötti távolságot `LOB` és a célként megadott eltolás végének lesz kiegészítve, a program nullákat helyez `BLOB` adattípusokkal és -címterét `CLOB` és `NCLOB` adattípusokat.       Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.      > [!NOTE] > Ebben a kiadásban a csak olvasható írási művelet `LOB` sikeres lehet, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissül. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>   >> A `CopyTo` metódus nem törli a tartalmát a cél `OracleLob` a másolási művelet végrehajtása előtt."
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "Az eltolás, amelynek be kell másolni. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "The destination <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref><xref href=&quot;System.Data.OracleClient&quot;></xref>."
    - id: destinationOffset
      type: System.Int64
      description: "A célként megadott eltolás, amelyre szeretné másolni. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
    - id: amount
      type: System.Int64
      description: "Bájt, másolja az adatok mennyiségét. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
    return:
      type: System.Int64
      description: "Másolja a bájtok száma. Ez nem tartalmazza a bármely tömöttnek bájt."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> megadott a <code> destination </code> paraméter megtelt."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egy megadott értéket a <code> amount </code>, <code> sourceOffset </code>, vagy <code> destinationOffset </code> paraméter értéke kisebb nullánál vagy nagyobb, mint 4 GB.       -or-       A value specified in the <code>amount</code>, <code>sourceOffset</code>, or <code>destinationOffset</code> parameter for a <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;></xref> data type is not even."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A művelet nem a tranzakción belül van. a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum értéke null, vagy a kapcsolat le van zárva."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.OracleClient.OracleLob.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.EndBatch
  id: EndBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lehetővé teszi a kiszolgálóoldali eseményindítók indítási több írási műveletek elvégzése után folytatja."
  remarks: "A <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>metódus írási műveleteket végez a <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> megkezdése előtt</xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>"
  syntax:
    content: public void EndBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.EndBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase
  id: Erase
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ezzel minden adatot töröl <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "A törlés nem csonkítja adatok. A `LOB` hossza ugyanaz marad egy `BLOB` adattípus, és a törölt adatok 0x00 cseréli le. `CLOB`és `NCLOB` adattípusok helyébe a szóközöket.       Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.      > [!NOTE] > Ebben a kiadásban a csak olvasható írási művelet `LOB` sikeres lehet, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissül. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase ();
    parameters: []
    return:
      type: System.Int64
      description: "Törölni bájtok száma."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A művelet nem a tranzakción belül van. a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum értéke null, vagy a kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  id: Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Törli az adatokat a megadott mennyiségű <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Az értékek összegét a `offset` és `amount` paraméterek lehet nagyobb, mint a <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> mérete Ezért a nagyobb, mint által visszaadott érték megadása a <xref:System.Data.OracleClient.OracleLob.Length%2A>tulajdonság sikeres; azonban <xref:System.Data.OracleClient.OracleLob.Erase%2A>csak a <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> végére törlő</xref:System.Data.OracleClient.OracleLob.Erase%2A> </xref:System.Data.OracleClient.OracleLob.Length%2A> (Ehhez hasonlóan, ha negatív érték átadott `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A>sikeres legyen, de csak az elejétől kezdve törölheti a <xref:System.Data.OracleClient.OracleLob>.)</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> Ez a viselkedés eltér az a <xref:System.Data.OracleClient.OracleLob.Read%2A>és <xref:System.Data.OracleClient.OracleLob.Write%2A>módszerek és ajánlatok az előnye, hogy az érték adatok teljes törlésére tudni által megadott `offset` anélkül, hogy egy további oda a kiszolgálónak a tényleges méret ellenőrzése.</xref:System.Data.OracleClient.OracleLob.Write%2A> </xref:System.Data.OracleClient.OracleLob.Read%2A>       <xref:System.Data.OracleClient.OracleLob.Erase%2A>adatok csonkolása sikertelen.</xref:System.Data.OracleClient.OracleLob.Erase%2A> A `LOB` hossza ugyanaz marad egy `BLOB` adattípus, és a törölt adatok 0x00 cseréli le. `CLOB`és `NCLOB` adattípusok helyébe a szóközöket.       Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.      > [!NOTE] > Ebben a kiadásban a csak olvasható írási művelet `LOB` sikeres lehet, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissül. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase (long offset, long amount);
    parameters:
    - id: offset
      type: System.Int64
      description: "Az eltolás, amelyből törlésére. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
    - id: amount
      type: System.Int64
      description: "Bájtok törlése az adatok mennyiségét. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
    return:
      type: System.Int64
      description: "Törölni bájtok száma."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A művelet nem a tranzakción belül van. a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum értéke null, vagy a kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Jelenleg nem támogatott."
  remarks: "Ebben a kiadásban ez a módszer nem működőképességét."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsBatched
  id: IsBatched
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Egy érték, amely jelzi, hogy egy alkalmazás nevű lekérdezi a <xref:System.Data.OracleClient.OracleLob.BeginBatch*>metódus.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  remarks: 'Oracle 8.0.5 kiszolgáló, az Oracle használatakor &quot;ORA-00600: belső hibakód:&quot; kivétel történt.'
  syntax:
    content: public bool IsBatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az alkalmazást, a <xref:System.Data.OracleClient.OracleLob.BeginBatch*>metódus, egyébként pedig <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  overload: System.Data.OracleClient.OracleLob.IsBatched*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> van egy <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> adatfolyam."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  id: IsTemporary
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> van egy ideiglenes <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "A következő példa bemutatja, hogyan hozzon létre egy ideiglenes `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```"
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> van egy ideiglenes <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>, ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.IsTemporary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Length
  id: Length
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Egy érték, amely méretét adja vissza lekérdezi a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "A mérete a <xref:System.Data.OracleClient.OracleLob>mindig eredmény abban az esetben az összes adattípus bájt.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A mérete a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> bájtban."
  overload: System.Data.OracleClient.OracleLob.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.LobType
  id: LobType
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi egy érték, amely visszaadja az <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> adattípus."
  remarks: "Egy <xref:System.Data.OracleClient.OracleLob>a következők egyike lehet <xref:System.Data.OracleClient.OracleType>adattípusok.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob>      | OracleType adattípus |} Leírás |}   |--------------------------|-----------------|   | `Blob`| Az Oracle `BLOB` adattípus, amely a 4 GB maximális mérettel bináris adatokat tartalmaz. Ez egy <xref:System.Array> <xref:System.Byte>típusú van leképezve. |}   | `Clob`| Az Oracle `CLOB` adattípus, amely karakter adatokat tartalmaz, az alapértelmezett karakter alapján állítsa be a kiszolgálón, 4 GB maximális mérettel.</xref:System.Byte> </xref:System.Array> Ez <xref:System.String>van leképezve. |}   | `NClob`| Az Oracle `NCLOB` adattípus, amely tartalmaz karaktert adatok alapján a nemzeti karakterkészletet, 4 GB maximális mérettel a kiszolgálón.</xref:System.String> Ez hozzárendeli <xref:System.String>. |}</xref:System.String>"
  syntax:
    content: public System.Data.OracleClient.OracleType LobType { get; }
    return:
      type: System.Data.OracleClient.OracleType
      description: "Egy a <xref href=&quot;System.Data.OracleClient.OracleType&quot;> </xref> <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> adattípusokat."
  overload: System.Data.OracleClient.OracleLob.LobType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "A rendszer NULL értéket jelöli <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum."
  remarks: "Hogyan hozhat létre egy <xref:System.Data.OracleClient.OracleLob>, amely értéke NULL, ebben a formátumban: ```   OracleLob myLob = OracleLOB.Null;   ``` ezzel a technikával elsősorban tesztelésére szolgál e egy `LOB` a kiszolgáló által visszaadott értéke NULL, az ebben a példában látható módon: ```   If(myLob == OracleLob.Null)   ``` A NULL `LOB` hasonlóképpen viselkedését, hogy egy nulla bájtot `LOB` abban a <xref:System.Data.OracleClient.OracleLob.Read%2A>sikeres, és mindig nulla bájt.</xref:System.Data.OracleClient.OracleLob.Read%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public static readonly System.Data.OracleClient.OracleLob Null;
    return:
      type: System.Data.OracleClient.OracleLob
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Position
  id: Position
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lekérdezi az aktuális helyzete, olvassa el a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> adatfolyam."
  remarks: "Az adatfolyam támogatnia kell a vagy pozíciójának keresést. Használja a <xref:System.Data.OracleClient.OracleLob.CanSeek%2A>tulajdonság határozza meg, hogy az adatfolyam támogatja-e a keresést.</xref:System.Data.OracleClient.OracleLob.CanSeek%2A>       Az adatfolyam hossza túl bárhova keresést esetén támogatott. A páratlan helyzetbe keresést `CLOB` és `NCLOB` adattípusok is támogatott. További információkért lásd: a megjegyzések szakasza a <xref:System.Data.OracleClient.OracleLob.Read%2A>tulajdonság.</xref:System.Data.OracleClient.OracleLob.Read%2A>       A Position tulajdonság nem található követheti nyomon az adatfolyam, amely kellett volna használni, kihagyva, vagy mindkettőt bájtok száma."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Az aktuális pozíció belül a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> adatfolyam."
  overload: System.Data.OracleClient.OracleLob.Position*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Törlődik az aktuális bájt sorrendjét olvasó <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> adatfolyam és fejlesztéseivel a pozíció az adatfolyam bájtok száma belül olvasni."
  remarks: "A Read metódusból beolvassa legfeljebb `count` törlődik az aktuális bájt adatfolyamként, és eltárolja azokat `buffer` kezdődően `offset`. Az aktuális pozíció az adatfolyam belül a kiemelt; olvasott bájtok száma azonban ha kivétel történik, az aktuális pozíció az adatfolyam belül változatlan marad. Olvasási olvasott bájtok számát adja vissza. A visszatérési értéke nulla csak akkor, ha a pozíció az adatfolyam végén van. Olvasási letiltja az adatok legalább egy bájt beolvasásáig, abban az esetben, ha nem érhetők el adatok. Olvassa el a adja vissza 0, ha megpróbálja beolvasni a `LOB` végén az aktuális pozíció esetén `LOB`. Olvasási adhat vissza kevesebb, mint a kért bájtok, még akkor is, ha még nem érte el az adatfolyam végét.       A .NET Framework Data Provider – Oracle kezeli az összes `CLOB` és `NCLOB` adatok Unicode-ként. Ezért elérésekor `CLOB` és `NCLOB` adattípusok, hogy mindig foglalkoznak bájtban, ahol az egyes karakterek 2 bájt. Ha például három karaktert tartalmazó karakterlánc-es értékként menti egy `NCLOB` az Oracle-kiszolgáló, ahol az karakterkészlet 4 bájt / karakter, és elvégezheti a `Read` műveletet, akkor adja meg a karakterlánc hossza 6 bájtot, bár 12 bájt a kiszolgálón tárolt.       A következő C# példa bemutatja, hogyan olvashatja <xref:System.Data.OracleClient.OracleLob>objektumok.</xref:System.Data.OracleClient.OracleLob>      ```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  &quot;CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)&quot;;      //  &quot;INSERT INTO TableWithLobs values (1, &quot;AA&quot;, &quot;AAA&quot;, N&quot;AAAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)            Console.WriteLine(BLOB.LobType + &quot;.Read(&quot; + buffer + &quot;, &quot; + buffer.Length + &quot;) => &quot; + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)            Console.WriteLine(CLOB.LobType + &quot;.Read(&quot; + new string(cbuffer, 0, actual) + &quot;, &quot; + cbuffer.Length + &quot;) => &quot; + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + &quot;.Value => &quot; + NCLOB.Value);      }   }   ```Hogyan hozhat létre egy <xref:System.Data.OracleClient.OracleLob>, amely értéke NULL, ebben a formátumban: ```   OracleLob myLob = OracleLob.Null;   ``` ezzel a technikával elsősorban tesztelésére használható e egy `LOB` a kiszolgáló által visszaadott értéke NULL, az az alábbi példában látható módon.</xref:System.Data.OracleClient.OracleLob>      ```   If(myLob == OracleLob.Null)   ```A rendszer NULL `LOB` hasonlóképpen viselkedését, hogy egy nulla bájtot `LOB` olvasás sikeres, és mindig adja vissza nulla bájt."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bájttömb. Adja vissza ezt a módszert, ha a puffer tartalmaz-e a megadott bájttömb közötti értékekkel `offset` és (`offset` + `count`) az aktuális forrásból beolvasott bájtok cserélve."
    - id: offset
      type: System.Int32
      description: "A nulla alapú bájteltolás a `buffer` kezdőpontját az adatok tárolása olvasható be az aktuális adatfolyamból. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
    - id: count
      type: System.Int32
      description: "Az aktuális adatfolyamból olvasandó bájtok maximális száma. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
    return:
      type: System.Int32
      description: "A puffer az olvasott bájtok teljes száma. Erre akkor lehet kisebb, mint a bájtok száma irányuló kérés. Ha sok bájt még nem állnak rendelkezésre, vagy nulla (0), ha az adatfolyam végét elérte."
  overload: System.Data.OracleClient.OracleLob.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> buffer </code> null hivatkozás (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Visual Basic nyelvben)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egy értéket a <code> offset </code> vagy <code> count </code> paraméter nem pozitív.       – vagy – az eltolás és a számláló paraméterek összege nagyobb a puffer hosszánál.       – vagy – A megadott értéket a <code> amount </code> vagy <code> offset </code> paraméter értéke kisebb nullánál vagy nagyobb, mint 4 GB."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A művelet nem a tranzakción belül van. a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum értéke null, vagy a kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "A pozíció állítja be az aktuális <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> adatfolyam."
  remarks: "Ha `offset` értéke negatív, új pozícióját meg kell előznie a megadott pozíció `origin` által a bájtban megadott `offset`. Ha `offset` nulla, a helyre kell lennie a megadott pozíció `origin`. Ha `offset` pozitív, az új helyre hajtsa végre a megadott pozíció `origin` által a bájtban megadott `offset`.       Az adatfolyam hossza túl bárhova keresést esetén támogatott. A páratlan helyzetbe keresést `CLOB` és `NCLOB` adattípusok is támogatott. További információkért lásd: a megjegyzések szakasza a <xref:System.Data.OracleClient.OracleLob.Read%2A>tulajdonság.</xref:System.Data.OracleClient.OracleLob.Read%2A>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Eredeti mappától kiinduló relatív elérési bájteltolás. Ha `offset` értéke negatív, az új helyre megelőzi a megadott pozíció `origin` által a bájtban megadott `offset`. Ha `offset` nullát mutat, az új helyre a megadott pozíció `origin`. Ha `offset` pozitív, az új helyre a következő által megadott pozíciónál `origin` által a bájtban megadott `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Típusú érték <xref:System.IO.SeekOrigin>jelző a hivatkozási pont segítségével kéri le az új helyre.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Az új helyre, a jelenlegi adatfolyam belül."
  overload: System.Data.OracleClient.OracleLob.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> origin </code> paraméter nem tartalmaz érvényes értéket."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az eredményül kapott pozícióját az értéknek a hossza felül van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Beállítja a hosszát a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> kisebb, mint a jelenlegi adatfolyam."
  remarks: "Megnöveli az kísérlet a <xref:System.Data.OracleClient.OracleLob>adatfolyam meghiúsul, és visszaadja a &quot;üzenet: ORA-22926: vágás hossza aktuális LOB érték hossza meghaladja a megadott&quot; az Oracle-kiszolgálóról.</xref:System.Data.OracleClient.OracleLob>       Adatfolyam támogatnia kell mind írása, és függvény setlength elemet a keresést.       A .NET Framework Data Provider – Oracle kezeli az összes `CLOB` és `NCLOB` adatok Unicode-ként. Ezért elérésekor `CLOB` és `NCLOB` adattípusok, hogy mindig foglalkoznak bájtban, ahol az egyes karakterek 2 bájt. Ha például három karaktert tartalmazó karakterlánc-es értékként menti egy `NCLOB` az Oracle-kiszolgáló, ahol az karakterkészlet 4 bájt / karakter, és elvégezheti a `SetLength` műveletet, akkor adja meg a karakterlánc hossza 6 bájtot, bár 12 bájt a kiszolgálón tárolt.       Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.      > [!NOTE] > A írási műveletet egy csak olvasható `LOB` sikeres lehet, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissül. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Az aktuális kívánt hosszát <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> adatfolyam bájtban. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
  overload: System.Data.OracleClient.OracleLob.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egy megadott értéket a <code> value </code> paraméter egy <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusa nem is.       – vagy – A megadott értéket a <code> value </code> paraméter értéke kisebb nullánál vagy nagyobb, mint 4 GB."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A művelet nem a tranzakción belül van. a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum értéke null, vagy a kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Value
  id: Value
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "A közös nyelvi futtatókörnyezet adatfolyamának értéke egyenértékű az alapul szolgáló érték beolvasása."
  remarks: "A <xref:System.Data.OracleClient.OracleType>adattípusok, értéket adja vissza a teljes alapjául szolgáló adatok összefüggő tömb típusú `Byte[]`.</xref:System.Data.OracleClient.OracleType> A <xref:System.Data.OracleClient.OracleType>és <xref:System.Data.OracleClient.OracleType>adattípusok, értéket ad vissza, az adatok egy `String` adattípus.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleType> NULL értékű adatok értéket adja vissza <xref:System.DBNull>.</xref:System.DBNull> A visszaadott értékek összehasonlításával megkülönböztetéséhez üres adatok között NULL értékű, és adatok.      > [!NOTE] > Használatának előnye a `LOB` adattípusok a funkció nagy mennyiségű adattömbök az ügyfélen lévő adatok beolvasása. Azonban érték használata kaphat az összes adatot a `LOB` oszlop, mint egy egybefüggő adattömbök, ami jelentősen növelheti a alkalmazás terhelés."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, an array of type <xref uid=&quot;langword_csharp_Byte[]&quot; name=&quot;Byte[]&quot; href=&quot;&quot;></xref>. For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref> and <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. NULL értékű adatok <xref href=&quot;System.DBNull&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.Value*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Bájtok sorozatát ír az aktuális <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> adatfolyamként, és az aktuális pozíció az adatfolyam belül kiadásokban által írt bájtok száma."
  remarks: "Ha az írási művelet sikeres, a pozíció az adatfolyam belül kiadásokban, által írt bájtok száma. Ha kivétel történik, a pozíció az adatfolyam belül változatlan marad.       A végén túllépő írása `LOB` engedélyezett, és kinagyítja a `LOB` által írt bájtok száma.       A .NET Framework Data Provider – Oracle kezeli az összes `CLOB` és `NCLOB` adatok Unicode-ként. Ezért elérésekor `CLOB` és `NCLOB` adattípusok, hogy mindig foglalkoznak bájtban, ahol az egyes karakterek 2 bájt. Ha például három karaktert tartalmazó karakterlánc-es értékként menti egy `NCLOB` az Oracle-kiszolgáló, ahol az karakterkészlet 4 bájt / karakter, és elvégezheti a `Write` műveletet, akkor adja meg a karakterlánc hossza 6 bájtot, bár 12 bájt a kiszolgálón tárolt.       Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.       Az alábbi C# példa bemutatja, hogyan írhat <xref:System.Data.OracleClient.OracleLob>objektumok.</xref:System.Data.OracleClient.OracleLob>      ```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        &quot;CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)&quot;;      //        &quot;INSERT INTO tablewithlobs values (1, &quot;AA&quot;, &quot;AAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs FOR UPDATE&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + &quot;.Write(&quot; + buffer + &quot;, 0, 2) => &quot; + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + &quot;.CopyTo(&quot; + BLOB2.Value + &quot;) => &quot; + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```      > [!NOTE]> A írási műveletet egy csak olvasható `LOB` sikeres lehet, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissül. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bájttömb. Ez a módszer másolja át a bájtban megadott `count` a `buffer` a jelenlegi adatfolyam."
    - id: offset
      type: System.Int32
      description: "A nulla alapú bájteltolás a `buffer` kezdőpontját bájt másolása a jelenlegi adatfolyam. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
    - id: count
      type: System.Int32
      description: "A jelenlegi adatfolyam írandó bájtok száma. A <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, abban az esetben kell."
  overload: System.Data.OracleClient.OracleLob.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> buffer </code> paraméter értéke null hivatkozást (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Visual Basic nyelvben)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egy értéket a <code> offset </code> vagy <code> count </code> paraméter nem pozitív.       – vagy – a összege a <code> offset </code> és <code> count </code> paraméter értéke nagyobb, mint a <code> buffer </code> hossza.       – vagy – A megadott értéket a <code> count </code> vagy <code> offset </code> paraméter értéke kisebb nullánál vagy nagyobb, mint 4 GB.       – vagy – meg kell adnia <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> adattípusok, páros számú bájtot."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A művelet nem a tranzakción belül van. a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objektum értéke null, vagy a kapcsolat le van zárva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum lezárt vagy elvetése megtörtént."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Oracle hiba történt."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Egy olyan bájtot ír az aktuális pozíció az a <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> adatfolyamként, és a pozíció az adatfolyam belül kiadásokban egy bájt."
  remarks: "Ha az írási művelet sikeres, a pozíció az adatfolyam belül egy bájt kiadásokban. Ha kivétel történik, a pozíció az adatfolyam belül változatlan marad.       A végén túllépő írása a `LOB` engedélyezett, és kinagyítja a `LOB` egy bájt.       Írni a `LOB`, lekért rendelkeznie kell a `LOB` a SELECT utasítást, és a FOR UPDATE záradék használatával rendelkeznie kell egy helyi tranzakció lett elindítva.      > [!NOTE] > A írási műveletet egy csak olvasható `LOB` sikeres lehet, de nem frissíti a `LOB` a kiszolgálón. Ebben az esetben azonban a helyi példányát a `LOB` frissül. Ezért később elolvasandó műveletek a <xref:System.Data.OracleClient.OracleLob>objektum előfordulhat, hogy a visszatérési az írási művelet.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Az adatfolyam írni bájt."
  overload: System.Data.OracleClient.OracleLob.WriteByte*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
- uid: System.Data.OracleClient.OracleLobOpenMode
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLobOpenMode
  nameWithType: OracleLobOpenMode
  fullName: System.Data.OracleClient.OracleLobOpenMode
- uid: System.Data.OracleClient.OracleLob.CanRead
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleLob.CanSeek
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleLob.Clone
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleLob.Connection
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleLob.EndBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
- uid: System.Data.OracleClient.OracleLob.Erase
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Flush
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
- uid: System.Data.OracleClient.OracleLob.IsBatched
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
- uid: System.Data.OracleClient.OracleType
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleType
  nameWithType: OracleType
  fullName: System.Data.OracleClient.OracleType
- uid: System.Data.OracleClient.OracleLob.Null
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
- uid: System.Data.OracleClient.OracleLob.Position
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
- uid: System.Data.OracleClient.OracleLob.Value
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleLob.Append*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append
  nameWithType: OracleLob.Append
- uid: System.Data.OracleClient.OracleLob.BeginBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch
  nameWithType: OracleLob.BeginBatch
- uid: System.Data.OracleClient.OracleLob.CanRead*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
- uid: System.Data.OracleClient.OracleLob.CanSeek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
- uid: System.Data.OracleClient.OracleLob.Clone*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone
  nameWithType: OracleLob.Clone
- uid: System.Data.OracleClient.OracleLob.Connection*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
- uid: System.Data.OracleClient.OracleLob.CopyTo*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo
  nameWithType: OracleLob.CopyTo
- uid: System.Data.OracleClient.OracleLob.Dispose*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose
  nameWithType: OracleLob.Dispose
- uid: System.Data.OracleClient.OracleLob.EndBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch
  nameWithType: OracleLob.EndBatch
- uid: System.Data.OracleClient.OracleLob.Erase*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase
  nameWithType: OracleLob.Erase
- uid: System.Data.OracleClient.OracleLob.Flush*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush
  nameWithType: OracleLob.Flush
- uid: System.Data.OracleClient.OracleLob.IsBatched*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
- uid: System.Data.OracleClient.OracleLob.Position*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read
  nameWithType: OracleLob.Read
- uid: System.Data.OracleClient.OracleLob.Seek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek
  nameWithType: OracleLob.Seek
- uid: System.Data.OracleClient.OracleLob.SetLength*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength
  nameWithType: OracleLob.SetLength
- uid: System.Data.OracleClient.OracleLob.Value*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write
  nameWithType: OracleLob.Write
- uid: System.Data.OracleClient.OracleLob.WriteByte*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte
  nameWithType: OracleLob.WriteByte
