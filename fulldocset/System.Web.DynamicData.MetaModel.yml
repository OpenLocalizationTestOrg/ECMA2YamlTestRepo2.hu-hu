### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaModel
  id: MetaModel
  children:
  - System.Web.DynamicData.MetaModel.#ctor
  - System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  - System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  - System.Web.DynamicData.MetaModel.Default
  - System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  - System.Web.DynamicData.MetaModel.EntityTemplateFactory
  - System.Web.DynamicData.MetaModel.FieldTemplateFactory
  - System.Web.DynamicData.MetaModel.FilterFactory
  - System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  - System.Web.DynamicData.MetaModel.GetModel(System.Type)
  - System.Web.DynamicData.MetaModel.GetTable(System.String)
  - System.Web.DynamicData.MetaModel.GetTable(System.Type)
  - System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  - System.Web.DynamicData.MetaModel.ResetRegistrationException
  - System.Web.DynamicData.MetaModel.Tables
  - System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  - System.Web.DynamicData.MetaModel.VisibleTables
  langs:
  - csharp
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
  type: Class
  summary: "Egy vagy több ASP.NET rendszerbeli dinamikus adatok által használt adatbázisok jelöli."
  remarks: "A metamodellben típus lehetővé teszi dinamikus adatok webalkalmazás egy vagy több adatkörnyezetekben regisztrálni.       Egy adatkörnyezetet egy adatbázis-kapcsolatot képviselő objektum. Egy adatkörnyezetet hozzáfér egy-egy modell, amely egy adott kapcsolaton keresztül elérhető adatbázis jelöli. Adatmodell egy adatbázis entitások CLR típusú képviselő objektum. Dinamikus adatok támogatja a &quot;LINQ to SQL&quot; és az ADO.NET Entity Framework alapján adatmodellekben.       A [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], adatmodell típusok használatával hozhat létre a **&quot;LINQ to SQL osztályok&quot;** sablon vagy a **ADO.NET Entity Data Model** sablont. Ezeket a sablonokat az objektum relációs Designer (O/R-tervező) használata a &quot;LINQ to SQL modell&quot;, vagy az ADO.NET Entity adatok modellek Tervezőjében (entitás Designer) az Entity Framework modell."
  example:
  - "The following example shows how to use MetaModel type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:  \n  \n-   Get the data model for the default data context.  \n  \n-   Get the data model for a specified data context.  \n  \n-   Evaluate the routing path (determine the URL) for a specified table.  \n  \n The example consists of a page and its code-behind file.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_1.cs)]\n [!code-cs[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_1.aspx)]\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx#1)]\n [!code-vb[System.Web.DynamicData.MetaModel#1](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PlaceHolder.vb#1)]  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#2](~/add/codesnippet/csharp/t-system.web.dynamicdata_4_2.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#2](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#2)]  \n  \n To compile the example, you need the following:  \n  \n-   [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] or [!INCLUDE[vwd_exp_dev10_long](~/add/includes/vwd-exp-dev10-long-md.md)].  \n  \n-   A Dynamic Data Web site. For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](~/add/includes/ajax-current-ext-md.md).  \n  \n See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel)."
  syntax:
    content: public class MetaModel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: MetaModel()
  nameWithType: MetaModel.MetaModel()
  fullName: System.Web.DynamicData.MetaModel.MetaModel()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Egy új példányát példányosítja az <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> osztály."
  remarks: "Általában hívja a metamodellben konstruktort a `Application_Start` metódus a Global.asax fájl."
  example:
  - "The following example shows how to use the MetaModel constructor to perform the following tasks:  \n  \n-   Instantiate the <xref:System.Web.DynamicData.MetaModel> class.  \n  \n-   Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/global.asax.vb#99)]\n [!code-cs[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/csharp/m-system.web.dynamicdata_4_1.cs)]"
  syntax:
    content: public MetaModel ();
    parameters: []
  overload: System.Web.DynamicData.MetaModel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: MetaModel(Boolean)
  nameWithType: MetaModel.MetaModel(Boolean)
  fullName: System.Web.DynamicData.MetaModel.MetaModel(Boolean)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Egy új példányát példányosítja az <xref href=&quot;System.Web.DynamicData.MetaModel&quot;> </xref> osztály."
  remarks: "Ez a konstruktor határozza meg, hogy az adatokat az adatmodellbe regisztrálva van globálisan, hogy lekérhető használatával a <xref:System.Web.DynamicData.MetaModel.GetModel%2A>metódus.</xref:System.Web.DynamicData.MetaModel.GetModel%2A> Lehetővé teszi több modellek létrehozása és használata a azonos entitástípusok típus ütközések elkerülésével.       Általában hívja a metamodellben konstruktort a `Application_Start` metódus a Global.asax fájl."
  syntax:
    content: public MetaModel (bool registerGlobally);
    parameters:
    - id: registerGlobally
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>jelzi, hogy a modell regisztrálva van globálisan; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  id: CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: CreateTable(TableProvider)
  nameWithType: MetaModel.CreateTable(TableProvider)
  fullName: System.Web.DynamicData.MetaModel.CreateTable(TableProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Elindítja a <xref href=&quot;System.Web.DynamicData.MetaTable&quot;> </xref> objektum."
  remarks: "Egy származtatott típusú példányt létrehozni a CreateTable metódus felülbírálható lesz."
  syntax:
    content: protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);
    parameters:
    - id: provider
      type: System.Web.DynamicData.ModelProviders.TableProvider
      description: "A szolgáltató a következő táblázatban."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "A tábla egy új példányát."
  overload: System.Web.DynamicData.MetaModel.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.Default
  id: Default
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: Default
  nameWithType: MetaModel.Default
  fullName: System.Web.DynamicData.MetaModel.Default
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Lekérdezi az alkalmazás által létrehozott adatmodellt első példányát."
  remarks: "Ennek a tulajdonságnak az alapértelmezett adatmodell példány hivatkozni egyszerű módszert kínál. Ha az alkalmazás több modellt használ, meg kell adnia a saját való hivatkozást a további adatok modellek tárolását teszik lehetővé. Keresés egy adott adatmodell, hívja meg a <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName>metódus.</xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use the Default property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.  \n  \n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/csharp/p-system.web.dynamicdata_5_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#22)]"
  syntax:
    content: public static System.Web.DynamicData.MetaModel Default { get; }
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Az adatmodell példány."
  overload: System.Web.DynamicData.MetaModel.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  id: DynamicDataFolderVirtualPath
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
  fullName: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Lekérdezi vagy beállítja a DynamicData mappa a virtuális elérési út a webhely."
  remarks: "Ez a tulajdonság lehetővé teszi a virtuális elérési út a DynamicData mappa módosítása. Az alapértelmezett érték: &quot;~/DynamicData&quot;."
  syntax:
    content: public string DynamicDataFolderVirtualPath { get; set; }
    return:
      type: System.String
      description: "A virtuális a mappa elérési útja DynamicData."
  overload: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  id: EntityTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Web.DynamicData.EntityTemplateFactory&quot;> </xref> a modell társított objektumot."
  syntax:
    content: public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }
    return:
      type: System.Web.DynamicData.EntityTemplateFactory
      description: "Egy példányát a <xref href=&quot;System.Web.DynamicData.EntityTemplateFactory&quot;> </xref> a modell társított objektumot."
  overload: System.Web.DynamicData.MetaModel.EntityTemplateFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  id: FieldTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Lekérdezi vagy beállítja az egyéni <xref href=&quot;System.Web.DynamicData.IFieldTemplateFactory&quot;> </xref> felületet."
  remarks: "A <xref:System.Web.DynamicData.IFieldTemplateFactory>felület lehetővé teszi a adja meg, melyik mező sablonokat hoz létre a tábla oszlopait.</xref:System.Web.DynamicData.IFieldTemplateFactory>"
  syntax:
    content: public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }
    return:
      type: System.Web.DynamicData.IFieldTemplateFactory
      description: "A <xref href=&quot;System.Web.DynamicData.IFieldTemplateFactory&quot;> </xref> felületet."
  overload: System.Web.DynamicData.MetaModel.FieldTemplateFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.FilterFactory
  id: FilterFactory
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
  fullName: System.Web.DynamicData.MetaModel.FilterFactory
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> a modell társított objektumot."
  syntax:
    content: public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }
    return:
      type: System.Web.DynamicData.FilterFactory
      description: "Egy példányát a <xref href=&quot;System.Web.DynamicData.FilterFactory&quot;> </xref> a modell társított objektumot."
  overload: System.Web.DynamicData.MetaModel.FilterFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  id: GetActionPath(System.String,System.String,System.Object)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetActionPath(String,String,Object)
  nameWithType: MetaModel.GetActionPath(String,String,Object)
  fullName: System.Web.DynamicData.MetaModel.GetActionPath(String,String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "A művelet elérési útját, egy adott táblához társított adja vissza."
  remarks: "Az útvonal a tábla neve és a művelet kombinációja határozza meg.       [Futtatás](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) Ez a szolgáltatás online példát."
  example:
  - "The following example shows how to use the GetActionPath method to evaluate the routing path (determine the URL) for a specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel>.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#23](~/add/codesnippet/csharp/ccd53684-51b1-498b-9a9e-_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#23](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#23)]"
  syntax:
    content: public string GetActionPath (string tableName, string action, object row);
    parameters:
    - id: tableName
      type: System.String
      description: "A táblázat, amely a művelet érvényes neve."
    - id: action
      type: System.String
      description: "A művelet a táblázat kiválasztásához."
    - id: row
      type: System.Object
      description: "Egy tábla egy egyetlen adatsorba képviselő objektum. `row`lekérdezés-karakterlánc paraméterek értékének megadására szolgál."
    return:
      type: System.String
      description: "Az útvonal társított URL-címe."
  overload: System.Web.DynamicData.MetaModel.GetActionPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)
  id: GetModel(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetModel(Type)
  nameWithType: MetaModel.GetModel(Type)
  fullName: System.Web.DynamicData.MetaModel.GetModel(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Az adatmodell példány a megadott környezet adja vissza."
  remarks: ''
  example:
  - "The following example shows how to use the GetModel method to perform the following tasks:  \n  \n-   Getting the default data model.  \n  \n-   Getting the data model specified by the passed context type.  \n  \n For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/csharp/m-system.web.dynamicdata_1_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#22](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/PathModel.aspx.vb#22)]"
  syntax:
    content: public static System.Web.DynamicData.MetaModel GetModel (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "Az adatmodell a adatkörnyezet típusa."
    return:
      type: System.Web.DynamicData.MetaModel
      description: "Az adatmodell, amely kapcsolódik a megadott környezet típusát."
  overload: System.Web.DynamicData.MetaModel.GetModel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)
  id: GetTable(System.String)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(String)
  nameWithType: MetaModel.GetTable(String)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "A megadott tábla társított metaadatokat adja vissza."
  remarks: "A név egyedi tábla szerepel az adatmodellben és irányításához kapcsolódó URL-CÍMÉT használja."
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#42](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#42)]\n [!code-cs[System.Web.DynamicData.MetaModel#42](~/add/codesnippet/csharp/m-system.web.dynamicdata_2_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);
    parameters:
    - id: uniqueTableName
      type: System.String
      description: "A neve, amely azonosítja a tábla szerepel az adatmodellben."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "A metaadatokat, amelyek a megadott táblázat ismerteti."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A név nem található az adatmodellben."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)
  id: GetTable(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(Type)
  nameWithType: MetaModel.GetTable(Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Adja vissza a metaadatokat, amelyek a megadott táblázat ismerteti."
  remarks: ''
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#41](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#41)]\n [!code-cs[System.Web.DynamicData.MetaModel#41](~/add/codesnippet/csharp/m-system.web.dynamicdata_5_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (Type entityType);
    parameters:
    - id: entityType
      type: System.Type
      description: "A típus, amely azonosítja a tábla szerepel az adatmodellben."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "A metaadatokat, amelyek a megadott táblázat ismerteti."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A típus nem található az adatmodellben."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  id: GetTable(System.String,System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: GetTable(String,Type)
  nameWithType: MetaModel.GetTable(String,Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String,Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Adja vissza a metaadatokat, amelyek a megadott táblázat ismerteti."
  remarks: ''
  example:
  - "The following example shows how to use the GetTable method to obtain the metadata for the specified table. For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#43](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/gettable.aspx.vb#43)]\n [!code-cs[System.Web.DynamicData.MetaModel#43](~/add/codesnippet/csharp/m-system.web.dynamicdata_3_1.cs)]"
  syntax:
    content: public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);
    parameters:
    - id: tableName
      type: System.String
      description: "A tábla neve."
    - id: contextType
      type: System.Type
      description: "Keresse meg a tábla adatkörnyezetet."
    return:
      type: System.Web.DynamicData.MetaTable
      description: "A metaadatokat, amelyek a megadott táblázat ismerteti."
  overload: System.Web.DynamicData.MetaModel.GetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tablename</code>or <code>contextType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A környezet nincs regisztrálva, vagy a tábla nem létezik az adatkörnyezetben."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  id: RegisterContext(System.Func{System.Object})
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Func<Object>)
  nameWithType: MetaModel.RegisterContext(Func<Object>)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regisztrálja az adatkörnyezetben környezet gyár által megadott."
  remarks: "Ez a módszer az <xref:System.Web.DynamicData.ContextConfiguration>osztály</xref:System.Web.DynamicData.ContextConfiguration> által meghatározott alapértelmezett környezet információk Lehetővé teszi az adatkörnyezetben példányosítható saját konstruktor használatával."
  syntax:
    content: public void RegisterContext (Func<object> contextFactory);
    parameters:
    - id: contextFactory
      type: System.Func{System.Object}
      description: "Az adatkörnyezet példányának gyárat."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  id: RegisterContext(System.Type)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Type)
  nameWithType: MetaModel.RegisterContext(Type)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regisztrálja a adatkörnyezet példánya."
  remarks: "Ez a módszer az alapértelmezett környezetben információk <xref:System.Web.DynamicData.ContextConfiguration>osztály</xref:System.Web.DynamicData.ContextConfiguration> által meghatározott"
  syntax:
    content: public void RegisterContext (Type contextType);
    parameters:
    - id: contextType
      type: System.Type
      description: "Az adatmodell a adatkörnyezet típusa."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(DataModelProvider)
  nameWithType: MetaModel.RegisterContext(DataModelProvider)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regisztrálja a adatkörnyezet példányához adatmodell szolgáltató segítségével"
  syntax:
    content: public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);
    parameters:
    - id: dataModelProvider
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "Az adatmodell szolgáltatót."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Func<Object>,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regisztrálja egy adatkörnyezet példány a megadott környezetben konfigurációval, és engedélyezi egy egyéni konstruktort."
  remarks: "Az ezzel a módszerrel a környezet gyári lehetővé teszi egy adatkörnyezetet modell példányosítható egyéni konstruktor használatával."
  syntax:
    content: public void RegisterContext (Func<object> contextFactory, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: contextFactory
      type: System.Func{System.Object}
      description: "Ez a delegált az adatkörnyezetben modell példányosítható szolgál."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "A környezet adatainak határozzák meg a <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> osztály."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextFactory</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> contextType </code> , amely szerint példányként létrehozott <code> contextFactory </code> érvénytelen."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(Type,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Type,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regisztrálja a egy adatkörnyezet példány a megadott környezetben konfigurációval."
  remarks: ''
  example:
  - "The following example shows how to use the RegisterContext method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.  \n  \n [!code-vb[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/global.asax.vb#99)]\n [!code-cs[System.Web.DynamicData.MetaModel#99](~/add/codesnippet/csharp/d01c18e1-b759-4ac9-a729-_1.cs)]"
  syntax:
    content: public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: contextType
      type: System.Type
      description: "Az adatmodell a adatkörnyezet típusa."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "A környezet által meghatározott vonatkozó konfigurációs adatokat a <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> osztály."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contextType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  id: RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: RegisterContext(DataModelProvider,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Regisztrálja egy adatkörnyezet példány a megadott környezetben konfigurációval és adatmodell szolgáltató engedélyezése."
  syntax:
    content: public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);
    parameters:
    - id: dataModelProvider
      type: System.Web.DynamicData.ModelProviders.DataModelProvider
      description: "Az adatmodell szolgáltatót."
    - id: configuration
      type: System.Web.DynamicData.ContextConfiguration
      description: "A környezet adatainak határozzák meg a <xref href=&quot;System.Web.DynamicData.ContextConfiguration&quot;> </xref> osztály."
  overload: System.Web.DynamicData.MetaModel.RegisterContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dataModelProvider</code>or <code>configuration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>contextType</code>már regisztrálva van."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException
  id: ResetRegistrationException
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: ResetRegistrationException()
  nameWithType: MetaModel.ResetRegistrationException()
  fullName: System.Web.DynamicData.MetaModel.ResetRegistrationException()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Alaphelyzetbe állítja a korábbi környezeti regisztrációs hiba előfordulhat, hogy előfordult."
  remarks: "Hiba esetén adatkörnyezet regisztráció során, a kivétel a gyorsítótárazott és létre az összes későbbi műveleteit. Például ha hiba lép fel, az alkalmazás indítása, akkor hoz létre az minden kérelemnél. Törölje a hiba, és ahhoz, hogy egy új környezet regisztrálása végrehajtandó Ez a metódus meghívható."
  syntax:
    content: public static void ResetRegistrationException ();
    parameters: []
  overload: System.Web.DynamicData.MetaModel.ResetRegistrationException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.Tables
  id: Tables
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: Tables
  nameWithType: MetaModel.Tables
  fullName: System.Web.DynamicData.MetaModel.Tables
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Lekéri a táblák az adatmodellbe részét képező gyűjteménye."
  remarks: "A gyűjtemény tartalmazza az adatmodell, amely tartalmazza a táblákat, amelyek nem látható az összes tábla (részei dinamikus adatok állványok).       [Futtatás](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) Ez a szolgáltatás online példát."
  example:
  - "The following example shows how to use the Tables and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:  \n  \n-   Get a collection of all the tables in a data model and show them in a `GridView` control.  \n  \n-   Get a collection of the visible tables in a data model and show them in a `GridView` control.  \n  \n The example consists of a page and its code-behind file.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#5](~/add/codesnippet/csharp/p-system.web.dynamicdata_1_1.aspx)]\n [!code-vb[System.Web.DynamicData.MetaModel#5](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx#5)]  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#6](~/add/codesnippet/csharp/p-system.web.dynamicdata_1_2.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#6](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx.vb#6)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable> Tables { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}
      description: "A táblák az adatmodellbe tartozó tartalmazó gyűjtemény."
  overload: System.Web.DynamicData.MetaModel.Tables*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: TryGetTable(String,MetaTable)
  nameWithType: MetaModel.TryGetTable(String,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(String,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "A rendszer megpróbálja megszerezni a metaadatokat, a megadott tábla társított."
  remarks: "Ez a módszer lekéri a metaadatokat, amelyek a megadott tábla társított. Ha a tábla nem található, ez a metódus visszaadja `false`. Ez eltér a <xref:System.Web.DynamicData.MetaModel.GetTable%2A>metódus, amely kivételt jelez, ha a tábla nem található.</xref:System.Web.DynamicData.MetaModel.GetTable%2A>"
  syntax:
    content: public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: uniqueTableName
      type: System.String
      description: "A neve, amely egyedileg azonosítja a táblában."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Ha ez a módszer ad vissza, és a kért tábla talált, tartalmazza a tábla metaadatainak. Ez a paraméter lett átadva nem inicializált."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tábla metaadatainak található; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uniqueTableName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  id: TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaModel.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(Type,MetaTable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "A rendszer megpróbálja megszerezni a metaadatokat, a megadott tábla társított."
  remarks: "Ez a módszer lekéri a metaadatokat, amelyek a megadott tábla társított. Ha a tábla nem található, ez a metódus visszaadja `false`. Ez eltér a <xref:System.Web.DynamicData.MetaModel.GetTable%2A>metódus, amely kivételt jelez, ha a tábla nem található.</xref:System.Web.DynamicData.MetaModel.GetTable%2A>"
  syntax:
    content: public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);
    parameters:
    - id: entityType
      type: System.Type
      description: "A táblatípus."
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: "Ha ez a módszer ad vissza, és a kért tábla talált, tartalmazza a megadott tábla metaadatait. Ez a paraméter lett átadva nem inicializált."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tábla metaadatainak található; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.MetaModel.TryGetTable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entityType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.DynamicData.MetaModel.VisibleTables
  id: VisibleTables
  parent: System.Web.DynamicData.MetaModel
  langs:
  - csharp
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
  fullName: System.Web.DynamicData.MetaModel.VisibleTables
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Lekérdezi a látható táblában gyűjteményét az adatmodellben."
  remarks: ''
  example:
  - "The following example shows how to use the VisibleTables property to get a collection of the visible tables in the data model. For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.  \n  \n [!code-cs[System.Web.DynamicData.MetaModel#62](~/add/codesnippet/csharp/p-system.web.dynamicdata_0_1.cs)]\n [!code-vb[System.Web.DynamicData.MetaModel#62](~/add/codesnippet/visualbasic/System.Web.DynamicData.MetaModel.ClassLibrary1/TablesMenu.aspx.vb#62)]"
  syntax:
    content: public System.Collections.Generic.List<System.Web.DynamicData.MetaTable> VisibleTables { get; }
    return:
      type: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}
      description: "Látható tábla, amelyen engedélyezve van állványok táblára hivatkozik. Ez azt jelenti, hogy a tábla, amelynek létezik List.aspx lap."
  overload: System.Web.DynamicData.MetaModel.VisibleTables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DynamicData.MetaModel.#ctor
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel()
  nameWithType: MetaModel.MetaModel()
  fullName: System.Web.DynamicData.MetaModel.MetaModel()
- uid: System.Web.DynamicData.MetaModel.#ctor(System.Boolean)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel(Boolean)
  nameWithType: MetaModel.MetaModel(Boolean)
  fullName: System.Web.DynamicData.MetaModel.MetaModel(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: CreateTable(TableProvider)
  nameWithType: MetaModel.CreateTable(TableProvider)
  fullName: System.Web.DynamicData.MetaModel.CreateTable(TableProvider)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.ModelProviders.TableProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: TableProvider
  nameWithType: TableProvider
  fullName: System.Web.DynamicData.ModelProviders.TableProvider
- uid: System.Web.DynamicData.MetaModel.Default
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Default
  nameWithType: MetaModel.Default
  fullName: System.Web.DynamicData.MetaModel.Default
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
  fullName: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.EntityTemplateFactory
- uid: System.Web.DynamicData.EntityTemplateFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: EntityTemplateFactory
  fullName: System.Web.DynamicData.EntityTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
  fullName: System.Web.DynamicData.MetaModel.FieldTemplateFactory
- uid: System.Web.DynamicData.IFieldTemplateFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FilterFactory
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
  fullName: System.Web.DynamicData.MetaModel.FilterFactory
- uid: System.Web.DynamicData.FilterFactory
  parent: System.Web.DynamicData
  isExternal: false
  name: FilterFactory
  nameWithType: FilterFactory
  fullName: System.Web.DynamicData.FilterFactory
- uid: System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetActionPath(String,String,Object)
  nameWithType: MetaModel.GetActionPath(String,String,Object)
  fullName: System.Web.DynamicData.MetaModel.GetActionPath(String,String,Object)
- uid: System.Web.DynamicData.MetaModel.GetModel(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetModel(Type)
  nameWithType: MetaModel.GetModel(Type)
  fullName: System.Web.DynamicData.MetaModel.GetModel(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(String)
  nameWithType: MetaModel.GetTable(String)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String)
- uid: System.Web.DynamicData.MetaModel.GetTable(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(Type)
  nameWithType: MetaModel.GetTable(Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(Type)
- uid: System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable(String,Type)
  nameWithType: MetaModel.GetTable(String,Type)
  fullName: System.Web.DynamicData.MetaModel.GetTable(String,Type)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Func<Object>)
  nameWithType: MetaModel.RegisterContext(Func<Object>)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>)
- uid: System.Func{System.Object}
  parent: System
  isExternal: true
  name: Func<Object>
  nameWithType: Func<Object>
  fullName: System.Func<System.Object>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Type)
  nameWithType: MetaModel.RegisterContext(Type)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(DataModelProvider)
  nameWithType: MetaModel.RegisterContext(DataModelProvider)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider)
- uid: System.Web.DynamicData.ModelProviders.DataModelProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: DataModelProvider
  nameWithType: DataModelProvider
  fullName: System.Web.DynamicData.ModelProviders.DataModelProvider
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Func<Object>,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Func<Object>,ContextConfiguration)
- uid: System.Web.DynamicData.ContextConfiguration
  parent: System.Web.DynamicData
  isExternal: false
  name: ContextConfiguration
  nameWithType: ContextConfiguration
  fullName: System.Web.DynamicData.ContextConfiguration
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(Type,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(Type,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(Type,ContextConfiguration)
- uid: System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext(DataModelProvider,ContextConfiguration)
  nameWithType: MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
  fullName: System.Web.DynamicData.MetaModel.RegisterContext(DataModelProvider,ContextConfiguration)
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: ResetRegistrationException()
  nameWithType: MetaModel.ResetRegistrationException()
  fullName: System.Web.DynamicData.MetaModel.ResetRegistrationException()
- uid: System.Web.DynamicData.MetaModel.Tables
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Tables
  nameWithType: MetaModel.Tables
  fullName: System.Web.DynamicData.MetaModel.Tables
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.DynamicData.MetaTable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaTable>
  nameWithType: ReadOnlyCollection<MetaTable>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.DynamicData.MetaTable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Web.DynamicData.MetaTable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaTable
    name: MetaTable
    nameWithType: MetaTable
    fullName: MetaTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable(String,MetaTable)
  nameWithType: MetaModel.TryGetTable(String,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(String,MetaTable)
- uid: System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable(Type,MetaTable)
  nameWithType: MetaModel.TryGetTable(Type,MetaTable)
  fullName: System.Web.DynamicData.MetaModel.TryGetTable(Type,MetaTable)
- uid: System.Web.DynamicData.MetaModel.VisibleTables
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
  fullName: System.Web.DynamicData.MetaModel.VisibleTables
- uid: System.Collections.Generic.List{System.Web.DynamicData.MetaTable}
  parent: System.Collections.Generic
  isExternal: true
  name: List<MetaTable>
  nameWithType: List<MetaTable>
  fullName: System.Collections.Generic.List<System.Web.DynamicData.MetaTable>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Web.DynamicData.MetaTable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.DynamicData.MetaTable
    name: MetaTable
    nameWithType: MetaTable
    fullName: MetaTable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.DynamicData.MetaModel.#ctor*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel.MetaModel
- uid: System.Web.DynamicData.MetaModel.CreateTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: CreateTable
  nameWithType: MetaModel.CreateTable
- uid: System.Web.DynamicData.MetaModel.Default*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Default
  nameWithType: MetaModel.Default
- uid: System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: DynamicDataFolderVirtualPath
  nameWithType: MetaModel.DynamicDataFolderVirtualPath
- uid: System.Web.DynamicData.MetaModel.EntityTemplateFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: EntityTemplateFactory
  nameWithType: MetaModel.EntityTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FieldTemplateFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FieldTemplateFactory
  nameWithType: MetaModel.FieldTemplateFactory
- uid: System.Web.DynamicData.MetaModel.FilterFactory*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: FilterFactory
  nameWithType: MetaModel.FilterFactory
- uid: System.Web.DynamicData.MetaModel.GetActionPath*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetActionPath
  nameWithType: MetaModel.GetActionPath
- uid: System.Web.DynamicData.MetaModel.GetModel*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetModel
  nameWithType: MetaModel.GetModel
- uid: System.Web.DynamicData.MetaModel.GetTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: GetTable
  nameWithType: MetaModel.GetTable
- uid: System.Web.DynamicData.MetaModel.RegisterContext*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: RegisterContext
  nameWithType: MetaModel.RegisterContext
- uid: System.Web.DynamicData.MetaModel.ResetRegistrationException*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: ResetRegistrationException
  nameWithType: MetaModel.ResetRegistrationException
- uid: System.Web.DynamicData.MetaModel.Tables*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: Tables
  nameWithType: MetaModel.Tables
- uid: System.Web.DynamicData.MetaModel.TryGetTable*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: TryGetTable
  nameWithType: MetaModel.TryGetTable
- uid: System.Web.DynamicData.MetaModel.VisibleTables*
  parent: System.Web.DynamicData.MetaModel
  isExternal: false
  name: VisibleTables
  nameWithType: MetaModel.VisibleTables
