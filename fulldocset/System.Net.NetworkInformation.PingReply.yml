### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.PingReply
  id: PingReply
  children:
  - System.Net.NetworkInformation.PingReply.Address
  - System.Net.NetworkInformation.PingReply.Buffer
  - System.Net.NetworkInformation.PingReply.Options
  - System.Net.NetworkInformation.PingReply.RoundtripTime
  - System.Net.NetworkInformation.PingReply.Status
  langs:
  - csharp
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
  type: Class
  summary: "Információkat nyújt azokról az állapot- és származó adatok egy <> </> *> vagy <> </> *> műveletet."
  remarks: "A <xref:System.Net.NetworkInformation.Ping>osztály megkísérli az Internet Control Message Protocol (ICMP) echo kérés küldése egy távoli számítógépen, és ismét a számítógéphez egy ICMP echo reply üzenetek fogadnak azokról.</xref:System.Net.NetworkInformation.Ping> A <xref:System.Net.NetworkInformation.Ping>osztály PingReply osztály példányai használja a művelet, például annak állapotát és a kérelem küldésére és fogadására a válasz szükséges idő vonatkozó adatokat ad vissza.</xref:System.Net.NetworkInformation.Ping>       A <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek térjen vissza a PingReply osztály példányai közvetlenül.</xref:System.Net.NetworkInformation.Ping.Send%2A> A <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek, térjen vissza a egy PingReply a <xref:System.Net.NetworkInformation.PingCompletedEventHandler>metódus <xref:System.Net.NetworkInformation.PingCompletedEventArgs>paraméter.</xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> A PingReply keresztül érhető el a <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>tulajdonság.</xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>       Ha az értéke <xref:System.Net.NetworkInformation.PingReply.Status%2A>nem <xref:System.Net.NetworkInformation.IPStatus>, ne használjon által visszaadott értékek a <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A>vagy <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>Tulajdonságok.</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> A <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>tulajdonság visszaadható nulla, a <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>tulajdonság üres tömböt ad vissza, és a <xref:System.Net.NetworkInformation.PingReply.Options%2A>tulajdonság visszaadható `null`.</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_6_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_6_1.cpp)]"
  syntax:
    content: public class PingReply
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Address
  id: Address
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Lekérdezi a címét, amelyet az Internet Control Message Protocol (ICMP) echo választ küld."
  remarks: "A cím bármelyik adott vissza a <xref:System.Net.NetworkInformation.Ping.Send%2A>túlterhelések rosszindulatú távoli számítógépről is származik.</xref:System.Net.NetworkInformation.Ping.Send%2A> Ne csatlakoztassa a távoli számítógép, az ezt a címet. DNS segítségével határozhatja meg az IP-cím a gép, amelyhez kapcsolódni szeretne."
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the value of this property.  \n  \n [!code-cs[NclPingSampler#2](~/add/codesnippet/csharp/p-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NclPingSampler#2](~/add/codesnippet/cpp/p-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.IPAddress Address { get; }
    return:
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>tartalmazó az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
  overload: System.Net.NetworkInformation.PingReply.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Buffer
  id: Buffer
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A puffer az Internet Control Message Protocol (ICMP) echo Válaszüzenet érkezett adatok lekérése."
  remarks: "Puffer az ICMP echo kérés nem jut a feladó az echo válasz küld vissza, az ismert méretű csomagot utazás idejéről számítható ki. A puffer, kombinálva a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>lehetőségre, a maximális átviteli egység a forrás és cél számítógépek közötti hálózati útvonal felderítése használható.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> További információk: RFC 1574, szakaszban 3.2 http://www.ietf.org érhető el &quot;Traceroute&quot;.       Az alapértelmezett puffer <xref:System.Net.NetworkInformation.Ping.Send%2A>és <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>32 bájtnyi adatot tartalmaz.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_1_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_1_1.cpp)]"
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "A <xref:System.Byte>tömb, ha nem érkezik válasz érkezett, amely tartalmazza az ICMP echo reply üzenetekre, vagy egy üres tömb fogadott adatok.</xref:System.Byte>"
  overload: System.Net.NetworkInformation.PingReply.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Options
  id: Options
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Lekérdezi a válasz egy Internet Control Message Protocol (ICMP) echo kérés átviteléhez használt beállítások."
  remarks: "Az élettartam csomópontok továbbíthatja a csomagot, a forrás- és célkiszolgáló közötti adatcsere száma határozza meg. A továbbítást, útválasztók ugrásainak, más néven száma meghaladja a TTL-t a megadott, ha a csomagot akkor számít elértnek nem kézbesíthető, és elveti.       A <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>az ICMP echo kérés vezérlők csomag töredezettsége megadott értéket.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a csomag mérete meghaladja a maximális átviteli egység a csomag által a hálózati útvonalat, elveti a csomagot és a <xref:System.Net.NetworkInformation.IPStatus>hibát ad vissza.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.  \n  \n [!code-cs[NclPingSampler#3](~/add/codesnippet/csharp/p-system.net.networkinfo_3_1.cs)]\n [!code-cpp[NclPingSampler#3](~/add/codesnippet/cpp/p-system.net.networkinfo_3_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingOptions Options { get; }
    return:
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> objektum, amely tartalmazza az élettartam (TTL) és a töredezettséget irányelv átvitelére a válasz, ha a használt ideje <xref:System.Net.NetworkInformation.PingReply.Status*>van <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.NetworkInformation.PingReply.Status*>"
  overload: System.Net.NetworkInformation.PingReply.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  id: RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Lekérdezi a számot, egy Internet Control Message Protocol (ICMP) echo kérés küldése és fogadása az ICMP echo reply üzenet ezredmásodpercben."
  remarks: "Az Echo kérés nem teljesíthető, ha a RoundtripTime időt jelenti a 0 értéket, amely is egy érvényes értéket, ha a kérelem sikeres. Ellenőrizze a <xref:System.Net.NetworkInformation.PingReply.Status%2A>annak meghatározásához, hogy ez a tulajdonság által visszaadott érték figyelmen kívül hagyja.</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_4_1.cpp)]"
  syntax:
    content: public long RoundtripTime { get; }
    return:
      type: System.Int64
      description: "Egy <xref:System.Int64>, amely az oda-vissza idő ezredmásodpercben.</xref:System.Int64>"
  overload: System.Net.NetworkInformation.PingReply.RoundtripTime*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Status
  id: Status
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Az Internet Control Message Protocol (ICMP) echo kérés küldése és fogadása az ICMP echo reply üzenet kísérlet állapotát olvassa be."
  remarks: "Ha az állapot értéke nem <xref:System.Net.NetworkInformation.IPStatus>, ne használjon által visszaadott értékek a <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A>vagy <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>Tulajdonságok.</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> A <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>és <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>Tulajdonságok visszaállítja nullára, és a <xref:System.Net.NetworkInformation.PingReply.Options%2A>tulajdonság visszaadható `null`.</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/p-system.net.networkinfo_8_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/p-system.net.networkinfo_8_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.IPStatus Status { get; }
    return:
      type: System.Net.NetworkInformation.IPStatus
      description: "Egy <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> érték azt jelzi, a kérelem eredményét."
  overload: System.Net.NetworkInformation.PingReply.Status*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.PingReply.Address
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.PingReply.Buffer
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.PingReply.Options
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.NetworkInformation.PingReply.Status
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
- uid: System.Net.NetworkInformation.IPStatus
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPStatus
  nameWithType: IPStatus
  fullName: System.Net.NetworkInformation.IPStatus
- uid: System.Net.NetworkInformation.PingReply.Address*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
- uid: System.Net.NetworkInformation.PingReply.Buffer*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
- uid: System.Net.NetworkInformation.PingReply.Options*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
- uid: System.Net.NetworkInformation.PingReply.Status*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
