### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.BrowserInteropHelper
  id: BrowserInteropHelper
  children:
  - System.Windows.Interop.BrowserInteropHelper.ClientSite
  - System.Windows.Interop.BrowserInteropHelper.HostScript
  - System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  - System.Windows.Interop.BrowserInteropHelper.Source
  langs:
  - csharp
  name: BrowserInteropHelper
  nameWithType: BrowserInteropHelper
  fullName: System.Windows.Interop.BrowserInteropHelper
  type: Class
  summary: "Egy segítőosztály, amely tájékoztatást ad azokról a böngésző környezet, amelyben egy [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] az alkalmazás."
  syntax:
    content: public static class BrowserInteropHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  id: ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Visszaad egy hivatkozást a fogadó böngészőben keresztül az OLE tárolóban adapterek (például IOleClientSite::GetContainer();) elérésére használt objektum."
  syntax:
    content: public static object ClientSite { get; }
    return:
      type: System.Object
      description: "Olyan objektum, amely <xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>.</xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite> konvertálható"
  overload: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  id: HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Lekérdezi a parancsfájl objektum, amely hozzáférést biztosít a HTML ablak objektum, egyéni parancsfájl-szolgáltatások, és globális változókat a HTML-lap, ha a [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] keret található."
  remarks: "A visszaadott HostScript objektummal tulajdonságait, módszerek és a HTML-ablak objektum események-hozzáférést, a parancsfájl függvény hívása közvetlenül vagy hozzáférni egy globális változó. Ezek az elemek eléréséhez a szintaxist használja a megszokott felépítését.       A window objektum kapcsolatos további információkért lásd: [ablak objektum](http://go.microsoft.com/fwlink/?LinkId=160274) a dinamikus HTML-t dokumentációjában.       A HostScript tulajdonság beolvasása `null` Ha a keret valójában a tartományok közötti helyről.       Ez a funkció is ki kell kapcsolni az Internet Explorer úgy, hogy a **ScriptInteropDisallow** beállításazonosítót. További információkért lásd: [biztonsági (WPF)](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to retrieve the HostScript object and close the browser window.  \n  \n [!code-xml[XbapBrowserInterop#1](~/add/codesnippet/xaml/wpfbrowserapplication1/page1.xaml#1)]  \n[!code-cs[XbapBrowserInterop#10](~/add/codesnippet/csharp/wpfbrowserapplication1/page1.xaml.cs#10)]\n[!code-vb[XbapBrowserInterop#10](~/add/codesnippet/visualbasic/wpfbrowserapplication1vb/page1.xaml.vb#10)]"
  syntax:
    content: public static dynamic HostScript { get; }
    return:
      type: System.Object
      description: "A parancsfájl-objektum, amely hozzáférést biztosít a HTML ablak objektum, egyéni parancsfájl-szolgáltatások, és globális változókat a HTML-weblap, ha a [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] üzemeltetett keret; egyéb, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.HostScript*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  id: IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Lekérdezi egy érték, amely megadja, hogy az aktuális [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] alkalmazás böngészőben futtatott."
  remarks: "A <xref:System.Windows.Controls.Page>lehet állomás független, és ezért betölthető gazdagépek, köztük a különféle típusú egy <xref:System.Windows.Controls.Frame>, egy <xref:System.Windows.Navigation.NavigationWindow>, vagy a böngésző.</xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Page> Ez akkor fordulhat elő, ha a szalagtár szerelvény, amely egy vagy több lapot tartalmaz, és amely több különálló által hivatkozott és tallózható ([!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]) alkalmazásokat."
  example:
  - "The following example demonstrates how to use IsBrowserHosted to determine if a <xref:System.Windows.Controls.Page> is hosted in a browser.  \n  \n [!code-cs[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/csharp/BrowserInteropHelperSnippet/Page1.xaml.cs#isbrowserhostedcode)]\n [!code-vb[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/visualbasic/browserinterophelpersnippet/page1.xaml.vb#isbrowserhostedcode)]"
  syntax:
    content: public static bool IsBrowserHosted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az alkalmazás böngészőben futtatott; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  id: Source
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Lekérdezi a [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] a helyhez, ahol egy [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] alkalmazás elindult."
  remarks: "A Source tulajdonság csak tartalmaz egy <xref:System.Uri>a [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] alkalmazások.</xref:System.Uri> A Source tulajdonság példát talál <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>.</xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>"
  syntax:
    content: public static Uri Source { get; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>a helyhez, ahol egy [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] alkalmazás mellett tette elindított; ellenkező esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Windows.Interop.BrowserInteropHelper.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
- uid: System.Windows.Interop.BrowserInteropHelper.Source*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
