### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerRequest
  id: HttpListenerRequest
  children:
  - System.Net.HttpListenerRequest.AcceptTypes
  - System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  - System.Net.HttpListenerRequest.ClientCertificateError
  - System.Net.HttpListenerRequest.ContentEncoding
  - System.Net.HttpListenerRequest.ContentLength64
  - System.Net.HttpListenerRequest.ContentType
  - System.Net.HttpListenerRequest.Cookies
  - System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  - System.Net.HttpListenerRequest.GetClientCertificate
  - System.Net.HttpListenerRequest.GetClientCertificateAsync
  - System.Net.HttpListenerRequest.HasEntityBody
  - System.Net.HttpListenerRequest.Headers
  - System.Net.HttpListenerRequest.HttpMethod
  - System.Net.HttpListenerRequest.InputStream
  - System.Net.HttpListenerRequest.IsAuthenticated
  - System.Net.HttpListenerRequest.IsLocal
  - System.Net.HttpListenerRequest.IsSecureConnection
  - System.Net.HttpListenerRequest.IsWebSocketRequest
  - System.Net.HttpListenerRequest.KeepAlive
  - System.Net.HttpListenerRequest.LocalEndPoint
  - System.Net.HttpListenerRequest.ProtocolVersion
  - System.Net.HttpListenerRequest.QueryString
  - System.Net.HttpListenerRequest.RawUrl
  - System.Net.HttpListenerRequest.RemoteEndPoint
  - System.Net.HttpListenerRequest.RequestTraceIdentifier
  - System.Net.HttpListenerRequest.ServiceName
  - System.Net.HttpListenerRequest.TransportContext
  - System.Net.HttpListenerRequest.Url
  - System.Net.HttpListenerRequest.UrlReferrer
  - System.Net.HttpListenerRequest.UserAgent
  - System.Net.HttpListenerRequest.UserHostAddress
  - System.Net.HttpListenerRequest.UserHostName
  - System.Net.HttpListenerRequest.UserLanguages
  langs:
  - csharp
  name: HttpListenerRequest
  nameWithType: HttpListenerRequest
  fullName: System.Net.HttpListenerRequest
  type: Class
  summary: "Bejövő HTTP-kérelem ismerteti egy <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektum. Ez az osztály nem örökölhető."
  remarks: "Amikor egy ügyfél kérelmet küld a egy egységes erőforrás-azonosító (URI) által kezelt egy <xref:System.Net.HttpListener>objektum, a <xref:System.Net.HttpListener>biztosít egy <xref:System.Net.HttpListenerContext>objektum, amely tartalmazza a feladó, a kérelem és a válasz az ügyfélnek küldött adatait.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> </xref:System.Net.HttpListener> A <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>tulajdonság, amely leírja a kérelem HttpListenerRequest objektumot adja vissza.</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>       A HttpListenerRequest objektum tartalmaz információkat, például a kérelem a kérelem <xref:System.Net.HttpListenerRequest.HttpMethod%2A>karakterlánc <xref:System.Net.HttpListenerRequest.UserAgent%2A>karakterlánc, és a szervezet adatokat kér (lásd a <xref:System.Net.HttpListenerRequest.InputStream%2A>tulajdonság).</xref:System.Net.HttpListenerRequest.InputStream%2A> </xref:System.Net.HttpListenerRequest.UserAgent%2A> </xref:System.Net.HttpListenerRequest.HttpMethod%2A>       Ugyanarra a forráscímre válaszol a kérelemre, ha előbb telepítik azokra a társított válasz használatával a <xref:System.Net.HttpListenerContext.Response%2A>tulajdonság.</xref:System.Net.HttpListenerContext.Response%2A>"
  example:
  - "The following code example demonstrates how to receive and respond to a HttpListenerRequest.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public sealed class HttpListenerRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.AcceptTypes
  id: AcceptTypes
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
  fullName: System.Net.HttpListenerRequest.AcceptTypes
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Az ügyfél elfogadta a MIME-típusok beolvasása."
  remarks: "A `Accept` fejléc: a Multipurpose Internet Mail Extensions (MIME) típusnevek szóközökkel elválasztott karakterlánc (például `image/jpeg`), amely jelzi, hogy a MIME-típusok, az ügyfél nem fogadja el, és a válasz feldolgozása el. A `*/*` a bejegyzés azt jelzi, hogy az ügyfél elfogadja a MIME-típus. Részletes leírása a `Accept` fejléc, lásd: RFC 2616, rendelkezésre álló [http://www.rfc-editor.org](http://www.rfc-editor.org/).       Kérelemfejléc teljes listáját lásd: a <xref:System.Net.HttpRequestHeader>számbavételi.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_37_1.cs)]"
  syntax:
    content: public string[] AcceptTypes { get; }
    return:
      type: System.String[]
      description: "A <xref:System.String>tömb, amely tartalmazza a kérelemben megadott típusnevek <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;> </xref> fejléc vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha az ügyfélkérés nem foglal egy <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;> </xref> fejléc.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.AcceptTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  id: BeginGetClientCertificate(System.AsyncCallback,System.Object)
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: BeginGetClientCertificate(AsyncCallback,Object)
  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  fullName: System.Net.HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Az ügyfél X.509 v.3 tanúsítvány hibaválasz kezdődik."
  syntax:
    content: public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);
    parameters:
    - id: requestCallback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>delegált esetén, amely a művelet befejezésekor a meghívni kívánt metódus hivatkozik.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "A felhasználói objektum, amely tartalmazza a műveletekre vonatkozó információk. Ez az objektum a visszahívási delegált kerülnek, a művelet befejeződése után."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>azt jelzi, hogy a művelet állapotát.</xref:System.IAsyncResult>"
  overload: System.Net.HttpListenerRequest.BeginGetClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ClientCertificateError
  id: ClientCertificateError
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
  fullName: System.Net.HttpListenerRequest.ClientCertificateError
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi egy hibakódot, amely azonosítja a probléma a <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> az ügyfél biztosítja."
  remarks: "Ez a tulajdonság által a biztonságos csatorna (Schannel) biztonsági támogatás felületén (SSPI), a tanúsítvány érvényesítéséhez használt Windows hibakód tartalmazza. Schannel SSPI-támogatással kapcsolatos további információkért lásd: &quot;Létrehozása a biztonságos kapcsolat használatával Schannel&quot; a biztonsági dokumentációját a [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  example:
  - "The following code example checks this property to determine whether the request includes a valid client certificate.  \n  \n [!code-vb[NCLListener#3](~/add/codesnippet/visualbasic/p-system.net.httplistene_33_1.vb)]\n [!code-cs[NCLListener#3](~/add/codesnippet/csharp/p-system.net.httplistene_33_1.cs)]"
  syntax:
    content: public int ClientCertificateError { get; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely tartalmazza a Windows hibakódot.</xref:System.Int32>"
  overload: System.Net.HttpListenerRequest.ClientCertificateError*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Az ügyféltanúsítvány még nincs inicializálva hívásával a <> </> *> vagy <> </> *> módszerek – vagy – a művelet még folyamatban van."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
  fullName: System.Net.HttpListenerRequest.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "A tartalom kódolását, amely használható a kért küldött adatok beolvasása"
  remarks: "Egy <xref:System.Text.Encoding>objektum bájt sorozatok alakítani karakterkészlet (kódlapok) és bájt sorozatok karakter használható.</xref:System.Text.Encoding> Ez a tulajdonság a charset értékét használja a `Content-Type` fejléc meghatározásához a kódolást. Ez az információ nem érhető el, ha a tulajdonság adja vissza <xref:System.Text.Encoding.Default%2A?displayProperty=fullName>.</xref:System.Text.Encoding.Default%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates using the ContentEncoding property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_40_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; }
    return:
      type: System.Text.Encoding
      description: "Egy <xref:System.Text.Encoding>objektum alkalmas az adatokat a <xref:System.Net.HttpListenerRequest.InputStream*>tulajdonság.</xref:System.Net.HttpListenerRequest.InputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerRequest.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
  fullName: System.Net.HttpListenerRequest.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a szerepel a kérelem törzsében adatok hossza."
  remarks: "A `Content-Length` fejléc kifejezze kísérik a kérelem törzsében adatok hosszát (bájt).       Kérelemfejléc teljes listáját lásd: a <xref:System.Net.HttpRequestHeader>számbavételi.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example uses the ContentLength64 property while processing body data.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; }
    return:
      type: System.Int64
      description: "A kért érték <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;> </xref> fejléc. Ez az érték-1 érték esetén a tartalom hossza nem ismert."
  overload: System.Net.HttpListenerRequest.ContentLength64*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentType
  id: ContentType
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
  fullName: System.Net.HttpListenerRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "A MIME-típus szerepel a kérelem törzsében adatok lekérése."
  remarks: "Ha egy ügyfél a kérelem törzsében adatokat tartalmaz, a szervezet adatokat a Multipurpose Internet Mail Extensions (MIME) típusú deklarál a `Content-Type` fejléc. Például az adatok az alapértelmezett MIME-típust adott vissza egy webes űrlap használata a `POST` módszer `application/x-www-form-urlencoded`.       Kérelemfejléc teljes listáját lásd: a <xref:System.Net.HttpRequestHeader>számbavételi és RFC 2616, rendelkezésre álló [http://www.rfc-editor.org](http://www.rfc-editor.org/).</xref:System.Net.HttpRequestHeader>       A ContentType érték null, ha nincs `Content-Type` a kérelem fejlécében."
  example:
  - "The following code example demonstrates how to use this property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_12_1.cs)]"
  syntax:
    content: public string ContentType { get; }
    return:
      type: System.String
      description: "A <xref:System.String>, amely tartalmazza a szöveget a kérelem <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;> </xref> fejléc.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Cookies
  id: Cookies
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
  fullName: System.Net.HttpListenerRequest.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a cookie-k küldi el a kérelmet."
  remarks: "A cookie-k az név-érték szöveg adatai a helyi (ügyfél) számítógépen tárolt webkiszolgálóról."
  example:
  - "The following code example displays the values of cookies sent with the request.  \n  \n [!code-cs[Net_Listener_Basic#18](~/add/codesnippet/csharp/p-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; }
    return:
      type: System.Net.CookieCollection
      description: "A <xref:System.Net.CookieCollection>, amely tartalmazza a cookie-k, amelyeket a kérelemhez.</xref:System.Net.CookieCollection> Ez a tulajdonság adja vissza egy üres gyűjteményt, ha a kérelem nem tartalmazza a cookie-kat."
  overload: System.Net.HttpListenerRequest.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  id: EndGetClientCertificate(System.IAsyncResult)
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: EndGetClientCertificate(IAsyncResult)
  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  fullName: System.Net.HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Az ügyfél X.509 v.3 tanúsítvány hibaválasz ér véget."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A tanúsítvány a függőben lévő kérelem."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "A <xref:System.IAsyncResult>a művelet elindításakor visszaadott objektum.</xref:System.IAsyncResult>"
  overload: System.Net.HttpListenerRequest.EndGetClientCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nem sikerült beolvasni a meghívásával<xref:System.Net.HttpListenerRequest.BeginGetClientCertificate*><code>e.</code>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ez a metódus már meg lett hívva a művelet által azonosított <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.GetClientCertificate
  id: GetClientCertificate
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: GetClientCertificate()
  nameWithType: HttpListenerRequest.GetClientCertificate()
  fullName: System.Net.HttpListenerRequest.GetClientCertificate()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Beolvassa az ügyfél X.509 v.3 tanúsítványt."
  remarks: "Ez a módszer tiltása, amíg a tanúsítvány lekérése sikertelen."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates&quot;> </xref> objektum, amely tartalmazza az ügyfél X.509 v.3 tanúsítvány."
  overload: System.Net.HttpListenerRequest.GetClientCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ez a metódus hívása az ügyfél X.509 v.3 tanúsítvány folyamatban van, és ezért ez a metódus másik hívása nem végezhető el."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync
  id: GetClientCertificateAsync
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: GetClientCertificateAsync()
  nameWithType: HttpListenerRequest.GetClientCertificateAsync()
  fullName: System.Net.HttpListenerRequest.GetClientCertificateAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Beolvassa az ügyfél X.509 v.3 tanúsítványt, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, a tanúsítvány beolvasásakor.</xref:System.Threading.Tasks.Task%601>       Ha az ügyfél X.509 v.3 tanúsítvány Ez a metódus hívása folyamatban van, majd a metódus másik hívása nem végezhető el."
  syntax:
    content: public System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2> GetClientCertificateAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum. A &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; feladat objektum tulajdonságának adja vissza egy <xref href=&quot;System.Security.Cryptography.X509Certificates&quot;> </xref> objektum, amely tartalmazza az ügyfél X.509 v.3 tanúsítvány."
  overload: System.Net.HttpListenerRequest.GetClientCertificateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.HasEntityBody
  id: HasEntityBody
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
  fullName: System.Net.HttpListenerRequest.HasEntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy a kérelem törzsében adatok vannak társítva.</xref:System.Boolean>"
  remarks: "A kérelmeket, amelyek adatokat küldi el a kiszolgálóra történő a `POST` metódusnak, például rendelkeznie kell egy törzsét."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public bool HasEntityBody { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kérelem törzsében adatok; vannak társítva. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.HasEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Headers
  id: Headers
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerRequest.Headers
  fullName: System.Net.HttpListenerRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a kérelemben küldött fejléc név/érték párok gyűjteménye."
  remarks: "Kérelemfejléc metaadat-információit tartalmazza. Például fejlécek tartalmazhat említett az ügyfél a kiszolgáló erőforrás egységes erőforrás azonosítója (URI), az ügyfél és a elfogadható MIME alkalmazott a felhasználói ügynök identitását a választörzs adatainak típusa.       Kérelemfejléc teljes listáját lásd: a <xref:System.Net.HttpRequestHeader>számbavételi.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.  \n  \n [!code-cs[Net_Listener_Basic#21](~/add/codesnippet/csharp/p-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref:System.Net.WebHeaderCollection>, amely tartalmazza a HTTP-fejléceket, a kérelemben szereplő.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.HttpMethod
  id: HttpMethod
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
  fullName: System.Net.HttpListenerRequest.HttpMethod
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi az ügyfél által megadott HTTP-metódust."
  remarks: "A HTTP-metódus általában GET vagy POST, attól függően, hogy a művelet az ügyfél szükséges."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_10_1.cs)]"
  syntax:
    content: public string HttpMethod { get; }
    return:
      type: System.String
      description: "A <xref:System.String>, amely tartalmazza a kérésben használt módszert.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.HttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.InputStream
  id: InputStream
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
  fullName: System.Net.HttpListenerRequest.InputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a szervezet adatokat, az ügyfél által küldött tartalmazó adatfolyam."
  remarks: "Ha az ügyfél adott ideig adatokat küld (például az a HTTP-n keresztül `POST` metódus), a Ez a metódus által visszaadott adatfolyam tartalmaz adatokat.      > [!NOTE] > Bezárása a kérelem nem zárja be az e tulajdonság által visszaadott adatfolyam. Ha már nincs szüksége a stream, zárja be meghívásával a <xref:System.IO.Stream.Close%2A>metódus.</xref:System.IO.Stream.Close%2A>"
  example:
  - "The following code example demonstrates using this property to read the data sent with a request.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_27_1.cs)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "Egy olvasható <xref:System.IO.Stream>objektum, amely tartalmazza a kérés törzsében. az ügyfél által küldött bájtok mennyiségét.</xref:System.IO.Stream> Ez a tulajdonság adja vissza <xref:System.IO.Stream>Ha adatküldést mellékel a kérelemhez.</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerRequest.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
  fullName: System.Net.HttpListenerRequest.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy az ügyfél a kérelem hitelesítése.</xref:System.Boolean>"
  remarks: "Az alkalmazás kéri, ügyfél-hitelesítés használata a <xref:System.Net.HttpListener.AuthenticationSchemes%2A>vagy <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>tulajdonság.</xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> </xref:System.Net.HttpListener.AuthenticationSchemes%2A>       Az alkalmazás nem kap egy <xref:System.Net.HttpListenerContext>a sikeresen hitelesített nem ügyfelektől érkező kéréseket.</xref:System.Net.HttpListenerContext>"
  example:
  - "The following code example displays the value of the IsAuthenticated property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_1_1.cs)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az ügyfél hitelesítési; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsLocal
  id: IsLocal
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
  fullName: System.Net.HttpListenerRequest.IsLocal
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy a kérelmet küld-e a helyi számítógépről.</xref:System.Boolean>"
  remarks: "Alkalmazások használhatják ezt a tulajdonságot a speciális feldolgozást, amikor kéréseket a helyi számítógépről."
  example:
  - "The following code example demonstrates using the IsLocal property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_28_1.cs)]"
  syntax:
    content: public bool IsLocal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kérelem származási ugyanazon a számítógépen a <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektum, amely a megadott a kérelem; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsSecureConnection
  id: IsSecureConnection
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
  fullName: System.Net.HttpListenerRequest.IsSecureConnection
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy a kérelem küldéséhez használt TCP-kapcsolatot a Secure Sockets Layer (SSL) protokollt használja.</xref:System.Boolean>"
  remarks: "Biztonságos kapcsolatot kér, hogy az ügyfél kérésében <xref:System.Uri.UriSchemeHttps> <xref:System.Uri.UriSchemeHttp>.</xref:System.Uri.UriSchemeHttp> helyett</xref:System.Uri.UriSchemeHttps> használja Ha a kapcsolat nem hozható létre, hogy SSL-t használ, az ügyfél megkapja egy <xref:System.Net.WebException>a hibával kapcsolatos információkat biztosít.</xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates using the IsSecureConnection property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public bool IsSecureConnection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a TCP-kapcsolatot használ SSL; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsSecureConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
  fullName: System.Net.HttpListenerRequest.IsWebSocketRequest
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy a TCP-kapcsolat volt-e a WebSocket-kérelemmé.</xref:System.Boolean>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>.</xref:System.Boolean> Beolvasása       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a TCP-kapcsolatot a WebSocket-kérelem; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
  fullName: System.Net.HttpListenerRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy az ügyfélszámítógép állandó kapcsolatot.</xref:System.Boolean>"
  remarks: "Ha egy HTTP-ügyfél és kiszolgáló várt adatcserében többször, rövid időn, állandó kapcsolatot felgyorsítja a kommunikáció lehetővé teheti a járó többletterhelés megnyitására és bezárására mindegyik TCP-kapcsolat elkerülése érdekében. A HTTP/1.1 használó ügyfelei számára, ez a tulajdonság alapértelmezett értéke van `true`."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_5_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kapcsolat nyitott; kell tárolni Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.KeepAlive*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.LocalEndPoint
  id: LocalEndPoint
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
  fullName: System.Net.HttpListenerRequest.LocalEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "A kiszolgáló IP-cím és port számát, amelyhez a kérés irányítja a rendszer beolvasása."
  remarks: "Ez a tulajdonság akkor hasznos, ha a címzett módjában kérésekre való válaszolás szeretné."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_38_1.cs)]"
  syntax:
    content: public System.Net.IPEndPoint LocalEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "Egy <xref:System.Net.IPEndPoint>, amely jelzi, hogy az IP-cím a kérelmet küldött.</xref:System.Net.IPEndPoint>"
  overload: System.Net.HttpListenerRequest.LocalEndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
  fullName: System.Net.HttpListenerRequest.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a kérést küldő ügyfél által használt HTTP-verzióját."
  remarks: "A különböző HTTP-verzió képességeit meg van határozva a rendelkezésre álló dokumentumok [http://www.rfc-editor.org](http://www.rfc-editor.org/)."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; }
    return:
      type: System.Version
      description: "A <xref:System.Version>, amely azonosítja az ügyfél verziójának HTTP.</xref:System.Version>"
  overload: System.Net.HttpListenerRequest.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.QueryString
  id: QueryString
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
  fullName: System.Net.HttpListenerRequest.QueryString
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a lekérdezési karakterlánc szerepel a kérelemben."
  remarks: "A URL-címében a lekérdezési adatok elkülönül az útvonal-információinak kérdőjellel (?). A név/érték párok egyenlőségjelnek (=) vannak elválasztva. A lekérdezés adatok egyetlen karakterláncként eléréséhez <xref:System.Uri.Query%2A>tulajdonság értékek forrását <xref:System.Uri> <xref:System.Net.HttpListenerRequest.Url%2A>.</xref:System.Net.HttpListenerRequest.Url%2A> által visszaadott objektum</xref:System.Uri> </xref:System.Uri.Query%2A> beolvasása      > [!NOTE] > Lekérdezések nélkül egyenlőségjelet (Példa: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) hozzáadódnak a `null` az <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection> kulcs"
  example:
  - "The following code example demonstrates using the QueryString property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_4_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection QueryString { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> objektum, amely tartalmazza a kérés <xref:System.Net.HttpListenerRequest.Url*>.</xref:System.Net.HttpListenerRequest.Url*> szereplő lekérdezési adatok"
  overload: System.Net.HttpListenerRequest.QueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RawUrl
  id: RawUrl
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
  fullName: System.Net.HttpListenerRequest.RawUrl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Az ügyfél által kért (nélkül az állomás és port) URL-cím adatokat lekérdezi."
  remarks: "A nyers URL-címe az adatokat a következő URL-CÍMÉT a részét típusúként van definiálva. URL-címét `http://www.contoso.com/articles/recent.aspx`, a nyers URL-cím `/articles/recent.aspx`. A nyers URL-címet a lekérdezési karakterláncot tartalmaz, ha van ilyen.       Az állomás és port információk beszerzéséhez használja a <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>tulajdonság.</xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>"
  example:
  - "The following code example demonstrates using the RawUrl property.  \n  \n [!code-cs[Net_Listener_Basic#11](~/add/codesnippet/csharp/p-system.net.httplistene_29_1.cs)]"
  syntax:
    content: public string RawUrl { get; }
    return:
      type: System.String
      description: "A <xref:System.String>, amely tartalmazza a nyers URL-címet ehhez a kérelemhez.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.RawUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
  fullName: System.Net.HttpListenerRequest.RemoteEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi az ügyfél, amelyből a kérelem származási IP-cím és port számát."
  remarks: ''
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public System.Net.IPEndPoint RemoteEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "Egy <xref:System.Net.IPEndPoint>, ahol a kérelem származási IP-cím és port számát jelöli.</xref:System.Net.IPEndPoint>"
  overload: System.Net.HttpListenerRequest.RemoteEndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier
  id: RequestTraceIdentifier
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
  fullName: System.Net.HttpListenerRequest.RequestTraceIdentifier
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a bejövő HTTP-kérelem a kérelem azonosítója."
  syntax:
    content: public Guid RequestTraceIdentifier { get; }
    return:
      type: System.Guid
      description: "A <xref:System.Guid>objektum, amely tartalmazza a HTTP-kérelem az azonosítója.</xref:System.Guid>"
  overload: System.Net.HttpListenerRequest.RequestTraceIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ServiceName
  id: ServiceName
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
  fullName: System.Net.HttpListenerRequest.ServiceName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a Service Provider szolgáltatásnév (SPN), amely az ügyfél elküldte a kérésre."
  remarks: "Az alkalmazás a ServiceName tulajdonság segítségével egyéni szolgáltatás meg egyszerű szolgáltatásnév (SPN)-ellenőrzéshez."
  syntax:
    content: public string ServiceName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>, amely tartalmazza az egyszerű Szolgáltatásnevet az ügyfél a kérelemben küldött.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.ServiceName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.TransportContext
  id: TransportContext
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
  fullName: System.Net.HttpListenerRequest.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.Net.TransportContext>az ügyfél kérelemhez.</xref:System.Net.TransportContext>"
  remarks: "A <xref:System.Net.TransportContext>tulajdonság segítségével kéri le a csatorna kötés jogkivonatot (CBT) a egy <xref:System.Net.HttpListenerRequest>elküldve, amely HTTPS-kapcsolaton keresztül.</xref:System.Net.HttpListenerRequest> </xref:System.Net.TransportContext>       Alkalmazás a <xref:System.Net.TransportContext>tulajdonság, egyéni hitelesítés elvégzésére használatával a natív Win32 hívások [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) függvény.</xref:System.Net.TransportContext>       Ha egy alkalmazás megpróbálja beolvasni a csatorna kötő jogkivonat (CBT) a TransportContext tulajdonság használatával a <xref:System.Net.TransportContext.GetChannelBinding%2A>metódus és a <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>nem <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>, majd a <xref:System.Net.HttpListenerRequest> <xref:System.NotSupportedException>.</xref:System.NotSupportedException> kivételhibát</xref:System.Net.HttpListenerRequest> </xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> </xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> </xref:System.Net.TransportContext.GetChannelBinding%2A> A <xref:System.Net.HttpListenerRequest>felülbírálja a <xref:System.Net.TransportContext.GetChannelBinding%2A>belső megvalósítását metódust.</xref:System.Net.TransportContext.GetChannelBinding%2A> </xref:System.Net.HttpListenerRequest>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "A <xref:System.Net.TransportContext>objektum az az ügyfél kérésében.</xref:System.Net.TransportContext>"
  overload: System.Net.HttpListenerRequest.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Url
  id: Url
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Url
  nameWithType: HttpListenerRequest.Url
  fullName: System.Net.HttpListenerRequest.Url
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.Uri>az ügyfél által kért objektum.</xref:System.Uri>"
  remarks: "Az URL-cím tulajdonság lehetővé teszi érhetők el az összes információra szüksége van egy <xref:System.Uri>objektum.</xref:System.Uri> Ha ismeri az URI-kérelmet csak a nyers szöveg van szüksége, fontolja meg a <xref:System.Net.HttpListenerRequest.RawUrl%2A>tulajdonság helyette.</xref:System.Net.HttpListenerRequest.RawUrl%2A>       Az URL-cím tulajdonság értéke null. Ha a <xref:System.Uri>az ügyfél nem elemezhető.</xref:System.Uri>       A <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>a tulajdonság azt jelzi, ha <xref:System.Net.HttpListener>használ, a nyers unescaped URI nem az átalakított URI, ahol százalék-kódolású értékkel lesznek konvertálva, és más normalizálási intézkedéseket.</xref:System.Net.HttpListener> </xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>       Ha egy <xref:System.Net.HttpListener>példány keresztül kérelem érkezik a `http.sys` szolgáltatás, létrehoz egy példányát a URI karakterlánc által biztosított `http.sys`, és azt az URL-cím tulajdonság mutatja.</xref:System.Net.HttpListener>       A `http.sys` szolgáltatás elérhetővé teszi a kérelem URI két karakterláncot: - nyers URI - konvertálni URI a nyers URI megadása a <xref:System.Uri?displayProperty=fullName>egy HTTP-kérelem a kérelem sorban megadott: `GET /path/` `Host: www.contoso.com` által biztosított nyers URI `http.sys` a fent említett kérelem: &quot;/ eleresi_ut /&quot;.       </xref:System.Uri?displayProperty=fullName> A karakterlánc a következő HTTP-műveletet, a hálózaton keresztül küldött jelképez.       A `http.sys` szolgáltatás használatával a HTTP-kérelem sorban megadott URI-Azonosítót a kérelemben megadott adatok alapján hoz létre a konvertált URI és az állomásfejléc meghatározásához az eredeti kiszolgálón a kérés továbbítani kell. Ez a regisztrált URI-előtagok állítja be a kért információ összehasonlításával történik. Ahhoz, hogy a hasonlítsa össze ezeket az értékeket, néhány normalizálási kérésre azért van szükség. A fent a konvertált URI a minta a következőképpen nézne ki: `http://www.contoso.com/path/` a `http.sys` szolgáltatás hatékonyan ötvözi a <xref:System.Uri.Host%2A?displayProperty=fullName>tulajdonság értéke és a karakterlánc a konvertált URI létrehozásához vonal.</xref:System.Uri.Host%2A?displayProperty=fullName> Emellett `http.sys` és a <xref:System.Uri?displayProperty=fullName>osztály is tegye a következőket:-az összes kódolt százalékértékeknek Un-Kilépés.</xref:System.Uri?displayProperty=fullName>      -Százalék-kódolású nem ASCII-karaktereket alakítja át a UTF-16 karaktert megjelenítése. Vegye figyelembe, hogy az UTF-8 és ANSI/DBCS-karakterek támogatottak-e továbbá az Unicode-karaktereket (Unicode kódolással % uXXXX formátumban).      -, Elérési út tömörítési hasonló más normalizálási lépéseket hajtja végre.       A kérés nem tartalmaz semmilyen információt, hogy a használt értékek százalék-kódolású kódolást, mert nem lehet úgy, ha a százalék-kódolású értékek elemzése helyes kódolását meghatározásához.       Ezért `http.sys` a módosítását a folyamat két beállításkulcsot tartalmaz: |} Beállításkulcs |} Alapértelmezett érték |} Leírás |}   |------------------|-------------------|-----------------|   | EnableNonUTF8 |}&1; |} Ha nulla, `http.sys` csak az UTF-8 kódolású URL-címeket fogad el.<br /><br /> Ha nullától eltérő, `http.sys` is fogad az ANSI kódolású vagy DBCS kódolású URL-címek kérésekben. |}   | FavorUTF8 |}&1; |} Ha nullától eltérő, `http.sys` mindig próbál dekódolása URL-címet UTF-8 először; Ha a konverzió sikertelen, és EnableNonUTF8 nem nulla, a Http.sys, majd megpróbálja dekódolni a ANSI vagy kétbájtos Karaktereket.<br /><br /> Ha nulla (és EnableNonUTF8 nem nulla), `http.sys` dekódolása ANSI vagy DBCS; Ha adott próbál eljárás nem vezet eredményre, UTF-8 konverzió megkísérli. |}       Amikor <xref:System.Net.HttpListener>kap, akkor használja, hogy az átalakított URI `http.sys` URL-cím tulajdonsága bemeneti adatként.</xref:System.Net.HttpListener>       -T támogató karakterek betűk és számok mellett az URI-azonosítók szükség van. Példa: a következő URI Azonosítót, amely ügyféladatok ügyfél beolvasásához használt &quot;1/3812&quot; number: `http://www.contoso.com/Customer(&quot;1%2F3812&quot;)/` vegye figyelembe az URI-azonosító (%&2;F) százalék-kódolású törtvonallal. Erre akkor szükség, mivel ebben az esetben a perjel karakter jelzi az adatokat, és nem egy elérési út határolóját.       A karakterlánc átadni Uri konstruktor irányítja a következő URI Azonosítót: `http://www.contoso.com/Customer(&quot;1/3812&quot;)/` a következő elemeket az elérési út bontani a szegmensek eredményeznének: `Customer(&quot;1` `3812&quot;)` ez nem az a kísérlet történt a kérelem küldőjének.              Ha a <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>tulajdonság értéke HAMIS, amikor a <xref:System.Net.HttpListener>egy kérést kap a konvertált URI helyett használja a nyers URI `http.sys` URL-cím tulajdonsága bemeneti adatként.</xref:System.Net.HttpListener> </xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>"
  example:
  - "The following code example demonstrates using the Url property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_20_1.cs)]"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>objektum, amely azonosítja az ügyfél által a kért erőforrás.</xref:System.Uri>"
  overload: System.Net.HttpListenerRequest.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UrlReferrer
  id: UrlReferrer
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
  fullName: System.Net.HttpListenerRequest.UrlReferrer
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi az ügyfél a kiszolgáló említett erőforrás egységes erőforrás azonosítója (URI)."
  remarks: "Egy ügyfél hivatkozás követte a kért URI-ra, ha a kérelem tartalmazhat egy `Referrer` fejlécet, amely a hivatkozás található az erőforrás URI azonosító.       Ügyfelek, nem hamisít meg, vagy úgy, hogy nem jelent-e egy <xref:System.Net.HttpRequestHeader>fejléc.</xref:System.Net.HttpRequestHeader> Ezért, miközben a UrlReferrer tulajdonság lehet hasznos, ha a webes forgalom; alapvető trendek azonosításához nem ajánlott azt egy hitelesítési séma részeként adatokhoz való hozzáférés vezérlésére.       Kérelemfejléc teljes listáját lásd: a <xref:System.Net.HttpRequestHeader>számbavételi.</xref:System.Net.HttpRequestHeader>       A UrlReferrer értéke null, ha nincs `Referrer` a kérelem fejléc, vagy ha a `Referrer` fejléc megtalálható-e a kérelmet, de nem elemzi a egy érvényes <xref:System.Uri>.</xref:System.Uri>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_22_1.cs)]"
  syntax:
    content: public Uri UrlReferrer { get; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>objektum, amely tartalmazza a szöveget a kérelem <xref:System.Net.HttpRequestHeader>fejléc, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a fejléc nem szerepelt a kérelmet.</xref:System.Net.HttpRequestHeader> </xref:System.Uri>"
  overload: System.Net.HttpListenerRequest.UrlReferrer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserAgent
  id: UserAgent
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
  fullName: System.Net.HttpListenerRequest.UserAgent
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a felhasználói ügynök az ügyfélszámítógépet."
  remarks: "A `User-Agent` fejléc általában szöveg, amely azonosítja a kérelem létrehozásához használt szoftver nevét és verzióját számát tartalmazza.       Kérelemfejléc teljes listáját lásd: a <xref:System.Net.HttpRequestHeader>számbavételi.</xref:System.Net.HttpRequestHeader>       A felhasználói ügynök értéke null, ha nincs `User-Agent` a kérelem fejlécében."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_42_1.cs)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "A <xref:System.String>objektum, amely tartalmazza a szöveget a kérelem <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> fejléc.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserAgent*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserHostAddress
  id: UserHostAddress
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
  fullName: System.Net.HttpListenerRequest.UserHostAddress
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a kiszolgálót, amelyhez a kérés irányítja a rendszer IP-cím és port számát."
  remarks: "Ez a tulajdonság által visszaadott adatok is rendelkezésre áll, az a <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>tulajdonság értéke.</xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public string UserHostAddress { get; }
    return:
      type: System.String
      description: "A <xref:System.String>, amely tartalmazza a gazdagép címadatokat.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserHostAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserHostName
  id: UserHostName
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
  fullName: System.Net.HttpListenerRequest.UserHostName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a DNS-név és biztosított, ha az ügyfél által megadott port számát."
  remarks: "A `Host` fejléc tartalmazza a kért kiszolgáló állomásneve és a portszám, ha meg van adva, egymástól kettősponttal (például `www.contoso.com:8080`).       Ez a tulajdonság segítségével különböző válaszok attól függően, hogy a kérelemben megadott állomás nevét adja vissza.       Kérelemfejléc teljes listáját lásd: a <xref:System.Net.HttpRequestHeader>számbavételi.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_39_1.cs)]"
  syntax:
    content: public string UserHostName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>érték, amely tartalmazza a szöveget a kérelem <xref uid=&quot;langword_csharp_Host&quot; name=&quot;Host&quot; href=&quot;&quot;> </xref> fejléc.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserLanguages
  id: UserLanguages
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
  fullName: System.Net.HttpListenerRequest.UserLanguages
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a természetes nyelvű előnyben részesített a válasz."
  remarks: "Részletes leírása a `Accept-Language` fejléc, RFC 2616 című 14.4, rendelkezésre álló [http://www.rfc-editor.org](http://www.rfc-editor.org/).       Kérelemfejléc teljes listáját lásd: a <xref:System.Net.HttpRequestHeader>számbavételi.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example displays the languages from the request's `Accept-Language` header.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public string[] UserLanguages { get; }
    return:
      type: System.String[]
      description: "A <xref:System.String>tömb, amely tartalmazza a nyelveket a kérelemben megadott <xref:System.Net.HttpRequestHeader>fejléc vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha az ügyfélkérés nem foglal egy <xref:System.Net.HttpRequestHeader>fejléc.</xref:System.Net.HttpRequestHeader> </xref:System.Net.HttpRequestHeader> </xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserLanguages*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.HttpListenerRequest.AcceptTypes
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
  fullName: System.Net.HttpListenerRequest.AcceptTypes
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: BeginGetClientCertificate(AsyncCallback,Object)
  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  fullName: System.Net.HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.HttpListenerRequest.ClientCertificateError
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
  fullName: System.Net.HttpListenerRequest.ClientCertificateError
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerRequest.ContentEncoding
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
  fullName: System.Net.HttpListenerRequest.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerRequest.ContentLength64
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
  fullName: System.Net.HttpListenerRequest.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerRequest.ContentType
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
  fullName: System.Net.HttpListenerRequest.ContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerRequest.Cookies
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
  fullName: System.Net.HttpListenerRequest.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: EndGetClientCertificate(IAsyncResult)
  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  fullName: System.Net.HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Net.HttpListenerRequest.GetClientCertificate
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificate()
  nameWithType: HttpListenerRequest.GetClientCertificate()
  fullName: System.Net.HttpListenerRequest.GetClientCertificate()
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificateAsync()
  nameWithType: HttpListenerRequest.GetClientCertificateAsync()
  fullName: System.Net.HttpListenerRequest.GetClientCertificateAsync()
- uid: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<X509Certificate2>
  nameWithType: Task<X509Certificate2>
  fullName: System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerRequest.HasEntityBody
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
  fullName: System.Net.HttpListenerRequest.HasEntityBody
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerRequest.Headers
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Headers
  nameWithType: HttpListenerRequest.Headers
  fullName: System.Net.HttpListenerRequest.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Net.HttpListenerRequest.HttpMethod
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
  fullName: System.Net.HttpListenerRequest.HttpMethod
- uid: System.Net.HttpListenerRequest.InputStream
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
  fullName: System.Net.HttpListenerRequest.InputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerRequest.IsAuthenticated
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
  fullName: System.Net.HttpListenerRequest.IsAuthenticated
- uid: System.Net.HttpListenerRequest.IsLocal
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
  fullName: System.Net.HttpListenerRequest.IsLocal
- uid: System.Net.HttpListenerRequest.IsSecureConnection
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
  fullName: System.Net.HttpListenerRequest.IsSecureConnection
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
  fullName: System.Net.HttpListenerRequest.IsWebSocketRequest
- uid: System.Net.HttpListenerRequest.KeepAlive
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
  fullName: System.Net.HttpListenerRequest.KeepAlive
- uid: System.Net.HttpListenerRequest.LocalEndPoint
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
  fullName: System.Net.HttpListenerRequest.LocalEndPoint
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.HttpListenerRequest.ProtocolVersion
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
  fullName: System.Net.HttpListenerRequest.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerRequest.QueryString
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
  fullName: System.Net.HttpListenerRequest.QueryString
- uid: System.Net.HttpListenerRequest.RawUrl
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
  fullName: System.Net.HttpListenerRequest.RawUrl
- uid: System.Net.HttpListenerRequest.RemoteEndPoint
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
  fullName: System.Net.HttpListenerRequest.RemoteEndPoint
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
  fullName: System.Net.HttpListenerRequest.RequestTraceIdentifier
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.HttpListenerRequest.ServiceName
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
  fullName: System.Net.HttpListenerRequest.ServiceName
- uid: System.Net.HttpListenerRequest.TransportContext
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
  fullName: System.Net.HttpListenerRequest.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.HttpListenerRequest.Url
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Url
  nameWithType: HttpListenerRequest.Url
  fullName: System.Net.HttpListenerRequest.Url
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.HttpListenerRequest.UrlReferrer
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
  fullName: System.Net.HttpListenerRequest.UrlReferrer
- uid: System.Net.HttpListenerRequest.UserAgent
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
  fullName: System.Net.HttpListenerRequest.UserAgent
- uid: System.Net.HttpListenerRequest.UserHostAddress
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
  fullName: System.Net.HttpListenerRequest.UserHostAddress
- uid: System.Net.HttpListenerRequest.UserHostName
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
  fullName: System.Net.HttpListenerRequest.UserHostName
- uid: System.Net.HttpListenerRequest.UserLanguages
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
  fullName: System.Net.HttpListenerRequest.UserLanguages
- uid: System.Net.HttpListenerRequest.AcceptTypes*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: BeginGetClientCertificate
  nameWithType: HttpListenerRequest.BeginGetClientCertificate
- uid: System.Net.HttpListenerRequest.ClientCertificateError*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
- uid: System.Net.HttpListenerRequest.ContentEncoding*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
- uid: System.Net.HttpListenerRequest.ContentLength64*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
- uid: System.Net.HttpListenerRequest.ContentType*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
- uid: System.Net.HttpListenerRequest.Cookies*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: EndGetClientCertificate
  nameWithType: HttpListenerRequest.EndGetClientCertificate
- uid: System.Net.HttpListenerRequest.GetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificate
  nameWithType: HttpListenerRequest.GetClientCertificate
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificateAsync
  nameWithType: HttpListenerRequest.GetClientCertificateAsync
- uid: System.Net.HttpListenerRequest.HasEntityBody*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
- uid: System.Net.HttpListenerRequest.Headers*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Headers
  nameWithType: HttpListenerRequest.Headers
- uid: System.Net.HttpListenerRequest.HttpMethod*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
- uid: System.Net.HttpListenerRequest.InputStream*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
- uid: System.Net.HttpListenerRequest.IsAuthenticated*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
- uid: System.Net.HttpListenerRequest.IsLocal*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
- uid: System.Net.HttpListenerRequest.IsSecureConnection*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
- uid: System.Net.HttpListenerRequest.KeepAlive*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
- uid: System.Net.HttpListenerRequest.LocalEndPoint*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
- uid: System.Net.HttpListenerRequest.ProtocolVersion*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
- uid: System.Net.HttpListenerRequest.QueryString*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
- uid: System.Net.HttpListenerRequest.RawUrl*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
- uid: System.Net.HttpListenerRequest.RemoteEndPoint*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
- uid: System.Net.HttpListenerRequest.ServiceName*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
- uid: System.Net.HttpListenerRequest.TransportContext*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
- uid: System.Net.HttpListenerRequest.Url*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Url
  nameWithType: HttpListenerRequest.Url
- uid: System.Net.HttpListenerRequest.UrlReferrer*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
- uid: System.Net.HttpListenerRequest.UserAgent*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
- uid: System.Net.HttpListenerRequest.UserHostAddress*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
- uid: System.Net.HttpListenerRequest.UserHostName*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
- uid: System.Net.HttpListenerRequest.UserLanguages*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
