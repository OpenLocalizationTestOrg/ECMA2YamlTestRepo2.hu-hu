### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyObjectType
  id: DependencyObjectType
  children:
  - System.Windows.DependencyObjectType.BaseType
  - System.Windows.DependencyObjectType.FromSystemType(System.Type)
  - System.Windows.DependencyObjectType.GetHashCode
  - System.Windows.DependencyObjectType.Id
  - System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  - System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  - System.Windows.DependencyObjectType.Name
  - System.Windows.DependencyObjectType.SystemType
  langs:
  - csharp
  name: DependencyObjectType
  nameWithType: DependencyObjectType
  fullName: System.Windows.DependencyObjectType
  type: Class
  summary: "Az alapul szolgáló típusgyorsítótár megvalósítja az összes <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> származtatott típusok."
  remarks: "DependencyObjectType jelöli egy megadott, alapul szolgáló rendszer ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> <xref:System.Windows.DependencyObject>.</xref:System.Windows.DependencyObject> </xref:System.Type> DependencyObjectType lényegében egy burkolót a ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) <xref:System.Type>, hogy kiterjesztheti néhány platformképességei.</xref:System.Type>       Ez az osztály nem tartozik nyilvános konstruktor. Ez az osztály példányai csak szerezhetők keresztül más objektumok tulajdonságainak (például <xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName>), vagy a statikus metódussal <xref:System.Windows.DependencyObjectType.FromSystemType%2A>.</xref:System.Windows.DependencyObjectType.FromSystemType%2A> </xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=fullName>"
  syntax:
    content: public class DependencyObjectType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.BaseType
  id: BaseType
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
  fullName: System.Windows.DependencyObjectType.BaseType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Lekérdezi a <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> az aktuális azonnali alaposztály <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  syntax:
    content: public System.Windows.DependencyObjectType BaseType { get; }
    return:
      type: System.Windows.DependencyObjectType
      description: "Az alaposztály típusa."
  overload: System.Windows.DependencyObjectType.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.FromSystemType(System.Type)
  id: FromSystemType(System.Type)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: FromSystemType(Type)
  nameWithType: DependencyObjectType.FromSystemType(Type)
  fullName: System.Windows.DependencyObjectType.FromSystemType(Type)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Értéket ad vissza egy <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> , amely jelzi, hogy egy adott rendszer ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) típus."
  remarks: "Minden egyes <xref:System.Windows.DependencyObject>tart fenn a <xref:System.Windows.DependencyObject.DependencyObjectType%2A>visszaadó tulajdonság egy <xref:System.Windows.DependencyObjectType>, de ehhez szükséges, hogy egy adott <xref:System.Windows.DependencyObject>példány.</xref:System.Windows.DependencyObject> </xref:System.Windows.DependencyObjectType> </xref:System.Windows.DependencyObject.DependencyObjectType%2A> </xref:System.Windows.DependencyObject> Használhatja a statikus segédprogram módszert, ha még nincs egy <xref:System.Windows.DependencyObject>példány és egy <xref:System.Windows.DependencyObjectType>.</xref:System.Windows.DependencyObjectType> megkövetelése</xref:System.Windows.DependencyObject>"
  example:
  - "The following example calls FromSystemType , creating a <xref:System.Windows.DependencyObjectType> based on the type of the <xref:System.Windows.Window> class.  \n  \n [!code-cs[PropertiesOvwSupport#DOTFromSystemType](~/add/codesnippet/csharp/PropertiesOvwSupport/page3.xaml.cs#dotfromsystemtype)]\n [!code-vb[PropertiesOvwSupport#DOTFromSystemType](~/add/codesnippet/visualbasic/propertiesovwsupport/page3.xaml.vb#dotfromsystemtype)]"
  syntax:
    content: public static System.Windows.DependencyObjectType FromSystemType (Type systemType);
    parameters:
    - id: systemType
      type: System.Type
      description: "A rendszer ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) típusú konvertálni."
    return:
      type: System.Windows.DependencyObjectType
      description: "A <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> , amely jelzi, hogy a rendszer ([!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)]) típus."
  overload: System.Windows.DependencyObjectType.FromSystemType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.GetHashCode
  id: GetHashCode
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyObjectType.GetHashCode()
  fullName: System.Windows.DependencyObjectType.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Ehhez a kivonatoló kódot ad vissza <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  remarks: "Ez a megvalósítás értékének kapcsolódik a <xref:System.Windows.DependencyObjectType.Id%2A>tulajdonság.</xref:System.Windows.DependencyObjectType.Id%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy 32 bites előjeles egész számokat kivonatoló kódot."
  overload: System.Windows.DependencyObjectType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.Id
  id: Id
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: Id
  nameWithType: DependencyObjectType.Id
  fullName: System.Windows.DependencyObjectType.Id
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Lekérdezi a nulla alapú egyedi azonosítóját állandó idő tömb keresési műveletekhez."
  remarks: "Ne használjon általános kivonatoló függvényeket. Nincs garancia ettől az értéktől. Alkalmazás fut között változhat."
  syntax:
    content: public int Id { get; }
    return:
      type: System.Int32
      description: "Belső azonosítója."
  overload: System.Windows.DependencyObjectType.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  id: IsInstanceOfType(System.Windows.DependencyObject)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: IsInstanceOfType(DependencyObject)
  nameWithType: DependencyObjectType.IsInstanceOfType(DependencyObject)
  fullName: System.Windows.DependencyObjectType.IsInstanceOfType(DependencyObject)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Meghatározza, hogy a megadott objektum egy példányát az aktuális <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  remarks: "A pontos azonos típusú objektumokat kell visszaadnia `true`."
  syntax:
    content: public bool IsInstanceOfType (System.Windows.DependencyObject dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "Az objektum aktuális összehasonlítandó <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az osztály az aktuális által képviselt <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> az öröklési hierarchiában van a <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> át <code> d </code>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyObjectType.IsInstanceOfType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  id: IsSubclassOf(System.Windows.DependencyObjectType)
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: IsSubclassOf(DependencyObjectType)
  nameWithType: DependencyObjectType.IsSubclassOf(DependencyObjectType)
  fullName: System.Windows.DependencyObjectType.IsSubclassOf(DependencyObjectType)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Meghatározza, hogy az aktuális <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> származik a megadott <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  syntax:
    content: public bool IsSubclassOf (System.Windows.DependencyObjectType dependencyObjectType);
    parameters:
    - id: dependencyObjectType
      type: System.Windows.DependencyObjectType
      description: "A <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <code> dependencyObjectType </code> paraméter és a jelenlegi <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> típusú osztályok és az aktuális által képviselt osztályt képviselő <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> a által képviselt osztályból származik <code> dependencyObjectType </code>. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Ez a módszer emellett adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha <code> dependencyObjectType </code> és az aktuális <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref> képviselő ugyanahhoz az osztályhoz tartozik."
  overload: System.Windows.DependencyObjectType.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.Name
  id: Name
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: Name
  nameWithType: DependencyObjectType.Name
  fullName: System.Windows.DependencyObjectType.Name
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Lekérdezi a nevét a képviselt [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] rendszer típusa."
  remarks: "Név értéke ugyanazt a karakterláncot a <xref:System.Type>.</xref:System.Type> nevét nevével"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Neve a képviselt [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] rendszer típusa."
  overload: System.Windows.DependencyObjectType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyObjectType.SystemType
  id: SystemType
  parent: System.Windows.DependencyObjectType
  langs:
  - csharp
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
  fullName: System.Windows.DependencyObjectType.SystemType
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Lekérdezi a [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] által képviselt rendszertípus <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  syntax:
    content: public Type SystemType { get; }
    return:
      type: System.Type
      description: "A [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] által képviselt rendszertípus <xref href=&quot;System.Windows.DependencyObjectType&quot;> </xref>."
  overload: System.Windows.DependencyObjectType.SystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.DependencyObjectType.BaseType
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
  fullName: System.Windows.DependencyObjectType.BaseType
- uid: System.Windows.DependencyObjectType
  parent: System.Windows
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObjectType
  fullName: System.Windows.DependencyObjectType
- uid: System.Windows.DependencyObjectType.FromSystemType(System.Type)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: FromSystemType(Type)
  nameWithType: DependencyObjectType.FromSystemType(Type)
  fullName: System.Windows.DependencyObjectType.FromSystemType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.DependencyObjectType.GetHashCode
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyObjectType.GetHashCode()
  fullName: System.Windows.DependencyObjectType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.DependencyObjectType.Id
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Id
  nameWithType: DependencyObjectType.Id
  fullName: System.Windows.DependencyObjectType.Id
- uid: System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsInstanceOfType(DependencyObject)
  nameWithType: DependencyObjectType.IsInstanceOfType(DependencyObject)
  fullName: System.Windows.DependencyObjectType.IsInstanceOfType(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsSubclassOf(DependencyObjectType)
  nameWithType: DependencyObjectType.IsSubclassOf(DependencyObjectType)
  fullName: System.Windows.DependencyObjectType.IsSubclassOf(DependencyObjectType)
- uid: System.Windows.DependencyObjectType.Name
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Name
  nameWithType: DependencyObjectType.Name
  fullName: System.Windows.DependencyObjectType.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.DependencyObjectType.SystemType
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
  fullName: System.Windows.DependencyObjectType.SystemType
- uid: System.Windows.DependencyObjectType.BaseType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: BaseType
  nameWithType: DependencyObjectType.BaseType
- uid: System.Windows.DependencyObjectType.FromSystemType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: FromSystemType
  nameWithType: DependencyObjectType.FromSystemType
- uid: System.Windows.DependencyObjectType.GetHashCode*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyObjectType.GetHashCode
- uid: System.Windows.DependencyObjectType.Id*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Id
  nameWithType: DependencyObjectType.Id
- uid: System.Windows.DependencyObjectType.IsInstanceOfType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsInstanceOfType
  nameWithType: DependencyObjectType.IsInstanceOfType
- uid: System.Windows.DependencyObjectType.IsSubclassOf*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: IsSubclassOf
  nameWithType: DependencyObjectType.IsSubclassOf
- uid: System.Windows.DependencyObjectType.Name*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: Name
  nameWithType: DependencyObjectType.Name
- uid: System.Windows.DependencyObjectType.SystemType*
  parent: System.Windows.DependencyObjectType
  isExternal: false
  name: SystemType
  nameWithType: DependencyObjectType.SystemType
