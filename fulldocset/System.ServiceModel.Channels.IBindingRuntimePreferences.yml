### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences
  id: IBindingRuntimePreferences
  children:
  - System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  langs:
  - csharp
  name: IBindingRuntimePreferences
  nameWithType: IBindingRuntimePreferences
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences
  type: Interface
  summary: "Meghatározza, hogy a kötés valósíthatja meg, hogy a bejövő kéréseket kezeli szinkron vagy aszinkron módon történik a szolgáltatás nem kötelező szerződés."
  remarks: "Bizonyos esetekben egy kötés a szinkron folyamat üzenetek hatékonyabb lehet <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>vagy <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>módszerek.</xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> A <xref:System.ServiceModel.Channels.Binding>osztály opcionálisan valósítja meg a hívó jelzi, hogy ez az előnyben részesített IBindingRuntimePreferences.</xref:System.ServiceModel.Channels.Binding>       Ha a kötés nem valósítja meg a IBindingRuntimePreferences, a [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] szolgáltatás modell futásidejű réteg alapértelmezés szerint az aszinkron verzióinak használatával a `Receive` és `Request` módszerek. Kötés valósítja meg az IBindingRuntimePreferences, ha a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] szolgáltatás modell futásidejű réteg ellenőrzi <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, és használja, amely annak megállapításához, hogy ezeknek a szinkron verziói hívására módszerek (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> vagy <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) vagy aszinkron verzióival (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> és a <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29>vagy <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A>és <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> </xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> </xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Ha a kötés által megvalósított IBindingRuntimePreferences, és visszaadja `true` a a <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>tulajdonság, javasoljuk, hogy használja a szinkron <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>és <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>a csatorna érkező üzenetek fogadására módszerek.</xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Ha a kötés nem valósítja meg a IBindingRuntimePreferences vagy értéket ad vissza `false` a a <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>tulajdonság, javasoljuk, hogy használja az aszinkron <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>és <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29>vagy <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A>és <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>módszerek.</xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> </xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>       Függetlenül attól, által visszaadott érték a <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>tulajdonság, minden kötés továbbra is biztosítania kell a szinkron és aszinkron verzióját is érvényes implementációja a `Receive` a megadott csatornák esetében a megvalósított metódusok.</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Egyéni csatornák kapcsolatos további információkért lásd: [fejlődő csatornák](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows the implementation of a binding that implements the IBindingRuntimePreferences interface. This code is taken from the [Chunking Channel](~/add/includes/ajax-current-ext-md.md) sample:  \n  \n [!code-cs[S_UE_ChunkingChannel#0](~/add/codesnippet/csharp/t-system.servicemodel.ch_5_1.cs)]"
  syntax:
    content: public interface IBindingRuntimePreferences
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  id: ReceiveSynchronously
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  langs:
  - csharp
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a bejövő kérelmeket több hatékonyan szinkron vagy aszinkron módon lehet kezelni."
  remarks: "A szabványos (rendszer által biztosított) kötések által biztosított [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] Ez az interfész alkalmaztunk, és egyes esetekben a bejövő üzenetek feldolgozása szinkron módon alapértelmezett értékének felülbírálásához."
  example:
  - '[!code-cs[S_UE_ChunkingChannel#1](~/add/codesnippet/csharp/p-system.servicemodel.ch_0_1.cs)]'
  syntax:
    content: public bool ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kérelmek kezelése hatékonyabban szinkron módon történik; Ellenkező esetben<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a tanúsítványigénylések aszinkron módon történik."
  overload: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously*
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
