### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices
  id: LifetimeServices
  children:
  - System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor
  - System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
  - System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
  - System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
  - System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
  langs:
  - csharp
  name: LifetimeServices
  nameWithType: LifetimeServices
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices
  type: Class
  summary: ".NET távelérési élettartama szolgáltatás szabályozza."
  remarks: "Elosztott szemétgyűjtés felelős a kiszolgálóalkalmazások élettartamának vezérlése, és törölni őket, amikor azok élettartama lejárt. Hagyományosan elosztott szemétgyűjtés hivatkozás számát, valamint a pingelés vezérlő használja. Ez jól működik, ha néhány ügyfél objektumonként, de nem működik jól, ha ügyfelek az egyes objektumok száma ezer van. Az élettartam szolgáltatás egy hagyományos elosztott szemétgyűjtő, és méretezik funkciót feltételezheti, megfelelő, ha az ügyfelek számát növeli.       Az élettartam szolgáltatás társítja a címbérlet minden távolról aktivált objektum. Amikor bérlete lejár, a rendszer eltávolítja az objektumhoz.      > [!NOTE] > Ez az osztály a hivatkozás lehetővé teszi. Egy SecurityException hiba miatt fordul elő, ha a közvetlen hívónak nincs engedélye infrastruktúra. Lásd: [hivatkozás iránti igények kielégítése érdekében](~/add/includes/ajax-current-ext-md.md) további információt."
  example:
  - >-
    [!code-cpp[System.Runtime.Remoting.Lifetime#2](~/add/codesnippet/cpp/t-system.runtime.remotin_69_1.cpp)]
     [!code-vb[System.Runtime.Remoting.Lifetime#2](~/add/codesnippet/visualbasic/t-system.runtime.remotin_69_1.vb)]
     [!code-cs[System.Runtime.Remoting.Lifetime#2](~/add/codesnippet/csharp/t-system.runtime.remotin_69_1.cs)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class LifetimeServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: LifetimeServices()
  nameWithType: LifetimeServices.LifetimeServices()
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LifetimeServices()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Létrehoz egy új <xref href=&quot;System.Runtime.Remoting.Lifetime.LifetimeServices&quot;> </xref>."
  syntax:
    content: public LifetimeServices ();
    parameters: []
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
  id: LeaseManagerPollTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: LeaseManagerPollTime
  nameWithType: LifetimeServices.LeaseManagerPollTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Lekérdezi vagy beállítja az egyes aktiválások a címbérlet-kezelő lejárt bérletek karbantartása közötti időközt."
  remarks: "Az aktuális tulajdonság határozza meg a gyakoriság, amellyel a címbérlet-kezelő lejárt bérletek karbantartása aktívvá válik. Például ha LeaseManagerPollTime értéke 100 másodperc, a címbérlet listáját a rendszer megvizsgálja cleanups és megújításokat 100 másodpercenként.       A LeaseManagerPollTime tulajdonság alapértelmezett értéke 10 másodperc."
  syntax:
    content: public static TimeSpan LeaseManagerPollTime { get; set; }
    return:
      type: System.TimeSpan
      description: "Az alapértelmezés szerinti a címbérlet-kezelő alvó állapotban marad, miután ellenőrzése lejárt a címbérlet."
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívási verem feljebb hívók legalább egy nincs engedélye a távoli eljáráshívás típusok és csatornák beállítása. A kivétel csak a tulajdonság értékének beállításakor."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
  id: LeaseTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: LeaseTime
  nameWithType: LifetimeServices.LeaseTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Lekérdezi vagy beállítja a címbérlet időtartamának egy <xref href=&quot;System.AppDomain&quot;> </xref>."
  remarks: "Az alapértelmezett címbérleti időtartam érték 5 perc."
  syntax:
    content: public static TimeSpan LeaseTime { get; set; }
    return:
      type: System.TimeSpan
      description: "A címbérlet <xref:System.TimeSpan>objektum tartozhat bérletek esetében a <xref href=&quot;System.AppDomain&quot;> </xref>.</xref:System.TimeSpan>"
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívási verem feljebb hívók legalább egy nincs engedélye a távoli eljáráshívás típusok és csatornák beállítása. A kivétel csak a tulajdonság értékének beállításakor."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
  id: RenewOnCallTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: RenewOnCallTime
  nameWithType: LifetimeServices.RenewOnCallTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Lekérdezi vagy beállítja az időt, amely szerint a címbérlet ki van bővítve minden alkalommal, amikor a hívás érkezik a server objektum."
  remarks: "Az alapértelmezett megújítási élettartama címbérletet kiterjesztette érték 2 perc."
  example:
  - >-
    [!code-cpp[ILease_ILease#3](~/add/codesnippet/cpp/p-system.runtime.remotin_103_1.cpp)]
     [!code-cs[ILease_ILease#3](~/add/codesnippet/csharp/p-system.runtime.remotin_103_1.cs)]
     [!code-vb[ILease_ILease#3](~/add/codesnippet/visualbasic/p-system.runtime.remotin_103_1.vb)]
  syntax:
    content: public static TimeSpan RenewOnCallTime { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>által, amely a élettartamát az aktuális címbérlet <xref href=&quot;System.AppDomain&quot;> </xref> ki van bővítve minden hívása után.</xref:System.TimeSpan>"
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívási verem feljebb hívók legalább egy nincs engedélye a távoli eljáráshívás típusok és csatornák beállítása. A kivétel csak a tulajdonság értékének beállításakor."
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
  id: SponsorshipTimeout
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: SponsorshipTimeout
  nameWithType: LifetimeServices.SponsorshipTimeout
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "Lekérdezi vagy beállítja az időt a címbérlet-kezelő megvárja a megbízó a bérlet megújítási idejének való visszatéréshez."
  remarks: "Az alapértelmezett időtartamot, amíg a megbízó hívása túllépte az időkorlátot érték 2 perc."
  example:
  - >-
    [!code-cpp[ILease_ILease#3](~/add/codesnippet/cpp/p-system.runtime.remotin_75_1.cpp)]
     [!code-cs[ILease_ILease#3](~/add/codesnippet/csharp/p-system.runtime.remotin_75_1.cs)]
     [!code-vb[ILease_ILease#3](~/add/codesnippet/visualbasic/p-system.runtime.remotin_75_1.vb)]
  syntax:
    content: public static TimeSpan SponsorshipTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A kezdeti szponzorálás időtúllépés."
  overload: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívási verem feljebb hívók legalább egy nincs engedélye a távoli eljáráshívás típusok és csatornák beállítása. A kivétel csak a tulajdonság értékének beállításakor."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LifetimeServices()
  nameWithType: LifetimeServices.LifetimeServices()
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LifetimeServices()
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LeaseManagerPollTime
  nameWithType: LifetimeServices.LeaseManagerPollTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LeaseTime
  nameWithType: LifetimeServices.LeaseTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: RenewOnCallTime
  nameWithType: LifetimeServices.RenewOnCallTime
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: SponsorshipTimeout
  nameWithType: LifetimeServices.SponsorshipTimeout
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LifetimeServices
  nameWithType: LifetimeServices.LifetimeServices
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LeaseManagerPollTime
  nameWithType: LifetimeServices.LeaseManagerPollTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: LeaseTime
  nameWithType: LifetimeServices.LeaseTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: RenewOnCallTime
  nameWithType: LifetimeServices.RenewOnCallTime
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout*
  parent: System.Runtime.Remoting.Lifetime.LifetimeServices
  isExternal: false
  name: SponsorshipTimeout
  nameWithType: LifetimeServices.SponsorshipTimeout
