### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.EncryptedPackageEnvelope
  id: EncryptedPackageEnvelope
  children:
  - System.IO.Packaging.EncryptedPackageEnvelope.Close
  - System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  - System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  - System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  - System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  - System.IO.Packaging.EncryptedPackageEnvelope.Dispose
  - System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)
  - System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
  - System.IO.Packaging.EncryptedPackageEnvelope.Flush
  - System.IO.Packaging.EncryptedPackageEnvelope.GetPackage
  - System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)
  - System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)
  - System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)
  - System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)
  - System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)
  - System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
  - System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
  - System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
  langs:
  - csharp
  name: EncryptedPackageEnvelope
  nameWithType: EncryptedPackageEnvelope
  fullName: System.IO.Packaging.EncryptedPackageEnvelope
  type: Class
  summary: "Egy titkosított csomagot tartalmazó összetett OLE-fájlt jelöli."
  remarks: "EncryptedPackageEnvelope nincs nyilvános konstruktorral rendelkezik.  Az EncryptedPackageEnvelope hozta létre a statikus használatát <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, vagy <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A>módszerek.</xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> </xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> </xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>"
  syntax:
    content: 'public class EncryptedPackageEnvelope : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Close
  id: Close
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Close()
  nameWithType: EncryptedPackageEnvelope.Close()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Close()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Bezárja a titkosított csomag és az azt tartalmazó összetett OLE-fájlt."
  remarks: ''
  example:
  - "The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Close*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  id: Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Create(Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.Create(Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Create(Stream,PublishLicense,CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hoz létre, és adja vissza egy <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> a megadott adatfolyamon."
  remarks: "Az aktuális felhasználó rendelkezik olvasási/írási hozzáférést az új fájlba."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: envelopeStream
      type: System.IO.Stream
      description: "Az adatfolyam a fájl létrehozásához."
    - id: publishLicense
      type: System.Security.RightsManagement.PublishLicense
      description: "A közzétételi licenc, az összetett fájl beágyazott."
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Olyan objektum, amely meghatározza, hogy milyen műveleteket az aktuális felhasználó által végrehajtható a titkosított tartalomhoz."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Az újonnan létrehozott <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>envelopeStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>envelopeStream</code>nem biztosít az olvasási/írási hozzáférést."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  id: Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Create(String,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.Create(String,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Create(String,PublishLicense,CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hoz létre, és adja vissza egy <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> és lehetőséget ad a megadott fájlnév."
  remarks: "Ha már van ilyen nevű fájl, a rendszer felülírja.       Az aktuális felhasználó rendelkezik olvasási/írási hozzáférést a fájlhoz."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "Az OLE összetett fájl neve."
    - id: publishLicense
      type: System.Security.RightsManagement.PublishLicense
      description: "A közzétételi licenc, az összetett fájl beágyazott."
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Olyan objektum, amely meghatározza, hogy milyen műveleteket az aktuális felhasználó által végrehajtható a titkosított tartalomhoz."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Az újonnan létrehozott <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>envelopeFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  id: CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hoz létre, és adja vissza egy <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> (a a megadott adatfolyam), amely használ a megadott titkosított csomag tartalmát."
  remarks: "Az aktuális felhasználó rendelkezik olvasási/írási hozzáférést az új fájlba."
  example:
  - "The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: envelopeStream
      type: System.IO.Stream
      description: "Az adatfolyam a fájl létrehozásához."
    - id: packageStream
      type: System.IO.Stream
      description: "Az adatfolyam a meglévő titkosítatlan csomag jelző."
    - id: publishLicense
      type: System.Security.RightsManagement.PublishLicense
      description: "A közzétételi licenc, az összetett fájl beágyazott."
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Olyan objektum, amely meghatározza, hogy milyen műveleteket az aktuális felhasználó által végrehajtható a titkosított tartalomhoz."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Az újonnan létrehozott <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>envelopeStream</code>or <code>packageStream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>envelopeStream</code>nem biztosít az olvasási/írási hozzáférést."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  id: CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Hoz létre, és adja vissza egy <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> , amely a megadott titkosítatlan csomaghoz használja, mint annak tartalmát, és lehetőséget ad a megadott fájlnév."
  remarks: "Ha már van ilyen nevű fájl, a rendszer felülírja.       Az aktuális felhasználó rendelkezik olvasási/írási hozzáférést a fájlhoz."
  example:
  - "The following example shows how to use the CreateFromPackage method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "Az OLE összetett fájl neve."
    - id: packageStream
      type: System.IO.Stream
      description: "Az adatfolyam a meglévő titkosítatlan csomag jelző."
    - id: publishLicense
      type: System.Security.RightsManagement.PublishLicense
      description: "A közzétételi licenc, az összetett fájl beágyazott."
    - id: cryptoProvider
      type: System.Security.RightsManagement.CryptoProvider
      description: "Olyan objektum, amely meghatározza, hogy milyen műveleteket az aktuális felhasználó által végrehajtható a titkosított tartalomhoz."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "Az újonnan létrehozott <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>envelopeFileName</code>or <code>packageStream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose
  id: Dispose
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Dispose()
  nameWithType: EncryptedPackageEnvelope.Dispose()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Feloldja a által használt erőforrások a <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  remarks: "Ha befejeződött a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</xref:System.IO.Packaging.EncryptedPackageEnvelope> hívás Dispose A Dispose metódus elhagyja a <xref:System.IO.Packaging.EncryptedPackageEnvelope>használhatatlan állapotban.</xref:System.IO.Packaging.EncryptedPackageEnvelope> Hívása Dispose, után fel kell szabadítania mutató összes hivatkozást az <xref:System.IO.Packaging.EncryptedPackageEnvelope>, a szemétgyűjtő is visszaszerezni a memória, amely a <xref:System.IO.Packaging.EncryptedPackageEnvelope>lett elfoglaló.</xref:System.IO.Packaging.EncryptedPackageEnvelope> </xref:System.IO.Packaging.EncryptedPackageEnvelope> További információkért lásd: [nem felügyelt erőforrások tisztítás](~/add/includes/ajax-current-ext-md.md) és [eldobásakor metódusának](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Mindig hívás eldobásakor az <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</xref:System.IO.Packaging.EncryptedPackageEnvelope> utolsó referenciaként a engedélyezés előtt Ellenkező esetben az erőforrásoknak nem szabadul szemétgyűjtő hívást csak a <xref:System.IO.Packaging.EncryptedPackageEnvelope>objektum <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> </xref:System.IO.Packaging.EncryptedPackageEnvelope>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EncryptedPackageEnvelope.Dispose(Boolean)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()`metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter értéke igaz, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja a <xref:System.IO.Packaging.EncryptedPackageEnvelope>hivatkozik.</xref:System.IO.Packaging.EncryptedPackageEnvelope> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: FileOpenAccess
  nameWithType: EncryptedPackageEnvelope.FileOpenAccess
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi egy érték, amely megadja, hogy a fájl meg volt nyitva Olvasás, írás elérésére, vagy mindkettőt."
  syntax:
    content: public System.IO.FileAccess FileOpenAccess { get; }
    return:
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> érték, amely a fájl megnyitásához használt."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Flush
  id: Flush
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Flush()
  nameWithType: EncryptedPackageEnvelope.Flush()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Flush()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Ürítse ki az adatfolyam mind a <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> és a csomag tartalmát."
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage
  id: GetPackage
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: GetPackage()
  nameWithType: EncryptedPackageEnvelope.GetPackage()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A titkosított csomag belül lekérdezi a <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>."
  syntax:
    content: public System.IO.Packaging.Package GetPackage ();
    parameters: []
    return:
      type: System.IO.Packaging.Package
      description: "A <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> a boríték."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)
  id: IsEncryptedPackageEnvelope(System.IO.Stream)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: IsEncryptedPackageEnvelope(Stream)
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Adja meg, hogy a megadott adatfolyam-e egy OLE összetett fájl egy titkosított csomagadatfolyam érték beolvasása."
  syntax:
    content: public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Az adatfolyam tesztelni kívánt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott adatfolyam OLE összetett fájl a titkosított csomagadatfolyam; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)
  id: IsEncryptedPackageEnvelope(System.String)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: IsEncryptedPackageEnvelope(String)
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Adja meg, hogy-e a megadott fájl egy OLE összetett fájl egy titkosított csomagadatfolyam érték beolvasása."
  remarks: ''
  example:
  - "The following example shows how to use this method to test for encryption.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public static bool IsEncryptedPackageEnvelope (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "A tesztelni kívánt fájlt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott fájl egy titkosított csomagadatfolyam; az OLE összetett fájl Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Open(Stream)
  nameWithType: EncryptedPackageEnvelope.Open(Stream)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Nyissa meg a titkosított csomag a megadott adatfolyam."
  remarks: "Az adatfolyam egy titkosított csomaggal kell rendelkeznie."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);
    parameters:
    - id: envelopeStream
      type: System.IO.Stream
      description: "Az adatfolyam, amely tartalmazza a titkosított csomag."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "A <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> , amely már meg van nyitva."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Open(String)
  nameWithType: EncryptedPackageEnvelope.Open(String)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A titkosított csomag megnyitása a megadott fájlban nem megosztott és csak olvasható."
  remarks: "A fájl egy titkosított csomaggal kell rendelkeznie.       A megnyitott fájlt, és nem megosztott csak olvasható."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "A titkosított csomag tartalmazó fájl."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "A <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> , amely már meg van nyitva."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileAccess)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Open(String,FileAccess)
  nameWithType: EncryptedPackageEnvelope.Open(String,FileAccess)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Nyissa meg a titkosított csomag a megadott fájl nem megosztott és a megadott hozzáféréssel."
  remarks: "A fájl egy titkosított csomaggal kell rendelkeznie.       A megnyitott fájl nem megosztott."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "A titkosított csomag tartalmazó fájl."
    - id: access
      type: System.IO.FileAccess
      description: "A típusú hozzáférést."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "A <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> , amely már meg van nyitva."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: Open(String,FileAccess,FileShare)
  nameWithType: EncryptedPackageEnvelope.Open(String,FileAccess,FileShare)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String,FileAccess,FileShare)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Nyissa meg a titkosított csomag a megadott fájl és a megadott hozzáférést és megosztását."
  remarks: "A fájl egy titkosított csomaggal kell rendelkeznie."
  syntax:
    content: public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);
    parameters:
    - id: envelopeFileName
      type: System.String
      description: "A titkosított csomag tartalmazó fájl."
    - id: access
      type: System.IO.FileAccess
      description: "A típusú hozzáférést."
    - id: sharing
      type: System.IO.FileShare
      description: "A megosztás típusa."
    return:
      type: System.IO.Packaging.EncryptedPackageEnvelope
      description: "A <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref> , amely már meg van nyitva."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: PackageProperties
  nameWithType: EncryptedPackageEnvelope.PackageProperties
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "A core lekérdezi a csomag tulajdonságait (például a Title és tulajdonos) a rights felügyelt dokumentum."
  remarks: "A core tulajdonságok a szabványos OLE tulajdonság adatfolyamok (\\005SummaryInformation és \\005DocumentSummaryInformation) tárolja. A core tulajdonságokat is tárolja a csomagban saját magát. A feladata az alkalmazás a két tulajdonságkészletekkel szinkronizálva tartása."
  syntax:
    content: public System.IO.Packaging.PackageProperties PackageProperties { get; }
    return:
      type: System.IO.Packaging.PackageProperties
      description: "A <xref href=&quot;System.IO.Packaging.PackageProperties&quot;> </xref> a csomag."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
  id: RightsManagementInformation
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: RightsManagementInformation
  nameWithType: EncryptedPackageEnvelope.RightsManagementInformation
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Lekérdezi a rights management tárolt információ a <xref href=&quot;System.IO.Packaging.EncryptedPackageEnvelope&quot;> </xref>; pontosabban, a <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref> és a <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref>OLE összetett fájl, amely a rights management, úgy s védett csomag"
  remarks: ''
  example:
  - "The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the RightsManagementInformation property.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }
    return:
      type: System.IO.Packaging.RightsManagementInformation
      description: "A <xref href=&quot;System.IO.Packaging.RightsManagementInformation&quot;> </xref> a csomag."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
  id: StorageInfo
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  langs:
  - csharp
  name: StorageInfo
  nameWithType: EncryptedPackageEnvelope.StorageInfo
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Az összetett fájl adatfolyamokat kívül a titkosított csomag hozzáférést biztosító objektum beolvasása."
  syntax:
    content: public System.IO.Packaging.StorageInfo StorageInfo { get; }
    return:
      type: System.IO.Packaging.StorageInfo
      description: "A <xref href=&quot;System.IO.Packaging.StorageInfo&quot;> </xref> képviselő adatfolyamokat a OLE összetett fájl, a titkosított csomag kívül esnek."
  overload: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Close
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Close()
  nameWithType: EncryptedPackageEnvelope.Close()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Close()
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Create(Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.Create(Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Create(Stream,PublishLicense,CryptoProvider)
- uid: System.IO.Packaging.EncryptedPackageEnvelope
  parent: System.IO.Packaging
  isExternal: false
  name: EncryptedPackageEnvelope
  nameWithType: EncryptedPackageEnvelope
  fullName: System.IO.Packaging.EncryptedPackageEnvelope
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.RightsManagement.PublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
- uid: System.Security.RightsManagement.CryptoProvider
  parent: System.Security.RightsManagement
  isExternal: false
  name: CryptoProvider
  nameWithType: CryptoProvider
  fullName: System.Security.RightsManagement.CryptoProvider
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Create(String,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.Create(String,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Create(String,PublishLicense,CryptoProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(Stream,Stream,PublishLicense,CryptoProvider)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(String,Stream,PublishLicense,CryptoProvider)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Dispose()
  nameWithType: EncryptedPackageEnvelope.Dispose()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Dispose()
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EncryptedPackageEnvelope.Dispose(Boolean)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: FileOpenAccess
  nameWithType: EncryptedPackageEnvelope.FileOpenAccess
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Flush
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Flush()
  nameWithType: EncryptedPackageEnvelope.Flush()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Flush()
- uid: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: GetPackage()
  nameWithType: EncryptedPackageEnvelope.GetPackage()
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage()
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: IsEncryptedPackageEnvelope(Stream)
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(Stream)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: IsEncryptedPackageEnvelope(String)
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(String)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open(Stream)
  nameWithType: EncryptedPackageEnvelope.Open(Stream)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(Stream)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open(String)
  nameWithType: EncryptedPackageEnvelope.Open(String)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open(String,FileAccess)
  nameWithType: EncryptedPackageEnvelope.Open(String,FileAccess)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String,FileAccess)
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open(String,FileAccess,FileShare)
  nameWithType: EncryptedPackageEnvelope.Open(String,FileAccess,FileShare)
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.Open(String,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: PackageProperties
  nameWithType: EncryptedPackageEnvelope.PackageProperties
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  nameWithType: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: RightsManagementInformation
  nameWithType: EncryptedPackageEnvelope.RightsManagementInformation
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation
- uid: System.IO.Packaging.RightsManagementInformation
  parent: System.IO.Packaging
  isExternal: false
  name: RightsManagementInformation
  nameWithType: RightsManagementInformation
  fullName: System.IO.Packaging.RightsManagementInformation
- uid: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: StorageInfo
  nameWithType: EncryptedPackageEnvelope.StorageInfo
  fullName: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo
- uid: System.IO.Packaging.StorageInfo
  parent: System.IO.Packaging
  isExternal: false
  name: StorageInfo
  nameWithType: StorageInfo
  fullName: System.IO.Packaging.StorageInfo
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Close*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Close
  nameWithType: EncryptedPackageEnvelope.Close
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Create*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Create
  nameWithType: EncryptedPackageEnvelope.Create
- uid: System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: CreateFromPackage
  nameWithType: EncryptedPackageEnvelope.CreateFromPackage
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Dispose*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Dispose
  nameWithType: EncryptedPackageEnvelope.Dispose
- uid: System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: FileOpenAccess
  nameWithType: EncryptedPackageEnvelope.FileOpenAccess
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Flush*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Flush
  nameWithType: EncryptedPackageEnvelope.Flush
- uid: System.IO.Packaging.EncryptedPackageEnvelope.GetPackage*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: GetPackage
  nameWithType: EncryptedPackageEnvelope.GetPackage
- uid: System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: IsEncryptedPackageEnvelope
  nameWithType: EncryptedPackageEnvelope.IsEncryptedPackageEnvelope
- uid: System.IO.Packaging.EncryptedPackageEnvelope.Open*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: Open
  nameWithType: EncryptedPackageEnvelope.Open
- uid: System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: PackageProperties
  nameWithType: EncryptedPackageEnvelope.PackageProperties
- uid: System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: RightsManagementInformation
  nameWithType: EncryptedPackageEnvelope.RightsManagementInformation
- uid: System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo*
  parent: System.IO.Packaging.EncryptedPackageEnvelope
  isExternal: false
  name: StorageInfo
  nameWithType: EncryptedPackageEnvelope.StorageInfo
