### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartField
  id: IWebPartField
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  langs:
  - csharp
  name: IWebPartField
  nameWithType: IWebPartField
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField
  type: Interface
  summary: "Meghatározza a szolgáltató felületet két kiszolgálói vezérlő egy mező az adatok használatával csatlakozni."
  remarks: "Ez az interfész célja, hogy a kijelzők kapcsolatok használható. A kijelzők kapcsolatot, két kiszolgáló vezérlők, amelyek tárolása a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zóna létrehozni egy kapcsolat és a megosztáshoz adatokat egy működött a fogyasztók és más vezérlőt a szolgáltatóként működő.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> A mechanizmus adatmegosztásra kijelzők kapcsolaton keresztül példánya felület, a szolgáltató szolgál a fogyasztó számára egy visszahívási módszerrel. Kapcsolatot létesíteni, a ügyfelének és szolgáltatójának mindkét együttműködve felület ugyanolyan adatmegosztásra. A fogyasztó nem ismeri fel a szolgáltató által küldött illesztőfelület-típus, esetén továbbra is lehet csatlakozni a vezérlők segítségével átalakítón (a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objektum), amely a következőkből fordítja le a küldi a szolgáltató olyan típusú, amely felismeri a felhasználói felület példány.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> A kapcsolatok, lásd: <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>és [webes kijelzők kapcsolatok – áttekintés](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       A IWebPartField objektumfelület. a szolgáltatói felületen a kijelzők vezérlőhöz szabványos felületet kapcsolatokhoz adatmező alapján állítja be. Is létrehozhat egyéni felületek kijelzők kapcsolatok használatára, de sok adatvezérelt webalkalmazások, célszerű egy közös sor alapján kapcsolatok létrehozása (további információkért lásd: a <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>felület), tábla (további információkért lásd: a <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>interface), vagy a mező az adatforrásból, a IWebPartField felületén.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Tipikus kapcsolaton keresztül egy <xref:System.Web.UI.WebControls.WebParts.WebPart>működő szabályozhatja a szolgáltató volna valósítja meg az IWebPartField felületet, és adja meg az illesztőfelület példánya egy különös visszahívási metódus a fogyasztóknak.</xref:System.Web.UI.WebControls.WebParts.WebPart> Például a előfordulhat, hogy szolgáltatónak IWebPartField illesztőfelület mező a felhasználó táblázat, amely egy felhasználó postai irányítószám adatokat tartalmaz. Egy másik <xref:System.Web.UI.WebControls.WebParts.WebPart>működő szabályozhatja, mivel a felhasználói felület példányt kap és sikerült majd kinyerheti az irányítószámot adatokat, és kereshet és az irányítószámot alapján időjárási információk megjelenítése egy különleges metódusa határozzák meg.</xref:System.Web.UI.WebControls.WebParts.WebPart>       A IWebPartField illesztőnek két kitett tagja. A <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>tulajdonság beágyazva adatmező séma információt ad vissza egy <xref:System.ComponentModel.PropertyDescriptor>objektum.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> A <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>metódus deklarál egy módszerrel, amely egy végrehajtója (például egy szolgáltató vezérlő) az illesztőfelület példánya mező adatok beolvasása a visszahívási metódus meghívásakor.</xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartField interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartField interface, with one control acting as the provider, the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartField interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> method in the provider, to retrieve the actual data.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_353_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_353_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-cs[WebParts_IWebPartField_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_353_2.aspx)]\n [!code-vb[WebParts_IWebPartField_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_353_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified field, which the provider makes available through an instance of the IWebPartField interface."
  syntax:
    content: public interface IWebPartField
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  id: GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  langs:
  - csharp
  name: GetFieldValue(FieldCallback)
  nameWithType: IWebPartField.GetFieldValue(FieldCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(FieldCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Értékének visszaadása, a használt mező a felület kapcsolatot alapjául szolgáló két <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> szabályozza."
  remarks: "Ez a metódus használatával a csatoló által átadott adatok mezők értékét."
  example:
  - "The following code example shows the implementation and use of the GetFieldValue method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. The provider control implements the GetFieldValue method, returning the value of a particular field in the data table. The consumer control calls the GetFieldValue method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/c2381a5f-e812-4b8a-be4c-_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/c2381a5f-e812-4b8a-be4c-_1.vb)]"
  syntax:
    content: public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.FieldCallback
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.FieldCallback&quot;> </xref> delegált esetén, amely az adatokat fogadó metódus címét tartalmazza."
  overload: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartField.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi a sémaadatok, amellyel a kettő közötti adatmegosztásra adatmező <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> szabályozza."
  remarks: "Ez a tulajdonság a csatoló által átadott adatok tulajdonság információkat nyújt. Átalakító és a felhasználói vezérlők lekérdezheti a tulajdonság lekérése a típus tartalmát, és egyéb részleteket a mező szerepel a <xref:System.Web.UI.WebControls.WebParts.IWebPartField>szolgáltató által küldött illesztőfelület példánya.</xref:System.Web.UI.WebControls.WebParts.IWebPartField>"
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface. The provider control implements the Schema property. Then, in its `GetFieldValue` method, it uses the property to retrieve the field value.  \n  \n [!code-cs[WebParts_IWebPartField_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_271_1.cs)]\n [!code-vb[WebParts_IWebPartField_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_271_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , amely leírja, hogy a sémaadatok, az adatok mező."
  overload: System.Web.UI.WebControls.WebParts.IWebPartField.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: GetFieldValue(FieldCallback)
  nameWithType: IWebPartField.GetFieldValue(FieldCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(FieldCallback)
- uid: System.Web.UI.WebControls.WebParts.FieldCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: FieldCallback
  nameWithType: FieldCallback
  fullName: System.Web.UI.WebControls.WebParts.FieldCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: Schema
  nameWithType: IWebPartField.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartField.Schema
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue*
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: GetFieldValue
  nameWithType: IWebPartField.GetFieldValue
- uid: System.Web.UI.WebControls.WebParts.IWebPartField.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartField
  isExternal: false
  name: Schema
  nameWithType: IWebPartField.Schema
