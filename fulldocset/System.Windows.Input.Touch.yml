### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Touch
  id: Touch
  children:
  - System.Windows.Input.Touch.FrameReported
  langs:
  - csharp
  name: Touch
  nameWithType: Touch
  fullName: System.Windows.Input.Touch
  type: Class
  summary: "Egy alkalmazás szintű szolgáltatást nyújt, amely feldolgozza az operációs rendszer bemeneti több érintés, és riasztást a <xref href=&quot;System.Windows.Input.Touch.FrameReported&quot;> </xref> esemény."
  remarks: "A <xref:System.Windows.Input.Touch.FrameReported>esemény szerepel [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] Silverlight kompatibilitást támogatásához.</xref:System.Windows.Input.Touch.FrameReported> Ha még nem rendelkezik kompatibilitás-ellenőrzése a Silverlight, használja a touch az eseményeket, például a <xref:System.Windows.UIElement.TouchDown>és <xref:System.Windows.UIElement.TouchMove>a <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, vagy <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.UIElement3D> </xref:System.Windows.UIElement> </xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown>       Az <xref:System.Windows.Input.Touch.FrameReported>esemény nem használja a WPF bemeneti az eseményeket, például <xref:System.Windows.UIElement.TouchDown>és <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> azonos esemény modell</xref:System.Windows.Input.Touch.FrameReported> Egy elem-specifikus eseményként is, amely potenciálisan a felhasználói felület az objektumfához keresztül elérhetővé helyett a <xref:System.Windows.Input.Touch.FrameReported>esemény az függetlenül az alkalmazás szintjén egyszeri esemény.</xref:System.Windows.Input.Touch.FrameReported> Ezért nem használható a `sender` az eseménykezelő annak meghatározásához, hogy milyen elem van érintés paraméter.       Használja a <xref:System.Windows.Input.TouchFrameEventArgs>lekérni a <xref:System.Windows.Input.TouchPoint>értékek, amelyek a touch esemény kapcsolódnak.</xref:System.Windows.Input.TouchPoint> </xref:System.Windows.Input.TouchFrameEventArgs> A a <xref:System.Windows.Input.TouchPoint>, kaphat a a <xref:System.Windows.Input.TouchPoint.Position%2A>a touch, és döntse el, hogy a <xref:System.Windows.Input.TouchAction>lett egy <xref:System.Windows.Input.TouchAction>, <xref:System.Windows.Input.TouchAction>, vagy <xref:System.Windows.Input.TouchAction>művelet.</xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchAction> </xref:System.Windows.Input.TouchPoint.Position%2A> </xref:System.Windows.Input.TouchPoint> Használhatja a <xref:System.Windows.Input.TouchPoint>a <xref:System.Windows.Input.TouchDevice>.</xref:System.Windows.Input.TouchDevice> eléréséhez</xref:System.Windows.Input.TouchPoint> Az a <xref:System.Windows.Input.TouchDevice>, meghatározhatja, hogy az eszköz <xref:System.Windows.Input.TouchDevice.Id%2A>és az elem van szálai használat adatainak beolvasása.</xref:System.Windows.Input.TouchDevice.Id%2A> </xref:System.Windows.Input.TouchDevice>"
  example:
  - "The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen. Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.The pattern is created by drawing a line between the touch points provided by the touches. This example requires a Windows Touch–compatible screen.  \n  \n The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.  \n  \n [!code-xml[TouchFrameSample#000](~/add/codesnippet/xaml/wpftouchframesample/mainwindow.xaml#000)]  \n  \n The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n [!code-vb[TouchFrameSample#100](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#100)]\n [!code-cs[TouchFrameSample#100](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#100)]"
  syntax:
    content: public static class Touch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Touch.FrameReported
  id: FrameReported
  parent: System.Windows.Input.Touch
  langs:
  - csharp
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Akkor fordul elő, amikor egy touch-üzenetet küld."
  remarks: "A keret egy multitouch üzenetek vagy touch pontok. A FrameReported esemény kezelése és elérése részleteit simításokat is válaszol a <xref:System.Windows.Input.TouchPoint>a a <xref:System.Windows.Input.TouchFrameEventArgs>eseményadatokat.</xref:System.Windows.Input.TouchFrameEventArgs> </xref:System.Windows.Input.TouchPoint>       A FrameReported esemény nem használja az azonos esemény modell többi [!INCLUDE[TLA#tla_titlewinclient](~/add/includes/tlasharptla-titlewinclient-md.md)] bemeneti események, például <xref:System.Windows.UIElement.TouchDown>és <xref:System.Windows.UIElement.TouchMove>.</xref:System.Windows.UIElement.TouchMove> </xref:System.Windows.UIElement.TouchDown> Helyett egy elem-specifikus eseményként is, amely potenciálisan a felhasználói felület az objektumfához keresztül elérhetővé váljon, a FrameReported esemény az, amely az alkalmazás szintjén egyszeri esemény. Ezért nem használható a `sender` az eseménykezelő annak meghatározásához, hogy milyen elem van érintés paraméter."
  example:
  - "The following example handles the FrameReported event. When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>. When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released. When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked. If the move came from the first touch, its location is recorded. If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.  \n  \n This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.  \n  \n [!code-vb[TouchFrameSample#110](~/add/codesnippet/visualbasic/wpftouchframesample/mainwindow.xaml.vb#110)]\n [!code-cs[TouchFrameSample#110](~/add/codesnippet/csharp/wpftouchframesample/mainwindow.xaml.cs#110)]"
  syntax:
    content: public static event System.Windows.Input.TouchFrameEventHandler FrameReported;
    return:
      type: System.Windows.Input.TouchFrameEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.Touch.FrameReported
  parent: System.Windows.Input.Touch
  isExternal: false
  name: FrameReported
  nameWithType: Touch.FrameReported
  fullName: System.Windows.Input.Touch.FrameReported
- uid: System.Windows.Input.TouchFrameEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: TouchFrameEventHandler
  nameWithType: TouchFrameEventHandler
  fullName: System.Windows.Input.TouchFrameEventHandler
