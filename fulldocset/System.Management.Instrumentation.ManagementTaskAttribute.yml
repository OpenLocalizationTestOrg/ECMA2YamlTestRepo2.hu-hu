### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.ManagementTaskAttribute
  id: ManagementTaskAttribute
  children:
  - System.Management.Instrumentation.ManagementTaskAttribute.#ctor
  - System.Management.Instrumentation.ManagementTaskAttribute.Schema
  langs:
  - csharp
  name: ManagementTaskAttribute
  nameWithType: ManagementTaskAttribute
  fullName: System.Management.Instrumentation.ManagementTaskAttribute
  type: Class
  summary: "A ManagementTask attribútum azt jelzi, hogy a cél metódus valósítja meg a WMI-metódus.       Megjegyzés: a WMI .NET-kódtárakra most minősülnek végső állapot, és nincs további fejlesztési, fejlesztések, vagy frissítések állnak rendelkezésre a tárak érintő nem biztonsági problémákat. A [MI API-k](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) használja a rendszer minden új fejlesztését."
  remarks: "Alapértelmezés szerint a WMI-metódus neve lesz a cél metódus neve. Ennek az attribútumnak a szülőosztály <xref:System.Management.Instrumentation.ManagementMemberAttribute>, a Name paramétert tartalmaz.</xref:System.Management.Instrumentation.ManagementMemberAttribute> A paraméter segítségével módosíthatja, hogy a belső metódusnév módosítása nélkül WMI-n keresztül tesz elérhetővé a metódus neve.       A metódus nyilvánosnak kell lennie, és ez lehet statikus. Azt bármilyen kombinációja szerepelhet az [a], [out], [a/out], tömb vagy objektum objektumhivatkozási paraméterek. Tömbparaméterekhez WMI által előírt korlátozások miatt nem lehet többdimenziós vagy hiányos.       A metódus visszatérési típusa lehet: érvénytelenítéséhez skaláris, string, datetime, vagy az objektum. Egy tömb nem lehet."
  example:
  - "The following example shows how to mark a method with the ManagementTask attribute to expose the method to WMI. The method will show up in WMI as ResetCounters.  \n  \n [C#]  \n  \n```  \n// Use the ManagementTask attribute to specify that a method  \n// is exposed to WMI through this provider. Consumers will be  \n// able to execute this method through WMI.  \n[ManagementTask]  \npublic void ResetCounters()  \n{  \n    counter.Reset();  \n```  \n  \n }"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)]

      public sealed class ManagementTaskAttribute : System.Management.Instrumentation.ManagementMemberAttribute
  inheritance:
  - System.Attribute
  - System.Management.Instrumentation.ManagementMemberAttribute
  implements: []
  inheritedMembers:
  - System.Management.Instrumentation.ManagementMemberAttribute.Name
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementTaskAttribute.#ctor
  id: '#ctor'
  parent: System.Management.Instrumentation.ManagementTaskAttribute
  langs:
  - csharp
  name: ManagementTaskAttribute()
  nameWithType: ManagementTaskAttribute.ManagementTaskAttribute()
  fullName: System.Management.Instrumentation.ManagementTaskAttribute.ManagementTaskAttribute()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Az <xref:System.Management.ManagementTaskAttribute>osztály</xref:System.Management.ManagementTaskAttribute> egy új példányát inicializálja Ez az az alapértelmezett konstruktort."
  syntax:
    content: public ManagementTaskAttribute ();
    parameters: []
  overload: System.Management.Instrumentation.ManagementTaskAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementTaskAttribute.Schema
  id: Schema
  parent: System.Management.Instrumentation.ManagementTaskAttribute
  langs:
  - csharp
  name: Schema
  nameWithType: ManagementTaskAttribute.Schema
  fullName: System.Management.Instrumentation.ManagementTaskAttribute.Schema
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Lekérdezi vagy beállítja egy érték, amely meghatározza, hogy a módszert, amelyet a ManagementTask attribútummal van megjelölve kimeneteként kimeneti típusú."
  remarks: "Ha a visszaadott típus <xref:System.Object?displayProperty=fullName>, majd a kimenetet kell kezelni <xref:System.Object?displayProperty=fullName>.</xref:System.Object?displayProperty=fullName> típusú érték</xref:System.Object?displayProperty=fullName>"
  syntax:
    content: public Type Schema { get; set; }
    return:
      type: System.Type
      description: "A <xref:System.Type>érték, amely jelzi, hogy a módszert, amelyet a ManagementTask attribútummal van megjelölve kimeneteként kimeneti típusú.</xref:System.Type>"
  overload: System.Management.Instrumentation.ManagementTaskAttribute.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Management.Instrumentation.ManagementMemberAttribute
  isExternal: false
  name: System.Management.Instrumentation.ManagementMemberAttribute
- uid: System.Management.Instrumentation.ManagementTaskAttribute.#ctor
  parent: System.Management.Instrumentation.ManagementTaskAttribute
  isExternal: false
  name: ManagementTaskAttribute()
  nameWithType: ManagementTaskAttribute.ManagementTaskAttribute()
  fullName: System.Management.Instrumentation.ManagementTaskAttribute.ManagementTaskAttribute()
- uid: System.Management.Instrumentation.ManagementTaskAttribute.Schema
  parent: System.Management.Instrumentation.ManagementTaskAttribute
  isExternal: false
  name: Schema
  nameWithType: ManagementTaskAttribute.Schema
  fullName: System.Management.Instrumentation.ManagementTaskAttribute.Schema
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Management.Instrumentation.ManagementTaskAttribute.#ctor*
  parent: System.Management.Instrumentation.ManagementTaskAttribute
  isExternal: false
  name: ManagementTaskAttribute
  nameWithType: ManagementTaskAttribute.ManagementTaskAttribute
- uid: System.Management.Instrumentation.ManagementTaskAttribute.Schema*
  parent: System.Management.Instrumentation.ManagementTaskAttribute
  isExternal: false
  name: Schema
  nameWithType: ManagementTaskAttribute.Schema
