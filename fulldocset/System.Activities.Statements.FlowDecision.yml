### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.FlowDecision
  id: FlowDecision
  children:
  - System.Activities.Statements.FlowDecision.#ctor
  - System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})
  - System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})
  - System.Activities.Statements.FlowDecision.Condition
  - System.Activities.Statements.FlowDecision.DisplayName
  - System.Activities.Statements.FlowDecision.False
  - System.Activities.Statements.FlowDecision.True
  langs:
  - csharp
  name: FlowDecision
  nameWithType: FlowDecision
  fullName: System.Activities.Statements.FlowDecision
  type: Class
  summary: "A speciális <xref href=&quot;System.Activities.Statements.FlowNode&quot;> </xref> , amely lehetővé teszi a minta egy feltételes csomópont két eredményekkel."
  remarks: "FlowDecision feltétel, és határozza meg a műveleteket kell elvégezni, ha a feltétel `true` vagy `false`."
  example:
  - "The following code sample demonstrates creating a FlowDecision node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]"
  syntax:
    content: 'public sealed class FlowDecision : System.Activities.Statements.FlowNode'
  inheritance:
  - System.Object
  - System.Activities.Statements.FlowNode
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Statements.FlowDecision.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.FlowDecision
  langs:
  - csharp
  name: FlowDecision()
  nameWithType: FlowDecision.FlowDecision()
  fullName: System.Activities.Statements.FlowDecision.FlowDecision()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Activities.Statements.FlowDecision&quot;> </xref> osztály."
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]"
  syntax:
    content: public FlowDecision ();
    parameters: []
  overload: System.Activities.Statements.FlowDecision.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})
  id: '#ctor(System.Activities.Activity{System.Boolean})'
  parent: System.Activities.Statements.FlowDecision
  langs:
  - csharp
  name: FlowDecision(Activity<Boolean>)
  nameWithType: FlowDecision.FlowDecision(Activity<Boolean>)
  fullName: System.Activities.Statements.FlowDecision.FlowDecision(Activity<Boolean>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Activities.Statements.FlowDecision&quot;> </xref> osztály a megadott feltétellel."
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]"
  syntax:
    content: public FlowDecision (System.Activities.Activity<bool> condition);
    parameters:
    - id: condition
      type: System.Activities.Activity{System.Boolean}
      description: "A feltétel a <xref href=&quot;System.Activities.Statements.FlowDecision&quot;> </xref> teszteli."
  overload: System.Activities.Statements.FlowDecision.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})'
  parent: System.Activities.Statements.FlowDecision
  langs:
  - csharp
  name: FlowDecision(Expression<Func<ActivityContext,Boolean>>)
  nameWithType: FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)
  fullName: System.Activities.Statements.FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Activities.Statements.FlowDecision&quot;> </xref> osztály a megadott feltétellel."
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]"
  syntax:
    content: public FlowDecision (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,bool>> condition);
    parameters:
    - id: condition
      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}
      description: "A feltétel a <xref href=&quot;System.Activities.Statements.FlowDecision&quot;> </xref> teszteli."
  overload: System.Activities.Statements.FlowDecision.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.FlowDecision.Condition
  id: Condition
  parent: System.Activities.Statements.FlowDecision
  langs:
  - csharp
  name: Condition
  nameWithType: FlowDecision.Condition
  fullName: System.Activities.Statements.FlowDecision.Condition
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Adja meg a feltétel a <xref href=&quot;System.Activities.Statements.FlowDecision&quot;> </xref> teszteli."
  remarks: "Ha a feltétel `true`, a <xref:System.Activities.Statements.FlowNode>a a <xref:System.Activities.Statements.FlowDecision.True%2A>tulajdonság végrehajtása.</xref:System.Activities.Statements.FlowDecision.True%2A> </xref:System.Activities.Statements.FlowNode> Ellenkező esetben a <xref:System.Activities.Statements.FlowNode>a a <xref:System.Activities.Statements.FlowDecision.False%2A>tulajdonság végrehajtása.</xref:System.Activities.Statements.FlowDecision.False%2A> </xref:System.Activities.Statements.FlowNode>"
  example:
  - "The following code sample demonstrates using the Condition property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]"
  syntax:
    content: public System.Activities.Activity<bool> Condition { get; set; }
    return:
      type: System.Activities.Activity{System.Boolean}
      description: "A value kifejezés, amely a következő feltételt: jelöli."
  overload: System.Activities.Statements.FlowDecision.Condition*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.FlowDecision.DisplayName
  id: DisplayName
  parent: System.Activities.Statements.FlowDecision
  langs:
  - csharp
  name: DisplayName
  nameWithType: FlowDecision.DisplayName
  fullName: System.Activities.Statements.FlowDecision.DisplayName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "A folyamat döntési a tevékenység tervezőben megjelenő neve."
  syntax:
    content: public string DisplayName { get; set; }
    return:
      type: System.String
      description: "A folyamat döntési neve."
  overload: System.Activities.Statements.FlowDecision.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.FlowDecision.False
  id: "False"
  parent: System.Activities.Statements.FlowDecision
  langs:
  - csharp
  name: "False"
  nameWithType: FlowDecision.False
  fullName: System.Activities.Statements.FlowDecision.False
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Activities.Statements.FlowNode&quot;> </xref> , amelyek végrehajtása, ha a feltétel <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  remarks: ''
  example:
  - "The following code sample demonstrates setting the False property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]"
  syntax:
    content: public System.Activities.Statements.FlowNode False { get; set; }
    return:
      type: System.Activities.Statements.FlowNode
      description: "A tevékenység, a feltétel értéke esetén végrehajtott <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Statements.FlowDecision.False*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.FlowDecision.True
  id: "True"
  parent: System.Activities.Statements.FlowDecision
  langs:
  - csharp
  name: "True"
  nameWithType: FlowDecision.True
  fullName: System.Activities.Statements.FlowDecision.True
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Activities.Statements.FlowNode&quot;> </xref> , amelyek végrehajtása, ha a feltétel <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: ''
  example:
  - "The following code sample demonstrates setting the True property of a <xref:System.Activities.Statements.FlowDecision> node. This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_FlowChartWithFaultHandling#3](~/add/codesnippet/csharp/flowchartwithfaulthandling/program.cs#3)]"
  syntax:
    content: public System.Activities.Statements.FlowNode True { get; set; }
    return:
      type: System.Activities.Statements.FlowNode
      description: "A tevékenység hajtható végre, ha a feltétel <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Statements.FlowDecision.True*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Statements.FlowNode
  isExternal: false
  name: System.Activities.Statements.FlowNode
- uid: System.Activities.Statements.FlowDecision.#ctor
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: FlowDecision()
  nameWithType: FlowDecision.FlowDecision()
  fullName: System.Activities.Statements.FlowDecision.FlowDecision()
- uid: System.Activities.Statements.FlowDecision.#ctor(System.Activities.Activity{System.Boolean})
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: FlowDecision(Activity<Boolean>)
  nameWithType: FlowDecision.FlowDecision(Activity<Boolean>)
  fullName: System.Activities.Statements.FlowDecision.FlowDecision(Activity<Boolean>)
- uid: System.Activities.Activity{System.Boolean}
  parent: System.Activities
  isExternal: false
  name: Activity<Boolean>
  nameWithType: Activity<Boolean>
  fullName: System.Activities.Activity<System.Boolean>
  spec.csharp:
  - uid: System.Activities.Activity`1
    name: Activity
    nameWithType: Activity
    fullName: Activity<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.FlowDecision.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: FlowDecision(Expression<Func<ActivityContext,Boolean>>)
  nameWithType: FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)
  fullName: System.Activities.Statements.FlowDecision.FlowDecision(Expression<Func<ActivityContext,Boolean>>)
- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<ActivityContext,Boolean>>
  nameWithType: Expression<Func<ActivityContext,Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,System.Boolean>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<System.Activities.ActivityContext,System.Boolean>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.ActivityContext,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.ActivityContext
    name: ActivityContext
    nameWithType: ActivityContext
    fullName: ActivityContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.FlowDecision.Condition
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: Condition
  nameWithType: FlowDecision.Condition
  fullName: System.Activities.Statements.FlowDecision.Condition
- uid: System.Activities.Statements.FlowDecision.DisplayName
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: DisplayName
  nameWithType: FlowDecision.DisplayName
  fullName: System.Activities.Statements.FlowDecision.DisplayName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Statements.FlowDecision.False
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: "False"
  nameWithType: FlowDecision.False
  fullName: System.Activities.Statements.FlowDecision.False
- uid: System.Activities.Statements.FlowDecision.True
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: "True"
  nameWithType: FlowDecision.True
  fullName: System.Activities.Statements.FlowDecision.True
- uid: System.Activities.Statements.FlowDecision.#ctor*
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: FlowDecision
  nameWithType: FlowDecision.FlowDecision
- uid: System.Activities.Statements.FlowDecision.Condition*
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: Condition
  nameWithType: FlowDecision.Condition
- uid: System.Activities.Statements.FlowDecision.DisplayName*
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: DisplayName
  nameWithType: FlowDecision.DisplayName
- uid: System.Activities.Statements.FlowDecision.False*
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: "False"
  nameWithType: FlowDecision.False
- uid: System.Activities.Statements.FlowDecision.True*
  parent: System.Activities.Statements.FlowDecision
  isExternal: false
  name: "True"
  nameWithType: FlowDecision.True
