### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeDescriptor
  id: TypeDescriptor
  children:
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  - System.ComponentModel.TypeDescriptor.ComObjectType
  - System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  - System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  - System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  - System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  - System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  - System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  - System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  - System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  - System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  - System.ComponentModel.TypeDescriptor.InterfaceType
  - System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  - System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  - System.ComponentModel.TypeDescriptor.Refreshed
  - System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  - System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  - System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  langs:
  - csharp
  name: TypeDescriptor
  nameWithType: TypeDescriptor
  fullName: System.ComponentModel.TypeDescriptor
  type: Class
  summary: "Tájékoztatást ad azokról a jellemzők összetevő, például az attribútumokat, a tulajdonságok és az események. Ez az osztály nem örökölhető."
  remarks: "A .NET-keretrendszer olyan típusnál metaadatok eléréséhez két lehetőséget biztosít: a licencjelentésben API a <xref:System.Reflection?displayProperty=fullName>névteret, és a TypeDescriptor osztályhoz.</xref:System.Reflection?displayProperty=fullName> Fejlécreflexiós nem érhető el az összes eszköztípuson egy általános módszer, mert a foundation jön létre a <xref:System.Object.GetType%2A>legfelső szintű <xref:System.Object>osztályt</xref:System.Object> metódusában</xref:System.Object.GetType%2A> Az adatokat adja vissza egy abban nem bővíthető, hogy a cél típusa összeállításának után nem módosítható. További információkért tekintse meg a témaköreit [reflexiós](~/add/includes/ajax-current-ext-md.md).       Ezzel szemben a TypeDescriptor egy bővíthető ellenőrzési mechanizmus összetevők: azokat osztályokat, hogy implementálja a <xref:System.ComponentModel.IComponent>felület.</xref:System.ComponentModel.IComponent> Ellentétben a reflexió azt nem vizsgálhatja módszerek. TypeDescriptor dinamikusan bővíthető számos szolgáltatást a cél összetevő <xref:System.ComponentModel.Component.Site%2A>.</xref:System.ComponentModel.Component.Site%2A> keresztül érhető el Az alábbi táblázat ezeket a szolgáltatásokat.      | Szolgáltatás neve |} Leírás |}   |------------------|-----------------|   | <xref:System.ComponentModel.IExtenderProvider>| Lehetővé teszi, hogy egy másik osztály, például a <xref:System.Windows.Forms.ToolTip>, adja meg a további tulajdonságokat az összetevőhöz. |}   | <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>| Lehetővé teszi, hogy egy másik objektum, amely fel van fedve egy összetevő a szabványos metaadatok módosításához. |}   | <xref:System.ComponentModel.ICustomTypeDescriptor>| Lehetővé teszi, hogy az osztály dinamikusan és teljesen adja meg saját metaadatait, a szabványos ellenőrzési mechanizmusát TypeDescriptor cseréje. |}       A TypeDescriptor által biztosított kiterjeszthetőség lehetővé teszi a tényleges futásidejű másolatra, így tervezési idejű infrastruktúra összeállításakor hasznos TypeDescriptor eltér az összetevő tervezési idejű ábrázolását.</xref:System.ComponentModel.ICustomTypeDescriptor> </xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.Windows.Forms.ToolTip> </xref:System.ComponentModel.IExtenderProvider>       A TypeDescriptor a módszerek `static`. Ez az osztály példánya nem hozható létre, és ez az osztály nem örökölhető.       Tulajdonságot, és az esemény értékek két különböző módon: írja be az összetevő osztályának vagy tervezéskor módosíthatók. Ezeket az értékeket két módon állíthatja be, mert a TypeDescriptor túlterhelt metódusok tenni két különböző típusú paramétereket: egy osztály- vagy egy objektumpéldányra.       TypeDescriptor információk eléréséhez, és rendelkezik az objektum egy példányát, amikor egy összetevő meghívja módszert használja. A módszert, amely behívja a osztálytípus csak akkor, ha nem rendelkezik az objektum egy példányát.       Tulajdonságok és események sebességének TypeDescriptor tárolja. Ezek általában állandó objektum élettartama idején. Azonban extender szolgáltatók és -tervezőknek is csoportjának módosítása az objektum tulajdonságainak. Ha igen, akkor a <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>metódust kell hívni a gyorsítótár frissítése.</xref:System.ComponentModel.TypeDescriptor.Refresh%2A>"
  syntax:
    content: public sealed class TypeDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  id: AddAttributes(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddAttributes(Object,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Osztály szintű attribútumok hozzáadása a célpéldány összetevő."
  remarks: "A AddAttributes metódus osztály szintű attribútumok hozzáadja a megadott példány egy összetevő. Mivel ez egy általános követelmény használó alkalmazások a [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer és a Tulajdonságok ablak, ezt a módszert biztosít egy helyi egy típusleírás-szolgáltató, amely egyesíti a attribútumokkal, amely az osztály már létezik a megadott attribútumok létrehozásával. A visszatérési érték a attribútumok hozzáadása használt típusleírás-szolgáltató. Ez a szolgáltató később adhatók át a <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metódust, ha már nincs szükség a hozzáadott attribútumokat.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, Attribute[] attributes);
    parameters:
    - id: instance
      type: System.Object
      description: "A cél-összetevő példányának."
    - id: attributes
      type: System.Attribute[]
      description: "<xref:System.Attribute>Az összetevő osztály hozzáadása objektumokból</xref:System.Attribute> álló tömb"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Az újonnan létrehozott <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> adja hozzá a megadott attribútumok használt."
  overload: System.ComponentModel.TypeDescriptor.AddAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egyik vagy mindkét paraméter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  id: AddAttributes(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddAttributes(Type,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A céltípus összetevő osztály szintű attribútumok hozzáadása."
  remarks: "A AddAttributes metódus osztály szintű attribútumok hozzáadja a megadott típusú összetevő. Mivel ez egy általános követelmény használó alkalmazások a [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] Windows Forms Designer és a Tulajdonságok ablak, ezt a módszert biztosít egy helyi egy típusleírás-szolgáltató, amely egyesíti a attribútumokkal, amely az osztály már létezik a megadott attribútumok létrehozásával. A visszatérési érték a attribútumok hozzáadása használt típusleírás-szolgáltató. Ez a szolgáltató később adhatók át a <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metódust, ha már nincs szükség a hozzáadott attribútumokat.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, Attribute[] attributes);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "<xref:System.Attribute>Az összetevő osztály hozzáadása objektumokból</xref:System.Attribute> álló tömb"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Az újonnan létrehozott <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> adja hozzá a megadott attribútumok használt."
  overload: System.ComponentModel.TypeDescriptor.AddAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egyik vagy mindkét paraméter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  id: AddEditorTable(System.Type,System.Collections.Hashtable)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddEditorTable(Type,Hashtable)
  nameWithType: TypeDescriptor.AddEditorTable(Type,Hashtable)
  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(Type,Hashtable)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hozzáadja a megadott szerkesztő alaptípus egy szerkesztő tábla."
  remarks: "A AddEditorTable metódus ad egy szerkesztő táblázatban az adott szerkesztő alaptípus. Általában szerkesztők egy összetevő a metaadatok vannak megadva. Azonban ha nem a kért szerkesztő alap metaadatai típus található az összetevő, a társított <xref:System.ComponentModel.TypeDescriptor>egy szerkesztő táblát a, mert a típus fog keresni, ha egy található.</xref:System.ComponentModel.TypeDescriptor> Miután egy szerkesztő tábla egy típusleíró bővült, nem távolítható el, és a típusleíró tulajdonában van. A típus leíró szabadon módosításokat előfordulhat, hogy ezt a táblázatot.       A szerkesztő táblázat formátumát használ adattípusok kulcsok és szerkesztők értékként. A tábla bejegyzés értéke része egy olyan szerkesztő példányát képviselik. Az értékek egyike lehet. Ha egy karakterláncot tartalmaz, a típusleíró fogja feltételezni, hogy ez az az objektum típusa, és majd betöltése a típus teljes nevét. Típust tartalmaz, ha a típus egy példánya létrejön egy szerkesztővel beszerzése. Végezetül a érték része egy tényleges szerkesztő példányát is tartalmazhat. A típus leíró szerkesztővé példány oldja fel, ha a példány vissza későbbi használatra a táblázatba tárolja."
  syntax:
    content: public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "A szerkesztő alaptípust, vegye fel a szerkesztő táblában. Ha a tábla létezik ehhez a típushoz, ez a metódus nincs hatása."
    - id: table
      type: System.Collections.Hashtable
      description: "The <xref href=&quot;System.Collections.Hashtable&quot;></xref> to add."
  overload: System.ComponentModel.TypeDescriptor.AddEditorTable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hozzáad egy típusleírás-szolgáltató egy összetevő egyetlen példánya esetében."
  remarks: "A AddProvider metódus ad egy típusleírás-szolgáltató, hogy rendelkezik írja be az összetevő egyetlen példány adatait. Ha egy szolgáltató által ezzel a módszerrel a szolgáltató által hozzáadott <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>metódus nem lesz meghívva, mert a példány már létezik.</xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>       Ez a módszer nem tart fenn rögzített hivatkozás az összetevőre, így nem akadályozza meg az összetevő a véglegesítése.       Akkor lehet hozzáadni a azonos típusúnak vagy objektumnak több típus leírását is. Ha ez történik, az első típusleírás-szolgáltató észlelt, amely típussal kapcsolatos információk kizárólag használható. Típus adatszolgáltatók a verem vannak tárolva, mert az utolsó szolgáltató hozzá lesz lekérdezése az elsőt. Ez a viselkedés lehetővé teszi, hogy a AddProvider és <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>leküldéses és pop használt módszerek leírás szolgáltatók adott helyzetekben szükség szerint írja be a.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>       Ha sikeres, ez a metódus meghívja a <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>metódust a `instance` paraméter.</xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>      > [!NOTE] > Ez a módszer két verziója más hatóköröknek eredményt. A <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>metódus azon definícióváltozatát, egy <xref:System.Object>paraméter csak a megadott összetevő adott példányban van hatással.</xref:System.Object> </xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Ezzel szemben a többi túlterhelés, amely veszi a <xref:System.Type>paraméter, hatással van az adott típus szerint összetevőt az összes példányát.</xref:System.Type>       Használja a <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>módszert, ha meg kell hívnia a részlegesen megbízható kódból.</xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: instance
      type: System.Object
      description: "A cél-összetevő példányának."
  overload: System.ComponentModel.TypeDescriptor.AddProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hozzáad egy típusleírás-szolgáltató egy összetevő osztály."
  remarks: "A AddProvider metódus ad egy típusleírás-szolgáltató, hogy rendelkezik információja a megadott osztály származtatott osztályainak és ezek a típusok összes példányát.      > [!NOTE] > A `type` paraméter állhat bármilyen, beleértve az illesztőfelület. Például adjon meg egyéni típusa és a példány adatait az összes összetevőhöz, megadni `typeof(IComponent)`. Sikeres `typeof(object)` fel fogja hívni a szolgáltatót, amelyet az összes típusú információk.       Ez a módszer nem tart fenn minden objektum egy rögzített hivatkozást, hogy nem akadályozza meg objektumok véglegesítése.       Akkor lehet hozzáadni a azonos típusúnak vagy objektumnak több típus leírását is. Ha ez történik, az első típusleírás-szolgáltató észlelt, amely típussal kapcsolatos információk kizárólag használható. Típus adatszolgáltatók a verem vannak tárolva, mert az utolsó szolgáltató hozzá lesz az elsőt lekérdezése. Ez a viselkedés lehetővé teszi, hogy a AddProvider és <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>leküldéses és pop használt módszerek leírás szolgáltatók adott helyzetekben szükség szerint írja be a.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>       Ha sikeres, ez a metódus meghívja a <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>metódust a `type` paraméter.</xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>      > [!NOTE] > Ez a módszer két verziója más hatóköröknek eredményt. A <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>metódus azon definícióváltozatát, egy <xref:System.Object>paraméter csak a megadott összetevő adott példányban van hatással.</xref:System.Object> </xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Ezzel szemben a többi túlterhelés, amely veszi a <xref:System.Type>paraméter, hatással van az adott típus szerint összetevőt az összes példányát.</xref:System.Type>       Használja a <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>módszert, ha meg kell hívnia a részlegesen megbízható kódból.</xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.AddProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hozzáad egy típusleírás-szolgáltató egy összetevő egyetlen példánya esetében."
  remarks: "Ez a metódus hívása a részlegesen megbízható kódból. Ha <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>van megadva, a hívó regisztrálhatja a megadott példány szolgáltatót Ha típusára is részlegesen megbízható.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Használja a <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>módszert, ha nem szeretné hívható meg részlegesen megbízható kódból.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: instance
      type: System.Object
      description: "A cél-összetevő példányának."
  overload: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: AddProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hozzáad egy típusleírás-szolgáltató egy összetevő osztály."
  remarks: "Ez a metódus hívása a részlegesen megbízható kódból. Ha <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>van megadva, a hívó regisztrálhatja szolgáltatót a megadott típus esetén is részlegesen megbízható.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Használja a <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>módszert, ha nem szeretné hívható meg részlegesen megbízható kódból.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "The <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;></xref> to add."
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  id: ComNativeDescriptorHandler
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
  fullName: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lekérdezi vagy beállítja a Component Object Model (COM) típussal kapcsolatos információk a célként megadott összetevő a szolgáltatóját."
  remarks: "A ComNativeDescriptorHandler tulajdonság és a <xref:System.ComponentModel.IComNativeDescriptorHandler>kapcsolat már nem használatosak.</xref:System.ComponentModel.IComNativeDescriptorHandler> További információkért lásd: a <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>tulajdonság.</xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>"
  syntax:
    content: public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }
    return:
      type: System.ComponentModel.IComNativeDescriptorHandler
      description: "Egy <xref href=&quot;System.ComponentModel.IComNativeDescriptorHandler&quot;> </xref> képviselő a COM típus Programinformáció-szolgáltató példányt."
  overload: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.ComObjectType
  id: ComObjectType
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
  fullName: System.ComponentModel.TypeDescriptor.ComObjectType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lekérdezi a célként megadott összetevő által meghatározott Component Object Model (COM) objektum típusa."
  remarks: "A ComObjectType tulajdonság adja vissza, amelyek átadhatók egy típust a <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metódus egy COM-típusok típusleírás-szolgáltató definiálásához.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>       A ComObjectType tulajdonság és más Ez az osztály tagjai cserélje le a elavult funkciói <xref:System.ComponentModel.IComNativeDescriptorHandler>felületet.</xref:System.ComponentModel.IComNativeDescriptorHandler> A COM-objektum közötti leképezést rétegben végrehajtásához és <xref:System.ComponentModel.TypeDescriptor>, adja hozzá a <xref:System.ComponentModel.TypeDescriptionProvider>típus ComObjectType kezelésére.</xref:System.ComponentModel.TypeDescriptionProvider> </xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static Type ComObjectType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>képviselt Ez az összetevő COM-objektum vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nem a COM-objektumok.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.ComObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  id: CreateAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateAssociation(Object,Object)
  nameWithType: TypeDescriptor.CreateAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Két objektum elsődleges-másodlagos hozzárendeli."
  remarks: "A CreateAssociation metódus egy elsődleges és másodlagos objektum közötti kapcsolat jön létre. Társítás létrehozása után egy designer vagy más szűrési mechanizmus továbbítani lehet objektum be az elsődleges objektum tulajdonságkészlet tulajdonságokat adhat hozzá. Ha egy tulajdonság meghíváshoz elsődleges objektuma alapján történik a <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>metódust hívja meg a rendszer a tényleges objektum példányon, amely kapcsolódik a típusparaméter feloldani.</xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>       A <xref:System.WeakReference>szolgál az elsődleges és másodlagos objektum közötti társítás karbantartása; ezért ez a módszer nem megakadályozása lehet objektum véglegesíti és szemétgyűjtés által visszaigényelt.</xref:System.WeakReference>"
  syntax:
    content: public static void CreateAssociation (object primary, object secondary);
    parameters:
    - id: primary
      type: System.Object
      description: "Az elsődleges <xref:System.Object>.</xref:System.Object>"
    - id: secondary
      type: System.Object
      description: "A másodlagos <xref:System.Object>.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.CreateAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>primary</code>egyenlő <code>secondary</code>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  id: CreateDesigner(System.ComponentModel.IComponent,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateDesigner(IComponent,Type)
  nameWithType: TypeDescriptor.CreateDesigner(IComponent,Type)
  fullName: System.ComponentModel.TypeDescriptor.CreateDesigner(IComponent,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Létrehoz egy új, a megadott összetevő társított Designer és a megadott típusú Designer."
  remarks: "Ha ez a metódus nem található érvényes <xref:System.ComponentModel.DesignerAttribute>, az osztályhierarchia egy Designer mentése keresi.</xref:System.ComponentModel.DesignerAttribute> Ha a tervező nem találja az osztályhierarchia, visszatérési `null`."
  syntax:
    content: public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Egy <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> , amely megadja, hogy az összetevő a Tervező társítja."
    - id: designerBaseType
      type: System.Type
      description: "A <xref:System.Type>létrehozásához designer típusát jelöli, amelyek.</xref:System.Type>"
    return:
      type: System.ComponentModel.Design.IDesigner
      description: "Egy <xref href=&quot;System.ComponentModel.Design.IDesigner&quot;> </xref> , amely a tervező az-összetevő példányának vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs tervező található."
  overload: System.ComponentModel.TypeDescriptor.CreateDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  id: CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateEvent(Type,EventDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Létrehoz egy új esemény leíró, amely azonos egy meglévő esemény leírót, ha a meglévő <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>."
  syntax:
    content: public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Az összetevőt, amihez létre kívánja hozni az új esemény típusa."
    - id: oldEventDescriptor
      type: System.ComponentModel.EventDescriptor
      description: "A meglévő események adatait."
    - id: attributes
      type: System.Attribute[]
      description: "Az új attribútumok."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Egy új <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> , amely a megadott metaadat-attribútumok a meglévő metaadatok attribútumokkal rendelkezik egyesíteni."
  overload: System.ComponentModel.TypeDescriptor.CreateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateEvent(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Létrehoz egy új esemény leíró, amely egy meglévő esemény leíró azonos dinamikusan generált leíró adatokat a megadott eseményeket egy típus."
  syntax:
    content: public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "Él, az összetevő az esemény típusa."
    - id: name
      type: System.String
      description: "Az esemény neve."
    - id: type
      type: System.Type
      description: "A kezelő az esemény delegált típusa."
    - id: attributes
      type: System.Attribute[]
      description: "Ez az esemény attribútumait."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> kötött, amely egy típust."
  overload: System.ComponentModel.TypeDescriptor.CreateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  id: CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Létrehoz egy objektumot, amely egy másik adattípus helyére is."
  remarks: "A CreateInstance metódus meg fogja keresni egy <xref:System.ComponentModel.TypeDescriptionProvider>, amely kapcsolódik a megadott `objectType` adattípus.</xref:System.ComponentModel.TypeDescriptionProvider> Ez a módszer először próbál egy típusleírás-szolgáltató az beszerzése a `provider` paraméter. Ha ez nem keres a saját belső táblák szolgáltató (ezeket a bejegyzéseket előző hívások segítségével létrehozott <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> Ha talál egy szolgáltatót, ez a módszer azt delegálják, a létrehozási híváshoz. az adott objektumhoz."
  syntax:
    content: public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "A szolgáltató, amely egy <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> szolgáltatás. Ez a paraméter lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: objectType
      type: System.Type
      description: "A <xref:System.Type>objektum létrehozásához.</xref:System.Type>"
    - id: argTypes
      type: System.Type[]
      description: "Az objektum konstruktor átadandó különböző választható tömbjét. Ez a paraméter lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy nulla hosszúságú tömb."
    - id: args
      type: System.Object[]
      description: "Egy nem kötelező tömböt paramétert, hogy az objektum konstruktor. Ha nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, az elemek azonosnak kell lennie mint `argTypes`."
    return:
      type: System.Object
      description: "Ha a hozzárendelt helyettesítő adattípus példánya <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> talált; egyéb, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeDescriptor.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, or <code>args</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when <code>argTypes</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argTypes</code>és <code>args</code> elemek száma különböző."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  id: CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateProperty(Type,PropertyDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy meglévő tulajdonságleíró, a megadott meglévő használatával hoz létre egy új tulajdonságleíró <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> és attribútum tömb."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "A <xref:System.Type>tulajdonság tagja összetevő.</xref:System.Type>"
    - id: oldPropertyDescriptor
      type: System.ComponentModel.PropertyDescriptor
      description: "A meglévő tulajdonság leírója."
    - id: attributes
      type: System.Attribute[]
      description: "Az új attribútumok ehhez a tulajdonsághoz."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Egy új <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , amely rendelkezik a megadott metaadat-attribútumok egyesítve lesznek a meglévő metaadat-attribútumok."
  overload: System.ComponentModel.TypeDescriptor.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  id: CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: CreateProperty(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Hoz, és dinamikusan van kötve a tulajdonságleíró egy típusa a megadott tulajdonságnévnek a használatát, típusa és attribútum tömb."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "A <xref:System.Type>tulajdonság tagja összetevő.</xref:System.Type>"
    - id: name
      type: System.String
      description: "A tulajdonság nevét."
    - id: type
      type: System.Type
      description: "A <xref:System.Type>tulajdonságának.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "Az új attribútumok ehhez a tulajdonsághoz."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , amely a megadott típus van kötve, és, amely rendelkezik a megadott metaadat-attribútumok egyesítve lesznek a meglévő metaadat-attribútumok."
  overload: System.ComponentModel.TypeDescriptor.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  id: GetAssociation(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAssociation(Type,Object)
  nameWithType: TypeDescriptor.GetAssociation(Type,Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott elsődleges objektumhoz rendelt típus egy példányát adja vissza."
  remarks: "Ha egy előző társítás nem lett végrehajtva a `type` paraméter használatával a <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>módszer, majd a GetAssociation metódus adja vissza a megfelelő másodlagos objektum meghívni a kért típusra.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> Ellenkező esetben GetAssociation keres rá kompatibilis tervezőjét `type` és a Tervező adja vissza, ha talált. Ez a metódus nem ad vissza `null`.       A <xref:System.WeakReference>szolgál az elsődleges és másodlagos objektum közötti társítás karbantartása; ezért ezt a módszert nem akadályozza meg az elsődleges vagy másodlagos objektum történő véglegesíti és szemétgyűjtés által visszaigényelt.</xref:System.WeakReference>"
  syntax:
    content: public static object GetAssociation (Type type, object primary);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    - id: primary
      type: System.Object
      description: "A társítás elsődleges objektum."
    return:
      type: System.Object
      description: "Egy társítás létezik-e; ha nem az elsődleges objektumot társított másodlagos típusú példány Ellenkező esetben <code> primary </code> Ha nincs megadva hozzárendelése létezik-e."
  overload: System.ComponentModel.TypeDescriptor.GetAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  id: GetAttributes(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Object)
  nameWithType: TypeDescriptor.GetAttributes(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő attribútumai gyűjteményét adja vissza."
  remarks: "A által visszaadott attribútumokat a <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>metódus az eredeti összetevő forrásból extender szolgáltatók által listázása dinamikusan módosítható (<xref:System.ComponentModel.IExtenderProvider>), szolgáltatások szűréséhez (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), és a szűrők attribútum.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.ComponentModel.IExtenderProvider> </xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>       Az egyéni attribútum definiált <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>beállítása `true`, felül kell bírálnia a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonságot, ami.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Az attribútum összes példánya esetén egyedi, bírálja felül <xref:System.Attribute.TypeId%2A?displayProperty=fullName>vissza az objektum azonossága az attribútum.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Ha csak bizonyos esetekben az attribútum egyediek, az érték visszaadása <xref:System.Attribute.TypeId%2A?displayProperty=fullName>azokban az esetekben, amely alakítanák vissza egyenlőség.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Egyes attribútumok például egy konstruktor paraméter, amely különbséglemezként funkcionál egy egyedi kulcsot kell. Ezek az attribútumok vissza a konstruktorparamétert, az értékét a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonság.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Alapértelmezett végrehajtásának <xref:System.Attribute.TypeId%2A?displayProperty=fullName>adja vissza a típus azonosító értékének függetlenül a <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>tulajdonság.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> Ahhoz, hogy több példányát vissza egy <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>attribútumot a <xref:System.ComponentModel.AttributeCollection>, az attribútum felül kell bírálnia a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonság.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  example:
  - For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Az összetevő, amelynek le szeretné kérdezni az attribútumok."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Egy <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> tartalmazó összetevő attribútumait. Ha <code> component </code> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ez a módszer egy üres gyűjteményt adja vissza."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  id: GetAttributes(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Type)
  nameWithType: TypeDescriptor.GetAttributes(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott típusú összetevő-attribútumainak gyűjteményének beolvasása."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát.       Rendelkező attribútumok esetén <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>beállítása `true`, az attribútumgyűjtés eltávolítja az ismétlődő példányok.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Ezek a példányok, amelyben a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonság egyenlő értéket adja vissza.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>       Az egyéni attribútum definiált <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>beállítása `true`, felül kell bírálnia a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonságot, ami.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Az attribútum összes példánya esetén egyedi, bírálja felül <xref:System.Attribute.TypeId%2A?displayProperty=fullName>vissza az objektum azonossága az attribútum.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Ha csak bizonyos esetekben az attribútum egyediek, az érték visszaadása <xref:System.Attribute.TypeId%2A?displayProperty=fullName>azokban az esetekben, amely alakítanák vissza egyenlőség.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Egyes attribútumok például egy konstruktor paraméter, amely különbséglemezként funkcionál egy egyedi kulcsot kell. Ezek az attribútumok vissza a konstruktorparamétert, az értékét a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonság.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Alapértelmezett végrehajtásának <xref:System.Attribute.TypeId%2A?displayProperty=fullName>adja vissza a típus azonosító értékének függetlenül a <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>tulajdonság.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> Ahhoz, hogy több példányát vissza egy <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>attribútumot a <xref:System.ComponentModel.AttributeCollection>, az attribútum felül kell bírálnia a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonság.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Egy <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> az összetevő típusú attribútumokkal. Ha az összetevő <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ez a módszer egy üres gyűjteményt adja vissza."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  id: GetAttributes(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetAttributes(Object,Boolean)
  nameWithType: TypeDescriptor.GetAttributes(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő és, hogy létrejött-e egy egyéni típusleíró jelző logikai érték attribútumai gyűjteményének beolvasása."
  remarks: "A által visszaadott attribútumokat a <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>metódus az eredeti forrásból összetevők listázása extender szolgáltatók által dinamikusan módosítható (<xref:System.ComponentModel.IExtenderProvider>), szolgáltatások szűréséhez (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), és a szűrők attribútum.</xref:System.ComponentModel.Design.ITypeDescriptorFilterService> </xref:System.ComponentModel.IExtenderProvider> </xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>       Az egyéni attribútum definiált <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>beállítása `true`, felül kell bírálnia a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonságot, ami.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> Az attribútum összes példánya esetén egyedi, bírálja felül <xref:System.Attribute.TypeId%2A?displayProperty=fullName>vissza az objektum azonossága az attribútum.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Ha csak bizonyos esetekben az attribútum egyediek, az érték visszaadása <xref:System.Attribute.TypeId%2A?displayProperty=fullName>azokban az esetekben, amely alakítanák vissza egyenlőség.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> Egyes attribútumok például egy konstruktor paraméter, amely különbséglemezként funkcionál egy egyedi kulcsot kell. Ezek az attribútumok vissza a konstruktorparamétert, az értékét a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonság.</xref:System.Attribute.TypeId%2A?displayProperty=fullName>      > [!NOTE] > Alapértelmezett végrehajtásának <xref:System.Attribute.TypeId%2A?displayProperty=fullName>adja vissza a típus azonosító értékének függetlenül a <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>tulajdonság.</xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName> </xref:System.Attribute.TypeId%2A?displayProperty=fullName> Ahhoz, hogy több példányát vissza egy <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>attribútumot a <xref:System.ComponentModel.AttributeCollection>, az attribútum felül kell bírálnia a <xref:System.Attribute.TypeId%2A?displayProperty=fullName>tulajdonság.</xref:System.Attribute.TypeId%2A?displayProperty=fullName> </xref:System.ComponentModel.AttributeCollection> </xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=fullName>"
  syntax:
    content: public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Az összetevő, amelynek le szeretné kérdezni az attribútumok."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az egyéni típusleíró attribútumok alapterv készletének használata, ha a `component` típusú <xref href=&quot;System.ComponentModel.ICustomTypeDescriptor&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Egy <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> összetevő attribútumokkal. Ha az összetevő <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ez a módszer egy üres gyűjteményt adja vissza."
  overload: System.ComponentModel.TypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  id: GetClassName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Object)
  nameWithType: TypeDescriptor.GetClassName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő használja az alapértelmezett típusleíró az osztály nevét adja vissza."
  remarks: "Általában ez a módszer adja vissza a teljes <xref:System.Type>nevet a `component` paramétertípus.</xref:System.Type> Az osztály nevét a gombhoz például &quot;System.Windows.Forms.Button&quot; lesz. Ha `component` megvalósítja <xref:System.ComponentModel.ICustomTypeDescriptor>, képes megjeleníteni egy másik nevet.</xref:System.ComponentModel.ICustomTypeDescriptor>       Ez a módszer megegyezik a túlterhelt <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>metódust használ egy második paramétere `false`.</xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>"
  syntax:
    content: public static string GetClassName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "A <xref:System.Object>kívánt osztály neve.</xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>az osztály nevét a megadott összetevő tartalmazó.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  id: GetClassName(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Type)
  nameWithType: TypeDescriptor.GetClassName(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott típus esetében az osztály nevét adja vissza."
  remarks: "Ez a módszer a gyorsítótárazott egyéni típusleíró a típushoz tartozó osztály nevét használja."
  syntax:
    content: public static string GetClassName (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    return:
      type: System.String
      description: "A <xref:System.String>tartalmazó osztály nevét a megadott összetevőtípust.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>componentType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  id: GetClassName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetClassName(Object,Boolean)
  nameWithType: TypeDescriptor.GetClassName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott elem egyedi típus leíró segítségével az osztály nevét adja vissza."
  remarks: "Általában ez a módszer adja vissza a teljes <xref:System.Type>nevet a `component` paramétertípus.</xref:System.Type> Az osztály nevét a gombhoz például &quot;System.Windows.Forms.Button&quot; lesz. Ha a `component` paraméter megvalósítja <xref:System.ComponentModel.ICustomTypeDescriptor>, képes megjeleníteni egy másik nevet.</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public static string GetClassName (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "A <xref:System.Object>kívánt osztály neve.</xref:System.Object>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>figyelembe kell venni az egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "A <xref:System.String>az osztály nevét a megadott összetevő tartalmazó.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  id: GetComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetComponentName(Object)
  nameWithType: TypeDescriptor.GetComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő használja az alapértelmezett típusleíró nevét adja vissza."
  remarks: "Általában ez a metódus nevét adja vissza a hely összetevő, ha van ilyen. Az osztály nevét a gombhoz például &quot;System.Windows.Forms.Button&quot; lesz.       Ez a módszer megegyezik a túlterhelt <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>metódust használ egy második paramétere `false`.</xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>       Ez a módszer egy összetevő egy példányának nevének beolvasására tervezés közben használatos."
  syntax:
    content: public static string GetComponentName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "A <xref:System.Object>kívánt osztály neve.</xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>a megadott összetevő nevét tartalmazó vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs összetevő név.</xref:System.String>"
  overload: System.ComponentModel.TypeDescriptor.GetComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  id: GetComponentName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetComponentName(Object,Boolean)
  nameWithType: TypeDescriptor.GetComponentName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő egyéni típus leíró segítségével nevét adja vissza."
  remarks: "Ez a módszer egy összetevő egy példányának nevének beolvasására tervezés közben használatos. Általában ez a metódus nevét adja vissza a hely összetevő, ha van ilyen. Az osztály nevét a gombhoz például &quot;System.Windows.Forms.Button&quot; lesz. Ha az összetevő valósítja meg a <xref:System.ComponentModel.ICustomTypeDescriptor>felületet, képes megjeleníteni egy másik nevet.</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public static string GetComponentName (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "A <xref:System.Object>kívánt osztály neve.</xref:System.Object>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>figyelembe kell venni az egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Az osztály nevét a megadott összetevő vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs összetevő név."
  overload: System.ComponentModel.TypeDescriptor.GetComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  id: GetConverter(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Object)
  nameWithType: TypeDescriptor.GetConverter(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő típusú olyan típuskonvertert adja vissza."
  remarks: "Ez a módszer egy megfelelő típuskonverternek megkeresi <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> megkeresésével Ha nem talál egy <xref:System.ComponentModel.TypeConverterAttribute>, amíg nem talál egy egyszerű típusú bejárja az osztály alaposztálya hierarchiáját.</xref:System.ComponentModel.TypeConverterAttribute>       Ez a módszer megegyezik a túlterhelt <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>metódust használ egy második paramétere `false`.</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>"
  example:
  - For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Az átalakító az beszerzése az összetevő."
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> a megadott összetevő."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  id: GetConverter(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Type)
  nameWithType: TypeDescriptor.GetConverter(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott típus olyan típuskonvertert adja vissza."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát.       Ez a módszer megkeresi a megfelelő típuskonverternek <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> megkeresésével Ha nem talál egy <xref:System.ComponentModel.TypeConverterAttribute>, amíg nem talál egy egyszerű típusú bejárja az osztály alaposztálya hierarchiáját.</xref:System.ComponentModel.TypeConverterAttribute>"
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> a megadott típus esetében."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  id: GetConverter(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetConverter(Object,Boolean)
  nameWithType: TypeDescriptor.GetConverter(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő egy egyéni típus leíróval típusú olyan típuskonvertert adja vissza."
  remarks: "Ezzel a módszerrel úgy, hogy egy <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> található megkeresi a megfelelő típusú átalakító Ha nem talál egy <xref:System.ComponentModel.TypeConverterAttribute>, amíg nem talál egy egyszerű típusú bejárja az osztály alaposztálya hierarchiáját.</xref:System.ComponentModel.TypeConverterAttribute>"
  syntax:
    content: public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Az átalakító az beszerzése az összetevő."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>figyelembe kell venni az egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> a megadott összetevő."
  overload: System.ComponentModel.TypeDescriptor.GetConverter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  id: GetDefaultEvent(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Object)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő alapértelmezett eseménye adja vissza."
  remarks: "Ez a módszer megegyezik a túlterhelt <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>metódust használ egy második paramétere `false`.</xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>"
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Az esemény az beszerzése az összetevőt."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> az alapértelmezett eseményhez vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincsenek események."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  id: GetDefaultEvent(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Type)
  nameWithType: TypeDescriptor.GetDefaultEvent(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott típusú összetevő alapértelmezett eseményt adja vissza."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát."
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> az alapértelmezett eseményhez vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincsenek események."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  id: GetDefaultEvent(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Az alapértelmezett esemény egy összetevő egy egyéni típus leíróval adja vissza."
  syntax:
    content: public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Az esemény az beszerzése az összetevőt."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>figyelembe kell venni az egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> az alapértelmezett eseményhez vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincsenek események."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  id: GetDefaultProperty(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Object)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Az alapértelmezett tulajdonság a megadott összetevő adja vissza."
  remarks: "Ha a `component` paraméter `null`, ez a metódus visszaadja `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Az összetevő a vonatkozó alapértelmezett tulajdonság beolvasása."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , ha az alapértelmezett tulajdonság vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincsenek tulajdonságok."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  id: GetDefaultProperty(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Type)
  nameWithType: TypeDescriptor.GetDefaultProperty(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Az alapértelmezett tulajdonság a megadott típusú összetevő adja vissza."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát.       Ha a `componentType` paraméter `null`, ez a metódus visszaadja `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "Egy <xref:System.Type>, amely jelöli az osztály lekérdezni a tulajdonság tartalmát.</xref:System.Type>"
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , ha az alapértelmezett tulajdonság vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincsenek tulajdonságok."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  id: GetDefaultProperty(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Az alapértelmezett tulajdonság a megadott elem egy egyéni típus leíróval adja vissza."
  remarks: "Ha a `component` paraméter `null`, ez a metódus visszaadja `null`."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Az összetevő a vonatkozó alapértelmezett tulajdonság beolvasása."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>figyelembe kell venni az egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , ha az alapértelmezett tulajdonság vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincsenek tulajdonságok."
  overload: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  id: GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Object,Type)
  nameWithType: TypeDescriptor.GetEditor(Object,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott alaptípus szerkesztővé lekéri a megadott összetevő."
  remarks: "Milyen típusú `editorBaseType` általában <xref:System.Drawing.Design.UITypeEditor>, de használhatja más tárolótípus is (például <xref:System.ComponentModel.ComponentEditor>és <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       A tulajdonsághoz több szerkesztők adhat meg. A szerkesztő szeretné használni ezt a módszert használja."
  syntax:
    content: public static object GetEditor (object component, Type editorBaseType);
    parameters:
    - id: component
      type: System.Object
      description: "Az összetevő szerkesztője eléréséhez."
    - id: editorBaseType
      type: System.Type
      description: "A <xref:System.Type>, amely jelöli az alaptípus a keresett szerkesztő.</xref:System.Type>"
    return:
      type: System.Object
      description: "A szerkesztő, amely a megadott szerkesztőtípushoz: konvertálható példányának vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs a kért típusú szerkesztő található."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  id: GetEditor(System.Type,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Type,Type)
  nameWithType: TypeDescriptor.GetEditor(Type,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Type,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott típus esetében a megadott alap típussal rendelkező szerkesztővé adja vissza."
  remarks: "Milyen típusú `editorBaseType` általában <xref:System.Drawing.Design.UITypeEditor>, de használhatja más tárolótípus is (például <xref:System.ComponentModel.ComponentEditor>és <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       Több szerkesztők egy definiálhat. Ez a módszer segítségével válassza ki, amelyiket használni szeretné.       Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát."
  syntax:
    content: public static object GetEditor (Type type, Type editorBaseType);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    - id: editorBaseType
      type: System.Type
      description: "A <xref:System.Type>, amely jelöli az alaptípus a található próbált szerkesztőben.</xref:System.Type>"
    return:
      type: System.Object
      description: "A szerkesztő objektum, amely a megadott alaptípus konvertálható példányának vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs a kért típusú szerkesztő található."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  id: GetEditor(System.Object,System.Type,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEditor(Object,Type,Boolean)
  nameWithType: TypeDescriptor.GetEditor(Object,Type,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott alaptípus és a megadott összetevő egyéni típusleíró szerkesztő adja vissza."
  remarks: "Milyen típusú `editorBaseType` általában <xref:System.Drawing.Design.UITypeEditor>, de használhatja más tárolótípus is (például <xref:System.ComponentModel.ComponentEditor>és <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>       A tulajdonsághoz több szerkesztők adhat meg. A szerkesztő szeretné használni ezt a módszert használja."
  syntax:
    content: public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Az összetevő szerkesztője eléréséhez."
    - id: editorBaseType
      type: System.Type
      description: "A <xref:System.Type>, amely jelöli az alaptípus a keresett szerkesztő.</xref:System.Type>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "A jelzőt, jelezve, hogy egyéni típusinformációt leírás érdemes figyelembe venni."
    return:
      type: System.Object
      description: "A szerkesztő, amely a megadott szerkesztőtípushoz: konvertálható példányának vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs a kért típusú szerkesztő található."
  overload: System.ComponentModel.TypeDescriptor.GetEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>or <code>editorBaseType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  id: GetEvents(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object)
  nameWithType: TypeDescriptor.GetEvents(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő események gyűjteményét adja vissza."
  remarks: "Lekéri az események gyűjteménye, amelyek az adott `component` paraméter példányt biztosít. Ez a gyűjtemény eltérhet az eseménycsoportot az osztály tartalmazza. Ha a `component` paraméter van-e elhelyezni, a hely hozzáadhat és eltávolíthat további események.       Ha `component` van `null`, majd egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  example:
  - For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Az események az összetevő."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> az események ehhez az összetevőhöz."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  id: GetEvents(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Type)
  nameWithType: TypeDescriptor.GetEvents(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott típusú összetevő eseményeinek gyűjtése adja vissza."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát.       Ha a `componentType` paraméter `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> az események ehhez az összetevőhöz."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  id: GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott tömb attribútumok használata szűrőként megadott összetevő események gyűjteményét adja vissza."
  remarks: "Az eseményeket a `component` paraméter eltérhet az események olyan osztályhoz tartozik, mert a hely hozzáadhat és eltávolíthat események, ha a `component` paraméter van-e elhelyezni.       A `attributes` tömb lehet vegyesen <xref:System.Type>és <xref:System.Attribute>objektumok.</xref:System.Attribute> </xref:System.Type> Szűrés van definiálva a következő szabályok: - A <xref:System.Type>helyettesítő karakter; a rendszer bármely esemény, amelynek megegyezik a <xref:System.Type>a készlet attribútumok.</xref:System.Type> </xref:System.Type>      – Ha az esemény nem rendelkezik egy <xref:System.Attribute>ugyanahhoz az osztályhoz, az esemény nem szerepel a visszaadott tömb.</xref:System.Attribute>      -Ha az attribútum egy példányát a <xref:System.Attribute>osztály, az esemény pontos egyezésűnek kell lennie, vagy nem szerepel a visszaadott tömb.</xref:System.Attribute>      Ha egy <xref:System.Attribute>példány megadva és az alapértelmezett esemény, szerepel a visszaadott tömb akkor is, ha a egyetlen példánya van a <xref:System.Attribute>abban az esetben.</xref:System.Attribute> </xref:System.Attribute>       Ha `component` van `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);
    parameters:
    - id: component
      type: System.Object
      description: "Az események az összetevő."
    - id: attributes
      type: System.Attribute[]
      description: "Típusú tömb <xref:System.Attribute>használható szűrőként.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> az események, amelyek megfelelnek a megadott attribútumok ehhez az összetevőhöz."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  id: GetEvents(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A gyűjtemény meghatározott összetevője egy egyéni típus leíróval események adja vissza."
  remarks: "Ez a módszer lekéri események gyűjteménye, amelyek az adott `component` paraméter példányt biztosít. Ez az osztály biztosít az események a készletből eltérőek lehetnek. Ha a `component` paraméter van-e elhelyezni, a hely hozzáadhat és eltávolíthat további események.       Ha `component` van `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Az események az összetevő."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>figyelembe kell venni az egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> az események ehhez az összetevőhöz."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  id: GetEvents(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Type,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott tömb attribútumok használata szűrőként összetevő megadott típusú események gyűjteményét adja vissza."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát.       A `attributes` paramétertömb rendelkezhet vegyesen <xref:System.Type>és <xref:System.Attribute>objektumok.</xref:System.Attribute> </xref:System.Type> Szűrés van definiálva a következő szabályok: - A <xref:System.Type>helyettesítő karakter; a rendszer bármely esemény, amelynek megegyezik a <xref:System.Type>a készlet attribútumok.</xref:System.Type> </xref:System.Type>      – Ha az esemény nem rendelkezik egy <xref:System.Attribute>ugyanahhoz az osztályhoz, az esemény nem szerepel a visszaadott tömb.</xref:System.Attribute>      -Ha az attribútum egy példányát a <xref:System.Attribute>osztály, az esemény pontos egyezésűnek kell lennie, vagy nem szerepel a visszaadott tömb.</xref:System.Attribute>      Ha egy <xref:System.Attribute>példány megadva és az alapértelmezett esemény, szerepel a visszaadott tömb akkor is, ha a egyetlen példánya van a <xref:System.Attribute>abban az esetben.</xref:System.Attribute> </xref:System.Attribute>       Ha a `componentType` paraméter `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "Típusú tömb <xref:System.Attribute>használható szűrőként.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> az események, amelyek megfelelnek a megadott attribútumok ehhez az összetevőhöz."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  id: GetEvents(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetEvents(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A gyűjtemény egy adott összetevő a megadott tömb attribútumok használata szűrőként és egyéni típusleíró használata események adja vissza."
  remarks: "Az eseményeket a `component` paraméter eltérhet az események olyan osztályhoz tartozik, mert a hely hozzáadhat és eltávolíthat események, ha a `component` paraméter van-e elhelyezni.       A `attributes` paramétertömb rendelkezhet vegyesen <xref:System.Type>és <xref:System.Attribute>objektumok.</xref:System.Attribute> </xref:System.Type> Szűrés van definiálva a következő szabályok: - A <xref:System.Type>helyettesítő karakter; a rendszer bármely esemény, amelynek megegyezik a <xref:System.Type>a készlet attribútumok.</xref:System.Type> </xref:System.Type>      – Ha az esemény nem rendelkezik egy <xref:System.Attribute>ugyanahhoz az osztályhoz, az esemény nem szerepel a visszaadott tömb.</xref:System.Attribute>      -Ha az attribútum egy példányát a <xref:System.Attribute>osztály, az esemény pontos egyezésűnek kell lennie, vagy nem szerepel a visszaadott tömb.</xref:System.Attribute>      Ha egy <xref:System.Attribute>példány megadva és az alapértelmezett esemény, szerepel a visszaadott tömb akkor is, ha a egyetlen példánya van a <xref:System.Attribute>abban az esetben.</xref:System.Attribute> </xref:System.Attribute>       Ha `component` van `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  syntax:
    content: public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "Az események az összetevő."
    - id: attributes
      type: System.Attribute[]
      description: "Típusú tömb <xref:System.Attribute>használandó szűrőként.</xref:System.Attribute>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>figyelembe kell venni az egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Egy <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> az események, amelyek megfelelnek a megadott attribútumok ehhez az összetevőhöz."
  overload: System.ComponentModel.TypeDescriptor.GetEvents*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  id: GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptor.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Az összetevő teljesen minősített nevét adja vissza."
  remarks: "Sok esetben a GetFullComponentName metódus visszaadható értéke megegyezik a <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A>metódus.</xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> Azonban ha az összetevő egy beágyazott tárolóban található, vagy más beágyazott szemantikájú, akkor térhetnek vissza egy másik teljesen minősített nevet."
  syntax:
    content: public static string GetFullComponentName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "A <xref href=&quot;System.ComponentModel.Component&quot;> </xref> található nevét."
    return:
      type: System.String
      description: "A megadott összetevő a teljesen minősített neve vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha az összetevő nincs neve."
  overload: System.ComponentModel.TypeDescriptor.GetFullComponentName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object)
  nameWithType: TypeDescriptor.GetProperties(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő tulajdonságainak gyűjteményét adja vissza."
  remarks: "Egy összetevő tulajdonságai eltérhet egy osztály tulajdonságait, mert a hely hozzáadhat és eltávolíthat a tulajdonságokat, ha az összetevő van-e elhelyezni.       Ha a `component` paraméter `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  example:
  - "The following code example demonstrates the use of the GetProperties method to access the properties of a control. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.  \n  \n [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/add/codesnippet/visualbasic/m-system.componentmodel._38_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerServices#8](~/add/codesnippet/csharp/m-system.componentmodel._38_1.cs)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);
    parameters:
    - id: component
      type: System.Object
      description: "A tulajdonságait olvassa be az összetevő."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> a megadott összetevő tulajdonságokkal."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  id: GetProperties(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Type)
  nameWithType: TypeDescriptor.GetProperties(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott típusú összetevőt tulajdonságainak gyűjteményét adja vissza."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát.       Ha a `componentType` paraméter `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);
    parameters:
    - id: componentType
      type: System.Type
      description: "Egy <xref:System.Type>, amely jelöli az összetevő megszerezni a Tulajdonságok tartalmát.</xref:System.Type>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> a tulajdonságokkal a megadott típusú összetevőt."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  id: GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott tömb attribútumok használata szűrőként meghatározott összetevője tulajdonságainak gyűjteményét adja vissza."
  remarks: "A tulajdonságok a `component` paraméter egy osztály tulajdonságai eltérőek lehetnek, mert a hely hozzáadhat és eltávolíthat a tulajdonságokat, ha a `component` paraméter van-e elhelyezni.       A `attributes` paramétertömb a tömb szűrésére használatos. Szűrés határozzák meg a következő szabályokat: – Ha egy tulajdonság nem rendelkezik egy <xref:System.Attribute>ugyanahhoz az osztályhoz, a tulajdonság nem szerepel a visszaadott tömb.</xref:System.Attribute>      -Ha az attribútum egy példányát a <xref:System.Attribute>osztály, a tulajdonság egy pontosan egyezniük kell, vagy nem szerepel a visszaadott tömb.</xref:System.Attribute>      Ha egy <xref:System.Attribute>példány megadva és az alapértelmezett tulajdonság, szerepel a visszaadott tömb akkor is, ha a egyetlen példánya van a <xref:System.Attribute>tulajdonságában.</xref:System.Attribute> </xref:System.Attribute>      -Ha `attributes` van egy alapértelmezett attribútuma, a GetProperties metódus metódus felel az esetben, ha a tulajdonság nem rendelkezik az attribútum.       Ha `component` van `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  example:
  - "The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.  \n  \n [!code-cs[PropertyTabExample#2](~/add/codesnippet/csharp/0d160e65-8e23-4623-ad72-_1.cs)]\n [!code-cpp[PropertyTabExample#2](~/add/codesnippet/cpp/0d160e65-8e23-4623-ad72-_1.cpp)]\n [!code-vb[PropertyTabExample#2](~/add/codesnippet/visualbasic/0d160e65-8e23-4623-ad72-_1.vb)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);
    parameters:
    - id: component
      type: System.Object
      description: "A tulajdonságait olvassa be az összetevő."
    - id: attributes
      type: System.Attribute[]
      description: "Típusú tömb <xref:System.Attribute>használandó szűrőként.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> a tulajdonságokkal, amelyek megfelelnek a megadott összetevő megadott attribútumait."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  id: GetProperties(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő használja az alapértelmezett típusleíró tulajdonságainak gyűjteményét adja vissza."
  remarks: "A tulajdonságok a `component` paraméter egy osztály tulajdonságai eltérőek lehetnek, mert a hely hozzáadhat és eltávolíthat a tulajdonságokat, ha a `component` paraméter van-e elhelyezni.       Ha `component` van `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "A tulajdonságait olvassa be az összetevő."
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>nem érdemes egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> a megadott összetevő tulajdonságait."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  id: GetProperties(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Type,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott tömb attribútumok használata szűrőként összetevő megadott típusú tulajdonságok gyűjteményét adja vissza."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát.       A `attributes` paramétertömb a tömb szűrésére használatos. Szűrés határozzák meg a következő szabályokat: – Ha egy tulajdonság nem rendelkezik egy <xref:System.Attribute>ugyanahhoz az osztályhoz, a tulajdonság nem szerepel a visszaadott tömb.</xref:System.Attribute>      -Ha az attribútum egy példányát a <xref:System.Attribute>osztály, a tulajdonság egy pontosan egyezniük kell, vagy nem szerepel a visszaadott tömb.</xref:System.Attribute>      Ha egy <xref:System.Attribute>példány megadva és az alapértelmezett tulajdonság, szerepel a visszaadott tömb akkor is, ha a egyetlen példánya van a <xref:System.Attribute>tulajdonságában.</xref:System.Attribute> </xref:System.Attribute>      -Ha `attributes` van egy alapértelmezett attribútuma, a GetProperties metódus metódus felel az esetben, ha a tulajdonság nem rendelkezik az attribútum.       Ha a `componentType` paraméter `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  example:
  - "The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.  \n  \n [!code-cs[PropertyTabExample#2](~/add/codesnippet/csharp/af245915-0d17-4307-99bf-_1.cs)]\n [!code-cpp[PropertyTabExample#2](~/add/codesnippet/cpp/af245915-0d17-4307-99bf-_1.cpp)]\n [!code-vb[PropertyTabExample#2](~/add/codesnippet/visualbasic/af245915-0d17-4307-99bf-_1.vb)]"
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);
    parameters:
    - id: componentType
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    - id: attributes
      type: System.Attribute[]
      description: "Típusú tömb <xref:System.Attribute>használandó szűrőként.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> a tulajdonságokkal, amelyek megfelelnek a megadott attribútumok az ilyen típusú összetevőt."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  id: GetProperties(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProperties(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott tömb attribútumok használata szűrőként és egyéni típusleíró használata a megadott összetevő tulajdonságainak gyűjteményét adja vissza."
  remarks: "A tulajdonságait egy `component` tulajdonságai közül egy osztály eltérőek lehetnek, mert a hely hozzáadhat és eltávolíthat a tulajdonságokat, ha a `component` van-e elhelyezni.       A `attributes` paramétertömb a tömb szűrésére használatos. Szűrés határozzák meg a következő szabályokat: – Ha egy tulajdonság nem rendelkezik egy <xref:System.Attribute>ugyanahhoz az osztályhoz, a tulajdonság nem szerepel a visszaadott tömb.</xref:System.Attribute>      -Ha az attribútum egy példányát a <xref:System.Attribute>osztály, a tulajdonság egy pontosan egyezniük kell, vagy nem szerepel a visszaadott tömb.</xref:System.Attribute>      Ha egy <xref:System.Attribute>példány megadva és az alapértelmezett tulajdonság, szerepel a visszaadott tömb akkor is, ha a egyetlen példánya van a <xref:System.Attribute>tulajdonságában.</xref:System.Attribute> </xref:System.Attribute>      -Ha `attributes` van egy alapértelmezett attribútuma, a GetProperties metódus metódus felel az esetben, ha a tulajdonság nem rendelkezik az attribútum.       Ha a `component` paraméter `null`, egy üres gyűjteményt adja vissza.       A visszaadott gyűjtemény sorrendje nem biztos, hogy megegyezik a hívásokat, ezért mindig sorrendben használat előtt."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);
    parameters:
    - id: component
      type: System.Object
      description: "A tulajdonságait olvassa be az összetevő."
    - id: attributes
      type: System.Attribute[]
      description: "Típusú tömb <xref:System.Attribute>használandó szűrőként.</xref:System.Attribute>"
    - id: noCustomTypeDesc
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>figyelembe kell venni az egyéni típusinformációt leírása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> az események, amelyek megfelelnek a megadott összetevő megadott attribútumait."
  overload: System.ComponentModel.TypeDescriptor.GetProperties*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>component</code>a folyamatok közötti távoli használatú objektumok van."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  id: GetProvider(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProvider(Object)
  nameWithType: TypeDescriptor.GetProvider(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott összetevő típusleírás-szolgáltató adja vissza."
  remarks: "A <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>metódus mindig ad vissza egy típusleírás-szolgáltató.</xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> Még az alapértelmezett <xref:System.ComponentModel.TypeDescriptor>megvalósítási <xref:System.ComponentModel.TypeDescriptionProvider>.</xref:System.ComponentModel.TypeDescriptionProvider> épül</xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "A cél-összetevő példányának."
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> a megadott összetevő társított."
  overload: System.ComponentModel.TypeDescriptor.GetProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  id: GetProvider(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetProvider(Type)
  nameWithType: TypeDescriptor.GetProvider(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A megadott típus esetében típusleírás-szolgáltató adja vissza."
  remarks: "A <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>metódus mindig ad vissza egy típusleírás-szolgáltató.</xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> Még az alapértelmezett <xref:System.ComponentModel.TypeDescriptor>megvalósítási <xref:System.ComponentModel.TypeDescriptionProvider>.</xref:System.ComponentModel.TypeDescriptionProvider> épül</xref:System.ComponentModel.TypeDescriptor>"
  syntax:
    content: public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> a megadott típus társítva."
  overload: System.ComponentModel.TypeDescriptor.GetProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  id: GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptor.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Értéket ad vissza egy <xref:System.Type>végrehajtásához reflexiós, megadott egy objektum, amely használható.</xref:System.Type>"
  remarks: "A <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>metódus egy alacsony szintű verziója telepítve a <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metódus.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>standard reflexiós elleni objektum végrehajtani, ha nincs egyéni típusleíró is található, általában használatos.</xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>"
  syntax:
    content: public static Type GetReflectionType (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "A cél-összetevő példányának."
    return:
      type: System.Type
      description: "A <xref:System.Type>a megadott objektumra.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  id: GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptor.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Értéket ad vissza egy <xref:System.Type>végrehajtásához reflexiós, kap egy osztálytípus, amely használható.</xref:System.Type>"
  remarks: "A <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>metódus egy alacsony szintű verziója telepítve a <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>metódus.</xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> </xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>standard reflexiós osztályával végrehajtani, ha nincs egyéni típusleíró is található, általában használatos.</xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>"
  syntax:
    content: public static Type GetReflectionType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
    return:
      type: System.Type
      description: "Egy <xref:System.Type>, a megadott osztály</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.GetReflectionType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.InterfaceType
  id: InterfaceType
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
  fullName: System.ComponentModel.TypeDescriptor.InterfaceType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lekérdezi egy olyan típusleírás-szolgáltató az összes illesztő jelölő típus."
  remarks: "A InterfaceType tulajdonság lekérdezi egy <xref:System.Type>objektum, amely képes továbbadni a <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>módszerek meghatározása egy illesztőfelület-típusok típusleírás-szolgáltató.</xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> </xref:System.Type>"
  syntax:
    content: public static Type InterfaceType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>egy egyéni típusleírás-szolgáltató, amely jelöli, az összes adaptertípusok.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  id: Refresh(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Object)
  nameWithType: TypeDescriptor.Refresh(Object)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Törli a tulajdonságok és az események a megadott elem a gyorsítótárból."
  remarks: "Tulajdonságok és események által gyorsítótárazott <xref:System.ComponentModel.TypeDescriptor>sebességének.</xref:System.ComponentModel.TypeDescriptor> Ezek általában állandó objektum élettartama idején. Azonban extender szolgáltatók és -tervezőknek is csoportjának módosítása az objektum tulajdonságainak. Ha így tesznek, meghívják kell ezt a metódust a tulajdonság és az esemény leírók az objektum törlése. Ez a módszer csak tervezés közben használatos. Futási idő alatt nem használható.       Ez a módszer is kivált egy <xref:System.ComponentModel.TypeDescriptor.Refreshed>eseményt, amikor a Tulajdonságok vagy események az összetevő-módosítási.</xref:System.ComponentModel.TypeDescriptor.Refreshed> Ez az esemény csak akkor következik be, ha egy korábbi hívás történt a <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>vagy <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>módszer, amelynek gyorsítótárazza az adatokat.</xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  example:
  - For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.
  syntax:
    content: public static void Refresh (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Egy összetevő, amelynek a tulajdonságait vagy események módosult."
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  id: Refresh(System.Reflection.Assembly)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Assembly)
  nameWithType: TypeDescriptor.Refresh(Assembly)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Assembly)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A tulajdonságok és az események törlése a megadott szerelvény a gyorsítótárból."
  remarks: "Tulajdonságok és események által gyorsítótárazott <xref:System.ComponentModel.TypeDescriptor>sebességének.</xref:System.ComponentModel.TypeDescriptor> Ezek általában állandó objektum élettartama idején. Azonban extender szolgáltatók és -tervezőknek is csoportjának módosítása az objektum tulajdonságainak. Ha így tesznek, akkor törölje a tulajdonság és az esemény az objektum leírók a metódus hívása. Ez a módszer csak tervezés közben használatos. Futási idő alatt nem használható.       A hívás kezdeményezése előtt a <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>metódus a gyorsítótár, meg kell hívnia a <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>módszere az adott szerelvény először gyorsítótárazza az információkat.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> </xref:System.ComponentModel.TypeDescriptor.Refresh%2A>       Ez a módszer is kivált egy <xref:System.ComponentModel.TypeDescriptor.Refreshed>esemény összes osztály, amely értesíti, ha a tulajdonság beállítása a változásaihoz szeretne értesíteni.</xref:System.ComponentModel.TypeDescriptor.Refreshed>"
  syntax:
    content: public static void Refresh (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "A <xref:System.Reflection.Assembly>, amely jelöli, hogy a szerelvény frissítéséhez.</xref:System.Reflection.Assembly> Minden egyes <xref:System.Type>a szerelvény lesz frissíthető.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  id: Refresh(System.Reflection.Module)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Module)
  nameWithType: TypeDescriptor.Refresh(Module)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Module)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Törli a tulajdonságok és az események a megadott modul a gyorsítótárból."
  remarks: "Tulajdonságok és események által gyorsítótárazott <xref:System.ComponentModel.TypeDescriptor>sebességének.</xref:System.ComponentModel.TypeDescriptor> Ezek általában állandó objektum élettartama idején. Azonban extender szolgáltatók és -tervezőknek is csoportjának módosítása az objektum tulajdonságainak. Ha így tesznek, akkor törölje a tulajdonság és az esemény az objektum leírók a metódus hívása. Ez a módszer csak tervezés közben használatos. Futási idő alatt nem használható.       A hívás kezdeményezése előtt a <xref:System.ComponentModel.TypeDescriptor.Refresh%2A>a gyorsítótár metódust meg kell hívnia a <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>metódus első gyorsítótárazza az információkat az adott modul.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> </xref:System.ComponentModel.TypeDescriptor.Refresh%2A>       Ez a módszer is kivált egy <xref:System.ComponentModel.TypeDescriptor.Refreshed>esemény összes osztály, amely értesíti, ha a tulajdonság beállítása a változásaihoz szeretne értesíteni.</xref:System.ComponentModel.TypeDescriptor.Refreshed>"
  syntax:
    content: public static void Refresh (System.Reflection.Module module);
    parameters:
    - id: module
      type: System.Reflection.Module
      description: "A <xref:System.Reflection.Module>, amely jelöli, hogy a modul frissítéséhez.</xref:System.Reflection.Module> Minden egyes <xref:System.Type>Ez a modul nem lesz frissíteni.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  id: Refresh(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refresh(Type)
  nameWithType: TypeDescriptor.Refresh(Type)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Törli a tulajdonságok és az események a megadott típusú összetevő a gyorsítótárból."
  remarks: "Hívás ezen verziója ezzel a módszerrel csak akkor, ha nem rendelkezik az objektum egy példányát.       Tulajdonságok és események által gyorsítótárazott <xref:System.ComponentModel.TypeDescriptor>sebességének.</xref:System.ComponentModel.TypeDescriptor> Ezek általában állandó objektum élettartama idején. Azonban extender szolgáltatók és -tervezőknek is csoportjának módosítása az objektum tulajdonságainak. Ha így tesznek, akkor törölje a tulajdonság és az esemény az objektum leírók a metódus hívása. Ez a módszer csak tervezés közben használatos. Futási idő alatt nem használható.       Ez a módszer is kivált egy <xref:System.ComponentModel.TypeDescriptor.Refreshed>eseményt, amikor a Tulajdonságok vagy események az összetevő-módosítási.</xref:System.ComponentModel.TypeDescriptor.Refreshed> Ez az esemény csak akkor következik be, ha egy korábbi hívás történt a <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>vagy <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>módszer, amelynek gyorsítótárazza az adatokat.</xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public static void Refresh (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.Refreshed
  id: Refreshed
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: Refreshed
  nameWithType: TypeDescriptor.Refreshed
  fullName: System.ComponentModel.TypeDescriptor.Refreshed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Akkor következik be, amikor egy összetevő a gyorsítótár nincs bejelölve."
  remarks: 'Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.
  syntax:
    content: public static event System.ComponentModel.RefreshEventHandler Refreshed;
    return:
      type: System.ComponentModel.RefreshEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  id: RemoveAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveAssociation(Object,Object)
  nameWithType: TypeDescriptor.RemoveAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Eltávolítja a két objektum közötti társítást."
  remarks: "A RemoveAssociation módszer által létrehozott két objektum közötti társítás eltávolítja a <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>metódus.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>       A <xref:System.WeakReference>szolgál az elsődleges és másodlagos objektum közötti társítás karbantartása; Ez a metódus, ezért nem befolyásolja lehet objektum nem véglegesített vagy szemétgyűjtés által visszaigényelt.</xref:System.WeakReference>"
  syntax:
    content: public static void RemoveAssociation (object primary, object secondary);
    parameters:
    - id: primary
      type: System.Object
      description: "Az elsődleges <xref:System.Object>.</xref:System.Object>"
    - id: secondary
      type: System.Object
      description: "A másodlagos <xref:System.Object>.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.RemoveAssociation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  id: RemoveAssociations(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveAssociations(Object)
  nameWithType: TypeDescriptor.RemoveAssociations(Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Eltávolít egy elsődleges objektumhoz tartozó összes társítását."
  remarks: "A RemoveAssociations metódus eltávolít egy elsődleges objektum és a másodlagos, hívások által létrehozott objektumok közötti összes társítását a <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>metódus.</xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>       A <xref:System.WeakReference>szolgál az elsődleges és másodlagos objektum közötti társítás karbantartása; ezért ez a metódus nem befolyásolja mikor vagy az elsődleges, másodlagos objektumok véglegesítése vagy szemétgyűjtés által visszaigényelt.</xref:System.WeakReference>"
  syntax:
    content: public static void RemoveAssociations (object primary);
    parameters:
    - id: primary
      type: System.Object
      description: "Az elsődleges <xref:System.Object>a társítást.</xref:System.Object>"
  overload: System.ComponentModel.TypeDescriptor.RemoveAssociations*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>primary</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Eltávolítja a korábban hozzáadott típusleírás-szolgáltató, amely a megadott objektum társítva."
  remarks: "Ez a módszer a korábban hozzáadott a típusleírás-szolgáltató eltávolítja a <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metódus.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> A szolgáltató eltávolítása egy <xref:System.ComponentModel.TypeDescriptor.Refreshed>a kapcsolódó objektum eseményre.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Használja a <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>módszert, ha meg kell hívnia a részlegesen megbízható kódból.</xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> eltávolítása."
    - id: instance
      type: System.Object
      description: "A cél-összetevő példányának."
  overload: System.ComponentModel.TypeDescriptor.RemoveProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Eltávolítja a korábban hozzáadott típusleírás-szolgáltató, amely a megadott típus társítva."
  remarks: "Ez a módszer a korábban hozzáadott a típusleírás-szolgáltató eltávolítja a <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metódus.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> A szolgáltató eltávolítása egy <xref:System.ComponentModel.TypeDescriptor.Refreshed>a társított típus eseményre.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Használja a <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>módszert, ha meg kell hívnia a részlegesen megbízható kódból.</xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> eltávolítása."
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.RemoveProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Eltávolítja a korábban hozzáadott típusleírás-szolgáltató, amely a megadott objektum társítva."
  remarks: "Ez a módszer a korábban hozzáadott a típusleírás-szolgáltató eltávolítja a <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>metódus.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> A szolgáltató eltávolítása egy <xref:System.ComponentModel.TypeDescriptor.Refreshed>a kapcsolódó objektum eseményre.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Ez a metódus hívása a részlegesen megbízható kódból. Ha <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>van megadva, a hívó regisztrálhatja a megadott példány szolgáltatót Ha típusára is részlegesen megbízható.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Használja a <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>módszert, ha nem szeretné hívható meg részlegesen megbízható kódból.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>"
  syntax:
    content: public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> eltávolítása."
    - id: instance
      type: System.Object
      description: "A cél-összetevő példányának."
  overload: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  id: RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: RemoveProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Eltávolítja a korábban hozzáadott típusleírás-szolgáltató, amely a megadott típus társítva."
  remarks: "Ez a módszer a korábban hozzáadott a típusleírás-szolgáltató eltávolítja a <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>metódus.</xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> A szolgáltató eltávolítása egy <xref:System.ComponentModel.TypeDescriptor.Refreshed>a társított típus eseményre.</xref:System.ComponentModel.TypeDescriptor.Refreshed>       Ez a metódus hívása a részlegesen megbízható kódból. Ha <xref:System.Security.Permissions.TypeDescriptorPermissionFlags>van megadva, a hívó tudja törölni a megadott típus szolgáltatót Ha is részlegesen megbízható.</xref:System.Security.Permissions.TypeDescriptorPermissionFlags>       Használja a <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>módszert, ha nem szeretné hívható meg részlegesen megbízható kódból.</xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>"
  syntax:
    content: public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);
    parameters:
    - id: provider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> eltávolítása."
    - id: type
      type: System.Type
      description: "A <xref:System.Type>a cél-összetevő.</xref:System.Type>"
  overload: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A paraméterek közül, amelyek <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  id: SortDescriptorArray(System.Collections.IList)
  parent: System.ComponentModel.TypeDescriptor
  langs:
  - csharp
  name: SortDescriptorArray(IList)
  nameWithType: TypeDescriptor.SortDescriptorArray(IList)
  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A név a leíró használatával leírók rendezi."
  syntax:
    content: public static void SortDescriptorArray (System.Collections.IList infos);
    parameters:
    - id: infos
      type: System.Collections.IList
      description: "Egy <xref:System.Collections.IList>tartalmazó rendezésénél a leírók.</xref:System.Collections.IList>"
  overload: System.ComponentModel.TypeDescriptor.SortDescriptorArray*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>infos</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes(Object,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes(Type,Attribute[])
  nameWithType: TypeDescriptor.AddAttributes(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.AddAttributes(Type,Attribute[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddEditorTable(Type,Hashtable)
  nameWithType: TypeDescriptor.AddEditorTable(Type,Hashtable)
  fullName: System.ComponentModel.TypeDescriptor.AddEditorTable(Type,Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProvider(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.AddProviderTransparent(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
  fullName: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler
- uid: System.ComponentModel.IComNativeDescriptorHandler
  parent: System.ComponentModel
  isExternal: false
  name: IComNativeDescriptorHandler
  nameWithType: IComNativeDescriptorHandler
  fullName: System.ComponentModel.IComNativeDescriptorHandler
- uid: System.ComponentModel.TypeDescriptor.ComObjectType
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
  fullName: System.ComponentModel.TypeDescriptor.ComObjectType
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateAssociation(Object,Object)
  nameWithType: TypeDescriptor.CreateAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.CreateAssociation(Object,Object)
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateDesigner(IComponent,Type)
  nameWithType: TypeDescriptor.CreateDesigner(IComponent,Type)
  fullName: System.ComponentModel.TypeDescriptor.CreateDesigner(IComponent,Type)
- uid: System.ComponentModel.Design.IDesigner
  parent: System.ComponentModel.Design
  isExternal: false
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent(Type,EventDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,EventDescriptor,Attribute[])
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateEvent(Type,String,Type,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateInstance(IServiceProvider,Type,Type[],Object[])
  nameWithType: TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
  fullName: System.ComponentModel.TypeDescriptor.CreateInstance(IServiceProvider,Type,Type[],Object[])
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty(Type,PropertyDescriptor,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,PropertyDescriptor,Attribute[])
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty(Type,String,Type,Attribute[])
  nameWithType: TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.CreateProperty(Type,String,Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAssociation(Type,Object)
  nameWithType: TypeDescriptor.GetAssociation(Type,Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAssociation(Type,Object)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Object)
  nameWithType: TypeDescriptor.GetAttributes(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object)
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Type)
  nameWithType: TypeDescriptor.GetAttributes(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Type)
- uid: System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes(Object,Boolean)
  nameWithType: TypeDescriptor.GetAttributes(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetAttributes(Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Object)
  nameWithType: TypeDescriptor.GetClassName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Type)
  nameWithType: TypeDescriptor.GetClassName(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Type)
- uid: System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName(Object,Boolean)
  nameWithType: TypeDescriptor.GetClassName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetClassName(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName(Object)
  nameWithType: TypeDescriptor.GetComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName(Object,Boolean)
  nameWithType: TypeDescriptor.GetComponentName(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetComponentName(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Object)
  nameWithType: TypeDescriptor.GetConverter(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Type)
  nameWithType: TypeDescriptor.GetConverter(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Type)
- uid: System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter(Object,Boolean)
  nameWithType: TypeDescriptor.GetConverter(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetConverter(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Object)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Type)
  nameWithType: TypeDescriptor.GetDefaultEvent(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Type)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultEvent(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultEvent(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Object)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Type)
  nameWithType: TypeDescriptor.GetDefaultProperty(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Type)
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty(Object,Boolean)
  nameWithType: TypeDescriptor.GetDefaultProperty(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetDefaultProperty(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Object,Type)
  nameWithType: TypeDescriptor.GetEditor(Object,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Type,Type)
  nameWithType: TypeDescriptor.GetEditor(Type,Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Type,Type)
- uid: System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor(Object,Type,Boolean)
  nameWithType: TypeDescriptor.GetEditor(Object,Type,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEditor(Object,Type,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object)
  nameWithType: TypeDescriptor.GetEvents(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object)
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Type)
  nameWithType: TypeDescriptor.GetEvents(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Type,Attribute[])
  nameWithType: TypeDescriptor.GetEvents(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetEvents(Object,Attribute[],Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetFullComponentName(Object)
  nameWithType: TypeDescriptor.GetFullComponentName(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetFullComponentName(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object)
  nameWithType: TypeDescriptor.GetProperties(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Type)
  nameWithType: TypeDescriptor.GetProperties(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Type,Attribute[])
  nameWithType: TypeDescriptor.GetProperties(Type,Attribute[])
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Type,Attribute[])
- uid: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties(Object,Attribute[],Boolean)
  nameWithType: TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
  fullName: System.ComponentModel.TypeDescriptor.GetProperties(Object,Attribute[],Boolean)
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider(Object)
  nameWithType: TypeDescriptor.GetProvider(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Object)
- uid: System.ComponentModel.TypeDescriptor.GetProvider(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider(Type)
  nameWithType: TypeDescriptor.GetProvider(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetProvider(Type)
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType(Object)
  nameWithType: TypeDescriptor.GetReflectionType(Object)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Object)
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType(Type)
  nameWithType: TypeDescriptor.GetReflectionType(Type)
  fullName: System.ComponentModel.TypeDescriptor.GetReflectionType(Type)
- uid: System.ComponentModel.TypeDescriptor.InterfaceType
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
  fullName: System.ComponentModel.TypeDescriptor.InterfaceType
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Object)
  nameWithType: TypeDescriptor.Refresh(Object)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Object)
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Assembly)
  nameWithType: TypeDescriptor.Refresh(Assembly)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Module)
  nameWithType: TypeDescriptor.Refresh(Module)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Module)
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.ComponentModel.TypeDescriptor.Refresh(System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh(Type)
  nameWithType: TypeDescriptor.Refresh(Type)
  fullName: System.ComponentModel.TypeDescriptor.Refresh(Type)
- uid: System.ComponentModel.TypeDescriptor.Refreshed
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refreshed
  nameWithType: TypeDescriptor.Refreshed
  fullName: System.ComponentModel.TypeDescriptor.Refreshed
- uid: System.ComponentModel.RefreshEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: RefreshEventHandler
  nameWithType: RefreshEventHandler
  fullName: System.ComponentModel.RefreshEventHandler
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociation(Object,Object)
  nameWithType: TypeDescriptor.RemoveAssociation(Object,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociation(Object,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociations(Object)
  nameWithType: TypeDescriptor.RemoveAssociations(Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveAssociations(Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProvider(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent(TypeDescriptionProvider,Object)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Object)
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent(TypeDescriptionProvider,Type)
  nameWithType: TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
  fullName: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(TypeDescriptionProvider,Type)
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: SortDescriptorArray(IList)
  nameWithType: TypeDescriptor.SortDescriptorArray(IList)
  fullName: System.ComponentModel.TypeDescriptor.SortDescriptorArray(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.TypeDescriptor.AddAttributes*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddAttributes
  nameWithType: TypeDescriptor.AddAttributes
- uid: System.ComponentModel.TypeDescriptor.AddEditorTable*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddEditorTable
  nameWithType: TypeDescriptor.AddEditorTable
- uid: System.ComponentModel.TypeDescriptor.AddProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProvider
  nameWithType: TypeDescriptor.AddProvider
- uid: System.ComponentModel.TypeDescriptor.AddProviderTransparent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: AddProviderTransparent
  nameWithType: TypeDescriptor.AddProviderTransparent
- uid: System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComNativeDescriptorHandler
  nameWithType: TypeDescriptor.ComNativeDescriptorHandler
- uid: System.ComponentModel.TypeDescriptor.ComObjectType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: ComObjectType
  nameWithType: TypeDescriptor.ComObjectType
- uid: System.ComponentModel.TypeDescriptor.CreateAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateAssociation
  nameWithType: TypeDescriptor.CreateAssociation
- uid: System.ComponentModel.TypeDescriptor.CreateDesigner*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateDesigner
  nameWithType: TypeDescriptor.CreateDesigner
- uid: System.ComponentModel.TypeDescriptor.CreateEvent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateEvent
  nameWithType: TypeDescriptor.CreateEvent
- uid: System.ComponentModel.TypeDescriptor.CreateInstance*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateInstance
  nameWithType: TypeDescriptor.CreateInstance
- uid: System.ComponentModel.TypeDescriptor.CreateProperty*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: CreateProperty
  nameWithType: TypeDescriptor.CreateProperty
- uid: System.ComponentModel.TypeDescriptor.GetAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAssociation
  nameWithType: TypeDescriptor.GetAssociation
- uid: System.ComponentModel.TypeDescriptor.GetAttributes*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetAttributes
  nameWithType: TypeDescriptor.GetAttributes
- uid: System.ComponentModel.TypeDescriptor.GetClassName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetClassName
  nameWithType: TypeDescriptor.GetClassName
- uid: System.ComponentModel.TypeDescriptor.GetComponentName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetComponentName
  nameWithType: TypeDescriptor.GetComponentName
- uid: System.ComponentModel.TypeDescriptor.GetConverter*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetConverter
  nameWithType: TypeDescriptor.GetConverter
- uid: System.ComponentModel.TypeDescriptor.GetDefaultEvent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultEvent
  nameWithType: TypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.TypeDescriptor.GetDefaultProperty*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetDefaultProperty
  nameWithType: TypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.TypeDescriptor.GetEditor*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: TypeDescriptor.GetEditor
- uid: System.ComponentModel.TypeDescriptor.GetEvents*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetEvents
  nameWithType: TypeDescriptor.GetEvents
- uid: System.ComponentModel.TypeDescriptor.GetFullComponentName*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetFullComponentName
  nameWithType: TypeDescriptor.GetFullComponentName
- uid: System.ComponentModel.TypeDescriptor.GetProperties*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProperties
  nameWithType: TypeDescriptor.GetProperties
- uid: System.ComponentModel.TypeDescriptor.GetProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetProvider
  nameWithType: TypeDescriptor.GetProvider
- uid: System.ComponentModel.TypeDescriptor.GetReflectionType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: GetReflectionType
  nameWithType: TypeDescriptor.GetReflectionType
- uid: System.ComponentModel.TypeDescriptor.InterfaceType*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: InterfaceType
  nameWithType: TypeDescriptor.InterfaceType
- uid: System.ComponentModel.TypeDescriptor.Refresh*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: Refresh
  nameWithType: TypeDescriptor.Refresh
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociation*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociation
  nameWithType: TypeDescriptor.RemoveAssociation
- uid: System.ComponentModel.TypeDescriptor.RemoveAssociations*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveAssociations
  nameWithType: TypeDescriptor.RemoveAssociations
- uid: System.ComponentModel.TypeDescriptor.RemoveProvider*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProvider
  nameWithType: TypeDescriptor.RemoveProvider
- uid: System.ComponentModel.TypeDescriptor.RemoveProviderTransparent*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: RemoveProviderTransparent
  nameWithType: TypeDescriptor.RemoveProviderTransparent
- uid: System.ComponentModel.TypeDescriptor.SortDescriptorArray*
  parent: System.ComponentModel.TypeDescriptor
  isExternal: false
  name: SortDescriptorArray
  nameWithType: TypeDescriptor.SortDescriptorArray
