### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventSchemaTraceListener
  id: EventSchemaTraceListener
  children:
  - System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)
  - System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)
  - System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)
  - System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)
  - System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)
  - System.Diagnostics.EventSchemaTraceListener.BufferSize
  - System.Diagnostics.EventSchemaTraceListener.Close
  - System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)
  - System.Diagnostics.EventSchemaTraceListener.Flush
  - System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes
  - System.Diagnostics.EventSchemaTraceListener.IsThreadSafe
  - System.Diagnostics.EventSchemaTraceListener.MaximumFileSize
  - System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles
  - System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption
  - System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.EventSchemaTraceListener.Write(System.String)
  - System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)
  - System.Diagnostics.EventSchemaTraceListener.Writer
  langs:
  - csharp
  name: EventSchemaTraceListener
  nameWithType: EventSchemaTraceListener
  fullName: System.Diagnostics.EventSchemaTraceListener
  type: Class
  summary: "Arra utasítja a nyomkövetés vagy hibakeresés kimeneti végpont események egy XML-kódolású, séma-kompatibilis naplófájlba."
  remarks: "The EventSchemaTraceListener class provides tracing of end-to-end schema-compliant events. You can use end-to-end tracing for a system that has heterogeneous components that cross thread, <xref:System.AppDomain>, process, and computer boundaries. A standardized event schema (see [Event Representation for Event Consumers](http://go.microsoft.com/fwlink/?LinkId=78955)) has been defined to enable tracing across these boundaries. The schema enables the addition of custom, schema-compliant elements. You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the event data.  \n  \n EventSchemaTraceListener is tuned for logging performance with implicit support for lock-free tracing.  \n  \n The EventSchemaTraceListener class converts tracing and debugging information into an XML-encoded text stream. The description of the XML output is shown in the tables later in this section.  \n  \n You can enable or disable an EventSchemaTraceListener object through the application configuration file, and then use the configured EventSchemaTraceListener object in your application. Alternately, you can create an EventSchemaTraceListener object in your code. We recommend that you enable trace listeners through the application configuration file. For information about the use of configuration files for tracing and debugging, see [Trace and Debug Settings Schema](~/add/includes/ajax-current-ext-md.md).  \n  \n To configure an EventSchemaTraceListener object, modify the configuration file that corresponds to the name of your application. In this file, you can add, remove, or set the properties for a listener. The configuration file should be formatted as follows:  \n  \n```  \n<configuration>  \n    <system.diagnostics>  \n        <sources>  \n            <source name=\"TestSource\" >  \n                <listeners>  \n                    <!--Remove the default trace listener for better performance.-->  \n                    <remove name=\"Default\"/>  \n                    <!--Note: Removing the default trace listener prevents the dialog box   \n                    from being displayed for Debug.Fail or Debug.Assert commands that are   \n                    executed in user mode.-->  \n                    <add name=\"eventListener\"   \n                      type=\"System.Diagnostics.EventSchemaTraceListener,  system.core\"  \n                      initializeData=\"TraceOutput.xml\"   \n                      traceOutputOptions=\"ProcessId, DateTime, Timestamp\"   \n                      bufferSize=\"65536\"  \n                      maximumFileSize=\"20480000\"  \n                      logRetentionOption=\"LimitedCircularFiles\"  \n                      maximumNumberOfFiles=\"2\"/>  \n                </listeners>  \n            </source>  \n        </sources>  \n    </system.diagnostics>  \n```  \n  \n The EventSchemaTraceListener class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>. The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows for an additional level of trace output filtering at the listener. If a filter is present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.  \n  \n If an attempt is made to write to a file that is being used or is unavailable, a GUID suffix is automatically added to the file name.  \n  \n> [!NOTE]\n>  Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes. Do not call the listener methods directly from application code. The EventSchemaTraceListener listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.  \n  \n The following table describes the elements and attributes of the XML output.  \n  \n|Element|Attributes|Output|Notes|  \n|-------------|----------------|------------|-----------|  \n|`CallStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|Special characters such as > or < are replaced with escape sequences. See the escaped character translation table in the next table.|  \n|`Computer`|None|Always present.|This element represents the value of the <xref:System.Environment.MachineName%2A> property.|  \n|`Correlation`|`ActivityID`|Always present.|If `ActivityID` is not specified, the default is an empty GUID.|  \n||`RelatedActivityID`|Depends on the presence of the `relatedActivityId` parameter in the `Trace` method call.|The `RelatedActivityID` attribute corresponds to the `relatedActivityId` parameter of the <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> method.|  \n|`Data`|None|Always present.|This element represents parameter input (`data`). One element is provided for each data object. In the case of event logs, the `Data` element contains escaped XML data. In the case of data logs, the `Data` element contains unescaped data. The data log output uses the `ToString` method of the passed-in data objects.|  \n|`Event`|None|Always present.|This element contains a trace event.|  \n|`EventData`|None|Present for event logs.|This element represents parameter input (`message`, `args`). It contains `Data` elements with escaped XML data that is created by calling the <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> method.|  \n|`EventID`|None|Always present.|This element represents parameter input (`id`).|  \n|`Execution`|`ProcessID`|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The `ProcessID` attribute is specified in the <xref:System.Diagnostics.TraceEventCache>. On the Microsoft Windows 98 and Windows Millenium Edition operating systems, if `ProcessID` is larger than 2,147,483,647, it is a positive representation of a negative number and should be converted to obtain the correct process identifier.|  \n||`ThreadID`|Present when `ProcessID` is present.|The `ThreadID` attribute is specified in the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Level`|None|Always present.|This element represents parameter input (the numeric value of `eventType`). Parameter values that are larger than 255 are output as a level 8, which represents <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>. Trace event types <xref:System.Diagnostics.TraceEventType>, <xref:System.Diagnostics.TraceEventType>, <xref:System.Diagnostics.TraceEventType>, <xref:System.Diagnostics.TraceEventType>, and <xref:System.Diagnostics.TraceEventType> are output as levels 1, 2, 4, 8, and 10, respectively.|  \n|`LogicalOperationStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|Only one logical operation can exist. Therefore, the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.|  \n|`OpCode`|None|Present when `Level` is greater than 255.|This element represents Trace event types that have numeric values greater than 255. <xref:System.Diagnostics.TraceEventType>, <xref:System.Diagnostics.TraceEventType>, <xref:System.Diagnostics.TraceEventType>, <xref:System.Diagnostics.TraceEventType>, or <xref:System.Diagnostics.TraceEventType> are output as levels 1, 2, 4, 8, and 10, respectively.|  \n|`Provider`|`GUID`|Always present.|Always empty.|  \n|`RenderingInfo`|`Culture`|Always present.|This attribute represents a resource string for the event type. It is always \"en-EN\\\\\".|  \n|`System`|`Name`|Always present.||  \n|`TimeCreated`|`SystemTime`|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The time is the value of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=fullName> property. This property is expressed as Coordinated Universal Time|  \n|`TimeStamp`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|This element is specified in the <xref:System.Diagnostics.TraceEventCache>.|  \n|`UserData`|None|Present for data logs.|This element contains `Data` elements with unescaped, user-provided data from a <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> method.|  \n  \n The following table shows the characters that are escaped in the XML output. Escaping occurs in all the elements and attributes except for the `UserData` element, which contains user-provided, unescaped data. The `UserData` element is a result of calls to the <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> method.  \n  \n|Escaped character|Value|  \n|-----------------------|-----------|  \n|&|&amp;|  \n|\\<|&lt;|  \n|>|&gt;|  \n|\"|&quot;|  \n|\\|&apos;|  \n|0xD|&\\#xD;|  \n|0xA|&\\#xA;|"
  example:
  - "The following code example demonstrates how to use the EventSchemaTraceListener class.  \n  \n [!code-cs[System.Diagnostics.EventSchemaTraceListener#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_1_1.cs)]\n [!code-cpp[System.Diagnostics.EventSchemaTraceListener#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_1_1.cpp)]\n [!code-vb[System.Diagnostics.EventSchemaTraceListener#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_1_1.vb)]"
  syntax:
    content: 'public class EventSchemaTraceListener : System.Diagnostics.TextWriterTraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  - System.Diagnostics.TextWriterTraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: EventSchemaTraceListener(String)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventSchemaTraceListener&quot;> </xref> osztály, a megadott fájl használata a Hibakeresés és nyomkövetés kimeneti címzettje."
  remarks: "Alapértelmezés szerint naplózza a korlátlan méret egy fájl."
  example:
  - "The following code example demonstrates how to use the EventSchemaTraceListener constructor.  \n  \n [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_19_1.vb)]\n [!code-cs[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_19_1.cs)]"
  syntax:
    content: public EventSchemaTraceListener (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "A naplófájl elérési útja."
  overload: System.Diagnostics.EventSchemaTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: EventSchemaTraceListener(String,String)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventSchemaTraceListener&quot;> </xref> osztály a megadott névvel, a megadott fájl használata a Hibakeresés és nyomkövetés kimeneti címzettje."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=fullName> constructor.  \n  \n [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/add/codesnippet/visualbasic/a9f0d11f-fcb5-4d13-a2ff-_1.vb)]\n [!code-cs[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/add/codesnippet/csharp/a9f0d11f-fcb5-4d13-a2ff-_1.cs)]"
  syntax:
    content: public EventSchemaTraceListener (string fileName, string name);
    parameters:
    - id: fileName
      type: System.String
      description: "A naplófájl elérési útja."
    - id: name
      type: System.String
      description: "A figyelő neve."
  overload: System.Diagnostics.EventSchemaTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)
  id: '#ctor(System.String,System.String,System.Int32)'
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: EventSchemaTraceListener(String,String,Int32)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventSchemaTraceListener&quot;> </xref> osztály a megadott névvel és a megadott puffer mérete, a megadott fájl használata a Hibakeresés és nyomkövetés kimeneti címzettje."
  remarks: "A teljesítménnyel kapcsolatos szempontokat `bufferSize` 1024 bájt többszörösének kell lennie."
  example:
  - "The following code example demonstrates how to use the EventSchemaTraceListener constructor.  \n  \n [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/add/codesnippet/visualbasic/45371b18-279c-4de3-a88e-_1.vb)]\n [!code-cs[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/add/codesnippet/csharp/45371b18-279c-4de3-a88e-_1.cs)]"
  syntax:
    content: public EventSchemaTraceListener (string fileName, string name, int bufferSize);
    parameters:
    - id: fileName
      type: System.String
      description: "A naplófájl elérési útja."
    - id: name
      type: System.String
      description: "A figyelő neve."
    - id: bufferSize
      type: System.Int32
      description: "A kimeneti puffer mérete bájtban mérete."
  overload: System.Diagnostics.EventSchemaTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)
  id: '#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)'
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventSchemaTraceListener&quot;> </xref> a megadott névvel és a megadott puffer mérete, a megadott fájl használata a megadott megőrzési házirend a címzettként a hibakeresési és nyomkövetési kimeneti osztály."
  remarks: "A teljesítménnyel kapcsolatos szempontokat `bufferSize` 1024 bájt többszörösének kell lennie."
  example:
  - "The following code example demonstrates how to use the EventSchemaTraceListener constructor.  \n  \n [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/add/codesnippet/visualbasic/f126a0a2-b62d-45c7-8782-_1.vb)]\n [!code-cs[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/add/codesnippet/csharp/f126a0a2-b62d-45c7-8782-_1.cs)]"
  syntax:
    content: public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption);
    parameters:
    - id: fileName
      type: System.String
      description: "A naplófájl elérési útja."
    - id: name
      type: System.String
      description: "A figyelő neve."
    - id: bufferSize
      type: System.Int32
      description: "A kimeneti puffer mérete bájtban mérete."
    - id: logRetentionOption
      type: System.Diagnostics.TraceLogRetentionOption
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceLogRetentionOption&quot;> </xref> értékeket."
  overload: System.Diagnostics.EventSchemaTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)
  id: '#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)'
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventSchemaTraceListener&quot;> </xref> osztály a megadott névvel és a megadott puffer mérete, a megadott fájl használata a megadott megőrzési házirend és a maximális méret, a Hibakeresés és nyomkövetés kimeneti címzettje."
  remarks: "A teljesítménnyel kapcsolatos szempontokat `bufferSize` és `maximumFileSize` 1024 bájt többszöröse lehet. `maximumFileSize`Nincs abszolút értéke a küszöbérték az utolsó üzenet mérete legfeljebb meghaladó."
  example:
  - "The following code example demonstrates how to use the EventSchemaTraceListener constructor.  \n  \n [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/add/codesnippet/visualbasic/5c1c3fa7-33f6-45a0-b6d2-_1.vb)]\n [!code-cs[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/add/codesnippet/csharp/5c1c3fa7-33f6-45a0-b6d2-_1.cs)]"
  syntax:
    content: public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize);
    parameters:
    - id: fileName
      type: System.String
      description: "A naplófájl elérési útja."
    - id: name
      type: System.String
      description: "A figyelő neve."
    - id: bufferSize
      type: System.Int32
      description: "A kimeneti puffer mérete bájtban mérete."
    - id: logRetentionOption
      type: System.Diagnostics.TraceLogRetentionOption
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceLogRetentionOption&quot;> </xref> értékeket."
    - id: maximumFileSize
      type: System.Int64
      description: "A fájl maximális méretét, bájtban."
  overload: System.Diagnostics.EventSchemaTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maximumFileSize</code>az egy negatív szám."
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)
  id: '#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)'
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64,Int32)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64,Int32)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventSchemaTraceListener&quot;> </xref> osztály a megadott névvel és a megadott puffer mérete, a megadott fájl használata a megadott megőrzési házirend, maximális méretét, és a száma, a Hibakeresés és nyomkövetés kimeneti címzettje."
  remarks: "A teljesítménnyel kapcsolatos szempontokat `bufferSize` és `maximumFileSize` 1024 bájt többszöröse lehet. `maximumFileSize`egy abszolút érték; a küszöbértéket, az utolsó üzenet mérete legfeljebb túllépő."
  example:
  - "The following code example demonstrates how to use the EventSchemaTraceListener constructor. This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.  \n  \n [!code-cs[System.Diagnostics.EventSchemaTraceListener#2](~/add/codesnippet/csharp/3c0ec067-fcc9-4608-a254-_1.cs)]\n [!code-vb[System.Diagnostics.EventSchemaTraceListener#2](~/add/codesnippet/visualbasic/3c0ec067-fcc9-4608-a254-_1.vb)]"
  syntax:
    content: public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);
    parameters:
    - id: fileName
      type: System.String
      description: "A naplófájl elérési útja."
    - id: name
      type: System.String
      description: "A figyelő neve."
    - id: bufferSize
      type: System.Int32
      description: "A kimeneti puffer mérete bájtban mérete."
    - id: logRetentionOption
      type: System.Diagnostics.TraceLogRetentionOption
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceLogRetentionOption&quot;> </xref> értékeket."
    - id: maximumFileSize
      type: System.Int64
      description: "A fájl maximális méretét, bájtban."
    - id: maximumNumberOfFiles
      type: System.Int32
      description: "A kimeneti fájlok maximális száma."
  overload: System.Diagnostics.EventSchemaTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maximumNumberOfFiles</code>kevesebb mint 2, és <code>logRetentionOption</code> van <xref href=&quot;System.Diagnostics.TraceLogRetentionOption&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.BufferSize
  id: BufferSize
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: BufferSize
  nameWithType: EventSchemaTraceListener.BufferSize
  fullName: System.Diagnostics.EventSchemaTraceListener.BufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Lekérdezi a kimeneti puffer méretét."
  remarks: "A tulajdonság értékét állítja be a `bufferSize` paraméter a konstruktorban. A megfelelő teljesítmény érdekében a puffer mérete 1024 bájt többszörösének kell megadni. Azt javasoljuk, hogy az alapértelmezett méret 32 * 1024 bájt vagy 64\\*1024 bájt a legjobb teljesítmény érdekében."
  example:
  - "The following code example demonstrates how to display the value of the BufferSize property. This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.  \n  \n [!code-cs[System.Diagnostics.EventSchemaTraceListener#5](~/add/codesnippet/csharp/p-system.diagnostics.eve_0_1.cs)]\n [!code-vb[System.Diagnostics.EventSchemaTraceListener#5](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_0_1.vb)]"
  syntax:
    content: public int BufferSize { get; }
    return:
      type: System.Int32
      description: "A kimeneti puffer mérete bájtban mérete."
  overload: System.Diagnostics.EventSchemaTraceListener.BufferSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.Close
  id: Close
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: EventSchemaTraceListener.Close()
  fullName: System.Diagnostics.EventSchemaTraceListener.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "A naplófájl bezárása után ez a figyelő az, hogy az többé nem kap a hibakeresési és nyomkövetési kimeneti."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.EventSchemaTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: EventSchemaTraceListener.Fail(String,String)
  fullName: System.Diagnostics.EventSchemaTraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Hiba adatai, beleértve az alapvető hibaüzenet és a részletes hibaüzenet, a naplófájlba írja."
  syntax:
    content: public override void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "Az alapvető hibaüzenet írni."
    - id: detailMessage
      type: System.String
      description: "A részletes hibaüzenet az alapvető hibaüzenet hozzáfűzni."
  overload: System.Diagnostics.EventSchemaTraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: EventSchemaTraceListener.Flush()
  fullName: System.Diagnostics.EventSchemaTraceListener.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Okait pufferelt adatok kellene írni a naplóba Ez a figyelő."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Diagnostics.EventSchemaTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: EventSchemaTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Lekérdezi az egyéni XML-konfiguráció attribútumok, amely támogatja a nyomkövetés-figyelő."
  remarks: 'Az egyéni attribútumok, ez a metódus által visszaadott használható az XML konfigurációs fájl az <xref:System.Diagnostics.EventSchemaTraceListener>osztály</xref:System.Diagnostics.EventSchemaTraceListener> egy példányának működését Bármely más attribútummal konfigurációs kivételt okoz. A GetSupportedAttributes módszert ahhoz a <xref:System.Diagnostics.EventSchemaTraceListener>tömb értékeket a következő karakterláncot ad vissza: &quot;bufferSize&quot;, &quot;logRetentionOption&quot;, &quot;maximumFileSize&quot; és &quot;maximumNumberOfFiles&quot;.</xref:System.Diagnostics.EventSchemaTraceListener>'
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "A <xref:System.String>az XML-konfiguráció attribútumok ismeri fel ezt a figyelőt tartalmazó tömb.</xref:System.String>"
  overload: System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.IsThreadSafe
  id: IsThreadSafe
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: IsThreadSafe
  nameWithType: EventSchemaTraceListener.IsThreadSafe
  fullName: System.Diagnostics.EventSchemaTraceListener.IsThreadSafe
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Egy érték, amely azt jelzi, hogy a nyomkövetés-figyelő szál biztonságos lekérdezi."
  remarks: ''
  example:
  - "The following code example demonstrates how to display the value of the IsThreadSafe property. This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.  \n  \n [!code-cs[System.Diagnostics.EventSchemaTraceListener#4](~/add/codesnippet/csharp/p-system.diagnostics.eve_5_1.cs)]\n [!code-vb[System.Diagnostics.EventSchemaTraceListener#4](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_5_1.vb)]"
  syntax:
    content: public override bool IsThreadSafe { get; }
    return:
      type: System.Boolean
      description: "Mindig vissza <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventSchemaTraceListener.IsThreadSafe*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.MaximumFileSize
  id: MaximumFileSize
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: MaximumFileSize
  nameWithType: EventSchemaTraceListener.MaximumFileSize
  fullName: System.Diagnostics.EventSchemaTraceListener.MaximumFileSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Lekérdezi a naplófájl maximális méretét."
  remarks: "A tulajdonság értékét állítja be a `maximumFileSize` paraméter a konstruktorban, vagy a `maximumFileSize` attribútumot a konfigurációs fájlban. Teljesítményének javítására szolgál akkor a maximális fájlméret 1024 bájt többszörösének kell beállítania. A MaximumFileSize tulajdonság értéke nem egy abszolút; a küszöbértéket, az utolsó üzenet mérete legfeljebb túllépő.       Az alábbi táblázat a lehetséges és alapértelmezett értékeit fájlméret társított minden nyomkövetési napló adatmegőrzési beállítás. A nincs megjelölve értékek azt jelzik, hogy MaximumFileSize tulajdonság nem lesz ellenőrizve, amely <xref:System.Diagnostics.TraceLogRetentionOption>érték.</xref:System.Diagnostics.TraceLogRetentionOption>      | TraceLogRetentionOption |} Maximális fájlméret |} Alapértelmezett fájlméret |}   |-----------------------------|-----------------------|-----------------------|   | <xref:System.Diagnostics.TraceLogRetentionOption>| N/A |} -1 |}   | <xref:System.Diagnostics.TraceLogRetentionOption>|} >&0; |}&4; KB-os |}   | <xref:System.Diagnostics.TraceLogRetentionOption>|} >&0; |}&4; KB-os |}   | <xref:System.Diagnostics.TraceLogRetentionOption>|} >&0; |}&4; KB-os |}   | <xref:System.Diagnostics.TraceLogRetentionOption>|>0|4 KB|</xref:System.Diagnostics.TraceLogRetentionOption></xref:System.Diagnostics.TraceLogRetentionOption></xref:System.Diagnostics.TraceLogRetentionOption></xref:System.Diagnostics.TraceLogRetentionOption></xref:System.Diagnostics.TraceLogRetentionOption>"
  example:
  - "The following code example demonstrates how to display the value of the MaximumFileSize property. This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.  \n  \n [!code-cs[System.Diagnostics.EventSchemaTraceListener#6](~/add/codesnippet/csharp/p-system.diagnostics.eve_30_1.cs)]\n [!code-vb[System.Diagnostics.EventSchemaTraceListener#6](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_30_1.vb)]"
  syntax:
    content: public long MaximumFileSize { get; }
    return:
      type: System.Int64
      description: "A fájl maximális méretét, bájtban."
  overload: System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles
  id: MaximumNumberOfFiles
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: MaximumNumberOfFiles
  nameWithType: EventSchemaTraceListener.MaximumNumberOfFiles
  fullName: System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Lekérdezi a naplófájlok maximális száma."
  remarks: "A tulajdonság értékét állítja be a `maximumNumberOfFiles` paraméter a konstruktorban, vagy a `maximumNumberOfFiles` attribútumot a konfigurációs fájlban.       Az alábbi táblázat a lehetséges és az alapértelmezett értékek a fájlméret és a fájlok száma társított minden nyomkövetési napló megőrzési beállítás. A nincs megjelölve értékek azt jelzik, hogy MaximumNumberOfFiles tulajdonság nem lesz ellenőrizve, amely <xref:System.Diagnostics.TraceLogRetentionOption>érték.</xref:System.Diagnostics.TraceLogRetentionOption>      | TraceLogRetentionOption |} Fájlok maximális száma |} Azon fájlok száma, alapértelmezett |}   |-----------------------------|-----------------------------|-----------------------------|   | <xref:System.Diagnostics.TraceLogRetentionOption>| N/A |}&1; |}   | <xref:System.Diagnostics.TraceLogRetentionOption>| N/A |}&1; |}   | <xref:System.Diagnostics.TraceLogRetentionOption>| N/A |} -1 |}   | <xref:System.Diagnostics.TraceLogRetentionOption>|>0|1|   | <xref:System.Diagnostics.TraceLogRetentionOption>|>1|2|</xref:System.Diagnostics.TraceLogRetentionOption></xref:System.Diagnostics.TraceLogRetentionOption></xref:System.Diagnostics.TraceLogRetentionOption></xref:System.Diagnostics.TraceLogRetentionOption></xref:System.Diagnostics.TraceLogRetentionOption>"
  example:
  - "The following code example demonstrates how to display the value of the MaximumNumberOfFiles property. This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.  \n  \n [!code-cs[System.Diagnostics.EventSchemaTraceListener#7](~/add/codesnippet/csharp/p-system.diagnostics.eve_1_1.cs)]\n [!code-vb[System.Diagnostics.EventSchemaTraceListener#7](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_1_1.vb)]"
  syntax:
    content: public int MaximumNumberOfFiles { get; }
    return:
      type: System.Int32
      description: "Naplófájlok, határozza meg a értékének maximális száma a <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption*>a fájl.</xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption*>"
  overload: System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventSchemaTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatokat, egyetlen objektum és események adatait a naplófájlba írást."
  remarks: "A `eventCache`, `source`, `eventType`, és `id` paramétert kell használni a fejlécben és a láblécben pedig a nyomkövetést. A `id` paraméter alakítja előjel nélküli egész számként írás előtt. Ezért negatív `id` érték íródik a nagy pozitív egész számként. A `data` paraméter van megírva egy `Data` csomópontja a `UserData` elemet. A `ToString` az adatobjektum módszert karakterlánccá konvertálni.      > [!IMPORTANT] > Ez a módszer nem javasolt közvetlenül alkalmazáskód meghívni. Azt nevezzük, módszerekkel a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályok nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékeket."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: data
      type: System.Object
      description: "Egy objektum hozható létre."
  overload: System.Diagnostics.EventSchemaTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventSchemaTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Írási műveletek nyomkövetési adatokat, több adatobjektumainak és események adatait a naplófájlba írást."
  remarks: "A `eventCache`, `source`, `eventType`, és `id` paramétert kell használni a fejlécben és a láblécben pedig a nyomkövetést. A `id` paraméter alakítja előjel nélküli egész számként írás előtt. Ezért negatív `id` érték íródik a nagy pozitív egész számként. Az objektumok a `data` paramétertömb vannak megírva `Data` csomópontjának a `UserData` elemet. A `ToString` minden adatobjektum módszert karakterlánccá konvertálni.      > [!IMPORTANT] > Ez a módszer nem javasolt közvetlenül alkalmazáskód meghívni. Azt nevezzük, módszerekkel a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályok nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékeket."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: data
      type: System.Object[]
      description: "Kibocsátásához adatok objektumokból álló tömb."
  overload: System.Diagnostics.EventSchemaTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventSchemaTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatokat, egy üzenet és az események adatait a naplófájlba írást."
  remarks: "A `eventCache`, `source`, `eventType`, és `id` paramétert kell használni a fejlécben és a láblécben pedig a nyomkövetést. A `id` paraméter alakítja előjel nélküli egész számként írás előtt. Ezért negatív `id` érték íródik a nagy pozitív egész számként. A `message` paraméter van megírva egy `Data` csomópontja a `EventData` elemet.      > [!IMPORTANT] > Ez a módszer nem javasolt közvetlenül alkalmazáskód meghívni. Azt nevezzük, módszerekkel a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályok nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékeket."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: message
      type: System.String
      description: "Az üzenet írni."
  overload: System.Diagnostics.EventSchemaTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventSchemaTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatok egy formázott üzenetet és események adatait a naplófájlba írást."
  remarks: "The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before it is written. Therefore, a negative `id` value is written as a large positive integer. The [String.Format(String, Object\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method is called and the `format` string and `args` array are passed in as parameters. This method formats the `args` object array and writes the formatted array as the `Data` node in the `EventData` element.  \n  \n> [!IMPORTANT]\n>  This method is not intended to be called directly by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékeket."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: format
      type: System.String
      description: "A formázó karakterlánc, amely nulla vagy több objektumot a megfelelő formátumban elemet tartalmaz, a `args` tömb."
    - id: args
      type: System.Object[]
      description: "Nulla vagy több objektumot formázni a tartalmazó objektum tömb."
  overload: System.Diagnostics.EventSchemaTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption
  id: TraceLogRetentionOption
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: TraceLogRetentionOption
  nameWithType: EventSchemaTraceListener.TraceLogRetentionOption
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Lekérdezi a nyomkövetési napló megőrzési beállítás megadása a fájl."
  remarks: ''
  example:
  - "The following code example demonstrates how to display the value of the TraceLogRetentionOption property. This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.  \n  \n [!code-cs[System.Diagnostics.EventSchemaTraceListener#9](~/add/codesnippet/csharp/p-system.diagnostics.eve_7_1.cs)]\n [!code-vb[System.Diagnostics.EventSchemaTraceListener#9](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_7_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption { get; }
    return:
      type: System.Diagnostics.TraceLogRetentionOption
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceLogRetentionOption&quot;> </xref> értékeket. Az alapértelmezett érték <xref href=&quot;System.Diagnostics.TraceLogRetentionOption&quot;> </xref>."
  overload: System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventSchemaTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Írási műveletek nyomkövetési információ, beleértve a kapcsolódó tevékenységet, egy üzenet és az esemény adatok, a naplófájlba írást."
  remarks: "A TraceTransfer módszert kapcsolódó nyomainak összefüggéseket. A `eventCache`, `source`, `id`, és `relatedActivityId` paramétert kell használni a fejlécben és a láblécben pedig a nyomkövetést. A `id` paraméter alakítja előjel nélküli egész számként írás előtt. Ezért negatív `id` érték íródik a nagy pozitív egész számként. A `message` paraméter értékét írja a `Data` elemet. A <xref:System.Guid.ToString%28System.String%29?displayProperty=fullName>metódus lehívásra kerül konvertálni a `relatedActivityId` érték a &quot;B&quot; formátumú karakterláncot, amely akkor jelenik meg a fejléc.</xref:System.Guid.ToString%28System.String%29?displayProperty=fullName> A `Opcode` a lábléc elemet azonosítja egy <xref:System.Diagnostics.TraceEventType>.</xref:System.Diagnostics.TraceEventType> a nyomkövetési esemény típusa      > [!IMPORTANT] > A TraceTransfer metódus nem hívható alkalmazás kóddal. Célja, hogy használják a <xref:System.Diagnostics.TraceSource>kibocsátás a nyomkövetési adatok, az objektumot a <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>metódus.</xref:System.Diagnostics.TraceSource.TraceTransfer%2A> </xref:System.Diagnostics.TraceSource>"
  syntax:
    content: public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: message
      type: System.String
      description: "Nyomkövetési üzenet írni."
    - id: relatedActivityId
      type: System.Guid
      description: "A <xref:System.Guid>rendszer, amely azonosítja a kapcsolódó tevékenysége.</xref:System.Guid>"
  overload: System.Diagnostics.EventSchemaTraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: EventSchemaTraceListener.Write(String)
  fullName: System.Diagnostics.EventSchemaTraceListener.Write(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Üzenetet ír a naplófájlba írást semmilyen további környezet adatainak megadása nélkül."
  remarks: "A <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A>módszer az üzenetet, bejelentkezési neve egy <xref:System.Diagnostics.TraceEventType>esemény.</xref:System.Diagnostics.TraceEventType> </xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A>      > [!IMPORTANT] > Ez a módszer nem javasolt közvetlenül alkalmazáskód meghívni. Azt nevezzük, módszerekkel a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályok nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Az üzenet írni."
  overload: System.Diagnostics.EventSchemaTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: EventSchemaTraceListener.WriteLine(String)
  fullName: System.Diagnostics.EventSchemaTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Beír egy üzenetet, majd az aktuális sor lezárójele a naplófájlba semmilyen további környezet adatainak megadása nélkül."
  remarks: "A <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A>módszer az üzenetet, bejelentkezési neve egy <xref:System.Diagnostics.TraceEventType>esemény.</xref:System.Diagnostics.TraceEventType> </xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A>      > [!IMPORTANT] > Ez a módszer nem javasolt közvetlenül alkalmazáskód meghívni. Azt nevezzük, módszerekkel a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályok nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Az üzenet írni."
  overload: System.Diagnostics.EventSchemaTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventSchemaTraceListener.Writer
  id: Writer
  parent: System.Diagnostics.EventSchemaTraceListener
  langs:
  - csharp
  name: Writer
  nameWithType: EventSchemaTraceListener.Writer
  fullName: System.Diagnostics.EventSchemaTraceListener.Writer
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja az alapul szolgáló szöveg író írja a naplófájlba írást."
  remarks: "Az író tulajdonság a &quot;set&quot; elérő használata <xref:System.NotSupportedException>.</xref:System.NotSupportedException> vet fel."
  syntax:
    content: public System.IO.TextWriter Writer { get; set; }
    return:
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>objektum.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.EventSchemaTraceListener.Writer*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Kísérlet történt az író tulajdonság értéket hozzárendelni."
  platform:
  - net462
references:
- uid: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: System.Diagnostics.TextWriterTraceListener
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: EventSchemaTraceListener(String)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: EventSchemaTraceListener(String,String)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String)
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: EventSchemaTraceListener(String,String,Int32)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption)
- uid: System.Diagnostics.TraceLogRetentionOption
  parent: System.Diagnostics
  isExternal: false
  name: TraceLogRetentionOption
  nameWithType: TraceLogRetentionOption
  fullName: System.Diagnostics.TraceLogRetentionOption
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64,Int32)
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64,Int32)
  fullName: System.Diagnostics.EventSchemaTraceListener.EventSchemaTraceListener(String,String,Int32,TraceLogRetentionOption,Int64,Int32)
- uid: System.Diagnostics.EventSchemaTraceListener.BufferSize
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: BufferSize
  nameWithType: EventSchemaTraceListener.BufferSize
  fullName: System.Diagnostics.EventSchemaTraceListener.BufferSize
- uid: System.Diagnostics.EventSchemaTraceListener.Close
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Close()
  nameWithType: EventSchemaTraceListener.Close()
  fullName: System.Diagnostics.EventSchemaTraceListener.Close()
- uid: System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: EventSchemaTraceListener.Fail(String,String)
  fullName: System.Diagnostics.EventSchemaTraceListener.Fail(String,String)
- uid: System.Diagnostics.EventSchemaTraceListener.Flush
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Flush()
  nameWithType: EventSchemaTraceListener.Flush()
  fullName: System.Diagnostics.EventSchemaTraceListener.Flush()
- uid: System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: EventSchemaTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventSchemaTraceListener.IsThreadSafe
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventSchemaTraceListener.IsThreadSafe
  fullName: System.Diagnostics.EventSchemaTraceListener.IsThreadSafe
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventSchemaTraceListener.MaximumFileSize
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: MaximumFileSize
  nameWithType: EventSchemaTraceListener.MaximumFileSize
  fullName: System.Diagnostics.EventSchemaTraceListener.MaximumFileSize
- uid: System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: MaximumNumberOfFiles
  nameWithType: EventSchemaTraceListener.MaximumNumberOfFiles
  fullName: System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles
- uid: System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventSchemaTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventSchemaTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventSchemaTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventSchemaTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceLogRetentionOption
  nameWithType: EventSchemaTraceListener.TraceLogRetentionOption
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption
- uid: System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventSchemaTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.EventSchemaTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.EventSchemaTraceListener.Write(System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: EventSchemaTraceListener.Write(String)
  fullName: System.Diagnostics.EventSchemaTraceListener.Write(String)
- uid: System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: EventSchemaTraceListener.WriteLine(String)
  fullName: System.Diagnostics.EventSchemaTraceListener.WriteLine(String)
- uid: System.Diagnostics.EventSchemaTraceListener.Writer
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Writer
  nameWithType: EventSchemaTraceListener.Writer
  fullName: System.Diagnostics.EventSchemaTraceListener.Writer
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.EventSchemaTraceListener.#ctor*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: EventSchemaTraceListener
  nameWithType: EventSchemaTraceListener.EventSchemaTraceListener
- uid: System.Diagnostics.EventSchemaTraceListener.BufferSize*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: BufferSize
  nameWithType: EventSchemaTraceListener.BufferSize
- uid: System.Diagnostics.EventSchemaTraceListener.Close*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Close
  nameWithType: EventSchemaTraceListener.Close
- uid: System.Diagnostics.EventSchemaTraceListener.Fail*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Fail
  nameWithType: EventSchemaTraceListener.Fail
- uid: System.Diagnostics.EventSchemaTraceListener.Flush*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Flush
  nameWithType: EventSchemaTraceListener.Flush
- uid: System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: EventSchemaTraceListener.GetSupportedAttributes
- uid: System.Diagnostics.EventSchemaTraceListener.IsThreadSafe*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventSchemaTraceListener.IsThreadSafe
- uid: System.Diagnostics.EventSchemaTraceListener.MaximumFileSize*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: MaximumFileSize
  nameWithType: EventSchemaTraceListener.MaximumFileSize
- uid: System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: MaximumNumberOfFiles
  nameWithType: EventSchemaTraceListener.MaximumNumberOfFiles
- uid: System.Diagnostics.EventSchemaTraceListener.TraceData*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceData
  nameWithType: EventSchemaTraceListener.TraceData
- uid: System.Diagnostics.EventSchemaTraceListener.TraceEvent*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: EventSchemaTraceListener.TraceEvent
- uid: System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceLogRetentionOption
  nameWithType: EventSchemaTraceListener.TraceLogRetentionOption
- uid: System.Diagnostics.EventSchemaTraceListener.TraceTransfer*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: EventSchemaTraceListener.TraceTransfer
- uid: System.Diagnostics.EventSchemaTraceListener.Write*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Write
  nameWithType: EventSchemaTraceListener.Write
- uid: System.Diagnostics.EventSchemaTraceListener.WriteLine*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: EventSchemaTraceListener.WriteLine
- uid: System.Diagnostics.EventSchemaTraceListener.Writer*
  parent: System.Diagnostics.EventSchemaTraceListener
  isExternal: false
  name: Writer
  nameWithType: EventSchemaTraceListener.Writer
