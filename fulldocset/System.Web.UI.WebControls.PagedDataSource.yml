### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.PagedDataSource
  id: PagedDataSource
  children:
  - System.Web.UI.WebControls.PagedDataSource.#ctor
  - System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  - System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.PagedDataSource.Count
  - System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  - System.Web.UI.WebControls.PagedDataSource.DataSource
  - System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  - System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  - System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  - System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  - System.Web.UI.WebControls.PagedDataSource.IsLastPage
  - System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  - System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  - System.Web.UI.WebControls.PagedDataSource.PageCount
  - System.Web.UI.WebControls.PagedDataSource.PageSize
  - System.Web.UI.WebControls.PagedDataSource.SyncRoot
  - System.Web.UI.WebControls.PagedDataSource.VirtualCount
  langs:
  - csharp
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
  type: Class
  summary: "Magában foglalja az adathoz kötött vezérlő lapozási kapcsolódó tulajdonságok (például <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>, és <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>), amelyek lehetővé teszik, hogy el tudja végezni a lapozás. Ez az osztály nem örökölhető."
  remarks: "A PagedDataSource osztály a tulajdonságokat, amelyeket az adatforrás vezérlők, például a engedélyezése magában foglalja a <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, és <xref:System.Web.UI.WebControls.FormView>, lapozás végrehajtásához.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataGrid> Ez az osztály használatos vezérlő fejlesztők számára egy egyéni adathoz kötött vezérlő lapozási támogatásának biztosítása.       Ez az osztály a legjobb módszer az aktuális laphoz tartozó adatok számbavétel használja. Ha az alapul szolgáló adatforrásban támogatja az indexelt hozzáférést (például <xref:System.Array?displayProperty=fullName>és <xref:System.Collections.IList?displayProperty=fullName>), ez az osztály használja azt.</xref:System.Collections.IList?displayProperty=fullName> </xref:System.Array?displayProperty=fullName> Ellenkező esetben használja a számbavevő hozta létre a <xref:System.Collections.IEnumerable.GetEnumerator%2A>metódus.</xref:System.Collections.IEnumerable.GetEnumerator%2A>       A kezdeti tulajdonságértékek PagedDataSource példányt listájáért lásd: a <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>konstruktor.</xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>"
  syntax:
    content: 'public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.ComponentModel.ITypedList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> osztály."
  remarks: "Ez a konstruktor segítségével hozza létre, és az <xref:System.Web.UI.WebControls.PagedDataSource>osztály</xref:System.Web.UI.WebControls.PagedDataSource> új példányának inicializálása       Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Web.UI.WebControls.PagedDataSource>.</xref:System.Web.UI.WebControls.PagedDataSource> példánya      | Tulajdonság |} A kezdeti érték |}   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>| `false`|   | <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|0|   | <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|}&10; |}   | <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|0|</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A></xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A></xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public PagedDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.PagedDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy engedélyezve van-e egyéni lapozás adathoz kötött vezérlő."
  remarks: "Használja a AllowCustomPaging tulajdonságát annak jelzésére, hogy engedélyezve van-e az egyéni lapozás. Egyéni lapozás egy nem kötelező típusú kifejezetten által biztosított lapozás a <xref:System.Web.UI.WebControls.DataGrid>vezérlő.</xref:System.Web.UI.WebControls.DataGrid> Az ASP.NET 2.0-s verziójának adathoz kötött vezérlő (például <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, és <xref:System.Web.UI.WebControls.FormView>) használ a kiszolgálóoldali lapozást, és nem támogatja az egyéni lapozás.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Egyéni lapozás és a kiszolgálóoldali lapozást, egymást kölcsönösen kizáró. Ha AllowCustomPaging `true`, figyeljen arra, hogy <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>értéke `false`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>       Egyéni lapozás kapcsolatban további információkért lásd: <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a egyéni lapozás; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy engedélyezve van-e a lapozófájl adathoz kötött vezérlő."
  remarks: "Az AllowPaging tulajdonság segítségével meg, hogy egy adathoz kötött vezérlő lapozása. Az ASP.NET 2.0-s verziójának adathoz kötött vezérlők (például <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, és <xref:System.Web.UI.WebControls.FormView>) automatikus lapozás biztosításához is használja a kiszolgálóoldali lapozást.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> A kiszolgálóoldali lapozás kapcsolatban lásd: <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> Használatakor a <xref:System.Web.UI.WebControls.DataGrid>vezérlő, a saját egyéni lapozás logika is megadhatja.</xref:System.Web.UI.WebControls.DataGrid> További információ az egyéni lapozás <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>és <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName> :       Adathoz kötött vezérlők lapozófájl-támogatással kapcsolatos további információkért lásd: a `AllowPaging` az adathoz kötött vezérlő tulajdonsága."
  syntax:
    content: public bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a lapozás; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  id: AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy engedélyezve van-e a kiszolgálóoldali lapozást."
  remarks: "Az ASP.NET 2.0-s verziójának adathoz kötött vezérlők (például <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, és <xref:System.Web.UI.WebControls.FormView>) adja meg a kiszolgálóoldali lapozást keresztül automatikus lapozási funkció.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Az ASP.NET 2.0 adathoz kötött vezérlők használatakor a tulajdonság értéke `true`.      > [!NOTE] > Kiszolgálóoldali lapozást, és az egyéni lapozás kölcsönösen kizárják egymást. Ha AllowServerPaging `true`, figyeljen arra, hogy <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>értéke `false`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public bool AllowServerPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a kiszolgálóoldali lapozás; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Az adatforráshoz megadott elemeinek átmásolja &lt;xref:System.Array?displayProperty=fullName&gt;, a megadott index a induló a &lt;xref:System.Array?displayProperty=fullName&gt;."
  remarks: "Ehhez a módszerhez az adatforrás tartalmának másolása a megadott <xref:System.Array?displayProperty=fullName>kezdődően a megadott indexpozíciónál.</xref:System.Array?displayProperty=fullName> A <xref:System.Array?displayProperty=fullName>gyakran használják az adatforrás elemeinek iterációt.</xref:System.Array?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A nulla alapú &lt;xref:System.Array?displayProperty=fullName&gt; az adatforrás, amely fogadja a kijelölt elemek."
    - id: index
      type: System.Int32
      description: "A megadott első pozícióját &lt;xref:System.Array?displayProperty=fullName&gt; az átmásolt fogadására."
  overload: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  id: Count
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az adatforrásból használandó cikkek száma."
  remarks: "A Count tulajdonság segítségével határozza meg az adatforrás használandó cikkek számát. A visszaadott érték attól függ, hogy engedélyezve van-e a lapozófájl, és hogy az egyéni lapozás szolgál.      -Ha lapozás le van tiltva (úgy, hogy a <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>tulajdonságot `false`), értékét a <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>tulajdonság adja vissza.</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      – Ha engedélyezve van a lapozás (úgy, hogy a <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>tulajdonságot `true`) és az egyéni lapozás engedélyezve van (úgy, hogy a <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>tulajdonsága `true`), értékét a <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>tulajdonság adja vissza.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      – Ha engedélyezve van a lapozás (úgy, hogy a <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>tulajdonságot `true`) és a <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>tulajdonsága `false`, értékét a <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>tulajdonság adja vissza.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      – Ha engedélyezve van a lapozás (úgy, hogy a <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>tulajdonságot `true`), egyéni lapozás le van tiltva (úgy, hogy a <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>tulajdonság `false`), és a <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>tulajdonsága `true`, értékét a <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>tulajdonságot a program levonja az értékét a <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A>tulajdonságot, mielőtt azt visszahozná.</xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>      > [!NOTE] > Ha a <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>tulajdonsága tartalmazza `null`, 0 adja vissza.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Az adatforrásból használandó cikkek száma."
  overload: System.Web.UI.WebControls.PagedDataSource.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  id: CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja az aktuális lap indexe."
  remarks: "A CurrentPageIndex tulajdonság használatával adja meg, vagy felfedheti az aktuális lap indexe."
  syntax:
    content: public int CurrentPageIndex { get; set; }
    return:
      type: System.Int32
      description: "Az aktuális lap indexe."
  overload: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja az adatforrást."
  remarks: "A DataSource tulajdonság használatával adja meg, vagy éppen lapozható adatforrás meghatározása."
  syntax:
    content: public System.Collections.IEnumerable DataSource { get; set; }
    return:
      type: System.Collections.IEnumerable
      description: "A &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt; megvalósítva az adatforrást képviselő objektum."
  overload: System.Web.UI.WebControls.PagedDataSource.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  id: DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Az elemek száma lekérdezi az adatforrásban."
  remarks: "A DataSourceCount tulajdonság segítségével határozza meg az adatforrás elemek száma. Ha egyéni lapozást vagy a kiszolgálóoldali lapozást használ, értékét a <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>tulajdonság visszaadott; ellenkező esetben adja vissza az adatforrásban lévő elemek száma.</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>      > [!NOTE] > Ha a <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>tulajdonsága tartalmazza `null`, 0 adja vissza.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>"
  syntax:
    content: public int DataSourceCount { get; }
    return:
      type: System.Int32
      description: "Az adatforrásban lévő elemek száma."
  overload: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Az adatforrás nincs egy &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt; objektum megvalósítva."
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  id: FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az első rekordra az oldalon megjelenített indexét."
  remarks: "A FirstIndexInPage tulajdonság segítségével határozza meg az index az első elem az aktuális lapon.      > [!NOTE] > Ha a <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>tulajdonsága `false`, vagy a <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>vagy <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>tulajdonság `true`, vagy a <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>tulajdonsága tartalmazza `null`, 0 adja vissza.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public int FirstIndexInPage { get; }
    return:
      type: System.Int32
      description: "Az első rekordra az oldalon megjelenített indexe."
  overload: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Értéket ad vissza egy &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; megvalósított objektum, amely tartalmazza az adatforrás összes elemet."
  remarks: "Ez a metódus használatával hozzon létre egy <xref:System.Collections.IEnumerator?displayProperty=fullName>, amely képes lehet többször is keresztül minden elem beolvasása az adatforrásban.</xref:System.Collections.IEnumerator?displayProperty=fullName> Az enumerátor jelenlegi pozíciója a cikk elérésére, a <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>tulajdonság.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> Használja a <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metódus áthelyezése a következő elem a gyűjteményben.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> A számbavevő a kezdeti pozícióra áthelyezéséhez használja a <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>metódus.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > Ha kezdetben a számbavevő bevitelekor vagy használatakor a <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>Helyezze át a számbavevő a gyűjtemény első eleme metódust meg kell hívnia a <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metódus.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> Ellenkező esetben az elem által képviselt a <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>tulajdonság nincs definiálva.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt; megvalósított objektum, amely tartalmazza az adatforrás összes elemet."
  overload: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Vissza a <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> , amely jelöli az egyes használja a kötéshez adatok elem tulajdonságainak."
  remarks: "A GetItemProperties metódus használatával hozzon létre egy <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>, amely jelöli az egyes használja a kötéshez adatok elem tulajdonságainak.</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> Ha a <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>tulajdonság `null` vagy nem egy <xref:System.ComponentModel.ITypedList?displayProperty=fullName>objektum megvalósított `null` adja vissza.</xref:System.ComponentModel.ITypedList?displayProperty=fullName> </xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> A GetItemProperties metódus további információkért lásd: <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>.</xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "A tömb <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objektum, amely tartalmazza a lista nevét adja vissza. Ez lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> , amely jelöli az egyes használja a kötéshez adatok elem tulajdonságainak."
  overload: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A lista nevét adja vissza. Ez a módszer nem vonatkozik ez az osztály."
  remarks: "Ez a módszer öröklődik <xref:System.ComponentModel.ITypedList?displayProperty=fullName>, és ezt az osztályt nem alkalmazható</xref:System.ComponentModel.ITypedList?displayProperty=fullName> Meg lett valósítva vissza <xref:System.String.Empty?displayProperty=fullName>minden esetben.</xref:System.String.Empty?displayProperty=fullName>"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "A tömb <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objektum, amely tartalmazza a lista nevét adja vissza. Ez lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: '&lt;XRef:System.String?displayProperty=fullName&gt; minden esetben.'
  overload: System.Web.UI.WebControls.PagedDataSource.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  id: IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy érték, amely jelzi, hogy engedélyezve van-e az egyéni lapozás lekérdezi."
  remarks: "A IsCustomPagingEnabled tulajdonság segítségével határozza meg, hogy engedélyezve van-e az egyéni lapozás.      > [!NOTE] > Mind a <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>és <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>tulajdonságnak kell lennie `true` ehhez a tulajdonsághoz való visszatéréshez `true`.</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public bool IsCustomPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a egyéni lapozás; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  id: IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi a voltát jelző érték az aktuális oldalon az első lap."
  remarks: "A IsFirstPage tulajdonság segítségével állapítsa meg, hogy az aktuális oldalon az első lap."
  syntax:
    content: public bool IsFirstPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális oldal az első oldal; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  id: IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi a voltát jelző érték az aktuális oldalon utolsóként megjelenő oldala."
  remarks: "A IsLastPage tulajdonság segítségével állapítsa meg, hogy az aktuális oldalon utolsóként megjelenő oldala."
  syntax:
    content: public bool IsLastPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális lap utolsóként megjelenő oldala; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  id: IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy érték, amely jelzi, hogy engedélyezve van-e a lapozási lekérdezi."
  remarks: "A IsPagingEnabled tulajdonság segítségével határozza meg, hogy engedélyezve van-e a lapozást.      > [!NOTE] > A <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>tulajdonságnak kell lennie `true` és a <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>tulajdonság nem állítható vissza a tulajdonság 0 `true`.</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>"
  syntax:
    content: public bool IsPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a lapozás; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy adatforrás írásvédett voltát jelző érték beolvasása."
  remarks: "Ez a tulajdonság megvalósítása mindig vissza `false`, ami azt jelenti, hogy az adatforrás minden esetben lehet módosítani."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>minden esetben."
  overload: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  id: IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi egy érték, amely jelzi, hogy engedélyezve van-e a kiszolgálóoldali lapozás támogatása."
  remarks: "Engedélyezve van a kiszolgálóoldali lapozás során a <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>és <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>mindkét tulajdonsága `true`, és az adatforrás által beolvasott adatok mennyisége nem jeleníthető meg egyetlen lapon.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> </xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>"
  syntax:
    content: public bool IsServerPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a lapozás és a kiszolgálóoldali lapozást használ jelzi a <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>tulajdonság; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>"
  overload: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy érték, amely jelzi, hogy az adatforráshoz való hozzáférés szinkronizálva van-e (szálbiztos) lekérése."
  remarks: "Ez a tulajdonság be van-e származtatva a <xref:System.Collections.ICollection?displayProperty=fullName>osztályhoz, és mindig vissza felülbírálja `false` azt jelzi, hogy ez az osztály nem szálbiztos.</xref:System.Collections.ICollection?displayProperty=fullName>       A IsSynchronized tulajdonság további információkért tekintse meg a <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>tulajdonsága a <xref:System.Collections.ICollection?displayProperty=fullName>felületet.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>minden esetben."
  overload: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az adatforrás összes elemek megjelenítéséhez szükséges oldalak teljes száma."
  remarks: "A PageCount tulajdonság segítségével határozza meg az adatforrás összes elemek megjelenítéséhez szükséges oldalak száma.      > [!NOTE] > Ha a <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>tulajdonság `null`, 0 adja vissza.</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> Ha a <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>tulajdonsága `false` vagy a <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>tulajdonság értéke 0 vagy kisebb, 1 adja vissza.</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> </xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>"
  syntax:
    content: public int PageCount { get; }
    return:
      type: System.Int32
      description: "Az adatforrás összes elemek megjelenítéséhez szükséges oldalak száma."
  overload: System.Web.UI.WebControls.PagedDataSource.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy oldalon megjelenítendő elemek száma."
  remarks: "A pageSize értékének tulajdonság használatával adja meg, vagy egy oldalon megjelenített elemek számának meghatározásához."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "Egy oldalon megjelenítendő elemek száma."
  overload: System.Web.UI.WebControls.PagedDataSource.PageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az objektum, amely segítségével szinkronizálása hozzáférése a gyűjteményhez."
  remarks: "Az ebben a megvalósításban visszaadott objektum a <xref:System.Web.UI.WebControls.PagedDataSource>objektum.</xref:System.Web.UI.WebControls.PagedDataSource>       További információ a <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>tulajdonság, tekintse meg a <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>tulajdonsága a <xref:System.Collections.ICollection?displayProperty=fullName>felületet.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Egy objektum, amely segítségével szinkronizálása hozzáférése a gyűjteményhez."
  overload: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  id: VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a virtuális elemszáma az adatforrás egyéni lapozás használata esetén."
  remarks: "Használja a VirtualCount tulajdonságot, ha egyéni lapozást vagy a kiszolgálóoldali lapozást azt határozza meg az adatforrás virtuális elemszáma. A VirtualCount tulajdonság további információkért lásd: <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>"
  syntax:
    content: public int VirtualCount { get; set; }
    return:
      type: System.Int32
      description: "A virtuális elemszáma az adatforrás egyéni lapozás használata esetén."
  overload: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource.PagedDataSource
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo
  nameWithType: PagedDataSource.CopyTo
- uid: System.Web.UI.WebControls.PagedDataSource.Count*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator
  nameWithType: PagedDataSource.GetEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties
  nameWithType: PagedDataSource.GetItemProperties
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName
  nameWithType: PagedDataSource.GetListName
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
