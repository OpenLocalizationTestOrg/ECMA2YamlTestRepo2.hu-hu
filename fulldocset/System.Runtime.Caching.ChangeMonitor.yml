### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.ChangeMonitor
  id: ChangeMonitor
  children:
  - System.Runtime.Caching.ChangeMonitor.#ctor
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  - System.Runtime.Caching.ChangeMonitor.UniqueId
  langs:
  - csharp
  name: ChangeMonitor
  nameWithType: ChangeMonitor
  fullName: System.Runtime.Caching.ChangeMonitor
  type: Class
  summary: "Egy olyan alaposztályból biztosít, amely figyeli az adatokat, a gyorsítótár elemét környezetétől állapotának változása származtatott egyéni típus."
  remarks: "A ChangeMonitor osztály származtatott figyelő osztályok, amelyek kifejezetten adott gyorsítótár-megvalósítások esetében az alaposztály van használva. A ChangeMonitor példánya adat, amely a gyorsítótár elemét függ állapotának változása figyeli. Az elem lehet például a fájlok vagy entitás, amelyek tartalma gyorsítótárba kerüljenek-e. Ha a fájlok vagy entitás frissül, a társított gyorsítótár-bejegyzés is módosítani kell. Közös figyelhető elemek adatok entitások (például adatbázismezőknek, értékek, sort vagy táblák), a másik gyorsítótári bejegyzést, és a fájlok és a fájl attribútumainak.       A függőség módosítása a függőség állapot. Egy tipikus gyorsítótár-megvalósításban a ChangeMonitor példánya értesíti a gyorsítótár, amely a függőség megváltozott, a gyorsítótár hajtja végre a szükséges műveletek, például a beszúrt gyorsítótári bejegyzés érvénytelenítése.       ChangeMonitor származtatott osztályok testre szabható a figyelheti az adott különböző adattárolókhoz függőségi módosítását. Például nincsenek gyorsítótár megvalósítások, a fájlrendszer, a fizikai memória vagy az adatbázis. A ChangeMonitor osztály megvizsgálja-e a gyorsítótár kívül elvégzett módosításokat, és majd riasztást küld a gyorsítótár, amely a változtatások történtek.       A [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] tartalmazza a következő osztályok, amelyek a ChangeMonitor osztály:- <xref:System.Runtime.Caching.CacheEntryChangeMonitor>- <xref:System.Runtime.Caching.FileChangeMonitor>- <xref:System.Runtime.Caching.HostFileChangeMonitor>- <xref:System.Runtime.Caching.SqlChangeMonitor>Ezen osztályok mindegyikének függőségek különböző típusú együttműködik.</xref:System.Runtime.Caching.SqlChangeMonitor> </xref:System.Runtime.Caching.HostFileChangeMonitor> </xref:System.Runtime.Caching.FileChangeMonitor> </xref:System.Runtime.Caching.CacheEntryChangeMonitor> Például a származtatott <xref:System.Runtime.Caching.FileChangeMonitor>osztály figyeli a módosításokat a rendszer fájladatok (fájlok és mappák) függ, a gyorsítótár elemét gyorsítótárhoz.</xref:System.Runtime.Caching.FileChangeMonitor>"
  syntax:
    content: 'public abstract class ChangeMonitor : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: ChangeMonitor()
  nameWithType: ChangeMonitor.ChangeMonitor()
  fullName: System.Runtime.Caching.ChangeMonitor.ChangeMonitor()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> osztály. Ez a konstruktor meghívott konstruktorok inicializálni az alaposztály származtatott osztályokat."
  remarks: "A <xref:System.Runtime.Caching.ChangeMonitor>osztály rendelkezik alapértelmezett konstruktorral.</xref:System.Runtime.Caching.ChangeMonitor> Azonban osztályok, amely örökli az alap <xref:System.Runtime.Caching.ChangeMonitor>osztályhoz, és adja meg az egyéni módosítás-figyelési viselkedés inicializálási kell végrehajtania a konstruktorban.</xref:System.Runtime.Caching.ChangeMonitor> További információkért lásd: a Megjegyzések az öröklőknek szakasz."
  syntax:
    content: protected ChangeMonitor ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.Dispose
  id: Dispose
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: Dispose()
  nameWithType: ChangeMonitor.Dispose()
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Feloldja a jelenlegi példány által használt összes erőforrást a <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> osztály."
  remarks: "A Dispose metódus meghívja a <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>származtatott osztályok csak egyszer, az első alkalommal a hívott metódus.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> A Dispose metódus későbbi hívásainak hatástalan. A metódus meghívása után a <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>tulajdonsága `true`.</xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>       A <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>túlterhelési rendelkezési kell meghívni egy <xref:System.Runtime.Caching.ChangeMonitor>példány.</xref:System.Runtime.Caching.ChangeMonitor> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Az alábbiakban a dispose metódus meghívása szabályait:-elem bekerülnek a gyorsítótár, mielőtt feladata a hívó arra, hogy egy <xref:System.Runtime.Caching.ChangeMonitor>példány.</xref:System.Runtime.Caching.ChangeMonitor>      -Egyszer gyorsítótárelem és a <xref:System.Runtime.Caching.ChangeMonitor>példányok, amely hozzá van rendelve a gyorsítótár, a gyorsítótár végrehajtója, győződjön meg arról, hogy átadott <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>nevezik, még akkor is, ha a Beszúrás sikertelen.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor>      -Után egy elemet, és hozzá van rendelve <xref:System.Runtime.Caching.ChangeMonitor>példányok kerülnek átadásra a gyorsítótár, a hívó nem kell eldobásakor a függőséget, mert amikor a <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metódus lehívásra kerül, a hívást a rendszer, mintha a függőség megváltozott.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor> Ennek eredményeképpen a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódus automatikusan megnyílik.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      -Ezek a szabályok figyelembe véve, a <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metódust kell hívni a következő módszerek valamelyikével:-felhasználók kell a Dispose metódus túlterhelést hívni, ha úgy döntenek, hogy nem a származtatott változás-figyelő példány beilleszteni a gyorsítótárba.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>          – A gyorsítótár-megvalósítással felelős a Dispose túlterhelési hívja, ha a megvalósítás próbál beszúrni a változás-példányhoz az objektum-gyorsítótár, de a Beszúrás sikertelen. A beszúrási kísérletek kivételt okoz, ha a gyorsítótár-megvalósítással társított függőségek kell rendelkeznie.          – Ha a rendszer eltávolította a gyorsítótári bejegyzést, a gyorsítótár-megvalósítással is kell rendelkeznie a függőséget.       A belső végrehajtásának a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódus automatikusan meghívja a <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metódus meghívja a visszahívás, amely után van regisztrálva a <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>metódus.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      > [!NOTE] > Ez az esemény indítási során automatikus dispose csak akkor fordul elő, ha a inicializálása a <xref:System.Runtime.Caching.ChangeMonitor>példány korábban szerzett.</xref:System.Runtime.Caching.ChangeMonitor>       Ha a származtatott módosítás figyelő konstruktor meghívja a <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>metódust, ha a módosítás figyelő állapota már megváltozott (Ez azt jelenti, hogy állapota, amelyek felügyelet alatt már megváltozott, amikor a konstruktor háttérfeladat még aktív volt) majd <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>metódus lesz automatikusan eldobásakor a módosítás figyelő.</xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> </xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>      > [!NOTE] > Felhasználóknak nem kell a Dispose metódus meghívására. Azonban meg nem akadályozza meg a metódus hívása. Ezért, ha így tesznek, a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódus meghívja.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Ebben az esetben a gyorsítótári bejegyzés értesítést kap, mintha a függőség megváltozott.       Származtatott osztályok Dispose metódus felülírása elkerülése érdekében a metódus nem egy explicit felhasználói felület megvalósításához."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.Dispose*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Az alap Dispose metódus hívása osztályból származtatott változás-figyelő inicializálási hiányosak."
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Összes kezelt és nem kezelt erőforrások és mutató hivatkozásokat kiadja a <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> példány. Ez a túlterhelés származtatott változás-figyelő osztályok kell végrehajtania."
  remarks: "Ha a értékének `disposing` értéke `true`, minden kezelt és nem kezelt erőforrások vannak távolítva, és ez az objektum mutató hivatkozásokat, hogy a származtatott változás-figyelő példány lehet a szemétgyűjtő kiadásakor. Válik biztossá, amely a következő <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metódus által aktivált a megvalósított Dispose metódus csak egyszer kell.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>"
  syntax:
    content: protected abstract void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>mutató hivatkozásokat és a kezelt és nem kezelt erőforrások kijelölése a <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> példány; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése. Ha <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> átadása, metódust a Dispose egy <xref uid=&quot;langword_csharp_finalizer&quot; name=&quot;finalizer&quot; href=&quot;&quot;> </xref> szál és felügyelt külső hivatkozásokat valószínűleg már nem érvényes, mert azok már megtörtént a szemétgyűjtő."
  overload: System.Runtime.Caching.ChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged
  id: HasChanged
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
  fullName: System.Runtime.Caching.ChangeMonitor.HasChanged
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Egy érték, amely azt jelzi, hogy lekérdezi az állapotot, amelyet a <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> osztály megváltozott."
  remarks: "Ellenőrizheti, hogy a tulajdonság a származtatott <xref:System.Runtime.Caching.ChangeMonitor>osztály megtekintéséhez, hogy változott-e egy függőséget.</xref:System.Runtime.Caching.ChangeMonitor>       A változó értéke `true` függőségi változás esetén (vagyis amikor a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>módszer neve).</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Után a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódust hívja a származtatott osztály, a HasChanged tulajdonság lesz `true`, függetlenül attól, hogy egy <xref:System.Runtime.Caching.OnChangedCallback>példány hívásával értesítést kapott arról a <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>metódus.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>      > [!NOTE] > Hívóknak ellenőrizheti a HasChanged tulajdonság függőség módosulásának. Többszálú környezetben egy egyszerűbb, és további fenntarthatóvá megközelítés azonban adatok beszúrása egy gyorsítótár-megvalósítással HasChanged tulajdonság nélkül. Gyorsítótár-megvalósítások kell a HasChanged tulajdonság tekintse meg és nem egy INSERT utasítás végrehajtása és beállítási művelet, ha egy vagy több társított függőségek már módosult."
  syntax:
    content: public bool HasChanged { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az állapotot, amelyet a <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> példány megváltozott; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.HasChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete
  id: InitializationComplete
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: InitializationComplete()
  nameWithType: ChangeMonitor.InitializationComplete()
  fullName: System.Runtime.Caching.ChangeMonitor.InitializationComplete()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Származtatott osztályok annak jelzésére, hogy az inicializálás befejezése konstruktor hívása."
  remarks: "Változásakor függőség inicializálásának egy származtatott osztályban befejezése előtt, a származtatott osztály konstruktorának kell meghívni a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódus.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>       Ha a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódus hivatkoznak, a <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>automatikusan tulajdonsága `true` a módosítás felügyelő.</xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> </xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Ennek eredményeképpen, amikor a módosítás figyelő konstruktor meghívja az InitializationComplete metódust, az alaposztály automatikusan hívni fogja a <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metódus.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Ha inicializálásának befejezése, a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódus automatikusan megválik a származtatott változás-példányhoz.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>"
  syntax:
    content: protected void InitializationComplete ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.InitializationComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed
  id: IsDisposed
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
  fullName: System.Runtime.Caching.ChangeMonitor.IsDisposed
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Egy érték, amely azt jelzi, hogy a származtatott példányának lekérdezi egy <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> osztály eldobása."
  remarks: "A tulajdonság értéke `true` után a következő <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metódushívások a <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>metódus a származtatott osztály példányának eldobásakor.</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> </xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>"
  syntax:
    content: public bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány eldobása; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  id: NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: NotifyOnChanged(OnChangedCallback)
  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  fullName: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Gyorsítótár-végrehajtók regisztrálni egy visszahívást, és értesítést kap arról által meghívott egy <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> keresztül példány a <xref href=&quot;System.Runtime.Caching.OnChangedCallback&quot;> </xref> delegálása függőség lapindexének változása után."
  remarks: "Gyorsítótár implementers Ez a módszer segítségével maguk módosítás figyelő legfeljebb kábelezést. Ha hozzárendel egy vagy több módosíthatja a gyorsítótár elemét a figyelőket, adja meg a <xref:System.Runtime.Caching.CacheItemPolicy>példány a gyorsítótár elem ki van töltve módosítás figyelők tulajdonsággal.</xref:System.Runtime.Caching.CacheItemPolicy> A gyorsítótár végrehajtó támogatja, hogy módosítsa a figyelők felelős keresztül Léptetés a <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>tulajdonság, és regisztrálja a <xref:System.Runtime.Caching.OnChangedCallback>delegáltak, minden módosítása figyelő talált.</xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>       Mivel a <xref:System.Runtime.Caching.OnChangedCallback>delegált tartalmaz egy nem kötelező state paraméter, akkor egy konkrét módosítás figyelő végrehajtása eltelhet választható állapotadatait.</xref:System.Runtime.Caching.OnChangedCallback> A gyorsítótár végrehajtója határozza meg, hogy egy explicit függőség, amelyet egy egyéni módosítás figyelő továbbküld a visszahívás részeként típusú is lehet képernyőfelvételt készíteni.      > [!NOTE] > Az alap gyorsítótár bővítési API állapot típusa rendelkezik explicit függőséget nem kötelező.       NotifyOnChanged metódus megvalósítása határozza meg automatikusan, hogy a figyelő állapota már változott NotifyOnChanged metódus lehívásra kerül időben. Ha a <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>tulajdonság `true`, majd a módszer automatikusan meghívja a <xref:System.Runtime.Caching.OnChangedCallback>eseménykezelő, regisztrált, a a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódus.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback> </xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Ez akkor fordul elő, mert lehetséges, hogy a gyorsítótár-megvalósítással létrehoz egy módosítás figyelőt, a gyorsítótár-megvalósítással lekérdezi a figyelő és kábeleket magát, akár óta a mögöttes figyelt állapota megváltozott. Ha az állapota már megváltozott, majd az objektum, amely számára a <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>metódus `null`.</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>       A NotifyOnChanged metódus csak egyszer hívható, és ezt a rendszer kivételt jelez."
  syntax:
    content: public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);
    parameters:
    - id: onChangedCallback
      type: System.Runtime.Caching.OnChangedCallback
      description: "Egy hivatkozást a módszerre függőség megváltozott hív meg."
  overload: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A visszahívási metódus már meg lett hívva."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>onChangedCallback</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  id: OnChanged(System.Object)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: OnChanged(Object)
  nameWithType: ChangeMonitor.OnChanged(Object)
  fullName: System.Runtime.Caching.ChangeMonitor.OnChanged(Object)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Hívja meg az eseményt, amikor a függőség módosítások indíthat származtatott osztályok."
  remarks: "Általában a OnChanged módszer neve függőségi változása esetén. A OnChanged metódust is nyílik meg, ha a változás-figyelő példánya eldobása, de az értékesítési következik be, csak akkor, ha a visszahívást nem már meg lett hívva.       Ha a OnChanged metódus lehívásra kerül, mielőtt a <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>metódust, az állapotadatok a OnChanged metódus hívása a menti a gyorsítótár-megvalósítással.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Emellett a visszahívást a <xref:System.Runtime.Caching.OnChangedCallback>azonnal meghívott metódus amikor a <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>metódus meghívja.</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> </xref:System.Runtime.Caching.OnChangedCallback>"
  syntax:
    content: protected void OnChanged (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A változási eseményt adatai. Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ChangeMonitor.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.ChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Jelző érték beolvasása a <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> osztály példányt."
  remarks: "A UniqueId tulajdonság értéke jellemzően áll függőségi kombinált nevek karakterláncadatokat, amely egyedi azonosítók figyeli az adatokat egy <xref:System.Runtime.Caching.ChangeMonitor>példány.</xref:System.Runtime.Caching.ChangeMonitor> A UniqueId tulajdonság értéke: karakterlánc. A karakterlánc értéke egyedi azonosítója körnek a <xref:System.Runtime.Caching.ChangeMonitor>példány.</xref:System.Runtime.Caching.ChangeMonitor>"
  syntax:
    content: public abstract string UniqueId { get; }
    return:
      type: System.String
      description: "A változás-figyelő példány azonosítója."
  overload: System.Runtime.Caching.ChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Caching.ChangeMonitor.#ctor
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: ChangeMonitor()
  nameWithType: ChangeMonitor.ChangeMonitor()
  fullName: System.Runtime.Caching.ChangeMonitor.ChangeMonitor()
- uid: System.Runtime.Caching.ChangeMonitor.Dispose
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose()
  nameWithType: ChangeMonitor.Dispose()
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose()
- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
  fullName: System.Runtime.Caching.ChangeMonitor.HasChanged
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: InitializationComplete()
  nameWithType: ChangeMonitor.InitializationComplete()
  fullName: System.Runtime.Caching.ChangeMonitor.InitializationComplete()
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
  fullName: System.Runtime.Caching.ChangeMonitor.IsDisposed
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: NotifyOnChanged(OnChangedCallback)
  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  fullName: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(OnChangedCallback)
- uid: System.Runtime.Caching.OnChangedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: OnChangedCallback
  nameWithType: OnChangedCallback
  fullName: System.Runtime.Caching.OnChangedCallback
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: OnChanged(Object)
  nameWithType: ChangeMonitor.OnChanged(Object)
  fullName: System.Runtime.Caching.ChangeMonitor.OnChanged(Object)
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.ChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.ChangeMonitor.#ctor*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: ChangeMonitor
  nameWithType: ChangeMonitor.ChangeMonitor
- uid: System.Runtime.Caching.ChangeMonitor.Dispose*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: ChangeMonitor.Dispose
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: InitializationComplete
  nameWithType: ChangeMonitor.InitializationComplete
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: NotifyOnChanged
  nameWithType: ChangeMonitor.NotifyOnChanged
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: OnChanged
  nameWithType: ChangeMonitor.OnChanged
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
