### YamlMime:ManagedReference
items:
- uid: System.Net.Http.StreamContent
  id: StreamContent
  children:
  - System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  - System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  - System.Net.Http.StreamContent.CreateContentReadStreamAsync
  - System.Net.Http.StreamContent.Dispose(System.Boolean)
  - System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: StreamContent
  nameWithType: StreamContent
  fullName: System.Net.Http.StreamContent
  type: Class
  summary: "Itt HTTP content adatfolyam alapján."
  syntax:
    content: 'public class StreamContent : System.Net.Http.HttpContent'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: StreamContent(Stream)
  nameWithType: StreamContent.StreamContent(Stream)
  fullName: System.Net.Http.StreamContent.StreamContent(Stream)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref> osztály."
  syntax:
    content: public StreamContent (System.IO.Stream content);
    parameters:
    - id: content
      type: System.IO.Stream
      description: "A tartalom inicializáló a <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref>."
  overload: System.Net.Http.StreamContent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32)'
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: StreamContent(Stream,Int32)
  nameWithType: StreamContent.StreamContent(Stream,Int32)
  fullName: System.Net.Http.StreamContent.StreamContent(Stream,Int32)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref> osztály."
  syntax:
    content: public StreamContent (System.IO.Stream content, int bufferSize);
    parameters:
    - id: content
      type: System.IO.Stream
      description: "A tartalom inicializáló a <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref>."
    - id: bufferSize
      type: System.Int32
      description: "A mérete, a puffer az <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref>."
  overload: System.Net.Http.StreamContent.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A <code> bufferSize </code> kisebb vagy egyenlő, mint nulla."
  platform:
  - net462
- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync
  id: CreateContentReadStreamAsync
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: CreateContentReadStreamAsync()
  nameWithType: StreamContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.StreamContent.CreateContentReadStreamAsync()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "A HTTP tartalomátvitelre írható memória adatfolyamba egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután az összes tartalmat a memóriafolyam írt.</xref:System.Threading.Tasks.Task%601>       A CreateContentReadStreamAsync metódus pufferel egy memóriafolyam a tartalmat. Származtatott osztályok ezt a viselkedést felülírhatja, ha egy jobb módon nem lehet beolvasni a tartalom adatfolyamként. For example, egy bájttömböt vagy egy karakterláncot használhat, például egy csak olvasható alkalmazásburkoló sokkal hatékonyabb módszer módszer <xref:System.IO.MemoryStream>bájt vagy karakterlánc köré.)</xref:System.IO.MemoryStream>"
  syntax:
    content: protected override System.Threading.Tasks.Task<System.IO.Stream> CreateContentReadStreamAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.StreamContent.CreateContentReadStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.StreamContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: StreamContent.Dispose(Boolean)
  fullName: System.Net.Http.StreamContent.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Net.Http.StreamContent&quot;> </xref> és a felügyelt erőforrások opcionálisan értékesít."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()` metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`. Ha a `disposing` paraméter `true`, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja, amelyhez a <xref:System.Net.Http.StreamContent>hivatkozik.</xref:System.Net.Http.StreamContent></xref:System.Object.Finalize%2A> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> kiadásokban csak a nem felügyelt erőforrások."
  overload: System.Net.Http.StreamContent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: StreamContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.StreamContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "A HTTP-tartalomhoz adatfolyamba szerializálni, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task>objektum befejeződik, miután a cél adatfolyam összes tartalmat lett szerializálva.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A cél adatfolyam."
    - id: context
      type: System.Net.TransportContext
      description: "Az átvitel (lexikális elem, például kötés csatorna) kapcsolatos információkat. Ez a paraméter lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.StreamContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: StreamContent.TryComputeLength(Int64)
  fullName: System.Net.Http.StreamContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Meghatározza, hogy van-e a stream tartalmát egy érvényes hossza (bájt)."
  remarks: "A TryComputeLength módszer lehetővé teszi HTTP tartalomátvitelre a tartalom hossza kiszámításához. Ez akkor hasznos, a tartalomtípusokat, amelyek könnyen kiszámíthatja a tartalom hosszúságát. Ha a tartalom hossza nem lehetséges, vagy drága (igényelnének a rendszer a teljes tartalma, ahol a szerializálási volna költséges vagy igényelnek nagy mennyiségű memóriát lefoglalni a rendszer meghajtóin) számítástechnikai, ez a módszer térhet vissza `false`. Ez a metódus visszatérési értéke `false`, ez azt jelenti, hogy szükség van a darabolásos átviteli vagy a tartalom kell beolvasni pufferelt előtt küldi el a kiszolgálón."
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "A hossza (bájt) a stream tartalmát."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> length </code> nem egy érvényes hosszúságú; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.StreamContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: StreamContent(Stream)
  nameWithType: StreamContent.StreamContent(Stream)
  fullName: System.Net.Http.StreamContent.StreamContent(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: StreamContent(Stream,Int32)
  nameWithType: StreamContent.StreamContent(Stream,Int32)
  fullName: System.Net.Http.StreamContent.StreamContent(Stream,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: CreateContentReadStreamAsync()
  nameWithType: StreamContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.StreamContent.CreateContentReadStreamAsync()
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.IO.Stream>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.StreamContent.Dispose(System.Boolean)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: StreamContent.Dispose(Boolean)
  fullName: System.Net.Http.StreamContent.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: StreamContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.StreamContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: StreamContent.TryComputeLength(Int64)
  fullName: System.Net.Http.StreamContent.TryComputeLength(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.StreamContent.#ctor*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: StreamContent
  nameWithType: StreamContent.StreamContent
- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: CreateContentReadStreamAsync
  nameWithType: StreamContent.CreateContentReadStreamAsync
- uid: System.Net.Http.StreamContent.Dispose*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: Dispose
  nameWithType: StreamContent.Dispose
- uid: System.Net.Http.StreamContent.SerializeToStreamAsync*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: StreamContent.SerializeToStreamAsync
- uid: System.Net.Http.StreamContent.TryComputeLength*
  parent: System.Net.Http.StreamContent
  isExternal: false
  name: TryComputeLength
  nameWithType: StreamContent.TryComputeLength
