### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  id: SecurityTokenHandlerCollection
  children:
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  type: Class
  summary: "A biztonsági jogkivonat kezelők gyűjteményét képviseli."
  syntax:
    content: 'public class SecurityTokenHandlerCollection : System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.SecurityTokenHandler>'
  inheritance:
  - System.Collections.ObjectModel.Collection`1
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SecurityTokenHandlerCollection()
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref> osztály."
  remarks: "Az új gyűjtemény nem tartalmaz semmilyen kezelők."
  syntax:
    content: public SecurityTokenHandlerCollection ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref> a megadott jogkivonat kezelők osztályra."
  remarks: "Ne használja ezt a konstruktort próbáljon úgy klónozni egy példányát a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>osztály, használja a **Klónozás** metódus inkább.</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>"
  syntax:
    content: public SecurityTokenHandlerCollection (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler> handlers);
    parameters:
    - id: handlers
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}
      description: "A jogkivonat-kezelők, amelyhez az új példány inicializálása."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  id: '#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref> osztály a megadott konfiguráció."
  remarks: "Az új gyűjtemény nem tartalmaz semmilyen kezelők."
  syntax:
    content: public SecurityTokenHandlerCollection (System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);
    parameters:
    - id: configuration
      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
      description: "Az alapkonfigurációt a gyűjteménnyel társítja."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)'
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerCollection&quot;> </xref> a megadott jogkivonat kezelők és a configuration osztály."
  remarks: "Ne használja ezt a konstruktort próbáljon úgy klónozni egy példányát a <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>osztály, használja a **Klónozás** metódus inkább.</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>"
  syntax:
    content: public SecurityTokenHandlerCollection (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler> handlers, System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);
    parameters:
    - id: handlers
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}
      description: "A jogkivonat-kezelők, amelyhez az új példány inicializálása."
    - id: configuration
      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
      description: "Az alapkonfigurációt a gyűjteménnyel társítja."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)
  id: AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: AddOrReplace(SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott jogkivonat-kezelő hozzáadása a gyűjteményhez. Ha ugyanezt a tokent a kezelő azonosítóját, a megadott kezelő már létezik a gyűjteményben, akkor a megadott kezelő helyére."
  syntax:
    content: public void AddOrReplace (System.IdentityModel.Tokens.SecurityTokenHandler handler);
    parameters:
    - id: handler
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "A biztonságijogkivonat-kezelő hozzáadására a gyűjteményhez."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Amely jelzi, hogy a megadott kulcsazonosító kifejezés olvashatók, a kezelők a gyűjtemény egyik, vagy a kapcsolódó értéket ad vissza <xref href=&quot;System.ServiceModel.Security.WSSecurityTokenSerializer&quot;> </xref>."
  syntax:
    content: public bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Az XML-olvasó található a kezdőelem. Az olvasó nem kell speciális."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kulcsazonosító kifejezés olvasható; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Amely jelzi, hogy a megadott kulcsazonosító kifejezés olvashatók, a kezelők a gyűjtemény egyik, vagy a kapcsolódó értéket ad vissza <xref href=&quot;System.ServiceModel.Security.WSSecurityTokenSerializer&quot;> </xref>."
  syntax:
    content: protected virtual bool CanReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Az XML-olvasó található a kezdőelem. Az olvasó nem kell speciális."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kulcsazonosító kifejezés olvasható; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)
  id: CanReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanReadToken(String)
  nameWithType: SecurityTokenHandlerCollection.CanReadToken(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy érték, amely azt jelzi, hogy a megadott karakterlánc-ábrázolása egy token olvashatók-e a kezelők a gyűjtemény egyik adja vissza."
  remarks: "A metódus meghívja a <xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%28System.String%29?displayProperty=fullName>a token kezelők metódusa (<xref:System.IdentityModel.Tokens.SecurityTokenHandler>) a gyűjteménynek a meghatározása, hogy a jogkivonat olvashatók.</xref:System.IdentityModel.Tokens.SecurityTokenHandler> </xref:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken%28System.String%29?displayProperty=fullName>"
  syntax:
    content: public bool CanReadToken (string tokenString);
    parameters:
    - id: tokenString
      type: System.String
      description: "A token karakterláncból."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyűjtemény tartalmazza a megadott jogkivonat; olvashatja biztonságijogkivonat-kezelő Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenString</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy érték, amely azt jelzi, hogy a megadott jogkivonat olvashatók-e a kezelők a gyűjtemény egyik adja vissza."
  syntax:
    content: public bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Az XML-olvasó található a kezdőelem. Az olvasó nem kell speciális."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jogkivonat olvasható; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  id: CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CanWriteToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A kezelők a gyűjtemény egyik adja vissza egy érték, amely azt jelzi, hogy a megadott jogkivonat törzsparaméter szerializálható."
  syntax:
    content: public bool CanWriteToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A biztonsági jogkivonatban szerializálni."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jogkivonat törzsparaméter szerializálható egy a kezelők; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems
  id: ClearItems
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ClearItems()
  nameWithType: SecurityTokenHandlerCollection.ClearItems()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Törli a kezelők az adott gyűjtemény összes. (Az alaposztály módszer felülbírálás)."
  syntax:
    content: protected override void ClearItems ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
  id: Configuration
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: Configuration
  nameWithType: SecurityTokenHandlerCollection.Configuration
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lekérdezi és beállítja az alapkonfigurációt a biztonsági jogkivonat-kezelő gyűjteményhez."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration Configuration { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
      description: "A konfiguráció a biztonságijogkivonat-kezelő gyűjteményhez."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection
  id: CreateDefaultSecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CreateDefaultSecurityTokenHandlerCollection()
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Alapvető biztonsági rendszer alapértelmezett gyűjteménye token kezelők, a rendszer alapértelmezett konfigurációval rendelkezik, amelyek mindegyike létrehoz. A gyűjteményben lévő a jogkivonat kezelők előtt előbb konfigurálni kell a szolgáltatás adatokat is használhatók."
  syntax:
    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollection CreateDefaultSecurityTokenHandlerCollection ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "Biztonsági jogkivonat-kezelő tartalmazó gyűjteményhez, az alapértelmezett, az alapvető biztonsági jogkivonat kezelők."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  id: CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Alapvető biztonsági jogkivonat kezelők rendszer alapértelmezett gyűjteménye hoz létre, és hozzárendeli a megadott konfiguráció az új gyűjtemény. A kezelők mindegyike rendelkezik, a rendszer alapértelmezett konfiguráció. A gyűjteményben lévő a jogkivonat kezelők előtt előbb konfigurálni kell a szolgáltatás adatokat is használhatók."
  syntax:
    content: public static System.IdentityModel.Tokens.SecurityTokenHandlerCollection CreateDefaultSecurityTokenHandlerCollection (System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration configuration);
    parameters:
    - id: configuration
      type: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
      description: "A konfiguráció a kezelő gyűjteménnyel társítja."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "Biztonsági jogkivonat-kezelő tartalmazó gyűjteményhez, az alapértelmezett, az alapvető biztonsági jogkivonat kezelők."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott jogkivonat leíró jogkivonatot hoz létre."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "A token leíró, amelyből a token hozható létre. A token leíró tulajdonságainak vannak állítva, ez a módszer metódus meghívása előtt."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Egy biztonsági jogkivonatot, amely megfelel a token leíró tulajdonságait."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  id: InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: InsertItem(Int32,SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott jogkivonat-kezelő beszúrása ebben a gyűjteményben, a megadott indexnél. (Az alaposztály módszer felülbírálás)."
  syntax:
    content: protected override void InsertItem (int index, System.IdentityModel.Tokens.SecurityTokenHandler item);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amelyen a kezelő kell beilleszteni."
    - id: item
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "A biztonságijogkivonat-kezelő szúrható be."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)
  id: Item(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: Item(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.Item(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(SecurityToken)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A biztonságijogkivonat-kezelő lekérése a gyűjtemény, amelyet kezelni tud a megadott biztonsági jogkivonatot."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[System.IdentityModel.Tokens.SecurityToken token] { get; }
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A jogkivonat, amelynek vissza kell adni a kezelőnek."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "A biztonságijogkivonat-kezelő, amely képes kezelni a megadott jogkivonat."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)
  id: Item(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: SecurityTokenHandlerCollection.Item(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(String)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A biztonságijogkivonat-kezelő lekérése a gyűjtemény, amelyet kezelni tud a megadott típus azonosítója."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[string tokenTypeIdentifier] { get; }
    parameters:
    - id: tokenTypeIdentifier
      type: System.String
      description: "URI, amely azonosítja a jogkivonat típusa."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "A biztonságijogkivonat-kezelő, amely képes kezelni a jogkivonatok, amelyek megfelelnek a megadott azonosítóval."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)
  id: Item(System.Type)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: Item(Type)
  nameWithType: SecurityTokenHandlerCollection.Item(Type)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(Type)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ez a gyűjtemény, amelyet a megadott lexikális elemtípusnak kezelni tud a kezelő lekérése."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityTokenHandler this[Type tokenType] { get; }
    parameters:
    - id: tokenType
      type: System.Type
      description: "A token kezelni kívánt típusú."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "A biztonságijogkivonat-kezelő, amely képes kezelni a megadott típusú jogkivonatok."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott XML-olvasó egy kulcsazonosító záradékban deserializes."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Az XML-olvasó található a kezdő elemének kell lennie a kulcsazonosító kifejezés a deszerializált XML."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Az XML-fájljából deszerializálni a kulcsazonosító kifejezés."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  id: ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott XML-olvasó egy kulcsazonosító záradékban deserializes."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Az XML-olvasó található a kezdő elemének kell lennie a kulcsazonosító kifejezés a deszerializált XML."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Az XML-fájljából deszerializálni a kulcsazonosító kifejezés."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)
  id: ReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ReadToken(String)
  nameWithType: SecurityTokenHandlerCollection.ReadToken(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott karakterlánc egy biztonsági tokent deserializes."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ReadToken (string tokenString);
    parameters:
    - id: tokenString
      type: System.String
      description: "A karakterláncot, amely a token deszerializálása."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A jogkivonatot, amely a megadott karakterlánc lett deszerializálva."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott XML-olvasó egy biztonsági tokent deserializes."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Az XML-olvasó található a kezdő elem a jogkivonat."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A biztonsági jogkivonat deszerializálni az XML-fájljából."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: RemoveItem(Int32)
  nameWithType: SecurityTokenHandlerCollection.RemoveItem(Int32)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(Int32)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Eltávolítja a megadott indexpozíciónál kezelő ehhez a gyűjteményhez. (Az alaposztály módszer felülbírálás)."
  syntax:
    content: protected override void RemoveItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Távolítsa el a kezelő nulla alapú indexét."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  id: SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: SetItem(Int32,SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott kezelő lecseréli a biztonságijogkivonat-kezelő, a megadott index a gyűjteményben."
  syntax:
    content: protected override void SetItem (int index, System.IdentityModel.Tokens.SecurityTokenHandler item);
    parameters:
    - id: index
      type: System.Int32
      description: "Az elem cserélje le a nulla alapú indexét."
    - id: item
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "Az új biztonságijogkivonat-kezelő a megadott indexpozíciónál elemhez."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
  id: TokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: TokenTypeIdentifiers
  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A jogkivonatok kezeli a kezelők a gyűjtemény típusa azonosítók listájának lekérése."
  syntax:
    content: public System.Collections.Generic.IEnumerable<string> TokenTypeIdentifiers { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "A típus azonosító URI-azonosítók listáját."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
  id: TokenTypes
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: TokenTypes
  nameWithType: SecurityTokenHandlerCollection.TokenTypes
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A kezelők a gyűjtemény által kezelt jogkivonatok típusú listájának lekérése."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Type> TokenTypes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "Típusok listája."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Érvényesíti a biztonsági jogkivonatot."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A jogkivonat érvényesítésére."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "Az identitások, amelyek szerepelnek a jogkivonatot."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott kulcsazonosító kifejezés XML-rendezi sorba."
  syntax:
    content: public void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Az XML-író."
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A szerializálható kulcsazonosító kifejezés."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott kulcsazonosító kifejezés XML-rendezi sorba."
  syntax:
    content: protected virtual void WriteKeyIdentifierClauseCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Az XML-író."
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A szerializálható kulcsazonosító kifejezés."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: WriteToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.WriteToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott biztonsági jogkivonat karakterláncra rendezi sorba."
  syntax:
    content: public string WriteToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A token szerializálása."
    return:
      type: System.String
      description: "A karakterlánc a lexikális elem tartozik."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A gyűjtemény nem tartalmazza a kezelő képes a megadott jogkivonat szerializálásakor."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A megadott biztonsági jogkivonat XML-rendezi sorba."
  syntax:
    content: public void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Az XML-író."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A token szerializálása."
  overload: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A gyűjtemény nem tartalmazza a kezelő képes a megadott jogkivonat szerializálásakor."
  platform:
  - net462
references:
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ObjectModel.Collection<System.IdentityModel.Tokens.SecurityTokenHandler>
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection()
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection()
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SecurityTokenHandler>
  nameWithType: IEnumerable<SecurityTokenHandler>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SecurityTokenHandler>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityTokenHandler
    name: SecurityTokenHandler
    nameWithType: SecurityTokenHandler
    fullName: SecurityTokenHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandlerConfiguration
  nameWithType: SecurityTokenHandlerConfiguration
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SecurityTokenHandlerCollection(IEnumerable<SecurityTokenHandler>,SecurityTokenHandlerConfiguration)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: AddOrReplace(SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(SecurityTokenHandler)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandler
  nameWithType: SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadToken(String)
  nameWithType: SecurityTokenHandlerCollection.CanReadToken(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanWriteToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ClearItems()
  nameWithType: SecurityTokenHandlerCollection.ClearItems()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems()
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Configuration
  nameWithType: SecurityTokenHandlerCollection.Configuration
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateDefaultSecurityTokenHandlerCollection()
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection()
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(SecurityTokenHandlerConfiguration)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: InsertItem(Int32,SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(Int32,SecurityTokenHandler)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Item(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.Item(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Item(String)
  nameWithType: SecurityTokenHandlerCollection.Item(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Item(Type)
  nameWithType: SecurityTokenHandlerCollection.Item(Type)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadKeyIdentifierClauseCore(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadToken(String)
  nameWithType: SecurityTokenHandlerCollection.ReadToken(String)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: SecurityTokenHandlerCollection.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: RemoveItem(Int32)
  nameWithType: SecurityTokenHandlerCollection.RemoveItem(Int32)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(Int32)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SetItem(Int32,SecurityTokenHandler)
  nameWithType: SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(Int32,SecurityTokenHandler)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: TokenTypeIdentifiers
  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: TokenTypes
  nameWithType: SecurityTokenHandlerCollection.TokenTypes
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteToken(SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.WriteToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection.SecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: AddOrReplace
  nameWithType: SecurityTokenHandlerCollection.AddOrReplace
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadKeyIdentifierClauseCore
  nameWithType: SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanReadToken
  nameWithType: SecurityTokenHandlerCollection.CanReadToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CanWriteToken
  nameWithType: SecurityTokenHandlerCollection.CanWriteToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ClearItems
  nameWithType: SecurityTokenHandlerCollection.ClearItems
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Configuration
  nameWithType: SecurityTokenHandlerCollection.Configuration
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateDefaultSecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: CreateToken
  nameWithType: SecurityTokenHandlerCollection.CreateToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: InsertItem
  nameWithType: SecurityTokenHandlerCollection.InsertItem
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: Item
  nameWithType: SecurityTokenHandlerCollection.Item
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadKeyIdentifierClauseCore
  nameWithType: SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ReadToken
  nameWithType: SecurityTokenHandlerCollection.ReadToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: RemoveItem
  nameWithType: SecurityTokenHandlerCollection.RemoveItem
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: SetItem
  nameWithType: SecurityTokenHandlerCollection.SetItem
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: TokenTypeIdentifiers
  nameWithType: SecurityTokenHandlerCollection.TokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: TokenTypes
  nameWithType: SecurityTokenHandlerCollection.TokenTypes
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: ValidateToken
  nameWithType: SecurityTokenHandlerCollection.ValidateToken
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteKeyIdentifierClause
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteKeyIdentifierClauseCore
  nameWithType: SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken*
  parent: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  isExternal: false
  name: WriteToken
  nameWithType: SecurityTokenHandlerCollection.WriteToken
