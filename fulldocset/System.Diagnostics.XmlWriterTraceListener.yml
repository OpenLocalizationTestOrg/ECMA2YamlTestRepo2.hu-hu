### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.XmlWriterTraceListener
  id: XmlWriterTraceListener
  children:
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.XmlWriterTraceListener.Close
  - System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  - System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  - System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: XmlWriterTraceListener
  nameWithType: XmlWriterTraceListener
  fullName: System.Diagnostics.XmlWriterTraceListener
  type: Class
  summary: "Arra utasítja a nyomkövetés vagy hibakeresés kimeneti XML-kódolású adatokat, egy <xref:System.IO.TextWriter>vagy egy <xref:System.IO.Stream>, például egy <xref href=&quot;System.IO.FileStream&quot;> </xref>.</xref:System.IO.Stream> </xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]\n>  You must have unmanaged code permission to create an instance of the XmlWriterTraceListener class.  \n  \n The XmlWriterTraceListener class converts tracing and debugging information into an XML-encoded text stream. The description of the XML output is shown in the tables that follow. You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.  \n  \n You can enable or disable an XmlWriterTraceListener through the application configuration file and then use the configured XmlWriterTraceListener in your application. Alternately, you can create an XmlWriterTraceListener in your code.  \n  \n To configure an XmlWriterTraceListener, edit the configuration file that corresponds to the name of your application. In this file, you can add or remove a listener, set the properties for a listener, or remove listeners. The configuration file should be formatted like the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"xmlListener\"   \n          type=\"System.Diagnostics.XmlWriterTraceListener\"   \n          initializeData=\"xmlOutput.xml\"   \n          traceOutputOptions=\"ProcessId, DateTime\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n The XmlWriterTraceListener class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.  The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.  If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.  \n  \n> [!NOTE]\n>  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.  \n  \n> [!NOTE]\n>  Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.  The listener methods are not intended to be called directly from application code. The XmlWriterTraceListener listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class. The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.  \n  \n The following table describes the elements and attributes of the XML output.  \n  \n|Element|Attributes|Output|Notes|  \n|-------------|----------------|------------|-----------|  \n|`CallStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|Special characters such as > or < are replaced with escape sequences. See the escaped character translation table that follows.|  \n|`Computer`|None|Always present.|The value of the <xref:System.Environment.MachineName%2A> property.|  \n|`Correlation`|`ActivityID`|Always present|If not specified, the default is an empty GUID.|  \n||`RelatedActivityID`|Depends on the presence of the `relatedActivityId` parameter in the Trace method call.|The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.|  \n|`DataItem`|None|Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.|This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.<br /><br /> The data output uses the `ToString` method of the passed-in data objects.|  \n|`EventID`|None|Always present.|Parameter input (`id`).|  \n|`Execution`|`ProcessName`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n||`ProcessID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>. On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.|  \n||`ThreadID`|Always present.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Level`|None|Always present.|Parameter input (the numeric value of `eventType`). Parameter values greater than 255 are output as 255.|  \n|`LogicalOperationStack`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.|  \n|`Message`|None|Depends on the presence of a message in the Trace method call.|This element is a formatted message if formatting arguments are provided.|  \n|`Source`|`Name`|Always present.|Parameter input.|  \n|`SubType`|`Name`|Always present.|Parameter input.|  \n|`TimeCreated`|`SystemTime`|Always present.|If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.|  \n|`TimeStamp`|None|Depends on the presence of the <xref:System.Diagnostics.TraceOptions> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|From the <xref:System.Diagnostics.TraceEventCache>.|  \n|`Type`|None|Always present.|Always the value 3.|  \n  \n The following table shows the characters that are escaped in the XML output. Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object. If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.  \n  \n|Escaped character|Value|  \n|-----------------------|-----------|  \n|&|&amp;|  \n|\\<|&lt;|  \n|>|&gt;|  \n|\"|&quot;|  \n|\\|&apos;|  \n|0xD|&\\#xD;|  \n|0xA|&\\#xA;|"
  example:
  - "The following code example shows the use of the XmlWriterTraceListener class to write both escaped and non-escaped data to file logs.  \n  \n [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/add/codesnippet/visualbasic/t-system.diagnostics.xml_1.vb)]\n [!code-cs[System.Diagnostics.XmlWriterTraceListener#1](~/add/codesnippet/csharp/t-system.diagnostics.xml_1.cs)]"
  syntax:
    content: 'public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  - System.Diagnostics.TextWriterTraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Writer
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(Stream)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> osztály, a megadott adatfolyam használata a Hibakeresés és nyomkövetés kimeneti címzettje."
  remarks: "A <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonság az inicializáláskor felvesz egy üres karakterlánc (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>, amely jelzi, hogy az adatfolyam a nyomkövetés-figyelő ír.</xref:System.IO.Stream>"
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(TextWriter)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> a megadott írói használja, mint a címzett a Hibakeresés és nyomkövetés kimeneti osztályban."
  remarks: "A <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonság az inicializáláskor felvesz egy üres karakterlánc (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>a nyomkövetés-figyelő, amely fogadja a kimeneti.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> osztály, a megadott fájl használata a Hibakeresés és nyomkövetés kimeneti címzettje."
  remarks: "Ez a konstruktor egy új példányát inicializálja a <xref:System.IO.StreamWriter>a megadott elérési úton megadott fájlhoz osztály használatával <xref:System.Text.Encoding.UTF8%2A>kódolás.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.StreamWriter> Ha a fájl létezik, a rendszer hozzáfűzi a. Ha a fájl nem létezik, egy új fájl jön létre.      > [!NOTE] > Csökkenti annak esélyét kivétel, bármely karakter, esetleg érvénytelenné válnak a kimeneti cseréli a &quot;?&quot; karakter.       A <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonság az inicializáláskor felvesz egy üres karakterlánc (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public XmlWriterTraceListener (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Írni a fájl nevét."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filename</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(Stream,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> a megadott névvel, a megadott adatfolyam használata a címzett a Hibakeresés és nyomkövetés kimeneti osztály."
  remarks: "Ez a konstruktor a <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonságot a `name` paraméter értéke, vagy üres karakterlánc (&quot;&quot;) Ha a `name` paraméter `null`.</xref:System.Diagnostics.TraceListener.Name%2A> A név nem használható az index a <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>gyűjtemény programozott módon tulajdonságainak módosítása a figyelőhöz.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> Például a következő kódot a beállítása a <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság egy példányának <xref:System.Diagnostics.XmlWriterTraceListener>amelynek <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonság értéke &quot;xmlListener&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =        TraceOptions.Timestamp   ```"
  syntax:
    content: public XmlWriterTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>, amely jelzi, hogy az adatfolyam a nyomkövetés-figyelő ír.</xref:System.IO.Stream>"
    - id: name
      type: System.String
      description: "Az új példány neve."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(TextWriter,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> a megadott névvel, a megadott írói használja, mint a címzett a Hibakeresés és nyomkövetés kimeneti osztály."
  remarks: "Ez a konstruktor a <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonságot a `name` paraméter értéke, vagy üres karakterlánc (&quot;&quot;) Ha a `name` paraméter `null`.</xref:System.Diagnostics.TraceListener.Name%2A> A név nem használható az index a <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>gyűjtemény programozott módon tulajdonságainak módosítása a figyelőhöz.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> Például a következő kódot a beállítása a <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság egy példányának <xref:System.Diagnostics.XmlWriterTraceListener>amelynek <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonság értéke &quot;xmlListener&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =        TraceOptions.Timestamp.   ```"
  syntax:
    content: public XmlWriterTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter>a nyomkövetés-figyelő, amely fogadja a kimeneti.</xref:System.IO.TextWriter>"
    - id: name
      type: System.String
      description: "Az új példány neve."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: XmlWriterTraceListener(String,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.XmlWriterTraceListener&quot;> </xref> a megadott névvel, a megadott fájl használata a címzett a Hibakeresés és nyomkövetés kimeneti osztály."
  remarks: "Ez a konstruktor egy új példányát inicializálja a <xref:System.IO.StreamWriter>a megadott elérési úton megadott fájlhoz osztály használatával <xref:System.Text.Encoding.UTF8%2A>kódolás.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.StreamWriter> Ha a fájl létezik, a rendszer hozzáfűzi a. Ha a fájl nem létezik, egy új fájl jön létre.      > [!NOTE] > Csökkenti annak esélyét kivétel, bármely karakter, esetleg érvénytelenné válnak a kimeneti cseréli a &quot;?&quot; karakter.       A <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonság értéke a `name` paraméter értékét, vagy üres karakterlánc (&quot;&quot;) Ha a `name` paraméter `null`.</xref:System.Diagnostics.TraceListener.Name%2A> A név nem használható az index a <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>gyűjtemény programozott módon tulajdonságainak módosítása a figyelőhöz.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> Például a következő kódot a beállítása a <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság egy példányának <xref:System.Diagnostics.XmlWriterTraceListener>amelynek <xref:System.Diagnostics.TraceListener.Name%2A>tulajdonság értéke &quot;xmlListener&quot;.</xref:System.Diagnostics.TraceListener.Name%2A> </xref:System.Diagnostics.XmlWriterTraceListener> </xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      ```   ((XmlWriterTraceListener)Trace.Listeners[&quot;xmlListener&quot;]).TraceOutputOptions =       TraceOptions.Timestamp.   ```"
  syntax:
    content: public XmlWriterTraceListener (string filename, string name);
    parameters:
    - id: filename
      type: System.String
      description: "Írni a fájl nevét."
    - id: name
      type: System.String
      description: "Az új példány neve."
  overload: System.Diagnostics.XmlWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Close
  id: Close
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: XmlWriterTraceListener.Close()
  fullName: System.Diagnostics.XmlWriterTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Bezárja a <xref:System.Diagnostics.TextWriterTraceListener.Writer*>úgy, hogy az informatikai többé nem kap a nyomkövetés vagy kimeneti hibakeresés a figyelőhöz.</xref:System.Diagnostics.TextWriterTraceListener.Writer*>"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.XmlWriterTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: XmlWriterTraceListener.Fail(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Például egy hibaüzenet és a fájl vagy adatfolyam részletes hibaüzenet az írási műveletek nyomkövetési adatokat."
  remarks: "Megjelenik az üzenet és részletes üzenet üzenetpanelen az alkalmazás futtatásakor, a felhasználói felület módban, és az alapértelmezés lesz a <xref:System.Diagnostics.TraceListener>példánya a <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>gyűjtemény.</xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceListener> Alapértelmezés szerint a gyűjteményben szereplő <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener> példánya Ez a viselkedés hozzáadásával vagy eltávolításával testre szabhat egy <xref:System.Diagnostics.TraceListener>a gyűjteményből.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public override void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "A hibaüzenet a következő írni."
    - id: detailMessage
      type: System.String
      description: "A részletes hibaüzenet hozzáfűzése a hibaüzenetet."
  overload: System.Diagnostics.XmlWriterTraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatokat, egy objektum és a fájl vagy adatfolyam eseményadatok."
  remarks: "A `eventCache`, `source`, `eventType`, és `id` paramétert kell használni a fejlécben és a láblécben pedig a nyomkövetést. A `id` paraméter alakítja előjel nélküli egész számként előtt, így egy negatív `id` érték íródik a nagy pozitív egész számként. A `data` paraméter van megírva egy `DataItem` csomópontja a `TraceData` elemet. A `ToString` az adatobjektum módszert karakterlánccá konvertálni.      > [!IMPORTANT] > Ez a módszer nem javasolt közvetlenül alkalmazáskód meghívni.  Azt nevezzük, módszerekkel a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályok nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékeket."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: data
      type: System.Object
      description: "Egy objektum hozható létre."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatokat, adatobjektumainak és a fájl vagy adatfolyam eseményadatok."
  remarks: "A `eventCache`, `source`, `eventType`, és `id` paramétert kell használni a fejlécben és a láblécben pedig a nyomkövetést. A `id` paraméter alakítja előjel nélküli egész számként előtt, így egy negatív `id` érték íródik a nagy pozitív egész számként. Az objektumok a `data` paramétertömb vannak megírva `DataItem` csomópontjának a `TraceData` elemet. A `ToString` minden adatobjektum módszert karakterlánccá konvertálni.      > [!IMPORTANT] > Ez a módszer nem javasolt közvetlenül alkalmazáskód meghívni.  Azt nevezzük, módszerekkel a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályok nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékeket."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: data
      type: System.Object[]
      description: "Az kibocsátás adatok objektumokból álló tömb."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatokat, egy üzenet és a fájl vagy adatfolyam eseményadatok."
  remarks: "A `eventCache`, `source`, `eventType`, és `id` paramétert kell használni a fejlécben és a láblécben pedig a nyomkövetést. A `id` paraméter alakítja előjel nélküli egész számként előtt, így egy negatív `id` érték íródik a nagy pozitív egész számként. A `message` paraméter értékét írja az `Message` elemet.      > [!IMPORTANT] > Ez a módszer nem javasolt közvetlenül alkalmazáskód meghívni.  Azt nevezzük, módszerekkel a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályok nyomkövetési adatokat írni.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékeket."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: message
      type: System.String
      description: "Az üzenet írni."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írási műveletek nyomkövetési adatokat, egy formázott üzenetet, és a fájl vagy adatfolyam eseményadatok."
  remarks: "The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace. The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer. The [String.Format(String, Object\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.  \n  \n> [!IMPORTANT]\n>  This method is not intended to be called directly by application code.  It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> értékeket."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: format
      type: System.String
      description: "A formázó karakterlánc, amely nulla vagy több objektumot a megfelelő formátumban elemet tartalmaz, a `args` tömb."
    - id: args
      type: System.Object[]
      description: "Nulla vagy több objektum formázása tartalmazó objektum tömb."
  overload: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatok, beleértve a egy kapcsolódó tevékenységet, egy üzenet és az esemény adatokat a fájlhoz vagy adatfolyamhoz."
  remarks: "A TraceTransfer módszert kapcsolódó nyomkövetési korrelációhoz. A `eventCache`, `source`, `id`, és `relatedActivityId` paramétert kell használni a fejlécben és a láblécben pedig a nyomkövetést. A `id` paraméter alakítja előjel nélküli egész számként előtt, így egy negatív `id` érték íródik a nagy pozitív egész számként. A `message` paraméter értékét írja az `Message` elemet. A <xref:System.Guid.ToString%28System.String%29?displayProperty=fullName>metódus lehívásra kerül konvertálni a `relatedActivityId`érték a &quot;B&quot; formátumú karakterláncot, amely akkor jelenik meg a fejléc.</xref:System.Guid.ToString%28System.String%29?displayProperty=fullName> A `SubTypeName` a lábléc elemet azonosítja egy <xref:System.Diagnostics.TraceEventType>.</xref:System.Diagnostics.TraceEventType> a nyomkövetési esemény típusa      > [!IMPORTANT] > A TraceTransfer metódus nem célja a alkalmazáskód meghívni.  Célja, hogy meghívni egy <xref:System.Diagnostics.TraceSource>hozható létre a nyomkövetési adatok, az objektum a <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>metódus.</xref:System.Diagnostics.TraceSource.TraceTransfer%2A> </xref:System.Diagnostics.TraceSource>"
  syntax:
    content: public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> , amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A forrás nevét."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: message
      type: System.String
      description: "Nyomkövetési üzenet írni."
    - id: relatedActivityId
      type: System.Guid
      description: "A <xref:System.Guid>rendszer, amely azonosítja a kapcsolódó tevékenysége.</xref:System.Guid>"
  overload: System.Diagnostics.XmlWriterTraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: XmlWriterTraceListener.Write(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A környezetben további adatok nélkül betű szerinti üzenetet ír a fájlhoz vagy adatfolyamhoz."
  remarks: "Használja a <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>metódus kontextusadatok szerepeljenek a kimenet.</xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Az üzenet írni."
  overload: System.Diagnostics.XmlWriterTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: XmlWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Betű szerinti üzenetet ír a fájlhoz vagy adatfolyamhoz követi az aktuális sor lezárójele a környezetben további adatok nélkül."
  remarks: "Használja a <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>metódus kontextusadatok szerepeljenek a kimenet.</xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Az üzenet írni."
  overload: System.Diagnostics.XmlWriterTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: System.Diagnostics.TextWriterTraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(Stream)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(TextWriter)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(Stream,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(Stream,String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(TextWriter,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(TextWriter,String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener(String,String)
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.XmlWriterTraceListener(String,String)
- uid: System.Diagnostics.XmlWriterTraceListener.Close
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Close()
  nameWithType: XmlWriterTraceListener.Close()
  fullName: System.Diagnostics.XmlWriterTraceListener.Close()
- uid: System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: XmlWriterTraceListener.Fail(String,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Fail(String,String)
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.XmlWriterTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.XmlWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: XmlWriterTraceListener.Write(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.Write(String)
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: XmlWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.XmlWriterTraceListener.WriteLine(String)
- uid: System.Diagnostics.XmlWriterTraceListener.#ctor*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: XmlWriterTraceListener
  nameWithType: XmlWriterTraceListener.XmlWriterTraceListener
- uid: System.Diagnostics.XmlWriterTraceListener.Close*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Close
  nameWithType: XmlWriterTraceListener.Close
- uid: System.Diagnostics.XmlWriterTraceListener.Fail*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Fail
  nameWithType: XmlWriterTraceListener.Fail
- uid: System.Diagnostics.XmlWriterTraceListener.TraceData*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceData
  nameWithType: XmlWriterTraceListener.TraceData
- uid: System.Diagnostics.XmlWriterTraceListener.TraceEvent*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: XmlWriterTraceListener.TraceEvent
- uid: System.Diagnostics.XmlWriterTraceListener.TraceTransfer*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: XmlWriterTraceListener.TraceTransfer
- uid: System.Diagnostics.XmlWriterTraceListener.Write*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: Write
  nameWithType: XmlWriterTraceListener.Write
- uid: System.Diagnostics.XmlWriterTraceListener.WriteLine*
  parent: System.Diagnostics.XmlWriterTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: XmlWriterTraceListener.WriteLine
