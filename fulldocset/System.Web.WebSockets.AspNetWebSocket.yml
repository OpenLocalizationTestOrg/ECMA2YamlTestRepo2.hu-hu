### YamlMime:ManagedReference
items:
- uid: System.Web.WebSockets.AspNetWebSocket
  id: AspNetWebSocket
  children:
  - System.Web.WebSockets.AspNetWebSocket.Abort
  - System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - System.Web.WebSockets.AspNetWebSocket.CloseStatus
  - System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
  - System.Web.WebSockets.AspNetWebSocket.Dispose
  - System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  - System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  - System.Web.WebSockets.AspNetWebSocket.State
  - System.Web.WebSockets.AspNetWebSocket.SubProtocol
  langs:
  - csharp
  name: AspNetWebSocket
  nameWithType: AspNetWebSocket
  fullName: System.Web.WebSockets.AspNetWebSocket
  type: Class
  summary: "A webkiszolgáló és ASP.NET-alkalmazások az ügyfél között valós idejű teljes kétirányú kapcsolatot jelöl."
  syntax:
    content: 'public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket'
  inheritance:
  - System.Object
  - System.Net.WebSockets.WebSocket
  implements: []
  inheritedMembers:
  - System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  - System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})
  - System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  - System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  - System.Net.WebSockets.WebSocket.IsApplicationTargeting45
  - System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  - System.Net.WebSockets.WebSocket.RegisterPrefixes
  - System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.Abort
  id: Abort
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: Abort()
  nameWithType: AspNetWebSocket.Abort()
  fullName: System.Web.WebSockets.AspNetWebSocket.Abort()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Minden függőben lévő i/o-műveletek a visszavonja a <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektumra, és az objektumot állapotának beállítása, hogy nem használható további i/o-műveletek elindításához."
  remarks: "Az Abort metódus meghívása után továbbra is elérheti tulajdonságai és metódusai, amelyek nem i/o-műveletek."
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Web.WebSockets.AspNetWebSocket.Abort*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum korábban elvetése megtörtént."
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  nameWithType: AspNetWebSocket.CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Egy aszinkron üzenetet küld a kapcsolat egy ügyfél. Ha a kiszolgáló a kérelmet bontja a kapcsolatot kezdeményez, a módszer a múlva nyugtázza a kérést, mielőtt adja vissza, az ügyfél vár."
  remarks: "Használhatja a CloseAsync és <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>módszerek zárja be az ügyfél által kezdeményezett mind a kiszolgáló által kezdeményezett irányuló kérelmek esetén egy <xref:System.Web.WebSockets.AspNetWebSocket>kapcsolat.</xref:System.Web.WebSockets.AspNetWebSocket> </xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> A két módszer tanúsítványigénylések ügyfél által kezdeményezett ugyanúgy: Miután az ügyfél üzenetet küld a kiszolgáló bontja a kapcsolatot, a kiszolgáló meghívja az ezen módszerek egyikét, és egy visszaigazoló elküldi az ügyfélnek, és majd a metódus visszaadja.       A kiszolgáló által kezdeményezett kéréseket a két módszer eltérően működik. A CloseAsync metódus küld egy üzenetet, amely az ügyfél a kapcsolat válaszra, és adja vissza. A kiszolgáló nem várja meg az ügyfél által küldött adatok. Ezzel szemben a <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>metódus üzenetet küld az ügyfélnek meg a kapcsolatot, és a válaszra való várakozás nélkül adja vissza.</xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> Hívása után a metódus visszaadja, a <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>metódust, és további adatokat vagy a visszaigazoló, az ügyfél által küldött tud kezelni.</xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>"
  syntax:
    content: public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
      description: "A bezárási művelet állapotkód."
    - id: statusDescription
      type: System.String
      description: "A bezárási művelet állapotüzenetet."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Az objektum, amely megszakítja a függőben lévő műveletet."
    return:
      type: System.Threading.Tasks.Task
      description: "A művelet mutató hivatkozás."
  overload: System.Web.WebSockets.AspNetWebSocket.CloseAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum korábban elvetése megtörtént."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum megszakított állapotban van.       – vagy – küldő műveletek nem érhetők el.       - vagy - fogadásakor műveletek nem érhetők el."
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  nameWithType: AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Egy aszinkron üzenetet küld a kapcsolat egy ügyfél. Ha a kiszolgáló a kérelmet bontja a kapcsolatot kezdeményez, a módszer a válaszra való várakozás nélkül adja vissza."
  remarks: "Használhatja a <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>CloseOutputAsync a és zárja be az ügyfél által kezdeményezett mind a kiszolgáló által kezdeményezett kérelmek egy <xref:System.Web.WebSockets.AspNetWebSocket>kapcsolat.</xref:System.Web.WebSockets.AspNetWebSocket> </xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> A két módszer tanúsítványigénylések ügyfél által kezdeményezett ugyanúgy: Miután az ügyfél üzenetet küld a kiszolgáló bontja a kapcsolatot, a kiszolgáló meghívja az ezen módszerek egyikét, és egy visszaigazoló elküldi az ügyfélnek, és majd a metódus visszaadja.       A kiszolgáló által kezdeményezett kéréseket a két módszer eltérően működik. A <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>módszer egy üzenetet küld az ügyfélnek a kapcsolat, megvárja-e a választ, és adja vissza.</xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> A kiszolgáló nem várja meg az ügyfél által küldött adatok. Ezzel szemben a CloseOutputAsync metódus üzenetet küld az ügyfélnek meg a kapcsolatot, és a válaszra való várakozás nélkül adja vissza. Hívása után a metódus visszaadja, a <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>metódust, és további adatokat vagy a visszaigazoló, az ügyfél által küldött tud kezelni.</xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>"
  syntax:
    content: public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
      description: "A bezárási művelet állapotkód."
    - id: statusDescription
      type: System.String
      description: "A bezárási művelet állapotüzenetet."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Az objektum, amely megszakítja a függőben lévő műveletet."
    return:
      type: System.Threading.Tasks.Task
      description: "A művelet mutató hivatkozás."
  overload: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum korábban elvetése megtörtént."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum megszakított állapotban van.       – vagy – küldő műveletek nem érhetők el."
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus
  id: CloseStatus
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: CloseStatus
  nameWithType: AspNetWebSocket.CloseStatus
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseStatus
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Egy állapot kódot, amely azt jelzi, hogy miért lekérdezi egy <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum be lett zárva."
  syntax:
    content: public override Nullable<System.Net.WebSockets.WebSocketCloseStatus> CloseStatus { get; }
    return:
      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
      description: "Az állapotkódot."
  overload: System.Web.WebSockets.AspNetWebSocket.CloseStatus*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum korábban elvetése megtörtént."
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
  id: CloseStatusDescription
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: CloseStatusDescription
  nameWithType: AspNetWebSocket.CloseStatusDescription
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Egy állapotüzenetet, amely azt ismerteti, hogy miért lekérdezi egy <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum be lett zárva."
  syntax:
    content: public override string CloseStatusDescription { get; }
    return:
      type: System.String
      description: "Az állapotüzenet tartalmazza."
  overload: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum korábban elvetése megtörtént."
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.Dispose
  id: Dispose
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: Dispose()
  nameWithType: AspNetWebSocket.Dispose()
  fullName: System.Web.WebSockets.AspNetWebSocket.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Feloldja a által használt erőforrások egy <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum."
  remarks: "Az ASP.NET automatikusan meghívja a Dispose metódus egy <xref:System.Web.WebSockets.AspNetWebSocket>objektum megmarad a a kód után végrehajtó erőforrásokat felszabadítása.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public override void Dispose ();
    parameters: []
  overload: System.Web.WebSockets.AspNetWebSocket.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  id: ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  nameWithType: AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Egyetlen üzenet töredékkel kap egy távoli ügyfélhez."
  syntax:
    content: public override System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult> ReceiveAsync (ArraySegment<byte> buffer, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: "Az állapotüzenet-adatokat tartalmazó tömb."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Az objektum, amely megszakítja a függőben lévő műveletet."
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
      description: "A feladat, egy üzenet fogadását mutató hivatkozás."
  overload: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum korábban elvetése megtörtént."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum megszakított állapotban van.       - vagy - fogadásakor műveletek nem érhetők el."
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  id: SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  nameWithType: AspNetWebSocket.SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Egyetlen üzenet töredékkel küld egy távoli ügyfélhez."
  syntax:
    content: public override System.Threading.Tasks.Task SendAsync (ArraySegment<byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: "Az állapotüzenet-adatokat tartalmazó tömb."
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
      description: "Az üzenet típusa."
    - id: endOfMessage
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>azt jelzi, hogy egy kódrészletet a teljes üzenet; vége Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Az objektum, amely megszakítja a függőben lévő műveletet."
    return:
      type: System.Threading.Tasks.Task
      description: "Az üzenet küldése tevékenység hivatkozik."
  overload: System.Web.WebSockets.AspNetWebSocket.SendAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> elemet eldobták."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum megszakított állapotban van.       – vagy – küldő műveletek nem érhetők el."
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.State
  id: State
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: State
  nameWithType: AspNetWebSocket.State
  fullName: System.Web.WebSockets.AspNetWebSocket.State
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Egy érték, amely jelzi a megnyitott vagy lezárt állapotát lekérdezi egy <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> objektum."
  syntax:
    content: public override System.Net.WebSockets.WebSocketState State { get; }
    return:
      type: System.Net.WebSockets.WebSocketState
      description: "A jelenlegi állapotában."
  overload: System.Web.WebSockets.AspNetWebSocket.State*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum korábban elvetése megtörtént."
  platform:
  - net462
- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol
  id: SubProtocol
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: SubProtocol
  nameWithType: AspNetWebSocket.SubProtocol
  fullName: System.Web.WebSockets.AspNetWebSocket.SubProtocol
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: "Egy alkalmazás-specifikus protokoll, amellyel a távoli ügyfél és kiszolgáló adatcserében működik közre keresztül neve lekérdezi egy <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> kapcsolat."
  syntax:
    content: public override string SubProtocol { get; }
    return:
      type: System.String
      description: "A protokoll neve."
  overload: System.Web.WebSockets.AspNetWebSocket.SubProtocol*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az objektum korábban elvetése megtörtént."
  platform:
  - net462
references:
- uid: System.Net.WebSockets.WebSocket
  isExternal: false
  name: System.Net.WebSockets.WebSocket
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.WebSockets.AspNetWebSocket.Abort
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: Abort()
  nameWithType: AspNetWebSocket.Abort()
  fullName: System.Web.WebSockets.AspNetWebSocket.Abort()
- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  nameWithType: AspNetWebSocket.CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseAsync(WebSocketCloseStatus,String,CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.WebSockets.WebSocketCloseStatus
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketCloseStatus
  nameWithType: WebSocketCloseStatus
  fullName: System.Net.WebSockets.WebSocketCloseStatus
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  nameWithType: AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseStatus
  nameWithType: AspNetWebSocket.CloseStatus
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseStatus
- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  parent: System
  isExternal: true
  name: Nullable<WebSocketCloseStatus>
  nameWithType: Nullable<WebSocketCloseStatus>
  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Net.WebSockets.WebSocketCloseStatus>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    nameWithType: WebSocketCloseStatus
    fullName: WebSocketCloseStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseStatusDescription
  nameWithType: AspNetWebSocket.CloseStatusDescription
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
- uid: System.Web.WebSockets.AspNetWebSocket.Dispose
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: Dispose()
  nameWithType: AspNetWebSocket.Dispose()
  fullName: System.Web.WebSockets.AspNetWebSocket.Dispose()
- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  nameWithType: AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<WebSocketReceiveResult>
  nameWithType: Task<WebSocketReceiveResult>
  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.WebSockets.WebSocketReceiveResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketReceiveResult
    name: WebSocketReceiveResult
    nameWithType: WebSocketReceiveResult
    fullName: WebSocketReceiveResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: true
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  nameWithType: AspNetWebSocket.SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
- uid: System.Net.WebSockets.WebSocketMessageType
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketMessageType
  nameWithType: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.WebSockets.AspNetWebSocket.State
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: State
  nameWithType: AspNetWebSocket.State
  fullName: System.Web.WebSockets.AspNetWebSocket.State
- uid: System.Net.WebSockets.WebSocketState
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketState
  nameWithType: WebSocketState
  fullName: System.Net.WebSockets.WebSocketState
- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: SubProtocol
  nameWithType: AspNetWebSocket.SubProtocol
  fullName: System.Web.WebSockets.AspNetWebSocket.SubProtocol
- uid: System.Web.WebSockets.AspNetWebSocket.Abort*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: Abort
  nameWithType: AspNetWebSocket.Abort
- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseAsync
  nameWithType: AspNetWebSocket.CloseAsync
- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseOutputAsync
  nameWithType: AspNetWebSocket.CloseOutputAsync
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseStatus
  nameWithType: AspNetWebSocket.CloseStatus
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseStatusDescription
  nameWithType: AspNetWebSocket.CloseStatusDescription
- uid: System.Web.WebSockets.AspNetWebSocket.Dispose*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: Dispose
  nameWithType: AspNetWebSocket.Dispose
- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: ReceiveAsync
  nameWithType: AspNetWebSocket.ReceiveAsync
- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: SendAsync
  nameWithType: AspNetWebSocket.SendAsync
- uid: System.Web.WebSockets.AspNetWebSocket.State*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: State
  nameWithType: AspNetWebSocket.State
- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: SubProtocol
  nameWithType: AspNetWebSocket.SubProtocol
