### YamlMime:ManagedReference
items:
- uid: System.Net.Http.WebRequestHandler
  id: WebRequestHandler
  children:
  - System.Net.Http.WebRequestHandler.#ctor
  - System.Net.Http.WebRequestHandler.AllowPipelining
  - System.Net.Http.WebRequestHandler.AuthenticationLevel
  - System.Net.Http.WebRequestHandler.CachePolicy
  - System.Net.Http.WebRequestHandler.ClientCertificates
  - System.Net.Http.WebRequestHandler.ContinueTimeout
  - System.Net.Http.WebRequestHandler.ImpersonationLevel
  - System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
  - System.Net.Http.WebRequestHandler.ReadWriteTimeout
  - System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
  - System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  langs:
  - csharp
  name: WebRequestHandler
  nameWithType: WebRequestHandler
  fullName: System.Net.Http.WebRequestHandler
  type: Class
  summary: "Nem érhető el a Windows Áruházbeli alkalmazások vagy más környezetekben asztal-specifikus szolgáltatásokat biztosítja."
  remarks: "Ez az osztály megvalósítja a szállítási kezelő használatával <xref:System.Net.HttpWebRequest>, hogy a kiszolgáló HTTP-kérelmeket küldjön.</xref:System.Net.HttpWebRequest>"
  syntax:
    content: 'public class WebRequestHandler : System.Net.Http.HttpClientHandler'
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  - System.Net.Http.HttpClientHandler
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpClientHandler.AllowAutoRedirect
  - System.Net.Http.HttpClientHandler.AutomaticDecompression
  - System.Net.Http.HttpClientHandler.ClientCertificateOptions
  - System.Net.Http.HttpClientHandler.CookieContainer
  - System.Net.Http.HttpClientHandler.Credentials
  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  - System.Net.Http.HttpClientHandler.PreAuthenticate
  - System.Net.Http.HttpClientHandler.Proxy
  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  - System.Net.Http.HttpClientHandler.SupportsProxy
  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  - System.Net.Http.HttpClientHandler.UseCookies
  - System.Net.Http.HttpClientHandler.UseDefaultCredentials
  - System.Net.Http.HttpClientHandler.UseProxy
  - System.Net.Http.HttpMessageHandler.Dispose
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: WebRequestHandler()
  nameWithType: WebRequestHandler.WebRequestHandler()
  fullName: System.Net.Http.WebRequestHandler.WebRequestHandler()
  type: Constructor
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Http.WebRequestHandler&quot;> </xref> osztály."
  syntax:
    content: public WebRequestHandler ();
    parameters: []
  overload: System.Net.Http.WebRequestHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.AllowPipelining
  id: AllowPipelining
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: AllowPipelining
  nameWithType: WebRequestHandler.AllowPipelining
  fullName: System.Net.Http.WebRequestHandler.AllowPipelining
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy az Internet-erőforrás a kérelem a következő feldolgozási sorban."
  remarks: "Egy alkalmazás egy futószalag technikájú kapcsolatok beállításait használja a AllowPipelining tulajdonság. Ha AllowPipelining van `true`, az alkalmazás lehetővé teszi az őket támogató kiszolgálókat futószalag technikájú kapcsolatokat."
  syntax:
    content: public bool AllowPipelining { get; set; }
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>.</xref:System.Boolean> Beolvasása       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kérelem kell irányíthatók futószalagos; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.WebRequestHandler.AllowPipelining*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.AuthenticationLevel
  id: AuthenticationLevel
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: AuthenticationLevel
  nameWithType: WebRequestHandler.AuthenticationLevel
  fullName: System.Net.Http.WebRequestHandler.AuthenticationLevel
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a szintű hitelesítési és megszemélyesítési ehhez a kérelemhez használt jelző érték."
  remarks: "A kölcsönös hitelesítést az ügyfél és a kiszolgáló jelent-e hitelesítő adatokat a személyazonosságukat. A <xref:System.Net.Security.AuthenticationLevel>és <xref:System.Net.Security.AuthenticationLevel>értékek: a Kerberos-hitelesítés szükséges.</xref:System.Net.Security.AuthenticationLevel> </xref:System.Net.Security.AuthenticationLevel> A Kerberos-hitelesítés közvetlenül támogatott, vagy használhat, ha a Negotiate biztonsági protokoll segítségével válassza ki azt a tényleges biztonsági protokollt. Hitelesítési protokollokkal kapcsolatos további információkért lásd: [internetes hitelesítési](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }
    return:
      type: System.Net.Security.AuthenticationLevel
      description: "<xref:System.Net.Security.AuthenticationLevel>.</xref:System.Net.Security.AuthenticationLevel> Beolvasása       Tagértékeinek a <xref:System.Net.Security.AuthenticationLevel>értékek.</xref:System.Net.Security.AuthenticationLevel>  Az alapértelmezett érték: <xref:System.Net.Security.AuthenticationLevel>.</xref:System.Net.Security.AuthenticationLevel>"
  overload: System.Net.Http.WebRequestHandler.AuthenticationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.CachePolicy
  id: CachePolicy
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: CachePolicy
  nameWithType: WebRequestHandler.CachePolicy
  fullName: System.Net.Http.WebRequestHandler.CachePolicy
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a gyorsítótári házirend ehhez a kérelemhez."
  remarks: "Az aktuális gyorsítótári házirend és a gyorsítótárban a kért erőforrás jelenléte határozza meg, hogy a válasz lehet beolvasni a gyorsítótárból. Gyorsítótárazott válaszok használata általában javítja az alkalmazások teljesítménye, de fennáll a veszélye, hogy a válasz a gyorsítótárban nem egyezik meg a választ a kiszolgálón.       Az alapértelmezett gyorsítótár házirend adható meg a Machine.config konfigurációs fájlban, vagy úgy, hogy a <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>tulajdonság.</xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>       Egy erőforrás másolatát csak a gyorsítótárba kerül, ha a válaszfolyamnak az erőforrás lekérése, és olvassa be az adatfolyam végét. Így erőforrást egy másik kérelem használhatja a gyorsítótárban található példányát, attól függően, hogy a gyorsítótár házirendszint ehhez a kérelemhez."
  syntax:
    content: public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Returns <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;></xref>.       A <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> objektum, amely meghatározza a gyorsítótári házirend. Az alapértelmezett érték <xref:System.Net.WebRequest.DefaultCachePolicy*>.</xref:System.Net.WebRequest.DefaultCachePolicy*>"
  overload: System.Net.Http.WebRequestHandler.CachePolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.ClientCertificates
  id: ClientCertificates
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: WebRequestHandler.ClientCertificates
  fullName: System.Net.Http.WebRequestHandler.ClientCertificates
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja az ehhez a kérelemhez társított biztonsági tanúsítványok gyűjteménye."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Returns <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;></xref>.       Ehhez a kérelemhez társított biztonsági tanúsítványok gyűjteménye."
  overload: System.Net.Http.WebRequestHandler.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.ContinueTimeout
  id: ContinueTimeout
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ContinueTimeout
  nameWithType: WebRequestHandler.ContinueTimeout
  fullName: System.Net.Http.WebRequestHandler.ContinueTimeout
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja az idő, ezredmásodpercben megadva, az alkalmazás várakozik 100-továbbra is a kiszolgáló adatok feltöltés előtt."
  syntax:
    content: public TimeSpan ContinueTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>.</xref:System.TimeSpan> Beolvasása       Ennyi idő alatt, ezredmásodpercben megadva, az alkalmazás várakozik 100 – a kiszolgáló továbbra is az adatok feltöltés előtt. Az alapértelmezett érték: 350 ezredmásodperc."
  overload: System.Net.Http.WebRequestHandler.ContinueTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.ImpersonationLevel
  id: ImpersonationLevel
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ImpersonationLevel
  nameWithType: WebRequestHandler.ImpersonationLevel
  fullName: System.Net.Http.WebRequestHandler.ImpersonationLevel
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a megszemélyesítési szint a jelenlegi kérelem."
  remarks: "A megszemélyesítési szint határozza meg, hogy a kiszolgáló használatát az ügyfél hitelesítő adatait."
  syntax:
    content: public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: "<xref:System.Security.Principal.TokenImpersonationLevel>.</xref:System.Security.Principal.TokenImpersonationLevel> Beolvasása       A megszemélyesítési szint a kérelemhez. Az alapértelmezett érték <xref:System.Security.Principal.TokenImpersonationLevel>.</xref:System.Security.Principal.TokenImpersonationLevel>"
  overload: System.Net.Http.WebRequestHandler.ImpersonationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
  id: MaxResponseHeadersLength
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: MaxResponseHeadersLength
  nameWithType: WebRequestHandler.MaxResponseHeadersLength
  fullName: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a válaszfejlécek engedélyezett maximális hosszát."
  remarks: "A válaszok fejlécének hosszúságát a válasz állapota és a HTTP protokoll részeként kapott extra vezérlőkarakterek tartalmazza. Egy értékének-1 érték azt jelenti, hogy nincs korlátozva a válaszfejlécek; a 0 érték azt jelenti, hogy az összes kérelem sikertelen lesz.       Ha a MaxResponseHeadersLength tulajdonság nincs megadva, alapértelmezett értéke a <xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A>tulajdonság.</xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A>       A fogadott válaszfejlécet hossza meghaladja a MaxResponseHeadersLength tulajdonság értékét, ha a rendszer kivételt hoz létre, a válasz történő hozzáféréskor."
  syntax:
    content: public int MaxResponseHeadersLength { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>.</xref:System.Int32> Beolvasása       A hosszát, kilobájt (1024 bájt mennyiségben), a response fejlécekkel együtt."
  overload: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: WebRequestHandler.ReadWriteTimeout
  fullName: System.Net.Http.WebRequestHandler.ReadWriteTimeout
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja időtúllépés értéke ezredmásodpercet fejez kérést írása, vagy egy kiszolgálótól érkező választ olvasta."
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>.</xref:System.Int32> Beolvasása       A szám előtt a írásakor vagy olvasásakor végrehajtásának időkorlátja ezredmásodpercben. Az alapértelmezett értéke 300 000 ezredmásodperc (5 perc)."
  overload: System.Net.Http.WebRequestHandler.ReadWriteTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
  id: ServerCertificateValidationCallback
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ServerCertificateValidationCallback
  nameWithType: WebRequestHandler.ServerCertificateValidationCallback
  fullName: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a visszahívási metódus ellenőrzi a kiszolgáló tanúsítványát."
  remarks: "Ha a ServerCertificateValidationCallback `null`, a kiszolgálói tanúsítvány érvényesíti szabványos jól ismert hitelesítésszolgáltatók használatával."
  syntax:
    content: public System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }
    return:
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Returns <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;></xref>.       A visszahívási metódus ellenőrzi a kiszolgáló tanúsítványát."
  overload: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  id: UnsafeAuthenticatedConnectionSharing
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  fullName: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a nagy sebességű NTLM-hitelesített kapcsolat megosztásának engedélyezése."
  remarks: "Az alapértelmezett érték a tulajdonság `false`, amelyek hatására az aktuális kapcsolat bezárására készül, egy kérelem befejeződése után. Az alkalmazás minden alkalommal, amikor egy új kérelmet kapcsolatos haladjon végig a hitelesítés során. Ha ez a tulajdonság értéke `true`, a kapcsolat a válasz beolvasásához használt nyitva marad, a hitelesítés végrehajtása után. Ebben az esetben másik kérelmeket, amelyek e tulajdonsága `true` használhatják a kapcsolat újbóli hitelesítése nélkül. Ez azt jelenti, ha a kapcsolat A felhasználó hitelesítése, &quot;B&quot; felhasználó újból használhatja az A csatlakozáskor. felhasználói B kérés teljesítése A. felhasználó hitelesítő adatai alapján      > [!CAUTION] > Mivel lehetséges, hogy az alkalmazás használata a kapcsolat nélküli hitelesített, győződjön meg arról, hogy nincs felügyeleti biztonsági rés van a rendszer e tulajdonság beállításakor szüksége `true`. Ha az alkalmazás kérelmet küld, ha több felhasználó (megszemélyesít több felhasználói fiók), és a hitelesítés az erőforrások védelméhez, számára ne adja meg ezt a tulajdonságot `true` kivéve, ha az alább ismertetett kapcsolatcsoportokat használ.       Érdemes lehet érdemes lehet engedélyezni ezt a módszert, ha a teljesítménybeli problémákat tapasztal, és az alkalmazás fut-e az integrált Windows-hitelesítés egy webkiszolgálón.       Ezt a beállítást a rendszer biztonsági kockázatokra való megnyitása. Ha a <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>tulajdonságot `true` ügyeljen arra, hogy a következő óvintézkedéseket:-futtassa az alkalmazást egy olyan védett környezetben lehetséges kapcsolat biztonsági rések elkerülése érdekében.</xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>       Ha a háttér-kiszolgálófiók szabályozásához alternatívájaként érdemes adatmegőrzési hitelesítés kikapcsolása. Ez növeli a teljesítményt, kisebb mértékű azonban biztonságosabb. További részletekért keresse meg az MSDN-könyvtárban, AuthPersistence [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public bool UnsafeAuthenticatedConnectionSharing { get; set; }
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>.</xref:System.Boolean> Beolvasása       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>megnyitva, a hitelesített kapcsolatot; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpClientHandler
  isExternal: false
  name: System.Net.Http.HttpClientHandler
- uid: System.Net.Http.WebRequestHandler.#ctor
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: WebRequestHandler()
  nameWithType: WebRequestHandler.WebRequestHandler()
  fullName: System.Net.Http.WebRequestHandler.WebRequestHandler()
- uid: System.Net.Http.WebRequestHandler.AllowPipelining
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: AllowPipelining
  nameWithType: WebRequestHandler.AllowPipelining
  fullName: System.Net.Http.WebRequestHandler.AllowPipelining
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.WebRequestHandler.AuthenticationLevel
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: AuthenticationLevel
  nameWithType: WebRequestHandler.AuthenticationLevel
  fullName: System.Net.Http.WebRequestHandler.AuthenticationLevel
- uid: System.Net.Security.AuthenticationLevel
  parent: System.Net.Security
  isExternal: true
  name: AuthenticationLevel
  nameWithType: AuthenticationLevel
  fullName: System.Net.Security.AuthenticationLevel
- uid: System.Net.Http.WebRequestHandler.CachePolicy
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: CachePolicy
  nameWithType: WebRequestHandler.CachePolicy
  fullName: System.Net.Http.WebRequestHandler.CachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.Http.WebRequestHandler.ClientCertificates
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ClientCertificates
  nameWithType: WebRequestHandler.ClientCertificates
  fullName: System.Net.Http.WebRequestHandler.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.Http.WebRequestHandler.ContinueTimeout
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ContinueTimeout
  nameWithType: WebRequestHandler.ContinueTimeout
  fullName: System.Net.Http.WebRequestHandler.ContinueTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.Http.WebRequestHandler.ImpersonationLevel
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ImpersonationLevel
  nameWithType: WebRequestHandler.ImpersonationLevel
  fullName: System.Net.Http.WebRequestHandler.ImpersonationLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: MaxResponseHeadersLength
  nameWithType: WebRequestHandler.MaxResponseHeadersLength
  fullName: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.WebRequestHandler.ReadWriteTimeout
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: WebRequestHandler.ReadWriteTimeout
  fullName: System.Net.Http.WebRequestHandler.ReadWriteTimeout
- uid: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: WebRequestHandler.ServerCertificateValidationCallback
  fullName: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  fullName: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
- uid: System.Net.Http.WebRequestHandler.#ctor*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: WebRequestHandler
  nameWithType: WebRequestHandler.WebRequestHandler
- uid: System.Net.Http.WebRequestHandler.AllowPipelining*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: AllowPipelining
  nameWithType: WebRequestHandler.AllowPipelining
- uid: System.Net.Http.WebRequestHandler.AuthenticationLevel*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: AuthenticationLevel
  nameWithType: WebRequestHandler.AuthenticationLevel
- uid: System.Net.Http.WebRequestHandler.CachePolicy*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: CachePolicy
  nameWithType: WebRequestHandler.CachePolicy
- uid: System.Net.Http.WebRequestHandler.ClientCertificates*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ClientCertificates
  nameWithType: WebRequestHandler.ClientCertificates
- uid: System.Net.Http.WebRequestHandler.ContinueTimeout*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ContinueTimeout
  nameWithType: WebRequestHandler.ContinueTimeout
- uid: System.Net.Http.WebRequestHandler.ImpersonationLevel*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ImpersonationLevel
  nameWithType: WebRequestHandler.ImpersonationLevel
- uid: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: MaxResponseHeadersLength
  nameWithType: WebRequestHandler.MaxResponseHeadersLength
- uid: System.Net.Http.WebRequestHandler.ReadWriteTimeout*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: WebRequestHandler.ReadWriteTimeout
- uid: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: WebRequestHandler.ServerCertificateValidationCallback
- uid: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
