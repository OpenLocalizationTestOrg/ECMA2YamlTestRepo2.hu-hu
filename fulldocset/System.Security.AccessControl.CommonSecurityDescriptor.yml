### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  id: CommonSecurityDescriptor
  children:
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  - System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  - System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  - System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  - System.Security.AccessControl.CommonSecurityDescriptor.Group
  - System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  - System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  - System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  - System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  - System.Security.AccessControl.CommonSecurityDescriptor.Owner
  - System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  langs:
  - csharp
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
  type: Class
  summary: "A biztonsági leíró jelöli. A biztonsági leíró tartalmaz egy olyan tulajdonost, elsődleges csoport, egy diszkrét hozzáférési szabálygyűjtemény (DACL) és a rendszer hozzáférés vezérlési lista (Rendszerszintű)."
  syntax:
    content: 'public sealed class CommonSecurityDescriptor : System.Security.AccessControl.GenericSecurityDescriptor'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericSecurityDescriptor
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  - System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  - System.Security.AccessControl.GenericSecurityDescriptor.Revision
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> a megadott osztály <xref href=&quot;System.Security.AccessControl.RawSecurityDescriptor&quot;> </xref> objektum."
  remarks: "Ha az alapul szolgáló biztonsági leíró, amelyből az új <xref:System.Security.AccessControl.RawSecurityDescriptor>objektum létrehozása tartalmaz `null` a tulajdonosi hozzáférés szabályozási listához (DACL), egy egyetlen hozzáférés-szabályozási bejegyzés (ACE), amely lehetővé teszi, hogy mindenki számára teljes hozzáférést (AEFA) kerül a hozzáférés-vezérlési lista.</xref:System.Security.AccessControl.RawSecurityDescriptor> Ha egy alkalmazás módosítja a hozzáférés-vezérlési lista a biztonsági leíró, amelyhez AEFA ACE hozzá lett adva, a AEFA ACE megőrződjenek a hozzáférés-vezérlési lista a amikor adott hozzáférés-vezérlési lista.       Ez egy alkalmazás rendszerbiztonsági tagok véletlenül hozzáférést eredményezhet. Ezért az alkalmazás kell AEFA ACE meglétének ellenőrzése és a biztonsági leíró módosítása előtt távolítsa el."
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, System.Security.AccessControl.RawSecurityDescriptor rawSecurityDescriptor);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új biztonsági leíró társítva a tároló objektumok."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új biztonsági leíró társítva a Deleted object."
    - id: rawSecurityDescriptor
      type: System.Security.AccessControl.RawSecurityDescriptor
      description: "A <xref href=&quot;System.Security.AccessControl.RawSecurityDescriptor&quot;> </xref> dimenzióobjektumot, amihez létre kívánja hozni az új <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  id: '#ctor(System.Boolean,System.Boolean,System.String)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,String)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> osztály a megadott Security Descriptor Definition Language (SDDL) karakterláncból."
  remarks: "Ha az alapul szolgáló biztonsági leíró, amelyből az új <xref:System.Security.AccessControl.RawSecurityDescriptor>objektum létrehozása tartalmaz `null` a tulajdonosi hozzáférés szabályozási listához (DACL), egy egyetlen hozzáférés-szabályozási bejegyzés (ACE), amely lehetővé teszi, hogy mindenki számára teljes hozzáférést (AEFA) kerül a hozzáférés-vezérlési lista.</xref:System.Security.AccessControl.RawSecurityDescriptor> Ha egy alkalmazás módosítja a hozzáférés-vezérlési lista a biztonsági leíró, amelyhez AEFA ACE hozzá lett adva, a AEFA ACE megőrződjenek a hozzáférés-vezérlési lista a amikor adott hozzáférés-vezérlési lista.       Ez egy alkalmazás rendszerbiztonsági tagok véletlenül hozzáférést eredményezhet. Ezért az alkalmazás kell AEFA ACE meglétének ellenőrzése és a biztonsági leíró módosítása előtt távolítsa el."
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, string sddlForm);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új biztonsági leíró társítva a tároló objektumok."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új biztonsági leíró társítva a Deleted object."
    - id: sddlForm
      type: System.String
      description: "Az SDDL-karakterláncok létrehozásához az új <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> bájt értékeket a megadott tömb osztályt."
  remarks: "Ha az alapul szolgáló biztonsági leíró, amelyből az új <xref:System.Security.AccessControl.RawSecurityDescriptor>objektum létrehozása tartalmaz `null` a tulajdonosi hozzáférés szabályozási listához (DACL), egy egyetlen hozzáférés-szabályozási bejegyzés (ACE), amely lehetővé teszi, hogy mindenki számára teljes hozzáférést (AEFA) kerül a hozzáférés-vezérlési lista.</xref:System.Security.AccessControl.RawSecurityDescriptor> Ha egy alkalmazás módosítja a hozzáférés-vezérlési lista a biztonsági leíró, amelyhez AEFA ACE hozzá lett adva, a AEFA ACE megőrződjenek a hozzáférés-vezérlési lista a amikor adott hozzáférés-vezérlési lista.       Ez egy alkalmazás rendszerbiztonsági tagok véletlenül hozzáférést eredményezhet. Ezért az alkalmazás kell AEFA ACE meglétének ellenőrzése és a biztonsági leíró módosítása előtt távolítsa el."
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, byte[] binaryForm, int offset);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új biztonsági leíró társítva a tároló objektumok."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új biztonsági leíró társítva a Deleted object."
    - id: binaryForm
      type: System.Byte[]
      description: "A tömb, amihez létre kívánja hozni az új bájt értékeinek <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
    - id: offset
      type: System.Int32
      description: "Az eltolás a `binaryForm` tömb, amellyel másolásához."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)'
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> osztály megadott adatok alapján."
  remarks: "Ha az alapul szolgáló biztonsági leíró, amelyből az új <xref:System.Security.AccessControl.RawSecurityDescriptor>objektum létrehozása tartalmaz `null` a tulajdonosi hozzáférés szabályozási listához (DACL), egy egyetlen hozzáférés-szabályozási bejegyzés (ACE), amely lehetővé teszi, hogy mindenki számára teljes hozzáférést (AEFA) kerül a hozzáférés-vezérlési lista.</xref:System.Security.AccessControl.RawSecurityDescriptor> Ha egy alkalmazás módosítja a hozzáférés-vezérlési lista a biztonsági leíró, amelyhez AEFA ACE hozzá lett adva, a AEFA ACE megőrződjenek a hozzáférés-vezérlési lista a amikor adott hozzáférés-vezérlési lista.       Ez egy alkalmazás rendszerbiztonsági tagok véletlenül hozzáférést eredményezhet. Ezért az alkalmazás kell AEFA ACE meglétének ellenőrzése és a biztonsági leíró módosítása előtt távolítsa el."
  syntax:
    content: public CommonSecurityDescriptor (bool isContainer, bool isDS, System.Security.AccessControl.ControlFlags flags, System.Security.Principal.SecurityIdentifier owner, System.Security.Principal.SecurityIdentifier group, System.Security.AccessControl.SystemAcl systemAcl, System.Security.AccessControl.DiscretionaryAcl discretionaryAcl);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új biztonsági leíró társítva a tároló objektumok."
    - id: isDS
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új biztonsági leíró társítva a Deleted object."
    - id: flags
      type: System.Security.AccessControl.ControlFlags
      description: "Az új viselkedését meghatározó jelzők <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
    - id: owner
      type: System.Security.Principal.SecurityIdentifier
      description: "Az új tulajdonos <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
    - id: group
      type: System.Security.Principal.SecurityIdentifier
      description: "Az elsődleges csoportja az új <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
    - id: systemAcl
      type: System.Security.AccessControl.SystemAcl
      description: "A rendszer Access Control lista Rendszerhozzáférés az új <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
    - id: discretionaryAcl
      type: System.Security.AccessControl.DiscretionaryAcl
      description: "A diszkrét hozzáférési szabálygyűjtemény (DACL) az új <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  id: AddDiscretionaryAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: AddDiscretionaryAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Beállítja a <xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*>tulajdonság a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> példány és beállítása a <xref href=&quot;System.Security.AccessControl.ControlFlags&quot;> </xref> jelzőt.</xref:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*>"
  remarks: "A konstruktor <xref:System.Security.AccessControl.DiscretionaryAcl>használja, <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A>és <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A>a <xref:System.Security.AccessControl.CommonSecurityDescriptor>.</xref:System.Security.AccessControl.CommonSecurityDescriptor> tulajdonságai</xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> </xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> </xref:System.Security.AccessControl.DiscretionaryAcl>"
  syntax:
    content: public void AddDiscretionaryAcl (byte revision, int trusted);
    parameters:
    - id: revision
      type: System.Byte
      description: "Az új változat szintje <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objektum."
    - id: trusted
      type: System.Int32
      description: "A hozzáférés-vezérlő bejegyzések (ACE-k) száma ez <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> objektumot tartalmazhat. Az érték csak egy mutatót használ."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  id: AddSystemAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: AddSystemAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Beállítja a <xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*>tulajdonság a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> példány és beállítása a <xref href=&quot;System.Security.AccessControl.ControlFlags&quot;> </xref> jelzőt.</xref:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*>"
  remarks: "A konstruktor <xref:System.Security.AccessControl.SystemAcl>használja, <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A>és <xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A>a <xref:System.Security.AccessControl.CommonSecurityDescriptor>.</xref:System.Security.AccessControl.CommonSecurityDescriptor> tulajdonságai</xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A> </xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A> </xref:System.Security.AccessControl.SystemAcl>"
  syntax:
    content: public void AddSystemAcl (byte revision, int trusted);
    parameters:
    - id: revision
      type: System.Byte
      description: "Az új változat szintje <xref href=&quot;System.Security.AccessControl.SystemAcl&quot;> </xref> objektum."
    - id: trusted
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  id: ControlFlags
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Viselkedését meghatározó értékek lekérdezi a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  syntax:
    content: public override System.Security.AccessControl.ControlFlags ControlFlags { get; }
    return:
      type: System.Security.AccessControl.ControlFlags
      description: "Egy vagy több érték, a <xref href=&quot;System.Security.AccessControl.ControlFlags&quot;> </xref> számbavételi együtt egy logikai vagy műveletet."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  id: DiscretionaryAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi vagy beállítja a tulajdonosi hozzáférés-szabályozási listához (DACL) a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum. A DISZKRÉT hozzáférési szabályokat tartalmazza."
  remarks: "Ha ez a tulajdonság értéke `null`, egy egyetlen hozzáférés-vezérlő bejegyzés (ACE), amely lehetővé teszi, hogy mindenki számára teljes hozzáférést (AEFA) kerül a hozzáférés-vezérlési lista. Ha egy alkalmazás módosítja a hozzáférés-vezérlési lista a biztonsági leíró, amelyhez AEFA ACE hozzá lett adva, a AEFA ACE megőrződjenek a hozzáférés-vezérlési lista a amikor adott hozzáférés-vezérlési lista.       Ez egy alkalmazás rendszerbiztonsági tagok véletlenül hozzáférést eredményezhet. Ezért az alkalmazás kell AEFA ACE meglétének ellenőrzése és a biztonsági leíró módosítása előtt távolítsa el."
  syntax:
    content: public System.Security.AccessControl.DiscretionaryAcl DiscretionaryAcl { get; set; }
    return:
      type: System.Security.AccessControl.DiscretionaryAcl
      description: "A hozzáférés-vezérlési lista a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group
  id: Group
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Group
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi vagy beállítja az elsődleges csoportja ennek <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  syntax:
    content: public override System.Security.Principal.SecurityIdentifier Group { get; set; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "Ez az elsődleges csoportja <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.Group*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Logikai érték, amely meghatározza, hogy az objektum társított ez lekérdezi <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> tároló objektumok."
  syntax:
    content: public bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez az objektum tartozó <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> tároló objektumok; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  id: IsDiscretionaryAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Logikai érték, amely meghatározza, hogy a diszkrét hozzáférési szabálygyűjtemény (DACL) társított ez lekérdezi <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum van kanonikus sorrendje."
  syntax:
    content: public bool IsDiscretionaryAclCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférés-vezérlési lista társított ez <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum van kanonikus sorrendje; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  id: IsDS
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Logikai érték, amely meghatározza, hogy az objektum társított ez lekérdezi <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> directory objektumok."
  syntax:
    content: public bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez az objektum tartozó <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> directory objektumok; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  id: IsSystemAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Logikai érték, amely meghatározza, hogy a rendszer Access Control lista (Rendszerszintű) társított ez lekérdezi <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum van kanonikus sorrendje."
  syntax:
    content: public bool IsSystemAclCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a Rendszerszintű tartozó <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum van kanonikus sorrendje; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  id: Owner
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi vagy beállítja a társított Ez az objektum tulajdonosa <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  syntax:
    content: public override System.Security.Principal.SecurityIdentifier Owner { get; set; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "A társított objektum tulajdonosának <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  id: PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: PurgeAccessControl(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes hozzáférési szabályok, a megadott biztonsági azonosító a a tulajdonosi hozzáférés vezérlési lista (DACL) a társított <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  remarks: "Rendszerbiztonsági tagok véletlenül hozzáférést elkerüléséhez alkalmazások ellenőrizze engedélyezési megléte mindenki számára teljes hozzáférést (AEFA) hozzáférés-szabályozási bejegyzés (ACE), és távolítsa el a hozzáférés-vezérlési lista módosítása előtt."
  syntax:
    content: public void PurgeAccessControl (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "A biztonsági azonosítót, amelyre a hozzáférési szabályok eltávolítása."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  id: PurgeAudit(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: PurgeAudit(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Összes naplózási szabály eltávolítja a megadott biztonsági azonosítót a rendszer hozzáférés vezérlési lista (Rendszerszintű) a társított ez <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  syntax:
    content: public void PurgeAudit (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "A biztonsági azonosítót, amelynek eltávolítja az ellenőrzési szabályok."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  id: SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SetDiscretionaryAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Az öröklés védelmének beállítása a diszkrét hozzáférési szabálygyűjtemény (DACL) a társított <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum. Védett DACL nem hozzáférési szabályok örökli a szülő tárolók."
  syntax:
    content: public void SetDiscretionaryAclProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>hogy megvédje a hozzáférés-vezérlési lista öröklési."
    - id: preserveInheritance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Tartsa örökölt hálózatelérési szabályait a hozzáférés-vezérlési lista; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> örökölt hozzáférési szabályok eltávolítása a hozzáférés-vezérlési lista."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  id: SetSystemAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SetSystemAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Az öröklés védelmének beállítása, a rendszer Access Control lista (Rendszerszintű) a társított <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum. Védett rendszerszintű örökli szülő tárolók ellenőrzési szabályok."
  syntax:
    content: public void SetSystemAclProtection (bool isProtected, bool preserveInheritance);
    parameters:
    - id: isProtected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>hogy megvédje a Rendszerszintű öröklési."
    - id: preserveInheritance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>örökölt naplózási szabályok megtartja a Rendszerszintű; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> örökölt naplózási szabály eltávolítása a Rendszerszintű."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  id: SystemAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  langs:
  - csharp
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi vagy beállítja azt a rendszer Access Control lista (Rendszerszintű) a <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum. A Rendszerszintű naplózási szabályokat tartalmazza."
  syntax:
    content: public System.Security.AccessControl.SystemAcl SystemAcl { get; set; }
    return:
      type: System.Security.AccessControl.SystemAcl
      description: "Ez a Rendszerszintű <xref href=&quot;System.Security.AccessControl.CommonSecurityDescriptor&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericSecurityDescriptor
  isExternal: false
  name: System.Security.AccessControl.GenericSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,RawSecurityDescriptor)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.RawSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: RawSecurityDescriptor
  nameWithType: RawSecurityDescriptor
  fullName: System.Security.AccessControl.RawSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,String)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.CommonSecurityDescriptor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
- uid: System.Security.AccessControl.ControlFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ControlFlags
  nameWithType: ControlFlags
  fullName: System.Security.AccessControl.ControlFlags
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.SystemAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: SystemAcl
  nameWithType: SystemAcl
  fullName: System.Security.AccessControl.SystemAcl
- uid: System.Security.AccessControl.DiscretionaryAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: DiscretionaryAcl
  fullName: System.Security.AccessControl.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddDiscretionaryAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(Byte,Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddSystemAcl(Byte,Int32)
  nameWithType: CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(Byte,Int32)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Group
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsDS
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.Owner
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAccessControl(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(SecurityIdentifier)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAudit(SecurityIdentifier)
  nameWithType: CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(SecurityIdentifier)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetDiscretionaryAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(Boolean,Boolean)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetSystemAclProtection(Boolean,Boolean)
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(Boolean,Boolean)
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
  fullName: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.#ctor*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor.CommonSecurityDescriptor
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddDiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.AddDiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: AddSystemAcl
  nameWithType: CommonSecurityDescriptor.AddSystemAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: ControlFlags
  nameWithType: CommonSecurityDescriptor.ControlFlags
- uid: System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: DiscretionaryAcl
  nameWithType: CommonSecurityDescriptor.DiscretionaryAcl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Group*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Group
  nameWithType: CommonSecurityDescriptor.Group
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsContainer*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsContainer
  nameWithType: CommonSecurityDescriptor.IsContainer
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDiscretionaryAclCanonical
  nameWithType: CommonSecurityDescriptor.IsDiscretionaryAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsDS*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsDS
  nameWithType: CommonSecurityDescriptor.IsDS
- uid: System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: IsSystemAclCanonical
  nameWithType: CommonSecurityDescriptor.IsSystemAclCanonical
- uid: System.Security.AccessControl.CommonSecurityDescriptor.Owner*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: Owner
  nameWithType: CommonSecurityDescriptor.Owner
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAccessControl
  nameWithType: CommonSecurityDescriptor.PurgeAccessControl
- uid: System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: PurgeAudit
  nameWithType: CommonSecurityDescriptor.PurgeAudit
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetDiscretionaryAclProtection
  nameWithType: CommonSecurityDescriptor.SetDiscretionaryAclProtection
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SetSystemAclProtection
  nameWithType: CommonSecurityDescriptor.SetSystemAclProtection
- uid: System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl*
  parent: System.Security.AccessControl.CommonSecurityDescriptor
  isExternal: false
  name: SystemAcl
  nameWithType: CommonSecurityDescriptor.SystemAcl
