### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSACryptoServiceProvider
  id: RSACryptoServiceProvider
  children:
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  - System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  - System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  - System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSACryptoServiceProvider
  nameWithType: RSACryptoServiceProvider
  fullName: System.Security.Cryptography.RSACryptoServiceProvider
  type: Class
  summary: "Aszimmetrikus titkosítási és visszafejtési végrehajtásának használatával hajtja végre a <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> a kriptográfiai szolgáltató (CSP) által biztosított algoritmus. Ez az osztály nem örökölhető."
  remarks: "This is the default implementation of <xref:System.Security.Cryptography.RSA>.  \n  \n The RSACryptoServiceProvider supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.  \n  \n Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the RSACryptoServiceProvider instance. Windows CSPs enable keys sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)]. For more information, see [CryptGenKey](http://msdn.microsoft.com/library/aa379941\\(v=vs.85\\).aspx) function in the Windows documentation.  \n  \n## Interoperation with the Microsoft Cryptographic API (CAPI)  \n Unlike the RSA implementation in unmanaged CAPI, the RSACryptoServiceProvider class reverses the order of an encrypted array of bytes after encryption and before decryption.  By default, data encrypted by the RSACryptoServiceProvider class cannot be decrypted by the CAPI `CryptDecrypt` function and data encrypted by the CAPI `CryptEncrypt` method cannot be decrypted by the RSACryptoServiceProvider class.  \n  \n If you do not compensate for the reverse ordering when interoperating between APIs, the RSACryptoServiceProvider class throws a <xref:System.Security.Cryptography.CryptographicException>.  \n  \n To interoperate with CAPI, you must manually reverse the order of encrypted bytes before the encrypted data interoperates with another API.  You can easily reverse the order of a managed byte array by calling the <xref:System.Array.Reverse%2A?displayProperty=fullName> method."
  example:
  - "The following code example uses the RSACryptoServiceProvider class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/cpp/t-system.security.crypto_34_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/csharp/t-system.security.crypto_34_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/visualbasic/t-system.security.crypto_34_1.vb)]  \n  \n The following code example exports the key information created using the RSACryptoServiceProvider into an <xref:System.Security.Cryptography.RSAParameters> object.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/csharp/t-system.security.crypto_34_2.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/cpp/t-system.security.crypto_34_2.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/visualbasic/t-system.security.crypto_34_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RSACryptoServiceProvider : System.Security.Cryptography.RSA, System.Security.Cryptography.ICspAsymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.RSA
  implements:
  - System.Security.Cryptography.ICspAsymmetricAlgorithm
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider()
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> osztály az alapértelmezett kulcs használatával."
  remarks: "Ha nem alapértelmezett kulcs található, létrejön egy új kulcsot.       Ez a konstruktor létrehoz egy <xref:System.Security.Cryptography.KeyNumber>megfelelő munkamenet titkosításához kulcspár kulcsok, hogy azok biztonságosan tárolja és cseréje más felhasználókkal.</xref:System.Security.Cryptography.KeyNumber>  A létrehozott kulcs használatával létrehozott kulcs felel meg a `AT_KEYEXCHANGE` értéket, az a nem felügyelt Microsoft kriptográfiai API (CAPI)."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/cpp/m-system.security.crypto_117_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/csharp/m-system.security.crypto_117_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/add/codesnippet/visualbasic/m-system.security.crypto_117_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai szolgáltató (CSP) nem lehet lekérni."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(Int32)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> a megadott kulcsméret osztályra."
  remarks: "Ha nem alapértelmezett kulcs található, létrejön egy új kulcsot.       Ez a konstruktor létrehoz egy <xref:System.Security.Cryptography.KeyNumber>megfelelő munkamenet titkosításához kulcspár kulcsok, hogy azok biztonságosan tárolja és cseréje más felhasználókkal.</xref:System.Security.Cryptography.KeyNumber>  A létrehozott kulcs használatával létrehozott kulcs felel meg a `AT_KEYEXCHANGE` értéket, az a nem felügyelt Microsoft kriptográfiai API (CAPI)."
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.  \n  \n [!code-cs[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/csharp/m-system.security.crypto_54_1.cs)]\n [!code-cpp[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/cpp/m-system.security.crypto_54_1.cpp)]\n [!code-vb[Cryptography.RSACSP.ctor-int32-2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_54_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider (int dwKeySize);
    parameters:
    - id: dwKeySize
      type: System.Int32
      description: "A bits használandó kulcs mérete."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai szolgáltató (CSP) nem lehet lekérni."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> osztály a megadott paraméterekkel."
  remarks: "Ez a konstruktor hoz létre, vagy egy kulcstárolóhoz megadni, használja a rendszer újból felhasználja a <xref:System.Security.Cryptography.CspParameters>mezőjét a `parameters` paraméter.</xref:System.Security.Cryptography.CspParameters>       Alapértelmezés szerint ez a konstruktor létrehoz egy <xref:System.Security.Cryptography.KeyNumber>megfelelő munkamenet titkosításához kulcspár kulcsok, hogy azok biztonságosan tárolja és cseréje más felhasználókkal.</xref:System.Security.Cryptography.KeyNumber>  A létrehozott kulcs használatával létrehozott kulcs felel meg a `AT_KEYEXCHANGE` értéket, az a nem felügyelt Microsoft kriptográfiai API (CAPI).       Létrehozhat egy <xref:System.Security.Cryptography.KeyNumber>pár (digitálisan aláírt) üzenetek vagy fájlok hitelesítésére úgy, hogy megfelelő kulcsot a <xref:System.Security.Cryptography.CspParameters.KeyNumber>mezőjében a `parameters` paramétert a <xref:System.Security.Cryptography.KeyNumber>érték.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.CspParameters.KeyNumber> </xref:System.Security.Cryptography.KeyNumber> Az ilyen típusú kulcs megfelel-e a `AT_SIGNATURE` CAPI használt érték.       Ha létrehoz egy <xref:System.Security.Cryptography.RSACryptoServiceProvider>rendelkező objektum a <xref:System.Security.Cryptography.KeyNumber>érték megadva, és hozzon létre egy másik <xref:System.Security.Cryptography.RSACryptoServiceProvider>rendelkező objektum a <xref:System.Security.Cryptography.KeyNumber>megadott érték kerülnek mindkét kulcsot, ha mindkét objektum adja meg a kulcstároló néven egyetlen tároló.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>       Kompatibilis keveredését-név használatával aláírási kulcs létrehozására a <xref:System.Security.Cryptography.RSACryptoServiceProvider>osztály, létre kell hoznia egy <xref:System.Security.Cryptography.KeyNumber>kulcs pár.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object, generates a new key, and stores it in a key container.  \n  \n [!code-cpp[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/cpp/c05514b0-515d-4fa6-b581-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/visualbasic/c05514b0-515d-4fa6-b581-_1.vb)]\n [!code-cs[Cryptography.RSACSP.ctor-csp#1](~/add/codesnippet/csharp/c05514b0-515d-4fa6-b581-_1.cs)]"
  syntax:
    content: public RSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "A kriptográfiai szolgáltató (CSP) átadandó paraméterek."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai Szolgáltató nem olvashatók be."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  id: '#ctor(System.Int32,System.Security.Cryptography.CspParameters)'
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: RSACryptoServiceProvider(Int32,CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> osztály a megadott kulcsméret és a paraméterek."
  remarks: "Ez a konstruktor hoz létre, vagy egy kulcstárolóhoz megadni, használja a rendszer újból felhasználja a <xref:System.Security.Cryptography.CspParameters>mezőjét a `parameters` paraméter.</xref:System.Security.Cryptography.CspParameters>       Alapértelmezés szerint ez a konstruktor létrehoz egy <xref:System.Security.Cryptography.KeyNumber>megfelelő munkamenet titkosításához kulcspár kulcsok, hogy azok biztonságosan tárolja és cseréje más felhasználókkal.</xref:System.Security.Cryptography.KeyNumber>  A létrehozott kulcs használatával létrehozott kulcs felel meg a `AT_KEYEXCHANGE` értéket, az a nem felügyelt Microsoft kriptográfiai API (CAPI).       Létrehozhat egy <xref:System.Security.Cryptography.KeyNumber>pár (digitálisan aláírt) üzenetek vagy fájlok hitelesítésére úgy, hogy megfelelő kulcsot a <xref:System.Security.Cryptography.CspParameters.KeyNumber>mezőjében a `parameters` paramétert a <xref:System.Security.Cryptography.KeyNumber>érték.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.CspParameters.KeyNumber> </xref:System.Security.Cryptography.KeyNumber> Az ilyen típusú kulcs megfelel-e a `AT_SIGNATURE` CAPI használt érték.       Ha létrehoz egy <xref:System.Security.Cryptography.RSACryptoServiceProvider>rendelkező objektum a <xref:System.Security.Cryptography.KeyNumber>érték megadva, és hozzon létre egy másik <xref:System.Security.Cryptography.RSACryptoServiceProvider>rendelkező objektum a <xref:System.Security.Cryptography.KeyNumber>megadott érték kerülnek mindkét kulcsot, ha mindkét objektum adja meg a kulcstároló néven egyetlen tároló.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>       Kompatibilis keveredését-név használatával aláírási kulcs létrehozására a <xref:System.Security.Cryptography.RSACryptoServiceProvider>osztály, létre kell hoznia egy <xref:System.Security.Cryptography.KeyNumber>kulcs pár.</xref:System.Security.Cryptography.KeyNumber> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.  \n  \n [!code-cpp[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/cpp/d6fb023a-3018-4e24-9035-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/csharp/d6fb023a-3018-4e24-9035-_1.cs)]\n [!code-vb[Cryptography.RSACSP.ctor-int32-csp#1](~/add/codesnippet/visualbasic/d6fb023a-3018-4e24-9035-_1.vb)]"
  syntax:
    content: public RSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);
    parameters:
    - id: dwKeySize
      type: System.Int32
      description: "A bits használandó kulcs mérete."
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: "A kriptográfiai szolgáltató (CSP) átadandó paraméterek."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai Szolgáltató nem olvashatók be.       – vagy – a kulcs nem hozható létre."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  id: CspKeyContainerInfo
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a <xref href=&quot;System.Security.Cryptography.CspKeyContainerInfo&quot;> </xref> objektum, amely egy kulcspár kapcsolatos további információkat ismerteti."
  remarks: "A CspKeyContainerInfo tulajdonsággal egy kulcspár kapcsolatos további információk lekéréséhez.  A visszaadott <xref:System.Security.Cryptography.CspKeyContainerInfo>objektum ismerteti, hogy a kulcs exportálható, és a kulcstároló neve, a szolgáltató kapcsolatos információkat és más információkat.</xref:System.Security.Cryptography.CspKeyContainerInfo>       Azokban az esetekben, ahol jön létre egy véletlenszerű kulcsot a kulcstároló nem lesz létrehozva mindaddig, amíg a kulcsot használó metódusának hívása.  Néhány tulajdonságát a <xref:System.Security.Cryptography.CspKeyContainerInfo>által visszaadott objektum a <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A>tulajdonság kivételhibát egy <xref:System.Security.Cryptography.CryptographicException>Ha egy kulcstárolóhoz nem lett létrehozva.</xref:System.Security.Cryptography.CryptographicException> </xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> </xref:System.Security.Cryptography.CspKeyContainerInfo>  Győződjön meg arról, hogy létrejött-e a kulcstároló, hívni egy metódust, mint <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, és így tovább meghívása előtt a <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A>tulajdonság.</xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> </xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A> </xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Security.Cryptography.CspKeyContainerInfo> property.  \n  \n [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_35_1.cpp)]\n [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_35_1.vb)]\n [!code-cs[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_35_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }
    return:
      type: System.Security.Cryptography.CspKeyContainerInfo
      description: "A <xref href=&quot;System.Security.Cryptography.CspKeyContainerInfo&quot;> </xref> objektum, amely egy kulcspár kapcsolatos további információkat ismerteti."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  id: Decrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Decrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Az adatok visszafejti a <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmus."
  remarks: "Használjon <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>ezzel a módszerrel a visszafejtéshez adatainak titkosításához.</xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>"
  example:
  - "The following code example encrypts and decrypts data.  \n  \n This example uses the <xref:System.Text.ASCIIEncoding> class; however, the <xref:System.Text.UnicodeEncoding> class may be preferable in large data operations. The encrypted value can be saved as an `nvarchar` data type in Microsoft SQL Server 2005.  \n  \n [!code-cs[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/csharp/8cfd6fd2-9442-4043-ad36-_1.cs)]\n [!code-cpp[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/cpp/8cfd6fd2-9442-4043-ad36-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.Decrypt#1](~/add/codesnippet/visualbasic/8cfd6fd2-9442-4043-ad36-_1.vb)]"
  syntax:
    content: public byte[] Decrypt (byte[] rgb, bool fOAEP);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "A visszafejtendő adatok mennyisége."
    - id: fOAEP
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a közvetlen végrehajtásához <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> visszafejtés OAEP típusú kitöltés (csak a Microsoft Windows XP rendszert futtató számítógépeken vagy későbbi) használatával; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> PKCS&#1; v1.5 kitöltési használatára."
    return:
      type: System.Byte[]
      description: "A visszafejtett adatait, amely az eredeti egyszerű szöveg titkosítási előtt."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai szolgáltató (CSP) nem lehet lekérni.       – vagy – a <code> fOAEP </code> paraméter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> és a hosszát a <code> rgb </code> paraméter értéke nagyobb, mint <xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize*>.</xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize*>       – vagy – a <code> fOAEP </code> paraméter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> és OAEP típusú nem támogatott.       – vagy – a kulcs nem egyezik meg a titkosított adatokat. Azonban a kivétel szövege pontatlan lehet. Például, hogy előfordulhat, hogy `Not enough storage is available to process this command`."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgb </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A korábban titkosított adatokat visszafejti a <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmus a megadott kitöltési használatával."
  remarks: '`padding`<xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>vagy <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName> </xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName> kell lennie'
  syntax:
    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Az adatok visszafejtéséhez."
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "A térközt."
    return:
      type: System.Byte[]
      description: "A visszafejtett adatok."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kitöltési mód nem támogatott."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ez a metódus nem támogatott a jelenlegi verzióban."
  syntax:
    content: public override byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "A visszafejtendő adatok mennyisége."
    return:
      type: System.Byte[]
      description: "A visszafejtett adatait, amely az eredeti egyszerű szöveg titkosítási előtt."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ez a metódus nem támogatott a jelenlegi verzióban."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  id: Encrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Encrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Titkosítja az adatokat a <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> algoritmus."
  remarks: "A következő táblázat ismerteti a Microsoft Windows különböző verzióinak és a maximális hossza által támogatott térközt `rgb` által az operációs rendszerek és kitöltési különböző kombinációkban engedélyezett.      | Kitöltési |} Az operációs rendszer támogatott |} Legfeljebb rgb paraméter |}   |-------------|--------------------------------|-------------------------------------|   | OAEP típusú kitöltés (PKCS #1 v2) |} Windows XP vagy újabb. |} Modulus méretezés-2 -2 * hLen, ahol hLen mérete a kivonat. |}   | Titkosítási közvetlen (PKCS #1 1.5-ös verzióját) |} Microsoft Windows 2000 vagy újabb verzió az erős titkosítás csomagja telepítve van. |} Modulusának méretével – 11. (11 bájt a lehetséges kitöltési minimális.) |}   | Titkosítás és OAEP típusú kitöltés nem támogatja a közvetlen |} Microsoft Windows 98, a Windows Me vagy a Windows 2000 vagy újabb nélkül az erős titkosítás csomagja telepítve van. |} A szimmetrikus kulcs engedélyezett maximális méretét. |}       Használjon <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>Ez a metódus eredménye visszafejtése.</xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>"
  example:
  - "The following code example initializes an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object to the value of a public key (sent by another party), generates a session key using the <xref:System.Security.Cryptography.RijndaelManaged> algorithm, and then encrypts the session key using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  Using this scheme, the session key could be sent back to the owner of the private RSA key and the two parties could use the session key to exchange encrypted data.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/csharp/6b432226-1f8c-408d-a101-_1.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/cpp/6b432226-1f8c-408d-a101-_1.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/add/codesnippet/visualbasic/6b432226-1f8c-408d-a101-_1.vb)]"
  syntax:
    content: public byte[] Encrypt (byte[] rgb, bool fOAEP);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Az adatok titkosításához."
    - id: fOAEP
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>közvetlen végrehajtásához <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> OAEP típusú kitöltés (csak Windows XP rendszert futtató számítógépeken vagy későbbi) használatával titkosítási; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> PKCS&#1; v1.5 kitöltési használatára."
    return:
      type: System.Byte[]
      description: "A titkosított adatokat."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai szolgáltató (CSP) nem lehet lekérni.       – vagy – a hosszát a <code> rgb </code> paraméter értéke nagyobb, mint a maximális megengedett hosszúságot.       – vagy – a <code> fOAEP </code> paraméter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> és OAEP típusú kitöltés nem támogatott."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgb </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Titkosítja az adatokat a <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> használata a megadott kitöltési algoritmus."
  remarks: '`padding`<xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName>vagy <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName>.</xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=fullName> </xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=fullName> kell lennie'
  syntax:
    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Az adatok titkosításához."
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "A térközt."
    return:
      type: System.Byte[]
      description: "A titkosított adatokat."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kitöltési mód nem támogatott."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ez a metódus nem támogatott a jelenlegi verzióban."
  syntax:
    content: public override byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "Az adatok titkosításához."
    return:
      type: System.Byte[]
      description: "A titkosított adatokat."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ez a metódus nem támogatott a jelenlegi verzióban."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  id: ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ExportCspBlob(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Exportálja a társított kulccsal kapcsolatos adatokat tartalmazó blob egy <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> objektum."
  remarks: "A ExportCspBlob metódus tartalmazó és a nem felügyelt Microsoft kriptográfiai API (CAPI) kompatibilis blob adja vissza."
  syntax:
    content: public byte[] ExportCspBlob (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a titkos kulcsot. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Byte[]
      description: "A társított kulcsadatokat tartalmazó bájttömb egy <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> objektum."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Exportálja a <xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example exports the key information created using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> into an <xref:System.Security.Cryptography.RSAParameters> object.  \n  \n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/csharp/f018c1e5-b1fd-413d-8285-_1.cs)]\n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/cpp/f018c1e5-b1fd-413d-8285-_1.cpp)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/add/codesnippet/visualbasic/f018c1e5-b1fd-413d-8285-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a titkos paraméterek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Security.Cryptography.RSAParameters
      description: "A paraméterek <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kulcs nem exportálható."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "Fel kell venni a párbeszédpanelre."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Byte[]
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Fel kell venni a párbeszédpanelre."
    - id: offset
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
    - id: count
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Byte[]
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  id: ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ImportCspBlob(Byte[])
  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Importálja a blob, amely RSA-kulcs adatait jelöli."
  remarks: "A ImportCspBlob metódus inicializálja a kulcsadatokat, egy <xref:System.Security.Cryptography.RSACryptoServiceProvider>objektumba, amely kompatibilis a a nem felügyelt Microsoft kriptográfiai API (CAPI) blob.</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  syntax:
    content: public void ImportCspBlob (byte[] keyBlob);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "Az RSA-kulcs blob jelölő bájttömb."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Importálja a megadott <xref href=&quot;System.Security.Cryptography.RSAParameters&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example imports key information created from an <xref:System.Security.Cryptography.RSAParameters> object into an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/cpp/c5e7ebba-6f05-4c89-be06-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/csharp/c5e7ebba-6f05-4c89-be06-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/add/codesnippet/visualbasic/c5e7ebba-6f05-4c89-be06-_1.vb)]"
  syntax:
    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: "A paraméterek <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai szolgáltató (CSP) nem lehet lekérni.       – vagy – a <code> parameters </code> paraméternek hiányzó mezők."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a végrehajtásának érhető el a kulcscsere-algoritmus neve <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  remarks: "Ez a tulajdonság azt jelzi, hogy az algoritmus, a típus neve. Például a RSA-PKCS1-KeyEx egy Kulcscsere-algoritmus neve."
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "Ha létezik; Kulcscsere-algoritmus neve Ellenkező esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  id: KeySize
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi az aktuális kulcs méretét."
  remarks: "The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.  \n  \n Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> instance. Windows CSPs enable key sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/add/includes/ajax-current-ext-md.md)]. For more information, see [CryptGenKey](http://msdn.microsoft.com/library/aa379941\\(v=vs.85\\).aspx) function in the Windows documentation.  \n  \n The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class does not allow you to change key sizes using the KeySize property.  Any value written to this property will fail to update the property without error.  To change the key size, use one of the constructor overloads."
  syntax:
    content: public override int KeySize { get; }
    return:
      type: System.Int32
      description: "A bits a kulcs mérete."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.KeySize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  id: PersistKeyInCsp
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy kell-e a kulcs megmaradjon az a kriptográfiai szolgáltató (CSP)."
  remarks: "Ez a tulajdonság használ a tartós egy kulcsot a kulcs tárolója.       A PersistKeyInCsp automatikusan tulajdonsága `true` a kulcstároló nevét, a beállítás megadása a <xref:System.Security.Cryptography.CspParameters.KeyContainerName>mezőjét, egy <xref:System.Security.Cryptography.CspParameters>objektumra, és segítségével inicializálható egy <xref:System.Security.Cryptography.RSACryptoServiceProvider>rendelkező konstruktorok egyik objektum a `parameters` paraméter.</xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspParameters.KeyContainerName>       A PersistKeyInCsp tulajdonság nincs hatása, ha a <xref:System.Security.Cryptography.RSACryptoServiceProvider>objektum jön létre egy `null` kulcstároló neve.</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and persists the key to a key container.  \n  \n [!code-cs[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/csharp/p-system.security.crypto_52_1.cs)]\n [!code-vb[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_52_1.vb)]\n [!code-cpp[Cryptography.RSACSP.PersistKey#1](~/add/codesnippet/cpp/p-system.security.crypto_52_1.cpp)]"
  syntax:
    content: public bool PersistKeyInCsp { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kulcsot kell őrizhető meg, a CSP-tárolóban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  id: PublicOnly
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> objektum csak a nyilvános kulcsot tartalmaz."
  remarks: "A <xref:System.Security.Cryptography.RSACryptoServiceProvider>osztály nincs inicializálva vagy csak nyilvános kulccsal, illetve a mindkét nyilvános és titkos kulcs is lehet.</xref:System.Security.Cryptography.RSACryptoServiceProvider>  A PublicOnly tulajdonság segítségével határozza meg, hogy az aktuális példány csak egy nyilvános kulcshoz, vagy egy nyilvános és titkos kulcsot tartalmaz."
  syntax:
    content: public bool PublicOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Security.Cryptography.RSACryptoServiceProvider&quot;> </xref> objektum tartalmaz csak nyilvános kulcsú; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a végrehajtásának rendelkezésre aláírási algoritmus neve <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref>."
  remarks: "Ez a tulajdonság jelzi az algoritmus URI használható XML digitális aláírás osztályokat. Ebben az implementációban a tulajdonság mindig http://www.w3.org/2000/09/xmldsig#rsa-sha1 adja vissza."
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "Az aláírási algoritmus neve."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  id: SignData(System.Byte[],System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Byte[],Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott bájttömb a megadott kivonatoló algoritmus használatával ujjlenyomat értékét számítja ki, és aláírja az eredményül kapott kivonat értéke."
  remarks: "Ez a módszer használatával ellenőrzi a digitális aláírás hoz létre a <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>metódus.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>       A `halg` paramétert fogad el egy <xref:System.String>, egy <xref:System.Security.Cryptography.HashAlgorithm>, vagy egy <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cpp[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/cpp/ad78ce39-1ac6-4acb-8c2f-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/csharp/ad78ce39-1ac6-4acb-8c2f-_1.cs)]\n [!code-vb[Cryptography.RSACSP.SignData2#1](~/add/codesnippet/visualbasic/ad78ce39-1ac6-4acb-8c2f-_1.vb)]"
  syntax:
    content: public byte[] SignData (byte[] buffer, object halg);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A bemeneti adatok, amelyek esetében szeretne kiszámítása kivonatát."
    - id: halg
      type: System.Object
      description: "A kivonatoló algoritmus használatával történő létrehozásáról a kivonat értéke."
    return:
      type: System.Byte[]
      description: "A <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> aláírás a megadott adatok."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> halg </code> paraméter nem egy érvényes típusa."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  id: SignData(System.IO.Stream,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Stream,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Stream,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Stream,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott bemeneti adatfolyam a megadott kivonatoló algoritmus használatával ujjlenyomat értékét számítja ki, és az eredményül kapott érték hash jelentkezik."
  remarks: "A `halg` paramétert fogad el egy <xref:System.String>, egy <xref:System.Security.Cryptography.HashAlgorithm>, vagy egy <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cs[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/csharp/35bfe7e1-edb8-40ab-9df0-_1.cs)]\n [!code-cpp[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/cpp/35bfe7e1-edb8-40ab-9df0-_1.cpp)]\n [!code-vb[Cryptography.RSACSP.SignData3#1](~/add/codesnippet/visualbasic/35bfe7e1-edb8-40ab-9df0-_1.vb)]"
  syntax:
    content: public byte[] SignData (System.IO.Stream inputStream, object halg);
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: "A bemeneti adatok, amelyek esetében szeretne kiszámítása kivonatát."
    - id: halg
      type: System.Object
      description: "A kivonatoló algoritmus használatával történő létrehozásáról a kivonat értéke."
    return:
      type: System.Byte[]
      description: "A <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> aláírás a megadott adatok."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> halg </code> paraméter nem egy érvényes típusa."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignData(Byte[],Int32,Int32,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott bájttömb a megadott kivonatoló algoritmus használatával részhalmazának ujjlenyomat értékét számítja ki, és az eredményül kapott érték hash jelentkezik."
  remarks: "Ez a módszer használatával ellenőrzi a digitális aláírás hoz létre a <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>metódus.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A>       A `halg` paramétert fogad el egy <xref:System.String>, egy <xref:System.Security.Cryptography.HashAlgorithm>, vagy egy <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String> A karakterlánc értéke a következők egyike lehet:-objektum azonosítója (OID) rövid nevét a kivonatoló algoritmust, vagy egy nevet a titkosítási konfigurációs fájl vagy egy, a titkosítási API OID tábla regisztrált.      -Az OID azonosító értéke. Az Objektumazonosító egy ismeri fel a titkosítási API kell lennie.       Használhat például SignData (új byte [5], &quot;1.3.14.3.2.26&quot;), vagy SignData (új byte [5], &quot;sha1&quot;), illetve SignData (új byte [5], &quot;SHA1&quot;)."
  example:
  - "The following code example signs and verifies data.  \n  \n [!code-cpp[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/cpp/7bb71f9b-03f8-4e5b-ab7e-_1.cpp)]\n [!code-cs[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/csharp/7bb71f9b-03f8-4e5b-ab7e-_1.cs)]\n [!code-vb[Cryptography.RSACSP.SignData1#1](~/add/codesnippet/visualbasic/7bb71f9b-03f8-4e5b-ab7e-_1.vb)]"
  syntax:
    content: public byte[] SignData (byte[] buffer, int offset, int count, object halg);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A bemeneti adatok, amelyek esetében szeretne kiszámítása kivonatát."
    - id: offset
      type: System.Int32
      description: "Az eltolás, amelyből adatok használatának megkezdéséhez a tömbbe."
    - id: count
      type: System.Int32
      description: "A tömb adatok használandó bájtok száma."
    - id: halg
      type: System.Object
      description: "A kivonatoló algoritmus használatával történő létrehozásáról a kivonat értéke."
    return:
      type: System.Byte[]
      description: "A <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> aláírás a megadott adatok."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> halg </code> paraméter nem egy érvényes típusa."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  id: SignHash(System.Byte[],System.String)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignHash(Byte[],String)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],String)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott kivonat értéke az aláírás kiszámítja a titkos kulccsal titkosítja."
  remarks: "Ez a módszer használatával ellenőrzi a digitális aláírás hoz létre a <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A>metódus.</xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A>       Az érvényes kivonatoló algoritmusok <xref:System.Security.Cryptography.SHA1>és <xref:System.Security.Cryptography.MD5>.</xref:System.Security.Cryptography.MD5> </xref:System.Security.Cryptography.SHA1> A következő nevű kivonatoló algoritmus azonosítója származtatható használatával a <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>metódus.</xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>"
  example:
  - "The following code example encrypts some data, creates a hash of the encrypted data, and then signs hash with a digital signature.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/cpp/f4f73450-8212-4a5d-b1df-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/csharp/f4f73450-8212-4a5d-b1df-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/add/codesnippet/visualbasic/f4f73450-8212-4a5d-b1df-_1.vb)]"
  syntax:
    content: public byte[] SignHash (byte[] rgbHash, string str);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "A kivonat értéke kell aláírni az adatokat."
    - id: str
      type: System.String
      description: "Kivonatoló algoritmus azonosítója (OID) a kivonat értéke a létrehozásához használt."
    return:
      type: System.Byte[]
      description: "A <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> a megadott kivonat értéke aláírással."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai szolgáltató (CSP) nem lehet lekérni.       – vagy – nincs titkos kulcs."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott kivonat értéke az aláírás kiszámítja a titkos kulccsal, a megadott kitöltési használatával titkosítja."
  syntax:
    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "A kivonat értéke kell aláírni az adatokat."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonat értéke a létrehozásához használt kivonatoló algoritmus neve."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "A térközt."
    return:
      type: System.Byte[]
      description: "A <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> a megadott kivonat értéke aláírással."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>nem egyenlő &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  id: UseMachineKeyStore
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a kulcsot kell őrizhető meg, a számítógép kulcs tárolja a felhasználói profil tároló helyett."
  remarks: "Ez a tulajdonság `true` sikeres egyenértékű a <xref:System.Security.Cryptography.CspProviderFlags>Ez a jelző azt egy <xref:System.Security.Cryptography.CspParameters>objektum.</xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspProviderFlags> A UseMachineKeyStore tulajdonság vonatkozik az összes kód az aktuális alkalmazás tartományban, mivel az <xref:System.Security.Cryptography.CspParameters>objektum csak azokra az osztályok, amely kifejezetten hivatkozik rá.</xref:System.Security.Cryptography.CspParameters> Ezek a beállítások akkor hasznos, ha megszemélyesít, vagy olyan fiókkal, amelynek felhasználói profil nincs betöltve fut. UseMachineKeyStore beállítás hatással van a kulcstároló helye csak akkor, ha <xref:System.Security.Cryptography.RSACryptoServiceProvider>paraméter nélküli inicializálva van.</xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and sets the static UseMachineKeyStore property to use the machine key store instead of the user profile key store.  \n  \n [!code-cs[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/csharp/p-system.security.crypto_91_1.cs)]\n [!code-cpp[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/cpp/p-system.security.crypto_91_1.cpp)]\n [!code-vb[Cryptography.RSACSP.UseMachineKey#2](~/add/codesnippet/visualbasic/p-system.security.crypto_91_1.vb)]"
  syntax:
    content: public static bool UseMachineKeyStore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kulcsot kell megmaradjon az a számítógép kulcstároló; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  id: VerifyData(System.Byte[],System.Object,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyData(Byte[],Object,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ellenőrzi, hogy a digitális aláírás érvényes meghatározása a kivonat értéke a megadott nyilvános kulccsal, és hasonlítsa össze a megadott kivonat értéke aláírásában."
  remarks: "Ez a metódus ellenőrzi a <xref:System.Security.Cryptography.RSA>által létrehozott digitális aláírás a <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>metódus.</xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> </xref:System.Security.Cryptography.RSA> Az aláírás ellenőrizte a kivonat értéke beszerzése az aláírást a nyilvános kulccsal van aláírva, és összehasonlítja, hogy a kivonat értéke a megadott értéket.       A `halg` paramétert fogad el egy <xref:System.String>, egy <xref:System.Security.Cryptography.HashAlgorithm>, vagy egy <xref:System.Type>.</xref:System.Type> </xref:System.Security.Cryptography.HashAlgorithm> </xref:System.String>"
  example:
  - "The following example shows how to use the VerifyData method to verify a signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/cpp/3df3f07d-a09f-413c-b97a-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/csharp/3df3f07d-a09f-413c-b97a-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/visualbasic/3df3f07d-a09f-413c-b97a-_1.vb)]"
  syntax:
    content: public bool VerifyData (byte[] buffer, object halg, byte[] signature);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Az aláírt adatokat."
    - id: halg
      type: System.Object
      description: "A kivonat értéke a létrehozásához használt kivonatoló algoritmus neve."
    - id: signature
      type: System.Byte[]
      description: "Az aláírás adatok ellenőrzését."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aláírás érvényes; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>halg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> halg </code> paraméter nem egy érvényes típusa."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  id: VerifyHash(System.Byte[],System.String,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyHash(Byte[],String,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ellenőrzi, hogy a digitális aláírás érvényes meghatározása a kivonat értéke a megadott nyilvános kulccsal, és hasonlítsa össze a megadott kivonat értéke aláírásában."
  remarks: "Ez a metódus ellenőrzi a <xref:System.Security.Cryptography.RSA>által létrehozott digitális aláírás a <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A>metódus.</xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> </xref:System.Security.Cryptography.RSA> Az aláírás ellenőrizte a kivonat értéke beszerzése az aláírást a nyilvános kulccsal van aláírva, és összehasonlítja, hogy a kivonat értéke a megadott értéket.       Az érvényes kivonatoló algoritmusok <xref:System.Security.Cryptography.SHA1>és <xref:System.Security.Cryptography.MD5>.</xref:System.Security.Cryptography.MD5> </xref:System.Security.Cryptography.SHA1> A következő nevű kivonatoló algoritmus azonosítója származtatható használatával a <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>metódus.</xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A>"
  example:
  - "The following example shows how to use the VerifyHash method to verify a signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.  \n  \n [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/cpp/2148dfcd-6562-4b9d-a47c-_1.cpp)]\n [!code-cs[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/csharp/2148dfcd-6562-4b9d-a47c-_1.cs)]\n [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/add/codesnippet/visualbasic/2148dfcd-6562-4b9d-a47c-_1.vb)]"
  syntax:
    content: public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Az aláírt adatokat kivonat értéke."
    - id: str
      type: System.String
      description: "Kivonatoló algoritmus azonosítója (OID) a kivonat értéke a létrehozásához használt."
    - id: rgbSignature
      type: System.Byte[]
      description: "Az aláírás adatok ellenőrzését."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aláírás érvényes; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rgbHash</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>rgbSignature</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A kriptográfiai szolgáltató (CSP) nem lehet lekérni.       – vagy – a aláírása nem ellenőrizhető."
  platform:
  - net462
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ellenőrzi, hogy a digitális aláírás érvényes meghatározása a kivonat értéke az aláírás használatával, a megadott kivonatoló algoritmus és kitöltési, és hasonlítsa össze a megadott kivonat értéke."
  syntax:
    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: "Az aláírt adatokat kivonat értéke."
    - id: signature
      type: System.Byte[]
      description: "Az aláírás adatok ellenőrzését."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonat értéke létrehozásához használt kivonatoló algoritmus neve."
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: "A térközt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aláírás érvényes; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hash</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>padding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>padding</code>nem egyenlő &lt;xref:System.Security.Cryptography.RSASignaturePadding.Pkcs1%2A?displayProperty=fullName&gt;."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RSA
  isExternal: false
  name: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider()
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(Int32)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider(Int32,CspParameters)
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo
- uid: System.Security.Cryptography.CspKeyContainerInfo
  parent: System.Security.Cryptography
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: CspKeyContainerInfo
  fullName: System.Security.Cryptography.CspKeyContainerInfo
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt(Byte[],Boolean)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSACryptoServiceProvider.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportCspBlob(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(Boolean)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportCspBlob(Byte[])
  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Byte[],Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Stream,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Stream,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Stream,Object)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData(Byte[],Int32,Int32,Object)
  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash(Byte[],String)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],String)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],String)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyData(Byte[],Object,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash(Byte[],String,Byte[])
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: RSACryptoServiceProvider
  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider
- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: CspKeyContainerInfo
  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Decrypt
  nameWithType: RSACryptoServiceProvider.Decrypt
- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: DecryptValue
  nameWithType: RSACryptoServiceProvider.DecryptValue
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Dispose
  nameWithType: RSACryptoServiceProvider.Dispose
- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: Encrypt
  nameWithType: RSACryptoServiceProvider.Encrypt
- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: EncryptValue
  nameWithType: RSACryptoServiceProvider.EncryptValue
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportCspBlob
  nameWithType: RSACryptoServiceProvider.ExportCspBlob
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ExportParameters
  nameWithType: RSACryptoServiceProvider.ExportParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: HashData
  nameWithType: RSACryptoServiceProvider.HashData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportCspBlob
  nameWithType: RSACryptoServiceProvider.ImportCspBlob
- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: ImportParameters
  nameWithType: RSACryptoServiceProvider.ImportParameters
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: KeySize
  nameWithType: RSACryptoServiceProvider.KeySize
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PersistKeyInCsp
  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp
- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: PublicOnly
  nameWithType: RSACryptoServiceProvider.PublicOnly
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignData
  nameWithType: RSACryptoServiceProvider.SignData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: SignHash
  nameWithType: RSACryptoServiceProvider.SignHash
- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: UseMachineKeyStore
  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyData
  nameWithType: RSACryptoServiceProvider.VerifyData
- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*
  parent: System.Security.Cryptography.RSACryptoServiceProvider
  isExternal: false
  name: VerifyHash
  nameWithType: RSACryptoServiceProvider.VerifyHash
