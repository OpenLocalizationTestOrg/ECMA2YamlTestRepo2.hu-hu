### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  id: CacheControlHeaderValue
  children:
  - System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  - System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  - System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  - System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  - System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  - System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  - System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  - System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.CacheControlHeaderValue.Private
  - System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.Public
  - System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.CacheControlHeaderValue.ToString
  - System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  langs:
  - csharp
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
  type: Class
  summary: "A gyorsítótár-fejléc értékét jelöli."
  syntax:
    content: 'public class CacheControlHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> osztály."
  syntax:
    content: public CacheControlHeaderValue ();
    parameters: []
  overload: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Meghatározza, hogy a megadott <xref:System.Object>megegyezik a jelenlegi <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> objektum.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Az objektum való összehasonlításra az aktuális objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott <xref:System.Object>egyenlő az aktuális objektum; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  id: Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Gyorsítótár-bővítmény tokenek az egy nem kötelező értéket hozzárendelni."
  remarks: "Ez a tulajdonság adja meg egy HTTP-kérelem- vagy HTTP-válasz a cache-control fejléc mezőben a &quot;gyorsítótár-bővítmény&quot; direktíva."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Extensions { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: "Gyorsítótár-bővítmény gyűjteménye jogkivonatok egyes nem kötelező hozzárendelt értékkel."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A kivonatoló függvényt szolgál egy <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> objektum."
  remarks: "Egy kivonatoló kódot egy numerikus érték, amely során egyenlőségvizsgálat objektum azonosítására szolgál. Az objektum egy gyűjtemény index is működhetnek.       A GetHashCode metódus kivonatoló algoritmusok és adatszerkezetek, például egy kivonattáblát használható."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Az aktuális objektum kivonatkód."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  id: MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A maximális élettartamát, megadása (másodpercben), hogy a HTTP-ügyfél hajlandó választ."
  remarks: "Ez a tulajdonság adja meg egy HTTP-kérelem- vagy HTTP-válasz a cache-control fejléc mezőben a &quot;maximális életkora&quot; direktíva.       Ha a <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A>tulajdonság is be van-e állítva, az ügyfél nincs hajlandó elavult választ.</xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A>"
  syntax:
    content: public Nullable<TimeSpan> MaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "Az idő másodpercben."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  id: MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Egy HTTP-ügyfél-e hajlandó egy választ, amely túllépte a lejárati ideje."
  remarks: "Ez a tulajdonság jelöli, ha a &quot;max elavult&quot; direktíva megtalálható-e a HTTP-kérelem a cache-control fejléc mező."
  syntax:
    content: public bool MaxStale { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a HTTP-ügyfél hajlandó választ, amely rendelkezik haladhatja meg a lejárati idő; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  id: MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A maximális időtartamot (másodpercekben), a HTTP-ügyfél hajlandó egy választ, amely túllépte a lejárati ideje."
  remarks: "Ez a tulajdonság HTTP-kérelem a cache-control fejléc mezőjében a &quot;max elavult&quot; direktívához rendelt értékét jelöli.       Ha a MaxStaleLimit tulajdonság nem nulla értéket kapja, az ügyfél nem hajlandó egy választ, amely nem több, mint a másodpercben megadott száma meghaladja a lejárati ideje. A nulla érték a MaxStaleLimit tulajdonság van rendelve, ha az ügyfél nem hajlandó bármely fiatalabb elavult választ."
  syntax:
    content: public Nullable<TimeSpan> MaxStaleLimit { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "Az idő másodpercben."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  id: MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A frissességet élettartamát másodpercben, ameddig egy HTTP-ügyfél hajlandó választ."
  remarks: "Ez a tulajdonság jelöli a &quot;min-friss&quot; direktíva HTTP-kérelem a cache-control fejléc mezőjében.       A tulajdonság azt jelzi, hogy a HTTP-ügyfél hajlandó a válasz frissessége élettartamú értéke nem kisebb, mint a jelenlegi életkor plusz a frissesség élettartama megadott idő másodpercben. Az ügyfél egy választ, amely akkor is a friss legalább a jelenlegi életkor plusz a frissesség élettartama szeretne."
  syntax:
    content: public Nullable<TimeSpan> MinFresh { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "Az idő másodpercben."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  id: MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Hogy az eredeti kiszolgálóra kérése az ezt követő használata a gyorsítótár-bejegyzés ismételt érvényesítése, amikor a gyorsítótári bejegyzés elévülés."
  remarks: "Ez a tulajdonság jelöli a &quot;must-revalidate érték&quot; direktíva egy HTTP-válasz a cache-control fejléc mezőjében."
  syntax:
    content: public bool MustRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a forráskiszolgáló az ezt követő használata a gyorsítótár-bejegyzés ismételt érvényesítése szükséges, ha a bejegyzés elévülés; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  id: NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Egy HTTP-ügyfél-e a gyorsítótárazott válasz hajlandó."
  remarks: "Ez a tulajdonság adja meg egy HTTP-kérelem- vagy HTTP-válasz a cache-control fejléc mezőben a &quot;no-cache&quot; direktíva.       Ha a nocache lehet tulajdonság értéke `true` e egy HTTP-kérelem üzenet a kérelmet kell továbbítja a kérelmet az eredeti kiszolgálóra felé, akkor is, ha egy gyorsítótárazott másolatának mi vonatkozó kérelem rendelkezik."
  syntax:
    content: public bool NoCache { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a HTTP-ügyfél hajlandó a gyorsítótárazott válasz; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  id: NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A HTTP-válasz a cache-control fejléc mezőjében a &quot;no-cache&quot; direktíva hosszával gyűjteménye."
  remarks: "Ez a tulajdonság a &quot;no-cache&quot; direktívában egy HTTP-válasz a cache-control fejléc mezőjében hosszával jelöli."
  syntax:
    content: public System.Collections.Generic.ICollection<string> NoCacheHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Hosszával gyűjteménye."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  id: NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A gyorsítótár e kell tárolja, vagy a HTTP kérelem mressage bármely részeként vagy a választ."
  remarks: "Ez a tulajdonság adja meg egy HTTP-kérelem- vagy HTTP-válasz a cache-control fejléc mezőben a &quot;no-store&quot; direktíva.       A NoStore tulajdonság célja a véletlen kiadás vagy bizalmas információk megőrzése érdekében. Ez a tulajdonság a teljes üzenet vonatkozik, és küldhet egy HTTP-kérés vagy válasz."
  syntax:
    content: public bool NoStore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyorsítótár nem kell tárolnia, vagy a HTTP kérelem mressage bármely részét vagy választ; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  id: NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Hogy a gyorsítótár vagy a proxy nem módosítania kell a entitástörzsében egyetlen tulajdonságát."
  remarks: "Ez a tulajdonság adja meg egy HTTP-kérelem- vagy HTTP-válasz a cache-control fejléc mezőben a &quot;no-átalakítás&quot; direktíva.       Ha a NoTransform beállítása `true`, köztes gyorsítótárak vagy rpoxies módosítja a entitástörzsében egyetlen tulajdonságát. Implementors köztes gyorsítótárak és proxyk talált akkor hasznos, ha szeretné, hogy alakítsa át az egyes entitás szervei az adathordozó típusát. Lehet, például átalakítás nem átlátszó proxyt képformátum gyorsítótár-terület mentéséhez, vagy csökkentse a lassú kapcsolat forgalom mennyisége. Súlyos működési problémák merülhetnek fel, azonban mikor legyenek végrehajtva az átalakításokat entitás szervezetek egyes szánt alkalmazások."
  syntax:
    content: public bool NoTransform { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyorsítótár vagy a proxy nem módosítania kell a entitástörzsében; valamint tetszőleges jellemzőjére vonatkozhat Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  id: OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Hogy a gyorsítótár kell a gyorsítótárazott bejegyzés, amely megfelel a más korlátokat a HTTP-kérelem a válasz vagy 504 (átjáró időtúllépése) állapotú válaszol."
  remarks: "Ez a tulajdonság jelöli a HTTP-kérelem a cache-control fejléc mezőjében &quot;csak if-gyorsítótárazott&quot; direktívának."
  syntax:
    content: public bool OnlyIfCached { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyorsítótár kell a gyorsítótárazott bejegyzés, amely megfelel a más korlátokat a HTTP-kérelem a válasz, vagy válaszoljon állapotú 504 (átjáró időtúllépése); Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A alakít át egy <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> példány."
  syntax:
    content: public static System.Net.Http.Headers.CacheControlHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "A cache-control fejlécadatokat értéket jelölő karakterlánc."
    return:
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> példány."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>van egy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> hivatkozás."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>nem érvényes a cache-control fejlécadatokat érték."
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  id: Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Hogy a HTTP-válaszüzenetnek része vagy egésze egyetlen felhasználó számára készült, és nem kell megosztott gyorsítótárával gyorsítótárazható."
  remarks: "Ez a tulajdonság jelöli egy HTTP-válasz a cache-control fejléc mezőjében a &quot;privát&quot; direktívának."
  syntax:
    content: public bool Private { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a HTTP-válaszüzenetnek egyetlen felhasználó számára készült, és nem gyorsítótárazható által megosztott gyorsítótárával; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  id: PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Egy gyűjtemény hosszával egy HTTP-válasz a cache-control fejléc mezőjében a &quot;privát&quot; direktívában."
  remarks: "Ez a tulajdonság jelöli egy HTTP-válasz a cache-control fejléc mezőjében a &quot;privát&quot; direktívában hosszával."
  syntax:
    content: public System.Collections.Generic.ICollection<string> PrivateHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Hosszával gyűjteménye."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  id: ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Hogy az eredeti kiszolgálóra kérése az ezt követő használata a gyorsítótár-bejegyzés ismételt érvényesítése, amikor a gyorsítótári bejegyzés elévülés megosztott felhasználói ügynök gyorsítótárak esetében."
  remarks: "Ez a tulajdonság jelöli a &quot;proxy-revalidate&quot; direktíva egy HTTP-válasz a cache-control fejléc mezőjében.       Ez a tulajdonság nem megosztott felhasználói ügynök gyorsítótárak nincs hatással."
  syntax:
    content: public bool ProxyRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a forráskiszolgáló az ezt követő használata a gyorsítótár-bejegyzés ismételt érvényesítése szükséges, ha a bejegyzés elévülés a megosztott felhasználói ügynök gyorsítótárak; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  id: Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "E egy HTTP-válasz lehet, hogy gyorsítótárazható bármely gyorsítótárában, akkor is, ha nem gyorsítótárazható, vagy csak a nem megosztott gyorsítótárával belül kérelmeznék általában lenne."
  remarks: "Ez a tulajdonság jelöli a &quot;nyilvános&quot; direktíva egy HTTP-válasz a cache-control fejléc mezőjében."
  syntax:
    content: public bool Public { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha bármely gyorsítótárát, előfordulhat, hogy gyorsítótárazta a HTTP-válasz, még akkor is, ha a rendes nem gyorsítótárazható vagy csak a nem megosztott gyorsítótárával; belül kérelmeznék lehet. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  id: SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A megosztott maximális élettartamát másodpercben megadott egy HTTP-válasz, amely felülbírálásai a &quot;maximális életkora&quot; direktíva a cache-control-fejlécet vagy egy megosztott gyorsítótárával Expires fejléc."
  remarks: "Ez a tulajdonság egy HTTP-válasz a cache-control fejléc mezőjében az &quot;s-maximális-életkora&quot; direktíva jelöli."
  syntax:
    content: public Nullable<TimeSpan> SharedMaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "Az idő másodpercben."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Új objektumot hoz létre, amely az aktuális másolata <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> példány."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Az aktuális példány másolatát."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Az aktuális jelölő karakterláncot ad vissza <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> objektum."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Az aktuális objektum jelölő karakterlánccá."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Meghatározza, hogy a karakterlánc érvényes <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> információkat."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.CacheControlHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "A karakterlánc ellenőrzése."
    - id: parsedValue
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> a karakterlánc verzióját."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<NameValueHeaderValue>
  nameWithType: ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals
  nameWithType: CacheControlHeaderValue.Equals
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: CacheControlHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse
  nameWithType: CacheControlHeaderValue.Parse
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString
  nameWithType: CacheControlHeaderValue.ToString
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: CacheControlHeaderValue.TryParse
