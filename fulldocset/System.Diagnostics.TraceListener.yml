### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceListener
  id: TraceListener
  children:
  - System.Diagnostics.TraceListener.#ctor
  - System.Diagnostics.TraceListener.#ctor(System.String)
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Close
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.Flush
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.String)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  langs:
  - csharp
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
  type: Class
  summary: "Biztosítja a <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> alaposztály a figyelők, akik nyomkövetési figyelése és hibaelhárítási eredmények."
  remarks: "For examples of how to implement a TraceListener, see the <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> and the <xref:System.Diagnostics.EventLogTraceListener> classes.  \n  \n You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  \n  \n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.  \n  \n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.  \n  \n To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted similar to the following example.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <trace autoflush=\"false\" indentsize=\"4\">  \n      <listeners>  \n        <add name=\"myListener\" type=\"System.Diagnostics.TextWriterTraceListener\" initializeData=\"TextWriterOutput.log\" />  \n        <remove name=\"Default\" />  \n      </listeners>  \n    </trace>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n For more information on using configuration files for tracing, see [\\&lt;system.diagnostics\\&gt;](../Topic/%3Csystem.diagnostics%3E%20Element.md)."
  syntax:
    content: 'public abstract class TraceListener : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceListener()
  nameWithType: TraceListener.TraceListener()
  fullName: System.Diagnostics.TraceListener.TraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály."
  remarks: "Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Diagnostics.TraceListener>.</xref:System.Diagnostics.TraceListener> példánya      | Tulajdonság |} Alapértelmezett érték |}   |--------------|-------------------|   | Name |} Az üres karakterlánc (&quot;&quot;). |} |} Behúzása |} Nulla. |}   | IndentSize |} Négy szóközöket. |}"
  syntax:
    content: protected TraceListener ();
    parameters: []
  overload: System.Diagnostics.TraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceListener(String)
  nameWithType: TraceListener.TraceListener(String)
  fullName: System.Diagnostics.TraceListener.TraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály a figyelő a megadott név használatával."
  syntax:
    content: protected TraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: "Neve a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>."
  overload: System.Diagnostics.TraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Attributes
  id: Attributes
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Attributes
  nameWithType: TraceListener.Attributes
  fullName: System.Diagnostics.TraceListener.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi az alkalmazás konfigurációs fájljában definiált egyéni nyomkövetési figyelő attribútumait."
  remarks: "Öröklő a <xref:System.Diagnostics.TraceListener>osztály felülbírálásával adhat hozzá az egyéni attribútumok a <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>metódus törlését és az egyéni attribútumok nevében egy karakterlánc-tömbben.</xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> </xref:System.Diagnostics.TraceListener> A attribútumok tulajdonsága az egyéni attribútumok az alkalmazás konfigurációs fájljának hivatkozott azonosítja. A következő konfigurációs fájl kivonata a például a <xref:System.Diagnostics.DelimitedListTraceListener>&quot;elválasztót&quot; egyéni attribútum hivatkozik.</xref:System.Diagnostics.DelimitedListTraceListener> Ebben az esetben a attribútumok tulajdonsága adja vissza egy <xref:System.Collections.Specialized.StringDictionary>&quot;elválasztót&quot; karakterláncot tartalmazó.</xref:System.Collections.Specialized.StringDictionary>      ```   <listeners>     <add name=&quot;delimitedListener&quot;        type=&quot;System.Diagnostics.DelimitedListTraceListener&quot;        delimiter=&quot;:&quot;        initializeData=&quot;delimitedOutput.txt&quot;        traceOutputOptions=&quot;ProcessId, DateTime&quot; />     <remove name=&quot;Default&quot; />   </listeners>   ```Nem hivatkozott egyéni attribútumok nem sorolja.  További információkért lásd: a <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>metódus.</xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> tartalmazó az egyéni attribútumok a nyomkövetés-figyelő esetében."
  overload: System.Diagnostics.TraceListener.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Close
  id: Close
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: TraceListener.Close()
  fullName: System.Diagnostics.TraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Felülbírálja a származtatott osztály, amikor bezárja a kimeneti adatfolyamba, többé nem kap a hibakeresési és nyomkövetési kimeneti."
  remarks: "Ezt a módszert használja, ha a kimeneti érintetlen fájlba, például a <xref:System.Diagnostics.TextWriterTraceListener>.</xref:System.Diagnostics.TextWriterTraceListener> A metódus hívása után újra kell inicializálni az objektumot."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.TraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Dispose
  id: Dispose
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Dispose()
  nameWithType: TraceListener.Dispose()
  fullName: System.Diagnostics.TraceListener.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Feloldja a által használt erőforrások a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>."
  remarks: "A által használt erőforrások Dispose hívása lehetővé teszi a <xref:System.Diagnostics.TraceListener>foglalhatók le más célra való.</xref:System.Diagnostics.TraceListener> Dispose kapcsolatos további információkért lásd: [nem felügyelt erőforrások tisztítás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.TraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános <xref:System.Diagnostics.TraceListener.Dispose%2A>metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> </xref:System.Diagnostics.TraceListener.Dispose%2A> `Dispose`meghívja a védett <xref:System.Diagnostics.TraceListener.Dispose%2A>metódust a `disposing` paraméter `true`.</xref:System.Diagnostics.TraceListener.Dispose%2A> <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter `true`, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja, amelyhez a <xref:System.Diagnostics.TraceListener>hivatkozik.</xref:System.Diagnostics.TraceListener> Ez a metódus meghívja a `Dispose` minden hivatkozott metódusa."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Diagnostics.TraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Fail(System.String)
  id: Fail(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Fail(String)
  nameWithType: TraceListener.Fail(String)
  fullName: System.Diagnostics.TraceListener.Fail(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy hibaüzenetet bocsát ki a figyelő akkor hozzon létre bevezetésekor a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály."
  remarks: "Az alapértelmezett viselkedést, hogy a megadott üzenetet jelenít meg egy üzenet ablakában, az alkalmazás futtatásakor, a felhasználói felület módban, és a a <xref:System.Diagnostics.TraceListener>példánya egy <xref:System.Diagnostics.TraceListenerCollection>gyűjtemény.</xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListener> Alapértelmezés szerint a <xref:System.Diagnostics.TraceListenerCollection>gyűjtemény rendelkezik <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener> példánya</xref:System.Diagnostics.TraceListenerCollection> Ez a viselkedés hozzáadásával testre szabhat egy <xref:System.Diagnostics.TraceListener>való vagy távolítsa el a gyűjtemény egyik.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public virtual void Fail (string message);
    parameters:
    - id: message
      type: System.String
      description: "Egy üzenet kibocsátás."
  overload: System.Diagnostics.TraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: TraceListener.Fail(String,String)
  fullName: System.Diagnostics.TraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Bocsát ki a hibát üzenet és a figyelő egy részletes hibaüzenetet hoz létre bevezetésekor a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály."
  remarks: "Megjelenik az üzenet és részletes üzenet üzenetpanelen az alkalmazás futtatásakor, a felhasználói felület módban, és az alapértelmezés lesz a <xref:System.Diagnostics.TraceListener>példánya egy <xref:System.Diagnostics.TraceListenerCollection>gyűjtemény.</xref:System.Diagnostics.TraceListenerCollection> </xref:System.Diagnostics.TraceListener> Alapértelmezés szerint a <xref:System.Diagnostics.TraceListenerCollection>gyűjtemény rendelkezik <xref:System.Diagnostics.DefaultTraceListener>.</xref:System.Diagnostics.DefaultTraceListener> példánya</xref:System.Diagnostics.TraceListenerCollection> Ez a viselkedés hozzáadásával testre szabhat egy <xref:System.Diagnostics.TraceListener>való vagy távolítsa el a gyűjtemény egyik.</xref:System.Diagnostics.TraceListener>"
  syntax:
    content: public virtual void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "Egy üzenet kibocsátás."
    - id: detailMessage
      type: System.String
      description: "Részletes üzenet hozható létre."
  overload: System.Diagnostics.TraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Filter
  id: Filter
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Filter
  nameWithType: TraceListener.Filter
  fullName: System.Diagnostics.TraceListener.Filter
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi és beállítja a nyomkövetési szűrő a nyomkövetés-figyelő."
  remarks: "A nyomkövetési szűrő lehet hozzáadni egy nyomkövetés-figyelő, amely a nyomkövetési forrást kapcsolók által biztosított túl szűrés egy rétegeket biztosítson. Például a <xref:System.Diagnostics.EventTypeFilter>lehet hozzáadni egy nyomkövetés-figyelő vezérelheti esemény, amelyeket a figyelő.</xref:System.Diagnostics.EventTypeFilter>  Figyelők, amelyek nevezik, mivel a kapcsoló feltételek lekérdezheti a szűrőt, ha van ilyen, annak megállapításához, hogy a nyomkövetési kimeneti küldendő."
  example:
  - "The following code example shows how to use the Filter property to add a source filter to a console trace listener. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#28](~/add/codesnippet/csharp/p-system.diagnostics.tra_6_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#28](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_6_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceFilter Filter { get; set; }
    return:
      type: System.Diagnostics.TraceFilter
      description: "Az objektum származik a <xref href=&quot;System.Diagnostics.TraceFilter&quot;> </xref> alaposztály."
  overload: System.Diagnostics.TraceListener.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Flush
  id: Flush
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: TraceListener.Flush()
  fullName: System.Diagnostics.TraceListener.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Felülbírálja a származtatott osztály, ha a kimeneti puffer kiürítése."
  syntax:
    content: public virtual void Flush ();
    parameters: []
  overload: System.Diagnostics.TraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: TraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi az egyéni attribútumok a nyomkövetés-figyelő által támogatott."
  remarks: "Az alapértelmezett implementációja GetSupportedAttributes adja vissza `null`."
  example:
  - "The following code sample shows an override of the GetSupportedAttributes method for a custom trace listener.  \n  \n [!code-cs[System.Diagnostics.TraceListener.CustomAttributes#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_22_1.cs)]\n [!code-vb[System.Diagnostics.TraceListener.CustomAttributes#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_22_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "A nyomkövetés-figyelő által támogatott egyéni attribútumaira elnevezési karakterlánc-tömbben vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nincs egyéni attribútum esetén."
  overload: System.Diagnostics.TraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.IndentLevel
  id: IndentLevel
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: IndentLevel
  nameWithType: TraceListener.IndentLevel
  fullName: System.Diagnostics.TraceListener.IndentLevel
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a behúzását."
  remarks: "A IndentLevel tulajdonság adja meg, amely a francia által megadott hányszor a <xref:System.Diagnostics.TraceListener.IndentSize%2A>tulajdonság vonatkozik.</xref:System.Diagnostics.TraceListener.IndentSize%2A> Ez a tulajdonság egy szál / /-kérések alapon tárolja."
  syntax:
    content: public int IndentLevel { get; set; }
    return:
      type: System.Int32
      description: "A behúzását. Az alapértelmezett érték nulla."
  overload: System.Diagnostics.TraceListener.IndentLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.IndentSize
  id: IndentSize
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: IndentSize
  nameWithType: TraceListener.IndentSize
  fullName: System.Diagnostics.TraceListener.IndentSize
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a számú egy francia."
  remarks: "A tulajdonság /-szál/kérelmenkénti alapon tárolja."
  syntax:
    content: public int IndentSize { get; set; }
    return:
      type: System.Int32
      description: "A behúzás szóközöket száma. Az alapértelmezett érték négy szóközöket."
  overload: System.Diagnostics.TraceListener.IndentSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Beállítási művelet sikertelen volt, mert az érték kisebb, mint nulla."
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.IsThreadSafe
  id: IsThreadSafe
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: IsThreadSafe
  nameWithType: TraceListener.IsThreadSafe
  fullName: System.Diagnostics.TraceListener.IsThreadSafe
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy érték, amely azt jelzi, hogy a nyomkövetés-figyelő szál biztonságos lekérdezi."
  remarks: "IsThreadSafe értéke határozza meg, hogy a figyelő írásához használt globális zárolást szolgál. Ha a IsThreadSafe értéke `false`, a globális zárolási <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</xref:System.Diagnostics.Trace.UseGlobalLock%2A> értékétől függetlenül szolgál A globális zárolást csak akkor, ha a IsThreadSafe értéke nem használatos `true` és értékének <xref:System.Diagnostics.Trace.UseGlobalLock%2A>van `false`.</xref:System.Diagnostics.Trace.UseGlobalLock%2A> Az alapértelmezett viselkedést, hogy használja a globális zárolása, amikor a figyelő írása."
  syntax:
    content: public virtual bool IsThreadSafe { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a nyomkövetés-figyelő esetén is szálbiztos; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.TraceListener.IsThreadSafe*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Name
  id: Name
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Name
  nameWithType: TraceListener.Name
  fullName: System.Diagnostics.TraceListener.Name
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja azt a nevet a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>."
  remarks: "A név rendszerezése és a figyelők eléréséhez használható egy <xref:System.Diagnostics.TraceListenerCollection>gyűjtemény.</xref:System.Diagnostics.TraceListenerCollection>"
  syntax:
    content: public virtual string Name { get; set; }
    return:
      type: System.String
      description: "Ez egy nevet <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.TraceListener.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.NeedIndent
  id: NeedIndent
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: NeedIndent
  nameWithType: TraceListener.NeedIndent
  fullName: System.Diagnostics.TraceListener.NeedIndent
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a kimenet."
  remarks: '**Megjegyzés:** a <xref:System.Diagnostics.TraceListener.WriteIndent%2A>által meghívott metódus a <xref:System.Diagnostics.DefaultTraceListener>és <xref:System.Diagnostics.TextWriterTraceListener>osztályokat, állítja be a NeedIndent tulajdonság értéke `false` megelőzése később, a szükségtelen francia.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.DefaultTraceListener> </xref:System.Diagnostics.TraceListener.WriteIndent%2A> Kell beállítania a NeedIndent tulajdonság `true` minden alkalommal, amikor behúzás a követés eredményét szeretné.'
  syntax:
    content: protected bool NeedIndent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kimeneti tagolt; kell lennie. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.TraceListener.NeedIndent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írja a nyomkövetési adatait, az adatok objektum- és eseményadatainak a figyelő adott kimeneti."
  remarks: "> [!IMPORTANT]> Ez a metódus hívása közvetlenül az alkalmazás kódjában, hanem tagjai nem célja a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályokat lehet írni a kimeneti nyomkövetési adatokat.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       Az alapértelmezett megvalósítási írási műveleteket a `eventCache`, `source`, `eventType` és `id` paraméterek a fejlécben és a láblécben pedig a nyomkövetést. A `data` paraméter a nyomkövetési üzenet törzsében van megírva. A `ToString` az adatobjektum módszert az objektum átalakítása <xref:System.String>.</xref:System.String>"
  syntax:
    content: public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objektum, amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A kimeneti, általában az alkalmazás által generált nyomkövetési esemény neve azonosítására használt nevet."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> érték került, ami miatt a nyomkövetési esemény típusának megadásával."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: data
      type: System.Object
      description: "A nyomkövetési adatok hozható létre."
  overload: System.Diagnostics.TraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatait, az adatok objektumok és a figyelő adott kimeneti eseményadatok tömbjét."
  remarks: "> [!IMPORTANT]> Ez a metódus hívása közvetlenül az alkalmazás kódjában, hanem tagjai nem célja a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályokat lehet írni a kimeneti nyomkövetési adatokat.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       Az alapértelmezett implementációja értékeit írja a `source`, `eventType` és `id` fejlécként paraméterek. A data objects alakítja a karakterlánc a `ToString` minden metódusa. A `eventCache` , lábléc, a kimeneti adatok értékének függő jellege adatot ír a <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  syntax:
    content: public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objektum, amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A kimeneti, általában az alkalmazás által generált nyomkövetési esemény neve azonosítására használt nevet."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> érték került, ami miatt a nyomkövetési esemény típusának megadásával."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: data
      type: System.Object[]
      description: "Data kibocsátásához objektumokból álló tömb."
  overload: System.Diagnostics.TraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési- és eseményadatainak a figyelő adott kimeneti."
  remarks: "> [!IMPORTANT]> Ez a metódus hívása közvetlenül az alkalmazás kódjában, hanem tagjai nem célja a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályokat lehet írni a kimeneti nyomkövetési adatokat.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       Az alapértelmezett implementációja értékeit írja a `source`, `eventType` és `id` fejlécként paraméterek. A `eventCache` , lábléc, a kimeneti adatok értékének függő jellege adatot ír a <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  syntax:
    content: public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objektum, amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A kimeneti, általában az alkalmazás által generált nyomkövetési esemény neve azonosítására használt nevet."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> érték került, ami miatt a nyomkövetési esemény típusának megadásával."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
  overload: System.Diagnostics.TraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatokat, egy üzenet és a figyelő adott kimeneti eseményadatok."
  remarks: "> [!IMPORTANT]> Ez a metódus hívása közvetlenül az alkalmazás kódjában, hanem tagjai nem célja a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályokat lehet írni a kimeneti nyomkövetési adatokat.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       Alapértelmezett értékeit írja a `source`, `eventType` és `id` paraméterek fejlécként, kiegészítve a `message` adatokat. A `eventCache` , lábléc, a kimeneti adatok értékének függő jellege adatot ír a <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  syntax:
    content: public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objektum, amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A kimeneti, általában az alkalmazás által generált nyomkövetési esemény neve azonosítására használt nevet."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> érték került, ami miatt a nyomkövetési esemény típusának megadásával."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: message
      type: System.String
      description: "Egy üzenetet írni."
  overload: System.Diagnostics.TraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatait, az objektumok és a figyelő adott kimeneti eseményadatok formázott tömbje."
  remarks: "> [!IMPORTANT]> Ez a metódus hívása közvetlenül az alkalmazás kódjában, hanem tagjai nem célja a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályokat lehet írni a kimeneti nyomkövetési adatokat.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       Az alapértelmezett implementációja értékeit írja a `source`, `eventType` és `id` fejlécként paraméterek. A `args` object tömbben alakítja át egy karakterlánc használata a <xref:System.String.Format%2A>metódust, hogy a `format` karakterlánc és `args` tömbben a nyomkövetési üzenet része a karakterlánc formátuma.</xref:System.String.Format%2A> A `eventCache` , lábléc, a kimeneti adatok értékének függő jellege adatot ír a <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>tulajdonság.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>"
  syntax:
    content: public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objektum, amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A kimeneti, általában az alkalmazás által generált nyomkövetési esemény neve azonosítására használt nevet."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Egy a <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> érték került, ami miatt a nyomkövetési esemény típusának megadásával."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: format
      type: System.String
      description: "A formázó karakterlánc, amely nulla vagy több formátum olyan elemeket tartalmaz, amelyek megfelelnek az objektumok a `args` tömb."
    - id: args
      type: System.Object[]
      description: "Egy <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> formázásához nulla vagy több objektumot tartalmazó tömb."
  overload: System.Diagnostics.TraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceOutputOptions
  id: TraceOutputOptions
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceOutputOptions
  nameWithType: TraceListener.TraceOutputOptions
  fullName: System.Diagnostics.TraceListener.TraceOutputOptions
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a nyomkövetési kimeneti beállításokat."
  remarks: "A TraceOutputOptions tulajdonság határozza meg a nyomkövetési kimeneti választható tartalmát. A tulajdonság állítható a konfigurációs fájlban vagy programozott módon végrehajtása során kifejezetten a kód egy szakaszban további adatokat tartalmazza. Például beállíthatja a TraceOutputOptions tulajdonságát a konzol a nyomkövetés-figyelő a <xref:System.Diagnostics.TraceOptions?displayProperty=fullName>Hívásverem-információk hozzáadása a követés eredményét.</xref:System.Diagnostics.TraceOptions?displayProperty=fullName>       A <xref:System.Diagnostics.TraceOptions>számbavételi nem használja a következő osztályok és módszerek:-az <xref:System.Diagnostics.EventLogTraceListener>osztály, mert azt eredményezheti, hogy a nagy mennyiségű adat íródik a naplóban.</xref:System.Diagnostics.EventLogTraceListener> </xref:System.Diagnostics.TraceOptions>      -A `Write` és `WriteLine` módszerek a <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, és <xref:System.Diagnostics.TextWriterTraceListener>osztályok.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.DefaultTraceListener> </xref:System.Diagnostics.ConsoleTraceListener>      -A <xref:System.Diagnostics.TraceListener.Write%2A>és <xref:System.Diagnostics.TraceListener.WriteLine%2A>módszerek <xref:System.Diagnostics.TraceListener>osztály, ha azok nincsenek felülbírálva a származtatott osztály</xref:System.Diagnostics.TraceListener> </xref:System.Diagnostics.TraceListener.WriteLine%2A> </xref:System.Diagnostics.TraceListener.Write%2A>"
  example:
  - "The following example shows the setting of the TraceOutputOptions property for a console trace listener. The console trace listener is one of the listeners enumerated in the <xref:System.Diagnostics.TraceSource.Listeners%2A> property of a trace source. This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.  \n  \n [!code-cs[System.Diagnostics.TraceSource2#16](~/add/codesnippet/csharp/p-system.diagnostics.tra_9_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource2#16](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_9_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceOptions TraceOutputOptions { get; set; }
    return:
      type: System.Diagnostics.TraceOptions
      description: "A számbavételi értékek tagértékeinek. Az alapértelmezett érték <xref href=&quot;System.Diagnostics.TraceOptions&quot;> </xref>."
  overload: System.Diagnostics.TraceListener.TraceOutputOptions*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Beállítási művelet sikertelen volt, mert az érték érvénytelen."
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: TraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.TraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írás nyomkövetési adatokat, egy üzenet, kapcsolódó tevékenység identitás- és eseményadatainak a figyelő adott kimeneti."
  remarks: "> [!IMPORTANT]> Ez a metódus hívása közvetlenül az alkalmazás kódjában, hanem tagjai nem célja a <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, és <xref:System.Diagnostics.TraceSource>osztályokat lehet írni a kimeneti nyomkövetési adatokat.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>       A <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>módszerének kapcsolódó nyomkövetési korrelációs.</xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> A TraceTransfer metódushívások a <xref:System.Diagnostics.TraceListener.TraceEvent%2A>metódus feldolgozni a hívást, a eventType szint beállítása <xref:System.Diagnostics.TraceEventType>és a `relatedActivityId` <xref:System.Guid>az üzenet fűzött karakterláncként.</xref:System.Guid> </xref:System.Diagnostics.TraceEventType> </xref:System.Diagnostics.TraceListener.TraceEvent%2A>"
  syntax:
    content: public virtual void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objektum, amely tartalmazza az aktuális folyamatazonosító szálazonosító és nyomkövetési adatok a verem."
    - id: source
      type: System.String
      description: "A kimeneti, általában az alkalmazás által generált nyomkövetési esemény neve azonosítására használt nevet."
    - id: id
      type: System.Int32
      description: "Az esemény azonosítószáma."
    - id: message
      type: System.String
      description: "Egy üzenetet írni."
    - id: relatedActivityId
      type: System.Guid
      description: "A <xref:System.Guid>objektum azonosítására kapcsolódó tevékenysége.</xref:System.Guid>"
  overload: System.Diagnostics.TraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Write(System.Object)
  id: Write(System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Write(Object)
  nameWithType: TraceListener.Write(Object)
  fullName: System.Diagnostics.TraceListener.Write(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az objektum értékének ír <xref:System.Object.ToString*>módszer a figyelő létrehozása bevezetésekor a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály</xref:System.Object.ToString*>"
  syntax:
    content: public virtual void Write (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Egy <xref:System.Object>amelynek kíván írni teljesen minősített osztálynevét.</xref:System.Object>"
  overload: System.Diagnostics.TraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: TraceListener.Write(String)
  fullName: System.Diagnostics.TraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Felülbírálja a származtatott osztály, ha beírja a megadott üzenet a származtatott osztály létrehozása a figyelőhöz."
  syntax:
    content: public abstract void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Egy üzenetet írni."
  overload: System.Diagnostics.TraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  id: Write(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Write(Object,String)
  nameWithType: TraceListener.Write(Object,String)
  fullName: System.Diagnostics.TraceListener.Write(Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írja a kategória neve és az objektum értékének <xref:System.Object.ToString*>módszer a figyelő létrehozása bevezetésekor a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály</xref:System.Object.ToString*>"
  syntax:
    content: public virtual void Write (object o, string category);
    parameters:
    - id: o
      type: System.Object
      description: "Egy <xref:System.Object>amelynek kíván írni teljesen minősített osztálynevét.</xref:System.Object>"
    - id: category
      type: System.String
      description: "A kimeneti szervezésére szolgáló kategórianevet."
  overload: System.Diagnostics.TraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: Write(String,String)
  nameWithType: TraceListener.Write(String,String)
  fullName: System.Diagnostics.TraceListener.Write(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írja a kategória neve és az üzenet a figyelő hoz létre, ha a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály."
  syntax:
    content: public virtual void Write (string message, string category);
    parameters:
    - id: message
      type: System.String
      description: "Egy üzenetet írni."
    - id: category
      type: System.String
      description: "A kimeneti szervezésére szolgáló kategórianevet."
  overload: System.Diagnostics.TraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteIndent
  id: WriteIndent
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteIndent()
  nameWithType: TraceListener.WriteIndent()
  fullName: System.Diagnostics.TraceListener.WriteIndent()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A francia ír a figyelő hoz létre, ha ezt az osztályt, és alaphelyzetbe állítja a <xref:System.Diagnostics.TraceListener.NeedIndent*>tulajdonságot <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceListener.NeedIndent*>"
  remarks: "Ez a módszer a francia ír, és alaphelyzetbe állítja a <xref:System.Diagnostics.TraceListener.NeedIndent%2A>tulajdonságot `false`.</xref:System.Diagnostics.TraceListener.NeedIndent%2A> Ha ez a metódus meghívható <xref:System.Diagnostics.TraceListener.NeedIndent%2A>van `true` Ha felülbírálja a <xref:System.Diagnostics.TraceListener.Write%2A>és <xref:System.Diagnostics.TraceListener.WriteLine%2A>módszerek.</xref:System.Diagnostics.TraceListener.WriteLine%2A> </xref:System.Diagnostics.TraceListener.Write%2A> </xref:System.Diagnostics.TraceListener.NeedIndent%2A> Alapértelmezés szerint ez a módszer a behúzás használja a szóközöket. A francia méretét határozza meg az értékeket a <xref:System.Diagnostics.TraceListener.IndentSize%2A>és <xref:System.Diagnostics.TraceListener.IndentLevel%2A>Tulajdonságok.</xref:System.Diagnostics.TraceListener.IndentLevel%2A> </xref:System.Diagnostics.TraceListener.IndentSize%2A> A <xref:System.Diagnostics.TraceListener.IndentLevel%2A>tulajdonság jelöli a szám, ahányszor által megadott méret behúzását a <xref:System.Diagnostics.TraceListener.IndentSize%2A>tulajdonság vonatkozik.</xref:System.Diagnostics.TraceListener.IndentSize%2A> </xref:System.Diagnostics.TraceListener.IndentLevel%2A> Ezt a metódust a <xref:System.Diagnostics.DefaultTraceListener>és <xref:System.Diagnostics.TextWriterTraceListener>osztályok.</xref:System.Diagnostics.TextWriterTraceListener> </xref:System.Diagnostics.DefaultTraceListener>"
  syntax:
    content: protected virtual void WriteIndent ();
    parameters: []
  overload: System.Diagnostics.TraceListener.WriteIndent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: TraceListener.WriteLine(Object)
  fullName: System.Diagnostics.TraceListener.WriteLine(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az objektum értékének ír <xref:System.Object.ToString*>módszer a figyelő létrehozása bevezetésekor a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály egy sor lezárójele követ.</xref:System.Object.ToString*>"
  remarks: "A tipikus sor lezárójele bevezetheti a kocsivissza egy soremelés (\\r) követ."
  syntax:
    content: public virtual void WriteLine (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Egy <xref:System.Object>amelynek kíván írni teljesen minősített osztálynevét.</xref:System.Object>"
  overload: System.Diagnostics.TraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: TraceListener.WriteLine(String)
  fullName: System.Diagnostics.TraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ha felül van bírálva a származtatott osztály, írások az üzenethez, és a figyelő a hoz létre a származtatott osztály, egy sor lezárójele követ."
  remarks: "A tipikus sor lezárójele bevezetheti a kocsivissza egy soremelés (\\r) követ."
  syntax:
    content: public abstract void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Egy üzenetet írni."
  overload: System.Diagnostics.TraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  id: WriteLine(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteLine(Object,String)
  nameWithType: TraceListener.WriteLine(Object,String)
  fullName: System.Diagnostics.TraceListener.WriteLine(Object,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írja a kategória neve és az objektum értékének <xref:System.Object.ToString*>módszer a figyelő létrehozása bevezetésekor a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztályt, majd egy sor lezárójele.</xref:System.Object.ToString*>"
  remarks: "A tipikus sor lezárójele bevezetheti a kocsivissza egy soremelés (\\r) követ."
  syntax:
    content: public virtual void WriteLine (object o, string category);
    parameters:
    - id: o
      type: System.Object
      description: "Egy <xref:System.Object>amelynek kíván írni teljesen minősített osztálynevét.</xref:System.Object>"
    - id: category
      type: System.String
      description: "A kimeneti szervezésére szolgáló kategórianevet."
  overload: System.Diagnostics.TraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  id: WriteLine(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  langs:
  - csharp
  name: WriteLine(String,String)
  nameWithType: TraceListener.WriteLine(String,String)
  fullName: System.Diagnostics.TraceListener.WriteLine(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Írja a kategória neve és az üzenet a figyelő hoz létre, ha a <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> osztály egy sor lezárójele követ."
  remarks: "A tipikus sor lezárójele bevezetheti a kocsivissza egy soremelés (\\r) követ."
  syntax:
    content: public virtual void WriteLine (string message, string category);
    parameters:
    - id: message
      type: System.String
      description: "Egy üzenetet írni."
    - id: category
      type: System.String
      description: "A kimeneti szervezésére szolgáló kategórianevet."
  overload: System.Diagnostics.TraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Diagnostics.TraceListener.#ctor
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceListener()
  nameWithType: TraceListener.TraceListener()
  fullName: System.Diagnostics.TraceListener.TraceListener()
- uid: System.Diagnostics.TraceListener.#ctor(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceListener(String)
  nameWithType: TraceListener.TraceListener(String)
  fullName: System.Diagnostics.TraceListener.TraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceListener.Attributes
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Attributes
  nameWithType: TraceListener.Attributes
  fullName: System.Diagnostics.TraceListener.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.TraceListener.Close
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Close()
  nameWithType: TraceListener.Close()
  fullName: System.Diagnostics.TraceListener.Close()
- uid: System.Diagnostics.TraceListener.Dispose
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Dispose()
  nameWithType: TraceListener.Dispose()
  fullName: System.Diagnostics.TraceListener.Dispose()
- uid: System.Diagnostics.TraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceListener.Fail(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail(String)
  nameWithType: TraceListener.Fail(String)
  fullName: System.Diagnostics.TraceListener.Fail(String)
- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: TraceListener.Fail(String,String)
  fullName: System.Diagnostics.TraceListener.Fail(String,String)
- uid: System.Diagnostics.TraceListener.Filter
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Filter
  nameWithType: TraceListener.Filter
  fullName: System.Diagnostics.TraceListener.Filter
- uid: System.Diagnostics.TraceFilter
  parent: System.Diagnostics
  isExternal: false
  name: TraceFilter
  nameWithType: TraceFilter
  fullName: System.Diagnostics.TraceFilter
- uid: System.Diagnostics.TraceListener.Flush
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Flush()
  nameWithType: TraceListener.Flush()
  fullName: System.Diagnostics.TraceListener.Flush()
- uid: System.Diagnostics.TraceListener.GetSupportedAttributes
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: TraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.TraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceListener.IndentLevel
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentLevel
  nameWithType: TraceListener.IndentLevel
  fullName: System.Diagnostics.TraceListener.IndentLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceListener.IndentSize
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentSize
  nameWithType: TraceListener.IndentSize
  fullName: System.Diagnostics.TraceListener.IndentSize
- uid: System.Diagnostics.TraceListener.IsThreadSafe
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: TraceListener.IsThreadSafe
  fullName: System.Diagnostics.TraceListener.IsThreadSafe
- uid: System.Diagnostics.TraceListener.Name
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Name
  nameWithType: TraceListener.Name
  fullName: System.Diagnostics.TraceListener.Name
- uid: System.Diagnostics.TraceListener.NeedIndent
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: NeedIndent
  nameWithType: TraceListener.NeedIndent
  fullName: System.Diagnostics.TraceListener.NeedIndent
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.TraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.TraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.TraceListener.TraceOutputOptions
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceOutputOptions
  nameWithType: TraceListener.TraceOutputOptions
  fullName: System.Diagnostics.TraceListener.TraceOutputOptions
- uid: System.Diagnostics.TraceOptions
  parent: System.Diagnostics
  isExternal: false
  name: TraceOptions
  nameWithType: TraceOptions
  fullName: System.Diagnostics.TraceOptions
- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: TraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.TraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.TraceListener.Write(System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(Object)
  nameWithType: TraceListener.Write(Object)
  fullName: System.Diagnostics.TraceListener.Write(Object)
- uid: System.Diagnostics.TraceListener.Write(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(String)
  nameWithType: TraceListener.Write(String)
  fullName: System.Diagnostics.TraceListener.Write(String)
- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(Object,String)
  nameWithType: TraceListener.Write(Object,String)
  fullName: System.Diagnostics.TraceListener.Write(Object,String)
- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(String,String)
  nameWithType: TraceListener.Write(String,String)
  fullName: System.Diagnostics.TraceListener.Write(String,String)
- uid: System.Diagnostics.TraceListener.WriteIndent
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteIndent()
  nameWithType: TraceListener.WriteIndent()
  fullName: System.Diagnostics.TraceListener.WriteIndent()
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(Object)
  nameWithType: TraceListener.WriteLine(Object)
  fullName: System.Diagnostics.TraceListener.WriteLine(Object)
- uid: System.Diagnostics.TraceListener.WriteLine(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: TraceListener.WriteLine(String)
  fullName: System.Diagnostics.TraceListener.WriteLine(String)
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(Object,String)
  nameWithType: TraceListener.WriteLine(Object,String)
  fullName: System.Diagnostics.TraceListener.WriteLine(Object,String)
- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(String,String)
  nameWithType: TraceListener.WriteLine(String,String)
  fullName: System.Diagnostics.TraceListener.WriteLine(String,String)
- uid: System.Diagnostics.TraceListener.#ctor*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener.TraceListener
- uid: System.Diagnostics.TraceListener.Attributes*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Attributes
  nameWithType: TraceListener.Attributes
- uid: System.Diagnostics.TraceListener.Close*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Close
  nameWithType: TraceListener.Close
- uid: System.Diagnostics.TraceListener.Dispose*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Dispose
  nameWithType: TraceListener.Dispose
- uid: System.Diagnostics.TraceListener.Fail*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail
  nameWithType: TraceListener.Fail
- uid: System.Diagnostics.TraceListener.Filter*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Filter
  nameWithType: TraceListener.Filter
- uid: System.Diagnostics.TraceListener.Flush*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Flush
  nameWithType: TraceListener.Flush
- uid: System.Diagnostics.TraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: TraceListener.GetSupportedAttributes
- uid: System.Diagnostics.TraceListener.IndentLevel*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentLevel
  nameWithType: TraceListener.IndentLevel
- uid: System.Diagnostics.TraceListener.IndentSize*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentSize
  nameWithType: TraceListener.IndentSize
- uid: System.Diagnostics.TraceListener.IsThreadSafe*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: TraceListener.IsThreadSafe
- uid: System.Diagnostics.TraceListener.Name*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Name
  nameWithType: TraceListener.Name
- uid: System.Diagnostics.TraceListener.NeedIndent*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: NeedIndent
  nameWithType: TraceListener.NeedIndent
- uid: System.Diagnostics.TraceListener.TraceData*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceData
  nameWithType: TraceListener.TraceData
- uid: System.Diagnostics.TraceListener.TraceEvent*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: TraceListener.TraceEvent
- uid: System.Diagnostics.TraceListener.TraceOutputOptions*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceOutputOptions
  nameWithType: TraceListener.TraceOutputOptions
- uid: System.Diagnostics.TraceListener.TraceTransfer*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: TraceListener.TraceTransfer
- uid: System.Diagnostics.TraceListener.Write*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write
  nameWithType: TraceListener.Write
- uid: System.Diagnostics.TraceListener.WriteIndent*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteIndent
  nameWithType: TraceListener.WriteIndent
- uid: System.Diagnostics.TraceListener.WriteLine*
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine
  nameWithType: TraceListener.WriteLine
