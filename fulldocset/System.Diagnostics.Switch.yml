### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Switch
  id: Switch
  children:
  - System.Diagnostics.Switch.#ctor(System.String,System.String)
  - System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.OnValueChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  langs:
  - csharp
  name: Switch
  nameWithType: Switch
  fullName: System.Diagnostics.Switch
  type: Class
  summary: "Itt egy absztrakt alaposztály új Hibakeresés és nyomkövetés kapcsolók létrehozásához."
  remarks: "A kapcsoló külső beállításokkal futási időben a hibakeresési és nyomkövetési kimeneti vezérlése olyan hatékony módszert kínál. A kapcsoló osztály megvalósít kapcsolók, lehetővé téve a kapcsoló szintjének módosítása a futási időben alapértelmezett viselkedése.       Ez az osztály az alaposztálya a <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch>és a <xref:System.Diagnostics.TraceSwitch>osztályok.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.SourceSwitch> </xref:System.Diagnostics.BooleanSwitch> A kapcsolók felel meg a legtöbb Hibakeresés és nyomkövetés igényeinek. Nyomkövetési kapcsolóira vonatkozó további információkért lásd: [nyomkövetési kapcsolók](~/add/includes/ajax-current-ext-md.md).       Engedélyeznie kell a nyomkövetés vagy hibakeresés kapcsoló használatára. A következő fordító adott esetén. C# és Visual Basic eltérő compilers – használatakor, tekintse meg a fordító a dokumentációját.      -C#-hibakeresés engedélyezéséhez vegye fel a `/d:DEBUG` jelzőjét, hogy a fordító parancssor, amikor a kód fordítása, vagy hozzáadhat `#define DEBUG` a fájl elejéhez. A Visual Basic, adja hozzá a `/d:DEBUG=True` jelzőjét, hogy a fordító parancssori műveletet.      -C# segítségével nyomkövetés engedélyezéséhez vegye fel a `/d:TRACE` jelzőjét, hogy a kód fordítása, vagy adja hozzá a fordító parancssori `#define TRACE` a fájl elejéhez. A Visual Basic, adja hozzá a `/d:TRACE=True` jelzőjét, hogy a fordító parancssori műveletet.       A kapcsoló szintjének beállítása, szerkessze a konfigurációs fájl, amely megfelel az alkalmazás nevét. Ezen a fájlon belüli kapcsoló hozzáadása és az értékét állítsa, távolítsa el a kapcsolót, vagy törölje a kapcsolókat az alkalmazás által korábban megadott összes. A konfigurációs fájl az alábbi példához hasonló formátumban kell lennie: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;true&quot; />       </switches>     </system.diagnostics>   </configuration>   ``` Ez például a konfigurációs szakasz egy <xref:System.Diagnostics.BooleanSwitch>rendelkező a <xref:System.Diagnostics.Switch.DisplayName%2A>tulajdonsága `mySwitch` és a <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>értéke `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> </xref:System.Diagnostics.BooleanSwitch> Az alkalmazáson belül is használhatja a konfigurált kapcsoló értéke hozzon létre egy <xref:System.Diagnostics.BooleanSwitch>azonos nevű, a következő kódrészlet példa látható.</xref:System.Diagnostics.BooleanSwitch>       [!code-cpp[Klasszikus kapcsoló például&#4;](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_1.cpp)][!code-cs[klasszikus Switch&#4;. példa  ](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_1.cs)]"
  example:
  - "The following example shows how to define a new Switch class with four levels of tracing that can be used to trace a call stack. You can use the switch to instrument your application to log each time the method is entered or exited.  \n  \n The first example creates the enumeration used to set the level of the switch.  \n  \n [!code-cpp[Classic Switch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_2.cpp)]\n [!code-cs[Classic Switch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_2.cs)]\n [!code-vb[Classic Switch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_2.vb)]  \n  \n The following example creates the new switch. The code implements a `Level` property to set the value of the new switch. `Level` calls the protected property <xref:System.Diagnostics.Switch.SwitchSetting%2A> that assigns the value to the new switch. This example also implements two assessor properties to get the assigned value of the switch.  \n  \n [!code-cpp[Classic Switch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_3.cpp)]\n [!code-cs[Classic Switch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_3.cs)]\n [!code-vb[Classic Switch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_3.vb)]  \n  \n The following example creates a new switch in `Main`. It creates a new switch and assigns it a value. Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.  \n  \n [!code-cpp[Classic Switch Example#3](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_4.cpp)]\n [!code-cs[Classic Switch Example#3](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_4.cs)]\n [!code-vb[Classic Switch Example#3](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_4.vb)]"
  syntax:
    content: public abstract class Switch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.Switch&quot;> </xref> osztály."
  remarks: "Amikor létrehoz egy új <xref:System.Diagnostics.Switch>objektum, értékét a `displayName` paraméter használható kezdeti kapcsoló beállításainak keresésére.</xref:System.Diagnostics.Switch> Az alapértelmezett érték: üres karakterlánc (&quot;&quot;).       Az XML konfigurációs fájl belül kapcsoló hozzáadása és az értékét állítsa, távolítsa el a kapcsolót, vagy törölje a kapcsolókat az alkalmazás által korábban megadott összes. Dinamikus a konfigurációs fájl nem észlel az alkalmazás van végrehajtása közben. Érvényesítéséhez állítsa le és indítsa újra a kérelmet a konfigurációs fájl módosítások érvénybe lépéséhez. A konfigurációs fájl az alábbi példához hasonló formátumban kell lennie:```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;10&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: protected Switch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "A kapcsoló nevét."
    - id: description
      type: System.String
      description: "A leírás megadása a kapcsolóhoz."
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.Switch&quot;> </xref> osztályt a megjelenített neve, leírása és alapértelmezett értéke a kapcsoló megadásával."
  remarks: "A `displayName` paraméter értékének beállítására szolgál a <xref:System.Diagnostics.Switch.DisplayName%2A>tulajdonság, és a `description` paraméter segítségével állítsa be a a <xref:System.Diagnostics.Switch.Description%2A>tulajdonság.</xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> A `defaultSwitchValue` paraméter megadása a kapcsolóhoz értéket, ha a <xref:System.Diagnostics.Switch.Value%2A>tulajdonság nincs beállítva a kódot, vagy a konfigurációs fájl attribútum.</xref:System.Diagnostics.Switch.Value%2A> Tekintse meg a <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>információval túlterhelés.</xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: protected Switch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "A kapcsoló nevét."
    - id: description
      type: System.String
      description: "A kapcsoló leírása."
    - id: defaultSwitchValue
      type: System.String
      description: "Az alapértelmezett érték a kapcsolóhoz."
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Attributes
  id: Attributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi az alkalmazás konfigurációs fájljában definiált egyéni kapcsoló attribútumait."
  remarks: "A attribútumok tulajdonsága azonosítja az alkalmazás konfigurációs fájljában hivatkozott egyéni attribútumait. Nem hivatkozott egyéni attribútumok nem sorolja. Öröklő a <xref:System.Diagnostics.Switch>osztály felülbírálásával adhat hozzá az egyéni attribútumok a <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>metódus törlését és az egyéni attribútumok nevében egy karakterlánc-tömbben.</xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> </xref:System.Diagnostics.Switch>"
  example:
  - "The following code sample shows how to display the unrecognized attributes for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#15](~/add/codesnippet/csharp/p-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#15](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> tartalmazó a nyomkövetési kapcsolóban nem betűérzékeny egyéni attribútumait."
  overload: System.Diagnostics.Switch.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Description
  id: Description
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a kapcsoló leírását."
  remarks: "Ez a tulajdonság jelzi a függvény a kapcsoló; például &quot;lehetővé teszi, hogy nyomkövetés egy címtár-figyelő összetevő.&quot; Az érték a `descriptor` paramétere a <xref:System.Diagnostics.Switch.%23ctor%2A>konstruktor.</xref:System.Diagnostics.Switch.%23ctor%2A>"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A kapcsoló leírása. Az alapértelmezett érték: üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.Switch.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.DisplayName
  id: DisplayName
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a kapcsoló azonosítására használt nevet."
  remarks: 'Amikor létrehoz egy új <xref:System.Diagnostics.Switch>objektum, a DisplayName talál kezdeti kapcsoló beállításainak.</xref:System.Diagnostics.Switch> További információkért lásd: a <xref:System.Diagnostics.Switch.%23ctor%2A>konstruktor és [hogyan: hozzon létre, inicializálása és nyomkövetési kapcsolók konfigurálása](~/add/includes/ajax-current-ext-md.md) a Visual Studio dokumentáció.</xref:System.Diagnostics.Switch.%23ctor%2A>'
  example:
  - "The following code example displays the display name for the switch in use by a trace source.  This code example is part of a larger example that can be found in the <xref:System.Diagnostics.TraceSource> class summary.  \n  \n [!code-cs[System.Diagnostics.TraceSource#10](~/add/codesnippet/csharp/p-system.diagnostics.swi_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#10](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_0_1.vb)]"
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "A név alapján határozza meg a kapcsoló. Az alapértelmezett érték: üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.Switch.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi az egyéni attribútumok a kapcsoló által támogatott."
  remarks: "Az alapértelmezett implementációja GetSupportedAttributes metódus visszaadja `null`. Ha a kapcsoló szerepel-e a konfigurációs fájlban, és egyéni attribútum van megadva, amelyek nem szerepelnek a GetSupportedAttributes, által visszaadott karakterlánc-tömbben egy <xref:System.Configuration.ConfigurationException>fordul elő, ha a kapcsoló be van töltve.</xref:System.Configuration.ConfigurationException>"
  example:
  - "The following code sample shows an override of the GetSupportedAttributes method for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#34](~/add/codesnippet/csharp/m-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#34](~/add/codesnippet/visualbasic/m-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "A kapcsoló által támogatott egyéni attribútumok nevét tartalmazó karakterlánc-tömbben vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs egyedi attribútumok nem támogatottak."
  overload: System.Diagnostics.Switch.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ha meghívni a <xref:System.Diagnostics.Switch.SwitchSetting*>tulajdonság megváltozásakor következik be.</xref:System.Diagnostics.Switch.SwitchSetting*>"
  remarks: "OnSwitchSettingChanged először beolvassa a kapcsoló meghívták a <xref:System.Diagnostics.Switch.SwitchSetting%2A>értékét a konfigurációs fájlból, és újra minden alkalommal, amikor megváltozik a kapcsoló értéke meghívták.</xref:System.Diagnostics.Switch.SwitchSetting%2A>"
  syntax:
    content: protected virtual void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ha meghívni a <xref:System.Diagnostics.Switch.Value*>tulajdonság megváltozásakor következik be.</xref:System.Diagnostics.Switch.Value*>"
  remarks: "Az alapértelmezett implementációja elemzi a új értékét az <xref:System.Diagnostics.Switch.Value%2A>tulajdonságot egy egész számot, amely beállításához használja a <xref:System.Diagnostics.Switch.SwitchSetting%2A>tulajdonság.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.Switch.Value%2A>"
  syntax:
    content: protected virtual void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.SwitchSetting
  id: SwitchSetting
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja az aktuális beállítás erre a kapcsolóra."
  syntax:
    content: protected int SwitchSetting { get; set; }
    return:
      type: System.Int32
      description: "Az aktuális beállítás erre a kapcsolóra. Az alapértelmezett érték nulla."
  overload: System.Diagnostics.Switch.SwitchSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Value
  id: Value
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a kapcsoló értékének."
  remarks: "A <xref:System.Diagnostics.Switch.OnValueChanged%2A>metódus lehívásra kerül a Value tulajdonság értékének megváltozásakor.</xref:System.Diagnostics.Switch.OnValueChanged%2A> A <xref:System.Diagnostics.Switch.OnValueChanged%2A>metódus a tulajdonság értékének elemzi és konvertálása egész szám, amely majd beállítására szolgál a <xref:System.Diagnostics.Switch.SwitchSetting%2A>tulajdonság.</xref:System.Diagnostics.Switch.SwitchSetting%2A> </xref:System.Diagnostics.Switch.OnValueChanged%2A>"
  syntax:
    content: protected string Value { get; set; }
    return:
      type: System.String
      description: "A kapcsoló értékét képviselő karakterláncot."
  overload: System.Diagnostics.Switch.Value*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Az érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - vagy - érték nem állhat csak 0 és 9 közötti számjegyek sorozata követ egy választható negatív előjelet.       – vagy – az érték azt jelenti, a szám kisebb <xref:System.Int32.MinValue>vagy nagyobb, mint <xref:System.Int32.MaxValue>.</xref:System.Int32.MaxValue> </xref:System.Int32.MinValue>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
- uid: System.Diagnostics.Switch.Attributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
- uid: System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
- uid: System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Diagnostics.Switch.#ctor*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch
  nameWithType: Switch.Switch
- uid: System.Diagnostics.Switch.Attributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
- uid: System.Diagnostics.Switch.Description*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
- uid: System.Diagnostics.Switch.DisplayName*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: Switch.GetSupportedAttributes
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: Switch.OnSwitchSettingChanged
- uid: System.Diagnostics.Switch.OnValueChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged
  nameWithType: Switch.OnValueChanged
- uid: System.Diagnostics.Switch.SwitchSetting*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
