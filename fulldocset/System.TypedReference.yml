### YamlMime:ManagedReference
items:
- uid: System.TypedReference
  id: TypedReference
  children:
  - System.TypedReference.Equals(System.Object)
  - System.TypedReference.GetHashCode
  - System.TypedReference.GetTargetType(System.TypedReference)
  - System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])
  - System.TypedReference.SetTypedReference(System.TypedReference,System.Object)
  - System.TypedReference.TargetTypeToken(System.TypedReference)
  - System.TypedReference.ToObject(System.TypedReference)
  langs:
  - csharp
  name: TypedReference
  nameWithType: TypedReference
  fullName: System.TypedReference
  type: Struct
  summary: "Ismerteti az objektumokat, amelyek mindkét felügyelt mutató egyetlen helyről, és egy adott helyen tárolt típusát futásidejű ábrázolása."
  remarks: "Egy típusos hivatkozás: egy varargs és más támogatási használt objektumtípus-érték kombinációja. `TypedReference`olyan beépített értéke a paraméterek és a helyi változók használható.       A tömbök `TypedReference` objektumok nem hozhatók létre. Például a következő hívást érvénytelen: [!code-cs [System.TypedReference#1](~/add/codesnippet/csharp/t-system.typedreference_1.cs)][!code-cpp[System.TypedReference#1](~/add/codesnippet/cpp/t-system.typedreference_1.cpp)][!code-vb[System.TypedReference#1    ](~/add/codesnippet/visualbasic/t-system.typedreference_1.vb)]"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct TypedReference
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.TypedReference.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.TypedReference
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TypedReference.Equals(Object)
  fullName: System.TypedReference.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ellenőrzi, hogy ez az objektum a megadott objektum egyenlő."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Az objektum, amelynek alapján eldönthető, az aktuális objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez az objektum megegyezik a megadott objektumot. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.TypedReference.Equals*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ez a metódus nincs megvalósítva."
  platform:
  - net462
- uid: System.TypedReference.GetHashCode
  id: GetHashCode
  parent: System.TypedReference
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TypedReference.GetHashCode()
  fullName: System.TypedReference.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Az objektum kivonatkódját adja vissza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Ez az objektum kivonatkódját."
  overload: System.TypedReference.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.TypedReference.GetTargetType(System.TypedReference)
  id: GetTargetType(System.TypedReference)
  parent: System.TypedReference
  langs:
  - csharp
  name: GetTargetType(TypedReference)
  nameWithType: TypedReference.GetTargetType(TypedReference)
  fullName: System.TypedReference.GetTargetType(TypedReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "A megadott célját típusát adja vissza <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static Type GetTargetType (TypedReference value);
    parameters:
    - id: value
      type: System.TypedReference
      description: "Az érték, amelynek céltípus vissza kell adni."
    return:
      type: System.Type
      description: "A megadott célját típusú <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>."
  overload: System.TypedReference.GetTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])
  id: MakeTypedReference(System.Object,System.Reflection.FieldInfo[])
  parent: System.TypedReference
  langs:
  - csharp
  name: MakeTypedReference(Object,FieldInfo[])
  nameWithType: TypedReference.MakeTypedReference(Object,FieldInfo[])
  fullName: System.TypedReference.MakeTypedReference(Object,FieldInfo[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lehetővé teszi egy <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref> mezők leírása listáját és a megadott objektum azonosított mező."
  remarks: "A MakeTypedReference metódus visszaadja egy típusos néhány terminál mezőjére vonatkozó hivatkozás ahol a `target` a paraméter tartalmazza az első elem által leírt mezőben `flds`, az első elem által leírt mezőben `flds` tartalmazza a mezőt, a második eleme által ismertetett `flds`, és így tovább, amíg nem éri el a Terminálszolgáltatások mező.      > [!NOTE] > Kezdve a [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)], ez a metódus nem nyilvános tag elérésére, ha a hívó rendelkezik használható <xref:System.Security.Permissions.ReflectionPermission>rendelkező a <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName>tulajdonsággal, és ha a megadott ApplicationTrust készlet nem nyilvános tag nem használható a hívónak biztosítania készletet, vagy annak egy részét.</xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.ReflectionPermission> (Lásd: [biztonsági szempontok reflexióra](~/add/includes/ajax-current-ext-md.md).)   >> Szeretné használni ezt a funkciót, az alkalmazás céloz meg a [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)] vagy újabb."
  syntax:
    content: public static TypedReference MakeTypedReference (object target, System.Reflection.FieldInfo[] flds);
    parameters:
    - id: target
      type: System.Object
      description: "Egy objektum, amely tartalmazza az első elem által leírt mezőben `flds`."
    - id: flds
      type: System.Reflection.FieldInfo[]
      description: "Ha minden elem ismerteti, amely tartalmazza a következő elem által leírt mezőben mező mezők leírása listáját. Minden egyes ismertetett mező egy érték típusúnak kell lennie. A mezők leírása kell <xref uid=&quot;langword_csharp_RuntimeFieldInfo&quot; name=&quot;RuntimeFieldInfo&quot; href=&quot;&quot;> </xref> a type rendszer által megadott objektumokat."
    return:
      type: System.TypedReference
      description: "A <xref href=&quot;System.TypedReference&quot;> </xref> az utolsó eleme által ismertetett mező <code> flds </code>."
  overload: System.TypedReference.MakeTypedReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>target</code>or <code>flds</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – a eleme <code>flds</code> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> flds </code> tömb nem elemmel rendelkezik.       – vagy – a eleme <code> flds </code> nem egy <xref uid=&quot;langword_csharp_RuntimeFieldInfo&quot; name=&quot;RuntimeFieldInfo&quot; href=&quot;&quot;> </xref> objektum.       -or-       The <>*> or <>*> property of an element of <code>flds</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  - type: System.MissingMemberException
    commentId: T:System.MissingMemberException
    description: "A paraméter <code> target </code> nem tartalmaz a mező első eleme által ismertetett <code> flds </code>, elemet vagy <code> flds </code> ismerteti, amely nem szerepel a mezőben a következő elem által ismertetett mező <code> flds </code>.       – vagy – a eleme által leírt mezőben <code> flds </code> érték típusa."
  platform:
  - net462
- uid: System.TypedReference.SetTypedReference(System.TypedReference,System.Object)
  id: SetTypedReference(System.TypedReference,System.Object)
  parent: System.TypedReference
  langs:
  - csharp
  name: SetTypedReference(TypedReference,Object)
  nameWithType: TypedReference.SetTypedReference(TypedReference,Object)
  fullName: System.TypedReference.SetTypedReference(TypedReference,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "A megadott értéket annak alakít egy <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>. Ez a metódus nem támogatott."
  remarks: "Ez a metódus mindig jelez <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  syntax:
    content: public static void SetTypedReference (TypedReference target, object value);
    parameters:
    - id: target
      type: System.TypedReference
      description: "Az átalakítás célját."
    - id: value
      type: System.Object
      description: "Az értéknek kell alakítani."
  overload: System.TypedReference.SetTypedReference*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Minden esetben."
  platform:
  - net462
- uid: System.TypedReference.TargetTypeToken(System.TypedReference)
  id: TargetTypeToken(System.TypedReference)
  parent: System.TypedReference
  langs:
  - csharp
  name: TargetTypeToken(TypedReference)
  nameWithType: TypedReference.TargetTypeToken(TypedReference)
  fullName: System.TypedReference.TargetTypeToken(TypedReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "A megadott belső metaadatok típus leírójának <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static RuntimeTypeHandle TargetTypeToken (TypedReference value);
    parameters:
    - id: value
      type: System.TypedReference
      description: "A <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref> az a típus leíró kérik."
    return:
      type: System.RuntimeTypeHandle
      description: "A belső metaadatok típus leíró a megadott <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>."
  overload: System.TypedReference.TargetTypeToken*
  exceptions: []
  platform:
  - net462
- uid: System.TypedReference.ToObject(System.TypedReference)
  id: ToObject(System.TypedReference)
  parent: System.TypedReference
  langs:
  - csharp
  name: ToObject(TypedReference)
  nameWithType: TypedReference.ToObject(TypedReference)
  fullName: System.TypedReference.ToObject(TypedReference)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "A megadott alakít <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref> való egy <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref>."
  remarks: "Ennek egy lehetséges csomagolási művelet lehet."
  syntax:
    content: public static object ToObject (TypedReference value);
    parameters:
    - id: value
      type: System.TypedReference
      description: "A <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref> kell alakítani."
    return:
      type: System.Object
      description: "Egy <xref:System.Object>konvertálásához a <xref uid=&quot;langword_csharp_TypedReference&quot; name=&quot;TypedReference&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.TypedReference.ToObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.MissingMemberException
  isExternal: true
  name: System.MissingMemberException
- uid: System.TypedReference.Equals(System.Object)
  parent: System.TypedReference
  isExternal: false
  name: Equals(Object)
  nameWithType: TypedReference.Equals(Object)
  fullName: System.TypedReference.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TypedReference.GetHashCode
  parent: System.TypedReference
  isExternal: false
  name: GetHashCode()
  nameWithType: TypedReference.GetHashCode()
  fullName: System.TypedReference.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TypedReference.GetTargetType(System.TypedReference)
  parent: System.TypedReference
  isExternal: false
  name: GetTargetType(TypedReference)
  nameWithType: TypedReference.GetTargetType(TypedReference)
  fullName: System.TypedReference.GetTargetType(TypedReference)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.TypedReference
  parent: System
  isExternal: false
  name: TypedReference
  nameWithType: TypedReference
  fullName: System.TypedReference
- uid: System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])
  parent: System.TypedReference
  isExternal: false
  name: MakeTypedReference(Object,FieldInfo[])
  nameWithType: TypedReference.MakeTypedReference(Object,FieldInfo[])
  fullName: System.TypedReference.MakeTypedReference(Object,FieldInfo[])
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.TypedReference.SetTypedReference(System.TypedReference,System.Object)
  parent: System.TypedReference
  isExternal: false
  name: SetTypedReference(TypedReference,Object)
  nameWithType: TypedReference.SetTypedReference(TypedReference,Object)
  fullName: System.TypedReference.SetTypedReference(TypedReference,Object)
- uid: System.TypedReference.TargetTypeToken(System.TypedReference)
  parent: System.TypedReference
  isExternal: false
  name: TargetTypeToken(TypedReference)
  nameWithType: TypedReference.TargetTypeToken(TypedReference)
  fullName: System.TypedReference.TargetTypeToken(TypedReference)
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: true
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.TypedReference.ToObject(System.TypedReference)
  parent: System.TypedReference
  isExternal: false
  name: ToObject(TypedReference)
  nameWithType: TypedReference.ToObject(TypedReference)
  fullName: System.TypedReference.ToObject(TypedReference)
- uid: System.TypedReference.Equals*
  parent: System.TypedReference
  isExternal: false
  name: Equals
  nameWithType: TypedReference.Equals
- uid: System.TypedReference.GetHashCode*
  parent: System.TypedReference
  isExternal: false
  name: GetHashCode
  nameWithType: TypedReference.GetHashCode
- uid: System.TypedReference.GetTargetType*
  parent: System.TypedReference
  isExternal: false
  name: GetTargetType
  nameWithType: TypedReference.GetTargetType
- uid: System.TypedReference.MakeTypedReference*
  parent: System.TypedReference
  isExternal: false
  name: MakeTypedReference
  nameWithType: TypedReference.MakeTypedReference
- uid: System.TypedReference.SetTypedReference*
  parent: System.TypedReference
  isExternal: false
  name: SetTypedReference
  nameWithType: TypedReference.SetTypedReference
- uid: System.TypedReference.TargetTypeToken*
  parent: System.TypedReference
  isExternal: false
  name: TargetTypeToken
  nameWithType: TypedReference.TargetTypeToken
- uid: System.TypedReference.ToObject*
  parent: System.TypedReference
  isExternal: false
  name: ToObject
  nameWithType: TypedReference.ToObject
