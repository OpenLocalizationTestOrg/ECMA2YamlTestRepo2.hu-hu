### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbDataReader
  id: OleDbDataReader
  children:
  - System.Data.OleDb.OleDbDataReader.Close
  - System.Data.OleDb.OleDbDataReader.Depth
  - System.Data.OleDb.OleDbDataReader.FieldCount
  - System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetEnumerator
  - System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  - System.Data.OleDb.OleDbDataReader.GetSchemaTable
  - System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  - System.Data.OleDb.OleDbDataReader.HasRows
  - System.Data.OleDb.OleDbDataReader.IsClosed
  - System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  - System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  - System.Data.OleDb.OleDbDataReader.Item(System.String)
  - System.Data.OleDb.OleDbDataReader.NextResult
  - System.Data.OleDb.OleDbDataReader.Read
  - System.Data.OleDb.OleDbDataReader.RecordsAffected
  - System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  langs:
  - csharp
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
  type: Class
  summary: "Biztosítja az adatok sorok csak előrefelé bejárható adatfolyam olvasásakor adatforrás. Ez az osztály nem örökölhető."
  remarks: "Egy OleDbDataReader létrehozásához meg kell hívnia a <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>metódusában a <xref:System.Data.OleDb.OleDbCommand>objektum, egy konstruktor közvetlen használata helyett.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>       Bezárása előtt a <xref:System.Data.OleDb.OleDbConnection>, először zárjon be a OleDbDataReader objektum.</xref:System.Data.OleDb.OleDbConnection> A OleDbDataReader objektum is be kell zárnia, ha azt tervezi, hogy resuse <xref:System.Data.OleDb.OleDbCommand>objektum. Például nem lehet lekérdezni a kimeneti paraméterek csak a követően meghívja a <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</xref:System.Data.OleDb.OleDbDataReader.Close%2A> </xref:System.Data.OleDb.OleDbCommand>       Lehet, hogy egy eredményhalmazban, hogy egy másik folyamat vagy szál adatok olvasása során végrehajtott módosítások a OleDbDataReader a felhasználó számára látható. A pontos viselkedés azonban függő van időzítése.       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>és <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>hívása csak tulajdonságok vannak a OleDbDataReader bezárása után.</xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A></xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> Bár a <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>tulajdonság lehet érhető el, amíg a OleDbDataReader létezik, mindig hívja <xref:System.Data.OleDb.OleDbDataReader.Close%2A>értékének visszatérése előtt <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>pontos visszatérési érték garantálja.</xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> </xref:System.Data.OleDb.OleDbDataReader.Close%2A> </xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an OleDbDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OleDbDataReader and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-vb[Classic WebData OleDbDataReader Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbDataReader Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: 'public sealed class OleDbDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Close
  id: Close
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OleDbDataReader.Close()
  fullName: System.Data.OleDb.OleDbDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Bezárja a <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> objektum."
  remarks: "Explicit módon meg kell hívnia a Close metódus, amikor keresztül használja a <xref:System.Data.OleDb.OleDbDataReader>használata a társított <xref:System.Data.OleDb.OleDbConnection>semmilyen más célra.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataReader>      > [!CAUTION] > Ne hívja meg **Bezárás** vagy **eldobásakor** a kapcsolatot, a DataReader vagy más felügyelt objektum az az **véglegesítő** az osztály. A véglegesítőt, a kiadás csak nem felügyelt erőforrást, amely a osztály birtokolja közvetlenül. Ha az osztály nem rendelkezik a nem felügyelt erőforrás nem tartalmaznak egy **véglegesítő** az osztálydefiníció metódust. További információkért lásd: [szemétgyűjtés](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_24_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_24_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OleDb.OleDbDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Depth
  id: Depth
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OleDbDataReader.Depth
  fullName: System.Data.OleDb.OleDbDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "A mélységű beágyazást hozhat létre az aktuális sor jelző érték beolvasása."
  remarks: "A legkülső táblának a mélység értéke nulla."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "A mélységű beágyazást hozhat létre az aktuális sor."
  overload: System.Data.OleDb.OleDbDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.FieldCount
  id: FieldCount
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
  fullName: System.Data.OleDb.OleDbDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi az oszlopok számát az aktuális sor."
  remarks: "Rejtett mezők tartalmazza. Használjon <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A>Rejtett mezők kizárásához.</xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A>       Egy lekérdezést, amely nem ad vissza a sorok végrehajtása, után FieldCount 0 értéket adja vissza."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Ha nem található érvényes rekordhalmazban 0; Ellenkező esetben az aktuális rekord oszlopok számát. Az alapértelmezett érték a -1."
  overload: System.Data.OleDb.OleDbDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nincs adatforrás jelenleg nincs kapcsolat."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OleDbDataReader.GetBoolean(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékét a logikai értékként."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már olyan logikai érték, vagy kivétel jön létre.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "Az oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OleDbDataReader.GetByte(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékét a bájtban."
  remarks: "Nincs átalakításra történik; ezért beolvasott adat már kell lennie egy olyan bájtot.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Byte
      description: "A bájtban megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Beolvassa bájtos adatfolyam a megadott oszlop eltolásánál kezdődő, a puffer tömbként az adott puffer eltolástól kezdve."
  remarks: "GetBytes mező a rendelkezésre álló bájtok számát adja vissza. A legtöbbször ennek a mezőnek a pontos hossza. Előfordulhat azonban, a visszaadott száma kisebb, mint a mező értéke igaz hossza Ha `GetBytes` bájt beszerezni a mező már felhasználták. Ez lehet például az esetben, ha a <xref:System.Data.OleDb.OleDbDataReader>nagy adatszerkezet éppen olvas be pufferbe.</xref:System.Data.OleDb.OleDbDataReader> További információkért lásd: a `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> beállítása       Ha a puffer `null`, GetBytes adja vissza a mező hossza bájtban.       Nincs átalakításra történik; Emiatt a beolvasott adat már kell lennie egy bájttömböt."
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: dataIndex
      type: System.Int64
      description: "Az index a mező, amelyből az olvasási művelet elindításához."
    - id: buffer
      type: System.Byte[]
      description: "A puffer, amelybe bájtos adatfolyam olvasására."
    - id: bufferIndex
      type: System.Int32
      description: "Az index belül a `buffer` elindítani az írási művelet esetén."
    - id: length
      type: System.Int32
      description: "Másolja a puffer maximális hosszát."
    return:
      type: System.Int64
      description: "A tényleges, beolvasott bájtok száma."
  overload: System.Data.OleDb.OleDbDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OleDbDataReader.GetChar(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értéke egy karakter."
  remarks: "Nem támogatott a <xref:System.Data.OleDb>.</xref:System.Data.OleDb>"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Char
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Beolvassa adatfolyam karaktereket a megadott oszlop eltolásánál kezdődő, a puffer tömbként az adott puffer eltolástól kezdve."
  remarks: "GetChars mező a rendelkezésre álló karakterek számát adja vissza. A legtöbbször ennek a mezőnek a pontos hossza. Előfordulhat azonban, a visszaadott száma kisebb, mint a mező értéke igaz hossza Ha `GetChars` karakterek beszerezni a mező már felhasználták. Ez lehet például az esetben, ha a <xref:System.Data.OleDb.OleDbDataReader>nagy adatszerkezet éppen olvas be pufferbe.</xref:System.Data.OleDb.OleDbDataReader> További információkért lásd: a `SequentialAccess` <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior> beállítása       Ha a puffer `null`, GetChars adja vissza a mező hossza karakterben.       Nincs átalakításra történik; ezért a beolvasott adat már tömbnek kell lennie egy karakter."
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: dataIndex
      type: System.Int64
      description: "Az olvasási művelet indítsa el a soron belüli index."
    - id: buffer
      type: System.Char[]
      description: "A puffer, amelybe az adatok másolása."
    - id: bufferIndex
      type: System.Int32
      description: "Az index belül a `buffer` elindítani az írási művelet esetén."
    - id: length
      type: System.Int32
      description: "Olvassa el a karakterek száma."
    return:
      type: System.Int64
      description: "Olvassa el a tényleges karakterszámot."
  overload: System.Data.OleDb.OleDbDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: OleDbDataReader.GetData(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> a kért oszlopból objektumot."
  remarks: "A <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>szolgáltatás fel fogja hívni GetData, ha a szolgáltató adja vissza <xref:System.Data.IDataReader>, amely rendelkezik egy olyan oszlop, amely támogatja a <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> </xref:System.Data.IDataReader> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Egy <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> objektum."
  overload: System.Data.OleDb.OleDbDataReader.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OleDbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a forrás adattípus neve."
  syntax:
    content: public override string GetDataTypeName (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A háttér-adattípus neve. További információkért lásd: [SQL Server adattípusok](http://go.microsoft.com/fwlink/?LinkId=198032) vagy [adattípusok hozzáférési](http://go.microsoft.com/fwlink/?LinkId=198033)."
  overload: System.Data.OleDb.OleDbDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OleDbDataReader.GetDateTime(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.DateTime>objektum.</xref:System.DateTime>"
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.DateTime>objektum.</xref:System.DateTime>       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.DateTime
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: OleDbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.Common.DbDataReader
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.OleDb.OleDbDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OleDbDataReader.GetDecimal(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.Decimal>objektum.</xref:System.Decimal>"
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.Decimal>objektum.</xref:System.Decimal>       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Decimal
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OleDbDataReader.GetDouble(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékének kétszeres pontosságú lebegőpontos számként."
  remarks: "Nincs átalakításra történik; ezért beolvasott adat már kell lennie egy kétszeres pontosságú lebegőpontos szám.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Double
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OleDbDataReader.GetEnumerator()
  fullName: System.Data.OleDb.OleDbDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Értéket ad vissza egy <xref:System.Collections.IEnumerator>, amelyek segítségével a sorokat az Adatolvasó iterációt.</xref:System.Collections.IEnumerator>"
  remarks: "Bár ez a metódus explicit módon számbevevőre beolvasni, a nyelveket, amelyek támogatják a `foreach` szerkezet egyszerűbb közvetlenül ahhoz, hogy a sorokat az Adatolvasó iterációt az ismétlési szerkezet használni."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>, amelyek segítségével a sorokat az Adatolvasó iterációt.</xref:System.Collections.IEnumerator>"
  overload: System.Data.OleDb.OleDbDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OleDbDataReader.GetFieldType(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Type
      description: "A <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  overload: System.Data.OleDb.OleDbDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OleDbDataReader.GetFloat(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékének egy egyszeres pontosságú lebegőpontos számot."
  remarks: "Nincs átalakítást hajt végre. Emiatt a beolvasott adat már kell lennie egy egyszeres pontosságú lebegőpontos szám.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Single
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OleDbDataReader.GetGuid(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értéke, egy globálisan egyedi azonosítóját (GUID)."
  remarks: "Nincs átalakításra történik; ezért beolvasott adat már kell lennie egy globálisan egyedi azonosítóját.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Guid
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OleDbDataReader.GetInt16(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékének aláírt 16 bites egész számként."
  remarks: "Nincs átalakításra történik; ezért beolvasott adat már kell lennie a 16 bites előjeles egész számokat.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int16
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OleDbDataReader.GetInt32(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékének aláírt 32 bites egész számként."
  remarks: "Nincs átalakításra történik; Emiatt a beolvasott adat már kell lennie egy 32 bites előjeles egész számokat.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int32
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OleDbDataReader.GetInt64(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékének egy 64 bites előjeles egész számként."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy 64 bites előjeles egész számokat.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int64
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OleDbDataReader.GetName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop neve."
  syntax:
    content: public override string GetName (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A megadott oszlop neve."
  overload: System.Data.OleDb.OleDbDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OleDbDataReader.GetOrdinal(String)
  fullName: System.Data.OleDb.OleDbDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a oszlop sorszáma, az oszlop neve a."
  remarks: "GetOrdinal először a kis-és nagybetűket keresést hajt végre. Ha nem sikerül, egy második nem betűérzékeny keresési történik. A metódus jelez egy `IndexOutOfRange` exceptionif sorszám nulláról indulva számított oszlop nem található.       GetOrdinal kana-szélesség-és nagybetűk megkülönböztetése nélkül.       Mivel a sorszám-alapú keresését hatékonyabb, mint elnevezett keresések, nem hatékony GetOrdinal hívni a hurkon belül. Időt takaríthat meg GetOrdinal egyszer hívja, és az eredmények hozzárendelése egy egész változót a hurkon belül használható."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_9_1.vb)]\n [!code-cs[Classic WebData OleDbDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_9_1.cs)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Int32
      description: "A nulla alapú oszlopból."
  overload: System.Data.OleDb.OleDbDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A megadott értéke nem érvényes oszlopnevet."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OleDbDataReader.GetSchemaTable()
  fullName: System.Data.OleDb.OleDbDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai a <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>."
  remarks: "A GetSchemaTable metódus van leképezve az OLE DB **IColumnsRowset::GetColumnsRowset** metódust, és minden oszlop a következő sorrendben metaadatokat adja vissza: |} DataReader oszlop |} OLE DB Oszlopazonosító |} Leírás |}   |-----------------------|----------------------|-----------------|   | Oszlopnév |} DBCOLUMN_NAME |} Az oszlop; neve Ez nem lehet egyedi. Ha ez nem lehet megállapítani, null értéket ad vissza. Ez a név mindig tükrözi az aktuális nézet vagy parancs szöveges oszlop legutóbbi átnevezését. |}   | ColumnOrdinal |} DBCOLUMN_NUMBER |} Az oszlop nulla alapú sorszámát. Ez az oszlop nem tartalmazhat null értékű. |}   | ColumnSize |} DBCOLUMN_COLUMNSIZE |} A lehetséges legfeljebb egy értéket a oszlopban. Olyan oszlopok esetében, a rögzített hosszúságú adattípus, ez az adattípus mérete. |}   | NumericPrecision |} DBCOLUMN_PRECISION |} Ha DbType egy numerikus adattípusú, a maximális pontosság oszlop. DBTYPE_DECIMAL vagy DBTYPE_NUMERIC adattípusú oszlopok pontossága attól függ, hogy az oszlop definíciója. Ha DbType nincs egy numerikus adattípusú, akkor ez az null értékű. |}   | NumericScale |} DBCOLUMN_SCALE |} Ha DbType DBTYPE_DECIMAL vagy DBTYPE_NUMERIC, ez az a tizedesvesszőtől jobbra számjegyek száma. Ellenkező esetben ez az null értékű. |}   | DataType |} Nincs |} A .NET-keretrendszer típusú oszlop leképezve. |}   | Szolgáltatótípus |} DBCOLUMN_TYPE |} Az jelzi, hogy az oszlop adattípusát. Ha az oszlop adattípusának sor sor változik, ennek DBTYPE_VARIANT kell lennie. Ez az oszlop nem tartalmazhat null értékű. |}   | IsLong |} DBCOLUMNFLAGS_ISLONG |} A szolgáltató DBCOLUMNFLAGS_ISLONG beállítja, ha az oszlop bináris hosszú objektum (BLOB), amely tartalmazza a nagyon hosszú adatokat tartalmaz. Nagyon sok adat definíciójánál szolgáltatói. Ez a jelző annak a beállítás megegyezik a PROVIDER_TYPES sorhalmazban az adattípusnál a IS_LONG oszlop értéke. |}   | AllowDBNull |} DBCOLUMNFLAGS_ISNULLABLE |} A szolgáltató DBCOLUMNFLAGS_ISNULLABLE állítja be, ha a fogyasztó állíthat be az oszlop null értékű, vagy ha a szolgáltató nem tudja meghatározni a felhasználó beállíthat-e az oszlop null értékűre. Egy oszlop tartalmazhat null értékeket, akkor is, ha nem állítható be null értékűre. |}   | IsReadOnly |} DBCOLUMNFLAGS_WRITE |} `true` Ha az oszlop nem módosított, ha `false`. Az oszlop feltételezett, hogy ha a szolgáltató DBCOLUMNFLAGS_WRITE vagy DBCOLUMNFLAGS_WRITEUNKNOWN jelző írhatónak kell lennie. |}   | IsRowVersion |} DBCOLUMNFLAGS_ISROWID |} A szolgáltató DBCOLUMNFLAGS_ISROWID beállítja, ha az oszlop tartalmaz egy állandó sorazonosítóként, amely nem lehet írni, és értéke nem értelmezhető kivéve hozzá a sor. |}   | IsUnique |} DBCOLUMN_ISUNIQUE |} Nem VARIANT_TRUE: BaseTableName-részleg által visszaadott tábla az alaptáblában szereplő két sorok ugyanazon értékekkel rendelkeznek a ebben az oszlopban. IsUnique magát, vagy nincs-e típusú egyedi, érvényes ez az oszlop egy korlátozás garantálja nem VARIANT_TRUE lennie, ha az oszlop felel meg a kulcsot.<br /><br /> Tulajdonság: Az oszlop tartalmazhat ismétlődő értékeket alaptábla. Az oszlop az alapértelmezett érték a tulajdonság. |}   | IsKey |} DBCOLUMN_KEYCOLUMN |} Nem VARIANT_TRUE: Az oszlop az egyik a sorkészlet oszlopkészleteket, hogy a együtt egyértelműen a sort. Az oszlop értéke nem VARIANT_TRUE IsKey készletét egyedi módon kell azonosítania a sorhalmaz egyik sorában. Esetében nem követelmény, hogy az oszlopok csoportja-e a minimális számú oszlopot. Az oszlopok csoportja az alaptábla elsődleges kulcs, egyedi megkötésen vagy egyedi index eredményezhet.<br /><br /> Tulajdonság: Az oszlop nem szükséges a sor egyedi azonosításához. |}   | IsAutoIncrement |} DBCOLUMN_ISAUTOINCREMENT |} Nem VARIANT_TRUE: Az oszlop rendel értéket új sorok rögzített lépésekben.<br /><br /> Tulajdonság: Az oszlop nem adhatja értékek rögzített lépésekben új sort. Az oszlop az alapértelmezett érték a tulajdonság. |}   | BaseSchemaName |} DBCOLUMN_BASESCHEMANAME |} A séma a tárolóban, amely tartalmazza az oszlop neve. Egy null értéket, ha az alap séma neve nem határozható meg. Az oszlop alapértelmezett értéke null. |}   | BaseCatalogName |} DBCOLUMN_BASECATALOGNAME |} A katalógus szerepel az adattárban, amely tartalmazza az oszlop neve. Egy null értéket, ha az alap katalógus neve nem határozható meg. Az oszlop alapértelmezett értéke null. |}   | BaseTableName |} DBCOLUMN_BASETABLENAME |} A tábla vagy nézet a tárolóban, amely tartalmazza az oszlop neve. Egy null értéket, ha az alaptábla neve nem határozható meg. Az oszlop alapértelmezett értéke null. |}   | BaseColumnName |} DBCOLUMN_BASECOLUMNNAME |} Az adattár oszlop neve. Ez az alias lett megadva a ColumnName oszlop visszaadott oszlop nevétől eltérő lehet. Egy null értéket, ha az alap oszlop neve nem határozható meg, vagy származtatott, de nem azonos a sorkészlet-oszlophoz esetén egy oszlopot az adatok tárolásához. Az oszlop alapértelmezett értéke null. |}      > [!NOTE] > Győződjön meg arról, hogy metaadatok a megfelelő adatokat ad vissza, meg kell hívnia <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>rendelkező a `behavior` paraméter `KeyInfo`.</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> Ellenkező esetben a séma tábla oszlopai némelyike térhetnek vissza alapértelmezett, null, vagy helytelen az adatok."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai."
  overload: System.Data.OleDb.OleDbDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> le van zárva."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OleDbDataReader.GetString(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékének karakterláncként."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már karakterláncnak kell lennie.       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: OleDbDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.TimeSpan>objektum.</xref:System.TimeSpan>"
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.TimeSpan>objektum.</xref:System.TimeSpan>       Hívás <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>és azokban megkereshetik a null értékeket a metódus hívása előtt.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public TimeSpan GetTimeSpan (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.TimeSpan
      description: "A megadott oszlop értéke."
  overload: System.Data.OleDb.OleDbDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OleDbDataReader.GetValue(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Az oszlop értékének beolvasása a megadott sorszám natív formátumában."
  remarks: "Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull>"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Object
      description: "A visszatérési érték."
  overload: System.Data.OleDb.OleDbDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OleDbDataReader.GetValues(Object[])
  fullName: System.Data.OleDb.OleDbDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Feltölti az oszlop értékekkel, az aktuális sor egy objektumokból álló tömb."
  remarks: "A legtöbb alkalmazás esetén a GetValues metódus hatékony biztosít az összes oszlop, minden oszlop külön-külön beolvasása helyett.       Megadhat egy <xref:System.Object>tömb, amely tartalmazza az eredményül kapott sor található oszlopok száma nem lépi.</xref:System.Object> Csak a adatok mennyisége az <xref:System.Object>tömb, amely tárolja a tömb másolandó.</xref:System.Object> Is átadhatja az <xref:System.Object>tömb, amelynek hossza nagyobb, mint az eredményül kapott sor található oszlopok száma.</xref:System.Object>       Ez a metódus visszaadja <xref:System.DBNull>adatbázis oszlopokhoz.</xref:System.DBNull>"
  example:
  - >-
    [!code-cs[OleDbDataReader_GetValues#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_12_1.cs)]
     [!code-vb[OleDbDataReader_GetValues#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_12_1.vb)]
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "A tömb <xref:System.Object>amelybe az attribútumoszlopoknak másolásához.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A több példányban <xref:System.Object>a tömbben.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.HasRows
  id: HasRows
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
  fullName: System.Data.OleDb.OleDbDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> egy vagy több sort tartalmaz."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> tartalmaz egy vagy több sor; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.IsClosed
  id: IsClosed
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
  fullName: System.Data.OleDb.OleDbDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Azt jelzi, hogy az Adatolvasó be van zárva."
  remarks: "IsClosed és <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>hívása után csak tulajdonságok vannak a <xref:System.Data.OleDb.OleDbDataReader>le van zárva.</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> lezárt; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OleDbDataReader.IsDBNull(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy az oszlop nem létező vagy a hiányzó értékeket tartalmaz."
  remarks: "Ez a metódushívás ellenőrizze, hogy a beírt hívása előtt null értékek beolvasása módszerek (például <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>, és így tovább) kiadását okozó hiba elkerülése érdekében.</xref:System.Data.OleDb.OleDbDataReader.GetChar%2A> </xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott oszlop érték egyenértékű <xref href=&quot;System.DBNull&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OleDbDataReader.Item(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékét az adott a oszlopból natív formátumában."
  syntax:
    content: public override object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "A sorszám oszlopot."
    return:
      type: System.Object
      description: "A megadott oszlop natív formátumában értéke."
  overload: System.Data.OleDb.OleDbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Az átadott index kívül esik a tartományon keresztül <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*> 0 volt"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OleDbDataReader.Item(String)
  fullName: System.Data.OleDb.OleDbDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megadott oszlop értékét az oszlop neve a natív formátumában."
  remarks: "A kis-és nagybetűket keres a először történik. Ha nem sikerül, egy második nem betűérzékeny keresési történik.       Ez a metódus kana-szélesség-és nagybetűk megkülönböztetése nélkül."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Az oszlop nevét."
    return:
      type: System.Object
      description: "A megadott oszlop natív formátumában értéke."
  overload: System.Data.OleDb.OleDbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Egyetlen oszlop sincs a megadott néven nem található."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.NextResult
  id: NextResult
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OleDbDataReader.NextResult()
  fullName: System.Data.OleDb.OleDbDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Kötegelt SQL-utasítások eredményeit olvasásakor, kiadásokban Adatolvasó a következő találatra."
  remarks: "Több eredmény kötegelt SQL-utasítások végrehajtásával létrehozható feldolgozásához használatos.       Alapértelmezés szerint az Adatolvasó pozicionálva a első találatra."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha több eredményhalmazt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Read
  id: Read
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OleDbDataReader.Read()
  fullName: System.Data.OleDb.OleDbDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Kiadásokban a <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> a következő bejegyzéshez."
  remarks: "Az alapértelmezett pozíciója a <xref:System.Data.OleDb.OleDbDataReader>előtt az első rekordra.</xref:System.Data.OleDb.OleDbDataReader> Ezért meg kell hívnia olvasható adatok elérése elindításához.       Amíg a <xref:System.Data.OleDb.OleDbDataReader>használatban van, a társított <xref:System.Data.OleDb.OleDbConnection>foglalt, amíg <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</xref:System.Data.OleDb.OleDbDataReader.Close%2A> meghívja a szolgáltató</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader> and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_6_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_6_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha további sorokat; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
  fullName: System.Data.OleDb.OleDbDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a megváltozott, szúrja be, vagy törli azokat az SQL-utasítás végrehajtása sorok száma."
  remarks: "A RecordsAffected tulajdonság nincs beállítva mindaddig, amíg az összes sor olvasása, és bezárja a <xref:System.Data.OleDb.OleDbDataReader>.</xref:System.Data.OleDb.OleDbDataReader>       Ez a tulajdonság értéke összegző. Például ha két rekordok kötegelt módban szúrja be, a RecordsAffected értéke két.       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>és RecordsAffected hívása után csak tulajdonságok a <xref:System.Data.OleDb.OleDbDataReader>le van zárva.</xref:System.Data.OleDb.OleDbDataReader></xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "A sorok száma megváltozott, beszúrt vagy törölt; 0, ha az érintett sorok vagy az utasítás sikertelen; és -1 kiválasztott utasítást."
  overload: System.Data.OleDb.OleDbDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
  fullName: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lekérdezi a mezők számát a <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> , amely nem rejtett."
  remarks: "Ez az érték azt határozza meg, hogy hány mezőiben a <xref:System.Data.OleDb.OleDbDataReader>láthatók.</xref:System.Data.OleDb.OleDbDataReader> Például egy jelöljön ki egy részleges elsődleges kulcshoz értéket ad vissza a kulcsot fennmaradó részei rejtett mezők. A rejtett mezők mindig mögött látható lesz hozzáfűzve."
  syntax:
    content: public override int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "A nem rejtett mezők számát."
  overload: System.Data.OleDb.OleDbDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbDataReader.Close
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Close()
  nameWithType: OleDbDataReader.Close()
  fullName: System.Data.OleDb.OleDbDataReader.Close()
- uid: System.Data.OleDb.OleDbDataReader.Depth
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Depth
  nameWithType: OleDbDataReader.Depth
  fullName: System.Data.OleDb.OleDbDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbDataReader.FieldCount
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
  fullName: System.Data.OleDb.OleDbDataReader.FieldCount
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OleDbDataReader.GetBoolean(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OleDbDataReader.GetByte(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OleDbDataReader.GetChar(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetData(Int32)
  nameWithType: OleDbDataReader.GetData(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetData(Int32)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OleDbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OleDbDataReader.GetDateTime(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: OleDbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDbDataReader(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OleDbDataReader.GetDecimal(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OleDbDataReader.GetDouble(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OleDbDataReader.GetEnumerator()
  fullName: System.Data.OleDb.OleDbDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OleDbDataReader.GetFieldType(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OleDbDataReader.GetFloat(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OleDbDataReader.GetGuid(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OleDbDataReader.GetInt16(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OleDbDataReader.GetInt32(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt32(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OleDbDataReader.GetInt64(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt64(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OleDbDataReader.GetName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetName(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OleDbDataReader.GetOrdinal(String)
  fullName: System.Data.OleDb.OleDbDataReader.GetOrdinal(String)
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OleDbDataReader.GetSchemaTable()
  fullName: System.Data.OleDb.OleDbDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OleDbDataReader.GetString(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetString(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: OleDbDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OleDbDataReader.GetValue(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OleDbDataReader.GetValues(Object[])
  fullName: System.Data.OleDb.OleDbDataReader.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.HasRows
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
  fullName: System.Data.OleDb.OleDbDataReader.HasRows
- uid: System.Data.OleDb.OleDbDataReader.IsClosed
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
  fullName: System.Data.OleDb.OleDbDataReader.IsClosed
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OleDbDataReader.IsDBNull(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.IsDBNull(Int32)
- uid: System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OleDbDataReader.Item(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.Item(Int32)
- uid: System.Data.OleDb.OleDbDataReader.Item(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OleDbDataReader.Item(String)
  fullName: System.Data.OleDb.OleDbDataReader.Item(String)
- uid: System.Data.OleDb.OleDbDataReader.NextResult
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OleDbDataReader.NextResult()
  fullName: System.Data.OleDb.OleDbDataReader.NextResult()
- uid: System.Data.OleDb.OleDbDataReader.Read
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Read()
  nameWithType: OleDbDataReader.Read()
  fullName: System.Data.OleDb.OleDbDataReader.Read()
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
  fullName: System.Data.OleDb.OleDbDataReader.RecordsAffected
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
  fullName: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
- uid: System.Data.OleDb.OleDbDataReader.Close*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Close
  nameWithType: OleDbDataReader.Close
- uid: System.Data.OleDb.OleDbDataReader.Depth*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Depth
  nameWithType: OleDbDataReader.Depth
- uid: System.Data.OleDb.OleDbDataReader.FieldCount*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OleDbDataReader.GetBoolean
- uid: System.Data.OleDb.OleDbDataReader.GetByte*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetByte
  nameWithType: OleDbDataReader.GetByte
- uid: System.Data.OleDb.OleDbDataReader.GetBytes*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OleDbDataReader.GetBytes
- uid: System.Data.OleDb.OleDbDataReader.GetChar*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChar
  nameWithType: OleDbDataReader.GetChar
- uid: System.Data.OleDb.OleDbDataReader.GetChars*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChars
  nameWithType: OleDbDataReader.GetChars
- uid: System.Data.OleDb.OleDbDataReader.GetData*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetData
  nameWithType: OleDbDataReader.GetData
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OleDbDataReader.GetDataTypeName
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OleDbDataReader.GetDateTime
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: OleDbDataReader.GetDbDataReader
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OleDbDataReader.GetDecimal
- uid: System.Data.OleDb.OleDbDataReader.GetDouble*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OleDbDataReader.GetDouble
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbDataReader.GetEnumerator
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OleDbDataReader.GetFieldType
- uid: System.Data.OleDb.OleDbDataReader.GetFloat*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OleDbDataReader.GetFloat
- uid: System.Data.OleDb.OleDbDataReader.GetGuid*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OleDbDataReader.GetGuid
- uid: System.Data.OleDb.OleDbDataReader.GetInt16*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OleDbDataReader.GetInt16
- uid: System.Data.OleDb.OleDbDataReader.GetInt32*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OleDbDataReader.GetInt32
- uid: System.Data.OleDb.OleDbDataReader.GetInt64*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OleDbDataReader.GetInt64
- uid: System.Data.OleDb.OleDbDataReader.GetName*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetName
  nameWithType: OleDbDataReader.GetName
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OleDbDataReader.GetOrdinal
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OleDbDataReader.GetSchemaTable
- uid: System.Data.OleDb.OleDbDataReader.GetString*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetString
  nameWithType: OleDbDataReader.GetString
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: OleDbDataReader.GetTimeSpan
- uid: System.Data.OleDb.OleDbDataReader.GetValue*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValue
  nameWithType: OleDbDataReader.GetValue
- uid: System.Data.OleDb.OleDbDataReader.GetValues*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValues
  nameWithType: OleDbDataReader.GetValues
- uid: System.Data.OleDb.OleDbDataReader.HasRows*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
- uid: System.Data.OleDb.OleDbDataReader.IsClosed*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OleDbDataReader.IsDBNull
- uid: System.Data.OleDb.OleDbDataReader.Item*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item
  nameWithType: OleDbDataReader.Item
- uid: System.Data.OleDb.OleDbDataReader.NextResult*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: NextResult
  nameWithType: OleDbDataReader.NextResult
- uid: System.Data.OleDb.OleDbDataReader.Read*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Read
  nameWithType: OleDbDataReader.Read
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
