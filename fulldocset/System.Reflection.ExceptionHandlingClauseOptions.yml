### YamlMime:ManagedReference
items:
- uid: System.Reflection.ExceptionHandlingClauseOptions
  id: ExceptionHandlingClauseOptions
  children:
  - System.Reflection.ExceptionHandlingClauseOptions.Clause
  - System.Reflection.ExceptionHandlingClauseOptions.Fault
  - System.Reflection.ExceptionHandlingClauseOptions.Filter
  - System.Reflection.ExceptionHandlingClauseOptions.Finally
  langs:
  - csharp
  name: ExceptionHandlingClauseOptions
  nameWithType: ExceptionHandlingClauseOptions
  fullName: System.Reflection.ExceptionHandlingClauseOptions
  type: Enum
  summary: "Azonosítja a kivételkezelő záradékok típusú."
  remarks: "Vizsgálja meg a kivételkezelő záradékok metódusokban, szerezze be a <xref:System.Reflection.MethodInfo>objektum és a hívás a <xref:System.Reflection.MethodBase.GetMethodBody%2A>metódus a metódus törzse beszerzése.</xref:System.Reflection.MethodBase.GetMethodBody%2A> </xref:System.Reflection.MethodInfo> Használja a <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>tulajdonság listájának beszerzése <xref:System.Reflection.ExceptionHandlingClause>objektumok.</xref:System.Reflection.ExceptionHandlingClause> </xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>      > [!NOTE] > Kivételkezelő záradék használata a metaadatok és a Microsoft köztes nyelv (MSIL) utasítás formátumok alapos ismerete szükséges. A közös nyelvi infrastruktúra (CLI) dokumentáció, különösen akkor &quot;Partíció II: metaadatok Definition és szemantikájának módosítása&quot; és &quot;Partíció III: CIL utasítás beállítása&quot; találhat információt. A dokumentáció áll rendelkezésre online; Lásd: [ECMA C# és a közös nyelvi infrastruktúra szabványok](http://go.microsoft.com/fwlink/?LinkID=99212) az MSDN-en és [szabványos ECMA-335 - közös nyelvi infrastruktúra (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) Ecma nemzetközi webhelyén."
  example:
  - "The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses. The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=fullName> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method. The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.  \n  \n> [!NOTE]\n>  Not all computer languages can generate Filter clauses. The Visual Basic example shows a filter clause, using a Visual Basic `When` expression, which is omitted from the examples for other languages.  \n  \n This code is part of a larger example provided for the <xref:System.Reflection.MethodBody> class.  \n  \n [!code-cpp[MethodBody#2](~/add/codesnippet/cpp/t-system.reflection.exce_1_1.cpp)]\n [!code-vb[MethodBody#2](~/add/codesnippet/visualbasic/t-system.reflection.exce_1_1.vb)]\n [!code-cs[MethodBody#2](~/add/codesnippet/csharp/t-system.reflection.exce_1_1.cs)]  \n[!code-cpp[MethodBody#4](~/add/codesnippet/cpp/t-system.reflection.exce_1_2.cpp)]\n[!code-vb[MethodBody#4](~/add/codesnippet/visualbasic/t-system.reflection.exce_1_2.vb)]\n[!code-cs[MethodBody#4](~/add/codesnippet/csharp/t-system.reflection.exce_1_2.cs)]  \n[!code-cpp[MethodBody#5](~/add/codesnippet/cpp/t-system.reflection.exce_1_3.cpp)]\n[!code-vb[MethodBody#5](~/add/codesnippet/visualbasic/t-system.reflection.exce_1_3.vb)]\n[!code-cs[MethodBody#5](~/add/codesnippet/csharp/t-system.reflection.exce_1_3.cs)]  \n[!code-cpp[MethodBody#7](~/add/codesnippet/cpp/t-system.reflection.exce_1_4.cpp)]\n[!code-vb[MethodBody#7](~/add/codesnippet/visualbasic/t-system.reflection.exce_1_4.vb)]\n[!code-cs[MethodBody#7](~/add/codesnippet/csharp/t-system.reflection.exce_1_4.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ExceptionHandlingClauseOptions
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Reflection.ExceptionHandlingClauseOptions.Clause
  id: Clause
  parent: System.Reflection.ExceptionHandlingClauseOptions
  langs:
  - csharp
  name: Clause
  nameWithType: ExceptionHandlingClauseOptions.Clause
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Clause
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "A záradék minden kivételt, amelyek a megadott típusú fogad el."
  syntax:
    content: Clause
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.ExceptionHandlingClauseOptions.Fault
  id: Fault
  parent: System.Reflection.ExceptionHandlingClauseOptions
  langs:
  - csharp
  name: Fault
  nameWithType: ExceptionHandlingClauseOptions.Fault
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Fault
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "A záradék kivétel esetén, de nem a normál folyamatábrán megvalósításának kerül sor."
  syntax:
    content: Fault
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.ExceptionHandlingClauseOptions.Filter
  id: Filter
  parent: System.Reflection.ExceptionHandlingClauseOptions
  langs:
  - csharp
  name: Filter
  nameWithType: ExceptionHandlingClauseOptions.Filter
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Filter
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "A záradékot tartalmaz, amelyek meghatározzák a felhasználó által megadott utasításokat (Ez azt jelenti, hogy normál végrehajtási kell folytatása) figyelmen kívül hagyja a a kivételt, hogy a kapcsolódó kezelő kell kezelnie, vagy a következő záradék átadásra."
  syntax:
    content: Filter
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.ExceptionHandlingClauseOptions.Finally
  id: Finally
  parent: System.Reflection.ExceptionHandlingClauseOptions
  langs:
  - csharp
  name: Finally
  nameWithType: ExceptionHandlingClauseOptions.Finally
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Finally
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "A záradék kerül sor, amikor a try blokk kilép, normál folyamatábrán keresztül, vagy nem kezelt kivétel miatt."
  syntax:
    content: Finally
    return:
      type: System.Reflection.ExceptionHandlingClauseOptions
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Reflection.ExceptionHandlingClauseOptions.Clause
  parent: System.Reflection.ExceptionHandlingClauseOptions
  isExternal: false
  name: Clause
  nameWithType: ExceptionHandlingClauseOptions.Clause
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Clause
- uid: System.Reflection.ExceptionHandlingClauseOptions
  parent: System.Reflection
  isExternal: false
  name: ExceptionHandlingClauseOptions
  nameWithType: ExceptionHandlingClauseOptions
  fullName: System.Reflection.ExceptionHandlingClauseOptions
- uid: System.Reflection.ExceptionHandlingClauseOptions.Fault
  parent: System.Reflection.ExceptionHandlingClauseOptions
  isExternal: false
  name: Fault
  nameWithType: ExceptionHandlingClauseOptions.Fault
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Fault
- uid: System.Reflection.ExceptionHandlingClauseOptions.Filter
  parent: System.Reflection.ExceptionHandlingClauseOptions
  isExternal: false
  name: Filter
  nameWithType: ExceptionHandlingClauseOptions.Filter
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Filter
- uid: System.Reflection.ExceptionHandlingClauseOptions.Finally
  parent: System.Reflection.ExceptionHandlingClauseOptions
  isExternal: false
  name: Finally
  nameWithType: ExceptionHandlingClauseOptions.Finally
  fullName: System.Reflection.ExceptionHandlingClauseOptions.Finally
