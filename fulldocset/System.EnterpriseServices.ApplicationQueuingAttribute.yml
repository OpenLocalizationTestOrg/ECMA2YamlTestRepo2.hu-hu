### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ApplicationQueuingAttribute
  id: ApplicationQueuingAttribute
  children:
  - System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  - System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  - System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  - System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  langs:
  - csharp
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute
  type: Class
  summary: "Lehetővé teszi a megjelölt szerelvény az Üzenetsor-kezelés támogatását, és lehetővé teszi az alkalmazások metódushívások olvasni a Message Queuing várólisták. Ez az osztály nem örökölhető."
  remarks: "A kezdeti tulajdonságértékek ApplicationQueuingAttribute példányt listájáért lásd: a <xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A>konstruktor.</xref:System.EnterpriseServices.ApplicationQueuingAttribute.%23ctor%2A>       Attribútumok használatával kapcsolatos további információkért lásd: [attribútumok](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the ApplicationQueuingAttribute type.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/csharp/t-system.enterpriseservi_4_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#0](~/add/codesnippet/visualbasic/t-system.enterpriseservi_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ApplicationQueuingAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.EnterpriseServices.ApplicationQueuingAttribute&quot;> </xref> osztály, a szerelvény az üzenetsor-kezelési támogatás engedélyezésével és inicializálása <> </> *>, <> </> *>, és <xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>.</xref:System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*>"
  remarks: "Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.</xref:System.EnterpriseServices.ApplicationQueuingAttribute> példánya      | Tulajdonság |} Érték |}   |--------------|-----------|   | `Enabled`|`true`|   | `QueueListenerEnabled`|`false`|   | `MaxListenerThreads`|zero (0)|"
  example:
  - "The following code example creates a new <xref:System.EnterpriseServices.ApplicationQueuingAttribute>.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/csharp/m-system.enterpriseservi_25_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#1](~/add/codesnippet/visualbasic/m-system.enterpriseservi_25_1.vb)]"
  syntax:
    content: public ApplicationQueuingAttribute ();
    parameters: []
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  id: Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy az Üzenetsor-kezelés támogatása engedélyezve van-e."
  remarks: "Alkalmazások nem képesek alapértelmezés szerint aszinkron összetevőket használnak. Példányának <xref:System.EnterpriseServices.ApplicationQueuingAttribute>lehetővé teszi, hogy az alkalmazás várólistára összetevőket; azonban nem engedélyezi az alkalmazás a várólistára helyezett üzenetek ügyfelek figyelésére.</xref:System.EnterpriseServices.ApplicationQueuingAttribute>"
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's Enabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/csharp/p-system.enterpriseservi_8_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#2](~/add/codesnippet/visualbasic/p-system.enterpriseservi_8_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az Üzenetsor-kezelés támogatása engedélyezve van; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték a konstruktor által beállított <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  id: MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Lekérdezi vagy beállítja az üzenetek kibontása a várólistából, és a megfelelő összetevő aktiválható használt szálak számát."
  remarks: "Ez a tulajdonság érvényes tartománya 0 és 1000. Az alapértelmezett érték nulla. Az újonnan létrehozott alkalmazást, a beállítás meghatározásához a figyelő szálak száma alapértelmezett jelenleg használt algoritmust származik: 16 alkalommal a processzorok száma a kiszolgálón.       További információkért lásd: `QcListenerMaxThreads` a [alkalmazások (COM +)](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/c0c46592-5282-412d-8f54-67637be8218a.asp)."
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's MaxListenerThreads property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/csharp/p-system.enterpriseservi_2_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#4](~/add/codesnippet/visualbasic/p-system.enterpriseservi_2_1.vb)]"
  syntax:
    content: public int MaxListenerThreads { get; set; }
    return:
      type: System.Int32
      description: "A várólistába érkező üzenetek feldolgozásához használható szálak maximális száma. Az alapértelmezett érték nulla."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  id: QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  langs:
  - csharp
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy az alkalmazás fogad aszinkron összetevő hívások az ügyfelektől."
  remarks: ''
  example:
  - "The following code example gets and sets the value of an `ApplicationQueuing` attribute's QueueListenerEnabled property.  \n  \n [!code-cs[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/csharp/p-system.enterpriseservi_0_1.cs)]\n [!code-vb[EnterpriseServicesApplicationQueuingAttribute#3](~/add/codesnippet/visualbasic/p-system.enterpriseservi_0_1.vb)]"
  syntax:
    content: public bool QueueListenerEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az alkalmazás fogad aszinkron összetevő hívások; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute()
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute()
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.ApplicationQueuingAttribute()
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
  fullName: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.#ctor*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: ApplicationQueuingAttribute
  nameWithType: ApplicationQueuingAttribute.ApplicationQueuingAttribute
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.Enabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: Enabled
  nameWithType: ApplicationQueuingAttribute.Enabled
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: MaxListenerThreads
  nameWithType: ApplicationQueuingAttribute.MaxListenerThreads
- uid: System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled*
  parent: System.EnterpriseServices.ApplicationQueuingAttribute
  isExternal: false
  name: QueueListenerEnabled
  nameWithType: ApplicationQueuingAttribute.QueueListenerEnabled
