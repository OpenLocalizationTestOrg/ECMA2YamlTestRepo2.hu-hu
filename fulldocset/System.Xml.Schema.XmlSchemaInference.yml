### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaInference
  id: XmlSchemaInference
  children:
  - System.Xml.Schema.XmlSchemaInference.#ctor
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  - System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  - System.Xml.Schema.XmlSchemaInference.Occurrence
  - System.Xml.Schema.XmlSchemaInference.TypeInference
  langs:
  - csharp
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference
  fullName: System.Xml.Schema.XmlSchemaInference
  type: Class
  summary: "Kikövetkezteti egy XML-séma Definition Language (XSD) séma XML-dokumentumból. A XmlSchemaInference osztály nem örökölhető."
  remarks: "> [!IMPORTANT]>-Sémák ismeretlen vagy nem megbízható forrásból vagy a helyek nem használja. Ezzel veszélyezteti a biztonsági kódot.   >-(Beleértve a beágyazott sémák) XML-sémák rendszer eredendően ki van téve a szolgáltatásmegtagadási támadások; feltételeket nem fogadja el a nem megbízható forgatókönyvek.   >-Séma érvényesítése a hibaüzenetek és kivételek tehetik közzé bizalmas információkat a tartalommodell vagy a fájl megadott elérési utakon URI. Ügyeljen arra, hogy ezt az információt nem megbízható hívókat.       A XmlSchemaInference osztály a <xref:System.Xml.Schema?displayProperty=fullName>névtér teszi lehetővé az XML-séma Definition Language (XSD) séma az XML-dokumentum szerkezete a célszámítógéppel.</xref:System.Xml.Schema?displayProperty=fullName> A XmlSchemaInference osztály kiírja, hogy ellenőrizhesse az XML-dokumentum XML-séma.       A XmlSchemaInference osztály támogatja a W3C XML- és XML-sémák. Használat sémát megállapítani új vagy meglévő séma szűkítéséhez."
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_24_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_24_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_24_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/t-system.xml.schema.xmls_24_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaInference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xml.Schema.XmlSchemaInference&quot;> </xref> osztály."
  syntax:
    content: public XmlSchemaInference ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaInference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  id: InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Az XML-séma Definition Language (XSD) séma található XML-dokumentumból kikövetkezteti a <xref:System.Xml.XmlReader>megadott objektumot.</xref:System.Xml.XmlReader>"
  remarks: "A InferSchema módszer arra következtet, egyet, vagy az az XML-sémák W3C XML-séma Definition Language (XSD) példány tartalmazott dokumentum a <xref:System.Xml.XmlReader>megadott objektumot.</xref:System.Xml.XmlReader> Ha az XML-dokumentum elemek és attribútumok a több névteret tartalmaz, akkor több sémák jönnek létre: egy minden a dokumentumban használt névtér esetében. Az elsődleges séma a séma, amely a teljes XML-dokumentum azt is ellenőrzi, és annak célnévteret megegyezik a dokumentum elem az XML-dokumentum.       Az alábbiakban a InferSchema módszer használata esetén figyelembe veendő fontos megjegyzések.      -A InferSchema mód figyelmen kívül hagyása `xsi:type`, `xsi:schemaLocation`, vagy `xsi:noNamespaceSchemaLocation` attribútumok az XML-dokumentumban.      -Ha a <xref:System.Xml.XmlReader>objektum van megadva, a rendszer figyelmen kívül hagyja a típusinformációt tartalmaz.</xref:System.Xml.XmlReader>      -Ha a <xref:System.Xml.XmlReader>objektum egy elem, amely nincs a gyökérelemnek az XML-dokumentum található, a séma csak az adott elemhez táblanévhez.</xref:System.Xml.XmlReader> Ha a <xref:System.Xml.XmlReader>elemen, található objektum a <xref:System.Xml.XmlReader.Read%2A>metódus hívása a <xref:System.Xml.XmlReader>paraméter csak egy elemet a rendszer észlelt (például, ha <xref:System.Xml.XmlReader.NodeType%2A>van <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> Ezen a ponton a megállapítás folyamat elindul az adott elemhez. Ha az elem nem a dokumentum végéig a rendszer észlelt egy <xref:System.ArgumentException>vált ki.</xref:System.ArgumentException>"
  example:
  - "This example takes an XML file as input, and generates a schema that can validate the example XML.  \n  \n [!code-cs[XmlSchemaInferenceExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_6_1.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#1](~/add/codesnippet/cpp/m-system.xml.schema.xmls_6_1.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_6_1.vb)]  \n  \n The following is the input XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#5](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_2.xml)]  \n  \n The following is the schema inferred from the XML document.  \n  \n [!code-xml[XmlSchemaInferenceExamples#6](~/add/codesnippet/xml/m-system.xml.schema.xmls_6_3.xsd)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Egy <xref:System.Xml.XmlReader>objektumot tartalmazó XML-dokumentum, amelyből megállapítható a séma.</xref:System.Xml.XmlReader>"
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "Egy <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> a következtetett sémák tartalmazó objektum."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Az XML-dokumentum formátuma nem megfelelő."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "A <xref:System.Xml.XmlReader>található objektum vagy egy elem a gyökércsomópont.</xref:System.Xml.XmlReader> A séma megállapítás során hiba lép fel."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  id: InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Az XML-séma Definition Language (XSD) séma található XML-dokumentumból kikövetkezteti a <xref:System.Xml.XmlReader>objektum megadva, és a meglévő séma használata a következtetett séma rendszerint a <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> cél névtere a megadott objektum.</xref:System.Xml.XmlReader>"
  remarks: "A InferSchema módszer arra következtet, egyet, vagy az az XML-sémák W3C XML-séma Definition Language (XSD) példány tartalmazott dokumentum a <xref:System.Xml.XmlReader>megadott objektumot.</xref:System.Xml.XmlReader> Ha az XML-dokumentum elemek és attribútumok a több névteret tartalmaz, több sémák jönnek létre: egy minden a dokumentumban használt névtér esetében. Az elsődleges séma a séma, amely a teljes XML-dokumentum azt is ellenőrzi, és annak célnévteret megegyezik a dokumentum elem az XML-dokumentum.       Az alábbiakban a InferSchema módszer használata esetén figyelembe veendő fontos megjegyzések.      -A InferSchema mód figyelmen kívül hagyása `xsi:type`, `xsi:schemaLocation`, vagy `xsi:noNamespaceSchemaLocation` attribútumok az XML-dokumentumban.      -Ha a <xref:System.Xml.XmlReader>objektum van megadva, a rendszer figyelmen kívül hagyja a típusinformációt tartalmaz.</xref:System.Xml.XmlReader>      -Ha a <xref:System.Xml.XmlReader>objektum egy elem, amely nincs a gyökérelemnek az XML-dokumentum található, a séma csak az adott elemhez táblanévhez.</xref:System.Xml.XmlReader> Ha a <xref:System.Xml.XmlReader>elemen, található objektum a <xref:System.Xml.XmlReader.Read%2A>metódus hívása a <xref:System.Xml.XmlReader>paraméter csak egy elemet a rendszer észlelt (például, ha <xref:System.Xml.XmlReader.NodeType%2A>van <xref:System.Xml.XmlNodeType>).</xref:System.Xml.XmlNodeType> </xref:System.Xml.XmlReader.NodeType%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> </xref:System.Xml.XmlReader> Ezen a ponton a megállapítás folyamat elindul az adott elemhez. Ha az elem nem a dokumentum végéig a rendszer észlelt egy <xref:System.ArgumentException>vált ki.</xref:System.ArgumentException>      Ha egy <xref:System.Xml.Schema.XmlSchemaSet>objektum átadása paraméterként és az elem, amelyre a <xref:System.Xml.XmlReader>objektum található sémákra van definiálva a <xref:System.Xml.Schema.XmlSchemaSet>, a következtetett séma használatával finomíthatja a meglévő séma a <xref:System.Xml.Schema.XmlSchemaSet>paraméter cél névtere; ellenkező esetben a névtérhez új sémát táblanévhez.</xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.XmlReader> </xref:System.Xml.Schema.XmlSchemaSet>"
  example:
  - "The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1. The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.  \n  \n The following is XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#13](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_1.xml)]  \n  \n The following is XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#14](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_2.xml)]  \n  \n The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`. The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded InferSchema method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.  \n  \n [!code-cs[XmlSchemaInferenceExamples#4](~/add/codesnippet/csharp/0c36415c-5ade-4e0e-8494-_3.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#4](~/add/codesnippet/cpp/0c36415c-5ade-4e0e-8494-_3.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#4](~/add/codesnippet/visualbasic/0c36415c-5ade-4e0e-8494-_3.vb)]  \n  \n The following schema is the schema inferred from XML document 1.  \n  \n [!code-xml[XmlSchemaInferenceExamples#15](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_4.xml)]  \n  \n The following schema is the refined version of the schema above, based on XML document 2.  \n  \n [!code-xml[XmlSchemaInferenceExamples#16](~/add/codesnippet/xml/0c36415c-5ade-4e0e-8494-_5.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: instanceDocument
      type: System.Xml.XmlReader
      description: "Egy <xref:System.Xml.XmlReader>objektumot tartalmazó XML-dokumentum, amelyből megállapítható a séma.</xref:System.Xml.XmlReader>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Egy <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objektumra, amely a kikövetkeztetett séma szűkítéséhez használt meglévő séma."
    return:
      type: System.Xml.Schema.XmlSchemaSet
      description: "Egy <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> a következtetett sémák tartalmazó objektum."
  overload: System.Xml.Schema.XmlSchemaInference.InferSchema*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Az XML-dokumentum formátuma nem megfelelő."
  - type: System.Xml.Schema.XmlSchemaInferenceException
    commentId: T:System.Xml.Schema.XmlSchemaInferenceException
    description: "A <xref:System.Xml.XmlReader>található objektum vagy egy elem a gyökércsomópont.</xref:System.Xml.XmlReader> A séma megállapítás során hiba lép fel."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  id: Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Lekérdezi vagy beállítja a <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>érték, amely hatással van az XML-dokumentum következtetni előfordulási sémadeklarációt.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Ha a előfordulási tulajdonsága <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, az első alkalommal elemek hibát az XML-dokumentumban, a séma nyilatkozat táblanévhez `minOccurs=&quot;1&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Attribútumok hibát, ha a séma nyilatkozat táblanévhez `use=&quot;required&quot;`.       Ha a előfordulási tulajdonsága <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, séma elemdeklarációk következtetni rá, mint a `minOccurs=&quot;0&quot;`, és attribútum sémadeklarációt következtetni rá, mint a `use=&quot;optional&quot;`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       Az előfordulási tulajdonság alapértelmezett értéke <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how occurrence is affected by the Occurrence property. The example code infers occurrence from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#7](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.  \n  \n [!code-cs[XmlSchemaInferenceExamples#2](~/add/codesnippet/csharp/p-system.xml.schema.xmls_3_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#2](~/add/codesnippet/cpp/p-system.xml.schema.xmls_3_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#2](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_3_2.vb)]  \n  \n Because the Occurrence property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#8](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_3.xml)]  \n  \n In the example code above, if the Occurrence property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#9](~/add/codesnippet/xml/p-system.xml.schema.xmls_3_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Egy <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>objektum.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.Occurrence*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  id: TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  langs:
  - csharp
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Lekérdezi vagy beállítja a <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>érték, amely hatással van az XML-dokumentum következtetni típusok.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  remarks: "Ha a TypeInference tulajdonsága <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, a következtetett a elemek és attribútumok az XML-dokumentumban egyszerű tartalmi típus mindig `xs:string`.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> Ha a TypeInference tulajdonsága <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, pontosabban meghatározott típusú, mint a rendszer következtetni `xs:date`, `xs:decimal`, `xs:unsignedByte`, és így tovább.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>       A TypeInference tulajdonság alapértelmezett értéke <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  example:
  - "This example illustrates how type inference is affected by the TypeInference property. The example code infers types from an XML file in two different ways: relaxed and restricted. The following is the example XML file.  \n  \n [!code-xml[XmlSchemaInferenceExamples#10](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_1.xml)]  \n  \n The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.  \n  \n [!code-cs[XmlSchemaInferenceExamples#3](~/add/codesnippet/csharp/p-system.xml.schema.xmls_0_2.cs)]\n [!code-cpp[XmlSchemaInferenceExamples#3](~/add/codesnippet/cpp/p-system.xml.schema.xmls_0_2.cpp)]\n [!code-vb[XmlSchemaInferenceExamples#3](~/add/codesnippet/visualbasic/p-system.xml.schema.xmls_0_2.vb)]  \n  \n Because the TypeInference property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the following schema was generated.  \n  \n [!code-xml[XmlSchemaInferenceExamples#11](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_3.xml)]  \n  \n In the example code above, if the TypeInference property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption> and generated the following schema.  \n  \n [!code-xml[XmlSchemaInferenceExamples#12](~/add/codesnippet/xml/p-system.xml.schema.xmls_0_4.xml)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaInference.InferenceOption
      description: "Egy <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>objektum.</xref:System.Xml.Schema.XmlSchemaInference.InferenceOption>"
  overload: System.Xml.Schema.XmlSchemaInference.TypeInference*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Schema.XmlSchemaInferenceException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInferenceException
  nameWithType: XmlSchemaInferenceException
  fullName: System.Xml.Schema.XmlSchemaInferenceException
- uid: System.Xml.Schema.XmlSchemaInference.#ctor
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference()
  nameWithType: XmlSchemaInference.XmlSchemaInference()
  fullName: System.Xml.Schema.XmlSchemaInference.XmlSchemaInference()
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema(XmlReader,XmlSchemaSet)
  nameWithType: XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
  fullName: System.Xml.Schema.XmlSchemaInference.InferSchema(XmlReader,XmlSchemaSet)
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
  fullName: System.Xml.Schema.XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.InferenceOption
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInference+InferenceOption
  nameWithType: XmlSchemaInference+InferenceOption
  fullName: System.Xml.Schema.XmlSchemaInference+InferenceOption
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
  fullName: System.Xml.Schema.XmlSchemaInference.TypeInference
- uid: System.Xml.Schema.XmlSchemaInference.#ctor*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: XmlSchemaInference
  nameWithType: XmlSchemaInference.XmlSchemaInference
- uid: System.Xml.Schema.XmlSchemaInference.InferSchema*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: InferSchema
  nameWithType: XmlSchemaInference.InferSchema
- uid: System.Xml.Schema.XmlSchemaInference.Occurrence*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: Occurrence
  nameWithType: XmlSchemaInference.Occurrence
- uid: System.Xml.Schema.XmlSchemaInference.TypeInference*
  parent: System.Xml.Schema.XmlSchemaInference
  isExternal: false
  name: TypeInference
  nameWithType: XmlSchemaInference.TypeInference
