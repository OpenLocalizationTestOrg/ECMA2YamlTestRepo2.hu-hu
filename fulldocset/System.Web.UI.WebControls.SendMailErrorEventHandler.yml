### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SendMailErrorEventHandler
  id: SendMailErrorEventHandler
  langs:
  - csharp
  name: SendMailErrorEventHandler
  nameWithType: SendMailErrorEventHandler
  fullName: System.Web.UI.WebControls.SendMailErrorEventHandler
  type: Delegate
  summary: "A mód, amely kezeli a <xref uid=&quot;langword_csharp_SendMailError&quot; name=&quot;SendMailError&quot; href=&quot;&quot;> </xref> esemény vezérlők többek között a <xref href=&quot;System.Web.UI.WebControls.ChangePassword&quot;> </xref> vezérlő, a <xref href=&quot;System.Web.UI.WebControls.CreateUserWizard&quot;> </xref> vezérlő, és a <xref href=&quot;System.Web.UI.WebControls.PasswordRecovery&quot;> </xref> vezérlő."
  remarks: "Egy SendMailErrorEventHandler delegált létrehozásakor meg kell adnia a módszert, amelyet az esemény fogja kezelni. Az esemény eseménykezelőjét társítani, vegye fel a delegált példányának az esemény. Az eseménykezelő nevezzük az esemény akkor következik be, amikor, kivéve, ha az esemény a delegált távolít el. Eseménykezelő delegáltak kapcsolatos további információkért lásd: [Server esemény kezelése az ASP.NET-weblapok űrlapok](~/add/includes/ajax-current-ext-md.md).       Kezeli a `SendMailError` esemény lehetővé teszi, hogy a webes alkalmazás folytatja, akkor is, ha kivétel történik egy e-mail üzenet küldésekor. Ez például akkor hasznos, ha kivétel történik, amikor egy felhasználó egy többlépéses varázsló lépéseinek működik. Célszerű jelentkezik a hiba, egy tájékoztató üzenet megjelenítése a felhasználónak, és engedélyezi a felhasználó számára az alkalmazás befejezéséhez helyett fejezze be a varázslót.       Ha nem hoz létre az eseménykezelő a <xref:System.Web.UI.WebControls.ChangePassword.SendMailError>esemény, vagy ha hoz létre, de hagyja eseménykezelő a <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>tulajdonsága `false`, a webes alkalmazás hiba esetén egy e-mail üzenet küldésekor le fog állni, és az ASP.NET egy hibaüzenetet jeleníti meg.</xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> </xref:System.Web.UI.WebControls.ChangePassword.SendMailError>       A <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A>módszert is lehetővé teszi a származtatott osztályok helyett a SendMailErrorEventHandler eseményének.</xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> Ez az ajánlott módszere az esemény <xref:System.Web.UI.WebControls.ChangePassword>vagy <xref:System.Web.UI.WebControls.CreateUserWizard>.</xref:System.Web.UI.WebControls.CreateUserWizard> </xref:System.Web.UI.WebControls.ChangePassword> származtatott osztályban található kezelése       Események kezelésére vonatkozó további információkért lásd: [Server esemény kezelése az ASP.NET-weblapok űrlapok](../Topic/Server%20Event%20Handling%20in%20ASP.NET%20Web%20Forms%20Pages.md)."
  example:
  - "The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> event named `SendMailError`. The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you. For more information, see [How to: Implement Simple Forms Authentication](~/add/includes/ajax-current-ext-md.md).  \n  \n If the password change succeeds, the code attempts to use SMTP to send an e-mail message to the user to confirm the change. This is done in the `SendingMail` event handler. For information about how to configure an SMTP server, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/en-us/ed204b58-24af-47d0-9687-60e5df5f17f8). For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an e-mail message.  \n  \n If a mail server is not configured correctly or some other error occurs and the e-mail message cannot be sent, the `SendMailError` function is called. A message is displayed to the user. In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists. See the code example below to create the specified event source. For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](../Topic/Server%20Event%20Handling%20in%20ASP.NET%20Web%20Forms%20Pages.md). The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.  \n  \n [!code-cs[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_389_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_389_1.aspx)]  \n  \n Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log. This event source must exist in order for the first code example to work correctly. The following code example requires Administrator privileges.  \n  \n [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_389_2.vb)]\n [!code-cs[System.Diagnostics.EventLog.CreateEventSource#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_389_2.cs)]"
  syntax:
    content: public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
