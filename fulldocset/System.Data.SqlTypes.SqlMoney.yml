### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlMoney
  id: SqlMoney
  children:
  - System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)
  - System.Data.SqlTypes.SqlMoney.#ctor(System.Double)
  - System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)
  - System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)
  - System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.Equals(System.Object)
  - System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.GetHashCode
  - System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.IsNull
  - System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.MaxValue
  - System.Data.SqlTypes.SqlMoney.MinValue
  - System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.Null
  - System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Decimal)
  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double to System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)
  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)
  - System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)
  - System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.Parse(System.String)
  - System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlMoney.ToDecimal
  - System.Data.SqlTypes.SqlMoney.ToDouble
  - System.Data.SqlTypes.SqlMoney.ToInt32
  - System.Data.SqlTypes.SqlMoney.ToInt64
  - System.Data.SqlTypes.SqlMoney.ToSqlBoolean
  - System.Data.SqlTypes.SqlMoney.ToSqlByte
  - System.Data.SqlTypes.SqlMoney.ToSqlDecimal
  - System.Data.SqlTypes.SqlMoney.ToSqlDouble
  - System.Data.SqlTypes.SqlMoney.ToSqlInt16
  - System.Data.SqlTypes.SqlMoney.ToSqlInt32
  - System.Data.SqlTypes.SqlMoney.ToSqlInt64
  - System.Data.SqlTypes.SqlMoney.ToSqlSingle
  - System.Data.SqlTypes.SqlMoney.ToSqlString
  - System.Data.SqlTypes.SqlMoney.ToString
  - System.Data.SqlTypes.SqlMoney.Value
  - System.Data.SqlTypes.SqlMoney.Zero
  langs:
  - csharp
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
  type: Struct
  summary: "Pénznem érték a -2 jelöli <sup>63</sup> (vagy-922,337,203,685,477.5808) 2 <sup>63</sup> -1 (vagy +922,337,203,685,477.5807) a pénznem egység tárolt vagy egy adatbázisból lekért tíz ezredmásodpercen pontossággal."
  remarks: "A tényleges érték SqlMoney objektum <xref:System.Data.SqlTypes.SqlMoney.Value%2A>.</xref:System.Data.SqlTypes.SqlMoney.Value%2A> van tárolva."
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlMoney : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: SqlMoney(Decimal)
  nameWithType: SqlMoney.SqlMoney(Decimal)
  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Decimal)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> és a megadott osztály <xref:System.Decimal>érték.</xref:System.Decimal>"
  syntax:
    content: public SqlMoney (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "A pénzügyi érték inicializálása."
  overload: System.Data.SqlTypes.SqlMoney.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: SqlMoney(Double)
  nameWithType: SqlMoney.SqlMoney(Double)
  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Double)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> megadott dupla típusú érték a osztályt."
  syntax:
    content: public SqlMoney (double value);
    parameters:
    - id: value
      type: System.Double
      description: "A pénzügyi érték inicializálása."
  overload: System.Data.SqlTypes.SqlMoney.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: SqlMoney(Int32)
  nameWithType: SqlMoney.SqlMoney(Int32)
  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> osztály a megadott egész értékű."
  syntax:
    content: public SqlMoney (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "A pénzügyi érték inicializálása."
  overload: System.Data.SqlTypes.SqlMoney.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: SqlMoney(Int64)
  nameWithType: SqlMoney.SqlMoney(Int64)
  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Int64)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> osztály a megadott hosszú egész értékű."
  syntax:
    content: public SqlMoney (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "A pénzügyi érték inicializálása."
  overload: System.Data.SqlTypes.SqlMoney.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Add(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Add(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Add(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két kiszámítja <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paraméterek."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney Add (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> stucture amelynek <xref:System.Data.SqlTypes.SqlMoney.Value*>összegzi a két <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paraméterek.</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)
  id: CompareTo(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: CompareTo(SqlMoney)
  nameWithType: SqlMoney.CompareTo(SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.CompareTo(SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Összehasonlítja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> példány a megadott <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> és utalhat, hogy a relatív értéket adja vissza."
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlMoney value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> össze kell hasonlítania."
    return:
      type: System.Int32
      description: "Egy aláírt szám, amely azt jelzi, a példány és az objektum relatív értékeit.       <table><thead><tr><th> Visszatérési érték       </th><th> Állapot       </th></tr></thead><tbody><tr><td> Nullánál kisebb       </td><td> Ez a példány kisebb, mint az objektum.       </td></tr><tr><td> Nulla       </td><td> Ez a példány ugyanaz, mint az objektum.       </td></tr><tr><td> Nullánál nem kisebb       </td><td> Ez a példány nagyobb, mint az objektum - vagy - objektum egy null hivatkozás (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Visual Basic nyelvben)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlMoney.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlMoney.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlMoney.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Összehasonlítja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> példány a megadott <xref:System.Object>és utalhat, hogy a relatív értéket adja vissza.</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>össze kell hasonlítania.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Egy aláírt szám, amely azt jelzi, a példány és az objektum relatív értékeit.       <table><thead><tr><th> Visszatérési érték       </th><th> Állapot       </th></tr></thead><tbody><tr><td> Nullánál kisebb       </td><td> Ez a példány kisebb, mint az objektum.       </td></tr><tr><td> Nulla       </td><td> Ez a példány ugyanaz, mint az objektum.       </td></tr><tr><td> Nullánál nem kisebb       </td><td> Ez a példány nagyobb, mint az objektum - vagy - objektum egy null hivatkozás (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Visual Basic nyelvben)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlMoney.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Divide(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Divide(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Divide(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Az osztás operátor osztja az első <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> a második paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney Divide (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra, amelynek <xref:System.Data.SqlTypes.SqlMoney.Value*>osztás eredményeit.</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlMoney.Equals(Object)
  fullName: System.Data.SqlTypes.SqlMoney.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A megadott objektum paraméter összehasonlítja a <xref:System.Data.SqlTypes.SqlMoney.Value*>tulajdonsága a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> objektum.</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Az objektum össze kell hasonlítania."
    return:
      type: System.Boolean
      description: "Visszaadható egyenlő <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Ha az objektum egy példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> és annál, ha a két <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Equals(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Equals(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Equals(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paramétereit, és határozza meg, hogy azok egyenlő."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a két érték egyenlő. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Ha bármelyik példány értéke null, akkor a <xref uid=&quot;langword_csharp_SqlMoney&quot; name=&quot;SqlMoney&quot; href=&quot;&quot;> </xref> értéke null."
  overload: System.Data.SqlTypes.SqlMoney.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlMoney.GetHashCode()
  fullName: System.Data.SqlTypes.SqlMoney.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lekérdezi a kivonatkód erre a példányra."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy 32 bites előjeles egész számokat kivonatoló kódot."
  overload: System.Data.SqlTypes.SqlMoney.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlMoney.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlMoney.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Az XML-séma adatdefiníciós nyelv (XSD) függvény a megadott <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "An <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> azt jelzi, hogy a megadott XSD <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: GreaterThan(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.GreaterThan(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.GreaterThan(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> annak megállapításához, hogy az első nagyobb, mint a második paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> az első példánynál nagyobb, mint a második példány esetén is. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.GreaterThanOrEqual(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> annak megállapításához, hogy az első nagyobb vagy egyenlő a második paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> az első példánynál nagyobb vagy egyenlő a második példány esetén. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlMoney.IsNull
  fullName: System.Data.SqlTypes.SqlMoney.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Visszaad egy logikai értéket, amely jelzi, hogy ez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra értéke null."
  remarks: "További információkért lásd: [Null értékek kezelése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha null. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: LessThan(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.LessThan(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.LessThan(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paramétereit, és ellenőrizze, hogy az első kisebb, mint a második."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Ha az első példánynál kisebb, mint a második példány. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: LessThanOrEqual(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.LessThanOrEqual(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.LessThanOrEqual(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> annak megállapításához, hogy az első kisebb vagy egyenlő, mint a második paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> kisebb vagy egyenlő, mint a második példány az első példánynál esetén. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: MaxValue
  nameWithType: SqlMoney.MaxValue
  fullName: System.Data.SqlTypes.SqlMoney.MaxValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Jelenti. a maximális érték, amely hozzárendelhető a <xref:System.Data.SqlTypes.SqlMoney.Value*>tulajdonság egy példányának a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> osztály</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  remarks: "Az e állandó értéke 922,337,203,685,477.5807"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlMoney MaxValue;
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: MinValue
  nameWithType: SqlMoney.MinValue
  fullName: System.Data.SqlTypes.SqlMoney.MinValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A minimális érték, amely hozzárendelhető jelöli <xref:System.Data.SqlTypes.SqlMoney.Value*>tulajdonság egy példányának a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> osztály</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  remarks: "Az e állandó értéke-922,337,203,685,477.5808"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlMoney MinValue;
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Multiply(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Multiply(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Multiply(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A multiplicaion operátor kiszámítja a két termék <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paraméterek."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney Multiply (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra, amelynek <xref:System.Data.SqlTypes.SqlMoney.Value*>tartalmazza a termék a szorzás.</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: NotEquals(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.NotEquals(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.NotEquals(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paramétereit, és határozza meg, hogy azok nem egyenlő."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Ha a két példányt nem egyenlő vagy <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> annál a két példányok esetén. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlMoney.Null
  fullName: System.Data.SqlTypes.SqlMoney.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Jelöli egy <xref href=&quot;System.DBNull&quot;> </xref> , amely hozzárendelhető ezen példánya számára a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> osztály."
  remarks: "Az <xref:System.Data.SqlTypes.SqlMoney>osztály</xref:System.Data.SqlTypes.SqlMoney> egy konstansként NULL funkciók További információkért lásd: [Null értékek kezelése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlMoney Null;
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Addition(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Addition(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Addition(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két kiszámítja <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paraméterek."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Addition (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> stucture amelynek <xref:System.Data.SqlTypes.SqlMoney.Value*>összegzi a két <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paraméterek.</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Division(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Division(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Division(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Az osztás operátor osztja az első <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> a második paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Division (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra, amelynek <xref:System.Data.SqlTypes.SqlMoney.Value*>osztás eredményeit.</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Equality(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Equality(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Equality(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paramétereit, és határozza meg, hogy azok egyenlő."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Ha a két példányt egyenlő vagy <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> esetén, ha a két példányt nem egyeznek. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlMoney)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlMoney.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlMoney)
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlMoney.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlMoney)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlMoney.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Decimal)
  id: op_Explicit(System.Data.SqlTypes.SqlMoney to System.Decimal)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Explicit(SqlMoney)
  nameWithType: SqlMoney.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static decimal op_Explicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Decimal
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlMoney)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlMoney.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlMoney)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlMoney.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double to System.Data.SqlTypes.SqlMoney)
  id: op_Explicit(System.Double to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Explicit(Double)
  nameWithType: SqlMoney.op_Explicit(Double)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(Double)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Explicit (double x);
    parameters:
    - id: x
      type: System.Double
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_GreaterThan(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_GreaterThan(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_GreaterThan(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> annak megállapításához, hogy az első nagyobb, mint a második paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> az első példánynál nagyobb, mint a második példány esetén is. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_GreaterThanOrEqual(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> annak megállapításához, hogy az első nagyobb vagy egyenlő a második paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> az első példánynál nagyobb vagy egyenlő a második példány esetén. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)
  id: op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Implicit(SqlByte)
  nameWithType: SqlMoney.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)
  id: op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Implicit(SqlInt16)
  nameWithType: SqlMoney.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)
  id: op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Implicit(SqlInt32)
  nameWithType: SqlMoney.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)
  id: op_Implicit(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Implicit(SqlInt64)
  nameWithType: SqlMoney.op_Implicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)
  id: op_Implicit(System.Decimal)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Implicit(Decimal)
  nameWithType: SqlMoney.op_Implicit(Decimal)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(Decimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (decimal x);
    parameters:
    - id: x
      type: System.Decimal
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)
  id: op_Implicit(System.Int64)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Implicit(Int64)
  nameWithType: SqlMoney.op_Implicit(Int64)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(Int64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Implicit (long x);
    parameters:
    - id: x
      type: System.Int64
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlMoney.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Inequality(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Inequality(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Inequality(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paramétereit, és határozza meg, hogy azok nem egyenlő."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Ha a két példányt nem egyenlő vagy <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> annál a két példányok esetén. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_LessThan(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_LessThan(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_LessThan(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paramétereit, és ellenőrizze, hogy az első kisebb, mint a második."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> Ha az első példánynál kisebb, mint a második példány. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_LessThanOrEqual(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> annak megállapításához, hogy az első kisebb vagy egyenlő, mint a második paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> , amely <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> kisebb vagy egyenlő, mint a második példány az első példánynál esetén. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Ha bármelyik példányát <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> értéke null, a <xref:System.Data.SqlTypes.SqlBoolean.Value*>, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> lesz <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Multiply(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Multiply(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Multiply(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A multiplicaion operátor kiszámítja a két termék <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paraméterek."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Multiply (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra, amelynek <xref:System.Data.SqlTypes.SqlMoney.Value*>tartalmazza a termék a szorzás.</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_Subtraction(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Subtraction(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Subtraction(SqlMoney,SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A kivonás operátor kivonja a második <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paramétert."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_Subtraction (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra, amely tartalmazza a kivonás eredményeit."
  overload: System.Data.SqlTypes.SqlMoney.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: op_UnaryNegation(SqlMoney)
  nameWithType: SqlMoney.op_UnaryNegation(SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_UnaryNegation(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Az unáris operátor mínusz ellentettjét adja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paraméter."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney op_UnaryNegation (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> kell negated szerkezetének."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra, amelynek <xref:System.Data.SqlTypes.SqlMoney.Value*>a negálás eredményeit.</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  overload: System.Data.SqlTypes.SqlMoney.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlMoney.Parse(String)
  fullName: System.Data.SqlTypes.SqlMoney.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref:System.String>egy számértéket képviselő alakot a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> egyenértékű.</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> értelmezni."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> megfelel a megadott <xref:System.String>.</xref:System.String> lévő értéknek"
  overload: System.Data.SqlTypes.SqlMoney.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  id: Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Subtract(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Subtract(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Subtract(SqlMoney,SqlMoney)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A kivonás operátor kivonja a második <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> paramétert."
  syntax:
    content: public static System.Data.SqlTypes.SqlMoney Subtract (System.Data.SqlTypes.SqlMoney x, System.Data.SqlTypes.SqlMoney y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    - id: y
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra, amely tartalmazza a kivonás eredményeit."
  overload: System.Data.SqlTypes.SqlMoney.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ez a tag támogatja a .NET-keretrendszer infrastruktúráját, és nem javasolt közvetlenül a kódból használni."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ez a tag támogatja a .NET-keretrendszer infrastruktúráját, és nem javasolt közvetlenül a kódból használni."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader" name="XmlReader" href=""></xref>
  overload: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ez a tag támogatja a .NET-keretrendszer infrastruktúráját, és nem javasolt közvetlenül a kódból használni."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""></xref>
  overload: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToDecimal
  id: ToDecimal
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToDecimal()
  nameWithType: SqlMoney.ToDecimal()
  fullName: System.Data.SqlTypes.SqlMoney.ToDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja az értéket e példányának <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> , egy <xref:System.Decimal>struktúra.</xref:System.Decimal>"
  syntax:
    content: public decimal ToDecimal ();
    parameters: []
    return:
      type: System.Decimal
      description: "A <xref:System.Decimal>struktúrában, amelynek értéke a <xref:System.Data.SqlTypes.SqlMoney.Value*>e tulajdonság <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra.</xref:System.Data.SqlTypes.SqlMoney.Value*> </xref:System.Decimal>"
  overload: System.Data.SqlTypes.SqlMoney.ToDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToDouble
  id: ToDouble
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToDouble()
  nameWithType: SqlMoney.ToDouble()
  fullName: System.Data.SqlTypes.SqlMoney.ToDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> <xref:System.Double>.</xref:System.Double> struktúra"
  syntax:
    content: public double ToDouble ();
    parameters: []
    return:
      type: System.Double
      description: "Egy dupla Ez egyenlő értékű <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
  overload: System.Data.SqlTypes.SqlMoney.ToDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToInt32
  id: ToInt32
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToInt32()
  nameWithType: SqlMoney.ToInt32()
  fullName: System.Data.SqlTypes.SqlMoney.ToInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> <xref:System.Int32>.</xref:System.Int32> struktúra"
  syntax:
    content: public int ToInt32 ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy 32 bites egész szám, amelynek értéke a egész részét ez <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
  overload: System.Data.SqlTypes.SqlMoney.ToInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToInt64
  id: ToInt64
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToInt64()
  nameWithType: SqlMoney.ToInt64()
  fullName: System.Data.SqlTypes.SqlMoney.ToInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja az értéket e <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> <xref:System.Int64>.</xref:System.Int64> struktúra"
  syntax:
    content: public long ToInt64 ();
    parameters: []
    return:
      type: System.Int64
      description: "Egy 64 bites egész szám, amelynek értéke a egész része ennek <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
  overload: System.Data.SqlTypes.SqlMoney.ToInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlMoney.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> struktúra. Ha az értéke a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra értéke nulla, a <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> szerkezet értéket fogja <xref href=&quot;System.Data.SqlTypes.SqlBoolean.False&quot;> </xref>. Ellenkező esetben <xref href=&quot;System.Data.SqlTypes.SqlBoolean.True&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlMoney.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> az e érték <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlMoney.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref> az e érték <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlMoney.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref> az e érték <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlMoney.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref> az e érték <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlMoney.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref> az e érték <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlMoney.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> az e érték <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlSingle()
  nameWithType: SqlMoney.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlSingle()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlSingle ToSqlSingle ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "Egy új <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> az e érték <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlSingle*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlMoney.ToSqlString()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Konvertálja a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> bemutatja <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> struktúrában, amelynek értéke egy karakterlánc értékét a képviselő <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlMoney.ToString()
  fullName: System.Data.SqlTypes.SqlMoney.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ezen példányának alakít <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> karakterláncra."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Egy karakterláncot, amelynek az értéke az e érték karakterláncos ábrázolása <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlMoney.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Value
  id: Value
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Value
  nameWithType: SqlMoney.Value
  fullName: System.Data.SqlTypes.SqlMoney.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy példányának pénzügyi értékét a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra. Ez a tulajdonság csak olvasható."
  syntax:
    content: public decimal Value { get; }
    return:
      type: System.Decimal
      description: "A pénzügyi értékének egy példányát a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> struktúra."
  overload: System.Data.SqlTypes.SqlMoney.Value*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "A tulajdonság értéke null."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlMoney.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlMoney
  langs:
  - csharp
  name: Zero
  nameWithType: SqlMoney.Zero
  fullName: System.Data.SqlTypes.SqlMoney.Zero
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Jelenti. a nulla érték, amely hozzárendelhető a <xref:System.Data.SqlTypes.SqlMoney.Value*>tulajdonság egy példányának a <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> osztály</xref:System.Data.SqlTypes.SqlMoney.Value*>"
  remarks: "Nulla funkciókkal, mint egy állandó az <xref:System.Data.SqlTypes.SqlMoney>osztályhoz.</xref:System.Data.SqlTypes.SqlMoney>"
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlMoney Zero;
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlNullValueException
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlNullValueException
  nameWithType: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: SqlMoney(Decimal)
  nameWithType: SqlMoney.SqlMoney(Decimal)
  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Double)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: SqlMoney(Double)
  nameWithType: SqlMoney.SqlMoney(Double)
  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: SqlMoney(Int32)
  nameWithType: SqlMoney.SqlMoney(Int32)
  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: SqlMoney(Int64)
  nameWithType: SqlMoney.SqlMoney(Int64)
  fullName: System.Data.SqlTypes.SqlMoney.SqlMoney(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Add(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Add(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Add(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlMoney.CompareTo(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: CompareTo(SqlMoney)
  nameWithType: SqlMoney.CompareTo(SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.CompareTo(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlMoney.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlMoney.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Divide(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Divide(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Divide(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlMoney.Equals(Object)
  fullName: System.Data.SqlTypes.SqlMoney.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Equals(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Equals(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Equals(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlMoney.GetHashCode
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlMoney.GetHashCode()
  fullName: System.Data.SqlTypes.SqlMoney.GetHashCode()
- uid: System.Data.SqlTypes.SqlMoney.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlMoney.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlMoney.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: GreaterThan(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.GreaterThan(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.GreaterThan(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: GreaterThanOrEqual(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.GreaterThanOrEqual(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.IsNull
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: IsNull
  nameWithType: SqlMoney.IsNull
  fullName: System.Data.SqlTypes.SqlMoney.IsNull
- uid: System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: LessThan(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.LessThan(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.LessThan(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: LessThanOrEqual(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.LessThanOrEqual(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.LessThanOrEqual(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.MaxValue
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: MaxValue
  nameWithType: SqlMoney.MaxValue
  fullName: System.Data.SqlTypes.SqlMoney.MaxValue
- uid: System.Data.SqlTypes.SqlMoney.MinValue
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: MinValue
  nameWithType: SqlMoney.MinValue
  fullName: System.Data.SqlTypes.SqlMoney.MinValue
- uid: System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Multiply(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Multiply(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Multiply(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: NotEquals(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.NotEquals(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.NotEquals(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.Null
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: "Null"
  nameWithType: SqlMoney.Null
  fullName: System.Data.SqlTypes.SqlMoney.Null
- uid: System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Addition(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Addition(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Addition(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Division(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Division(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Division(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Equality(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Equality(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Equality(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlMoney.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Explicit(SqlDecimal)
  nameWithType: SqlMoney.op_Explicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlMoney.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney to System.Decimal)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Explicit(SqlMoney)
  nameWithType: SqlMoney.op_Explicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlMoney.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlMoney.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit(System.Double to System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Explicit(Double)
  nameWithType: SqlMoney.op_Explicit(Double)
  fullName: System.Data.SqlTypes.SqlMoney.op_Explicit(Double)
- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_GreaterThan(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_GreaterThan(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_GreaterThan(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_GreaterThanOrEqual(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_GreaterThanOrEqual(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Implicit(SqlByte)
  nameWithType: SqlMoney.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Implicit(SqlInt16)
  nameWithType: SqlMoney.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Implicit(SqlInt32)
  nameWithType: SqlMoney.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Implicit(SqlInt64)
  nameWithType: SqlMoney.op_Implicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Implicit(Decimal)
  nameWithType: SqlMoney.op_Implicit(Decimal)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(Decimal)
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit(System.Int64)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Implicit(Int64)
  nameWithType: SqlMoney.op_Implicit(Int64)
  fullName: System.Data.SqlTypes.SqlMoney.op_Implicit(Int64)
- uid: System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Inequality(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Inequality(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Inequality(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_LessThan(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_LessThan(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_LessThan(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_LessThanOrEqual(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_LessThanOrEqual(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Multiply(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Multiply(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Multiply(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Subtraction(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.op_Subtraction(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_Subtraction(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_UnaryNegation(SqlMoney)
  nameWithType: SqlMoney.op_UnaryNegation(SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.op_UnaryNegation(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.Parse(System.String)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Parse(String)
  nameWithType: SqlMoney.Parse(String)
  fullName: System.Data.SqlTypes.SqlMoney.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Subtract(SqlMoney,SqlMoney)
  nameWithType: SqlMoney.Subtract(SqlMoney,SqlMoney)
  fullName: System.Data.SqlTypes.SqlMoney.Subtract(SqlMoney,SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlMoney.ToDecimal
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToDecimal()
  nameWithType: SqlMoney.ToDecimal()
  fullName: System.Data.SqlTypes.SqlMoney.ToDecimal()
- uid: System.Data.SqlTypes.SqlMoney.ToDouble
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToDouble()
  nameWithType: SqlMoney.ToDouble()
  fullName: System.Data.SqlTypes.SqlMoney.ToDouble()
- uid: System.Data.SqlTypes.SqlMoney.ToInt32
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToInt32()
  nameWithType: SqlMoney.ToInt32()
  fullName: System.Data.SqlTypes.SqlMoney.ToInt32()
- uid: System.Data.SqlTypes.SqlMoney.ToInt64
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToInt64()
  nameWithType: SqlMoney.ToInt64()
  fullName: System.Data.SqlTypes.SqlMoney.ToInt64()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlMoney.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlByte
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlMoney.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlByte()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlMoney.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlDouble
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlMoney.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt16
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlMoney.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt32
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlMoney.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt64
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlMoney.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlSingle
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlSingle()
  nameWithType: SqlMoney.ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlSingle()
- uid: System.Data.SqlTypes.SqlMoney.ToSqlString
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlMoney.ToSqlString()
  fullName: System.Data.SqlTypes.SqlMoney.ToSqlString()
- uid: System.Data.SqlTypes.SqlMoney.ToString
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToString()
  nameWithType: SqlMoney.ToString()
  fullName: System.Data.SqlTypes.SqlMoney.ToString()
- uid: System.Data.SqlTypes.SqlMoney.Value
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Value
  nameWithType: SqlMoney.Value
  fullName: System.Data.SqlTypes.SqlMoney.Value
- uid: System.Data.SqlTypes.SqlMoney.Zero
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Zero
  nameWithType: SqlMoney.Zero
  fullName: System.Data.SqlTypes.SqlMoney.Zero
- uid: System.Data.SqlTypes.SqlMoney.#ctor*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney.SqlMoney
- uid: System.Data.SqlTypes.SqlMoney.Add*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Add
  nameWithType: SqlMoney.Add
- uid: System.Data.SqlTypes.SqlMoney.CompareTo*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: CompareTo
  nameWithType: SqlMoney.CompareTo
- uid: System.Data.SqlTypes.SqlMoney.Divide*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Divide
  nameWithType: SqlMoney.Divide
- uid: System.Data.SqlTypes.SqlMoney.Equals*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Equals
  nameWithType: SqlMoney.Equals
- uid: System.Data.SqlTypes.SqlMoney.GetHashCode*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: GetHashCode
  nameWithType: SqlMoney.GetHashCode
- uid: System.Data.SqlTypes.SqlMoney.GetXsdType*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: GetXsdType
  nameWithType: SqlMoney.GetXsdType
- uid: System.Data.SqlTypes.SqlMoney.GreaterThan*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: GreaterThan
  nameWithType: SqlMoney.GreaterThan
- uid: System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlMoney.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlMoney.IsNull*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: IsNull
  nameWithType: SqlMoney.IsNull
- uid: System.Data.SqlTypes.SqlMoney.LessThan*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: LessThan
  nameWithType: SqlMoney.LessThan
- uid: System.Data.SqlTypes.SqlMoney.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlMoney.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlMoney.Multiply*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Multiply
  nameWithType: SqlMoney.Multiply
- uid: System.Data.SqlTypes.SqlMoney.NotEquals*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: NotEquals
  nameWithType: SqlMoney.NotEquals
- uid: System.Data.SqlTypes.SqlMoney.op_Addition*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Addition
  nameWithType: SqlMoney.op_Addition
- uid: System.Data.SqlTypes.SqlMoney.op_Division*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Division
  nameWithType: SqlMoney.op_Division
- uid: System.Data.SqlTypes.SqlMoney.op_Equality*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Equality
  nameWithType: SqlMoney.op_Equality
- uid: System.Data.SqlTypes.SqlMoney.op_Explicit*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Explicit
  nameWithType: SqlMoney.op_Explicit
- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlMoney.op_GreaterThan
- uid: System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlMoney.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlMoney.op_Implicit*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Implicit
  nameWithType: SqlMoney.op_Implicit
- uid: System.Data.SqlTypes.SqlMoney.op_Inequality*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Inequality
  nameWithType: SqlMoney.op_Inequality
- uid: System.Data.SqlTypes.SqlMoney.op_LessThan*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_LessThan
  nameWithType: SqlMoney.op_LessThan
- uid: System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlMoney.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlMoney.op_Multiply*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Multiply
  nameWithType: SqlMoney.op_Multiply
- uid: System.Data.SqlTypes.SqlMoney.op_Subtraction*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_Subtraction
  nameWithType: SqlMoney.op_Subtraction
- uid: System.Data.SqlTypes.SqlMoney.op_UnaryNegation*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: op_UnaryNegation
  nameWithType: SqlMoney.op_UnaryNegation
- uid: System.Data.SqlTypes.SqlMoney.Parse*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Parse
  nameWithType: SqlMoney.Parse
- uid: System.Data.SqlTypes.SqlMoney.Subtract*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Subtract
  nameWithType: SqlMoney.Subtract
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlMoney.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlMoney.ToDecimal*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToDecimal
  nameWithType: SqlMoney.ToDecimal
- uid: System.Data.SqlTypes.SqlMoney.ToDouble*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToDouble
  nameWithType: SqlMoney.ToDouble
- uid: System.Data.SqlTypes.SqlMoney.ToInt32*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToInt32
  nameWithType: SqlMoney.ToInt32
- uid: System.Data.SqlTypes.SqlMoney.ToInt64*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToInt64
  nameWithType: SqlMoney.ToInt64
- uid: System.Data.SqlTypes.SqlMoney.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlMoney.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlMoney.ToSqlByte*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlMoney.ToSqlByte
- uid: System.Data.SqlTypes.SqlMoney.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlMoney.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlMoney.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlMoney.ToSqlDouble
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlMoney.ToSqlInt16
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlMoney.ToSqlInt32
- uid: System.Data.SqlTypes.SqlMoney.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlMoney.ToSqlInt64
- uid: System.Data.SqlTypes.SqlMoney.ToSqlSingle*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlSingle
  nameWithType: SqlMoney.ToSqlSingle
- uid: System.Data.SqlTypes.SqlMoney.ToSqlString*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToSqlString
  nameWithType: SqlMoney.ToSqlString
- uid: System.Data.SqlTypes.SqlMoney.ToString*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: ToString
  nameWithType: SqlMoney.ToString
- uid: System.Data.SqlTypes.SqlMoney.Value*
  parent: System.Data.SqlTypes.SqlMoney
  isExternal: false
  name: Value
  nameWithType: SqlMoney.Value
