### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymReader
  id: SymReader
  children:
  - System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  - System.Diagnostics.SymbolStore.SymReader.Dispose
  - System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymReader.Finalize
  - System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Diagnostics.SymbolStore.SymReader.GetDocuments
  - System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  - System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  - System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  - System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  - System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  - System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  langs:
  - csharp
  name: SymReader
  nameWithType: SymReader
  fullName: System.Diagnostics.SymbolStore.SymReader
  type: Class
  summary: "Hozzáférést biztosít azokhoz a dokumentumok, a metódusok és a változók a szimbólum tárolóban."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymReaderBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolReader
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymReaderBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)'
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: SymReader(ISymUnmanagedReader*)
  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)
  fullName: System.Diagnostics.SymbolStore.SymReader.SymReader(ISymUnmanagedReader*)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);
    parameters:
    - id: pReader
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Diagnostics.SymbolStore.SymReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymReader.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Feloldja a jelenlegi példány által használt erőforrások a <xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;> </xref> osztály."
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymReader.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Hívja a <> </> *> és <> </> *> módszerek kijelölése az aktuális példány által használt kezelt és nem kezelt erőforrások a <xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;> </xref> osztály."
  remarks: "Ez a metódus csak a nyilvános hívja <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A>és <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A>módszerek; Ez a módszer ne hívja közvetlenül.</xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A>"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási kezelt és nem kezelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Diagnostics.SymbolStore.SymReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymReader.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymReader.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Feloldja a nem felügyelt erőforrást és egyéb törlési műveletek előtt elvégzi a <xref href=&quot;System.Diagnostics.SymbolStore.SymReader&quot;> </xref> szemétgyűjtés által felszabadul."
  remarks: "Ezt a módszert felülbírálja <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Alkalmazás kódja nem teheti ezt a módszert; az objektum `Finalize` metódus automatikusan megnyílik, során szemétgyűjtés, kivéve, ha a szemétgyűjtő véglegesítés hívásával le van tiltva a <xref:System.GC.SuppressFinalize%2A>metódus.</xref:System.GC.SuppressFinalize%2A>"
  syntax:
    content: ~SymReader ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymReader.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetDocument(String,Guid,Guid,Guid)
  nameWithType: SymReader.GetDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "A dokumentum és nem kötelezően a nyelvet, nyelvi szállító és a típus a URL-dokumentum lekérése."
  remarks: "A `language`, `languageVendor`, és `documentType` paraméterek jelenleg figyelmen kívül hagyja."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: "Az URL-címet, amely azonosítja a dokumentumot."
    - id: language
      type: System.Guid
      description: "A dokumentum nyelvét. Ezzel a paraméterrel megadható <xref:System.Guid>.</xref:System.Guid> egyetlen nyelven jelzi."
    - id: languageVendor
      type: System.Guid
      description: "A dokumentum nyelvhez szállító identitását. Megadhatja, hogy ez a paraméter, mint a <xref:System.Guid>bármilyen nyelvi szállító jelöléséhez.</xref:System.Guid>"
    - id: documentType
      type: System.Guid
      description: "A dokumentum típusa. Megadhatja, hogy ez a paraméter, <xref:System.Guid>dokumentum bármilyen jelöléséhez.</xref:System.Guid>"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "A dokumentum a megadott URL-Ha a szimbólum tárolóban található vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a dokumentum nem létezik."
  overload: System.Diagnostics.SymbolStore.SymReader.GetDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments
  id: GetDocuments
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetDocuments()
  nameWithType: SymReader.GetDocuments()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocuments()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Lekérdezi a szimbólum tárolóban definiált összes dokumentumot tömbjét."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocument[]
      description: "A szimbólum tárolóban definiált összes dokumentumot tömbjét."
  overload: System.Diagnostics.SymbolStore.SymReader.GetDocuments*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Nincs elegendő memória a kérelem teljesítéséhez."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  id: GetGlobalVariables
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetGlobalVariables()
  nameWithType: SymReader.GetGlobalVariables()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Jelez a <xref:System.NotSupportedException>minden esetben.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "Jelez a <xref:System.NotSupportedException>minden esetben.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Minden esetben."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethod(SymbolToken)
  nameWithType: SymReader.GetMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Lekérdezi a szimbólum olvasó metódus objektumot, ha adott metódus azonosítóját."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "A metaadatokat megadó lexikális elem a metódus."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "Az olvasó a megadott metódus azonosítójának metódus szimbólum objektum."
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  id: GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethod(SymbolToken,Int32)
  nameWithType: SymReader.GetMethod(SymbolToken,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Lekérdezi a szimbólum olvasó metódus objektumot, ha a metódus és a Szerkesztés azonosítóját, és folytassa a verzió."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "A metaadatokat megadó lexikális elem a metódus."
    - id: version
      type: System.Int32
      description: "A Szerkesztés és folytatás metódus verzióját."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "A szimbólum metódus olvasóobjektum metódus azonosítója és verziót."
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  id: GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "A szimbólum lekérdezi az olvasó metódus objektum, amely tartalmazza a megadott pozíciónál a dokumentumban."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocument
      description: "A dokumentumban, amelyben a metódus található."
    - id: line
      type: System.Int32
      description: "A dokumentum a sor pozícióját. A sorok számozása, 1-gyel kezdődően."
    - id: column
      type: System.Int32
      description: "A dokumentum oszlop pozícióját. Az oszlopok számozása, 1-gyel kezdődően."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: "A szimbólum olvasó metódus objektuma a dokumentum a megadott pozíciónál."
  overload: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  id: GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetNamespaces()
  nameWithType: SymReader.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetNamespaces()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Jelez a <xref:System.NotSupportedException>minden esetben.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]
      description: "Jelez a <xref:System.NotSupportedException>minden esetben.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetNamespaces*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Minden esetben."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  id: GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetSymAttribute(SymbolToken,String)
  nameWithType: SymReader.GetSymAttribute(SymbolToken,String)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(SymbolToken,String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Jelez a <xref:System.NotSupportedException>minden esetben.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Ez a paraméter nem használható."
    - id: name
      type: System.String
      description: "Ez a paraméter nem használható."
    return:
      type: System.Byte[]
      description: "Jelez a <xref:System.NotSupportedException>minden esetben.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Minden esetben."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  id: GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: GetVariables(SymbolToken)
  nameWithType: SymReader.GetVariables(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetVariables(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Jelez a <xref:System.NotSupportedException>minden esetben.</xref:System.NotSupportedException>"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "Ez a paraméter nem használható."
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: "Jelez a <xref:System.NotSupportedException>minden esetben.</xref:System.NotSupportedException>"
  overload: System.Diagnostics.SymbolStore.SymReader.GetVariables*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Minden esetben."
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  id: ReplaceSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: ReplaceSymbolStore(String,IntPtr)
  nameWithType: SymReader.ReplaceSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(String,IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "A meglévő szimbólum tároló cseréli a különbözeti szimbólum tároló."
  remarks: "A ReplaceSymbolStore hasonlóan a <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A>metódust, de a megadott különbözeti úgy működik, frissítés, hanem teljes cserét hajt végre.</xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A>       A paraméterek közül csak `fileName` vagy `stream`, meg kell határozni. Ha `fileName` van megadva, a szimbólum tároló frissül a szimbólumok, az adott fájlban. Ha `stream` van megadva, a szimbólum tároló frissül a <xref:System.Runtime.InteropServices.ComTypes.IStream>.</xref:System.Runtime.InteropServices.ComTypes.IStream> származó adatokkal"
  syntax:
    content: public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);
    parameters:
    - id: fileName
      type: System.String
      description: "A szimbólum tároló tartalmazó fájl neve vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> egy memórián belüli tároló használata."
    - id: stream
      type: System.IntPtr
      description: "A bemeneti adatfolyam a szimbólum tárolóhoz, a mutató vagy <xref:System.IntPtr>Ha egy lemezen tárolót használó.</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  id: UpdateSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: UpdateSymbolStore(String,IntPtr)
  nameWithType: SymReader.UpdateSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(String,IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Frissíti a meglévő szimbólum tároló különbözeti szimbólum áruházbeli."
  remarks: "Ez a módszer lesz szerkesztési és folytatási helyzetekben a szimbólum tárolási lehetőséget az eredeti fájl PE eltérések kereséséhez.       A paraméterek közül csak `fileName` vagy `stream`, meg kell határozni. Ha `fileName` van megadva, a szimbólum tároló frissül a szimbólumok, az adott fájlban. Ha `stream` van megadva, a szimbólum tároló frissül a <xref:System.Runtime.InteropServices.ComTypes.IStream>.</xref:System.Runtime.InteropServices.ComTypes.IStream> származó adatokkal"
  syntax:
    content: public virtual void UpdateSymbolStore (string fileName, IntPtr stream);
    parameters:
    - id: fileName
      type: System.String
      description: "A szimbólum tároló tartalmazó fájl neve vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> egy memórián belüli tároló használata."
    - id: stream
      type: System.IntPtr
      description: "A bemeneti adatfolyam a szimbólum tárolóhoz, a mutató vagy <xref:System.IntPtr>Ha egy lemezen tárolót használó.</xref:System.IntPtr>"
  overload: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  id: UserEntryPoint
  parent: System.Diagnostics.SymbolStore.SymReader
  langs:
  - csharp
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
  fullName: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "Lekéri a metaadatokat token a módszert, amelyet van megadva, a felhasználói belépési pont a modul, ha van ilyen."
  remarks: "A visszatérési értéke általában a fő metódus."
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }
    return:
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "A metaadatokat megadó lexikális elem a metódus, amely a felhasználói belépési pont a modul."
  overload: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Nem található a belépési pont."
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymReaderBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymReaderBase
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: SymReader(ISymUnmanagedReader*)
  nameWithType: SymReader.SymReader(ISymUnmanagedReader*)
  fullName: System.Diagnostics.SymbolStore.SymReader.SymReader(ISymUnmanagedReader*)
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose()
  nameWithType: SymReader.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose()
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymReader.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Finalize()
  nameWithType: SymReader.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymReader.Finalize()
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocument(String,Guid,Guid,Guid)
  nameWithType: SymReader.GetDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocument
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocuments()
  nameWithType: SymReader.GetDocuments()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetDocuments()
- uid: System.Diagnostics.SymbolStore.ISymbolDocument[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocument
  nameWithType: ISymbolDocument
  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolDocument
    name: ISymbolDocument
    nameWithType: ISymbolDocument
    fullName: ISymbolDocument[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetGlobalVariables()
  nameWithType: SymReader.GetGlobalVariables()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolVariable
    name: ISymbolVariable
    nameWithType: ISymbolVariable
    fullName: ISymbolVariable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod(SymbolToken)
  nameWithType: SymReader.GetMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken)
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod(SymbolToken,Int32)
  nameWithType: SymReader.GetMethod(SymbolToken,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethod(SymbolToken,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  nameWithType: SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(ISymbolDocument,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetNamespaces()
  nameWithType: SymReader.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymReader.GetNamespaces()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]
  spec.csharp:
  - uid: System.Diagnostics.SymbolStore.ISymbolNamespace
    name: ISymbolNamespace
    nameWithType: ISymbolNamespace
    fullName: ISymbolNamespace[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetSymAttribute(SymbolToken,String)
  nameWithType: SymReader.GetSymAttribute(SymbolToken,String)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(SymbolToken,String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetVariables(SymbolToken)
  nameWithType: SymReader.GetVariables(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymReader.GetVariables(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: ReplaceSymbolStore(String,IntPtr)
  nameWithType: SymReader.ReplaceSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(String,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UpdateSymbolStore(String,IntPtr)
  nameWithType: SymReader.UpdateSymbolStore(String,IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(String,IntPtr)
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
  fullName: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint
- uid: System.Diagnostics.SymbolStore.SymReader.#ctor*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: SymReader
  nameWithType: SymReader.SymReader
- uid: System.Diagnostics.SymbolStore.SymReader.Dispose*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Dispose
  nameWithType: SymReader.Dispose
- uid: System.Diagnostics.SymbolStore.SymReader.Finalize*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: Finalize
  nameWithType: SymReader.Finalize
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocument*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocument
  nameWithType: SymReader.GetDocument
- uid: System.Diagnostics.SymbolStore.SymReader.GetDocuments*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetDocuments
  nameWithType: SymReader.GetDocuments
- uid: System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetGlobalVariables
  nameWithType: SymReader.GetGlobalVariables
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethod*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethod
  nameWithType: SymReader.GetMethod
- uid: System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetMethodFromDocumentPosition
  nameWithType: SymReader.GetMethodFromDocumentPosition
- uid: System.Diagnostics.SymbolStore.SymReader.GetNamespaces*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetNamespaces
  nameWithType: SymReader.GetNamespaces
- uid: System.Diagnostics.SymbolStore.SymReader.GetSymAttribute*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetSymAttribute
  nameWithType: SymReader.GetSymAttribute
- uid: System.Diagnostics.SymbolStore.SymReader.GetVariables*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: GetVariables
  nameWithType: SymReader.GetVariables
- uid: System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: ReplaceSymbolStore
  nameWithType: SymReader.ReplaceSymbolStore
- uid: System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UpdateSymbolStore
  nameWithType: SymReader.UpdateSymbolStore
- uid: System.Diagnostics.SymbolStore.SymReader.UserEntryPoint*
  parent: System.Diagnostics.SymbolStore.SymReader
  isExternal: false
  name: UserEntryPoint
  nameWithType: SymReader.UserEntryPoint
