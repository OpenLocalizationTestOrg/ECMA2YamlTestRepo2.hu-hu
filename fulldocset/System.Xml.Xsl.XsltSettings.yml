### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XsltSettings
  id: XsltSettings
  children:
  - System.Xml.Xsl.XsltSettings.#ctor
  - System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)
  - System.Xml.Xsl.XsltSettings.Default
  - System.Xml.Xsl.XsltSettings.EnableDocumentFunction
  - System.Xml.Xsl.XsltSettings.EnableScript
  - System.Xml.Xsl.XsltSettings.TrustedXslt
  langs:
  - csharp
  name: XsltSettings
  nameWithType: XsltSettings
  fullName: System.Xml.Xsl.XsltSettings
  type: Class
  summary: "Megadja az XSLT-szolgáltatások támogatásához az XSLT-stíluslap végrehajtása során."
  remarks: "A beágyazott parancsfájl-blokkokban és az XSLT- `document()` függvény nem kötelező funkció a <xref:System.Xml.Xsl.XslCompiledTransform>osztályba tartozik</xref:System.Xml.Xsl.XslCompiledTransform> . Ezek a szolgáltatások alapértelmezés szerint le vannak tiltva. A XsltSettings osztály megadja, hogy ezeket nem kötelező funkcióinak támogatásához. Szolgáltatások engedélyezve vannak, vagy le van tiltva, az osztály a tulajdonságai. A XsltSettings objektum ezután átadja a <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A?displayProperty=fullName>metódus.</xref:System.Xml.Xsl.XslCompiledTransform.Load%2A?displayProperty=fullName>      > [!IMPORTANT] > XSLT stíluslaphoz más fájlokra mutató hivatkozások lehetnek, és a beágyazott parancsfájl-blokkokban. Egy rosszindulatú felhasználó is kihasználja a úgy, hogy megadja, hogy adatokkal vagy stíluslapot, amely végrehajtáskor a rendszer futtatásáig a számítógépen kevés az erőforrás feldolgozni. Ne engedélyezze a parancsfájl-kezelési vagy a `document()` működik, ha a stíluslap egy megbízható forrásból származik. Ha a stíluslap forrását nem tudja ellenőrizni, vagy ha a stíluslap nem megbízható forrásból származik, az alapértelmezett XSLT beállításokat használja."
  example:
  - "The following example loads a style sheet and enables XSLT script support.  \n  \n [!code-vb[XslCompiledTransform.Load#6](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltset_1.vb)]\n [!code-cs[XslCompiledTransform.Load#6](~/add/codesnippet/csharp/t-system.xml.xsl.xsltset_1.cs)]"
  syntax:
    content: public sealed class XsltSettings
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: XsltSettings()
  nameWithType: XsltSettings.XsltSettings()
  fullName: System.Xml.Xsl.XsltSettings.XsltSettings()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> osztály az alapértelmezett beállításokkal."
  remarks: "Az új <xref:System.Xml.Xsl.XsltSettings>objektum nem támogatja az XSLT `document()` függvényt vagy beágyazott parancsfájl-blokkokban.</xref:System.Xml.Xsl.XsltSettings>      > [!IMPORTANT] > XSLT-scripting engedélyezni kell, csak akkor, ha a parancsfájl támogatási van szüksége, és teljesen megbízható környezetben dolgozik. Ha engedélyezi a `document()` függvény, korlátozhatja az erőforrásokat, amelyek úgy, hogy elérhető egy <xref:System.Xml.XmlSecureResolver>az objektum a <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>metódus.</xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> </xref:System.Xml.XmlSecureResolver>"
  syntax:
    content: public XsltSettings ();
    parameters: []
  overload: System.Xml.Xsl.XsltSettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: XsltSettings(Boolean,Boolean)
  nameWithType: XsltSettings.XsltSettings(Boolean,Boolean)
  fullName: System.Xml.Xsl.XsltSettings.XsltSettings(Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> osztály a megadott beállításokkal."
  remarks: >-
    > [!IMPORTANT]

    >  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment. If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.
  example:
  - "The following example loads a style sheet and enables XSLT script support.  \n  \n [!code-vb[XslCompiledTransform.Load#6](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltset_1.vb)]\n [!code-cs[XslCompiledTransform.Load#6](~/add/codesnippet/csharp/m-system.xml.xsl.xsltset_1.cs)]"
  syntax:
    content: public XsltSettings (bool enableDocumentFunction, bool enableScript);
    parameters:
    - id: enableDocumentFunction
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az XSLT támogatásának engedélyezése `document()` működik; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: enableScript
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>beágyazott parancsfájlok blokkok; támogatásának engedélyezése Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XsltSettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.Default
  id: Default
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: Default
  nameWithType: XsltSettings.Default
  fullName: System.Xml.Xsl.XsltSettings.Default
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Lekérdezi egy <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> objektum alapértelmezett beállításokkal. Az XSLT támogatása `document()` függvény és a beágyazott parancsfájl blokkok le van tiltva."
  remarks: ''
  example:
  - "The following example loads a style sheet with default XSLT settings.  \n  \n [!code-vb[XslCompiledTransform.Load#7](~/add/codesnippet/visualbasic/p-system.xml.xsl.xsltset_1_1.vb)]\n [!code-cs[XslCompiledTransform.Load#7](~/add/codesnippet/csharp/p-system.xml.xsl.xsltset_1_1.cs)]"
  syntax:
    content: public static System.Xml.Xsl.XsltSettings Default { get; }
    return:
      type: System.Xml.Xsl.XsltSettings
      description: "Egy <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> rendelkező objektum a <> </> *> és <> </> *> tulajdonságainak <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XsltSettings.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.EnableDocumentFunction
  id: EnableDocumentFunction
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: EnableDocumentFunction
  nameWithType: XsltSettings.EnableDocumentFunction
  fullName: System.Xml.Xsl.XsltSettings.EnableDocumentFunction
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Lekérdezi vagy beállítja az XSLT-támogatás engedélyezése jelző érték `document()` függvény."
  remarks: >-
    > [!IMPORTANT]

    >  If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.
  syntax:
    content: public bool EnableDocumentFunction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az XSLT támogatásához `document()` működik; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XsltSettings.EnableDocumentFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.EnableScript
  id: EnableScript
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: EnableScript
  nameWithType: XsltSettings.EnableScript
  fullName: System.Xml.Xsl.XsltSettings.EnableScript
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy beágyazott parancsfájl támogatása engedélyezi-e."
  remarks: >-
    > [!IMPORTANT]

    >  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.
  syntax:
    content: public bool EnableScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>parancsfájl-blokkokban támogatásához XSLT stíluslapok; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XsltSettings.EnableScript*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XsltSettings.TrustedXslt
  id: TrustedXslt
  parent: System.Xml.Xsl.XsltSettings
  langs:
  - csharp
  name: TrustedXslt
  nameWithType: XsltSettings.TrustedXslt
  fullName: System.Xml.Xsl.XsltSettings.TrustedXslt
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Lekérdezi egy <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> objektum, amely lehetővé teszi az XSLT-támogatását `document()` függvény és a beágyazott parancsfájl-blokkokban."
  remarks: >-
    > [!IMPORTANT]

    >  XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment. If you enable the `document()` function, you can restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.
  example:
  - "The following example loads a style sheet with support for the XSLT `document()` function and embedded script blocks features enabled.  \n  \n [!code-vb[XslCompiledTransform.Load#8](~/add/codesnippet/visualbasic/p-system.xml.xsl.xsltset_0_1.vb)]\n [!code-cs[XslCompiledTransform.Load#8](~/add/codesnippet/csharp/p-system.xml.xsl.xsltset_0_1.cs)]"
  syntax:
    content: public static System.Xml.Xsl.XsltSettings TrustedXslt { get; }
    return:
      type: System.Xml.Xsl.XsltSettings
      description: "Egy <xref href=&quot;System.Xml.Xsl.XsltSettings&quot;> </xref> rendelkező objektum a <> </> *> és <> </> *> tulajdonságainak <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XsltSettings.TrustedXslt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltSettings.#ctor
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: XsltSettings()
  nameWithType: XsltSettings.XsltSettings()
  fullName: System.Xml.Xsl.XsltSettings.XsltSettings()
- uid: System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: XsltSettings(Boolean,Boolean)
  nameWithType: XsltSettings.XsltSettings(Boolean,Boolean)
  fullName: System.Xml.Xsl.XsltSettings.XsltSettings(Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Xsl.XsltSettings.Default
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: Default
  nameWithType: XsltSettings.Default
  fullName: System.Xml.Xsl.XsltSettings.Default
- uid: System.Xml.Xsl.XsltSettings
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltSettings
  nameWithType: XsltSettings
  fullName: System.Xml.Xsl.XsltSettings
- uid: System.Xml.Xsl.XsltSettings.EnableDocumentFunction
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: EnableDocumentFunction
  nameWithType: XsltSettings.EnableDocumentFunction
  fullName: System.Xml.Xsl.XsltSettings.EnableDocumentFunction
- uid: System.Xml.Xsl.XsltSettings.EnableScript
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: EnableScript
  nameWithType: XsltSettings.EnableScript
  fullName: System.Xml.Xsl.XsltSettings.EnableScript
- uid: System.Xml.Xsl.XsltSettings.TrustedXslt
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: TrustedXslt
  nameWithType: XsltSettings.TrustedXslt
  fullName: System.Xml.Xsl.XsltSettings.TrustedXslt
- uid: System.Xml.Xsl.XsltSettings.#ctor*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: XsltSettings
  nameWithType: XsltSettings.XsltSettings
- uid: System.Xml.Xsl.XsltSettings.Default*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: Default
  nameWithType: XsltSettings.Default
- uid: System.Xml.Xsl.XsltSettings.EnableDocumentFunction*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: EnableDocumentFunction
  nameWithType: XsltSettings.EnableDocumentFunction
- uid: System.Xml.Xsl.XsltSettings.EnableScript*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: EnableScript
  nameWithType: XsltSettings.EnableScript
- uid: System.Xml.Xsl.XsltSettings.TrustedXslt*
  parent: System.Xml.Xsl.XsltSettings
  isExternal: false
  name: TrustedXslt
  nameWithType: XsltSettings.TrustedXslt
