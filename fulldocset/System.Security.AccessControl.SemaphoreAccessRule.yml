### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.SemaphoreAccessRule
  id: SemaphoreAccessRule
  children:
  - System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
  langs:
  - csharp
  name: SemaphoreAccessRule
  nameWithType: SemaphoreAccessRule
  fullName: System.Security.AccessControl.SemaphoreAccessRule
  type: Class
  summary: "Csomagok olyan hozzáférési jogokat engedélyezett vagy megtagadott egy felhasználó vagy csoport. Ez az osztály nem örökölhető."
  remarks: "A SemaphoreAccessRule osztály az egyik olyan osztályokkal rendelkezik, amelyek a .NET-keretrendszer biztosít a felhőszolgáltatóknak a Windows hozzáférés-vezérléssel az elnevezett rendszer szemaforok készlete. Ezeket az osztályokat, és a kapcsolat az alapul szolgáló Windows hozzáférést vezérlő struktúrákra áttekintését lásd: <xref:System.Security.AccessControl.SemaphoreSecurity>.</xref:System.Security.AccessControl.SemaphoreSecurity>      > [!NOTE] > Hozzáférés-vezérléssel értéke akkor értelmezhető, csak a Windows rendszer szemaforok nevű. Ha egy <xref:System.Threading.Semaphore>objektum által jelképezett helyi szemafor, hozzáférés-vezérlés lényegtelen.</xref:System.Threading.Semaphore>       Amelyet egy elnevezett szemafor jelenleg alkalmazott szabályok listáját a <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>metódus használatával kérje le a <xref:System.Security.AccessControl.SemaphoreSecurity>objektumot, majd használja a <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>beszerzéséhez SemaphoreAccessRule objektumok gyűjteménye.</xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> </xref:System.Security.AccessControl.SemaphoreSecurity> </xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>       SemaphoreAccessRule objektumok nem képezi le egy az egyhez típusú az alapul szolgáló tulajdonosi hozzáférés-szabályozási listához (DACL) hozzáférés-vezérlési bejegyzésekkel együtt. Amikor egy szemaforok minden hozzáférési szabályok készletét, a set Express minden hozzáférés-vezérlő bejegyzések jelenleg szükséges szabályok minimális számát tartalmazza.      > [!NOTE] > Az alapul szolgáló hozzáférés-vezérlési bejegyzés módosítható, mert a vonatkoznak, és törölje a szabályokat. A szabályok egyesítéskor Ha lehetséges, hozzáférés-vezérlő bejegyzéseket a legkevesebb fenntartásához. Így ha olvasható szabályok aktuális listáját, azt nem nézhet pontosan a hozzáadott összes szabályok listáját.       Adja meg a hozzáférési jogosultsága ahhoz, hogy engedélyezi vagy megtagadja a felhasználó vagy csoport SemaphoreAccessRule-objektumokat használ. Egy objektum mindig jelöli SemaphoreAccessRule hozzáférése engedélyezett, vagy megtagadta a hozzáférést, soha nem is.       A nevesített rendszer szemaforhoz olyan szabályt alkalmaz, használja a <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName>metódus használatával kérje le a <xref:System.Security.AccessControl.SemaphoreSecurity>objektum.</xref:System.Security.AccessControl.SemaphoreSecurity> </xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> Módosítsa a <xref:System.Security.AccessControl.SemaphoreSecurity>objektum a metódusok segítségével vegye fel a szabályt, és használja a <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>metódus a biztonsági objektum újracsatolni.</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.SemaphoreSecurity>      > [!IMPORTANT] > Végrehajtott módosítások egy <xref:System.Security.AccessControl.SemaphoreSecurity>objektum nem befolyásolják a nevesített szemafor hozzáférési szintek amíg meghívja a <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>metódus a módosított biztonsági objektum hozzárendelése az elnevezett szemafor.</xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.SemaphoreSecurity>       SemaphoreAccessRule objektumok nem módosíthatók. A szemafor biztonsági módszerek használatával módosítása a <xref:System.Security.AccessControl.SemaphoreSecurity>osztály hozzáadása vagy eltávolítása szabályok; ehhez, mert az alapul szolgáló hozzáférés-vezérlési bejegyzés módosítva lett.</xref:System.Security.AccessControl.SemaphoreSecurity>      > [!NOTE] > Szinkronizálási objektumok biztonsági Windows 98 és nem támogatott."
  example:
  - "The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType> rules and <xref:System.Security.AccessControl.AccessControlType> rules, and shows the combination of rights in compatible rules. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType> rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.Semaphore> object. Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/t-system.security.access_3_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/t-system.security.access_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SemaphoreAccessRule : System.Security.AccessControl.AccessRule
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.SemaphoreAccessRule
  langs:
  - csharp
  name: SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.SemaphoreAccessRule&quot;> </xref> osztály, adja meg a felhasználót vagy csoportot a szabály vonatkozik, a hozzáférési jogok, és hogy a megadott hozzáférési jogokat engedélyezett vagy megtagadott."
  remarks: "Adja meg a egy <xref:System.Threading.Semaphore>, például meghívásával a <xref:System.Threading.WaitHandle.WaitOne%2A>metódus, a felhasználóknak rendelkezniük kell <xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName>hozzáférési.</xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName> </xref:System.Threading.WaitHandle.WaitOne%2A> </xref:System.Threading.Semaphore> A szemafor meghívásával kilép a <xref:System.Threading.Semaphore.Release%2A>módszer esetén a felhasználónak rendelkeznie kell <xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName>hozzáférési.</xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName> </xref:System.Threading.Semaphore.Release%2A>"
  syntax:
    content: public SemaphoreAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "A felhasználó vagy csoport, a szabály vonatkozik. Típusúnak kell lennie <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> vagy például típusú <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> be, amely átalakítható <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: eventRights
      type: System.Security.AccessControl.SemaphoreRights
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.SemaphoreRights&quot;> </xref> értékek megadása a jogok engedélyez vagy tilt."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Egy a <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> megadása, hogy a jogok engedélyezett vagy megtagadott értékeket."
  overload: System.Security.AccessControl.SemaphoreAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Itt adható meg érték érvénytelen.       – vagy – <code>type</code> érvénytelen értéket."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>eventRights</code> nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>az egyik típus sem <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> és nem olyan típusú, mint <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> be, amely átalakítható <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.SemaphoreAccessRule
  langs:
  - csharp
  name: SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.SemaphoreAccessRule&quot;> </xref> osztály adható meg a neve, a felhasználó vagy csoport, a szabály vonatkozik, a hozzáférési jogok, és hogy a megadott hozzáférési jogokat engedélyezett vagy megtagadott."
  remarks: "Adja meg a egy <xref:System.Threading.Semaphore>, például meghívásával a <xref:System.Threading.WaitHandle.WaitOne%2A>metódus, a felhasználóknak rendelkezniük kell <xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName>hozzáférési.</xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName> </xref:System.Threading.WaitHandle.WaitOne%2A> </xref:System.Threading.Semaphore> A szemafor meghívásával kilép a <xref:System.Threading.Semaphore.Release%2A>módszer esetén a felhasználónak rendelkeznie kell <xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName>hozzáférési.</xref:System.Security.AccessControl.SemaphoreRights?displayProperty=fullName> </xref:System.Threading.Semaphore.Release%2A>       Ez a konstruktor megegyezik létrehozása egy <xref:System.Security.Principal.NTAccount>objektum úgy, hogy `identity` számára a <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName>konstruktor, és átadja az újonnan létrehozott <xref:System.Security.Principal.NTAccount>az objektum a <xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29>konstruktor.</xref:System.Security.AccessControl.SemaphoreAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.SemaphoreRights%2CSystem.Security.AccessControl.AccessControlType%29> </xref:System.Security.Principal.NTAccount> </xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.NTAccount>"
  example:
  - "The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.SemaphoreAccessRule> objects. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType> rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.Semaphore> object. Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/09c19b7f-c894-4d29-aa9f-_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/09c19b7f-c894-4d29-aa9f-_1.vb)]"
  syntax:
    content: public SemaphoreAccessRule (string identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "A felhasználó vagy csoport nevét a szabály vonatkozik."
    - id: eventRights
      type: System.Security.AccessControl.SemaphoreRights
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.SemaphoreRights&quot;> </xref> értékek megadása a jogok engedélyez vagy tilt."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Egy a <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> megadása, hogy a jogok engedélyezett vagy megtagadott értékeket."
  overload: System.Security.AccessControl.SemaphoreAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Itt adható meg érték érvénytelen.       – vagy – <code>type</code> érvénytelen értéket."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>eventRights</code>értéke nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>identity</code> egy nulla hosszúságú karakterlánc.       – vagy – <code>identity</code> 512 karakternél hosszabb."
  platform:
  - net462
- uid: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
  id: SemaphoreRights
  parent: System.Security.AccessControl.SemaphoreAccessRule
  langs:
  - csharp
  name: SemaphoreRights
  nameWithType: SemaphoreAccessRule.SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
  type: Property
  assemblies:
  - System
  namespace: System.Security.AccessControl
  summary: "Lekérdezi a jogosultságokat, amelyet a hozzáférési szabály engedélyez vagy elutasít."
  remarks: "<xref:System.Security.AccessControl.SemaphoreAccessRule>objektumok nem módosíthatók.</xref:System.Security.AccessControl.SemaphoreAccessRule> Létrehozhat egy új hozzáférési szabály egy másik felhasználó, különböző jogokkal, vagy egy másik képviselő <xref:System.Security.AccessControl.AccessControlType>, de nem módosíthatja a meglévő hozzáférési szabály.</xref:System.Security.AccessControl.AccessControlType>"
  example:
  - "The following code example demonstrates the use of the SemaphoreRights property to display the rights in the set of rules contained in a <xref:System.Security.AccessControl.SemaphoreSecurity> object. The example creates a <xref:System.Security.AccessControl.SemaphoreSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType> rule.  \n  \n> [!NOTE]\n>  This example does not attach the security object to a <xref:System.Threading.Semaphore> object. Examples that attach security objects can be found in <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=fullName> and <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=fullName>.  \n  \n [!code-cs[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/csharp/p-system.security.access_1_1.cs)]\n [!code-vb[System.Security.AccessControl.SemaphoreSecurity.AddAccessRule#1](~/add/codesnippet/visualbasic/p-system.security.access_1_1.vb)]"
  syntax:
    content: public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }
    return:
      type: System.Security.AccessControl.SemaphoreRights
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.SemaphoreRights&quot;> </xref> engedélyezett és a hozzáférési szabály, amely jelzi, a jogok értékek."
  overload: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AccessRule
  isExternal: false
  name: System.Security.AccessControl.AccessRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreAccessRule(IdentityReference,SemaphoreRights,AccessControlType)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.SemaphoreRights
  parent: System.Security.AccessControl
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreAccessRule(String,SemaphoreRights,AccessControlType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreAccessRule.SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights
- uid: System.Security.AccessControl.SemaphoreAccessRule.#ctor*
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreAccessRule
  nameWithType: SemaphoreAccessRule.SemaphoreAccessRule
- uid: System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights*
  parent: System.Security.AccessControl.SemaphoreAccessRule
  isExternal: false
  name: SemaphoreRights
  nameWithType: SemaphoreAccessRule.SemaphoreRights
