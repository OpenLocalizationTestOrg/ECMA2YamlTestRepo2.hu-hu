### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "A kiszolgáló, és opcionálisan az ügyfél hitelesítésére a biztonsági Secure Socket Layer (SSL) protokollt használó ügyfél-kiszolgáló kommunikációhoz használt adatfolyam biztosít."
  remarks: "SSL-protokollok segít a bizalmas és sértetlenség-ellenőrzésének üzenetek egy SslStream használatával továbbít. SSL-kapcsolatot, például SslStream, által használandó bizalmas adatokat az ügyfél és kiszolgáló közötti kommunikáció során. Egy SslStream segítségével megakadályozhatja olvasását és illetéktelenül információt, bár ez az a hálózati átvitel során.       SslStream példány továbbítja az adatokat, és hozzá kell adni a SslStream létrehozásakor adatfolyam. Ha az alapul szolgáló adatfolyam adja meg, hogy a beállítással adhatja meg, hogy bezárja a SslStream is bezárja az alapul szolgáló adatfolyamon. Általában a SslStream osztály használatos a <xref:System.Net.Sockets.TcpClient>és <xref:System.Net.Sockets.TcpListener>osztályok.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> A <xref:System.Net.Sockets.TcpClient.GetStream%2A>módszer lehetővé teszi az <xref:System.Net.Sockets.NetworkStream>megfelel a SslStream osztályhoz.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       Miután létrehozta az SslStream, a kiszolgáló, és ha szükséges, az ügyfél hitelesíteni kell. A kiszolgáló meg kell adnia egy X509 magát létesít, és kérheti, hogy az ügyfél is tegye tanúsítványban. Hitelesítési adatait egy SslStream továbbítás előtt kell elvégezni. Ügyfelek hitelesítése a szinkron kezdeményeznek <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>módszerek, amely blokkolja a hitelesítési befejezéséig, vagy az aszinkron <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, módszerek nem blokkolják a hitelesítés befejezéséhez vár.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Kiszolgálók kezdeményezni a szinkron hitelesítés <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>vagy aszinkron <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> Ügyfél- és a hitelesítési kell kezdeményeznie.       A hitelesítés a csatorna biztonsági támogatás szolgáltatójának (SSPI) szolgáltató kezeli. Az ügyfél szabályozza a kiszolgálói tanúsítvány érvényesítése megadásával lehetőséget kap egy <xref:System.Net.Security.RemoteCertificateValidationCallback>delegálására egy SslStream létrehozásakor.</xref:System.Net.Security.RemoteCertificateValidationCallback> A kiszolgáló is szabályozhatja érvényesítési úgy, hogy megadja a <xref:System.Net.Security.RemoteCertificateValidationCallback>delegálása.</xref:System.Net.Security.RemoteCertificateValidationCallback> A módszer a delegált hivatkozik a távoli fél tanúsítvány és hiba történt a tanúsítvány érvényesítése SSPI tartalmaz. Vegye figyelembe, hogy a kiszolgáló a delegált határozza meg, ha a delegáltmetódus meghívták függetlenül attól, hogy a kiszolgáló-ügyfélhitelesítést kért. A kiszolgáló nem kért ügyfél-hitelesítéshez, ha a kiszolgáló delegáltmetódus kap null tanúsítvány és hitelesítési hibák üres tömb.       Ha a kiszolgáló ügyfél-hitelesítés szükséges, az ügyfél-hitelesítési tanúsítványok egy vagy több kell adnia. Ha az ügyfélnek több olyan tanúsítványa van, az ügyfél képes-e egy <xref:System.Net.Security.LocalCertificateSelectionCallback>Válassza ki a megfelelő tanúsítványt a kiszolgáló a delegált.</xref:System.Net.Security.LocalCertificateSelectionCallback> Az ügyféltanúsítványok az aktuális felhasználó &quot;Én&quot; tanúsítványtárolójában kell lennie. Ügyfél-hitelesítés tanúsítványok keresztül nem támogatott a <xref:System.Security.Authentication.SslProtocols>(2. verziójú SSL) protokoll.</xref:System.Security.Authentication.SslProtocols>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és a SslStream már nem lehet felhasználni.</xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt.       Ha a hitelesítési folyamatot, más néven az SSL-kézfogásra, sikeres, a kiszolgáló (és szükség esetén az ügyfél) identitásának jön létre, és a SslStream használhatja az ügyfél és kiszolgáló üzenetek. Adatokat küld vagy fogad, mielőtt az ügyfél és kiszolgáló ellenőrizze a biztonsági szolgáltatásait és meghatározni, hogy a protokoll, az algoritmusok és a kiválasztott szintjeiről meg sértetlenségét és bizalmasságát az követelményei SslStream által biztosított szintek. Ha a jelenlegi beállításai nem megfelelőek, az adatfolyam be kell zárni. Ellenőrizheti a SslStream használata által nyújtott biztonsági szolgáltatások a <xref:System.Net.Security.SslStream.IsEncrypted%2A>és <xref:System.Net.Security.SslStream.IsSigned%2A>Tulajdonságok.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Az alábbi táblázat az elemeket, amelyek a hitelesítési, titkosítási és aláírási adatokat használt kriptográfiai beállítások jelentést.      | Elem |} Tagok |}   |-------------|-------------|   | A kiszolgáló, és szükség esetén az ügyfél hitelesítésére használt biztonsági protokollt. |} A <xref:System.Net.Security.SslStream.SslProtocol%2A>tulajdonság és a kapcsolódó <xref:System.Security.Authentication.SslProtocols>számbavétel. |}   | A kulcscsere-algoritmus. |} A <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>tulajdonság és a kapcsolódó <xref:System.Security.Authentication.ExchangeAlgorithmType>számbavétel. |}   | Az üzenet integritási algoritmust. |} A <xref:System.Net.Security.SslStream.HashAlgorithm%2A>tulajdonság és a kapcsolódó <xref:System.Security.Authentication.HashAlgorithmType>számbavétel. |}   | Az üzenet bizalmas algoritmust. |} A <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>tulajdonság és a kapcsolódó <xref:System.Security.Authentication.CipherAlgorithmType>számbavétel. |}   | A kijelölt algoritmusok szintjeiről. |} A <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> <xref:System.Net.Security.SslStream.HashStrength%2A>, és <xref:System.Net.Security.SslStream.CipherStrength%2A>tulajdonságait. |}       A sikeres hitelesítés után küldhet adatokat, és a szinkron <xref:System.Net.Security.SslStream.Write%2A>vagy aszinkron <xref:System.Net.Security.SslStream.BeginWrite%2A>módszerek.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> A szinkron adatokat fogadhat <xref:System.Net.Security.SslStream.Read%2A>vagy aszinkron <xref:System.Net.Security.SslStream.BeginRead%2A>módszerek.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Ha a megadott a <xref:System.Net.Security.SslStream.%23ctor%2A>, hogy az alapul szolgáló folyam nyitva kell hagyni, a felhasználó felelőssége, hogy az adatfolyam lezárása, amikor elkészült használatával.</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] > Az alkalmazást, amely a SslStream-objektumot hoz létre a normál felhasználói hitelesítő adatokkal futtatja, ha az alkalmazás nem lesz telepítve a helyi számítógép tárolójában, kivéve, ha az engedély explicit módon megkapta-e a felhasználó ehhez tanúsítványok hozzáférhetnek.       SslStream feltételezi, hogy együtt más időtúllépés <xref:System.IO.IOException>Amikor egy történt a belső stream kezeli a program a végzetes a hívónak.</xref:System.IO.IOException> Újbóli felhasználása a SslStream példánya, után egy időtúllépési szemétgyűjtési ad vissza. Az alkalmazás-érdemes <xref:System.IO.Stream.Close%2A>SslStream és throw ezekben az esetekben kivétel.</xref:System.IO.Stream.Close%2A>       A .NET-keretrendszer 4.6-os tartalmaz egy új biztonsági funkció, amely megakadályozza a nem biztonságos titkosítási és kivonatoló algoritmusokat kapcsolatokhoz. Alkalmazások, a TLS/SSL használatára, például HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, stb. API-k segítségével, és a .NET-keretrendszer 4.6-e állítva a biztonságosabb viselkedés alapértelmezés szerint beolvasása.       A fejlesztők szeretné ezt a viselkedést tilthatják le a meglévő SSL3 szolgáltatások vagy TLS keresztüli RC4 szolgáltatások rendelkező együttműködés megőrzése érdekében. [Ez a cikk](https://support.microsoft.com/kb/3069494) azt ismerteti, hogyan lehet módosítani a kódot, hogy az új funkció le van tiltva.       A .NET-keretrendszer 4.6.3 pontját hozzáadja a tudják hitelesíteni magukat, hogy ne adjon meg egy TLS verziójában, de Ehelyett használja a TLS-verziója, a rendszer alapértelmezés szerint definiált SslStreams módszer új túlterhelések [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Az alábbi módszerekkel az alkalmazás egyik módja később módosíthatja az alapértelmezett beállításokat, TLS bevált gyakorlat megváltozik a verzió idővel nélkül építse újra, és telepítse újra az alkalmazást."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> osztály a megadott <xref:System.IO.Stream>.</xref:System.IO.Stream> használatával"
  remarks: "Ha az érték nincs megadva a konfigurációs fájlban encryptionpolicy, a <xref:System.Net.Security.EncryptionPolicy>alapértelmezés szerint az <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>a a <xref:System.Net.Security.SslStream>példány összeállított.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       A Null titkosítás használata esetén szükséges <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> a titkosítási házirend beállítása"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>a rendszer nem olvasható.       – vagy – <code>innerStream</code> nem írhatónak kell lennie."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>innerStream</code> egyenlő <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> használata a megadott osztály <xref:System.IO.Stream>és adatfolyam-megszüntetésre viselkedés.</xref:System.IO.Stream>"
  remarks: "Megadása `true` a a `leaveStreamOpen` paraméter bezárása a <xref:System.Net.Security.SslStream>nincs hatása a `innerStream` streamelni; explicit módon be kell zárnia `innerStream` Ha már nem kell azt.</xref:System.Net.Security.SslStream>       Ha az érték nincs megadva a konfigurációs fájlban encryptionpolicy, a <xref:System.Net.Security.EncryptionPolicy>alapértelmezés szerint az <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>a a <xref:System.Net.Security.SslStream>példány összeállított.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       A Null titkosítás használata esetén szükséges <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> a titkosítási házirend beállítása"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Logikai érték, amely jelzi a megszüntetésre viselkedését a <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream> Ez a paraméter azt jelzi, ha a belső stream marad nyitva."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>a rendszer nem olvasható.       – vagy – <code>innerStream</code> nem írhatónak kell lennie."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>innerStream</code> egyenlő <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> használata a megadott osztály <xref:System.IO.Stream>, adatfolyamként megszüntetésre viselkedését, és a tanúsítvány érvényesítési delegált.</xref:System.IO.Stream>"
  remarks: "Megadása `true` a a `leaveStreamOpen` paraméter bezárása a <xref:System.Net.Security.SslStream>nincs hatása a `innerStream` streamelni; explicit módon be kell zárnia `innerStream` Ha már nem kell azt.</xref:System.Net.Security.SslStream>       A `userCertificateValidationCallback` meghatalmazott `certificateErrors` argumentum a csatorna biztonsági támogatás felületén (SSPI) által visszaadott Windows hibakódot tartalmaz. Az eredményül kapott értéket a által meghívott metódus a `userCertificateValidationCallback` delegált határozza meg, hogy a hitelesítés sikeres.       A biztonsági protokoll és a titkosítási algoritmusok már vannak-e jelölve, ha a `userCertificateValidationCallback` meghatalmazott metódus meghívja. A metódus segítségével a kijelölt titkosítási algoritmusok és szintjeiről van-e elegendő-e az alkalmazás számára. Ha nem, a módszer kell visszaadnia `false` megelőzése érdekében a <xref:System.Net.Security.SslStream>jöjjön létre.</xref:System.Net.Security.SslStream>       Ha az érték nincs megadva a konfigurációs fájlban encryptionpolicy, a <xref:System.Net.Security.EncryptionPolicy>alapértelmezés szerint az <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>a a <xref:System.Net.Security.SslStream>példány összeállított.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       A Null titkosítás használata esetén szükséges <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> a titkosítási házirend beállítása      > [!NOTE] > Gyorsítótárazza az SSL-munkameneteket, azok létrehozásakor és a gyorsítótárazott munkamenet egy új kérelem, ha lehetséges újból megkísérli a keretében. SSL-munkamenet újból megkísérelte a keretrendszer használja-e az első elemének <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(ha van ilyen), vagy próbálja meg újból egy névtelen munkamenetek, ha <xref:System.Net.HttpWebRequest.ClientCertificates%2A>üres.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > Ügyfél tanúsítványokat nem támogatja az SSL protokoll verziójának 2."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Logikai érték, amely jelzi a megszüntetésre viselkedését a <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream> Ez a paraméter azt jelzi, ha a belső stream marad nyitva."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegált érvényesíteni a tanúsítványt, a távoli fél által biztosított felelős."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>a rendszer nem olvasható.       – vagy – <code>innerStream</code> nem írhatónak kell lennie."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>innerStream</code> egyenlő <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> használata a megadott osztály <xref:System.IO.Stream>, megszüntetésre viselkedés, a tanúsítvány érvényesítési delegált és a tanúsítvány kiválasztása delegált adatfolyamként.</xref:System.IO.Stream>"
  remarks: "Megadása `true` a a `leaveStreamOpen` paraméter bezárása a <xref:System.Net.Security.SslStream>nincs hatása a `innerStream` streamelni; explicit módon be kell zárnia `innerStream` Ha már nem kell azt.</xref:System.Net.Security.SslStream>       A `userCertificateValidationCallback` meghatalmazott `certificateErrors` argumentum a csatorna biztonsági támogatás felületén (SSPI) által visszaadott Windows hibakódot tartalmaz. Az eredményül kapott értéket a által meghívott metódus a `userCertificateValidationCallback` delegált határozza meg, hogy a hitelesítés sikeres.       A biztonsági protokoll és a titkosítási algoritmusok már vannak-e jelölve, ha a `userCertificateValidationCallback` meghatalmazott metódus meghívja. A metódus segítségével a kijelölt titkosítási algoritmusok és szintjeiről van-e elegendő-e az alkalmazás számára. Ha nem, a módszer kell visszaadnia `false` megelőzése érdekében a <xref:System.Net.Security.SslStream>jöjjön létre.</xref:System.Net.Security.SslStream>       A `userCertificateSelectionCallback` delegált akkor hasznos, ha az alkalmazás több tanúsítvány rendelkezik, és dinamikusan ki kell választania egy tanúsítványt. A &quot;MY&quot; tárban kerülnek átadásra a delegált által meghívott metódus.       Ha az érték nincs megadva a konfigurációs fájlban encryptionpolicy, a <xref:System.Net.Security.EncryptionPolicy>alapértelmezés szerint az <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>a a <xref:System.Net.Security.SslStream>példány összeállított.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       A Null titkosítás használata esetén szükséges <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> a titkosítási házirend beállítása      > [!NOTE] > Gyorsítótárazza az SSL-munkameneteket, azok létrehozásakor és a gyorsítótárazott munkamenet egy új kérelem, ha lehetséges újból megkísérli a keretében. SSL-munkamenet újból megkísérelte keretében használja-e az első elemének P:System.Net.HttpWebRequest.ClientCertificates (ha van ilyen), vagy próbálja újból egy névtelen munkamenetek P:System.Net.HttpWebRequest.ClientCertificates esetén üres."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Logikai érték, amely jelzi a megszüntetésre viselkedését a <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream> Ez a paraméter azt jelzi, ha a belső stream marad nyitva."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegált érvényesíteni a tanúsítványt, a távoli fél által biztosított felelős."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "A <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegált felelős a hitelesítéshez használt tanúsítvány kiválasztásához."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>a rendszer nem olvasható.       – vagy – <code>innerStream</code> nem írhatónak kell lennie."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>innerStream</code> egyenlő <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> használata a megadott osztály<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "A Null titkosítás használatát megadása kötelező, ha a `encryptionPolicy` <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> paraméter beállítása"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Logikai érték, amely jelzi a megszüntetésre viselkedését a <xref:System.IO.Stream>objektum által használt a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> vonatkozó adatot küldeni és fogadni.</xref:System.IO.Stream> Ez a paraméter azt jelzi, ha a belső stream marad nyitva."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "A <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegált érvényesíteni a tanúsítványt, a távoli fél által biztosított felelős."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "A <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegált felelős a hitelesítéshez használt tanúsítvány kiválasztásához."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>a rendszer nem olvasható.       – vagy – <code>innerStream</code> nem írhatónak kell lennie.       – vagy – <code>encryptionPolicy</code> érvénytelen."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>innerStream</code> egyenlő <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A kiszolgáló hitelesítésére az ügyfelek, és választhatóan egy ügyfél-kiszolgáló közötti kapcsolat az ügyfél által meghívott."
  remarks: "Ez a módszer hitelesíti <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> használatával A hitelesítés nem ügyféltanúsítvány használnak. A visszavont tanúsítványok listáját nem be van jelölve, a hitelesítés során. A megadott `targetHost` egyeznie kell a kiszolgáló nevével.       Ha a hitelesítés sikeres, ellenőrizze a <xref:System.Net.Security.SslStream.IsEncrypted%2A>és <xref:System.Net.Security.SslStream.IsSigned%2A>annak meghatározásához, hogy milyen biztonsági szolgáltatások a <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> által használt tulajdonságok</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Ellenőrizze a <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>tulajdonság határozza meg, hogy történt-e a kölcsönös hitelesítés.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Az a kiszolgáló neve, amely megosztja ezt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – használja a kiszolgálóhitelesítés <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A kiszolgáló hitelesítésére az ügyfelek, és választhatóan egy ügyfél-kiszolgáló közötti kapcsolat az ügyfél által meghívott. A hitelesítési folyamat a megadott gyűjtemény és az SSL protokollt használja."
  remarks: "Ha a hitelesítés sikeres, ellenőrizze a <xref:System.Net.Security.SslStream.IsEncrypted%2A>és <xref:System.Net.Security.SslStream.IsSigned%2A>annak meghatározásához, hogy milyen biztonsági szolgáltatások a <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> által használt tulajdonságok</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Ellenőrizze a <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>tulajdonság határozza meg, hogy történt-e a kölcsönös hitelesítés.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt.      > [!NOTE] > Ügyfél tanúsítványokat nem támogatja az SSL protokoll verziójának 2."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Az a kiszolgáló neve, amely megosztja ezt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> , amely tartalmazza az ügyféltanúsítványokat."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "A <xref:System.Security.Authentication.SslProtocols>szám, amely a hitelesítéshez használt protokoll.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy a visszavont tanúsítványok listáját be van jelölve, a hitelesítés során.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hívja meg a kiszolgáló hitelesítésére az ügyfelek, és választhatóan egy ügyfél-kiszolgáló kapcsolatot egy aszinkron művelet, az ügyfél számára."
  remarks: "Ez a módszer hitelesíti <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> használatával A hitelesítés nem ügyféltanúsítvány használnak. A visszavont tanúsítványok listáját nem be van jelölve, a hitelesítés során. A megadott `targetHost` egyeznie kell a kiszolgáló nevével.       Ha a hitelesítés sikeres, ellenőrizze a <xref:System.Net.Security.SslStream.IsEncrypted%2A>és <xref:System.Net.Security.SslStream.IsSigned%2A>annak meghatározásához, hogy milyen biztonsági szolgáltatások a <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> által használt tulajdonságok</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Ellenőrizze a <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>tulajdonság határozza meg, hogy történt-e a kölcsönös hitelesítés.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Az a kiszolgáló neve, amely megosztja ezt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Beolvasása <xref:System.Threading.Tasks.Task>az aszinkron művelet képviselő feladat objektum.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – használja a kiszolgálóhitelesítés <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Hívja meg a kiszolgáló hitelesítésére az ügyfelek, és választhatóan egy ügyfél-kiszolgáló kapcsolatot egy aszinkron művelet, az ügyfél számára. A hitelesítési folyamat a megadott gyűjtemény és az SSL protokollt használja."
  remarks: "Ha a hitelesítés sikeres, ellenőrizze a <xref:System.Net.Security.SslStream.IsEncrypted%2A>és <xref:System.Net.Security.SslStream.IsSigned%2A>annak meghatározásához, hogy milyen biztonsági szolgáltatások a <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> által használt tulajdonságok</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Ellenőrizze a <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>tulajdonság határozza meg, hogy történt-e a kölcsönös hitelesítés.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt.      > [!NOTE] > Ügyfél tanúsítványokat nem támogatja az SSL protokoll verziójának 2."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Az a kiszolgáló neve, amely megosztja ezt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> , amely tartalmazza az ügyféltanúsítványokat."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "A <xref:System.Security.Authentication.SslProtocols>szám, amely a hitelesítéshez használt protokoll.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy a visszavont tanúsítványok listáját be van jelölve, a hitelesítés során.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Beolvasása <xref:System.Threading.Tasks.Task>az aszinkron művelet képviselő feladat objektum.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kiszolgálók hitelesíteni tudják a kiszolgáló, és választhatóan egy ügyfél-kiszolgáló kapcsolatot a megadott tanúsítványt használ az ügyfél által meghívott."
  remarks: "Ez a módszer hitelesíti <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> használatával A visszavont tanúsítványok listáját nem be van jelölve, a hitelesítés során. Az ügyfél nem adja meg a tanúsítványt a hitelesítéshez szükséges.       Ez a módszer tiltása, a művelet befejezéséig. A művelet befejeződéséig blokkolja megakadályozásához használja egyik a <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metódus túlterhelések.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "A kiszolgáló hitelesítéséhez használt tanúsítványt."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – ügyfél-hitelesítéshez Ez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A <xref:System.Net.Security.SslStream.AuthenticateAsServer*>metódus nem támogatott a Windows 95, a Windows 98 vagy a Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kiszolgálók hitelesíteni tudják a kiszolgálót, és opcionálisan az ügyfél számára a megadott tanúsítványokkal, követelmények és biztonsági protokoll ügyfél-kiszolgáló kapcsolatot hívja."
  remarks: "Ez a módszer tiltása, a művelet befejezéséig. A művelet befejeződéséig blokkolja megakadályozásához használja egyik a <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metódus túlterhelések.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az x.509 használja a kiszolgáló hitelesítésére."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy az ügyfél kapcsolatba egy hitelesítési tanúsítvány.</xref:System.Boolean> Megjegyzés: Ez csak egy kérelemre biztosítása esetén is nincs tanúsítvány a kiszolgáló továbbra is elfogadja a kapcsolódási kérelmet."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "A <xref:System.Security.Authentication.SslProtocols>szám, amely a hitelesítéshez használt protokoll.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy a visszavont tanúsítványok listáját be van jelölve, a hitelesítés során.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>Érvénytelen <xref:System.Security.Authentication.SslProtocols> érték."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – ügyfél-hitelesítéshez Ez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A <xref:System.Net.Security.SslStream.AuthenticateAsServer*>metódus nem támogatott a Windows 95, a Windows 98 vagy a Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kiszolgálók hitelesíteni tudják a kiszolgálót, és választhatóan egy ügyfél-kiszolgáló közötti kapcsolat egy aszinkron művelet a megadott tanúsítvány használatával az ügyfél által meghívott."
  remarks: "Ez a módszer hitelesíti <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> használatával A visszavont tanúsítványok listáját nem be van jelölve, a hitelesítés során. Az ügyfél nem adja meg a tanúsítványt a hitelesítéshez szükséges.       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "A kiszolgáló hitelesítéséhez használt tanúsítványt."
    return:
      type: System.Threading.Tasks.Task
      description: "Beolvasása <xref:System.Threading.Tasks.Task>az aszinkron művelet képviselő feladat objektum.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – ügyfél-hitelesítéshez Ez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A <xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>metódus nem támogatott a Windows 95, a Windows 98 vagy a Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Kiszolgálók hitelesíteni tudják a kiszolgáló, és választhatóan egy ügyfél-kiszolgáló kapcsolatot egy aszinkron művelet a megadott tanúsítványok, a követelmények és a biztonsági protokoll használatával az ügyfél által meghívott."
  remarks: "Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az x.509 használja a kiszolgáló hitelesítésére."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy az ügyfél kapcsolatba egy hitelesítési tanúsítvány.</xref:System.Boolean> Megjegyzés: Ez csak egy kérelemre biztosítása esetén is nincs tanúsítvány a kiszolgáló továbbra is elfogadja a kapcsolódási kérelmet."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "A <xref:System.Security.Authentication.SslProtocols>szám, amely a hitelesítéshez használt protokoll.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy a visszavont tanúsítványok listáját be van jelölve, a hitelesítés során.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Beolvasása <xref:System.Threading.Tasks.Task>az aszinkron művelet képviselő feladat objektum.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A kiszolgáló hitelesítésére az aszinkron művelet kezdőpontjaként ügyfelek, és opcionálisan az ügyfél által meghívott."
  remarks: "Ez a módszer hitelesíti <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> használatával A hitelesítés nem ügyféltanúsítvány használnak. A visszavont tanúsítványok listáját nem be van jelölve, a hitelesítés során.       A megadott `targetHost` egyeznie kell a kiszolgáló nevével.       Hívja a hitelesítési aszinkron műveletet kell végrehajtania a <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metódus.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> A metódus által indított általában a `asyncCallback` delegálni.       Ez a módszer nem blokkolható, amíg a művelet befejeződik. Csak a művelet befejeződése után letilthatja, valamelyikével a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metódus túlterhelések.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Az aszinkron programozási modell használatával kapcsolatos részletes információkért lásd: [hívása szinkron módszerek aszinkron módon](~/add/includes/ajax-current-ext-md.md) Ha megjelenik egy <xref:System.Security.Authentication.AuthenticationException>, a <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Az a kiszolgáló neve, amely megosztja ezt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>a hitelesítési befejezésekor a meghívni kívánt metódus hivatkozó delegált.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "A felhasználói objektum, amely tartalmazza a műveletekre vonatkozó információk. Ez az objektum átadott a `asyncCallback` delegálása a művelet befejeződése után."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>objektum, amely az aszinkron művelet állapotát jelzi.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – használja a kiszolgálóhitelesítés <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A kiszolgáló hitelesítésére az aszinkron művelet kezdőpontjaként ügyfelek, és opcionálisan az ügyfél a megadott tanúsítványokkal és a biztonsági protokoll által meghívott."
  remarks: "A megadott `targetHost` egyeznie kell a kiszolgáló nevével.       Hívja a hitelesítési aszinkron műveletet kell végrehajtania a <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metódus.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> A metódus által indított általában a `asyncCallback` delegálni.       Ez a módszer nem blokkolható, amíg a művelet befejeződik. Csak a művelet befejeződése után letilthatja, valamelyikével a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metódus túlterhelések.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Az aszinkron programozási modell használatával kapcsolatos részletes információkért lásd: [hívása szinkron módszerek aszinkron módon](~/add/includes/ajax-current-ext-md.md) Ha megjelenik egy <xref:System.Security.Authentication.AuthenticationException>, a <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt.      > [!NOTE] > Ügyfél tanúsítványokat nem támogatja az SSL protokoll verziójának 2."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Az a kiszolgáló neve, amely megosztja ezt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "A <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> tartalmazó ügyféltanúsítványokat."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "A <xref:System.Security.Authentication.SslProtocols>szám, amely a hitelesítéshez használt protokoll.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy a visszavont tanúsítványok listáját be van jelölve, a hitelesítés során.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>a hitelesítési befejezésekor a meghívni kívánt metódus hivatkozó delegált.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "A felhasználói objektum, amely tartalmazza a műveletekre vonatkozó információk. Ez az objektum átadott a `asyncCallback` delegálása a művelet befejeződése után."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>objektum, amely az aszinkron művelet állapotát jelzi.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>Érvénytelen <xref:System.Security.Authentication.SslProtocols> érték."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – használja a kiszolgálóhitelesítés <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Az ügyfél hitelesítésére egy aszinkron művelet kezdőpontjaként kiszolgálók, és választhatóan egy ügyfél-kiszolgáló közötti kapcsolat a kiszolgáló által meghívott."
  remarks: "Ez a módszer hitelesíti <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> használatával A visszavont tanúsítványok listáját nem be van jelölve, a hitelesítés során. Az ügyfél nem adja meg a tanúsítványt a hitelesítéshez szükséges.       Hívja a hitelesítési aszinkron műveletet kell végrehajtania a <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metódus.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> A metódus által indított általában a `asyncCallback` delegálni.       Ez a módszer nem blokkolható, amíg a művelet befejeződik. Csak a művelet befejeződése után letilthatja, valamelyikével a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metódus túlterhelések.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Az aszinkron programozási modell használatával kapcsolatos részletes információkért lásd: [hívása szinkron módszerek aszinkron módon](~/add/includes/ajax-current-ext-md.md) Ha megjelenik egy <xref:System.Security.Authentication.AuthenticationException>, a <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az x.509 használja a kiszolgáló hitelesítésére."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>a hitelesítési befejezésekor a meghívni kívánt metódus hivatkozó delegált.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "A felhasználói objektum, amely tartalmazza a műveletekre vonatkozó információk. Ez az objektum átadott a `asyncCallback` delegálása a művelet befejeződése után."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>az aszinkron művelet állapotát jelző objektumra.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – ügyfél-hitelesítéshez Ez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>metódus nem támogatott a Windows 95, a Windows 98 vagy a Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A kiszolgáló, és opcionálisan megadott tanúsítványok, követelmények és biztonsági protokoll használatával az ügyfél hitelesítésére egy aszinkron művelet kezdőpontjaként kiszolgálók által meghívott."
  remarks: "Hívja a hitelesítési aszinkron műveletet kell végrehajtania a <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>metódus.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> A metódus által indított általában a `asyncCallback` delegálni.       Ez a módszer nem blokkolható, amíg a művelet befejeződik. Csak a művelet befejeződése után letilthatja, valamelyikével a <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>metódus túlterhelések.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Az aszinkron programozási modell használatával kapcsolatos részletes információkért lásd: [hívása szinkron módszerek aszinkron módon](~/add/includes/ajax-current-ext-md.md) Ha megjelenik egy <xref:System.Security.Authentication.AuthenticationException>, a <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Az x.509 használja a kiszolgáló hitelesítésére."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy az ügyfél kapcsolatba egy hitelesítési tanúsítvány.</xref:System.Boolean> Megjegyzés: Ez csak egy kérelemre biztosítása esetén is nincs tanúsítvány a kiszolgáló továbbra is elfogadja a kapcsolódási kérelmet."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "A <xref:System.Security.Authentication.SslProtocols>szám, amely a hitelesítéshez használt protokoll.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "A <xref:System.Boolean>érték, amely meghatározza, hogy a visszavont tanúsítványok listáját be van jelölve, a hitelesítés során.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>a hitelesítési befejezésekor a meghívni kívánt metódus hivatkozó delegált.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "A felhasználói objektum, amely tartalmazza a műveletekre vonatkozó információk. Ez az objektum átadott a `asyncCallback` delegálása a művelet befejeződése után."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>objektum, amely az aszinkron művelet állapotát jelzi.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>Érvénytelen <xref:System.Security.Authentication.SslProtocols> érték."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés már megtörtént.       – vagy – használja a kiszolgálóhitelesítés <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> rendszer próbálta meg a korábban.       – vagy – hitelesítés már folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>metódus nem támogatott a Windows 95, a Windows 98 vagy a Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy aszinkron olvasási művelet, amely adatokat olvas be az adatfolyamból, és tárolja a megadott tömb kezdődik."
  remarks: "Aláírás és titkosítás engedélyezve vannak, ha az olvasási művelet beolvassa az adatokat az alapul szolgáló folyam, ellenőrzi az adatok integritását, és/vagy visszafejti. Az aszinkron olvasási művelet meghívásával kell végezni a <xref:System.Net.Security.SslStream.EndRead%2A>metódus.</xref:System.Net.Security.SslStream.EndRead%2A> A metódus által indított általában a `asyncCallback` delegálni.       Ez a módszer nem blokkolható, amíg a művelet befejeződik. Csak a művelet befejeződése után letilthatja, használja a <xref:System.Net.Security.SslStream.Read%2A>metódus.</xref:System.Net.Security.SslStream.Read%2A>       Az aszinkron programozási modell használatával kapcsolatos részletes információkért lásd: [hívása szinkron módszerek aszinkron módon](~/add/includes/ajax-current-ext-md.md) a <xref:System.Net.Security.SslStream>osztály nem támogatja több egyidejű olvasási műveleteket.</xref:System.Net.Security.SslStream>       Ez a metódus nem hívható meg, amíg sikeresen hitelesített. Hívás a hitelesítéshez a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>tömb, amely a bájtok fogadása az adatfolyamból beolvasott.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A nulla alapú helyét `buffer` kezdőpontját az adatok tárolása olvasható be az adatfolyamból."
    - id: count
      type: System.Int32
      description: "Az adatfolyamból beolvasott bájtok maximális száma."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>az olvasási művelet befejezésekor a meghívni kívánt metódus hivatkozó delegált.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "A felhasználói objektum, amely tartalmazza az olvasási műveletekre vonatkozó információk. Ez az objektum átadott a `asyncCallback` delegálása a művelet befejeződése után."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>objektum, amely az aszinkron művelet állapotát jelzi.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; hosszát <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az olvasási művelet sikertelen volt.       – vagy – a titkosítás van használatban, de nem sikerült visszafejteni az adatokat."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Már van egy olvasási művelet folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés nem történt meg."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy aszinkron írási művelet írja az kezdődik <xref:System.Byte>s származó a megadott puffer az adatfolyamra.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>tömb, amely megadja az adatfolyam írandó bájtok.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A nulla alapú helyét `buffer` kezdőpontját olvasásakor az adatfolyam írandó bájtok száma."
    - id: count
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a olvasni bájtok száma `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>az írási művelet befejezésekor a meghívni kívánt metódus hivatkozó delegált.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Egy felhasználói objektum, amely tartalmazza az írási művelet kapcsolatos információkat. Ez az objektum átadott a `asyncCallback` delegálása a művelet befejeződése után."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>az aszinkron művelet állapotát jelző objektumra.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; hosszát <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az írási művelet sikertelen volt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Már létezik egy írási művelet folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés nem történt meg."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely azt jelzi, hogy az alapul szolgáló folyam olvasható.</xref:System.Boolean>"
  remarks: "Ha sikeres hitelesítés történt, ez a tulajdonság meghívása által visszaadott értékét adja vissza <xref:System.IO.Stream.CanRead%2A>az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.CanRead%2A>       Az alapul szolgáló folyam <xref:System.Net.Security.SslStream>osztály</xref:System.Net.Security.SslStream> példányának létrehozásakor van megadva."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hitelesítési történt, és az alapul szolgáló folyam olvasható; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely azt jelzi, hogy az alapul szolgáló folyam kereshető.</xref:System.Boolean>"
  remarks: "Próbálja meg beállítani a helyzete a <xref:System.Net.Security.SslStream>objektumot vagy az alapul szolgáló adatfolyamon.</xref:System.Net.Security.SslStream>       Az alapul szolgáló folyam <xref:System.Net.Security.SslStream>osztály</xref:System.Net.Security.SslStream> példányának létrehozásakor van megadva."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy támogatja-e az alapul szolgáló folyam időtúllépéseket.</xref:System.Boolean>"
  remarks: "Ez a tulajdonság meghívása által visszaadott értékét adja vissza <xref:System.IO.Stream.CanTimeout%2A>az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.CanTimeout%2A>       Az alapul szolgáló folyam <xref:System.Net.Security.SslStream>osztály</xref:System.Net.Security.SslStream> példányának létrehozásakor van megadva."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az alapul szolgáló folyam támogatja az időtúllépést; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely azt jelzi, hogy az alapul szolgáló folyam írható.</xref:System.Boolean>"
  remarks: "Ha sikeres hitelesítés történt, ez a tulajdonság meghívása által visszaadott értékét adja vissza <xref:System.IO.Stream.CanWrite%2A>az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.CanWrite%2A>       Az alapul szolgáló folyam <xref:System.Net.Security.SslStream>osztály</xref:System.Net.Security.SslStream> példányának létrehozásakor van megadva."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hitelesítési történt, és az alapul szolgáló folyam írható; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy a visszavont tanúsítványok listáját be van jelölve, a tanúsítvány érvényesítési folyamat során.</xref:System.Boolean>"
  remarks: "A visszavont tanúsítványok listáját tartalmazza a kibocsátó visszavont tanúsítványokat. A lista ellenőrzése negatív hatással van a teljesítmény, de javítja az alkalmazások biztonságának."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jelölőnégyzet be van jelölve a visszavont tanúsítványok listájának; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy érték, amely azonosítja a tömeges titkosítási algoritmus által használt lekérdezi <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Érték <xref:System.Security.Authentication.CipherAlgorithmType>a CipherAlgorithm tulajdonság szükséges amikor a <xref:System.Net.Security.EncryptionPolicy>számbavételi érték segítségével hozza létre a <xref:System.Net.Security.SslStream>példány.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]és [!INCLUDE[winxp](~/add/includes/winxp-md.md)] nem támogatják a <xref:System.Security.Authentication.CipherAlgorithmType>érték.</xref:System.Security.Authentication.CipherAlgorithmType> Még akkor is, így ha az <xref:System.Security.Authentication.CipherAlgorithmType>érték alapján történik a <xref:System.Net.Security.SslStream>példány, a <xref:System.Net.Security.EncryptionPolicy>tulajdonság lesz <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> összeállításához</xref:System.Security.Authentication.CipherAlgorithmType> A <xref:System.Security.Authentication.CipherAlgorithmType>értéket csak akkor adja vissza, a Windows Vista és újabb verziók.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "A <xref:System.Security.Authentication.CipherAlgorithmType>érték.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A CipherAlgorithm tulajdonság lett érhető el, mielőtt a hitelesítési folyamat vagy a hitelesítési folyamat befejezése sikertelen volt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy érték, amely azonosítja a által használt titkosítási algoritmus lekérdezi <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Ez a tulajdonság értéke nulla, amíg nem történik a hitelesítés.       Ez a tulajdonság a következő értékek egyikét adja vissza: - 0 - 40-56-80 – 128 – 168-192 - 256-ra"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza az algoritmus a bits.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()`metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter értéke igaz, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja a <xref:System.Net.Security.SslStream>hivatkozik.</xref:System.Net.Security.SslStream> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Karakterlánccal végződik-e a függőben lévő aszinkron kiszolgálói hitelesítési műveletet egy korábbi hívás <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> használatába"
  remarks: "A művelet nem fejeződött be, ha ez a módszer letiltja a rendszer, amíg az hajtja végre. Ha a hitelesítés sikeres, ellenőrizze a <xref:System.Net.Security.SslStream.IsEncrypted%2A>és <xref:System.Net.Security.SslStream.IsSigned%2A>annak meghatározásához, hogy milyen biztonsági szolgáltatások a <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> által használt tulajdonságok</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Ellenőrizze a <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>tulajdonság határozza meg, hogy történt-e a kölcsönös hitelesítés.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt.       Ehhez a művelethez szinkron módon történik, tegye a <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>példány <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> hívás által visszaadott</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nem készült hívásával <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nincs nincs folyamatban lévő hitelesítés befejezéséhez."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Karakterlánccal végződik-e a függőben lévő aszinkron hitelesítési ügyfélművelet egy korábbi hívás <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> használatába"
  remarks: "A művelet nem fejeződött be, ha ez a módszer letiltja a rendszer, amíg az hajtja végre. Ha a hitelesítés sikeres, ellenőrizze a <xref:System.Net.Security.SslStream.IsEncrypted%2A>és <xref:System.Net.Security.SslStream.IsSigned%2A>annak meghatározásához, hogy milyen biztonsági szolgáltatások a <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> által használt tulajdonságok</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Ellenőrizze a <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>tulajdonság határozza meg, hogy történt-e a kölcsönös hitelesítés.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Ha a hitelesítés nem sikerül, akkor kap egy <xref:System.Security.Authentication.AuthenticationException>, és ez <xref:System.Net.Security.SslStream>már nem lehet felhasználni.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Zárja be ezt az objektumot kell, és úgy, hogy a szemétgyűjtő összegyűjthetők, távolítson el minden hivatkozást azt.       Ehhez a művelethez szinkron módon történik, tegye a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metódus.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>példány <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> hívás által visszaadott</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nem készült hívásával <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A hitelesítés sikertelen volt, és ez az objektum használhatatlan állapotban marad."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nincs függőben lévő ügyfél-hitelesítés elvégzéséhez van."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Befejeződik az aszinkron olvasási művelet egy korábbi hívás <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*> használatába"
  remarks: "A művelet nem fejeződött be, ha ez a módszer letiltja a rendszer, amíg az hajtja végre.       Ez a művelet szinkron módon végrehajtásához használja a <xref:System.Net.Security.SslStream.Read%2A>metódus.</xref:System.Net.Security.SslStream.Read%2A>       Ez a metódus nem hívható meg, amíg sikeresen hitelesített. Hívás a hitelesítéshez a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>hívás által visszaadott példány <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "A <xref:System.Int32>az alapul szolgáló adatfolyamból beolvasott érték, amely meghatározza a bájtok száma.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nem készült hívásával <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés nem történt meg."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az olvasási művelet sikertelen volt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Karakterlánccal végződik-e egy aszinkron írási művelet egy korábbi hívás <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*> használatába"
  remarks: "A művelet nem fejeződött be, ha ez a módszer letiltja a rendszer, amíg az hajtja végre.       Az alkalmazás a metódus nem hívható, amíg sikeresen hitelesítette. Hitelesítést végezni, hívja az egyik a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Ez a művelet szinkron módon végrehajtásához használja a <xref:System.Net.Security.SslStream.Write%2A>metódus.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>hívás által visszaadott példány <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>nem készült hívásával <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés nem történt meg."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az írási művelet sikertelen volt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A pufferelt adatokat írni az alapul szolgáló eszköz okozza."
  remarks: "Ez a metódus meghívja <xref:System.IO.Stream.Flush%2A>az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi az előállítása üzenet hitelesítési kód (Mac-eket) használt algoritmust."
  remarks: "Az üzenethitelesítési algoritmusok üzenetkivonatokat és aláírásokat érzékeli, illetéktelen módosítás és hamisítására készítése."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "A <xref:System.Security.Authentication.HashAlgorithmType>érték.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A HashAlgorithm tulajdonság elérésekor előtt a hitelesítési folyamat vagy a hitelesítési folyamat befejezése sikertelen volt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ez a példány által használt kivonatoló algoritmus erősségével azonosító érték beolvasása."
  remarks: "Ez a tulajdonság értéke nulla, amíg nem történik a hitelesítés."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a erősségével a <xref:System.Security.Authentication.HashAlgorithmType>algoritmus bit.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> Érvényes értékek a következők: 128 vagy 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy sikeres volt-e a hitelesítés.</xref:System.Boolean>"
  remarks: "Az ügyfelek meghívásával hitelesíteni a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Kiszolgálók meghívásával hitelesíteni a <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a sikeres hitelesítés történt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely azt jelzi, hogy ez <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> használja az adatok.</xref:System.Boolean>"
  remarks: "Titkosítási segít megvédeni az adatok védelme a, nevezetesen az segít biztosítani, hogy közben az átvitel során, akkor nem lehet visszafejteni harmadik felek által."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatok titkosítva a hálózaton keresztül továbbított előtt és visszafejtése amikor eléri a távoli végpont; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy kiszolgáló és az ügyfél hitelesített.</xref:System.Boolean>"
  remarks: "Kölcsönös hitelesítés van megadva a kiszolgáló, amikor a kiszolgáló által az ügyfél egy tanúsítványt adjon meg a hitelesítéshez."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kiszolgáló hitelesítése; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy a kapcsolat helyi oldalán használja a <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> kiszolgálóként hitelesítési.</xref:System.Boolean>"
  remarks: "Ha a hitelesítés sikertelen volt, vagy nem voltak végrehajthatók, ennek a tulajdonságnak adja vissza `false`.       Hitelesítse magát a kiszolgálót, hívja meg a <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a helyi végpont hitelesítése sikeresen megtörtént, a kiszolgálói oldalon a hitelesített kapcsolatot; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Boolean>érték, amely jelzi, hogy az adatok küldése az adatfolyam van aláírva,.</xref:System.Boolean>"
  remarks: "Segít az adatok integritását aláírni az adatokat, nevezetesen segít a címzettje határozza meg, hogy az adatok módosították az átvitel során."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatok alá van írva, mielőtt titkosítatlanul; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a kulcscsere-algoritmus által használt <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Ez a tulajdonság értéke <xref:System.Security.Authentication.ExchangeAlgorithmType>amíg nem történik a hitelesítés.</xref:System.Security.Authentication.ExchangeAlgorithmType>       A kulcscsere-algoritmus védelmet nyújt a megosztott kulcsok létrehozásához használt információnak."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "Egy <xref:System.Security.Authentication.ExchangeAlgorithmType>érték.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a kulcscsere-algoritmus Ez a példány által használt azonosító érték."
  remarks: "Ez a tulajdonság értéke nulla, amíg nem történik a hitelesítés.       Az általános esetben, ez a tulajdonság értéke a következők egyikét: - 512-768-az 1024 – 2048-ra"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a erősségével a <xref:System.Security.Authentication.ExchangeAlgorithmType>algoritmus bit.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi az alapul szolgáló folyam hosszát."
  remarks: "Ez a tulajdonság meghívása által visszaadott értékét adja vissza <xref:System.IO.Stream.Length%2A>az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.Length%2A> Ha az alapul szolgáló folyam nem kereshető, ez a módszer általában kivételt. Az alapul szolgáló folyam futásidejű típusa meghatározza, hogy a kivételt vált ki, futásidejű típusa."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Az alapul szolgáló folyam hosszát."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ez a tulajdonság értékének kiolvasásakor nem támogatott, ha az alapul szolgáló folyam egy <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a helyi végpont hitelesítéséhez használt tanúsítványt."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Egy x.509-objektum, amely a hitelesítéshez megadott tanúsítványt jelöl vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha tanúsítványa nem lett megadva."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A hitelesítés sikertelen volt, vagy nem történt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi vagy beállítja az aktuális pozíció az alapul szolgáló adatfolyamban."
  remarks: "Ez a tulajdonság meghívása által visszaadott értékét adja vissza <xref:System.IO.Stream.Position%2A>az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.Position%2A> Ha az alapul szolgáló folyam nem kereshető, ez a módszer általában kivételt. Az alapul szolgáló folyam futásidejű típusa meghatározza, hogy a kivételt vált ki, futásidejű típusa."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Az aktuális pozíció az alapul szolgáló adatfolyamban."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ez a tulajdonság beállítása nem támogatott.       – vagy – ez a tulajdonság értékének kiolvasásakor nem támogatott, ha az alapul szolgáló folyam egy <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Az adatfolyam olvassa be az adatokat, és tárolja a megadott tömb."
  remarks: "A metódus beolvassa legfeljebb `count` be az adatfolyamból bájt, és eltárolja azokat `buffer` kezdődően `offset`. Több egyidejű olvasási művelet nem hajtható végre.       Ez a metódus nem hívható meg, amíg sikeresen hitelesített. Hívás a hitelesítéshez a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Ez a művelet végrehajtásához aszinkron módon használja a <xref:System.Net.Security.SslStream.BeginRead%2A>metódus.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>tömb, amely a bájtok fogadása az adatfolyamból beolvasott.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A <xref:System.Int32>, amely tartalmazza a nulla alapú helyét `buffer` az adatfolyamból beolvasott az adatok tárolása kezdőpontját.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "A <xref:System.Int32>, amely tartalmazza az adatfolyamból beolvasott bájtok maximális száma.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "A <xref:System.Int32>érték, amely meghatározza az olvasott bájtok számát.</xref:System.Int32> Ha nincs elfogytak az adatok olvasását, a 0 értéket adja vissza."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; hosszát <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az olvasási művelet sikertelen volt. A belső kivételben találhatók, akkor ellenőrizze, hogy elérhető a hiba okának megállapításához."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Már van egy olvasási művelet folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés nem történt meg."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi vagy beállítja az olvasási művelet megakadályozza az adatok várakozási időt."
  remarks: "Ez a tulajdonság meghívása által visszaadott értékét adja vissza <xref:System.IO.Stream.ReadTimeout%2A>az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.ReadTimeout%2A> Ez a tulajdonság beállításakor a <xref:System.IO.Stream.ReadTimeout%2A>az alapul szolgáló adatfolyamon értéket a megadott értékre van beállítva.</xref:System.IO.Stream.ReadTimeout%2A>       Ha az alapul szolgáló folyam egy <xref:System.Net.Sockets.NetworkStream>, ReadTimeout ezredmásodpercben, amelynek beállítása <xref:System.Threading.Timeout.Infinite>úgy, hogy olvasási műveletek nem időtúllépés tegye alapértelmezés szerint.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>, amely meghatározza, hogy az időt, amely után a egy aszinkron olvasási művelet sikertelen lesz.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a távoli végpont hitelesítéséhez használt tanúsítványt."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Egy x.509-objektum, amely a hitelesítéshez megadott tanúsítványt jelöl vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha tanúsítványa nem lett megadva."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A hitelesítés sikertelen volt, vagy nem történt."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Egy <xref:System.NotSupportedException>.</xref:System.NotSupportedException> jelez"
  remarks: "Ez a metódus nem hívható. Örökölt, de nem támogatja az <xref:System.Net.Security.SslStream>osztályhoz.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Ezt az értéket a rendszer figyelmen kívül hagyja."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Ezt az értéket a rendszer figyelmen kívül hagyja."
    return:
      type: System.Int64
      description: "Mindig jelez <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Által nem támogatott <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> objektumok."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Beállítja az alapul szolgáló folyam hosszát."
  remarks: "Ez a metódus meghívja <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>meg, ha az alapul szolgáló adatfolyamon ez <xref:System.Net.Security.SslStream>lett létrehozva.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Egy <xref:System.Int64>érték, amely meghatározza az adatfolyam hossza.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi egy érték, amely azt jelzi, a biztonsági protokoll, a kapcsolat hitelesítéséhez szeretne használni."
  remarks: "A támogatott biztonsági protokollok vannak megadva. Ha a <xref:System.Net.Security.SslStream>jön létre.</xref:System.Net.Security.SslStream> Ha nincs biztonsági protokoll a konstruktornak átadott, a példány létrehozásakor <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> használatával A tényleges protokoll által használt hitelesítés van kiválasztva, az ügyfél és a kiszolgáló által támogatott protokollok alapján."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "A <xref:System.Security.Authentication.SslProtocols>szám, amely a hitelesítéshez használt protokoll.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi a <xref:System.Net.TransportContext>kiterjesztett védelem használata a hitelesítéshez használt.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "A <xref:System.Net.TransportContext>objektum, amely tartalmazza a csatorna kötő jogkivonat (CBT) használt a bővített védelmet.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A megadott adatokat ír az adatfolyam."
  remarks: "Ez a módszer blokkol, miközben a művelet befejeződik. Ha szeretné megakadályozni, letiltása, amíg a művelet befejeződik, használja a <xref:System.Net.Security.SslStream.BeginWrite%2A>metódus.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Ez a metódus nem hívható meg, amíg sikeresen hitelesített. Hívás a hitelesítéshez a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       A <xref:System.Net.Security.SslStream>osztály nem támogatja a több egyidejű írási műveleteket.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>tömb, amellyel a bájtok írt az adatfolyamra.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az írási művelet sikertelen volt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Már létezik egy írási művelet folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés nem történt meg."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "A megadott számú írási <xref:System.Byte>s az alapul szolgáló adatfolyamba megadott puffer és eltolását.</xref:System.Byte>"
  remarks: "Ez a módszer blokkol, miközben a művelet befejeződik. Megelőzése blokkolja, amíg a művelet befejeződik a művelet befejeződik, használja a <xref:System.Net.Security.SslStream.BeginWrite%2A>metódus.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Ez a metódus nem hívható meg, amíg sikeresen hitelesített. Hívás a hitelesítéshez a <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, vagy <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>módszerek.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       A <xref:System.Net.Security.SslStream>osztály nem támogatja a több egyidejű írási műveleteket.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>tömb, amellyel a bájtok írt az adatfolyamra.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "A <xref:System.Int32>, amely tartalmazza a nulla alapú helyét `buffer` olvasásakor az adatfolyam írandó bájtok kezdőpontját.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "A <xref:System.Int32>olvasni bájtok számát tartalmazó `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; hosszát <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Az írási művelet sikertelen volt."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Már létezik egy írási művelet folyamatban van."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hitelesítés nem történt meg."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lekérdezi vagy beállítja az írási művelet megakadályozza az adatok várakozási időt."
  remarks: "Ez a tulajdonság meghívása által visszaadott értékét adja vissza <xref:System.IO.Stream.WriteTimeout%2A>az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.WriteTimeout%2A> A set-műveleteket, a megadott érték megadása esetén a <xref:System.IO.Stream.WriteTimeout%2A>értéket az alapul szolgáló adatfolyamon.</xref:System.IO.Stream.WriteTimeout%2A>       Ha az alapul szolgáló folyam egy <xref:System.Net.Sockets.NetworkStream>, WriteTimeout ezredmásodpercben, amelynek beállítása <xref:System.Threading.Timeout.Infinite>, amely írási műveletek nem időtúllépés tegye, alapértelmezés szerint.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Int32>, amely meghatározza, hogy az időt, amely után a szinkron írási művelet sikertelen lesz.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
