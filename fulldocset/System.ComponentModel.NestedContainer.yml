### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.NestedContainer
  id: NestedContainer
  children:
  - System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  - System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  - System.ComponentModel.NestedContainer.GetService(System.Type)
  - System.ComponentModel.NestedContainer.Owner
  - System.ComponentModel.NestedContainer.OwnerName
  langs:
  - csharp
  name: NestedContainer
  nameWithType: NestedContainer
  fullName: System.ComponentModel.NestedContainer
  type: Class
  summary: "Az alapszintű megvalósítás biztosít a <xref href=&quot;System.ComponentModel.INestedContainer&quot;> </xref> felület, amely lehetővé teszi a tárolók tartalmaz egy tulajdonos összetevőt."
  remarks: "A NestedContainer osztály egy egyszerű végrehajtását a <xref:System.ComponentModel.INestedContainer>felület, amely meghatározza egy összetevő, amely logikailag nulla vagy több összetevőt tartalmaz, és tulajdonában van egy szülő-összetevő.</xref:System.ComponentModel.INestedContainer> Beágyazott tároló a viselkedés eltér a szabványos <xref:System.ComponentModel.Container>különféle módokon, például az alábbiakat:-jellemzők például a hely <xref:System.ComponentModel.Component.DesignMode%2A>és <xref:System.ComponentModel.Component.GetService%2A>a tulajdonos összetevő webhelyen keresztül továbbítódnak.</xref:System.ComponentModel.Component.GetService%2A> </xref:System.ComponentModel.Component.DesignMode%2A> </xref:System.ComponentModel.Container>      – A hely <xref:System.ComponentModel.ISite.Name%2A>tulajdonsága, amely tartalmazza a tulajdonos összetevő neve, végül pedig a pont (.) és a gyermek összetevőnév minősített nevet.</xref:System.ComponentModel.ISite.Name%2A>      - <xref:System.ComponentModel.NestedContainer.GetService%2A>támogatást nyújt a <xref:System.ComponentModel.INestedContainer>szolgáltatásként.</xref:System.ComponentModel.INestedContainer> </xref:System.ComponentModel.NestedContainer.GetService%2A>      -Ha a tulajdonos összetevő eldobása, a tároló eldobása is.       Emellett a tervezők kezelni beágyazott tárolók másképp. A Tervező állomás csak olyan több tároló iránt érdeklődik – a gazdagéphez tartozó egyik. Ezért összetevő hozzáadása, és távolítsa el az események vannak nem következik be, amikor egy összetevő van hozzá vagy nem távolítható el a beágyazott tároló. Azonban a beágyazott tárolóhoz áramlása szolgáltatások, mert összetevő állapotváltozási események vannak megváltozásakor kiváltott beágyazott tároló összetevőt.       A teljesítménybeli eltérést az események követése is hatással van a visszavonás működését, ami szerializálási kötődik. A szabványos visszavonási motor által <xref:System.ComponentModel.Design.IReferenceService>összetevők végzett változásainak követése.</xref:System.ComponentModel.Design.IReferenceService> Ha a visszavonás-motor nem tudja azonosítani a referencia-szolgáltatáson keresztül összetevő nevét, a motor figyelmen kívül hagyja az adott összetevő a módosításokat. Csak akkor, ha ugyanezen a néven: a tulajdonos nyilvános olvasási tulajdonságainak ki vannak téve a szolgáltatás automatikusan felismeri tartalmazott összetevők módosításait. Ellenkező esetben a fejlesztői át kell mennie összetevő állapotváltozási események akár a tulajdonosa. Például, ha egy beágyazott összetevő `Text` tulajdonság van resurfaced, mint a tulajdonos összetevő egy `Address` tulajdonság, ha a `Text` tulajdonság megváltozásakor következik be, egy tulajdonság programozott módon módosítani kell a megfelelő `Address` tulajdonság, vagy pedig, hogy módosítás nem követi a visszavonás által."
  syntax:
    content: 'public class NestedContainer : System.ComponentModel.Container, IDisposable, System.ComponentModel.INestedContainer'
  inheritance:
  - System.Object
  - System.ComponentModel.Container
  implements:
  - System.ComponentModel.INestedContainer
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Components
  - System.ComponentModel.Container.Dispose
  - System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: NestedContainer(IComponent)
  nameWithType: NestedContainer.NestedContainer(IComponent)
  fullName: System.ComponentModel.NestedContainer.NestedContainer(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ComponentModel.NestedContainer&quot;> </xref> osztály."
  remarks: "Ez a konstruktor felveszi a tulajdonos <xref:System.ComponentModel.IComponent.Disposed>esemény, hogy a beágyazott tároló <xref:System.ComponentModel.NestedContainer.Dispose%2A>metódus automatikusan hívható.</xref:System.ComponentModel.NestedContainer.Dispose%2A> </xref:System.ComponentModel.IComponent.Disposed>"
  syntax:
    content: public NestedContainer (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "A <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> birtokló a beágyazott tárolóban."
  overload: System.ComponentModel.NestedContainer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  id: CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: CreateSite(IComponent,String)
  nameWithType: NestedContainer.CreateSite(IComponent,String)
  fullName: System.ComponentModel.NestedContainer.CreateSite(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Helyet hoz létre. az összetevő a tárolóban."
  remarks: "Ha a `name` paraméter `null`, a <xref:System.ComponentModel.IComponent>hozzáadódik a beágyazott tároló nélkül azonosító nevet.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: protected override System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "A <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> a helyet hoz létre."
    - id: name
      type: System.String
      description: "A név, hozzárendelése `component`, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> kihagyását a hozzárendelést."
    return:
      type: System.ComponentModel.ISite
      description: "Az újonnan létrehozott <xref href=&quot;System.ComponentModel.ISite&quot;> </xref>."
  overload: System.ComponentModel.NestedContainer.CreateSite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: NestedContainer.Dispose(Boolean)
  fullName: System.ComponentModel.NestedContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A beágyazott tároló által használt erőforrások kiadását."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()` metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter értéke igaz, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja a <xref:System.ComponentModel.NestedContainer>hivatkozik.</xref:System.ComponentModel.NestedContainer> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.ComponentModel.NestedContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: NestedContainer.GetService(Type)
  fullName: System.ComponentModel.NestedContainer.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A service objektum a megadott típus beolvasása, amennyiben az rendelkezésre áll."
  remarks: "Ezt a módszert felülbírálja a <xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName>metódus.</xref:System.ComponentModel.Container.GetService%2A?displayProperty=fullName> Ez a megvalósítás csak oldja fel a kérelmeket a <xref:System.ComponentModel.INestedContainer>és <xref:System.ComponentModel.IContainer>szolgáltatások.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.INestedContainer>"
  syntax:
    content: protected override object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "A <xref:System.Type>beolvasni a szolgáltatás.</xref:System.Type>"
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely implementálja a kért szolgáltatást, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a szolgáltatás nem lehet feloldani.</xref:System.Object>"
  overload: System.ComponentModel.NestedContainer.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.Owner
  id: Owner
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: Owner
  nameWithType: NestedContainer.Owner
  fullName: System.ComponentModel.NestedContainer.Owner
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A tulajdonos összetevő lekérdezi a beágyazott tároló."
  remarks: "A tulajdonos összetevője a különbséget tesz a szokványos tárolókból beágyazott tárolók jellemző."
  syntax:
    content: public System.ComponentModel.IComponent Owner { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "A <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> birtokló a beágyazott tárolóban."
  overload: System.ComponentModel.NestedContainer.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.NestedContainer.OwnerName
  id: OwnerName
  parent: System.ComponentModel.NestedContainer
  langs:
  - csharp
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
  fullName: System.ComponentModel.NestedContainer.OwnerName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Lekérdezi a tulajdonos összetevő neve."
  remarks: "Ez a tulajdonság egyéni tulajdonos nevének felülírható. Az alapértelmezett implementációja keres a tulajdonos hely <xref:System.ComponentModel.INestedSite>és hívások <xref:System.ComponentModel.INestedSite.FullName%2A>, vagy <xref:System.ComponentModel.ISite.Name%2A>nem beágyazott hely esetén.</xref:System.ComponentModel.ISite.Name%2A> </xref:System.ComponentModel.INestedSite.FullName%2A> </xref:System.ComponentModel.INestedSite> Ha egyik sem érhető el, ez a tulajdonság adja vissza `null`."
  syntax:
    content: protected virtual string OwnerName { get; }
    return:
      type: System.String
      description: "A tulajdonos összetevő neve."
  overload: System.ComponentModel.NestedContainer.OwnerName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Container
  isExternal: false
  name: System.ComponentModel.Container
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: NestedContainer(IComponent)
  nameWithType: NestedContainer.NestedContainer(IComponent)
  fullName: System.ComponentModel.NestedContainer.NestedContainer(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.NestedContainer.CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: CreateSite(IComponent,String)
  nameWithType: NestedContainer.CreateSite(IComponent,String)
  fullName: System.ComponentModel.NestedContainer.CreateSite(IComponent,String)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.NestedContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: NestedContainer.Dispose(Boolean)
  fullName: System.ComponentModel.NestedContainer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.NestedContainer.GetService(System.Type)
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: GetService(Type)
  nameWithType: NestedContainer.GetService(Type)
  fullName: System.ComponentModel.NestedContainer.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.NestedContainer.Owner
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Owner
  nameWithType: NestedContainer.Owner
  fullName: System.ComponentModel.NestedContainer.Owner
- uid: System.ComponentModel.NestedContainer.OwnerName
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
  fullName: System.ComponentModel.NestedContainer.OwnerName
- uid: System.ComponentModel.NestedContainer.#ctor*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: NestedContainer
  nameWithType: NestedContainer.NestedContainer
- uid: System.ComponentModel.NestedContainer.CreateSite*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: CreateSite
  nameWithType: NestedContainer.CreateSite
- uid: System.ComponentModel.NestedContainer.Dispose*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Dispose
  nameWithType: NestedContainer.Dispose
- uid: System.ComponentModel.NestedContainer.GetService*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: GetService
  nameWithType: NestedContainer.GetService
- uid: System.ComponentModel.NestedContainer.Owner*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: Owner
  nameWithType: NestedContainer.Owner
- uid: System.ComponentModel.NestedContainer.OwnerName*
  parent: System.ComponentModel.NestedContainer
  isExternal: false
  name: OwnerName
  nameWithType: NestedContainer.OwnerName
