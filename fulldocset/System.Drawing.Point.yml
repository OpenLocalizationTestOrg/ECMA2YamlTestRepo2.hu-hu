### YamlMime:ManagedReference
items:
- uid: System.Drawing.Point
  id: Point
  children:
  - System.Drawing.Point.#ctor(System.Drawing.Size)
  - System.Drawing.Point.#ctor(System.Int32)
  - System.Drawing.Point.#ctor(System.Int32,System.Int32)
  - System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Point.Ceiling(System.Drawing.PointF)
  - System.Drawing.Point.Empty
  - System.Drawing.Point.Equals(System.Object)
  - System.Drawing.Point.GetHashCode
  - System.Drawing.Point.IsEmpty
  - System.Drawing.Point.Offset(System.Drawing.Point)
  - System.Drawing.Point.Offset(System.Int32,System.Int32)
  - System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Point.op_Explicit(System.Drawing.Point to System.Drawing.Size)
  - System.Drawing.Point.op_Implicit(System.Drawing.Point)
  - System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Point.Round(System.Drawing.PointF)
  - System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Point.ToString
  - System.Drawing.Point.Truncate(System.Drawing.PointF)
  - System.Drawing.Point.X
  - System.Drawing.Point.Y
  langs:
  - csharp
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
  type: Struct
  summary: "Az egész x és y koordináta, amely meghatározza egy pont kétdimenziós vezérlősík rendezett párjának jelöli."
  remarks: "A pont konvertálása a <xref:System.Drawing.PointF> <xref:System.Drawing.Point.op_Implicit%2A>.</xref:System.Drawing.Point.op_Implicit%2A> használja</xref:System.Drawing.PointF>"
  example:
  - "The following code example creates points and sizes using several of the overloaded operators defined for these types. It also demonstrates how to use the <xref:System.Drawing.SystemPens> class.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.Button> named `subtractButton`. Paste the code into the form and call the `CreatePointsAndSizes` method from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#1](~/add/codesnippet/csharp/t-system.drawing.point_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#1](~/add/codesnippet/cpp/t-system.drawing.point_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#1](~/add/codesnippet/visualbasic/t-system.drawing.point_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.PointConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Point
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.Point.#ctor(System.Drawing.Size)
  id: '#ctor(System.Drawing.Size)'
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Point(Size)
  nameWithType: Point.Point(Size)
  fullName: System.Drawing.Point.Point(Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Drawing.Point&quot;> </xref> osztályával egy <xref href=&quot;System.Drawing.Size&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Point.op_Equality%2A> operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/m-system.drawing.point.s_2_1.cs)]\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/m-system.drawing.point.s_2_1.vb)]\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/m-system.drawing.point.s_2_1.cpp)]"
  syntax:
    content: public Point (System.Drawing.Size sz);
    parameters:
    - id: sz
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> , amely a koordinátát adja meg az új <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Point(Int32)
  nameWithType: Point.Point(Int32)
  fullName: System.Drawing.Point.Point(Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Drawing.Point&quot;> </xref> osztály használatával egy egész számot által megadott koordináták."
  remarks: "A alacsonyrendű 16 bites a `dw` paraméter adja meg a vízszintes x koordinátáját, és a magasabb 16 bit, adja meg a függőleges y koordinátáját az új <xref:System.Drawing.Point>.</xref:System.Drawing.Point>"
  example:
  - "The following code example demonstrates how to use the Point and <xref:System.Drawing.Size.%23ctor%2A?displayProperty=fullName> constructors and the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> enumeration. To run this example, paste this code into a Windows Form that contains a label named `Label1`, and call the `IntializeLabel1` method in the form's constructor.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#7](~/add/codesnippet/csharp/m-system.drawing.point.s_0_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#7](~/add/codesnippet/cpp/m-system.drawing.point.s_0_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#7](~/add/codesnippet/visualbasic/m-system.drawing.point.s_0_1.vb)]"
  syntax:
    content: public Point (int dw);
    parameters:
    - id: dw
      type: System.Int32
      description: "Határozza meg az új 32 bites egész számnak <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Point(Int32,Int32)
  nameWithType: Point.Point(Int32,Int32)
  fullName: System.Drawing.Point.Point(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Drawing.Point&quot;> </xref> a megadott koordináták osztály."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Point.op_Equality%2A> operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/m-system.drawing.point.s_1_1.cs)]\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/m-system.drawing.point.s_1_1.vb)]\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/m-system.drawing.point.s_1_1.cpp)]"
  syntax:
    content: public Point (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "A pont vízszintes pozíciójának."
    - id: y
      type: System.Int32
      description: "A pont függőleges pozíciójának."
  overload: System.Drawing.Point.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)
  id: Add(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Add(Point,Size)
  nameWithType: Point.Add(Point,Size)
  fullName: System.Drawing.Point.Add(Point,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Hozzáadja a megadott <xref href=&quot;System.Drawing.Size&quot;> </xref> megadott <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  remarks: "A bővítmény hozzáadja a <xref:System.Drawing.Size.Width%2A>és <xref:System.Drawing.Size.Height%2A>, a megadott <xref:System.Drawing.Size>számára a <xref:System.Drawing.Point.X%2A>és <xref:System.Drawing.Point.Y%2A>értékeket a megadott pont.</xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> </xref:System.Drawing.Size> </xref:System.Drawing.Size.Height%2A> </xref:System.Drawing.Size.Width%2A>"
  example:
  - "The following example shows how to use the Add method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `AddPoint` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#9](~/add/codesnippet/visualbasic/m-system.drawing.point.a_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#9](~/add/codesnippet/csharp/m-system.drawing.point.a_1.cs)]"
  syntax:
    content: public static System.Drawing.Point Add (System.Drawing.Point pt, System.Drawing.Size sz);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "The <xref href=&quot;System.Drawing.Point&quot;></xref> to add."
    - id: sz
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> hozzáadása"
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> , amely a hozzáadása művelet eredménye."
  overload: System.Drawing.Point.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Ceiling(System.Drawing.PointF)
  id: Ceiling(System.Drawing.PointF)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Ceiling(PointF)
  nameWithType: Point.Ceiling(PointF)
  fullName: System.Drawing.Point.Ceiling(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Alakítja át a megadott <xref href=&quot;System.Drawing.PointF&quot;> </xref> való egy <xref href=&quot;System.Drawing.Point&quot;> </xref> értékének kerekítési által a <xref href=&quot;System.Drawing.PointF&quot;> </xref> a következő magasabb egész értékre."
  syntax:
    content: public static System.Drawing.Point Ceiling (System.Drawing.PointF value);
    parameters:
    - id: value
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> konvertálni."
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> Ez a módszer konvertálja."
  overload: System.Drawing.Point.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Empty
  id: Empty
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Empty
  nameWithType: Point.Empty
  fullName: System.Drawing.Point.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Jelöli egy <xref href=&quot;System.Drawing.Point&quot;> </xref> , amely rendelkezik <> </> *> és <> </> *> értéke nulla."
  syntax:
    content: public static readonly System.Drawing.Point Empty;
    return:
      type: System.Drawing.Point
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Point.Equals(Object)
  fullName: System.Drawing.Point.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Megadja, hogy ez <xref href=&quot;System.Drawing.Point&quot;> </xref> tartalmaz, mint a megadott <xref:System.Object>.</xref:System.Object> ugyanazok a koordinátái"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "A <xref:System.Object>vizsgálandó</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> obj </code> van egy <xref href=&quot;System.Drawing.Point&quot;> </xref> ugyanazok a koordinátái, ez pedig <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Point
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Point.GetHashCode()
  fullName: System.Drawing.Point.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Egy kivonatoló kódot ad vissza a <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  remarks: "Kerülje el attól függően, hogy GetHashCode egyedi értékeket, mint két <xref:System.Drawing.Point>ugyanazokat az értékeket az objektumok a <xref:System.Drawing.Point.X%2A>és <xref:System.Drawing.Point.Y%2A>Tulajdonságok térhetnek vissza ugyanaz a kivonatkód.</xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> </xref:System.Drawing.Point> Ez a viselkedés egy későbbi kiadásban lehetett módosítani."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy egész számot, amely meghatározza a kivonatot a <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Point
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Point.IsEmpty
  fullName: System.Drawing.Point.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy ez <xref href=&quot;System.Drawing.Point&quot;> </xref> üres."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if both <>*> and <>*> are 0; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Point.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Offset(System.Drawing.Point)
  id: Offset(System.Drawing.Point)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Offset(Point)
  nameWithType: Point.Offset(Point)
  fullName: System.Drawing.Point.Offset(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ez az eszköz <xref href=&quot;System.Drawing.Point&quot;> </xref> által a megadott <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  remarks: "Ezt a módszert állítja be a <xref:System.Drawing.Point.X%2A>és <xref:System.Drawing.Point.Y%2A>ezen értékek <xref:System.Drawing.Point>számának összege a <xref:System.Drawing.Point.X%2A>és <xref:System.Drawing.Point.Y%2A>ezen értékek <xref:System.Drawing.Point>és `p`.</xref:System.Drawing.Point> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> </xref:System.Drawing.Point> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A>"
  example:
  - "The following example shows how to use the Offset method. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `OffsetPoint` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Drawing.MiscWhidbeySnippets#10](~/add/codesnippet/visualbasic/m-system.drawing.point.o_1_1.vb)]\n [!code-cs[System.Drawing.MiscWhidbeySnippets#10](~/add/codesnippet/csharp/m-system.drawing.point.o_1_1.cs)]"
  syntax:
    content: public void Offset (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> használt eltolás ez <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Offset(System.Int32,System.Int32)
  id: Offset(System.Int32,System.Int32)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Offset(Int32,Int32)
  nameWithType: Point.Offset(Int32,Int32)
  fullName: System.Drawing.Point.Offset(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ez az eszköz <xref href=&quot;System.Drawing.Point&quot;> </xref> által a megadott összeg."
  syntax:
    content: public void Offset (int dx, int dy);
    parameters:
    - id: dx
      type: System.Int32
      description: "Az érték eltolásának x koordinátáját."
    - id: dy
      type: System.Int32
      description: "Az érték eltolásának y koordinátáját."
  overload: System.Drawing.Point.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)
  id: op_Addition(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: op_Addition(Point,Size)
  nameWithType: Point.op_Addition(Point,Size)
  fullName: System.Drawing.Point.op_Addition(Point,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Az eszköz egy <xref href=&quot;System.Drawing.Point&quot;> </xref> által egy adott <xref href=&quot;System.Drawing.Size&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example creates points and sizes using several of the overloaded operators defined for these types. It also demonstrates how to use the <xref:System.Drawing.SystemPens> class.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a <xref:System.Windows.Forms.Button> named `subtractButton`. Paste the code into the form and call the `CreatePointsAndSizes` method from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PointsAndSizes#1](~/add/codesnippet/csharp/m-system.drawing.point.o_2_1.cs)]\n [!code-cpp[System.Drawing.PointsAndSizes#1](~/add/codesnippet/cpp/m-system.drawing.point.o_2_1.cpp)]\n [!code-vb[System.Drawing.PointsAndSizes#1](~/add/codesnippet/visualbasic/m-system.drawing.point.o_2_1.vb)]"
  syntax:
    content: public static System.Drawing.Point op_Addition (System.Drawing.Point pt, System.Drawing.Size sz);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> lefordítani."
    - id: sz
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> , amely megadja, hogy a két szám koordinátáit hozzáadása `pt`."
    return:
      type: System.Drawing.Point
      description: "A lefordított <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)
  id: op_Equality(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: op_Equality(Point,Point)
  nameWithType: Point.op_Equality(Point,Point)
  fullName: System.Drawing.Point.op_Equality(Point,Point)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Összehasonlít két <xref href=&quot;System.Drawing.Point&quot;> </xref> objektumok. Az eredmény határozza meg hogy értékének a <> </> *> és <> </> *> tulajdonságok a két <xref href=&quot;System.Drawing.Point&quot;> </xref> objektumok azonosak."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Equality operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/m-system.drawing.point.o_0_1.cs)]\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/m-system.drawing.point.o_0_1.vb)]\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/m-system.drawing.point.o_0_1.cpp)]"
  syntax:
    content: public static bool op_Equality (System.Drawing.Point left, System.Drawing.Point right);
    parameters:
    - id: left
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> összehasonlítani."
    - id: right
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <>*> and <>*> values of <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Point.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.op_Explicit(System.Drawing.Point to System.Drawing.Size)
  id: op_Explicit(System.Drawing.Point to System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: op_Explicit(Point)
  nameWithType: Point.op_Explicit(Point)
  fullName: System.Drawing.Point.op_Explicit(Point)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.Size op_Explicit (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Drawing.Size
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Drawing.Point.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.op_Implicit(System.Drawing.Point)
  id: op_Implicit(System.Drawing.Point)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: op_Implicit(Point)
  nameWithType: Point.op_Implicit(Point)
  fullName: System.Drawing.Point.op_Implicit(Point)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.PointF op_Implicit (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Drawing.PointF
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Drawing.Point.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)
  id: op_Inequality(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: op_Inequality(Point,Point)
  nameWithType: Point.op_Inequality(Point,Point)
  fullName: System.Drawing.Point.op_Inequality(Point,Point)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Összehasonlít két <xref href=&quot;System.Drawing.Point&quot;> </xref> objektumok. Az eredmény határozza meg hogy értékeit a <> </> *> vagy <> </> *> tulajdonságok a két <xref href=&quot;System.Drawing.Point&quot;> </xref> objektum egyenlőtlen."
  syntax:
    content: public static bool op_Inequality (System.Drawing.Point left, System.Drawing.Point right);
    parameters:
    - id: left
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> összehasonlítani."
    - id: right
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az értékek a következők a <> </> *> tulajdonságok vagy a <> </> *> tulajdonságainak <code> left </code> és <code> right </code> eltérő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Point.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  id: op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: op_Subtraction(Point,Size)
  nameWithType: Point.op_Subtraction(Point,Size)
  fullName: System.Drawing.Point.op_Subtraction(Point,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Az eszköz egy <xref href=&quot;System.Drawing.Point&quot;> </xref> a negatív által egy adott <xref href=&quot;System.Drawing.Size&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.PointConverter> and the Subtraction operator. This example is designed to be used with Windows Forms. Paste this code into a form and call the `ShowPointConverter` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.Converters#1](~/add/codesnippet/cpp/m-system.drawing.point.o_3_1.cpp)]\n [!code-cs[System.Drawing.Converters#1](~/add/codesnippet/csharp/m-system.drawing.point.o_3_1.cs)]\n [!code-vb[System.Drawing.Converters#1](~/add/codesnippet/visualbasic/m-system.drawing.point.o_3_1.vb)]"
  syntax:
    content: public static System.Drawing.Point op_Subtraction (System.Drawing.Point pt, System.Drawing.Size sz);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> lefordítani."
    - id: sz
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> , amely megadja a számok koordinátáit értékekből kivonni pár `pt`."
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> struktúra, amely szerint a negatív lefordították egy adott <xref href=&quot;System.Drawing.Size&quot;> </xref> struktúra."
  overload: System.Drawing.Point.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Round(System.Drawing.PointF)
  id: Round(System.Drawing.PointF)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Round(PointF)
  nameWithType: Point.Round(PointF)
  fullName: System.Drawing.Point.Round(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Konvertálja a megadott <xref href=&quot;System.Drawing.PointF&quot;> </xref> való egy <xref href=&quot;System.Drawing.Point&quot;> </xref> objektum által kerekítési a <xref href=&quot;System.Drawing.Point&quot;> </xref> értékek a legközelebbi egész számra."
  syntax:
    content: public static System.Drawing.Point Round (System.Drawing.PointF value);
    parameters:
    - id: value
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> konvertálni."
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> Ez a módszer konvertálja."
  overload: System.Drawing.Point.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)
  id: Subtract(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Subtract(Point,Size)
  nameWithType: Point.Subtract(Point,Size)
  fullName: System.Drawing.Point.Subtract(Point,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "A megadott mértékét eredményét adja vissza <xref href=&quot;System.Drawing.Size&quot;> </xref> a megadott <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  remarks: "A kivonás kivonja a <xref:System.Drawing.Size.Width%2A>és <xref:System.Drawing.Size.Height%2A>, a megadott <xref:System.Drawing.Size>a a <xref:System.Drawing.Point.X%2A>és <xref:System.Drawing.Point.Y%2A>értékeket a megadott pont.</xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> </xref:System.Drawing.Size> </xref:System.Drawing.Size.Height%2A> </xref:System.Drawing.Size.Width%2A>"
  syntax:
    content: public static System.Drawing.Point Subtract (System.Drawing.Point pt, System.Drawing.Size sz);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> való kell vonni."
    - id: sz
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> értékekből kivonni a <xref href=&quot;System.Drawing.Point&quot;> </xref>."
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> , amely a kivonás művelet eredménye."
  overload: System.Drawing.Point.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.ToString
  id: ToString
  parent: System.Drawing.Point
  langs:
  - csharp
  name: ToString()
  nameWithType: Point.ToString()
  fullName: System.Drawing.Point.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Konvertálja a <xref href=&quot;System.Drawing.Point&quot;> </xref> emberek számára olvasható karakterláncra."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A jelölő karakterlánccá <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Truncate(System.Drawing.PointF)
  id: Truncate(System.Drawing.PointF)
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Truncate(PointF)
  nameWithType: Point.Truncate(PointF)
  fullName: System.Drawing.Point.Truncate(PointF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Konvertálja a megadott <xref href=&quot;System.Drawing.PointF&quot;> </xref> való egy <xref href=&quot;System.Drawing.Point&quot;> </xref> betartására értékeit a <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  syntax:
    content: public static System.Drawing.Point Truncate (System.Drawing.PointF value);
    parameters:
    - id: value
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref> konvertálni."
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> Ez a módszer konvertálja."
  overload: System.Drawing.Point.Truncate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.X
  id: X
  parent: System.Drawing.Point
  langs:
  - csharp
  name: X
  nameWithType: Point.X
  fullName: System.Drawing.Point.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Lekérdezi vagy beállítja a x koordinátáját ez <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Point.op_Equality%2A> operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the X and <xref:System.Drawing.Point.Y%2A> properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/p-system.drawing.point.x_1.cs)]\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/p-system.drawing.point.x_1.vb)]\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/p-system.drawing.point.x_1.cpp)]"
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "Az x koordinátáját ez <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Point.Y
  id: Y
  parent: System.Drawing.Point
  langs:
  - csharp
  name: Y
  nameWithType: Point.Y
  fullName: System.Drawing.Point.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Lekérdezi vagy beállítja a y koordinátáját ez <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Point.op_Equality%2A> operator and how to construct a <xref:System.Drawing.Point> from a <xref:System.Drawing.Size> or two integers. It also demonstrates how to use the <xref:System.Drawing.Point.X%2A> and Y properties. This example is designed to be used with Windows Forms. Paste the code into a form that contains a button named `Button1`, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.Misc2#3](~/add/codesnippet/csharp/p-system.drawing.point.y_1.cs)]\n [!code-vb[System.Drawing.Misc2#3](~/add/codesnippet/visualbasic/p-system.drawing.point.y_1.vb)]\n [!code-cpp[System.Drawing.Misc2#3](~/add/codesnippet/cpp/p-system.drawing.point.y_1.cpp)]"
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "Az y koordinátáját ez <xref href=&quot;System.Drawing.Point&quot;> </xref>."
  overload: System.Drawing.Point.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.Point.#ctor(System.Drawing.Size)
  parent: System.Drawing.Point
  isExternal: false
  name: Point(Size)
  nameWithType: Point.Point(Size)
  fullName: System.Drawing.Point.Point(Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Point.#ctor(System.Int32)
  parent: System.Drawing.Point
  isExternal: false
  name: Point(Int32)
  nameWithType: Point.Point(Int32)
  fullName: System.Drawing.Point.Point(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Point.#ctor(System.Int32,System.Int32)
  parent: System.Drawing.Point
  isExternal: false
  name: Point(Int32,Int32)
  nameWithType: Point.Point(Int32,Int32)
  fullName: System.Drawing.Point.Point(Int32,Int32)
- uid: System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  isExternal: false
  name: Add(Point,Size)
  nameWithType: Point.Add(Point,Size)
  fullName: System.Drawing.Point.Add(Point,Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Point.Ceiling(System.Drawing.PointF)
  parent: System.Drawing.Point
  isExternal: false
  name: Ceiling(PointF)
  nameWithType: Point.Ceiling(PointF)
  fullName: System.Drawing.Point.Ceiling(PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Point.Empty
  parent: System.Drawing.Point
  isExternal: false
  name: Empty
  nameWithType: Point.Empty
  fullName: System.Drawing.Point.Empty
- uid: System.Drawing.Point.Equals(System.Object)
  parent: System.Drawing.Point
  isExternal: false
  name: Equals(Object)
  nameWithType: Point.Equals(Object)
  fullName: System.Drawing.Point.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Point.GetHashCode
  parent: System.Drawing.Point
  isExternal: false
  name: GetHashCode()
  nameWithType: Point.GetHashCode()
  fullName: System.Drawing.Point.GetHashCode()
- uid: System.Drawing.Point.IsEmpty
  parent: System.Drawing.Point
  isExternal: false
  name: IsEmpty
  nameWithType: Point.IsEmpty
  fullName: System.Drawing.Point.IsEmpty
- uid: System.Drawing.Point.Offset(System.Drawing.Point)
  parent: System.Drawing.Point
  isExternal: false
  name: Offset(Point)
  nameWithType: Point.Offset(Point)
  fullName: System.Drawing.Point.Offset(Point)
- uid: System.Drawing.Point.Offset(System.Int32,System.Int32)
  parent: System.Drawing.Point
  isExternal: false
  name: Offset(Int32,Int32)
  nameWithType: Point.Offset(Int32,Int32)
  fullName: System.Drawing.Point.Offset(Int32,Int32)
- uid: System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  isExternal: false
  name: op_Addition(Point,Size)
  nameWithType: Point.op_Addition(Point,Size)
  fullName: System.Drawing.Point.op_Addition(Point,Size)
- uid: System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Point
  isExternal: false
  name: op_Equality(Point,Point)
  nameWithType: Point.op_Equality(Point,Point)
  fullName: System.Drawing.Point.op_Equality(Point,Point)
- uid: System.Drawing.Point.op_Explicit(System.Drawing.Point to System.Drawing.Size)
  parent: System.Drawing.Point
  isExternal: false
  name: op_Explicit(Point)
  nameWithType: Point.op_Explicit(Point)
  fullName: System.Drawing.Point.op_Explicit(Point)
- uid: System.Drawing.Point.op_Implicit(System.Drawing.Point)
  parent: System.Drawing.Point
  isExternal: false
  name: op_Implicit(Point)
  nameWithType: Point.op_Implicit(Point)
  fullName: System.Drawing.Point.op_Implicit(Point)
- uid: System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Point
  isExternal: false
  name: op_Inequality(Point,Point)
  nameWithType: Point.op_Inequality(Point,Point)
  fullName: System.Drawing.Point.op_Inequality(Point,Point)
- uid: System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  isExternal: false
  name: op_Subtraction(Point,Size)
  nameWithType: Point.op_Subtraction(Point,Size)
  fullName: System.Drawing.Point.op_Subtraction(Point,Size)
- uid: System.Drawing.Point.Round(System.Drawing.PointF)
  parent: System.Drawing.Point
  isExternal: false
  name: Round(PointF)
  nameWithType: Point.Round(PointF)
  fullName: System.Drawing.Point.Round(PointF)
- uid: System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  isExternal: false
  name: Subtract(Point,Size)
  nameWithType: Point.Subtract(Point,Size)
  fullName: System.Drawing.Point.Subtract(Point,Size)
- uid: System.Drawing.Point.ToString
  parent: System.Drawing.Point
  isExternal: false
  name: ToString()
  nameWithType: Point.ToString()
  fullName: System.Drawing.Point.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Point.Truncate(System.Drawing.PointF)
  parent: System.Drawing.Point
  isExternal: false
  name: Truncate(PointF)
  nameWithType: Point.Truncate(PointF)
  fullName: System.Drawing.Point.Truncate(PointF)
- uid: System.Drawing.Point.X
  parent: System.Drawing.Point
  isExternal: false
  name: X
  nameWithType: Point.X
  fullName: System.Drawing.Point.X
- uid: System.Drawing.Point.Y
  parent: System.Drawing.Point
  isExternal: false
  name: Y
  nameWithType: Point.Y
  fullName: System.Drawing.Point.Y
- uid: System.Drawing.Point.#ctor*
  parent: System.Drawing.Point
  isExternal: false
  name: Point
  nameWithType: Point.Point
- uid: System.Drawing.Point.Add*
  parent: System.Drawing.Point
  isExternal: false
  name: Add
  nameWithType: Point.Add
- uid: System.Drawing.Point.Ceiling*
  parent: System.Drawing.Point
  isExternal: false
  name: Ceiling
  nameWithType: Point.Ceiling
- uid: System.Drawing.Point.Equals*
  parent: System.Drawing.Point
  isExternal: false
  name: Equals
  nameWithType: Point.Equals
- uid: System.Drawing.Point.GetHashCode*
  parent: System.Drawing.Point
  isExternal: false
  name: GetHashCode
  nameWithType: Point.GetHashCode
- uid: System.Drawing.Point.IsEmpty*
  parent: System.Drawing.Point
  isExternal: false
  name: IsEmpty
  nameWithType: Point.IsEmpty
- uid: System.Drawing.Point.Offset*
  parent: System.Drawing.Point
  isExternal: false
  name: Offset
  nameWithType: Point.Offset
- uid: System.Drawing.Point.op_Addition*
  parent: System.Drawing.Point
  isExternal: false
  name: op_Addition
  nameWithType: Point.op_Addition
- uid: System.Drawing.Point.op_Equality*
  parent: System.Drawing.Point
  isExternal: false
  name: op_Equality
  nameWithType: Point.op_Equality
- uid: System.Drawing.Point.op_Explicit*
  parent: System.Drawing.Point
  isExternal: false
  name: op_Explicit
  nameWithType: Point.op_Explicit
- uid: System.Drawing.Point.op_Implicit*
  parent: System.Drawing.Point
  isExternal: false
  name: op_Implicit
  nameWithType: Point.op_Implicit
- uid: System.Drawing.Point.op_Inequality*
  parent: System.Drawing.Point
  isExternal: false
  name: op_Inequality
  nameWithType: Point.op_Inequality
- uid: System.Drawing.Point.op_Subtraction*
  parent: System.Drawing.Point
  isExternal: false
  name: op_Subtraction
  nameWithType: Point.op_Subtraction
- uid: System.Drawing.Point.Round*
  parent: System.Drawing.Point
  isExternal: false
  name: Round
  nameWithType: Point.Round
- uid: System.Drawing.Point.Subtract*
  parent: System.Drawing.Point
  isExternal: false
  name: Subtract
  nameWithType: Point.Subtract
- uid: System.Drawing.Point.ToString*
  parent: System.Drawing.Point
  isExternal: false
  name: ToString
  nameWithType: Point.ToString
- uid: System.Drawing.Point.Truncate*
  parent: System.Drawing.Point
  isExternal: false
  name: Truncate
  nameWithType: Point.Truncate
- uid: System.Drawing.Point.X*
  parent: System.Drawing.Point
  isExternal: false
  name: X
  nameWithType: Point.X
- uid: System.Drawing.Point.Y*
  parent: System.Drawing.Point
  isExternal: false
  name: Y
  nameWithType: Point.Y
