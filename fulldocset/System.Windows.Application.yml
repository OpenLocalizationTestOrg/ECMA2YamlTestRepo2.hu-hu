### YamlMime:ManagedReference
items:
- uid: System.Windows.Application
  id: Application
  children:
  - System.Windows.Application.#ctor
  - System.Windows.Application.Activated
  - System.Windows.Application.Current
  - System.Windows.Application.Deactivated
  - System.Windows.Application.DispatcherUnhandledException
  - System.Windows.Application.Exit
  - System.Windows.Application.FindResource(System.Object)
  - System.Windows.Application.FragmentNavigation
  - System.Windows.Application.GetContentStream(System.Uri)
  - System.Windows.Application.GetCookie(System.Uri)
  - System.Windows.Application.GetRemoteStream(System.Uri)
  - System.Windows.Application.GetResourceStream(System.Uri)
  - System.Windows.Application.LoadCompleted
  - System.Windows.Application.LoadComponent(System.Uri)
  - System.Windows.Application.LoadComponent(System.Object,System.Uri)
  - System.Windows.Application.MainWindow
  - System.Windows.Application.Navigated
  - System.Windows.Application.Navigating
  - System.Windows.Application.NavigationFailed
  - System.Windows.Application.NavigationProgress
  - System.Windows.Application.NavigationStopped
  - System.Windows.Application.OnActivated(System.EventArgs)
  - System.Windows.Application.OnDeactivated(System.EventArgs)
  - System.Windows.Application.OnExit(System.Windows.ExitEventArgs)
  - System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)
  - System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)
  - System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)
  - System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)
  - System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)
  - System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)
  - System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)
  - System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)
  - System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)
  - System.Windows.Application.Properties
  - System.Windows.Application.ResourceAssembly
  - System.Windows.Application.Resources
  - System.Windows.Application.Run
  - System.Windows.Application.Run(System.Windows.Window)
  - System.Windows.Application.SessionEnding
  - System.Windows.Application.SetCookie(System.Uri,System.String)
  - System.Windows.Application.Shutdown
  - System.Windows.Application.Shutdown(System.Int32)
  - System.Windows.Application.ShutdownMode
  - System.Windows.Application.Startup
  - System.Windows.Application.StartupUri
  - System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.Application.TryFindResource(System.Object)
  - System.Windows.Application.Windows
  langs:
  - csharp
  name: Application
  nameWithType: Application
  fullName: System.Windows.Application
  type: Class
  summary: "Magában foglalja a [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] alkalmazás."
  remarks: "Alkalmazás egy osztály, amely magában foglalja [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] alkalmazásspecifikus funkciót, beleértve a következőket:- **alkalmazás élettartamának**: <xref:System.Windows.Application.Activated>, <xref:System.Windows.Application.Current%2A> <xref:System.Windows.Application.Deactivated>, <xref:System.Windows.Application.DispatcherUnhandledException> <xref:System.Windows.Application.Exit>, <xref:System.Windows.Application.Run%2A> <xref:System.Windows.Application.SessionEnding>, <xref:System.Windows.Application.Shutdown%2A> <xref:System.Windows.Application.ShutdownMode%2A>, <xref:System.Windows.Application.Startup>.</xref:System.Windows.Application.Startup> </xref:System.Windows.Application.ShutdownMode%2A> </xref:System.Windows.Application.Shutdown%2A> </xref:System.Windows.Application.SessionEnding> </xref:System.Windows.Application.Run%2A> </xref:System.Windows.Application.Exit> </xref:System.Windows.Application.DispatcherUnhandledException> </xref:System.Windows.Application.Deactivated> </xref:System.Windows.Application.Current%2A> </xref:System.Windows.Application.Activated>      - **Alkalmazás-hatókör ablakban, a tulajdonság- és erőforrás-kezelés**: <xref:System.Windows.Application.FindResource%2A>, <xref:System.Windows.Application.GetContentStream%2A> <xref:System.Windows.Application.GetResourceStream%2A>, <xref:System.Windows.Application.LoadComponent%2A> <xref:System.Windows.Application.MainWindow%2A>, <xref:System.Windows.Application.Properties%2A> <xref:System.Windows.Application.Resources%2A>, <xref:System.Windows.Application.StartupUri%2A> <xref:System.Windows.Application.Windows%2A>.</xref:System.Windows.Application.Windows%2A> </xref:System.Windows.Application.StartupUri%2A> </xref:System.Windows.Application.Resources%2A> </xref:System.Windows.Application.Properties%2A> </xref:System.Windows.Application.MainWindow%2A> </xref:System.Windows.Application.LoadComponent%2A> </xref:System.Windows.Application.GetResourceStream%2A> </xref:System.Windows.Application.GetContentStream%2A> </xref:System.Windows.Application.FindResource%2A>      - **Parancssori paraméter és a kilépési kód feldolgozási**: <xref:System.Windows.Application.Startup?displayProperty=fullName>, <xref:System.Windows.Application.Exit?displayProperty=fullName> <xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName>.</xref:System.Windows.Application.Shutdown%2A?displayProperty=fullName> </xref:System.Windows.Application.Exit?displayProperty=fullName> </xref:System.Windows.Application.Startup?displayProperty=fullName>      -   **Navigation**: <xref:System.Windows.Application.FragmentNavigation>, <xref:System.Windows.Application.LoadCompleted>, <xref:System.Windows.Application.Navigated>, <xref:System.Windows.Application.Navigating>, <xref:System.Windows.Application.NavigationProgress>, <xref:System.Windows.Application.NavigationStopped>, <xref:System.Windows.Application.NavigationFailed>, <xref:System.Windows.Application.SetCookie%2A>, <xref:System.Windows.Application.GetCookie%2A>.</xref:System.Windows.Application.GetCookie%2A></xref:System.Windows.Application.SetCookie%2A></xref:System.Windows.Application.NavigationFailed></xref:System.Windows.Application.NavigationStopped></xref:System.Windows.Application.NavigationProgress></xref:System.Windows.Application.Navigating></xref:System.Windows.Application.Navigated></xref:System.Windows.Application.LoadCompleted></xref:System.Windows.Application.FragmentNavigation>       Alkalmazás megvalósítja a ablakban, a tulajdonság és az erőforrás-hatókör szolgáltatások megosztott hozzáférést biztosítanak a singleton mintát. Ezért az alkalmazás osztály csak egy példánya / <xref:System.AppDomain>.</xref:System.AppDomain> hozhatók létre       Jelölés során, a jelölés és a háttérkód vagy a kód használó alkalmazások is létrehozható. Ha alkalmazás meg van valósítva a jelölés során, jelöléseket vagy markup és háttérkód, a kódfájlban kell konfigurálni hogy egy [!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)] `ApplicationDefinition` elemet.      > [!NOTE] > Egy önálló alkalmazás nem igényli az alkalmazásobjektum; valósíthat meg egy egyéni `static` belépési pont metódusa (`Main`), amely megnyit egy ablakot alkalmazás példányának létrehozása nélkül. Azonban [!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)] alkalmazásobjektum igényelnek."
  example:
  - "The following example shows how a standard application is defined using only markup:  \n  \n [!code-xml[ApplicationSnippets#ApplicationMARKUP](~/add/codesnippet/xaml/ApplicationSnippets.CSharp/AppMarkup.xaml#applicationmarkup)]  \n  \n The following example shows how a standard application is defined using only code:  \n  \n [!code-cs[ApplicationSnippets#ApplicationCODE](~/add/codesnippet/csharp/ApplicationSnippets.CSharp/AppCode.cs#applicationcode)]\n [!code-vb[ApplicationSnippets#ApplicationCODE](~/add/codesnippet/visualbasic/applicationsnippets/appcode.vb#applicationcode)]  \n  \n The following example shows how a standard application is defined using a combination of markup and code-behind.  \n  \n [!code-xml[ApplicationSnippets#ApplicationXAML](~/add/codesnippet/xaml/ApplicationSnippets.CSharp/App.xaml#applicationxaml)]  \n  \n [!code-cs[ApplicationSnippets#ApplicationCODEBEHIND](~/add/codesnippet/csharp/ApplicationSnippets.CSharp/App.xaml.cs#applicationcodebehind)]\n [!code-vb[ApplicationSnippets#ApplicationCODEBEHIND](~/add/codesnippet/visualbasic/applicationsnippets/application.xaml.vb#applicationcodebehind)]"
  syntax:
    content: 'public class Application : System.Windows.Threading.DispatcherObject, System.Windows.Markup.IQueryAmbient'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.Windows.Markup.IQueryAmbient
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Application.#ctor
  id: '#ctor'
  parent: System.Windows.Application
  langs:
  - csharp
  name: Application()
  nameWithType: Application.Application()
  fullName: System.Windows.Application.Application()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Application&quot;> </xref> osztály."
  remarks: "Csak egy példányát a <xref:System.Windows.Application>osztály hozható létre <xref:System.AppDomain>, annak érdekében, hogy egy alkalmazás-hatókör ablakban, a tulajdonság- és erőforrás-adatok egyetlen közös hozzáférésű.</xref:System.AppDomain> </xref:System.Windows.Application> Ezért az alapértelmezett konstruktort a a <xref:System.Windows.Application>osztály észleli, hogy a példány inicializálása-e az első példánynál egy <xref:System.AppDomain>; Ha nem, egy <xref:System.InvalidOperationException>vált ki.</xref:System.InvalidOperationException> </xref:System.AppDomain> </xref:System.Windows.Application>       A <xref:System.Windows.Application>az aktuális objektum <xref:System.AppDomain>ki van téve a a statikus <xref:System.Windows.Application.Current%2A>tulajdonság.</xref:System.Windows.Application.Current%2A> </xref:System.AppDomain> </xref:System.Windows.Application>"
  syntax:
    content: public Application ();
    parameters: []
  overload: System.Windows.Application.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egynél több példánya a <xref href=&quot;System.Windows.Application&quot;> </xref> osztály létrehozása <xref href=&quot;System.AppDomain&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Application.Activated
  id: Activated
  parent: System.Windows.Application
  langs:
  - csharp
  name: Activated
  nameWithType: Application.Activated
  fullName: System.Windows.Application.Activated
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Akkor következik be, amikor egy alkalmazás válik az előtér-alkalmazás."
  remarks: "A [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] alkalmazás, amely egy vagy több nyissa meg a windows aktiválása (válik az előtér-alkalmazás) a windows egyik aktiválásakor először óta az alkalmazás elindult, vagy ha a windows egyik aktiválva, míg az alkalmazás inaktív: aktiválási akkor fordul elő, amikor:-kérelmet az első ablakban nyílik meg.      -A felhasználó átvált az alkalmazás ALT + TAB vagy Feladatkezelőben.      -A felhasználó rákattint a tálcán gombra az alkalmazás a windows egyik.       Észlelés, ha az általuk aktivált alkalmazásokat kezelik az aktív esemény.       Az alkalmazás aktiválása után esetlegesen inaktiválása és teljes élettartama alatt sokszor újraaktiválását. Ha egy alkalmazás viselkedés vagy állapot függ az aktiválási állapotát, azt is kezeli az aktív és az <xref:System.Windows.Application.Deactivated>események aktiválására mely állapot fennállt modult.</xref:System.Windows.Application.Deactivated>       Ha egy alkalmazás válik aktívvá, aktív nem generál újra mindaddig, amíg az alkalmazás kikapcsolt, függetlenül az alkalmazáson belül hány windows aktívak, amíg az alkalmazás aktív.       Aktivált nem jelenik meg, a [!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]."
  example:
  - "The following example shows how to detect when a standalone application activates and deactivates.  \n  \n [!code-xml[ApplicationActivationSnippets#DetectActivationStateXAML](~/add/codesnippet/xaml/ApplicationActivationSnippets.CSharp/App.xaml#detectactivationstatexaml)]  \n  \n [!code-cs[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/add/codesnippet/csharp/ApplicationActivationSnippets.CSharp/App.xaml.cs#detectactivationstatecodebehind)]\n [!code-vb[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/add/codesnippet/visualbasic/applicationactivationsnippets/application.xaml.vb#detectactivationstatecodebehind)]"
  syntax:
    content: public event EventHandler Activated;
    return:
      type: System.EventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Current
  id: Current
  parent: System.Windows.Application
  langs:
  - csharp
  name: Current
  nameWithType: Application.Current
  fullName: System.Windows.Application.Current
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi a <xref href=&quot;System.Windows.Application&quot;> </xref> az aktuális objektum <xref href=&quot;System.AppDomain&quot;> </xref>."
  remarks: "<xref:System.Windows.Application>van egy /-<xref:System.AppDomain> egypéldányos típust, amely megvalósítja <xref:System.Windows.Application>az aktuális <xref:System.AppDomain>.</xref:System.AppDomain> példány</xref:System.Windows.Application> megosztott hozzáférést biztosítanak a statikus aktuális tulajdonság</xref:System.AppDomain></xref:System.Windows.Application> Ez a kialakítás biztosítja, hogy az adott állapotban által kezelt <xref:System.Windows.Application>, beleértve a megosztott erőforrások és állapotának, érhető el egyetlen, megosztott helyről.</xref:System.Windows.Application>       Ez a tulajdonság szálbiztos, és egyetlen szálból érhető el."
  syntax:
    content: public static System.Windows.Application Current { get; }
    return:
      type: System.Windows.Application
      description: "A <xref href=&quot;System.Windows.Application&quot;> </xref> az aktuális objektum <xref href=&quot;System.AppDomain&quot;> </xref>."
  overload: System.Windows.Application.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Deactivated
  id: Deactivated
  parent: System.Windows.Application
  langs:
  - csharp
  name: Deactivated
  nameWithType: Application.Deactivated
  fullName: System.Windows.Application.Deactivated
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Az előtér-alkalmazás alatt, az alkalmazások működése következik be."
  remarks: "A [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] alkalmazás, amely egy vagy több megnyitott windows inaktiválja (a már nem lesz az előtér-alkalmazás) Ha a felhasználó a következőket teszi:-ALT + TAB vagy Feladatkezelőben vált egy másik alkalmazás.      -Rákattint a tálcán gombra egy másik alkalmazás ablakába.       Az inaktiválást észleléséhez igénylő alkalmazásokat képes kezelni az inaktív esemény.       Az alkalmazás aktiválása után esetlegesen inaktiválása és teljes élettartama alatt sokszor újraaktiválását. Ha egy alkalmazás viselkedés vagy állapot függ az aktiválási állapotát, is képes kezelni mindkét inaktív és <xref:System.Windows.Application.Activated>események annak meghatározásához, amelyek az állapot azt modul</xref:System.Windows.Application.Activated>       Inaktív nem jelenik meg, a [!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]."
  example:
  - "The following example shows how to detect when a standalone application deactivates and activates.  \n  \n [!code-xml[ApplicationActivationSnippets#DetectActivationStateXAML](~/add/codesnippet/xaml/ApplicationActivationSnippets.CSharp/App.xaml#detectactivationstatexaml)]  \n  \n [!code-cs[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/add/codesnippet/csharp/ApplicationActivationSnippets.CSharp/App.xaml.cs#detectactivationstatecodebehind)]\n [!code-vb[ApplicationActivationSnippets#DetectActivationStateCODEBEHIND](~/add/codesnippet/visualbasic/applicationactivationsnippets/application.xaml.vb#detectactivationstatecodebehind)]"
  syntax:
    content: public event EventHandler Deactivated;
    return:
      type: System.EventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.DispatcherUnhandledException
  id: DispatcherUnhandledException
  parent: System.Windows.Application
  langs:
  - csharp
  name: DispatcherUnhandledException
  nameWithType: Application.DispatcherUnhandledException
  fullName: System.Windows.Application.DispatcherUnhandledException
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kivétel lépett fel az alkalmazások, de nem lett kezelve a következik be."
  remarks: "Alapértelmezés szerint [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] kezeletlen kivételek ki, a kivétel egy párbeszédpanelen (ahol azok jelenthetik-e a kivétel) a felhasználók értesítése, és automatikusan leáll egy alkalmazást.       Ha egy alkalmazás számára szükséges-e a központi helyről feldolgozása egyéni nem kezelt kivétel, DispatcherUnhandledException kell kezelni.       DispatcherUnhandledException jelenik meg, amelyet egy <xref:System.Windows.Application>minden kivételt, amely a fő felhasználói felület szálán kóddal nincs kezelve.</xref:System.Windows.Application>       Ha kivétel nem kezeli a akár egy háttér [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] szál (saját szál <xref:System.Windows.Threading.Dispatcher>) vagy a háttérben futó munkavégző szál (a szál nélkül egy <xref:System.Windows.Threading.Dispatcher>), a kivételt a rendszer nem továbbítja a fő [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] szál.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher> Következésképpen DispatcherUnhandledException nem következik be. Ilyen körülmények között szüksége lesz írhat kódot a tegye a következőket: 1.  A kivételeket a háttérben futó szál a kezeli.      2.  Ezeket a fő kivételeket mennyi [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] szál.      3.  Ismételt kiváltási azokat a fő [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] szál nélkül lehet DispatcherUnhandledException engedélyezését.       További információkért lásd: a [szálkezelési modelljének](~/add/includes/ajax-current-ext-md.md) áttekintése.       A DispatcherUnhandledException eseménykezelő átadása egy <xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs>argumentumot, amely tartalmazza a kivétel környezetfüggő információhoz többek között:-a kivétel (<xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A>).</xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception%2A> </xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs>      -A <xref:System.Windows.Threading.Dispatcher>származó, amelyek származási (<xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A>).</xref:System.Windows.Threading.DispatcherEventArgs.Dispatcher%2A> </xref:System.Windows.Threading.Dispatcher>       Ezek az információk segítségével megállapítható, hogy kivételt helyreállítható-e vagy sem. Helyreállítható kivétel előfordulhat, hogy egy <xref:System.IO.FileNotFoundException>, például egy Helyreállíthatatlan kivétel miatt előfordulhat, hogy amíg egy <xref:System.StackOverflowException>, például.</xref:System.StackOverflowException> </xref:System.IO.FileNotFoundException>       Ha Ön által feldolgozott DispatcherUnhandledException nem kezelt kivételt, és nem szeretné, hogy [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] feldolgozás folytatásához le szeretné állítani a <xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A>tulajdonságot `true`.</xref:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled%2A>       Eltérően az eseményeket, amelyek <xref:System.Windows.Application>vált ki, DispatcherUnhandledException nem rendelkezik a megfelelő védett virtuális megvalósítása (OnDispatcherUnhandledException).</xref:System.Windows.Application> Ennek következtében, osztály, amely származik <xref:System.Windows.Application>mindig regisztrálnia kell az eseménykezelő nem kezelt kivételek feldolgozni DispatcherUnhandledException.</xref:System.Windows.Application>"
  example:
  - "The following example shows how to process unhandled exceptions by handling the DispatcherUnhandledException event.  \n  \n [!code-cs[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND1](~/add/codesnippet/csharp/ApplicationDispatcherUnhandledExceptionSnippets.CSharp/App.xaml.cs#handledispatcherunhandledexceptioncodebehind1)]\n [!code-vb[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND1](~/add/codesnippet/visualbasic/applicationdispatcherunhandledexceptionsnippets/application.xaml.vb#handledispatcherunhandledexceptioncodebehind1)]  \n[!code-cs[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND2](~/add/codesnippet/csharp/ApplicationDispatcherUnhandledExceptionSnippets.CSharp/App.xaml.cs#handledispatcherunhandledexceptioncodebehind2)]\n[!code-vb[ApplicationDispatcherUnhandledExceptionSnippets#HandleDispatcherUnhandledExceptionCODEBEHIND2](~/add/codesnippet/visualbasic/applicationdispatcherunhandledexceptionsnippets/application.xaml.vb#handledispatcherunhandledexceptioncodebehind2)]"
  syntax:
    content: public event System.Windows.Threading.DispatcherUnhandledExceptionEventHandler DispatcherUnhandledException;
    return:
      type: System.Windows.Threading.DispatcherUnhandledExceptionEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Exit
  id: Exit
  parent: System.Windows.Application
  langs:
  - csharp
  name: Exit
  nameWithType: Application.Exit
  fullName: System.Windows.Application.Exit
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy alkalmazás leáll, és nem lehet megszakítani előtt következik be."
  remarks: "Egy alkalmazás is le a következő okok valamelyike: - a <xref:System.Windows.Application.Shutdown%2A>metódusában a <xref:System.Windows.Application>objektum neve, vagy explicit módon, vagy amit határoz meg, a <xref:System.Windows.Application.ShutdownMode%2A>tulajdonság.</xref:System.Windows.Application.ShutdownMode%2A> </xref:System.Windows.Application> </xref:System.Windows.Application.Shutdown%2A>      -A felhasználó befejezi a munkamenetet kijelentkezés vagy leállítása.       Észlelés, ha az alkalmazás leállítása esetén a kilépési esemény kezelése, és minden további feldolgozás szükség szerint hajtsa végre.       Kezeli a Kilépés vizsgálja meg, vagy módosítsa az alkalmazás kilépési kódot, ha már nincs szükség hívására <xref:System.Windows.Application.Shutdown%2A>explicit módon.</xref:System.Windows.Application.Shutdown%2A> A kilépési kódot a tesz elérhetővé a <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A>tulajdonsága a <xref:System.Windows.ExitEventArgs>a kilépési eseménykezelő átadott argumentum.</xref:System.Windows.ExitEventArgs> </xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> Amikor az alkalmazás leáll, a kilépési kód átadódik az operációs rendszer későbbi feldolgozásra.       Ha az alkalmazás kezeli a <xref:System.Windows.Application.SessionEnding>esemény, és ezt követően megszakítja, akkor a kilépési nem jelenik meg, és az alkalmazás folytatja a leállítási mód megfelelően fut.</xref:System.Windows.Application.SessionEnding>       A kilépési kód állíthat be egy [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)], bár az értéket a rendszer figyelmen kívül hagyja.       A [!INCLUDE[TLA2#tla_xbap#plural](~/add/includes/tla2sharptla-xbapsharpplural-md.md)], kilépési jelenik meg, a következő esetekben: - [!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)] van másik lapra.      -A [!INCLUDE[TLA2#tla_ie7](~/add/includes/tla2sharptla-ie7-md.md)], ha a lap, amelyen a [!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)] le van zárva.      -Ha a böngésző be van zárva.       Minden esetben értékének a <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A>tulajdonság a rendszer figyelmen kívül hagyja.</xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A>"
  example:
  - "The following example demonstrates how to:  \n  \n-   Handle the Exit event.  \n  \n-   Inspect and update the <xref:System.Windows.ExitEventArgs.ApplicationExitCode%2A> property of the <xref:System.Windows.ExitEventArgs>.  \n  \n-   Write an entry to an application log in isolated storage.  \n  \n-   Persist the application state to isolated storage.  \n  \n [!code-xml[ApplicationExitSnippets#HandleExitXAML](~/add/codesnippet/xaml/ApplicationExitSnippets.CSharp/App.xaml#handleexitxaml)]  \n  \n [!code-cs[ApplicationExitSnippets#HandleExitCODEBEHIND](~/add/codesnippet/csharp/ApplicationExitSnippets.CSharp/App.xaml.cs#handleexitcodebehind)]\n [!code-vb[ApplicationExitSnippets#HandleExitCODEBEHIND](~/add/codesnippet/visualbasic/applicationexitsnippets/application.xaml.vb#handleexitcodebehind)]"
  syntax:
    content: public event System.Windows.ExitEventHandler Exit;
    return:
      type: System.Windows.ExitEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.FindResource(System.Object)
  id: FindResource(System.Object)
  parent: System.Windows.Application
  langs:
  - csharp
  name: FindResource(Object)
  nameWithType: Application.FindResource(Object)
  fullName: System.Windows.Application.FindResource(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Megkeresi a [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] erőforrás, például egy <xref href=&quot;System.Windows.Style&quot;> </xref> vagy <xref href=&quot;System.Windows.Media.Brush&quot;> </xref>, a megadott kulcs, és jelez kivételt adott vissza, ha a kért erőforrás nem található (lásd: [XAML-erőforrások](~/add/includes/ajax-current-ext-md.md))."
  remarks: "FindResource először az alkalmazás-hatókör erőforrások a megadott erőforrás fog kinézni. Alkalmazás-hatókör erőforrások által kezelt <xref:System.Windows.Application>, és ki vannak téve a a <xref:System.Windows.Application.Resources%2A>tulajdonság.</xref:System.Windows.Application.Resources%2A> </xref:System.Windows.Application> Ha a megadott erőforrás nem található az alkalmazás-hatókör erőforrások készletét, FindResource majd ezután keres a rendszererőforrásokat. Rendszererőforrások rendszerhéj-erőforrás a felhasználó által definiált, és színek, betűtípusok és rendszerhéj-konfigurációk. Ezek a ki vannak téve a <xref:System.Windows.SystemColors>, <xref:System.Windows.SystemFonts>, és <xref:System.Windows.SystemParameters>típusokat, illetve statikus tulajdonságként.</xref:System.Windows.SystemParameters> </xref:System.Windows.SystemFonts> </xref:System.Windows.SystemColors> Ha FindResource szeretné azokat, ezek a típusok is elérhetővé FindResource; átadandó tervezett kulcstulajdonságok erőforrás Ha például <xref:System.Windows.SystemParameters.IconWidthKey%2A>.</xref:System.Windows.SystemParameters.IconWidthKey%2A>       FindResource visszaad egy objektumot, mert kell alakítania a visszaadott érték a megfelelő típussal, ha az erőforrás található.      > [!IMPORTANT] > Ez a metódus hívásakor a kulcs, amely nem található, a rendszer kivételt hoz létre. Ha nem szeretné, hogy a hívó FindResource kivételek kezelése, <xref:System.Windows.Application.TryFindResource%2A>metódust hívja; <xref:System.Windows.Application.TryFindResource%2A>adja vissza egy `null` hivatkoznak, amikor a kért erőforrás nem található, és nem lépett fel kivételhiba.</xref:System.Windows.Application.TryFindResource%2A> </xref:System.Windows.Application.TryFindResource%2A>       Ez a módszer szálbiztos, és a bármely szálon hívható."
  example:
  - "The following example shows how to use FindResource to find a resource, and to handle <xref:System.Windows.ResourceReferenceKeyNotFoundException> if the resource is not found.  \n  \n [!code-cs[ApplicationFindResourceSnippets#ApplicationCallFindResourceCODEBEHIND](~/add/codesnippet/csharp/ApplicationFindResourceSnippets/MainWindow.xaml.cs#applicationcallfindresourcecodebehind)]\n [!code-vb[ApplicationFindResourceSnippets#ApplicationCallFindResourceCODEBEHIND](~/add/codesnippet/visualbasic/applicationfindresourcesnippets/mainwindow.xaml.vb#applicationcallfindresourcecodebehind)]"
  syntax:
    content: public object FindResource (object resourceKey);
    parameters:
    - id: resourceKey
      type: System.Object
      description: "Található az erőforrás neve."
    return:
      type: System.Object
      description: "A kért erőforrás-objektum. Ha a kért erőforrás nem található, a <xref href=&quot;System.Windows.ResourceReferenceKeyNotFoundException&quot;> </xref> vált ki."
  overload: System.Windows.Application.FindResource*
  exceptions:
  - type: System.Windows.ResourceReferenceKeyNotFoundException
    commentId: T:System.Windows.ResourceReferenceKeyNotFoundException
    description: "Az erőforrás nem található."
  platform:
  - net462
- uid: System.Windows.Application.FragmentNavigation
  id: FragmentNavigation
  parent: System.Windows.Application
  langs:
  - csharp
  name: FragmentNavigation
  nameWithType: Application.FragmentNavigation
  fullName: System.Windows.Application.FragmentNavigation
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Akkor következik be, az alkalmazás egy navigator megkezdésekor a tartalom töredékkel navigációs navigációs azonnal megtörténik, ha a kívánt töredéke a jelenlegi tartalmat, vagy a forrás után [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] tartalom betöltése megtörtént a különböző tartalmat a kívánt töredéke esetén."
  remarks: "A Navigátor, vagy egy <xref:System.Windows.Navigation.NavigationWindow>vagy <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       Lásd: <xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName>"
  syntax:
    content: public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;
    return:
      type: System.Windows.Navigation.FragmentNavigationEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.GetContentStream(System.Uri)
  id: GetContentStream(System.Uri)
  parent: System.Windows.Application
  langs:
  - csharp
  name: GetContentStream(Uri)
  nameWithType: Application.GetContentStream(Uri)
  fullName: System.Windows.Application.GetContentStream(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adja vissza, amely itt található: a megadott tartalom adatfájl forrásadatfolyam <xref:System.Uri>(lásd: [WPF-alkalmazás erőforrás, a tartalom és az adatfájlokat](~/add/includes/ajax-current-ext-md.md)).</xref:System.Uri>"
  remarks: "Ez a metódus nincs többszálú futtatásra."
  syntax:
    content: public static System.Windows.Resources.StreamResourceInfo GetContentStream (Uri uriContent);
    parameters:
    - id: uriContent
      type: System.Uri
      description: "A relatív <xref:System.Uri>, amely egy különálló erőforrás van leképezve.</xref:System.Uri>"
    return:
      type: System.Windows.Resources.StreamResourceInfo
      description: "A <xref href=&quot;System.Windows.Resources.StreamResourceInfo&quot;> </xref> , amely tartalmazza, amely itt található: a megadott <xref:System.Uri>.</xref:System.Uri> tartalom adatfájlt Ha egy laza erőforrás nem található, null ad vissza."
  overload: System.Windows.Application.GetContentStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref:System.Uri>, amely átadott GetContentStream értéke null.</xref:System.Uri>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.Uri>, amely egy abszolút <xref:System.Uri>.</xref:System.Uri> GetContentStream átadott van</xref:System.Uri>"
  platform:
  - net462
- uid: System.Windows.Application.GetCookie(System.Uri)
  id: GetCookie(System.Uri)
  parent: System.Windows.Application
  langs:
  - csharp
  name: GetCookie(Uri)
  nameWithType: Application.GetCookie(Uri)
  fullName: System.Windows.Application.GetCookie(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekéri a cookie-k <xref:System.Uri>.</xref:System.Uri> által meghatározott helyre"
  remarks: "GetCookie lekéri a megadott <xref:System.Uri>.</xref:System.Uri> cookie. Nem sikerült beolvasni a cookie-t, ha egy <xref:System.ComponentModel.Win32Exception>vált ki.</xref:System.ComponentModel.Win32Exception> Meg kell írnia a kódot a cookie-karakterlánc elemzése a név/érték párok listáját.       A cookie-k áttekintését [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)], lásd: [navigációs áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static string GetCookie (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "A <xref:System.Uri>, amely meghatározza, hogy a cookie-k készült helyét.</xref:System.Uri>"
    return:
      type: System.String
      description: "A <xref:System.String>értéket, ha a cookie-k létezik; egyéb esetben a <xref href=&quot;System.ComponentModel.Win32Exception&quot;> </xref> vált ki.</xref:System.String>"
  overload: System.Windows.Application.GetCookie*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "A [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] hiba jelenik meg, amelyet a <xref uid=&quot;langword_csharp_InternetGetCookie&quot; name=&quot;InternetGetCookie&quot; href=&quot;&quot;> </xref> függvény (GetCookie által meghívott) Ha a probléma akkor fordul elő, amikor megpróbálta beolvasni a megadott cookie-t."
  platform:
  - net462
- uid: System.Windows.Application.GetRemoteStream(System.Uri)
  id: GetRemoteStream(System.Uri)
  parent: System.Windows.Application
  langs:
  - csharp
  name: GetRemoteStream(Uri)
  nameWithType: Application.GetRemoteStream(Uri)
  fullName: System.Windows.Application.GetRemoteStream(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adja vissza, amely itt található: a megadott származási hely adatfájl forrásadatfolyam <xref:System.Uri>(lásd: [WPF-alkalmazás erőforrás, a tartalom és az adatfájlokat](~/add/includes/ajax-current-ext-md.md)).</xref:System.Uri>"
  remarks: "Ez a metódus nincs többszálú futtatásra."
  syntax:
    content: public static System.Windows.Resources.StreamResourceInfo GetRemoteStream (Uri uriRemote);
    parameters:
    - id: uriRemote
      type: System.Uri
      description: "A <xref:System.Uri>, amelyek származási helyén laza erőforrás van leképezve.</xref:System.Uri>"
    return:
      type: System.Windows.Resources.StreamResourceInfo
      description: "A <xref href=&quot;System.Windows.Resources.StreamResourceInfo&quot;> </xref> , amely tartalmazza a származási hely adatfájlt, amely itt található: a megadott <xref:System.Uri>.</xref:System.Uri> forrásadatfolyam Ha a laza erőforrás nem található, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> adja vissza."
  overload: System.Windows.Application.GetRemoteStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref:System.Uri>, amely átadott GetRemoteStream értéke null.</xref:System.Uri>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.Uri>, amely átadott GetRemoteStream vagy nem relatív vagy abszolút, de nem a `pack://siteoforigin:,,,/` űrlap.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Windows.Application.GetResourceStream(System.Uri)
  id: GetResourceStream(System.Uri)
  parent: System.Windows.Application
  langs:
  - csharp
  name: GetResourceStream(Uri)
  nameWithType: Application.GetResourceStream(Uri)
  fullName: System.Windows.Application.GetResourceStream(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adja vissza, amely itt található: a megadott adatok erőforrásfájl forrásadatfolyam <xref:System.Uri>(lásd: [WPF-alkalmazás erőforrás, a tartalom és az adatfájlokat](~/add/includes/ajax-current-ext-md.md)).</xref:System.Uri>"
  remarks: "Ez a metódus nincs többszálú futtatásra."
  syntax:
    content: public static System.Windows.Resources.StreamResourceInfo GetResourceStream (Uri uriResource);
    parameters:
    - id: uriResource
      type: System.Uri
      description: "A <xref:System.Uri>, amely egy beágyazott erőforrást van leképezve.</xref:System.Uri>"
    return:
      type: System.Windows.Resources.StreamResourceInfo
      description: "A <xref href=&quot;System.Windows.Resources.StreamResourceInfo&quot;> </xref> , amely tartalmazza az erőforrás-adatfájlt, amely itt található: a megadott <xref:System.Uri>.</xref:System.Uri> forrásadatfolyam"
  overload: System.Windows.Application.GetResourceStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref:System.Uri>, amely átadott GetResourceStream értéke null.</xref:System.Uri>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.Uri>, amely átadott GetResourceStream vagy nem relatív vagy abszolút, de nem a `pack://application:,,,/` űrlap.</xref:System.Uri>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A <xref:System.Uri>, amely átadott GetResourceStream nem található.</xref:System.Uri>"
  platform:
  - net462
- uid: System.Windows.Application.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Application
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: Application.LoadCompleted
  fullName: System.Windows.Application.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Tartalom, amely az alkalmazásban a navigátor által nyílik meg lett betöltve, elemzése, és már megkezdődött a következő megjelenítési következik be."
  remarks: "A Navigátor, vagy egy <xref:System.Windows.Navigation.NavigationWindow>vagy <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       Lásd: <xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName>      > [!NOTE] > Navigated tartalma események figyelését, mint a <xref:System.Windows.FrameworkElement.Loaded>esemény a <xref:System.Windows.Controls.Page>meg hozzáférni a navigated tartalom tulajdonságainak.</xref:System.Windows.Controls.Page> </xref:System.Windows.FrameworkElement.Loaded>"
  syntax:
    content: public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;
    return:
      type: System.Windows.Navigation.LoadCompletedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.LoadComponent(System.Uri)
  id: LoadComponent(System.Uri)
  parent: System.Windows.Application
  langs:
  - csharp
  name: LoadComponent(Uri)
  nameWithType: Application.LoadComponent(Uri)
  fullName: System.Windows.Application.LoadComponent(Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Betölti a [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] fájlt, amely itt található: a megadott [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)], és konvertálja azt a gyökérelemének által meghatározott objektum egy példányát a [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] fájlt."
  remarks: "Explicit módon kell konvertálnia az eredményül kapott értéket a legfelső szintű elemének azonos típusú a [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] fájlt.       A [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fájl lehet egy alkalmazás kódfájl (konfigurálva egy [!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)] oldalelem) vagy az adatok fájlját (egy erőforrás-fájl, a tartalomfájl vagy a hely származási fájl; lásd: [WPF-alkalmazás erőforrás, a tartalom és az adatfájlokat](~/add/includes/ajax-current-ext-md.md)).      > [!NOTE] > A metódus nem szálbiztos."
  syntax:
    content: public static object LoadComponent (Uri resourceLocator);
    parameters:
    - id: resourceLocator
      type: System.Uri
      description: "A <xref:System.Uri>, amely leképezhető relatív [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] fájl.</xref:System.Uri>"
    return:
      type: System.Object
      description: "A gyökérelemnek az XAML-fájl által meghatározott példányának betöltve."
  overload: System.Windows.Application.LoadComponent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>resourceLocator</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>resourceLocator</code> is an absolute [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.Exception
    commentId: T:System.Exception
    description: "A fájl nem egy [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fájlt."
  platform:
  - net462
- uid: System.Windows.Application.LoadComponent(System.Object,System.Uri)
  id: LoadComponent(System.Object,System.Uri)
  parent: System.Windows.Application
  langs:
  - csharp
  name: LoadComponent(Object,Uri)
  nameWithType: Application.LoadComponent(Object,Uri)
  fullName: System.Windows.Application.LoadComponent(Object,Uri)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Betölti a [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] fájlt, amely itt található: a megadott [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] és konvertálja azt a gyökérelemének által meghatározott objektum egy példányát a [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] fájlt."
  remarks: "A [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] fájl lehet egy alkalmazás kódfájl (konfigurálva egy [!INCLUDE[TLA#tla_msbuild](~/add/includes/tlasharptla-msbuild-md.md)] oldalelem) vagy az adatok fájlját (egy erőforrás-fájl, a tartalomfájl vagy a hely származási fájl; lásd: [WPF-alkalmazás erőforrás, a tartalom és az adatfájlokat](~/add/includes/ajax-current-ext-md.md)).      > [!NOTE] > A metódus nem szálbiztos."
  syntax:
    content: public static void LoadComponent (object component, Uri resourceLocator);
    parameters:
    - id: component
      type: System.Object
      description: "A legfelső szintű elemének azonos típusú objektum a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] fájlt."
    - id: resourceLocator
      type: System.Uri
      description: "A <xref:System.Uri>, amely leképezhető relatív [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] fájl.</xref:System.Uri>"
  overload: System.Windows.Application.LoadComponent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>resourceLocator</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>resourceLocator</code> is an absolute [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>component</code>olyan típusú, amely nem egyezik meg a legfelső szintű elemének a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] fájlt."
  platform:
  - net462
- uid: System.Windows.Application.MainWindow
  id: MainWindow
  parent: System.Windows.Application
  langs:
  - csharp
  name: MainWindow
  nameWithType: Application.MainWindow
  fullName: System.Windows.Application.MainWindow
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja a fő ablakot, az alkalmazás."
  remarks: "A MainWindow automatikusan beállítja az első <xref:System.Windows.Window>objektum az az <xref:System.AppDomain>.</xref:System.AppDomain> való megjelenítésre</xref:System.Windows.Window> hivatkozást       Megadhat egy másik fő ablak úgy, hogy egy másik hozzárendelése MainWindow <xref:System.Windows.Application.Windows%2A>objektum MainWindow tulajdonság.</xref:System.Windows.Application.Windows%2A>       Ha a <xref:System.Windows.Application.ShutdownMode%2A>tulajdonsága a <xref:System.Windows.Application>objektum be van állítva, <xref:System.Windows.ShutdownMode>, a fő ablak bezárása hatására az alkalmazás leállítása.</xref:System.Windows.ShutdownMode> </xref:System.Windows.Application> </xref:System.Windows.Application.ShutdownMode%2A>       A MainWindow tulajdonság a beállítása lehet [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)], ha az alkalmazás fő ablak nem a beállítás által létrehozott ablak a <xref:System.Windows.Application.StartupUri%2A>tulajdonság [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)].</xref:System.Windows.Application.StartupUri%2A> A két korlátozásai a [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)] módszer van:-vagy megadhat egy [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]-csak <xref:System.Windows.Window>vagy egy [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)]-csak <xref:System.Windows.Navigation.NavigationWindow>a fő ablakot,.</xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Window>      – Meg kell adni a <xref:System.Windows.UIElement.Visibility%2A>ablak tulajdonság adja meg, ellenkező esetben nem látható.</xref:System.Windows.UIElement.Visibility%2A>       Az első hivatkozás <xref:System.Windows.Window>objektum példányosítható is nincs felvéve az első elem a <xref:System.Windows.Application.Windows%2A>gyűjtemény.</xref:System.Windows.Application.Windows%2A> </xref:System.Windows.Window> Ha egy hivatkozás egy másik ezt követően beállított MainWindow <xref:System.Windows.Window>, a hivatkozást a főablak jelölésű elem pozícióját változik, miközben elemek sorrendjének <xref:System.Windows.Application.Windows%2A>változatlan marad.</xref:System.Windows.Application.Windows%2A> </xref:System.Windows.Window> Ezért mindig használja a MainWindow a fő ablakot, az első elem a <xref:System.Windows.Application.Windows%2A>.</xref:System.Windows.Application.Windows%2A> helyett      > [!NOTE] > A főablak esetén egy <xref:System.Windows.Navigation.NavigationWindow>, és adott hozzáférés <xref:System.Windows.Navigation.NavigationWindow>tagok, szüksége lesz a <xref:System.Windows.Navigation.NavigationWindow>.</xref:System.Windows.Navigation.NavigationWindow> MainWindow értéke konvertálható</xref:System.Windows.Navigation.NavigationWindow> szükséges</xref:System.Windows.Navigation.NavigationWindow>   >> Ez a tulajdonság csak a szál által létrehozott érhető a <xref:System.Windows.Application>objektum.</xref:System.Windows.Application>"
  example:
  - "The following example shows how to find the main application window.  \n  \n [!code-cs[ApplicationMainWindowSnippets#GetApplicationMainWindowCODE](~/add/codesnippet/csharp/ApplicationMainWindowSnippets.CSharp/App.xaml.cs#getapplicationmainwindowcode)]\n [!code-vb[ApplicationMainWindowSnippets#GetApplicationMainWindowCODE](~/add/codesnippet/visualbasic/applicationmainwindowsnippets/application.xaml.vb#getapplicationmainwindowcode)]  \n  \n The following example shows how to set MainWindow using [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)].  \n  \n [!code-xml[ApplicationMainWindowSnippets#SetApplicationMainWindowXAML](~/add/codesnippet/xaml/ApplicationMainWindowSnippets.XAML/App.xaml#setapplicationmainwindowxaml)]  \n  \n The following example shows how to instantiate the MainWindow in code during application startup.  \n  \n [!code-cs[HOWTOWindowManagementSnippets#FirstWindowUsingCodeCODEBEHIND](~/add/codesnippet/csharp/HOWTOWindowManagementSnippets/App.xaml.cs#firstwindowusingcodecodebehind)]\n [!code-vb[HOWTOWindowManagementSnippets#FirstWindowUsingCodeCODEBEHIND](~/add/codesnippet/visualbasic/howtowindowmanagementsnippets/application.xaml.vb#firstwindowusingcodecodebehind)]"
  syntax:
    content: public System.Windows.Window MainWindow { get; set; }
    return:
      type: System.Windows.Window
      description: "A <xref href=&quot;System.Windows.Window&quot;> </xref> , amely az alkalmazás fő ablak van kijelölve."
  overload: System.Windows.Application.MainWindow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A MainWindow van beállítva, amely a böngészőbe, például egy alkalmazás egy [!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]."
  platform:
  - net462
- uid: System.Windows.Application.Navigated
  id: Navigated
  parent: System.Windows.Application
  langs:
  - csharp
  name: Navigated
  nameWithType: Application.Navigated
  fullName: System.Windows.Application.Navigated
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Esetén a tartalmat, amely van folyamatban nyílik meg az alkalmazás a navigátor által talált, bár ez lehetséges, hogy nem fejeződött be betöltése."
  remarks: "A Navigátor, vagy egy <xref:System.Windows.Navigation.NavigationWindow>vagy <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       Lásd: <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName>"
  syntax:
    content: public event System.Windows.Navigation.NavigatedEventHandler Navigated;
    return:
      type: System.Windows.Navigation.NavigatedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Navigating
  id: Navigating
  parent: System.Windows.Application
  langs:
  - csharp
  name: Navigating
  nameWithType: Application.Navigating
  fullName: System.Windows.Application.Navigating
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A Navigátor az alkalmazás által kért új navigáció előtt következik be."
  remarks: "A Navigátor, vagy egy <xref:System.Windows.Navigation.NavigationWindow>vagy <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       Lásd: <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName>"
  syntax:
    content: public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;
    return:
      type: System.Windows.Navigation.NavigatingCancelEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.NavigationFailed
  id: NavigationFailed
  parent: System.Windows.Application
  langs:
  - csharp
  name: NavigationFailed
  nameWithType: Application.NavigationFailed
  fullName: System.Windows.Application.NavigationFailed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Akkor következik be, amikor hiba történik, míg a kért tartalom egy navigator az alkalmazásban van útvonalon."
  remarks: "A Navigátor, vagy egy <xref:System.Windows.Navigation.NavigationWindow>vagy <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       Lásd: <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName>"
  syntax:
    content: public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;
    return:
      type: System.Windows.Navigation.NavigationFailedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.NavigationProgress
  id: NavigationProgress
  parent: System.Windows.Application
  langs:
  - csharp
  name: NavigationProgress
  nameWithType: Application.NavigationProgress
  fullName: System.Windows.Application.NavigationProgress
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Akkor következik be, a Navigátor navigációs folyamatban lévő adatok megadása az alkalmazás által kezelt letöltés alatt rendszeresen."
  remarks: "A Navigátor, vagy egy <xref:System.Windows.Navigation.NavigationWindow>vagy <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       Lásd: <xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName>"
  syntax:
    content: public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;
    return:
      type: System.Windows.Navigation.NavigationProgressEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.NavigationStopped
  id: NavigationStopped
  parent: System.Windows.Application
  langs:
  - csharp
  name: NavigationStopped
  nameWithType: Application.NavigationStopped
  fullName: System.Windows.Application.NavigationStopped
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Akkor következik be, amikor a <xref uid=&quot;langword_csharp_StopLoading&quot; name=&quot;StopLoading&quot; href=&quot;&quot;> </xref> módszer a Navigátor az alkalmazás neve, vagy ha egy új navigációs által kért a navigátor aktuális navigációs közben."
  remarks: "A Navigátor, vagy egy <xref:System.Windows.Navigation.NavigationWindow>vagy <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> </xref:System.Windows.Navigation.NavigationWindow>       Lásd: <xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName>.</xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName>"
  syntax:
    content: public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;
    return:
      type: System.Windows.Navigation.NavigationStoppedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnActivated(System.EventArgs)
  id: OnActivated(System.EventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnActivated(EventArgs)
  nameWithType: Application.OnActivated(EventArgs)
  fullName: System.Windows.Application.OnActivated(EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.Activated&quot;> </xref> esemény."
  remarks: "OnActivated vet fel a <xref:System.Windows.Application.Activated>esemény.</xref:System.Windows.Application.Activated>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnActivated.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnActivated, ha <xref:System.Windows.Application.Activated>lehet szükséges.</xref:System.Windows.Application.Activated>"
  syntax:
    content: protected virtual void OnActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Egy <xref:System.EventArgs>, amely tartalmazza az eseményadatok.</xref:System.EventArgs>"
  overload: System.Windows.Application.OnActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnDeactivated(System.EventArgs)
  id: OnDeactivated(System.EventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnDeactivated(EventArgs)
  nameWithType: Application.OnDeactivated(EventArgs)
  fullName: System.Windows.Application.OnDeactivated(EventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.Deactivated&quot;> </xref> esemény."
  remarks: "OnDeactivated kiváltja a <xref:System.Windows.Application.Deactivated>esemény.</xref:System.Windows.Application.Deactivated>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnDeactivated.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnDeactivated, ha <xref:System.Windows.Application.Deactivated>lehet szükséges.</xref:System.Windows.Application.Deactivated>"
  syntax:
    content: protected virtual void OnDeactivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Egy <xref:System.EventArgs>, amely tartalmazza az eseményadatok.</xref:System.EventArgs>"
  overload: System.Windows.Application.OnDeactivated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnExit(System.Windows.ExitEventArgs)
  id: OnExit(System.Windows.ExitEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnExit(ExitEventArgs)
  nameWithType: Application.OnExit(ExitEventArgs)
  fullName: System.Windows.Application.OnExit(ExitEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.Exit&quot;> </xref> esemény."
  remarks: "OnExit kiváltja a <xref:System.Windows.Application.Exit>esemény.</xref:System.Windows.Application.Exit>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül a OnExit metódus.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnExit, ha <xref:System.Windows.Application.Exit>lehet szükséges.</xref:System.Windows.Application.Exit>"
  syntax:
    content: protected virtual void OnExit (System.Windows.ExitEventArgs e);
    parameters:
    - id: e
      type: System.Windows.ExitEventArgs
      description: "Egy <xref href=&quot;System.Windows.ExitEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnExit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)
  id: OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnFragmentNavigation(FragmentNavigationEventArgs)
  nameWithType: Application.OnFragmentNavigation(FragmentNavigationEventArgs)
  fullName: System.Windows.Application.OnFragmentNavigation(FragmentNavigationEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.FragmentNavigation&quot;> </xref> esemény."
  remarks: "OnFragmentNavigation kiváltja a <xref:System.Windows.Application.FragmentNavigation>esemény.</xref:System.Windows.Application.FragmentNavigation>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnFragmentNavigation.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnFragmentNavigation, ha <xref:System.Windows.Application.FragmentNavigation>lehet szükséges.</xref:System.Windows.Application.FragmentNavigation>"
  syntax:
    content: protected virtual void OnFragmentNavigation (System.Windows.Navigation.FragmentNavigationEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Navigation.FragmentNavigationEventArgs
      description: "A <xref href=&quot;System.Windows.Navigation.FragmentNavigationEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnFragmentNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)
  id: OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnLoadCompleted(NavigationEventArgs)
  nameWithType: Application.OnLoadCompleted(NavigationEventArgs)
  fullName: System.Windows.Application.OnLoadCompleted(NavigationEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.LoadCompleted&quot;> </xref> esemény."
  remarks: "OnLoadCompleted kiváltja a <xref:System.Windows.Application.LoadCompleted>esemény.</xref:System.Windows.Application.LoadCompleted>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnLoadCompleted.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnLoadCompleted, ha <xref:System.Windows.Application.LoadCompleted>lehet szükséges.</xref:System.Windows.Application.LoadCompleted>"
  syntax:
    content: protected virtual void OnLoadCompleted (System.Windows.Navigation.NavigationEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Navigation.NavigationEventArgs
      description: "A <xref href=&quot;System.Windows.Navigation.NavigationEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)
  id: OnNavigated(System.Windows.Navigation.NavigationEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnNavigated(NavigationEventArgs)
  nameWithType: Application.OnNavigated(NavigationEventArgs)
  fullName: System.Windows.Application.OnNavigated(NavigationEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.Navigated&quot;> </xref> esemény."
  remarks: "OnNavigated vet fel a <xref:System.Windows.Application.Navigated>esemény.</xref:System.Windows.Application.Navigated>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnNavigated.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnNavigated, ha <xref:System.Windows.Application.Navigated>lehet szükséges.</xref:System.Windows.Application.Navigated>"
  syntax:
    content: protected virtual void OnNavigated (System.Windows.Navigation.NavigationEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Navigation.NavigationEventArgs
      description: "A <xref href=&quot;System.Windows.Navigation.NavigationEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnNavigated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)
  id: OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnNavigating(NavigatingCancelEventArgs)
  nameWithType: Application.OnNavigating(NavigatingCancelEventArgs)
  fullName: System.Windows.Application.OnNavigating(NavigatingCancelEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.Navigating&quot;> </xref> esemény."
  remarks: "OnNavigating vet fel a <xref:System.Windows.Application.Navigating>esemény.</xref:System.Windows.Application.Navigating>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnNavigating.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnNavigating, ha <xref:System.Windows.Application.Navigating>lehet szükséges.</xref:System.Windows.Application.Navigating>"
  syntax:
    content: protected virtual void OnNavigating (System.Windows.Navigation.NavigatingCancelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Navigation.NavigatingCancelEventArgs
      description: "A <xref href=&quot;System.Windows.Navigation.NavigatingCancelEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnNavigating*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)
  id: OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnNavigationFailed(NavigationFailedEventArgs)
  nameWithType: Application.OnNavigationFailed(NavigationFailedEventArgs)
  fullName: System.Windows.Application.OnNavigationFailed(NavigationFailedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.NavigationFailed&quot;> </xref> esemény."
  remarks: "OnNavigationFailed vet fel a <xref:System.Windows.Application.NavigationFailed>esemény.</xref:System.Windows.Application.NavigationFailed>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnNavigationFailed.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnNavigationFailed, ha <xref:System.Windows.Application.NavigationFailed>lehet szükséges.</xref:System.Windows.Application.NavigationFailed>"
  example:
  - "<xref:System.Windows.Application.OnFragmentNavigation%2A>  \n  \n <xref:System.Windows.Application.OnLoadCompleted%2A>  \n  \n <xref:System.Windows.Application.OnNavigating%2A>  \n  \n <xref:System.Windows.Application.OnNavigated%2A>  \n  \n <xref:System.Windows.Application.OnNavigationProgress%2A>  \n  \n <xref:System.Windows.Application.OnNavigationStopped%2A>"
  syntax:
    content: protected virtual void OnNavigationFailed (System.Windows.Navigation.NavigationFailedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Navigation.NavigationFailedEventArgs
      description: "A <xref href=&quot;System.Windows.Navigation.NavigationFailedEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnNavigationFailed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)
  id: OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnNavigationProgress(NavigationProgressEventArgs)
  nameWithType: Application.OnNavigationProgress(NavigationProgressEventArgs)
  fullName: System.Windows.Application.OnNavigationProgress(NavigationProgressEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.NavigationProgress&quot;> </xref> esemény."
  remarks: "OnNavigationProgress kiváltja a <xref:System.Windows.Application.NavigationProgress>esemény.</xref:System.Windows.Application.NavigationProgress>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnNavigationProgress.</xref:System.Windows.Application> A felülbírált metódus kell hívható explicit módon OnNavigationProgress az alaposztályban Ha <xref:System.Windows.Application.NavigationProgress>lehet szükséges.</xref:System.Windows.Application.NavigationProgress>"
  syntax:
    content: protected virtual void OnNavigationProgress (System.Windows.Navigation.NavigationProgressEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Navigation.NavigationProgressEventArgs
      description: "A <xref href=&quot;System.Windows.Navigation.NavigationProgressEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnNavigationProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)
  id: OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnNavigationStopped(NavigationEventArgs)
  nameWithType: Application.OnNavigationStopped(NavigationEventArgs)
  fullName: System.Windows.Application.OnNavigationStopped(NavigationEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.NavigationStopped&quot;> </xref> esemény."
  remarks: "OnNavigationStopped kiváltja a <xref:System.Windows.Application.NavigationStopped>esemény.</xref:System.Windows.Application.NavigationStopped>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnNavigationStopped.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnNavigationStopped, ha <xref:System.Windows.Application.NavigationStopped>lehet szükséges.</xref:System.Windows.Application.NavigationStopped>"
  syntax:
    content: protected virtual void OnNavigationStopped (System.Windows.Navigation.NavigationEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Navigation.NavigationEventArgs
      description: "A <xref href=&quot;System.Windows.Navigation.NavigationEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnNavigationStopped*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)
  id: OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnSessionEnding(SessionEndingCancelEventArgs)
  nameWithType: Application.OnSessionEnding(SessionEndingCancelEventArgs)
  fullName: System.Windows.Application.OnSessionEnding(SessionEndingCancelEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.SessionEnding&quot;> </xref> esemény."
  remarks: "OnSessionEnding vet fel a <xref:System.Windows.Application.SessionEnding>esemény.</xref:System.Windows.Application.SessionEnding>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnSessionEnding.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnSessionEnding, ha <xref:System.Windows.Application.SessionEnding>lehet szükséges.</xref:System.Windows.Application.SessionEnding>"
  syntax:
    content: protected virtual void OnSessionEnding (System.Windows.SessionEndingCancelEventArgs e);
    parameters:
    - id: e
      type: System.Windows.SessionEndingCancelEventArgs
      description: "A <xref href=&quot;System.Windows.SessionEndingCancelEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnSessionEnding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)
  id: OnStartup(System.Windows.StartupEventArgs)
  parent: System.Windows.Application
  langs:
  - csharp
  name: OnStartup(StartupEventArgs)
  nameWithType: Application.OnStartup(StartupEventArgs)
  fullName: System.Windows.Application.OnStartup(StartupEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Kiváltja a <xref href=&quot;System.Windows.Application.Startup&quot;> </xref> esemény."
  remarks: "OnStartup vet fel a <xref:System.Windows.Application.Startup>esemény.</xref:System.Windows.Application.Startup>       Egy abból származó típusú <xref:System.Windows.Application>bírálhatja felül OnStartup.</xref:System.Windows.Application> A felülbírált metódust kell hívni az alaposztályban OnStartup, ha a <xref:System.Windows.Application.Startup>esemény kell generál.</xref:System.Windows.Application.Startup>"
  syntax:
    content: protected virtual void OnStartup (System.Windows.StartupEventArgs e);
    parameters:
    - id: e
      type: System.Windows.StartupEventArgs
      description: "A <xref href=&quot;System.Windows.StartupEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Windows.Application.OnStartup*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Properties
  id: Properties
  parent: System.Windows.Application
  langs:
  - csharp
  name: Properties
  nameWithType: Application.Properties
  fullName: System.Windows.Application.Properties
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy alkalmazás-tulajdonságok gyűjteményének beolvasása."
  remarks: "<xref:System.Windows.Application>dictionary keresztül használó alkalmazás-hatókör tulajdonságait tulajdonságok közzététele.</xref:System.Windows.Application> Ez lehetővé teszi, hogy állapotban lévő összes kódot között megosztani egy <xref:System.AppDomain>szálbiztos módon, a saját állapot kód írása nélkül.</xref:System.AppDomain>       Tulajdonságok Tulajdonságok tárolja a megfelelő típust adott vissza lehet alakítani.       TheProperties tulajdonság szálbiztos, és bármely szálon érhető el."
  example:
  - "The following example shows how create and use an application-scope property using Properties.  \n  \n [!code-xml[ApplicationPropertiesSnippets#HandleStartupXAML](~/add/codesnippet/xaml/ApplicationPropertiesSnippets.CSharp/App.xaml#handlestartupxaml)]  \n  \n [!code-cs[ApplicationPropertiesSnippets#HandleStartupCODEBEHIND](~/add/codesnippet/csharp/ApplicationPropertiesSnippets.CSharp/App.xaml.cs#handlestartupcodebehind)]\n [!code-vb[ApplicationPropertiesSnippets#HandleStartupCODEBEHIND](~/add/codesnippet/visualbasic/applicationpropertiessnippets/application.xaml.vb#handlestartupcodebehind)]  \n  \n [!code-xml[ApplicationPropertiesSnippets#MainWindowGetPropertyXAML1](~/add/codesnippet/xaml/ApplicationPropertiesSnippets.CSharp/MainWindow.xaml#mainwindowgetpropertyxaml1)]  \n[!code-xml[ApplicationPropertiesSnippets#MainWindowGetPropertyXAML2](~/add/codesnippet/xaml/ApplicationPropertiesSnippets.CSharp/MainWindow.xaml#mainwindowgetpropertyxaml2)]  \n  \n [!code-cs[ApplicationPropertiesSnippets#MainWindowGetPropertyCODEBEHIND](~/add/codesnippet/csharp/ApplicationPropertiesSnippets.CSharp/MainWindow.xaml.cs#mainwindowgetpropertycodebehind)]\n [!code-vb[ApplicationPropertiesSnippets#MainWindowGetPropertyCODEBEHIND](~/add/codesnippet/visualbasic/applicationpropertiessnippets/mainwindow.xaml.vb#mainwindowgetpropertycodebehind)]"
  syntax:
    content: public System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "Egy <xref:System.Collections.IDictionary>, amely tartalmazza az alkalmazás-hatókör tulajdonságai.</xref:System.Collections.IDictionary>"
  overload: System.Windows.Application.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.ResourceAssembly
  id: ResourceAssembly
  parent: System.Windows.Application
  langs:
  - csharp
  name: ResourceAssembly
  nameWithType: Application.ResourceAssembly
  fullName: System.Windows.Application.ResourceAssembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja a <xref:System.Reflection.Assembly>, amely biztosítja, hogy a csomag [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] erőforrásokra egy [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] alkalmazás.</xref:System.Reflection.Assembly>"
  remarks: "Alapértelmezés szerint [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] erőforrások fakadó problémák megoldásával kapcsolatban a bejegyzés szerelvény, a visszaadott érték által azonosított futási időben a <xref:System.Reflection.Assembly.GetEntryAssembly%2A>metódus.</xref:System.Reflection.Assembly.GetEntryAssembly%2A>       A bejegyzés szerelvény be által megtalált szerelvény <xref:System.Reflection.Assembly.GetEntryAssembly%2A>és a következő lehet:-az alapértelmezett alkalmazástartomány a végrehajtható szerelvénnyel.</xref:System.Reflection.Assembly.GetEntryAssembly%2A>      -Az első szerelvény <xref:System.AppDomain.ExecuteAssembly%2A>.</xref:System.AppDomain.ExecuteAssembly%2A> meghívásával hajtható végre       A következő esetekben azonban egy [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] szerelvény nem olvasható be a belépési összeállításra mutató hivatkozást: – egy nem felügyelt (natív) alkalmazás-gazdagépekkel a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] szerelvény.      -A kezelt alkalmazás-gazdagépekkel a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] tartományába egy új alkalmazás eltérő módszerrel <xref:System.AppDomain.ExecuteAssembly%2A>.</xref:System.AppDomain.ExecuteAssembly%2A> betöltésével szerelvény       Mindkét esetben <xref:System.Reflection.Assembly.GetEntryAssembly%2A>adja vissza `null`, és a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] szerelvény erőforrásokat nem lehet feloldani.</xref:System.Reflection.Assembly.GetEntryAssembly%2A> Ezekben az esetekben ResourceAssembly állítható be, csak egyszer, a szerelvény-erőforrások megoldásához használandó hivatkozással.       ResourceAssembly csak egyszer állítható be, mert nem valószínű, hogy az erőforrás-szerelvény után módosítja a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] szerelvény be töltve.      > [!NOTE] > ResourceAssembly nem állítható be, amikor egy [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] szerelvény képes felderíteni a bejegyzés szerelvény – Ez azt jelenti, ha <xref:System.Reflection.Assembly.GetEntryAssembly%2A>egy szerelvényre mutató hivatkozást ad vissza helyett `null`.</xref:System.Reflection.Assembly.GetEntryAssembly%2A>       Ez a tulajdonság szálbiztos, és egyetlen szálból érhető el.       ResourceAssembly megjelent a .NET-keretrendszer 3.5-ös verziója.  További információkért lásd: [verziója és a függőségek](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Reflection.Assembly ResourceAssembly { get; set; }
    return:
      type: System.Reflection.Assembly
      description: "Egy hivatkozást a <xref:System.Reflection.Assembly>, amely biztosítja, hogy a csomag [!INCLUDE[TLA#tla_uri#plural](~/add/includes/tlasharptla-urisharpplural-md.md)] erőforrásokra egy [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] alkalmazás.</xref:System.Reflection.Assembly>"
  overload: System.Windows.Application.ResourceAssembly*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] alkalmazás rendelkezik egy bejegyzés szerelvény, illetve ResourceAssembly már be van állítva."
  platform:
  - net462
- uid: System.Windows.Application.Resources
  id: Resources
  parent: System.Windows.Application
  langs:
  - csharp
  name: Resources
  nameWithType: Application.Resources
  fullName: System.Windows.Application.Resources
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja az alkalmazás-hatókör erőforrások, például a stílusok és ecsetek gyűjteménye."
  remarks: "Az erőforrás-tulajdonság segítségével osztozik az erőforrásokon keresztül a windows és az alkalmazások elemeket. Továbbá az erőforrás-tulajdonság az erőforrás keresési elérési útja, amely a következő sorrendben pontja szerepel: 1.  2. elemek.  Windows 3.  4. erőforrásokat.  Rendszer következésképpen [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] elemek alkalmazás-hatókör erőforrásokat kell kötni. Emellett ha megváltoztatja az erőforrások, az erőforrás rendszer gondoskodik arról, hogy a(z) tulajdonságaiban, amely ezeket az erőforrásokat kötött automatikusan frissülnek a változásnak.       Alkalmazás-hatókör forrásokban egyszerűen konzisztens téma támogatja az alkalmazás minden részében. Könnyedén létrehozhat a téma [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] használatával a `Application.Resources` címke. Azonban ha az alkalmazás támogatja több téma, amely számos téma elemek is tartalmazhat, lehet, kezelhetők legyenek egy könnyebben <xref:System.Windows.ResourceDictionary>Minden téma-példányt.</xref:System.Windows.ResourceDictionary> Ezzel a módszerrel új témát alkalmazhassa az erőforrások tulajdonság beállítása a megfelelő <xref:System.Windows.ResourceDictionary>.</xref:System.Windows.ResourceDictionary>       Nincsenek erőforrások használata, ha két szempontokat. Első, a szótár *kulcs* van objektum, ezért meg kell pontosan a objektum példányt használja mind beállítást, és első tulajdonság értéke (ne feledje, hogy a kulcs kis-és nagybetűket karakterlánc használata esetén). Második, a szótár *érték* egy objektum van, akkor az érték átalakítása típusa megfelelő, ha egy tulajdonság értékének lekérését.       Erőforrások szálbiztos, és egyetlen szálból érhető el."
  example:
  - "This example illustrates how to use [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] together with application-scope resources to create a consistent visual appearance.  \n  \n [!code-xml[ApplicationResourcesSnippets#ResourcesPropertyXAML](~/add/codesnippet/xaml/ApplicationResourcesSnippets.XAML/App.xaml#resourcespropertyxaml)]  \n  \n [!code-xml[ApplicationResourcesSnippets#WindowBackgroundPropertyXAML1](~/add/codesnippet/xaml/ApplicationResourcesSnippets.XAML/MainWindow.xaml#windowbackgroundpropertyxaml1)]  \n[!code-xml[ApplicationResourcesSnippets#WindowBackgroundPropertyXAML2](~/add/codesnippet/xaml/ApplicationResourcesSnippets.XAML/MainWindow.xaml#windowbackgroundpropertyxaml2)]  \n  \n The following example shows how to set an application resource in code and XAML.  \n  \n [!code-vb[HOWTOApplicationModelSnippets#SetApplicationScopeResourceCODE](~/add/codesnippet/visualbasic/howtoapplicationmodelsnippets/applicationpropertiessnippet.xaml.vb#setapplicationscoperesourcecode)]\n [!code-cs[HOWTOApplicationModelSnippets#SetApplicationScopeResourceCODE](~/add/codesnippet/csharp/HOWTOApplicationModelSnippets/ApplicationPropertiesSnippet.xaml.cs#setapplicationscoperesourcecode)]  \n  \n [!code-xml[HOWTOApplicationModelSnippets#SetApplicationScopeResourceXAML](~/add/codesnippet/xaml/HOWTOApplicationModelSnippets/App.xaml#setapplicationscoperesourcexaml)]  \n  \n The following example shows how to get an application resource in code.  \n  \n [!code-vb[HOWTOApplicationModelSnippets#GetApplicationScopeResourceCODE](~/add/codesnippet/visualbasic/howtoapplicationmodelsnippets/applicationpropertiessnippet.xaml.vb#getapplicationscoperesourcecode)]\n [!code-cs[HOWTOApplicationModelSnippets#GetApplicationScopeResourceCODE](~/add/codesnippet/csharp/HOWTOApplicationModelSnippets/ApplicationPropertiesSnippet.xaml.cs#getapplicationscoperesourcecode)]"
  syntax:
    content: public System.Windows.ResourceDictionary Resources { get; set; }
    return:
      type: System.Windows.ResourceDictionary
      description: "A <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> objektum, amely nulla vagy több alkalmazás-hatókör erőforrásokat tartalmazza."
  overload: System.Windows.Application.Resources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Run
  id: Run
  parent: System.Windows.Application
  langs:
  - csharp
  name: Run()
  nameWithType: Application.Run()
  fullName: System.Windows.Application.Run()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Elindítja a [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] alkalmazás."
  remarks: "<xref:System.Windows.Application.Run%2A>start beszerzését a [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] alkalmazás.</xref:System.Windows.Application.Run%2A> Ha megadja a <xref:System.Windows.Application>jelölés során, vagy a jelölés során és a háttérkód, <xref:System.Windows.Application.Run%2A>hívja meg a rendszer implicit módon.</xref:System.Windows.Application.Run%2A> </xref:System.Windows.Application> Azonban a <xref:System.Windows.Application>kóddal, akkor explicit módon hívja az <xref:System.Windows.Application.Run%2A>.</xref:System.Windows.Application.Run%2A> </xref:System.Windows.Application> megadása       Amikor <xref:System.Windows.Application.Run%2A>nevezik, <xref:System.Windows.Application>csatol egy új <xref:System.Windows.Threading.Dispatcher>a példányt a [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] szál.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Application> </xref:System.Windows.Application.Run%2A> Ezt követően a <xref:System.Windows.Threading.Dispatcher>objektum <xref:System.Windows.Threading.Dispatcher.Run%2A>metódus neve, amely elindítja egy üzenet szivattyú windows üzenetek feldolgozásához.</xref:System.Windows.Threading.Dispatcher.Run%2A> </xref:System.Windows.Threading.Dispatcher> Végezetül a <xref:System.Windows.Threading.Dispatcher>hívások objektum a <xref:System.Windows.Application>objektum a <xref:System.Windows.Application.OnStartup%2A>metódust kell kiadni a <xref:System.Windows.Application.Startup>esemény.</xref:System.Windows.Application.Startup> </xref:System.Windows.Application.OnStartup%2A> </xref:System.Windows.Application> </xref:System.Windows.Threading.Dispatcher> Ezért az alkalmazás végrehajtási modell hozott létre az idő kezeli a <xref:System.Windows.Application.Startup>, amikor az alkalmazás tekinthető rendszert kell futtatnia.</xref:System.Windows.Application.Startup>       Egy alkalmazás nem fut <xref:System.Windows.Application.Shutdown%2A>nevezik; értékének a <xref:System.Windows.Application.ShutdownMode%2A>tulajdonság határozza meg, mikor <xref:System.Windows.Application.Shutdown%2A>nevezik, és automatikusan történik, vagy kell explicit módon hívja meg tőle</xref:System.Windows.Application.Shutdown%2A> </xref:System.Windows.Application.ShutdownMode%2A> </xref:System.Windows.Application.Shutdown%2A>       <xref:System.Windows.Application.Run%2A>csak a szál által létrehozott meghívhatók a <xref:System.Windows.Application>objektum.</xref:System.Windows.Application></xref:System.Windows.Application.Run%2A> Emellett <xref:System.Windows.Application.Run%2A>nem hívható meg egy [!INCLUDE[TLA2#tla_xbap](~/add/includes/ajax-current-ext-md.md)].</xref:System.Windows.Application.Run%2A>"
  example:
  - "The following example shows an application that uses a custom <xref:System.Windows.Application> and must therefore explicitly call <xref:System.Windows.Application.Run%2A>.  \n  \n [!code-vb[ApplicationRunSnippets#CustomEntryPointAndRunCODE](~/add/codesnippet/visualbasic/applicationrunsnippets/app.vb#customentrypointandruncode)]\n [!code-cs[ApplicationRunSnippets#CustomEntryPointAndRunCODE](~/add/codesnippet/csharp/ApplicationRunSnippets.CSharp/App.cs#customentrypointandruncode)]"
  syntax:
    content: public int Run ();
    parameters: []
    return:
      type: System.Int32
      description: "A <xref:System.Int32>az operációs rendszer eredményül, ha az alkalmazás leállása alkalmazás kilépési kódot.</xref:System.Int32> Alapértelmezés szerint a kilépési kód értéke 0."
  overload: System.Windows.Application.Run*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Futtatása böngészőben futtatott alkalmazás neve (például egy [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)])."
  platform:
  - net462
- uid: System.Windows.Application.Run(System.Windows.Window)
  id: Run(System.Windows.Window)
  parent: System.Windows.Application
  langs:
  - csharp
  name: Run(Window)
  nameWithType: Application.Run(Window)
  fullName: System.Windows.Application.Run(Window)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Elindítja a [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] alkalmazás és a megadott ablak nyílik meg."
  remarks: "A túlterhelési bővíti a <xref:System.Windows.Application.Run%2A>metódust a megadott ablak megnyitása után az alkalmazás elindul.</xref:System.Windows.Application.Run%2A>       Ha megad egy kódot <xref:System.Windows.Application>, amely megnyit egy ablakot, futásának indításakor, explicit módon hívja Futtatás.</xref:System.Windows.Application>       Ha hoz létre a <xref:System.Windows.Application>a jelölés során, vagy a jelölés során és a háttérkód, akkor is automatikusan ablak megnyitása során a következő módszerek valamelyikével: - deklarációval, úgy, hogy <xref:System.Windows.Application.StartupUri%2A>.</xref:System.Windows.Application.StartupUri%2A> </xref:System.Windows.Application>      -Programozott módon által <xref:System.Windows.Application.Startup>.</xref:System.Windows.Application.Startup> kezelése"
  example:
  - "The following example shows an application with a manually-created static entry point method that instantiates <xref:System.Windows.Application>, before calling <xref:System.Windows.Application.Run%2A>.  \n  \n [!code-cs[ApplicationRunOL1Snippets#CustomEntryPointAndRunOL1CODE](~/add/codesnippet/csharp/ApplicationRunOL1Snippets.CSharp/App.cs#customentrypointandrunol1code)]\n [!code-vb[ApplicationRunOL1Snippets#CustomEntryPointAndRunOL1CODE](~/add/codesnippet/visualbasic/applicationrunol1snippets/app.vb#customentrypointandrunol1code)]"
  syntax:
    content: public int Run (System.Windows.Window window);
    parameters:
    - id: window
      type: System.Windows.Window
      description: "A <xref href=&quot;System.Windows.Window&quot;> </xref> , amely automatikusan megnyílik az alkalmazás indításakor."
    return:
      type: System.Int32
      description: "A <xref:System.Int32>az operációs rendszer eredményül, ha az alkalmazás leállása alkalmazás kilépési kódot.</xref:System.Int32> Alapértelmezés szerint a kilépési kód értéke 0."
  overload: System.Windows.Application.Run*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.Application.Run*>egy böngészőben futtatott alkalmazáshoz meghívott (például egy [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]).</xref:System.Windows.Application.Run*>"
  platform:
  - net462
- uid: System.Windows.Application.SessionEnding
  id: SessionEnding
  parent: System.Windows.Application
  langs:
  - csharp
  name: SessionEnding
  nameWithType: Application.SessionEnding
  fullName: System.Windows.Application.SessionEnding
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Akkor következik be, amikor a felhasználó befejezi a [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] munkamenet kijelentkezés vagy az operációs rendszer leállítását."
  remarks: "Alapértelmezés szerint az alkalmazás leállása esetén a [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] munkamenete véget nem ér, amely akkor fordul elő, amikor a felhasználó kijelentkezik vagy leáll. Ha ez történik, [!INCLUDE[TLA2#tla_mswin](~/add/includes/tla2sharptla-mswin-md.md)] kéri le kell állítania minden nyitott alkalmazáshoz. Azonban úgy is, hogy az alkalmazás nem áll készen a leállítás előtt, ha ez történik. Például egy alkalmazás, amely inkonzisztens állapotban, vagy egy hosszú ideig futó művelet közepén adatainak kell. Ezekben a helyzetekben azt megakadályozhatja, hogy a munkamenet befejezése a kívánatosak lehetnek, és több kívánatos, a felhasználók dönthetnek arról, hogy ahhoz, hogy a munkamenet befejezéséhez is lehet.       Amikor a munkamenet befejeződik a SessionEnding esemény kezelnek észlelését. Ha egy alkalmazás megakadályozhatja, hogy a munkamenet befejezése, a a <xref:System.Windows.SessionEndingCancelEventArgs>az eseménykezelő átadott argumentum elérhetővé teszi a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>, amely `true` (az alapértelmezett érték `false`).</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Windows.SessionEndingCancelEventArgs>       Ha SessionEnding nem kezelt, vagy megszakítás alatt nélkül <xref:System.Windows.Application.Shutdown%2A>nevezik, és a <xref:System.Windows.Application.Exit>egy esemény jelenik meg.</xref:System.Windows.Application.Exit> </xref:System.Windows.Application.Shutdown%2A>       A munkamenetek befejezéséről miért kapcsolatos további információk beszerzéséhez vizsgálhatja meg az alkalmazás <xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A>, amelyek egyike az <xref:System.Windows.ReasonSessionEnding>értékek (<xref:System.Windows.ReasonSessionEnding> és <xref:System.Windows.ReasonSessionEnding>).</xref:System.Windows.ReasonSessionEnding> </xref:System.Windows.ReasonSessionEnding> </xref:System.Windows.ReasonSessionEnding> </xref:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding%2A>       SessionEnding konzol alkalmazások nem következik be.       SessionEnding jelenik meg, csak az a szál által létrehozott a <xref:System.Windows.Application>objektum.</xref:System.Windows.Application>       SessionEnding nem jelenik meg, a [!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)]."
  example:
  - "The following example demonstrates how to handle the SessionEnding event and allow the user to cancel it.  \n  \n [!code-xml[ApplicationSessionEndingSnippets#HandlingSessionEndingXAML](~/add/codesnippet/xaml/ApplicationSessionEndingSnippets.CSharp/App.xaml#handlingsessionendingxaml)]  \n  \n [!code-vb[ApplicationSessionEndingSnippets#HandlingSessionEndingCODEBEHIND](~/add/codesnippet/visualbasic/applicationsessionendingsnippets/application.xaml.vb#handlingsessionendingcodebehind)]\n [!code-cs[ApplicationSessionEndingSnippets#HandlingSessionEndingCODEBEHIND](~/add/codesnippet/csharp/ApplicationSessionEndingSnippets.CSharp/App.xaml.cs#handlingsessionendingcodebehind)]"
  syntax:
    content: public event System.Windows.SessionEndingCancelEventHandler SessionEnding;
    return:
      type: System.Windows.SessionEndingCancelEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.SetCookie(System.Uri,System.String)
  id: SetCookie(System.Uri,System.String)
  parent: System.Windows.Application
  langs:
  - csharp
  name: SetCookie(Uri,String)
  nameWithType: Application.SetCookie(Uri,String)
  fullName: System.Windows.Application.SetCookie(Uri,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Létrehoz egy cookie-jának <xref:System.Uri>.</xref:System.Uri> megadott helyre"
  remarks: "A cookie-k egy tetszőleges kérelmet az ügyfélszámítógépen alkalmazás munkafolyamatokban (munkamenet cookie-k) vagy (állandó cookie-k) alkalmazás-munkamenetek között tárolt adatok. Mindkét típusú cookie-k hívásával SetCookie hozhat létre.       Cookie-k adatokat általában időt vesz igénybe egy név-érték pár formájában a következő formátumban: `Name=Value` át ilyen formátumú karakterlánc való SetCookie, valamint a <xref:System.Uri>a helyet, amelyhez a cookie-t kell beállítani a (általában az alkalmazástartomány).</xref:System.Uri>       -E a cookie-k a egy munkamenetcookie-t vagy állandó cookie attól függ, hogy a cookie-karakterlánc SetCookie átadandó tartalmaz lejárati dátummal. A munkamenet cookie-nak a karakterlánc nem tartalmaz lejárati dátummal. A karakterlánc egy állandó cookie van, és a következő formátumban kell megadni: `NAME=VALUE; expires=DAY, DD-MMM-YYYY HH:MM:SS GMT` állandó cookie-k vannak tárolva az aktuális [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] -telepítés ideiglenes internetfájlok mappa lejártáig teljesíti, ebben az esetben törölni. Az alkalmazásból állandó cookie törölheti a lejárat dátuma múltbeli dátum/idő értékre állításával.       A cookie-k áttekintését [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)], lásd: [navigációs áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetCookie (Uri uri, string value);
    parameters:
    - id: uri
      type: System.Uri
      description: "A <xref:System.Uri>, amely megadja, hogy a helyet, amelynek a cookie-t kell létrehozni.</xref:System.Uri>"
    - id: value
      type: System.String
      description: "A <xref:System.String>, amely tartalmazza a cookie adataihoz.</xref:System.String>"
  overload: System.Windows.Application.SetCookie*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "A [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] hiba jelenik meg, amelyet a <xref uid=&quot;langword_csharp_InternetSetCookie&quot; name=&quot;InternetSetCookie&quot; href=&quot;&quot;> </xref> (SetCookie által meghívott) függvény probléma esetén a megadott cookie-k létrehozására tett kísérlet közben."
  platform:
  - net462
- uid: System.Windows.Application.Shutdown
  id: Shutdown
  parent: System.Windows.Application
  langs:
  - csharp
  name: Shutdown()
  nameWithType: Application.Shutdown()
  fullName: System.Windows.Application.Shutdown()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Az alkalmazás leáll."
  remarks: "Leállítás meghívásakor a az alkalmazás leáll. Kezelheti a <xref:System.Windows.Application.Exit>esemény észlelése, ha egy alkalmazás kívánt leállnak, bármely megfelelő feldolgozás elvégzéséhez.</xref:System.Windows.Application.Exit>       Leállítás implicit módon hívja [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] a következő esetekben: – <xref:System.Windows.Application.ShutdownMode%2A> <xref:System.Windows.ShutdownMode>.</xref:System.Windows.ShutdownMode> beállítása</xref:System.Windows.Application.ShutdownMode%2A>      – Amikor a <xref:System.Windows.Application.ShutdownMode%2A> <xref:System.Windows.ShutdownMode>.</xref:System.Windows.ShutdownMode> beállítása</xref:System.Windows.Application.ShutdownMode%2A>      – Amikor egy felhasználó egy munkamenet befejezése és a <xref:System.Windows.Application.SessionEnding>esemény van vagy nem kezelt, vagy megszakítása nélkül.</xref:System.Windows.Application.SessionEnding>       Leállítási explicit módon hívja hatására az alkalmazás leállítása, függetlenül attól, hogy a <xref:System.Windows.Application.ShutdownMode%2A>beállítás.</xref:System.Windows.Application.ShutdownMode%2A> Azonban ha <xref:System.Windows.Application.ShutdownMode%2A>értéke <xref:System.Windows.ShutdownMode>, meg kell hívnia az alkalmazás leállítása Leállítás.</xref:System.Windows.ShutdownMode> </xref:System.Windows.Application.ShutdownMode%2A>      > [!IMPORTANT] > Amikor leállítási nevezik, függetlenül attól, hogy leállítja az alkalmazás a <xref:System.Windows.Window.Closing>bármely nyissa meg a Windows Eseménynapló megszakadt.</xref:System.Windows.Window.Closing>       Ez a metódus hívása csak a a szál által létrehozott a <xref:System.Windows.Application>objektum.</xref:System.Windows.Application>"
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.Windows.Application.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Shutdown(System.Int32)
  id: Shutdown(System.Int32)
  parent: System.Windows.Application
  langs:
  - csharp
  name: Shutdown(Int32)
  nameWithType: Application.Shutdown(Int32)
  fullName: System.Windows.Application.Shutdown(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy alkalmazás, amely visszaadja az operációs rendszer a megadott kilépési kód leáll."
  remarks: "Kezelheti a <xref:System.Windows.Application.Exit>esemény beállítása a kilépési kódot.</xref:System.Windows.Application.Exit> Azonban ha explicit módon hívja <xref:System.Windows.Application.Shutdown%2A>, és kezeli a <xref:System.Windows.Application.Exit>csak egy kilépési kód megadásához hívása leállítási helyette.</xref:System.Windows.Application.Exit> </xref:System.Windows.Application.Shutdown%2A>       Ez a metódus hívása csak a a szál által létrehozott a <xref:System.Windows.Application>objektum.</xref:System.Windows.Application>"
  syntax:
    content: public void Shutdown (int exitCode);
    parameters:
    - id: exitCode
      type: System.Int32
      description: "Az alkalmazás egész kilépési kódot. Az alapértelmezett kilépési kód: 0."
  overload: System.Windows.Application.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.ShutdownMode
  id: ShutdownMode
  parent: System.Windows.Application
  langs:
  - csharp
  name: ShutdownMode
  nameWithType: Application.ShutdownMode
  fullName: System.Windows.Application.ShutdownMode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja azt a körülményt, amely hatására a <xref:System.Windows.Application.Shutdown*>hívandó metódust.</xref:System.Windows.Application.Shutdown*>"
  remarks: "Alkalmazások futtatásának csak akkor, ha a <xref:System.Windows.Application.Shutdown%2A>módszer az alkalmazás neve.</xref:System.Windows.Application.Shutdown%2A> Leállítás akkor fordulhat elő, implicit vagy explicit módon, a ShutdownMode tulajdonság által megadott.       Ha a ShutdownMode <xref:System.Windows.ShutdownMode>, [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] implicit módon hívja <xref:System.Windows.Application.Shutdown%2A>Amikor egy alkalmazás utolsó ablak bezárása, még akkor is, ha bármely jelenleg példányként létrehozott windows vannak beállítva a fő ablakot (lásd: <xref:System.Windows.Application.MainWindow%2A>).</xref:System.Windows.Application.MainWindow%2A> </xref:System.Windows.Application.Shutdown%2A> </xref:System.Windows.ShutdownMode>       A ShutdownMode a <xref:System.Windows.ShutdownMode>hatására [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]implicit módon hívására <xref:System.Windows.Application.Shutdown%2A>Amikor a <xref:System.Windows.Application.MainWindow%2A>bezárul, akkor is, ha más windows megnyitott.</xref:System.Windows.Application.MainWindow%2A> </xref:System.Windows.Application.Shutdown%2A> </xref:System.Windows.ShutdownMode>       Egyes alkalmazások élettartama nem lehet függ, amikor a fő vagy utolsó ablakban le van zárva, vagy egyáltalán nem függ a windows lehet. Forgatókönyvek esetén be kell állítani a ShutdownMode tulajdonság <xref:System.Windows.ShutdownMode>, amihez explicit <xref:System.Windows.Application.Shutdown%2A>metódus hívása állítsa le az alkalmazást.</xref:System.Windows.Application.Shutdown%2A> </xref:System.Windows.ShutdownMode> Ellenkező esetben az alkalmazás továbbra is fut a háttérben.       A ShutdownMode állítható deklarációval [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] vagy programozott módon kódból.       Ez a tulajdonság csak a szál által létrehozott érhető a <xref:System.Windows.Application>objektum.</xref:System.Windows.Application>"
  example:
  - "The following example shows how to configure ShutdownMode to specify that an application must be closed explicitly.  \n  \n [!code-xml[ApplicationShutdownModeSnippets#SetShutdownModeXAML](~/add/codesnippet/xaml/ApplicationShutdownModeSnippets.XAML/App.xaml#setshutdownmodexaml)]"
  syntax:
    content: public System.Windows.ShutdownMode ShutdownMode { get; set; }
    return:
      type: System.Windows.ShutdownMode
      description: "A <xref href=&quot;System.Windows.ShutdownMode&quot;> </xref> számbavételi érték. Az alapértelmezett érték <xref href=&quot;System.Windows.ShutdownMode&quot;> </xref>."
  overload: System.Windows.Application.ShutdownMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Startup
  id: Startup
  parent: System.Windows.Application
  langs:
  - csharp
  name: Startup
  nameWithType: Application.Startup
  fullName: System.Windows.Application.Startup
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Akkor következik be, amikor a <xref:System.Windows.Application.Run*>metódusában a <xref href=&quot;System.Windows.Application&quot;> </xref> az objektumot.</xref:System.Windows.Application.Run*>"
  remarks: "Egy tipikus [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] alkalmazás különböző inicializálási feladatokat hajthat végre, indításkor, többek között:-feldolgozási parancssori paraméterek.      -A főablak megnyitása.      -Alkalmazás-hatókör erőforrásainak inicializálása.      -Történt az alkalmazás-hatókör tulajdonságait.       Deklaratív módon megadhatja a fő ablakot, és az alkalmazás-hatókör-erőforrások [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)] (<xref:System.Windows.Application.StartupUri%2A> és <xref:System.Windows.Application.Resources%2A>, illetve).</xref:System.Windows.Application.Resources%2A> </xref:System.Windows.Application.StartupUri%2A> Egyes esetekben azonban az erőforrások vagy az alkalmazás fő ablakában csak meghatározható programozott módon futási időben. Emellett alkalmazás-hatókör tulajdonságait és a parancssori paraméterek csak használható programozott módon. Programozott inicializálási kezelnek az indítási esemény, beleértve a következőket végezheti el: – szerezzen be és feldolgozni a parancssori paraméterek, amelyek érhetők el a <xref:System.Windows.StartupEventArgs.Args%2A>tulajdonsága a <xref:System.Windows.StartupEventArgs>osztály, amely számára az indítási eseménykezelő.</xref:System.Windows.StartupEventArgs> </xref:System.Windows.StartupEventArgs.Args%2A>      -Alkalmazás-hatókör erőforrások inicializálása használatával a <xref:System.Windows.Application.Resources%2A>tulajdonság.</xref:System.Windows.Application.Resources%2A>      -Alkalmazás-hatókör tulajdonságai inicializálása használatával a <xref:System.Windows.Application.Properties%2A>tulajdonság.</xref:System.Windows.Application.Properties%2A>      -Példányt létrehozni, és egy (vagy több) windows megjelenítése.      > [!NOTE] > Parancssori paramétereket is szerezhető: a statikus meghívásával <xref:System.Environment.GetCommandLineArgs%2A>metódusában a <xref:System.Environment>objektum.</xref:System.Environment> </xref:System.Environment.GetCommandLineArgs%2A> Azonban <xref:System.Environment.GetCommandLineArgs%2A>végrehajtandó teljes megbízható kapcsolatot igényel.</xref:System.Environment.GetCommandLineArgs%2A>       Ha <xref:System.Windows.Application.StartupUri%2A>használatával [!INCLUDE[TLA2#tla_titlexaml](~/add/includes/tla2sharptla-titlexaml-md.md)], a fő ablakot létrehozott helyekről nem érhető el a <xref:System.Windows.Application.MainWindow%2A>tulajdonság vagy a <xref:System.Windows.Application.Windows%2A>tulajdonsága a <xref:System.Windows.Application>objektum csak az indítási esemény feldolgozása után.</xref:System.Windows.Application> </xref:System.Windows.Application.Windows%2A> </xref:System.Windows.Application.MainWindow%2A> </xref:System.Windows.Application.StartupUri%2A> Rendszerindítás során hozzá kell férnie a fő ablakot, ha manuálisan létrehozni egy új ablakban objektumot a indítási eseménykezelő szeretné.      > [!NOTE] > Ha az alkalmazás <xref:System.Net.AuthenticationManager.CredentialPolicy%2A>házirend hitelesítő adatok megadásához, be kell állítani <xref:System.Net.AuthenticationManager.CredentialPolicy%2A>után indítási emelt; ellenkező esetben [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)] állít be alapértelmezett belső házirend közvetlenül után az indítási esemény idézett elő.</xref:System.Net.AuthenticationManager.CredentialPolicy%2A> </xref:System.Net.AuthenticationManager.CredentialPolicy%2A>       A parancssori indítás eseménykezelőjét átadott argumentumok nem ugyanaz, mint a [!INCLUDE[TLA#tla_url](~/add/includes/tlasharptla-url-md.md)] lekérdezési átadott karakterlánc-paramétert egy [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]."
  example:
  - "The following example shows how to acquire and process command-line options from a standalone application. If the **/StartMinimized** command-line parameter was provided, the application opens the main window in a minimized state.  \n  \n [!code-xml[ApplicationStartupSnippets#HandleStartupXAML](~/add/codesnippet/xaml/ApplicationStartupSnippets.CSharp/App.xaml#handlestartupxaml)]  \n  \n [!code-cs[ApplicationStartupSnippets#HandleStartupCODEBEHIND](~/add/codesnippet/csharp/ApplicationStartupSnippets.CSharp/App.xaml.cs#handlestartupcodebehind)]\n [!code-vb[ApplicationStartupSnippets#HandleStartupCODEBEHIND](~/add/codesnippet/visualbasic/applicationstartupsnippets/application.xaml.vb#handlestartupcodebehind)]  \n  \n [!INCLUDE[TLA#tla_xbap#plural](~/add/includes/ajax-current-ext-md.md)] cannot retrieve and process command-line arguments because they are launched with [!INCLUDE[TLA#tla_clickonce](~/add/includes/tlasharptla-clickonce-md.md)] deployment (see [Deploying a WPF Application (WPF)](~/add/includes/ajax-current-ext-md.md)). However, they can retrieve and process query string parameters from the URLs that are used to launch them."
  syntax:
    content: public event System.Windows.StartupEventHandler Startup;
    return:
      type: System.Windows.StartupEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.StartupUri
  id: StartupUri
  parent: System.Windows.Application
  langs:
  - csharp
  name: StartupUri
  nameWithType: Application.StartupUri
  fullName: System.Windows.Application.StartupUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja a [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] , amely automatikusan megjelenik az alkalmazás indításakor."
  remarks: "StartupUri segítségével automatikusan betölteni egy [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] erőforrás az alkalmazás indításakor.       Az alábbi táblázatban láthatók a típusú [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] erőforrásokat, amelyek tölthetők be, a típusa ablakban nyílnak meg a, és az alkalmazás, amely ezeket az erőforrásokat a StartupUri jelzőként állíthatók be.      | Típus |} Ablak |} Alkalmazástípusok |}   |----------|------------|----------------------|   | <xref:System.Windows.Window>| <xref:System.Windows.Window>| Csak önálló |}   | <xref:System.Windows.Navigation.NavigationWindow>| <xref:System.Windows.Navigation.NavigationWindow>| Csak önálló |}   | <xref:System.Windows.Controls.Page>| <xref:System.Windows.Navigation.NavigationWindow>| Önálló/böngészőben futtatott |}   | <xref:System.Windows.Controls.UserControl>| <xref:System.Windows.Navigation.NavigationWindow>| Önálló/böngészőben futtatott |}   | <xref:System.Windows.Documents.FlowDocument>| <xref:System.Windows.Navigation.NavigationWindow>| Önálló/böngészőben futtatott |}   | <xref:System.Windows.Navigation.PageFunction%601>| <xref:System.Windows.Navigation.NavigationWindow>| Önálló/böngészőben futtatott |}       Általában a StartupUri tulajdonság értéke a deklaratív módon [!INCLUDE[TLA#tla_titlexaml](~/add/includes/ajax-current-ext-md.md)].</xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Navigation.PageFunction%601> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Documents.FlowDocument> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.UserControl> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Page> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Window> </xref:System.Windows.Window> Azonban beállíthatja StartupUri programozott módon, e, mint a egy <xref:System.Windows.Application.Startup>eseménykezelő, amely akkor hasznos, ha az alkalmazások számára, csak be tudják tölteni a szükséges [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] erőforrások futási időben.</xref:System.Windows.Application.Startup> Például egy alkalmazás előfordulhat, hogy Várjon, amíg az erőforrások betöltése, ha futási idő nevét a [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] erőforrás egy konfigurációs fájl tárolja.       Beállításától StartupUri deklaratív módon vagy programozott módon, a megfelelő [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] erőforrás nincs betöltve amíg után a <xref:System.Windows.Application.Startup>esemény.</xref:System.Windows.Application.Startup> Következésképpen nem elérhető lesz az eredményül kapott ablak alkalmazásból a <xref:System.Windows.Application.Windows%2A>vagy <xref:System.Windows.Application.MainWindow%2A> <xref:System.Windows.Application.Startup>.</xref:System.Windows.Application.Startup> kezelésekor tulajdonság</xref:System.Windows.Application.MainWindow%2A> </xref:System.Windows.Application.Windows%2A>"
  syntax:
    content: public Uri StartupUri { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>hivatkozik, amely a [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] , amely automatikusan megnyílik, az alkalmazás indításakor.</xref:System.Uri>"
  overload: System.Windows.Application.StartupUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "StartupUri null értékre van beállítva."
  platform:
  - net462
- uid: System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  id: System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  isEii: true
  parent: System.Windows.Application
  langs:
  - csharp
  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  nameWithType: Application.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Application.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezések-e a megadott környezeti tulajdonság az elérhető az aktuális hatókörben."
  remarks: "Ez a tag egy explicit illesztőfelületet tag végrehajtására. Használat csak akkor, ha a <xref:System.Windows.Application>példány típusúvá egy <xref:System.Windows.Markup.IQueryAmbient>felületet.</xref:System.Windows.Markup.IQueryAmbient> </xref:System.Windows.Application>"
  syntax:
    content: bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "A kért környezeti tulajdonság neve."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kért környezeti tulajdonság érhető el; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.TryFindResource(System.Object)
  id: TryFindResource(System.Object)
  parent: System.Windows.Application
  langs:
  - csharp
  name: TryFindResource(Object)
  nameWithType: Application.TryFindResource(Object)
  fullName: System.Windows.Application.TryFindResource(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A megadott erőforrás keres."
  remarks: "TryFindResource először az alkalmazás-hatókör erőforrások a megadott erőforrás fog kinézni. Alkalmazás-hatókör erőforrások által kezelt <xref:System.Windows.Application>, és ki vannak téve a a <xref:System.Windows.Application.Resources%2A>tulajdonság.</xref:System.Windows.Application.Resources%2A> </xref:System.Windows.Application> Ha a megadott erőforrás nem található az alkalmazás-hatókör erőforrások készletét, TryFindResource majd ezután keres a rendszererőforrásokat. Rendszererőforrások rendszerhéj-erőforrás a felhasználó által definiált, és színek, betűtípusok és rendszerhéj-konfigurációk. Ezek a ki vannak téve a <xref:System.Windows.SystemColors>, <xref:System.Windows.SystemFonts>, és <xref:System.Windows.SystemParameters>típusokat, illetve statikus tulajdonságként.</xref:System.Windows.SystemParameters> </xref:System.Windows.SystemFonts> </xref:System.Windows.SystemColors> Ha TryFindResource szeretné azokat, ezek a típusok is elérhetővé TryFindResource; átadandó tervezett kulcstulajdonságok erőforrás Ha például <xref:System.Windows.SystemParameters.IconWidthKey%2A>.</xref:System.Windows.SystemParameters.IconWidthKey%2A>       TryFindResource visszaad egy objektumot, mert kell alakítania a visszaadott érték a megfelelő típussal, ha az erőforrás található.       Ez a módszer szálbiztos, és a bármely szálon hívható."
  example:
  - "The following example shows how to use TryFindResource to acquire a resource.  \n  \n [!code-xml[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceXAML](~/add/codesnippet/xaml/ApplicationTryFindResourceSnippets/App.xaml#applicationcalltryfindresourcexaml)]  \n  \n [!code-cs[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND1](~/add/codesnippet/csharp/ApplicationTryFindResourceSnippets/MainWindow.xaml.cs#applicationcalltryfindresourcecodebehind1)]\n [!code-vb[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND1](~/add/codesnippet/visualbasic/applicationtryfindresourcesnippets/mainwindow.xaml.vb#applicationcalltryfindresourcecodebehind1)]  \n[!code-cs[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND2](~/add/codesnippet/csharp/ApplicationTryFindResourceSnippets/MainWindow.xaml.cs#applicationcalltryfindresourcecodebehind2)]\n[!code-vb[ApplicationTryFindResourceSnippets#ApplicationCallTryFindResourceCODEBEHIND2](~/add/codesnippet/visualbasic/applicationtryfindresourcesnippets/mainwindow.xaml.vb#applicationcalltryfindresourcecodebehind2)]"
  syntax:
    content: public object TryFindResource (object resourceKey);
    parameters:
    - id: resourceKey
      type: System.Object
      description: "Található az erőforrás neve."
    return:
      type: System.Object
      description: "A kért erőforrás-objektum. Ha a kért erőforrás nem található, null hivatkozást ad vissza."
  overload: System.Windows.Application.TryFindResource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Application.Windows
  id: Windows
  parent: System.Windows.Application
  langs:
  - csharp
  name: Windows
  nameWithType: Application.Windows
  fullName: System.Windows.Application.Windows
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi a példányként létrehozott windows az alkalmazásban."
  remarks: "A <xref:System.Windows.Window>hivatkozás automatikusan hozzáadódik a Windows, amint egy ablak példányosítani a [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] szál; windows hoznak létre munkavégző szál nem lettek hozzáadva.</xref:System.Windows.Window> A <xref:System.Windows.Window>automatikusan eltávolítása után annak <xref:System.Windows.Window.Closing>esemény kezelése előtt a <xref:System.Windows.Window.Closed>egy esemény jelenik meg.</xref:System.Windows.Window.Closed> </xref:System.Windows.Window.Closing> </xref:System.Windows.Window>       Alapértelmezés szerint a Windows tulajdonság hozzá az első elem lesz a <xref:System.Windows.Application.MainWindow%2A>.</xref:System.Windows.Application.MainWindow%2A>       Ez a tulajdonság csak a szál által létrehozott érhető a <xref:System.Windows.Application>objektum.</xref:System.Windows.Application>"
  example:
  - "The following example demonstrates how to enumerate the Windows property to build a top-level Windows menu, which is common to [!INCLUDE[TLA#tla_mdi](~/add/includes/tlasharptla-mdi-md.md)] applications like [!INCLUDE[TLA#tla_xl](~/add/includes/tlasharptla-xl-md.md)], or multiple-instance Single Document Interface (SDI) applications like [!INCLUDE[TLA#tla_word](~/add/includes/tlasharptla-word-md.md)].  \n  \n [!code-vb[ApplicationWindowsSnippets#WindowMenuItemCODE](~/add/codesnippet/visualbasic/applicationwindowssnippets/windowmenuitem.vb#windowmenuitemcode)]\n [!code-cs[ApplicationWindowsSnippets#WindowMenuItemCODE](~/add/codesnippet/csharp/ApplicationWindowsSnippets.CSharp/WindowMenuItem.cs#windowmenuitemcode)]  \n  \n [!code-xml[ApplicationWindowsSnippets#MainWindowSetWindowsXAML](~/add/codesnippet/xaml/ApplicationWindowsSnippets.CSharp/MainWindow.xaml#mainwindowsetwindowsxaml)]  \n  \n [!code-cs[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND1](~/add/codesnippet/csharp/ApplicationWindowsSnippets.CSharp/MainWindow.xaml.cs#mainwindowsetwindowscodebehind1)]\n [!code-vb[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND1](~/add/codesnippet/visualbasic/applicationwindowssnippets/mainwindow.xaml.vb#mainwindowsetwindowscodebehind1)]  \n[!code-cs[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND2](~/add/codesnippet/csharp/ApplicationWindowsSnippets.CSharp/MainWindow.xaml.cs#mainwindowsetwindowscodebehind2)]\n[!code-vb[ApplicationWindowsSnippets#MainWindowSetWindowsCODEBEHIND2](~/add/codesnippet/visualbasic/applicationwindowssnippets/mainwindow.xaml.vb#mainwindowsetwindowscodebehind2)]"
  syntax:
    content: public System.Windows.WindowCollection Windows { get; }
    return:
      type: System.Windows.WindowCollection
      description: "A <xref href=&quot;System.Windows.WindowCollection&quot;> </xref> , amely tartalmazza az aktuális összes ablak objektumokra való hivatkozások <xref href=&quot;System.AppDomain&quot;> </xref>."
  overload: System.Windows.Application.Windows*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.ResourceReferenceKeyNotFoundException
  parent: System.Windows
  isExternal: false
  name: ResourceReferenceKeyNotFoundException
  nameWithType: ResourceReferenceKeyNotFoundException
  fullName: System.Windows.ResourceReferenceKeyNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Application.#ctor
  parent: System.Windows.Application
  isExternal: false
  name: Application()
  nameWithType: Application.Application()
  fullName: System.Windows.Application.Application()
- uid: System.Windows.Application.Activated
  parent: System.Windows.Application
  isExternal: false
  name: Activated
  nameWithType: Application.Activated
  fullName: System.Windows.Application.Activated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Application.Current
  parent: System.Windows.Application
  isExternal: false
  name: Current
  nameWithType: Application.Current
  fullName: System.Windows.Application.Current
- uid: System.Windows.Application
  parent: System.Windows
  isExternal: false
  name: Application
  nameWithType: Application
  fullName: System.Windows.Application
- uid: System.Windows.Application.Deactivated
  parent: System.Windows.Application
  isExternal: false
  name: Deactivated
  nameWithType: Application.Deactivated
  fullName: System.Windows.Application.Deactivated
- uid: System.Windows.Application.DispatcherUnhandledException
  parent: System.Windows.Application
  isExternal: false
  name: DispatcherUnhandledException
  nameWithType: Application.DispatcherUnhandledException
  fullName: System.Windows.Application.DispatcherUnhandledException
- uid: System.Windows.Threading.DispatcherUnhandledExceptionEventHandler
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherUnhandledExceptionEventHandler
  nameWithType: DispatcherUnhandledExceptionEventHandler
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionEventHandler
- uid: System.Windows.Application.Exit
  parent: System.Windows.Application
  isExternal: false
  name: Exit
  nameWithType: Application.Exit
  fullName: System.Windows.Application.Exit
- uid: System.Windows.ExitEventHandler
  parent: System.Windows
  isExternal: false
  name: ExitEventHandler
  nameWithType: ExitEventHandler
  fullName: System.Windows.ExitEventHandler
- uid: System.Windows.Application.FindResource(System.Object)
  parent: System.Windows.Application
  isExternal: false
  name: FindResource(Object)
  nameWithType: Application.FindResource(Object)
  fullName: System.Windows.Application.FindResource(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Application.FragmentNavigation
  parent: System.Windows.Application
  isExternal: false
  name: FragmentNavigation
  nameWithType: Application.FragmentNavigation
  fullName: System.Windows.Application.FragmentNavigation
- uid: System.Windows.Navigation.FragmentNavigationEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: FragmentNavigationEventHandler
  nameWithType: FragmentNavigationEventHandler
  fullName: System.Windows.Navigation.FragmentNavigationEventHandler
- uid: System.Windows.Application.GetContentStream(System.Uri)
  parent: System.Windows.Application
  isExternal: false
  name: GetContentStream(Uri)
  nameWithType: Application.GetContentStream(Uri)
  fullName: System.Windows.Application.GetContentStream(Uri)
- uid: System.Windows.Resources.StreamResourceInfo
  parent: System.Windows.Resources
  isExternal: false
  name: StreamResourceInfo
  nameWithType: StreamResourceInfo
  fullName: System.Windows.Resources.StreamResourceInfo
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Application.GetCookie(System.Uri)
  parent: System.Windows.Application
  isExternal: false
  name: GetCookie(Uri)
  nameWithType: Application.GetCookie(Uri)
  fullName: System.Windows.Application.GetCookie(Uri)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Application.GetRemoteStream(System.Uri)
  parent: System.Windows.Application
  isExternal: false
  name: GetRemoteStream(Uri)
  nameWithType: Application.GetRemoteStream(Uri)
  fullName: System.Windows.Application.GetRemoteStream(Uri)
- uid: System.Windows.Application.GetResourceStream(System.Uri)
  parent: System.Windows.Application
  isExternal: false
  name: GetResourceStream(Uri)
  nameWithType: Application.GetResourceStream(Uri)
  fullName: System.Windows.Application.GetResourceStream(Uri)
- uid: System.Windows.Application.LoadCompleted
  parent: System.Windows.Application
  isExternal: false
  name: LoadCompleted
  nameWithType: Application.LoadCompleted
  fullName: System.Windows.Application.LoadCompleted
- uid: System.Windows.Navigation.LoadCompletedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: LoadCompletedEventHandler
  nameWithType: LoadCompletedEventHandler
  fullName: System.Windows.Navigation.LoadCompletedEventHandler
- uid: System.Windows.Application.LoadComponent(System.Uri)
  parent: System.Windows.Application
  isExternal: false
  name: LoadComponent(Uri)
  nameWithType: Application.LoadComponent(Uri)
  fullName: System.Windows.Application.LoadComponent(Uri)
- uid: System.Windows.Application.LoadComponent(System.Object,System.Uri)
  parent: System.Windows.Application
  isExternal: false
  name: LoadComponent(Object,Uri)
  nameWithType: Application.LoadComponent(Object,Uri)
  fullName: System.Windows.Application.LoadComponent(Object,Uri)
- uid: System.Windows.Application.MainWindow
  parent: System.Windows.Application
  isExternal: false
  name: MainWindow
  nameWithType: Application.MainWindow
  fullName: System.Windows.Application.MainWindow
- uid: System.Windows.Window
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows.Application.Navigated
  parent: System.Windows.Application
  isExternal: false
  name: Navigated
  nameWithType: Application.Navigated
  fullName: System.Windows.Application.Navigated
- uid: System.Windows.Navigation.NavigatedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatedEventHandler
  nameWithType: NavigatedEventHandler
  fullName: System.Windows.Navigation.NavigatedEventHandler
- uid: System.Windows.Application.Navigating
  parent: System.Windows.Application
  isExternal: false
  name: Navigating
  nameWithType: Application.Navigating
  fullName: System.Windows.Application.Navigating
- uid: System.Windows.Navigation.NavigatingCancelEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatingCancelEventHandler
  nameWithType: NavigatingCancelEventHandler
  fullName: System.Windows.Navigation.NavigatingCancelEventHandler
- uid: System.Windows.Application.NavigationFailed
  parent: System.Windows.Application
  isExternal: false
  name: NavigationFailed
  nameWithType: Application.NavigationFailed
  fullName: System.Windows.Application.NavigationFailed
- uid: System.Windows.Navigation.NavigationFailedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationFailedEventHandler
  nameWithType: NavigationFailedEventHandler
  fullName: System.Windows.Navigation.NavigationFailedEventHandler
- uid: System.Windows.Application.NavigationProgress
  parent: System.Windows.Application
  isExternal: false
  name: NavigationProgress
  nameWithType: Application.NavigationProgress
  fullName: System.Windows.Application.NavigationProgress
- uid: System.Windows.Navigation.NavigationProgressEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationProgressEventHandler
  nameWithType: NavigationProgressEventHandler
  fullName: System.Windows.Navigation.NavigationProgressEventHandler
- uid: System.Windows.Application.NavigationStopped
  parent: System.Windows.Application
  isExternal: false
  name: NavigationStopped
  nameWithType: Application.NavigationStopped
  fullName: System.Windows.Application.NavigationStopped
- uid: System.Windows.Navigation.NavigationStoppedEventHandler
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationStoppedEventHandler
  nameWithType: NavigationStoppedEventHandler
  fullName: System.Windows.Navigation.NavigationStoppedEventHandler
- uid: System.Windows.Application.OnActivated(System.EventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnActivated(EventArgs)
  nameWithType: Application.OnActivated(EventArgs)
  fullName: System.Windows.Application.OnActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Application.OnDeactivated(System.EventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnDeactivated(EventArgs)
  nameWithType: Application.OnDeactivated(EventArgs)
  fullName: System.Windows.Application.OnDeactivated(EventArgs)
- uid: System.Windows.Application.OnExit(System.Windows.ExitEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnExit(ExitEventArgs)
  nameWithType: Application.OnExit(ExitEventArgs)
  fullName: System.Windows.Application.OnExit(ExitEventArgs)
- uid: System.Windows.ExitEventArgs
  parent: System.Windows
  isExternal: false
  name: ExitEventArgs
  nameWithType: ExitEventArgs
  fullName: System.Windows.ExitEventArgs
- uid: System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnFragmentNavigation(FragmentNavigationEventArgs)
  nameWithType: Application.OnFragmentNavigation(FragmentNavigationEventArgs)
  fullName: System.Windows.Application.OnFragmentNavigation(FragmentNavigationEventArgs)
- uid: System.Windows.Navigation.FragmentNavigationEventArgs
  parent: System.Windows.Navigation
  isExternal: false
  name: FragmentNavigationEventArgs
  nameWithType: FragmentNavigationEventArgs
  fullName: System.Windows.Navigation.FragmentNavigationEventArgs
- uid: System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnLoadCompleted(NavigationEventArgs)
  nameWithType: Application.OnLoadCompleted(NavigationEventArgs)
  fullName: System.Windows.Application.OnLoadCompleted(NavigationEventArgs)
- uid: System.Windows.Navigation.NavigationEventArgs
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationEventArgs
  nameWithType: NavigationEventArgs
  fullName: System.Windows.Navigation.NavigationEventArgs
- uid: System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigated(NavigationEventArgs)
  nameWithType: Application.OnNavigated(NavigationEventArgs)
  fullName: System.Windows.Application.OnNavigated(NavigationEventArgs)
- uid: System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigating(NavigatingCancelEventArgs)
  nameWithType: Application.OnNavigating(NavigatingCancelEventArgs)
  fullName: System.Windows.Application.OnNavigating(NavigatingCancelEventArgs)
- uid: System.Windows.Navigation.NavigatingCancelEventArgs
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigatingCancelEventArgs
  nameWithType: NavigatingCancelEventArgs
  fullName: System.Windows.Navigation.NavigatingCancelEventArgs
- uid: System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigationFailed(NavigationFailedEventArgs)
  nameWithType: Application.OnNavigationFailed(NavigationFailedEventArgs)
  fullName: System.Windows.Application.OnNavigationFailed(NavigationFailedEventArgs)
- uid: System.Windows.Navigation.NavigationFailedEventArgs
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationFailedEventArgs
  nameWithType: NavigationFailedEventArgs
  fullName: System.Windows.Navigation.NavigationFailedEventArgs
- uid: System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigationProgress(NavigationProgressEventArgs)
  nameWithType: Application.OnNavigationProgress(NavigationProgressEventArgs)
  fullName: System.Windows.Application.OnNavigationProgress(NavigationProgressEventArgs)
- uid: System.Windows.Navigation.NavigationProgressEventArgs
  parent: System.Windows.Navigation
  isExternal: false
  name: NavigationProgressEventArgs
  nameWithType: NavigationProgressEventArgs
  fullName: System.Windows.Navigation.NavigationProgressEventArgs
- uid: System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigationStopped(NavigationEventArgs)
  nameWithType: Application.OnNavigationStopped(NavigationEventArgs)
  fullName: System.Windows.Application.OnNavigationStopped(NavigationEventArgs)
- uid: System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnSessionEnding(SessionEndingCancelEventArgs)
  nameWithType: Application.OnSessionEnding(SessionEndingCancelEventArgs)
  fullName: System.Windows.Application.OnSessionEnding(SessionEndingCancelEventArgs)
- uid: System.Windows.SessionEndingCancelEventArgs
  parent: System.Windows
  isExternal: false
  name: SessionEndingCancelEventArgs
  nameWithType: SessionEndingCancelEventArgs
  fullName: System.Windows.SessionEndingCancelEventArgs
- uid: System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)
  parent: System.Windows.Application
  isExternal: false
  name: OnStartup(StartupEventArgs)
  nameWithType: Application.OnStartup(StartupEventArgs)
  fullName: System.Windows.Application.OnStartup(StartupEventArgs)
- uid: System.Windows.StartupEventArgs
  parent: System.Windows
  isExternal: false
  name: StartupEventArgs
  nameWithType: StartupEventArgs
  fullName: System.Windows.StartupEventArgs
- uid: System.Windows.Application.Properties
  parent: System.Windows.Application
  isExternal: false
  name: Properties
  nameWithType: Application.Properties
  fullName: System.Windows.Application.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Windows.Application.ResourceAssembly
  parent: System.Windows.Application
  isExternal: false
  name: ResourceAssembly
  nameWithType: Application.ResourceAssembly
  fullName: System.Windows.Application.ResourceAssembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Windows.Application.Resources
  parent: System.Windows.Application
  isExternal: false
  name: Resources
  nameWithType: Application.Resources
  fullName: System.Windows.Application.Resources
- uid: System.Windows.ResourceDictionary
  parent: System.Windows
  isExternal: false
  name: ResourceDictionary
  nameWithType: ResourceDictionary
  fullName: System.Windows.ResourceDictionary
- uid: System.Windows.Application.Run
  parent: System.Windows.Application
  isExternal: false
  name: Run()
  nameWithType: Application.Run()
  fullName: System.Windows.Application.Run()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Application.Run(System.Windows.Window)
  parent: System.Windows.Application
  isExternal: false
  name: Run(Window)
  nameWithType: Application.Run(Window)
  fullName: System.Windows.Application.Run(Window)
- uid: System.Windows.Application.SessionEnding
  parent: System.Windows.Application
  isExternal: false
  name: SessionEnding
  nameWithType: Application.SessionEnding
  fullName: System.Windows.Application.SessionEnding
- uid: System.Windows.SessionEndingCancelEventHandler
  parent: System.Windows
  isExternal: false
  name: SessionEndingCancelEventHandler
  nameWithType: SessionEndingCancelEventHandler
  fullName: System.Windows.SessionEndingCancelEventHandler
- uid: System.Windows.Application.SetCookie(System.Uri,System.String)
  parent: System.Windows.Application
  isExternal: false
  name: SetCookie(Uri,String)
  nameWithType: Application.SetCookie(Uri,String)
  fullName: System.Windows.Application.SetCookie(Uri,String)
- uid: System.Windows.Application.Shutdown
  parent: System.Windows.Application
  isExternal: false
  name: Shutdown()
  nameWithType: Application.Shutdown()
  fullName: System.Windows.Application.Shutdown()
- uid: System.Windows.Application.Shutdown(System.Int32)
  parent: System.Windows.Application
  isExternal: false
  name: Shutdown(Int32)
  nameWithType: Application.Shutdown(Int32)
  fullName: System.Windows.Application.Shutdown(Int32)
- uid: System.Windows.Application.ShutdownMode
  parent: System.Windows.Application
  isExternal: false
  name: ShutdownMode
  nameWithType: Application.ShutdownMode
  fullName: System.Windows.Application.ShutdownMode
- uid: System.Windows.ShutdownMode
  parent: System.Windows
  isExternal: false
  name: ShutdownMode
  nameWithType: ShutdownMode
  fullName: System.Windows.ShutdownMode
- uid: System.Windows.Application.Startup
  parent: System.Windows.Application
  isExternal: false
  name: Startup
  nameWithType: Application.Startup
  fullName: System.Windows.Application.Startup
- uid: System.Windows.StartupEventHandler
  parent: System.Windows
  isExternal: false
  name: StartupEventHandler
  nameWithType: StartupEventHandler
  fullName: System.Windows.StartupEventHandler
- uid: System.Windows.Application.StartupUri
  parent: System.Windows.Application
  isExternal: false
  name: StartupUri
  nameWithType: Application.StartupUri
  fullName: System.Windows.Application.StartupUri
- uid: System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.Application
  isExternal: false
  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  nameWithType: Application.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Application.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Application.TryFindResource(System.Object)
  parent: System.Windows.Application
  isExternal: false
  name: TryFindResource(Object)
  nameWithType: Application.TryFindResource(Object)
  fullName: System.Windows.Application.TryFindResource(Object)
- uid: System.Windows.Application.Windows
  parent: System.Windows.Application
  isExternal: false
  name: Windows
  nameWithType: Application.Windows
  fullName: System.Windows.Application.Windows
- uid: System.Windows.WindowCollection
  parent: System.Windows
  isExternal: false
  name: WindowCollection
  nameWithType: WindowCollection
  fullName: System.Windows.WindowCollection
- uid: System.Windows.Application.#ctor*
  parent: System.Windows.Application
  isExternal: false
  name: Application
  nameWithType: Application.Application
- uid: System.Windows.Application.Current*
  parent: System.Windows.Application
  isExternal: false
  name: Current
  nameWithType: Application.Current
- uid: System.Windows.Application.FindResource*
  parent: System.Windows.Application
  isExternal: false
  name: FindResource
  nameWithType: Application.FindResource
- uid: System.Windows.Application.GetContentStream*
  parent: System.Windows.Application
  isExternal: false
  name: GetContentStream
  nameWithType: Application.GetContentStream
- uid: System.Windows.Application.GetCookie*
  parent: System.Windows.Application
  isExternal: false
  name: GetCookie
  nameWithType: Application.GetCookie
- uid: System.Windows.Application.GetRemoteStream*
  parent: System.Windows.Application
  isExternal: false
  name: GetRemoteStream
  nameWithType: Application.GetRemoteStream
- uid: System.Windows.Application.GetResourceStream*
  parent: System.Windows.Application
  isExternal: false
  name: GetResourceStream
  nameWithType: Application.GetResourceStream
- uid: System.Windows.Application.LoadComponent*
  parent: System.Windows.Application
  isExternal: false
  name: LoadComponent
  nameWithType: Application.LoadComponent
- uid: System.Windows.Application.MainWindow*
  parent: System.Windows.Application
  isExternal: false
  name: MainWindow
  nameWithType: Application.MainWindow
- uid: System.Windows.Application.OnActivated*
  parent: System.Windows.Application
  isExternal: false
  name: OnActivated
  nameWithType: Application.OnActivated
- uid: System.Windows.Application.OnDeactivated*
  parent: System.Windows.Application
  isExternal: false
  name: OnDeactivated
  nameWithType: Application.OnDeactivated
- uid: System.Windows.Application.OnExit*
  parent: System.Windows.Application
  isExternal: false
  name: OnExit
  nameWithType: Application.OnExit
- uid: System.Windows.Application.OnFragmentNavigation*
  parent: System.Windows.Application
  isExternal: false
  name: OnFragmentNavigation
  nameWithType: Application.OnFragmentNavigation
- uid: System.Windows.Application.OnLoadCompleted*
  parent: System.Windows.Application
  isExternal: false
  name: OnLoadCompleted
  nameWithType: Application.OnLoadCompleted
- uid: System.Windows.Application.OnNavigated*
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigated
  nameWithType: Application.OnNavigated
- uid: System.Windows.Application.OnNavigating*
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigating
  nameWithType: Application.OnNavigating
- uid: System.Windows.Application.OnNavigationFailed*
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigationFailed
  nameWithType: Application.OnNavigationFailed
- uid: System.Windows.Application.OnNavigationProgress*
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigationProgress
  nameWithType: Application.OnNavigationProgress
- uid: System.Windows.Application.OnNavigationStopped*
  parent: System.Windows.Application
  isExternal: false
  name: OnNavigationStopped
  nameWithType: Application.OnNavigationStopped
- uid: System.Windows.Application.OnSessionEnding*
  parent: System.Windows.Application
  isExternal: false
  name: OnSessionEnding
  nameWithType: Application.OnSessionEnding
- uid: System.Windows.Application.OnStartup*
  parent: System.Windows.Application
  isExternal: false
  name: OnStartup
  nameWithType: Application.OnStartup
- uid: System.Windows.Application.Properties*
  parent: System.Windows.Application
  isExternal: false
  name: Properties
  nameWithType: Application.Properties
- uid: System.Windows.Application.ResourceAssembly*
  parent: System.Windows.Application
  isExternal: false
  name: ResourceAssembly
  nameWithType: Application.ResourceAssembly
- uid: System.Windows.Application.Resources*
  parent: System.Windows.Application
  isExternal: false
  name: Resources
  nameWithType: Application.Resources
- uid: System.Windows.Application.Run*
  parent: System.Windows.Application
  isExternal: false
  name: Run
  nameWithType: Application.Run
- uid: System.Windows.Application.SetCookie*
  parent: System.Windows.Application
  isExternal: false
  name: SetCookie
  nameWithType: Application.SetCookie
- uid: System.Windows.Application.Shutdown*
  parent: System.Windows.Application
  isExternal: false
  name: Shutdown
  nameWithType: Application.Shutdown
- uid: System.Windows.Application.ShutdownMode*
  parent: System.Windows.Application
  isExternal: false
  name: ShutdownMode
  nameWithType: Application.ShutdownMode
- uid: System.Windows.Application.StartupUri*
  parent: System.Windows.Application
  isExternal: false
  name: StartupUri
  nameWithType: Application.StartupUri
- uid: System.Windows.Application.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable*
  parent: System.Windows.Application
  isExternal: false
  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable
  nameWithType: Application.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable
- uid: System.Windows.Application.TryFindResource*
  parent: System.Windows.Application
  isExternal: false
  name: TryFindResource
  nameWithType: Application.TryFindResource
- uid: System.Windows.Application.Windows*
  parent: System.Windows.Application
  isExternal: false
  name: Windows
  nameWithType: Application.Windows
