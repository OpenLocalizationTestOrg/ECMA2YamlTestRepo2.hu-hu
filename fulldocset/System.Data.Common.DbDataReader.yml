### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbDataReader
  id: DbDataReader
  children:
  - System.Data.Common.DbDataReader.#ctor
  - System.Data.Common.DbDataReader.Close
  - System.Data.Common.DbDataReader.Depth
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.FieldCount
  - System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  - System.Data.Common.DbDataReader.GetByte(System.Int32)
  - System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetChar(System.Int32)
  - System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  - System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  - System.Data.Common.DbDataReader.GetDouble(System.Int32)
  - System.Data.Common.DbDataReader.GetEnumerator
  - System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetFloat(System.Int32)
  - System.Data.Common.DbDataReader.GetGuid(System.Int32)
  - System.Data.Common.DbDataReader.GetInt16(System.Int32)
  - System.Data.Common.DbDataReader.GetInt32(System.Int32)
  - System.Data.Common.DbDataReader.GetInt64(System.Int32)
  - System.Data.Common.DbDataReader.GetName(System.Int32)
  - System.Data.Common.DbDataReader.GetOrdinal(System.String)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetSchemaTable
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetString(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.GetValue(System.Int32)
  - System.Data.Common.DbDataReader.GetValues(System.Object[])
  - System.Data.Common.DbDataReader.HasRows
  - System.Data.Common.DbDataReader.IsClosed
  - System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Item(System.Int32)
  - System.Data.Common.DbDataReader.Item(System.String)
  - System.Data.Common.DbDataReader.NextResult
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Read
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.RecordsAffected
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  langs:
  - csharp
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
  type: Class
  summary: "A sorok csak előrefelé bejárható adatfolyam olvassa be az adatforrás."
  syntax:
    content: 'public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Collections.IEnumerable
  - System.Data.IDataReader
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> osztály."
  syntax:
    content: protected DbDataReader ();
    parameters: []
  overload: System.Data.Common.DbDataReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Close
  id: Close
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Bezárja a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> objektum."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Depth
  id: Depth
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A mélységű beágyazást hozhat létre az aktuális sor jelző érték beolvasása."
  remarks: "A legkülső táblának a mélység értéke nulla."
  syntax:
    content: public abstract int Depth { get; }
    return:
      type: System.Int32
      description: "A mélységű beágyazást hozhat létre az aktuális sor."
  overload: System.Data.Common.DbDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose
  id: Dispose
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Feloldja a jelenlegi példány által használt erőforrások a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> osztály."
  remarks: "Hívás `Dispose` amikor elkészült, a <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> használatával A `Dispose` metódus leaves a <xref:System.Data.Common.DbDataReader>használhatatlan állapotban.</xref:System.Data.Common.DbDataReader> Hívása után `Dispose`, fel kell szabadítania mutató összes hivatkozást az <xref:System.Data.Common.DbDataReader>, a szemétgyűjtő lehet visszaszerezni a memória, amely a <xref:System.Data.Common.DbDataReader>lett elfoglaló.</xref:System.Data.Common.DbDataReader> </xref:System.Data.Common.DbDataReader>       További információkért lásd: [nem felügyelt erőforrások tisztítás](~/add/includes/ajax-current-ext-md.md) és [eldobásakor metódusának](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Mindig hívás `Dispose` az <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> utolsó referenciaként a engedélyezés előtt Ellenkező esetben az erőforrásoknak nem szabadul szemétgyűjtő hívást csak a <xref:System.Data.Common.DbDataReader>objektum `Finalize` metódus.</xref:System.Data.Common.DbDataReader>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Feloldja a által használt felügyelt erőforrások a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> és opcionálisan kiadja a nem felügyelt erőforrást."
  remarks: "Ez a metódus meghívja <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási kezelt és nem kezelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.FieldCount
  id: FieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi az oszlopok számát az aktuális sor."
  remarks: "Rejtett mezők tartalmazza. Használjon <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>Rejtett mezők kizárásához.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>"
  syntax:
    content: public abstract int FieldCount { get; }
    return:
      type: System.Int32
      description: "Az aktuális sor oszlopainak száma."
  overload: System.Data.Common.DbDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Nincs SQL Server-példányra aktuális kapcsolat."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értékét a logikai értékként."
  syntax:
    content: public abstract bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értékét a bájtban."
  syntax:
    content: public abstract byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Byte
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy bájtos adatfolyam beolvassa a megadott oszlop, megjelölt helyre kezdődő <code> dataOffset </code>, a puffer kezdődő megjelölt helyre történő <code> bufferOffset </code>."
  syntax:
    content: public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: dataOffset
      type: System.Int64
      description: "Az olvasási művelet kezdőpontjaként megadott soron belüli index."
    - id: buffer
      type: System.Byte[]
      description: "A puffer, amelybe másolja az adatokat."
    - id: bufferOffset
      type: System.Int32
      description: "Az index a pufferrel, amelyhez a rendszer átmásolja az adatokat."
    - id: length
      type: System.Int32
      description: "A maximális karakterszámot olvasni."
    return:
      type: System.Int64
      description: "A tényleges, beolvasott bájtok száma."
  overload: System.Data.Common.DbDataReader.GetBytes*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értéke egyetlen karakter."
  syntax:
    content: public abstract char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Char
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Olvassa be az adatfolyam karaktereket a megadott oszlop, megjelölt helyre kezdődő <code> dataOffset </code>, a puffer kezdődő megjelölt helyre történő <code> bufferOffset </code>."
  syntax:
    content: public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: dataOffset
      type: System.Int64
      description: "Az olvasási művelet kezdőpontjaként megadott soron belüli index."
    - id: buffer
      type: System.Char[]
      description: "A puffer, amelybe másolja az adatokat."
    - id: bufferOffset
      type: System.Int32
      description: "Az index a pufferrel, amelyhez a rendszer átmásolja az adatokat."
    - id: length
      type: System.Int32
      description: "A maximális karakterszámot olvasni."
    return:
      type: System.Int64
      description: "Olvassa el a tényleges karakterszámot."
  overload: System.Data.Common.DbDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> a kért oszlopból objektumot."
  syntax:
    content: public System.Data.Common.DbDataReader GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop adattípusa nevét."
  remarks: "```  \nprivate static void GetDataTypes(String connectiongString) {       \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";  \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();               \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            for (Int32 i = 0; i < reader.FieldCount; i++) {  \n               Console.WriteLine(\"ColumnName:{0,-15}DataType:{1,-15}\",reader.GetName(i),reader.GetDataTypeName(i));  \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "Egy karakterlánc, amely az adattípus neve."
  overload: System.Data.Common.DbDataReader.GetDataTypeName*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.DateTime>objektum.</xref:System.DateTime>"
  syntax:
    content: public abstract DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.DateTime
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> objektum a kért oszlop sorszám, amely egy szolgáltatóhoz tartozó streamupgradeprovider felülbírálható lesz."
  syntax:
    content: protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.Decimal>objektum.</xref:System.Decimal>"
  syntax:
    content: public abstract decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Decimal
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értéke, egy kétszeres pontosságú lebegőpontos számot."
  syntax:
    content: public abstract double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Double
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Értéket ad vissza egy <xref:System.Collections.IEnumerator>, amelyek segítségével a sorokat az Adatolvasó iterációt.</xref:System.Collections.IEnumerator>"
  remarks: "Bár ez a módszer egy explicit konstruktor beolvasni, nyelven, amely támogatja a közvetlen **foreach** szerkezet egyszerűbb közvetlenül ahhoz, hogy a sorokat az Adatolvasó iterációt az ismétlési szerkezet használni.       Ha ezt a módszert alkalmazza, visszaküldje-e egy új példányát <xref:System.Data.Common.DbEnumerator>vagy győződjön meg arról, hogy a számbavételi adja vissza <xref:System.Data.IDataRecord>objektumok.</xref:System.Data.IDataRecord> </xref:System.Data.Common.DbEnumerator>"
  syntax:
    content: public abstract System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>, amelyek segítségével a sorokat az Adatolvasó iterációt.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Common.DbDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop adattípusát."
  syntax:
    content: public abstract Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Type
      description: "A megadott oszlop adattípusa."
  overload: System.Data.Common.DbDataReader.GetFieldType*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual T GetFieldValue<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: T
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.Common.DbDataReader.GetFieldValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  id: GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  id: GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értéke, egy egyszeres pontosságú lebegőpontos számot."
  syntax:
    content: public abstract float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Single
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értéke, egy globálisan egyedi azonosítóját (GUID)."
  syntax:
    content: public abstract Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Guid
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értékének aláírt 16 bites egész számként."
  syntax:
    content: public abstract short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int16
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értékének aláírt 32 bites egész számként."
  remarks: "```  \nprivate static void GetCredits(String connectiongString) {  \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";   \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();   \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            while (reader.Read()) {  \n               // Credits column is the integer column, and you can use the GetInt32 method                        \n               // to return a a 32-bit signed integer.                       \n               Console.WriteLine(\"Course:{0,-15} Credits:{1}\",reader[1],reader.GetInt32(2));   \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int32
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megadott oszlop értékének egy 64 bites előjeles egész számként."
  syntax:
    content: public abstract long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Int64
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi az oszlop neve a nulláról indulva számított oszlopban megadott sorszám."
  syntax:
    content: public abstract string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A megadott oszlop neve."
  overload: System.Data.Common.DbDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a oszlop sorszám az oszlop neve a."
  syntax:
    content: public abstract int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Int32
      description: "A nulla alapú oszlopból."
  overload: System.Data.Common.DbDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A megadott értéke nem érvényes oszlopnevet."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A megadott oszlop szolgáltatói mező típusát adja vissza."
  syntax:
    content: public virtual Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Type
      description: "A <xref:System.Type>objektum, amely leírja a megadott oszlop adattípusát.</xref:System.Type>"
  overload: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A megadott oszlop <xref:System.Object>.</xref:System.Object> példányaként értékét"
  remarks: "A visszaadott objektumot adott típusú meghatározásához használja a <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>"
  syntax:
    content: public virtual object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Object
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Minden szolgáltatói attribútumoszlopoknak lekérdezi az aktuális sor a gyűjteményben."
  syntax:
    content: public virtual int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "A tömb <xref:System.Object>amelybe az attribútumoszlopoknak másolásához.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A több példányban <xref:System.Object>a tömbben.</xref:System.Object>"
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>."
  syntax:
    content: public virtual System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai."
  overload: System.Data.Common.DbDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> le van zárva."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekéri az adatokat egy <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "GetStream csak az értékeket, amelyeket konvertálhatók byte tömbök lekérésének támogatja.       További információkért lásd: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.IO.Stream GetStream (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Lekéri az adatokat egy <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    return:
      type: System.IO.Stream
      description: "A visszaadott objektumot."
  overload: System.Data.Common.DbDataReader.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat esik, vagy van zárva az adatok beolvasása során.       A <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> le van zárva az adatok beolvasása során.       Nincs kész olvasható adat (például az első <> </> *> még nem lett neve, vagy hamis értéket adott vissza).       A rendszer megpróbálta kiolvasni a soros módban korábban olvasható oszlop.       Hiba történt egy aszinkron művelet folyamatban van. Ez vonatkozik az összes Get* módszerek módban történő futtatásakor egymást követő, mivel volt hívható adatfolyam olvasása közben."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A rendszer megpróbálta beolvasni a egy oszlopot, amely nem létezik."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A visszaadott típus nem volt a következő típusok egyikét: - - bináris - varbinary - udt"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A megadott oszlop <xref:System.String>.</xref:System.String> példányaként értékét"
  syntax:
    content: public abstract string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekéri az adatokat egy <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  remarks: "GetTextReader csak támogatja a beolvasása, amely átalakítható karakter tömbök (karakterlánc).       További információkért lásd: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.IO.TextReader GetTextReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Lekéri az adatokat egy <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
    return:
      type: System.IO.TextReader
      description: "A visszaadott objektumot."
  overload: System.Data.Common.DbDataReader.GetTextReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat esik, vagy van zárva az adatok beolvasása során.       A <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> le van zárva az adatok beolvasása során.       Nincs kész olvasható adat (például az első <> </> *> még nem lett neve, vagy hamis értéket adott vissza).       A rendszer megpróbálta kiolvasni a soros módban korábban olvasható oszlop.       Hiba történt egy aszinkron művelet folyamatban van. Ez vonatkozik az összes Get* módszerek módban történő futtatásakor egymást követő, mivel volt hívható adatfolyam olvasása közben."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A rendszer megpróbálta beolvasni a egy oszlopot, amely nem létezik."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A visszaadott típus nem volt a következő típusok egyikét: - char - nchar - ntext - nvarchar - szöveg - varchar"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A megadott oszlop <xref:System.Object>.</xref:System.Object> példányaként értékét"
  syntax:
    content: public abstract object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Object
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Feltölti az oszlop értékekkel, az aktuális sor egy objektumokból álló tömb."
  syntax:
    content: public abstract int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "A tömb <xref:System.Object>amelybe az attribútumoszlopoknak másolásához.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A több példányban <xref:System.Object>a tömbben.</xref:System.Object>"
  overload: System.Data.Common.DbDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.HasRows
  id: HasRows
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> egy vagy több sort tartalmaz."
  syntax:
    content: public abstract bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> tartalmaz egy vagy több sor; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsClosed
  id: IsClosed
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> le van zárva."
  syntax:
    content: public abstract bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> lezárt; egyéb <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsClosed*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> le van zárva."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy az oszlop nem létező vagy a hiányzó értékeket tartalmaz."
  remarks: "Ez a metódushívás ellenőrizze a beírt hívása előtt null értékek beolvasása módszerek (például <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, és így tovább) kiadását okozó hiba elkerülése érdekében.</xref:System.Data.Common.DbDataReader.GetChar%2A> </xref:System.Data.Common.DbDataReader.GetByte%2A>"
  syntax:
    content: public abstract bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott oszlop egyenértékű <xref href=&quot;System.DBNull&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  id: IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy aszinkron verzióját <xref:System.Data.Common.DbDataReader.IsDBNull*>, amely, amely lekérdezi egy értéket jelzi, hogy az oszlop tartalmaz-e a nem létező vagy a hiányzó értékeket.</xref:System.Data.Common.DbDataReader.IsDBNull*>"
  remarks: "További információkért lásd: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulláról indulva számított oszlop kérhető."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott oszlop érték egyenértékű <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> egyéb <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat esik, vagy van zárva az adatok beolvasása során.       A <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> le van zárva az adatok beolvasása során.       Nincs kész olvasható adat (például az első <> </> *> még nem lett neve, vagy hamis értéket adott vissza).       A rendszer megpróbálta beolvasni a korábban olvasható oszlop soros módban.       Hiba történt egy aszinkron művelet folyamatban van. Ez vonatkozik az összes Get* módszerek módban történő futtatásakor egymást követő, mivel volt hívható adatfolyam olvasása közben."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A rendszer megpróbálta beolvasni a egy oszlopot, amely nem létezik."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy aszinkron verzióját <xref:System.Data.Common.DbDataReader.IsDBNull*>, amely, amely lekérdezi egy értéket jelzi, hogy az oszlop tartalmaz-e a nem létező vagy a hiányzó értékeket.</xref:System.Data.Common.DbDataReader.IsDBNull*> Szükség esetén, hogy van-e műveletek megszakítása értesítést küld."
  remarks: "További információkért lásd: [SqlClient Streaming támogatási](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulláról indulva számított oszlop kérhető."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás, amely tölti ki, hogy meg kell szakítani a műveletek értesítést. Ez garantálja megszakítását. A beállításnak <xref uid=&quot;langword_csharp_CancellationToken.None&quot; name=&quot;CancellationToken.None&quot; href=&quot;&quot;> </xref> <xref:System.Data.Common.DbDataReader.IsDBNullAsync*>.</xref:System.Data.Common.DbDataReader.IsDBNullAsync*> egyenértékű teszi ezt a módszert A visszaadott feladatot kell jelölést megszakítva."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott oszlop érték egyenértékű <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> egyéb <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat esik, vagy van zárva az adatok beolvasása során.       A <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> le van zárva az adatok beolvasása során.       Nincs kész olvasható adat (például az első <> </> *> még nem lett neve, vagy hamis értéket adott vissza).       A rendszer megpróbálta beolvasni a korábban olvasható oszlop soros módban.       Hiba történt egy aszinkron művelet folyamatban van. Ez vonatkozik az összes Get* módszerek módban történő futtatásakor egymást követő, mivel volt hívható adatfolyam olvasása közben."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A rendszer megpróbálta beolvasni a egy oszlopot, amely nem létezik."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A megadott oszlop <xref:System.Object>.</xref:System.Object> példányaként értékét"
  syntax:
    content: public abstract object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Object
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Az átadott index kívül esik a tartományon keresztül <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*> 0 volt"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A megadott oszlop <xref:System.Object>.</xref:System.Object> példányaként értékét"
  syntax:
    content: public abstract object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Object
      description: "A megadott oszlop értéke."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Egyetlen oszlop sincs a megadott néven nem található."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResult
  id: NextResult
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Az eredmények a kötegek kimutatások olvasásakor, kiadásokban az olvasó a következő találatra."
  remarks: "Ez a módszer lehetővé teszi több eredményhalmazt adott vissza, amikor a szolgáltató egy kötegelt feldolgozásához."
  syntax:
    content: public abstract bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha több eredményhalmazt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync
  id: NextResultAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy aszinkron verzióját <> </> *>, amely kiadásokban az olvasó a következő eredménye egy kötegelt kimutatások eredményeit olvasásakor.       Elindítja a <> </> *> CancellationToken.None együtt."
  remarks: "Aszinkron programozás kapcsolatos további információkért lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> NextResultAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Hiba történt a parancs szövege végrehajtása közben."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Az aszinkron verziója <> </> *>. Szolgáltatók felül kell bírálniuk a megfelelő megvalósítását. A <code> cancellationToken </code> nem kötelezően figyelembe véve.       Az alapértelmezett implementációja hív meg, a szinkron <> </> *> metódus és a feladat befejezettségét, blokkolja a hívó szál adja vissza. Az alapértelmezett implementációja vissza a megszakított feladatok, ha az átadott már megszakított <code> cancellationToken </code>. Által okozott kivételeket <xref:System.Data.Common.DbDataReader.NextResult*>kommunikálja visszaadott kivétel feladat tulajdonságon keresztül.</xref:System.Data.Common.DbDataReader.NextResult*>       Egyéb módszerek és a DbDataReader objektum tulajdonságait kell meghívni, míg a visszaadott feladat még nem fejeződött be."
  remarks: "Aszinkron programozás kapcsolatos további információkért lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Hiba történt a parancs szövege végrehajtása közben."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Read
  id: Read
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Az olvasó kiadásokban a következő rekordra egy eredményhalmazban szerepel."
  remarks: "Az alapértelmezett pozíciója Adatolvasó van, az első rekordra előtt. Ezért meg kell hívnia olvasható adatok elérése megkezdéséhez."
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha további sorokat; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync
  id: ReadAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy aszinkron verzióját <> </> *>, amely az olvasó kiadásokban egy eredményhalmazban szerepel a következő bejegyzéshez. Ez a metódus meghívja <> </> *> CancellationToken.None együtt."
  remarks: "Aszinkron programozás kapcsolatos további információkért lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> ReadAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Hiba történt a parancs szövege végrehajtása közben."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Az aszinkron verziója <> </> *>.  Szolgáltatók felül kell bírálniuk a megfelelő megvalósítását. A cancellationToken nem kötelezően figyelembe véve.       Az alapértelmezett implementációja hív meg, a szinkron <> </> *> metódus és a feladat befejezettségét, blokkolja a hívó szál adja vissza. Az alapértelmezett implementációja vissza a megszakított feladatok, ha egy már megszakított cancellationToken átadott.  Olvasási által okozott kivételeket kommunikálja visszaadott kivétel feladat tulajdonságon keresztül.       Ne hívja meg egyéb módszerek és tulajdonságait a <xref uid=&quot;langword_csharp_DbDataReader&quot; name=&quot;DbDataReader&quot; href=&quot;&quot;> </xref> objektum, amíg a visszaadott feladat be nem fejeződik."
  remarks: "Aszinkron programozás kapcsolatos további információkért lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Hiba történt a parancs szövege végrehajtása közben."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a megváltozott, szúrja be, vagy törli azokat az SQL-utasítás végrehajtása sorok száma."
  remarks: "A `RecordsAffected` tulajdonsága nincs beállítva, amíg az összes sor olvasása, és bezárja a `DataReader`."
  syntax:
    content: public abstract int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "A sorok száma megváltozott, szúrja be, vagy törölték. a SELECT utasítás; -1 0, ha az érintett sorok vagy az utasítás nem sikerült."
  overload: System.Data.Common.DbDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  id: System#Data#IDataRecord#GetData(System.Int32)
  isEii: true
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Data.IDataRecord.GetData%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DbDataReader>példány típusúvá egy <xref:System.Data.IDataRecord>felületet.</xref:System.Data.IDataRecord> </xref:System.Data.Common.DbDataReader>"
  syntax:
    content: System.Data.IDataReader IDataRecord.GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Data.IDataReader
      description: "Példányának <xref href=&quot;System.Data.IDataReader&quot;> </xref> használható, ha a mező mutat, több távoli strukturált adatok számára."
  overload: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a mezők számát a <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> , amely nem rejtett."
  remarks: "Ez az érték azt határozza meg, hogy hány mezőiben a <xref:System.Data.Common.DbDataReader>láthatók.</xref:System.Data.Common.DbDataReader> Például egy jelöljön ki egy részleges elsődleges kulcshoz értéket ad vissza a kulcsot fennmaradó részei rejtett mezők. A rejtett mezők mindig mögött látható lesz hozzáfűzve."
  syntax:
    content: public virtual int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "A nem rejtett mezők számát."
  overload: System.Data.Common.DbDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.Data.Common.DbDataReader.#ctor
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
- uid: System.Data.Common.DbDataReader.Close
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
- uid: System.Data.Common.DbDataReader.Depth
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbDataReader.Dispose
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbDataReader.FieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Common.DbDataReader.GetEnumerator
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
- uid: System.Threading.Tasks.Task{T}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
- uid: System.Data.Common.DbDataReader.HasRows
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
- uid: System.Data.Common.DbDataReader.Item(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
- uid: System.Data.Common.DbDataReader.NextResult
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
- uid: System.Data.Common.DbDataReader.NextResultAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.Read
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
- uid: System.Data.Common.DbDataReader.ReadAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.RecordsAffected
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
- uid: System.Data.Common.DbDataReader.#ctor*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader.DbDataReader
- uid: System.Data.Common.DbDataReader.Close*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close
  nameWithType: DbDataReader.Close
- uid: System.Data.Common.DbDataReader.Depth*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
- uid: System.Data.Common.DbDataReader.Dispose*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose
  nameWithType: DbDataReader.Dispose
- uid: System.Data.Common.DbDataReader.FieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: DbDataReader.GetBoolean
- uid: System.Data.Common.DbDataReader.GetByte*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte
  nameWithType: DbDataReader.GetByte
- uid: System.Data.Common.DbDataReader.GetBytes*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes
  nameWithType: DbDataReader.GetBytes
- uid: System.Data.Common.DbDataReader.GetChar*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar
  nameWithType: DbDataReader.GetChar
- uid: System.Data.Common.DbDataReader.GetChars*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars
  nameWithType: DbDataReader.GetChars
- uid: System.Data.Common.DbDataReader.GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData
  nameWithType: DbDataReader.GetData
- uid: System.Data.Common.DbDataReader.GetDataTypeName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DbDataReader.GetDataTypeName
- uid: System.Data.Common.DbDataReader.GetDateTime*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: DbDataReader.GetDateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: DbDataReader.GetDbDataReader
- uid: System.Data.Common.DbDataReader.GetDecimal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: DbDataReader.GetDecimal
- uid: System.Data.Common.DbDataReader.GetDouble*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble
  nameWithType: DbDataReader.GetDouble
- uid: System.Data.Common.DbDataReader.GetEnumerator*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DbDataReader.GetEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: DbDataReader.GetFieldType
- uid: System.Data.Common.DbDataReader.GetFieldValue<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: DbDataReader.GetFieldValue<T>
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: DbDataReader.GetFieldValueAsync<T>
- uid: System.Data.Common.DbDataReader.GetFloat*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat
  nameWithType: DbDataReader.GetFloat
- uid: System.Data.Common.DbDataReader.GetGuid*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid
  nameWithType: DbDataReader.GetGuid
- uid: System.Data.Common.DbDataReader.GetInt16*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16
  nameWithType: DbDataReader.GetInt16
- uid: System.Data.Common.DbDataReader.GetInt32*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32
  nameWithType: DbDataReader.GetInt32
- uid: System.Data.Common.DbDataReader.GetInt64*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64
  nameWithType: DbDataReader.GetInt64
- uid: System.Data.Common.DbDataReader.GetName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName
  nameWithType: DbDataReader.GetName
- uid: System.Data.Common.DbDataReader.GetOrdinal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DbDataReader.GetOrdinal
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DbDataReader.GetProviderSpecificFieldType
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DbDataReader.GetProviderSpecificValue
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DbDataReader.GetProviderSpecificValues
- uid: System.Data.Common.DbDataReader.GetSchemaTable*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbDataReader.GetSchemaTable
- uid: System.Data.Common.DbDataReader.GetStream*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream
  nameWithType: DbDataReader.GetStream
- uid: System.Data.Common.DbDataReader.GetString*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString
  nameWithType: DbDataReader.GetString
- uid: System.Data.Common.DbDataReader.GetTextReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader
  nameWithType: DbDataReader.GetTextReader
- uid: System.Data.Common.DbDataReader.GetValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue
  nameWithType: DbDataReader.GetValue
- uid: System.Data.Common.DbDataReader.GetValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues
  nameWithType: DbDataReader.GetValues
- uid: System.Data.Common.DbDataReader.HasRows*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: DbDataReader.IsDBNull
- uid: System.Data.Common.DbDataReader.IsDBNullAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync
  nameWithType: DbDataReader.IsDBNullAsync
- uid: System.Data.Common.DbDataReader.Item*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item
  nameWithType: DbDataReader.Item
- uid: System.Data.Common.DbDataReader.NextResult*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult
  nameWithType: DbDataReader.NextResult
- uid: System.Data.Common.DbDataReader.NextResultAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync
  nameWithType: DbDataReader.NextResultAsync
- uid: System.Data.Common.DbDataReader.Read*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read
  nameWithType: DbDataReader.Read
- uid: System.Data.Common.DbDataReader.ReadAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync
  nameWithType: DbDataReader.ReadAsync
- uid: System.Data.Common.DbDataReader.RecordsAffected*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData
- uid: System.Data.Common.DbDataReader.VisibleFieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
