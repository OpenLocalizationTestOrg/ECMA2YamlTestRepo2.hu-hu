### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticationService
  id: AuthenticationService
  children:
  - System.Web.ApplicationServices.AuthenticationService.#ctor
  - System.Web.ApplicationServices.AuthenticationService.Authenticating
  - System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  - System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  - System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  - System.Web.ApplicationServices.AuthenticationService.Logout
  - System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  langs:
  - csharp
  name: AuthenticationService
  nameWithType: AuthenticationService
  fullName: System.Web.ApplicationServices.AuthenticationService
  type: Class
  summary: "Lehetővé teszi a hozzáférést az ASP.NET űrlapos hitelesítés webszolgáltatásként."
  remarks: "A AuthenticationService objektum lehetővé teszi, hogy a hitelesítésre, felhasználókon egy [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] szolgáltatás. Amikor egy alkalmazás, amely a webes alkalmazás, amely tárolja a felhasználói hitelesítő adatok kívül esik az ASP.NET tagság végig a felhasználókat kell hitelesítenie a WCF-hitelesítési szolgáltatás használhatja. A kérelem küldéséhez, és felhasználhatják az üzenet SOAP formátumú képesnek kell lennie. AuthenticationService osztály keresztül akkor is felhasználók jelentkezzen be, felhasználók jelentkezzen ki, hitelesítő adatainak ellenőrzése, hitelesítési állapotának, testre szabhatja a hitelesítés és állítsa be a hitelesítési cookie.       A AuthenticationService osztály tartalmazza, amelyet el kell érni csak WCF szolgáltatáson keresztül négy módszerek: a <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, és <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>módszerek.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> </xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Ezek a metódusok hívására, engedélyezze a hitelesítési szolgáltatást a webkiszolgálón, és csatlakoztassa a webszolgáltatás WCF-kompatibilis ügyfélalkalmazást. A hitelesítési szolgáltatás konfigurálásával kapcsolatos további információkért lásd: [hogyan: engedélyezze a WCF-hitelesítési szolgáltatás](~/add/includes/ajax-current-ext-md.md).       A bejelentkezéshez felhasználók a felhasználói hitelesítő adatok továbbítása a <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>metódus.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> A hitelesítő adatok érvényesek, ha a AuthenticationService osztály létrehoz egy hitelesítési cookie-t. A hitelesítési cookie-k nem járt le, ha biztos, hogy a felhasználó hitelesítő adatainak hitelesített, és ekkor újra ellenőrzi a hitelesítő adatok nem rendelkeznek. (Cookie-k nélküli hitelesítés nem áll rendelkezésre a AuthenticationService osztályú.)       A AuthenticationService merülhet két esemény: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>és <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> A <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>esemény akkor következik be, amikor a felhasználói hitelesítő adatok érvényesítése.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Az eseménykezelő létrehozása a <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>testreszabása, hogyan felhasználói hitelesítő adatok ellenőrzését események.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> A <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>esemény akkor következik be, amikor a felhasználói hitelesítő adatok érvényesítése után beállítása a hitelesítési cookie.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Az eseménykezelő létrehozása a <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>esemény testreszabása a hitelesítési cookie.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>       A <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>metódus ellenőrzi a felhasználó hitelesítéséhez szükséges hitelesítő adatokat, de nem ad vissza hitelesítési jegyre.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Használjon <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>Amikor a felhasználó korábban bejelentkezett, és ellenőrizze, hogy a hitelesítő adatok érvényesek még egy új alkalmazás-munkamenet elején.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>       A WCF hitelesítési szolgáltatás használatát a Konzolalkalmazás példát talál [forgatókönyv: ASP.NET-alkalmazásszolgáltatásokhoz használatával](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class AuthenticationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.ApplicationServices.AuthenticationService&quot;> </xref> osztály."
  syntax:
    content: public AuthenticationService ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  id: Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Felhasználói hitelesítő adatok érvényesítése előtt következik be."
  remarks: "A Authenticating esemény jelenik meg, ha a felhasználói hitelesítő adatok érvényesítése. Hozzon létre egy eseménykezelő testreszabása a felhasználói hitelesítő adatok ellenőrzését hogyan Authenticating eseménynél."
  example:
  - "The following example shows how to bind an event handler for the Authenticating event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/csharp/e-system.web.application_0_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/visualbasic/e-system.web.application_0_1.asax)]  \n  \n The following example shows an event handler for the Authenticating event in the Global.asax file. The event handler reads two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property and passes them together with the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/e-system.web.application_0_2.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/e-system.web.application_0_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs> Authenticating;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  id: CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "A hitelesítési cookie beállítása előtt következik be."
  remarks: "A CreatingCookie esemény jelenik meg, ha a felhasználói hitelesítő adatok érvényesítése után beállítása a hitelesítési cookie-t. Hozzon létre a CreatingCookie esemény testre szabhatja a hitelesítési cookie eseménykezelő."
  example:
  - "The following example shows how to bind an event handler to the CreatingCookie event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/csharp/e-system.web.application_1_1.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.application_1_1.asax)]  \n  \n The following example shows an event handler for the CreatingCookie event in the Global.asax file. The event handler customizes the authentication cookie by adding the value in the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property to the <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> property. Store the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property in a cookie only if you know that the data in the property is not sensitive. Malicious users can access the values in the cookie.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/csharp/e-system.web.application_1_2.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/visualbasic/e-system.web.application_1_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs> CreatingCookie;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  id: IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Meghatározza, hogy az aktuális felhasználó hitelesítve van."
  remarks: "A IsLoggedIn metódus ellenőrzi, hogy az aktuális felhasználó hitelesítése az ellenőrzése a <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>      > [!NOTE] > A IsLoggedIn metódus nem hívható a kódot, amely végrehajtja a webkiszolgálón. A WCF-szolgáltatások részeként IsLoggedIn metódust hívja."
  syntax:
    content: public bool IsLoggedIn ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a felhasználó hitelesítése; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  id: Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Ellenőrzi a felhasználó hitelesítő adatait, és hitelesítési jegyre (cookie-k) hoz létre, ha a hitelesítő adatok érvényesek."
  remarks: "A bejelentkezési módszer érvényesíti a felhasználói hitelesítő adatokat, a tagsági szolgáltató keresztül. Az alapértelmezett tagsági szolgáltatót használja, vagy adjon meg egy egyéni tagsági szolgáltató futási időben. A <xref:System.Web.ApplicationServices.AuthenticationService>fázisok osztály `userName` és `password` a tagsági szolgáltató <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>módszer, de nem felel meg `customCredential`.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService> Ha <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>adja vissza `true`, <xref:System.Web.ApplicationServices.AuthenticationService>hoz létre egy cookie-t hitelesítési jegyre.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Állítsa be a `isPersistent` paramétert `true` hitelesítési jegyre tovább tartó meghaladja az aktuális munkamenet létrehozásához.      > [!NOTE] > Mindig használja a a secure sockets layer (SSL, HTTPS-sel) együtt a hitelesítési szolgáltatás bizalmas adatok védelmét.       A bejelentkezési módszer kiváltja a <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>esemény és a <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>esemény.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Hozzon létre egy eseménykezelő <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>hitelesítéshez, például az értékek ellenőrzés testreszabásához `customCredential` vagy egy nem alapértelmezett tagsági szolgáltató keresztül hitelesítő adatainak ellenőrzése.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Az értékek `customCredential` az alapértelmezett tagsági szolgáltatója nem ellenőrzi. Testre szabhatja a hitelesítési cookie-k, hozzon létre egy eseménykezelő <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>      > [!NOTE] > Ne hívja meg a bejelentkezési módszer, amely végrehajtja a webkiszolgálón kódból. A WCF-szolgáltatások részeként bejelentkezési metódust hívja. További információkért lásd: [az ASP.NET-hitelesítés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool Login (string username, string password, string customCredential, bool isPersistent);
    parameters:
    - id: username
      type: System.String
      description: "Az ellenőrizendő felhasználó felhasználóneve."
    - id: password
      type: System.String
      description: "A megadott felhasználó jelszavát."
    - id: customCredential
      type: System.String
      description: "Az érték vagy értékek kívül ellenőrzése `userName` és `password`, ha van ilyen."
    - id: isPersistent
      type: System.Boolean
      description: "Egy érték, amely azt jelzi, hogy a hitelesítési jegy munkamenetei között érvényes marad."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a felhasználói hitelesítő adatok érvényesek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.Login*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  id: Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "A rendszer a hitelesítési jegy (cookie-k) a böngészőben."
  remarks: "A kijelentkezési metódus törli a hitelesítési cookie-t a böngésző cookie-k gyűjteményből. A felhasználó kell jelentkezzen be újra hitelesíteni.       A <xref:System.Web.ApplicationServices.AuthenticationService>osztály információt nem tárolnak a kiszolgálón vonatkozó hitelesítési jegyek tisztázódott.</xref:System.Web.ApplicationServices.AuthenticationService>      > [!NOTE] > Nem hívja a kijelentkezési kódot, amely végrehajtja a webkiszolgálón. Csak egy WCF-szolgáltatás részeként a kijelentkezési metódust hívja. További információkért lásd: [az ASP.NET-hitelesítés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Logout ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.Logout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  id: ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Felhasználói hitelesítőadatokat hitelesítési jegyre kiadása nélkül."
  remarks: "A ValidateUser metódus hitelesíti a felhasználói hitelesítő adatokat, de nincs beállítva egy hitelesítési cookie. Nélkül egy hitelesítési cookie-t a felhasználó nem naplózza a rendszer akkor is, ha a hitelesítő adatok érvényesek.       A ValidateUser módszer használatát, ha ellenőrizni kell, hogy a felhasználó hitelesítő adatai érvényesek nélkül egy hitelesítési cookie-k fogadását. Például előfordulhat, hogy ehhez Ha ügyfélalkalmazás már tárolták a hitelesítési cookie-t, de azt szeretné, és ellenőrizze, hogy a felhasználó hitelesítő adatainak érvényességét új munkamenet indításakor.       TheValidateUser metódus riasztást a <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>esemény, de nem válthat a <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>esemény.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>      > [!NOTE] > A ValidateUser metódus nem hívható éppen a webkiszolgálón futó kódból. Csak egy WCF-szolgáltatás részeként a ValidateUser metódust hívja. További információkért lásd: [az ASP.NET-hitelesítés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidateUser (string username, string password, string customCredential);
    parameters:
    - id: username
      type: System.String
      description: "Az ellenőrizendő felhasználó felhasználóneve."
    - id: password
      type: System.String
      description: "A megadott felhasználó jelszavát."
    - id: customCredential
      type: System.String
      description: "Az érték vagy értékek kívül ellenőrzése `userName` és `password`, ha van ilyen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a felhasználó hitelesítő adatai érvényesek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
- uid: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AuthenticatingEventArgs>
  nameWithType: EventHandler<AuthenticatingEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.AuthenticatingEventArgs
    name: AuthenticatingEventArgs
    nameWithType: AuthenticatingEventArgs
    fullName: AuthenticatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
- uid: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CreatingCookieEventArgs>
  nameWithType: EventHandler<CreatingCookieEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.CreatingCookieEventArgs
    name: CreatingCookieEventArgs
    nameWithType: CreatingCookieEventArgs
    fullName: CreatingCookieEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService
  nameWithType: AuthenticationService.AuthenticationService
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn
  nameWithType: AuthenticationService.IsLoggedIn
- uid: System.Web.ApplicationServices.AuthenticationService.Login*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login
  nameWithType: AuthenticationService.Login
- uid: System.Web.ApplicationServices.AuthenticationService.Logout*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout
  nameWithType: AuthenticationService.Logout
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser
  nameWithType: AuthenticationService.ValidateUser
