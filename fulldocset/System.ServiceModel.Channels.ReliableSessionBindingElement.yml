### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  id: ReliableSessionBindingElement
  children:
  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  - System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  - System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  - System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  - System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  - System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  - System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  - System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
  type: Class
  summary: "A kötéselem eredményezhetnek a küldése és fogadása szükséges a megbízható munkamenet végpontok közötti csatornák jelöli."
  remarks: "-Munkameneteket biztosít, és opcionálisan biztosítja a rendezett üzenetkézbesítését. A megvalósított munkamenet áthaladhat SOAP és átviteli közvetítők.       Minden egyes kötéselem jelenti. a folyamat valamelyik lépése során üzenetek küldésekor vagy fogadásakor. Alkalmazása futásidőben kötőelemekké hozza létre a csatornagyár és figyelők üzenetek küldése és fogadása szükséges a kimenő és bejövő csatorna verem létrehozásához szükséges. A ReliableSessionBindingElement a verem végpontok közötti megbízható munkamenet létrehozására és a munkamenet viselkedésének konfigurálása nem kötelező réteget biztosít.       A szabványos kötéseket a következő táblázat a ReliableSessionBindingElement valósul meg.      | Kötelező |} Alapértelmezett |}   |-------------|-------------|   | <xref:System.ServiceModel.NetTcpBinding>| Ki |}   | <xref:System.ServiceModel.WSHttpBinding>| Ki |}   | <xref:System.ServiceModel.WSDualHttpBinding>| A (kötelező) |}</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.NetTcpBinding>"
  example:
  - "The ReliableSessionBindingElement can be added to any custom binding. This is done using the following configuration elements.  \n  \n```  \n<bindings>  \n    <customBinding>  \n        <binding configurationName=”ReliabilityHTTP”>  \n            <reliableSession/>  \n        </binding>  \n    </customBinding>  \n</bindings>  \n```  \n  \n The following sample code demonstrates how to use ReliableSessionBindingElement in code.  \n  \n [!code-vb[S_Imperative#1](~/add/codesnippet/visualbasic/t-system.servicemodel.ch_0_1.vb)]\n [!code-cs[S_Imperative#1](~/add/codesnippet/csharp/t-system.servicemodel.ch_0_1.cs)]"
  syntax:
    content: 'public sealed class ReliableSessionBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.BindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableSessionBindingElement()
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> osztály."
  syntax:
    content: public ReliableSessionBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableSessionBindingElement(Boolean)
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> osztály, amely megadja, hogy üzenetkézbesítést meg kell őriznie a sorrendet, amelyben üzenetek küldése történik."
  syntax:
    content: public ReliableSessionBindingElement (bool ordered);
    parameters:
    - id: ordered
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha üzenetet kézbesíteni a sorrendben, amelyben elküldi őket; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  id: AcknowledgementInterval
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi vagy beállítja az időtartam, amely a célként megadott vár, mielőtt egy visszaigazoló küld a forrásfájl, a létrehozott megbízható csatornákon gyár által."
  remarks: "A cél, amely egy megbízható csatorna üzeneteket fogad a nyugtázások ezeket az üzeneteket együtt csoportosítja a hálózati forgalom csökkentése érdekében, és információt sűrűség üzenetek növelése egyetlen üzenetben. Csoportosítás méretezi a forgalom növekedése jobb. Próbálja meg elküldeni a nyugtázás esetében minden üzenetet kap a lehető leghamarabb, de időköz, megvárja, ahelyett, hogy összevonja, amelyek adott időszakban érkezett a visszaigazolások, és ezután elküldi az összes együtt. Az első üzenet kapott; kivételt képez ez alól elfogadott, amint biztosítását. Megbízható munkamenetek egyetlen HTTP-kapcsolatok használata esetén, is esetében például a <xref:System.ServiceModel.WSHttpBinding>, de nem <xref:System.ServiceModel.WSDualHttpBinding>, majd ezt a beállítást nem használja.</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding>       AcknowledgementInterval tulajdonság beállított értéke egy javaslatot, az infrastruktúra és a nem rögzített korlátját."
  syntax:
    content: public TimeSpan AcknowledgementInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, amely megadja, hogy az időtartam, amely egy szolgáltatás megvárja visszajelzést küld a forrásfájl.</xref:System.TimeSpan> Az alapértelmezett érték 2 másodperc."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A beállított érték értéke kisebb vagy egyenlő, mint nulla."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: BuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: BuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: CanBuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override bool CanBuildChannelListener<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: ReliableSessionBindingElement.Clone()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "A jelenlegi megbízható munkamenet kötéselem másolatát hozza létre."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "A <xref:System.ServiceModel.Channels.BindingElement>, amely az aktuális kötéselem klónja.</xref:System.ServiceModel.Channels.BindingElement>"
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  id: FlowControlEnabled
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a megbízható munkamenet adatfolyam vezérlés engedélyezve van-e."
  remarks: "Folyamatvezérlés egy olyan mechanizmus, amely megbízható munkamenetek annak érdekében, hogy feladók üzenetküldést több, mint a fogadó kezelni tud valósítja meg. Fogadó puffer az üzenet felszakadásáig alkalmazásához használt üzenetek és soron üzenetek rendelkezik. Fogadók feladók hirdet a a puffer az egyes a nyugtázás a fennmaradó terület mennyiségét. Feladók ezen információk használatával állítsa le az új üzenetek küldése, ha a fogadó rendelkezik a pufferterület balra."
  syntax:
    content: public bool FlowControlEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megbízható munkamenet engedélyezve; adatfolyam vezérlés Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: ReliableSessionBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: T
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi vagy beállítja, hogy a szolgáltatás inaktív Bezárás előtt időköz."
  remarks: "Tevékenység csatornán történt egy alkalmazás vagy infrastruktúra-üzenet fogadásakor típusúként van definiálva. A tétlen időtúllépés paraméter határozza meg a maximális időt egy inaktív munkamenet életben tartása. Ha több mint alatt az időtartam alatt továbbítja InactivityTimeout tevékenység nélküli, a munkamenet megszakadt az infrastruktúra és a csatorna hibák. A megbízható munkamenet egyoldalúan van bontva.       Ha a küldő alkalmazás rendelkezik majd a megbízható munkamenet küldendő üzenetek általában nem jelzett inaktivitási; Ehelyett egy életben tartási mechanizmus tartja a munkamenet aktív határozatlan ideig. Vegye figyelembe, hogy a kézbesítő egymástól függetlenül lehet megszakítása a megbízható munkamenet, ha nincs alkalmazás üzenetek küldött és fogadott. Ebből kifolyólag inaktivitási időkorlátját hálózati körülmények esetén úgy, hogy nincs üzenetek fogadása, vagy ha nincs hiba a küldő általában lejár."
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, amely megadja, hogy a szolgáltatás inaktív Bezárás előtt időintervallum.</xref:System.TimeSpan> Az alapértelmezett érték 10 perc."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A beállított érték kisebb vagy egyenlő, mint nulla vagy nagyobb, mint bármelyik <xref:System.Int32.MaxValue>vagy <xref:System.TimeSpan.MaxValue>.</xref:System.TimeSpan.MaxValue> </xref:System.Int32.MaxValue>"
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  id: MaxPendingChannels
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi vagy beállítja a függőben lévő használható csatornák legnagyobb száma a megbízható munkamenet során."
  remarks: "Ha várnak el kell fogadni csatornák várnak. Ez a korlát elérését követően nincs csatorna létrehozása és tegye függőben lévő mód csak a szám álljon (fogadása váró csatornák). Ez az egyes figyelő a határértéket.       Ha a küszöb elérése és egy távoli alkalmazás megpróbál egy új megbízható munkamenet létrehozására, a kérelmet a rendszer megtagadja, és a megnyitási művelet, amely felszólítja a hibák."
  syntax:
    content: public int MaxPendingChannels { get; set; }
    return:
      type: System.Int32
      description: "Függőben lévő lehet csatornák legnagyobb száma. Az alapértelmezett értéke 4."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A beállított érték kisebb vagy egyenlő nulla vagy nagyobb, mint 16384."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  id: MaxRetryCount
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi vagy beállítja a maximálisan megengedett számú üzenetet próbálja átvinni a megbízható munkamenet során."
  remarks: "Egy üzenet akkor továbbítható, ha a címzett a kézbesítési nyugtázta a címzett tekinthető.       Ha egy visszaigazolás nem egy bizonyos időn belüli elküldött üzenet érkezett, az infrastruktúra automatikusan újraküldi az üzenetet. Az infrastruktúra megpróbálja elküldeni az üzenetet a tartalom legfeljebb egy MaxRetryCount száma. Egy visszaigazolás nem fogad, a korlát elérése előtt tekinthető végzetes kommunikációs hiba, és leállítja a csatorna hibát jelzett eseményre.       Az infrastruktúra exponenciális vissza az indító algoritmust használ, hogy újból elküldenek, egy számított körbejárási átlagos ideje alapján. A kezdeti újrapróbálkozási idő kiszámítása a mért idejéről a munkamenet megadása alapján történik. Az üzenetek újraküldését algoritmus megduplázódik a késlekedés minden tett kísérlet, amely átadja az első átvitel kísérlet és a legutóbbi újraküldési kísérlet között körülbelül 8.5 percet eredményez. Az első újraküldési kísérlet ideje alapján számított üzenetváltások idejének módosul, és az eredményül kapott nyújtása próbálkozások idő ennek megfelelően változik. Ez lehetővé teszi a újraküldési idő dinamikusan változó hálózati körülmények között való alkalmazkodásra."
  syntax:
    content: public int MaxRetryCount { get; set; }
    return:
      type: System.Int32
      description: "A maximális száma, amely egy üzenetet megpróbálja újra kell küldeni. A minimális értéke 1. a maximális hossz <xref:System.Int32>; az alapértelmezett érték pedig a 8.</xref:System.Int32>"
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A beállított érték értéke kisebb vagy egyenlő, mint nulla."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  id: MaxTransferWindowSize
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi vagy beállítja a létezhet üzenetek legnagyobb száma a küldési puffer vagy a fogadási puffert."
  remarks: "A MaxTransferWindowSize tulajdonság értékének a feladó és a fogadó is beállítható. A kötési házirend a WSDL tartalmazza ezt az értéket, ha a [ServiceModel metaadatok segédprogram eszközt (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) összeállítani az ügyfél, ugyanazzal az értékkel rendelkezik. Ellenkező esetben a értéke függetlenül beállíthatja úgy, hogy az ügyfél lehet.       A küldő a elérésekor ezt a határt, a további hívások küldendő le vannak tiltva. Ha a fogadó a eléri ezt a korlátot, az alapul szolgáló csatornán érkező új üzenetek nem fogad.       A megbízható munkamenet hálózathasználat javítása érdekében Ablakozó protokollt használ. A pufferelés a szükséges mennyiségű közvetlenül az átviteli ablak méretének van származtatva. Amikor hangolása ezt az értéket, vegye figyelembe, hogy az optimális átviteli ablak kapcsolódik a sávszélesség és a késés egyszerű feladat úgy. Épp ezért tökéletes választás maximális ablak mérete a sávszélességet a várakozási időt. Kisebbre adja eredményül, kisebb, mint 100 %-os hálózathasználat; minden nagyobb csak feleslegesen helyet."
  syntax:
    content: public int MaxTransferWindowSize { get; set; }
    return:
      type: System.Int32
      description: "A legnagyobb is pufferbe kerüljön-kezelési üzenetek száma. A minimális értéke 1. a maximális érték 4096; az alapértelmezett értéke pedig 32."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A beállított érték kisebb vagy egyenlő vagy nagyobb, mint 4096."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  id: Ordered
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy üzenetkézbesítést meg kell őriznie a sorrendet, amelyben üzenetek küldése történik."
  remarks: "Ahhoz, hogy ahhoz küldött üzenetek, is meg kell adni a <xref:System.ServiceModel.ConcurrencyMode> <xref:System.ServiceModel.ConcurrencyMode>.</xref:System.ServiceModel.ConcurrencyMode> </xref:System.ServiceModel.ConcurrencyMode>"
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha üzenetet kézbesíteni a sorrendben, amelyben elküldi őket; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  id: ReliableMessagingVersion
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Lekérdezi vagy beállítja a WS-ReliableMessaging a kötéselem által megadott verziója."
  remarks: 'Jelenleg két verziója van a WS-ReliableMessaging protokoll használható [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 és a WS-ReliableMessagingFebruary2005. Az alapértelmezett verziója WS-ReliableMessagingFebruary2005.'
  syntax:
    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }
    return:
      type: System.ServiceModel.ReliableMessagingVersion
      description: "Egy példány származó <xref href=&quot;System.ServiceModel.ReliableMessagingVersion&quot;> </xref> , amely jelzi, hogy a WS-ReliableMessaging protokoll a konfigurációs elem által használt verzióját."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "A Maps a WSDL-elemekbe, amelyek lehetővé teszik a távoli végponton keresztül biztosít hozzáférést a szolgáltatást, amely egy megbízható munkamenet a megbízható munkamenet kötéselem található információkat."
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "A <xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;> </xref> , exportálja a kötési információ a megbízható munkamenet kötési elem a WSDL-elemeket."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "A <xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> , amely biztosítja, hogy a leképezés exportált WSDL elemek végpont leírása."
  overload: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: System.ServiceModel.Channels.BindingElement
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement()
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement()
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor(System.Boolean)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement(Boolean)
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableSessionBindingElement(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.BuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelFactory(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory(BindingContext)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelListener(BindingContext)
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener(BindingContext)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Clone()
  nameWithType: ReliableSessionBindingElement.Clone()
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone()
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: ReliableSessionBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion
- uid: System.ServiceModel.ReliableMessagingVersion
  parent: System.ServiceModel
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableMessagingVersion
  fullName: System.ServiceModel.ReliableMessagingVersion
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.#ctor*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement.ReliableSessionBindingElement
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.AcknowledgementInterval*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionBindingElement.AcknowledgementInterval
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>
  nameWithType: ReliableSessionBindingElement.BuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.BuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: BuildChannelListener<TChannel>
  nameWithType: ReliableSessionBindingElement.BuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>
  nameWithType: ReliableSessionBindingElement.CanBuildChannelFactory<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.CanBuildChannelListener<TChannel>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: CanBuildChannelListener<TChannel>
  nameWithType: ReliableSessionBindingElement.CanBuildChannelListener<TChannel>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Clone*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Clone
  nameWithType: ReliableSessionBindingElement.Clone
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.FlowControlEnabled*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionBindingElement.FlowControlEnabled
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: ReliableSessionBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionBindingElement.InactivityTimeout
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxPendingChannels*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionBindingElement.MaxPendingChannels
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxRetryCount*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionBindingElement.MaxRetryCount
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.MaxTransferWindowSize*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionBindingElement.MaxTransferWindowSize
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionBindingElement.Ordered
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.ReliableMessagingVersion*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionBindingElement.ReliableMessagingVersion
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.ReliableSessionBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: ReliableSessionBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
