### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ViewStateException
  id: ViewStateException
  children:
  - System.Web.UI.ViewStateException.#ctor
  - System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.ViewStateException.IsConnected
  - System.Web.UI.ViewStateException.Message
  - System.Web.UI.ViewStateException.Path
  - System.Web.UI.ViewStateException.PersistedState
  - System.Web.UI.ViewStateException.Referer
  - System.Web.UI.ViewStateException.RemoteAddress
  - System.Web.UI.ViewStateException.RemotePort
  - System.Web.UI.ViewStateException.UserAgent
  langs:
  - csharp
  name: ViewStateException
  nameWithType: ViewStateException
  fullName: System.Web.UI.ViewStateException
  type: Class
  summary: "A kivétel fordul elő, amikor a nézetállapot nem tölthető be vagy érvényesítve jelöli. Ez az osztály nem örökölhető."
  remarks: "Ha kivétel történik, amikor az oldal betölti a nézetállapot-információkat, a lap egy ViewStateException objektumot hoz létre, és a belső kivételként belül továbbítja azokat egy <xref:System.Web.HttpException>kivétel.</xref:System.Web.HttpException> A <xref:System.Web.HttpException>Kivétel: az alkalmazás által kezelt újra kivétel.</xref:System.Web.HttpException>       A ViewStateException osztály a kivétel fordult elő kapcsolatos információkat tárolja a <xref:System.Web.UI.ViewStateException.Message%2A>tulajdonság.</xref:System.Web.UI.ViewStateException.Message%2A> Ha a kérés van hozzáférése a <xref:System.Web.HttpRequest.ServerVariables%2A>tulajdonság, akkor a <xref:System.Web.UI.ViewStateException.Message%2A>tulajdonság által visszaadott értékeket tartalmazza a <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, és <xref:System.Web.UI.ViewStateException.Path%2A>Tulajdonságok; ellenkező esetben a <xref:System.Web.UI.ViewStateException.Message%2A>tulajdonság általános állapotának megtekintése hibaüzenet tartalmazza.</xref:System.Web.UI.ViewStateException.Message%2A> </xref:System.Web.UI.ViewStateException.Path%2A> </xref:System.Web.UI.ViewStateException.Referer%2A> </xref:System.Web.UI.ViewStateException.PersistedState%2A> </xref:System.Web.UI.ViewStateException.UserAgent%2A> </xref:System.Web.UI.ViewStateException.RemotePort%2A> </xref:System.Web.UI.ViewStateException.RemoteAddress%2A> </xref:System.Web.UI.ViewStateException.Message%2A> </xref:System.Web.HttpRequest.ServerVariables%2A>       A nézetállapot kivételt lehet üzenet hitelesítési kód (MAC) érvényesítési hiba eredménye. Ha a lap attribútum `enableViewStateMac` értéke `true`,-állapot információt MAC-azonosító van kódolva. Amikor a rendszer a nézetállapot adatokat visszaküldi a kiszolgálóra, a lap ellenőrzi, annak érdekében, hogy nem módosították-e a felhasználó által a kódolást. Ha a lap nem lehet érvényesíteni a MAC-kódolás-állapot adatai, akkor kivételhibát egy <xref:System.Web.HttpException>belső kivételként a ViewStateException objektummal kivétel.</xref:System.Web.HttpException>       A MAC-ellenőrzése sikeres a-állapot információt legyen tárolva ugyanazzal a kulccsal által küldött és fogadott. Egy olyan webfarm belül minden kiszolgálón a Számítógépkulcs egy közös kulcsot kell megadni."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a ViewStateException object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the ViewStateException object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/t-system.web.ui.viewstat_0_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/t-system.web.ui.viewstat_0_1.vb)]"
  syntax:
    content: 'public sealed class ViewStateException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.#ctor
  id: '#ctor'
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: ViewStateException()
  nameWithType: ViewStateException.ViewStateException()
  fullName: System.Web.UI.ViewStateException.ViewStateException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.ViewStateException&quot;> </xref> osztály."
  syntax:
    content: public ViewStateException ();
    parameters: []
  overload: System.Web.UI.ViewStateException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.ViewStateException&quot;> </xref> a szerializált adatok osztályt."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A szerializált objektum adatokat tartalmazó objektum."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A cél- és környezeti információt."
  overload: System.Web.UI.ViewStateException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.IsConnected
  id: IsConnected
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
  fullName: System.Web.UI.ViewStateException.IsConnected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Egy érték, amely jelzi, hogy az ügyfél jelenleg kapcsolódik a kiszolgáló lekérdezi."
  remarks: "Ez a tulajdonság hívása értékét adja vissza a <xref:System.Web.HttpResponse.IsClientConnected%2A>tulajdonság.</xref:System.Web.HttpResponse.IsClientConnected%2A>"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_0_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_0_1.vb)]"
  syntax:
    content: public bool IsConnected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az ügyfél továbbra is kapcsolódik a kiszolgáló; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ViewStateException.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Message
  id: Message
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Message
  nameWithType: ViewStateException.Message
  fullName: System.Web.UI.ViewStateException.Message
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi az, hogy egy nézetállapot kivételt eredményezett HTTP-kérelmekre vonatkozó adatok hibakeresést."
  remarks: "Ha a kérelem nem rendelkezik hozzáféréssel a kiszolgálói változókkal, ez a tulajdonság egy általános állapotának megtekintése hibaüzenetet adja vissza. Ha a kérelem rendelkezik hozzáféréssel kiszolgálói változókkal, az üzenet tulajdonság által visszaadott értékeket tartalmazza. a <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, és <xref:System.Web.UI.ViewStateException.Path%2A>Tulajdonságok.</xref:System.Web.UI.ViewStateException.Path%2A> </xref:System.Web.UI.ViewStateException.Referer%2A> </xref:System.Web.UI.ViewStateException.PersistedState%2A> </xref:System.Web.UI.ViewStateException.UserAgent%2A> </xref:System.Web.UI.ViewStateException.RemotePort%2A> </xref:System.Web.UI.ViewStateException.RemoteAddress%2A>"
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "A <xref:System.String>az információ a kivételről formázott üzenetet tartalmazó.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Path
  id: Path
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Path
  nameWithType: ViewStateException.Path
  fullName: System.Web.UI.ViewStateException.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi, hogy egy nézetállapot kivételt eredményezett a HTTP-kérelem elérési útját."
  remarks: "Ez a tulajdonság értékét adja vissza a `PATH_INFO` a változó a <xref:System.Web.HttpRequest.ServerVariables%2A>tulajdonság.</xref:System.Web.HttpRequest.ServerVariables%2A> Az állomásnév után adja vissza, az elérési út része. Az URL-cím http://www.contoso.com/virdir/page.html például elérési út meghaladná /virdir/page.html."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_2_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_2_1.vb)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "A <xref:System.String>tartalmazó az elérési út a kérelemből.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.PersistedState
  id: PersistedState
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
  fullName: System.Web.UI.ViewStateException.PersistedState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi a nézetállapot karakterláncot, Olvasás esetén a nézetállapot kivételt okozott a tartalmát."
  syntax:
    content: public string PersistedState { get; }
    return:
      type: System.String
      description: "A <xref:System.String>értékek a nézetállapot tartalmazó, hogy a nézetállapot kivételt okozott.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.PersistedState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Referer
  id: Referer
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Referer
  nameWithType: ViewStateException.Referer
  fullName: System.Web.UI.ViewStateException.Referer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Az oldal, amely csatolva a lapot, ahol a nézetállapot kivétel történt az URL-címet kap."
  remarks: "Ez a tulajdonság értékét adja vissza a `HTTP_REFERER` a változó a <xref:System.Web.HttpRequest.ServerVariables%2A>tulajdonság.</xref:System.Web.HttpRequest.ServerVariables%2A> Az érték egy üres karakterlánc (&quot;&quot;) Ha az előző kérelem nem kapcsolódik a lap."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_3_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_3_1.vb)]"
  syntax:
    content: public string Referer { get; }
    return:
      type: System.String
      description: "A <xref:System.String>a HTTP hivatkozó tartalmazó.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Referer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.RemoteAddress
  id: RemoteAddress
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
  fullName: System.Web.UI.ViewStateException.RemoteAddress
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi az IP-cím a HTTP-kérelem, hogy egy nézetállapot kivételt eredményezett."
  remarks: "Ez a tulajdonság értékét adja vissza a `REMOTE_ADDR` a változó a <xref:System.Web.HttpRequest.ServerVariables%2A>tulajdonság.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  syntax:
    content: public string RemoteAddress { get; }
    return:
      type: System.String
      description: "A <xref:System.String>az ügyfél távoli IP-címét tartalmazó.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.RemoteAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.RemotePort
  id: RemotePort
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
  fullName: System.Web.UI.ViewStateException.RemotePort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi a port számát, a HTTP-kérelem, hogy egy nézetállapot kivételt eredményezett."
  remarks: "Ez a tulajdonság értékét adja vissza a `REMOTE_PORT` a változó a <xref:System.Web.HttpRequest.ServerVariables%2A>tulajdonság.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  syntax:
    content: public string RemotePort { get; }
    return:
      type: System.String
      description: "A <xref:System.String>Távoli port számát tartalmazó.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.RemotePort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.UserAgent
  id: UserAgent
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
  fullName: System.Web.UI.ViewStateException.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi a böngésző típusa a HTTP-kérelem, hogy egy nézetállapot kivételt eredményezett."
  remarks: "Ez a tulajdonság értékét adja vissza a `HTTP_USER_AGENT` a változó a <xref:System.Web.HttpRequest.ServerVariables%2A>tulajdonság.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_1_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_1_1.vb)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "A <xref:System.String>tartalmazó a felhasználói ügynök, amely általában a böngésző típusa.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Web.UI.ViewStateException.#ctor
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: ViewStateException()
  nameWithType: ViewStateException.ViewStateException()
  fullName: System.Web.UI.ViewStateException.ViewStateException()
- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.UI.ViewStateException.IsConnected
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
  fullName: System.Web.UI.ViewStateException.IsConnected
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ViewStateException.Message
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Message
  nameWithType: ViewStateException.Message
  fullName: System.Web.UI.ViewStateException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ViewStateException.Path
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Path
  nameWithType: ViewStateException.Path
  fullName: System.Web.UI.ViewStateException.Path
- uid: System.Web.UI.ViewStateException.PersistedState
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
  fullName: System.Web.UI.ViewStateException.PersistedState
- uid: System.Web.UI.ViewStateException.Referer
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Referer
  nameWithType: ViewStateException.Referer
  fullName: System.Web.UI.ViewStateException.Referer
- uid: System.Web.UI.ViewStateException.RemoteAddress
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
  fullName: System.Web.UI.ViewStateException.RemoteAddress
- uid: System.Web.UI.ViewStateException.RemotePort
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
  fullName: System.Web.UI.ViewStateException.RemotePort
- uid: System.Web.UI.ViewStateException.UserAgent
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
  fullName: System.Web.UI.ViewStateException.UserAgent
- uid: System.Web.UI.ViewStateException.#ctor*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: ViewStateException
  nameWithType: ViewStateException.ViewStateException
- uid: System.Web.UI.ViewStateException.GetObjectData*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: GetObjectData
  nameWithType: ViewStateException.GetObjectData
- uid: System.Web.UI.ViewStateException.IsConnected*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
- uid: System.Web.UI.ViewStateException.Message*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Message
  nameWithType: ViewStateException.Message
- uid: System.Web.UI.ViewStateException.Path*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Path
  nameWithType: ViewStateException.Path
- uid: System.Web.UI.ViewStateException.PersistedState*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
- uid: System.Web.UI.ViewStateException.Referer*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Referer
  nameWithType: ViewStateException.Referer
- uid: System.Web.UI.ViewStateException.RemoteAddress*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
- uid: System.Web.UI.ViewStateException.RemotePort*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
- uid: System.Web.UI.ViewStateException.UserAgent*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
