### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableReader
  id: DataTableReader
  children:
  - System.Data.DataTableReader.#ctor(System.Data.DataTable)
  - System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  - System.Data.DataTableReader.Close
  - System.Data.DataTableReader.Depth
  - System.Data.DataTableReader.FieldCount
  - System.Data.DataTableReader.GetBoolean(System.Int32)
  - System.Data.DataTableReader.GetByte(System.Int32)
  - System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetChar(System.Int32)
  - System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.DataTableReader.GetDataTypeName(System.Int32)
  - System.Data.DataTableReader.GetDateTime(System.Int32)
  - System.Data.DataTableReader.GetDecimal(System.Int32)
  - System.Data.DataTableReader.GetDouble(System.Int32)
  - System.Data.DataTableReader.GetEnumerator
  - System.Data.DataTableReader.GetFieldType(System.Int32)
  - System.Data.DataTableReader.GetFloat(System.Int32)
  - System.Data.DataTableReader.GetGuid(System.Int32)
  - System.Data.DataTableReader.GetInt16(System.Int32)
  - System.Data.DataTableReader.GetInt32(System.Int32)
  - System.Data.DataTableReader.GetInt64(System.Int32)
  - System.Data.DataTableReader.GetName(System.Int32)
  - System.Data.DataTableReader.GetOrdinal(System.String)
  - System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  - System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  - System.Data.DataTableReader.GetSchemaTable
  - System.Data.DataTableReader.GetString(System.Int32)
  - System.Data.DataTableReader.GetValue(System.Int32)
  - System.Data.DataTableReader.GetValues(System.Object[])
  - System.Data.DataTableReader.HasRows
  - System.Data.DataTableReader.IsClosed
  - System.Data.DataTableReader.IsDBNull(System.Int32)
  - System.Data.DataTableReader.Item(System.Int32)
  - System.Data.DataTableReader.Item(System.String)
  - System.Data.DataTableReader.NextResult
  - System.Data.DataTableReader.Read
  - System.Data.DataTableReader.RecordsAffected
  langs:
  - csharp
  name: DataTableReader
  nameWithType: DataTableReader
  fullName: System.Data.DataTableReader
  type: Class
  summary: "A DataTableReader jut hozzá a tartalom egy vagy több <xref href=&quot;System.Data.DataTable&quot;> </xref> objektumok egy vagy több csak olvasható, a csak előrefelé bejárható eredményhalmazt formájában."
  remarks: "A DataTableReader sokkal működik, mint bármely más Adatolvasó, például a <xref:System.Data.SqlClient.SqlDataReader>kivételével, amelyen keresztül a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorok léptetés biztosít a DataTableReader</xref:System.Data.SqlClient.SqlDataReader> Más szóval biztosít a gyorsítótár sorok keresztül léptetés. A gyorsítótárazott adatokat módosítható, amíg a DataTableReader aktív, és az olvasó automatikusan megtartja pozícióját.       Amikor létrehoz egy a DataTableReader egy <xref:System.Data.DataTable>, az eredményül kapott DataTableReader objektum tartalmaz egy olyan eredményhalmazt, amelyben ugyanazokat az adatokat a <xref:System.Data.DataTable>amelyhez létrehozták, kivéve azokat a sorokat törölni van megjelölve, a.</xref:System.Data.DataTable> </xref:System.Data.DataTable> Az oszlopok megjelenítési ugyanabban a sorrendben, mint az eredeti <xref:System.Data.DataTable>.</xref:System.Data.DataTable> A visszaadott eredmény szerkezete megegyezik a séma- és adatok az eredeti <xref:System.Data.DataTable>.</xref:System.Data.DataTable> A DataTableReader meghívásával létrehozott a <xref:System.Data.DataSet.GetDataReader%2A>metódusában egy <xref:System.Data.DataSet>objektum több eredménykészlet tartalmazza, ha a <xref:System.Data.DataSet>több mint egy olyan táblát tartalmaz.</xref:System.Data.DataSet> </xref:System.Data.DataSet> </xref:System.Data.DataSet.GetDataReader%2A> Az eredmény nem ugyanabban a sorrendben, mint a <xref:System.Data.DataTable>objektumokat a <xref:System.Data.DataTableCollection>, a <xref:System.Data.DataSet>objektum.</xref:System.Data.DataSet> </xref:System.Data.DataTableCollection> </xref:System.Data.DataTable>       A visszaadott eredmény csak a jelenlegi verzióját tartalmazza <xref:System.Data.DataRow>; kimarad a sorok, amelyekre a törlésre megjelölt.</xref:System.Data.DataRow>       A `DataTableReader` stabil biztosít iterátor; Ez azt jelenti, hogy a tartalmát a `DataTableReader` az alapul szolgáló gyűjtemény mérete iteráció során módosításakor nem érvénytelenné válnak. Például, ha egy vagy több sort a <xref:System.Data.DataTable.Rows%2A>gyűjtemény törölt vagy eltávolított iteráció, az aktuális pozíció belül során a `DataTableReader` megfelelően kezelt és nem érvényteleníti a a iterátor.</xref:System.Data.DataTable.Rows%2A>"
  syntax:
    content: 'public sealed class DataTableReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  id: '#ctor(System.Data.DataTable)'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.DataTableReader&quot;> </xref> osztály által a megadott adatait használó <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  syntax:
    content: public DataTableReader (System.Data.DataTable dataTable);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyből az új <xref href=&quot;System.Data.DataTableReader&quot;> </xref> beolvassa az eredményhalmaz."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  id: '#ctor(System.Data.DataTable[])'
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.DataTableReader&quot;> </xref> osztály használata a megadott tömb <xref href=&quot;System.Data.DataTable&quot;> </xref> objektumok."
  remarks: "Ha létre kell hoznia egy <xref:System.Data.DataTableReader>vagy annak egy részhalmazát belül egy adott táblák alapján <xref:System.Data.Dataset>, hívja az `DataSet`tartozó <xref:System.Data.DataSet.GetDataReader%2A>metódus.</xref:System.Data.DataSet.GetDataReader%2A> </xref:System.Data.Dataset> </xref:System.Data.DataTableReader> Ha azt szeretné, hozzon létre egy új <xref:System.Data.DataTableReader>példányalapú egy csoportján `DataTable` -példányok nem egyéb kapcsolódó, használja ezt a konstruktort.</xref:System.Data.DataTableReader> Is kihasználhatja az ebben a konstruktorban átrendezését sorrendje a `DataTables` belül a `DataTableReader`, ha a rendezés belül a forrásként `DataSet` nem felel meg az igényeinek."
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.ctor#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_20_1.vb)]\n [!code-cs[DataWorks DataTableReader.ctor#1](~/add/codesnippet/csharp/m-system.data.datatabler_20_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public DataTableReader (System.Data.DataTable[] dataTables);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "A tömb <xref href=&quot;System.Data.DataTable&quot;> </xref> , amellyel az eredményeket az új objektumok <xref href=&quot;System.Data.DataTableReader&quot;> </xref> objektum."
  overload: System.Data.DataTableReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Close
  id: Close
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Bezárja az aktuális <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Hívása `Close()` a lezárt `DataTableReader` objektum hiba nem okoz."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.DataTableReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.Depth
  id: Depth
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A mélység beágyazást hozhat létre az aktuális sor a <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: '`DataTableReader`a beágyazási nem támogatja. A `Depth` tulajdonság mindig nulla adja vissza.'
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "A mélységű beágyazást hozhat létre az aktuális sor; mindig nulla."
  overload: System.Data.DataTableReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.FieldCount
  id: FieldCount
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Az aktuális sor az oszlopok számát adja vissza."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Ha nem az érvényes eredményhalmazban, 0; Ellenkező esetben az aktuális sor oszlopainak száma."
  overload: System.Data.DataTableReader.FieldCount*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kísérlet történt a mezőszáma zárt beolvasása <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének <xref:System.Boolean>.</xref:System.Boolean>"
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell egy logikai érték vagy kényszeríthetőnek olyan logikai érték, vagy kivétel jön létre.       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetBoolean#1](~/add/codesnippet/csharp/m-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Boolean
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetBoolean*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékét a bájtban."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell bájt vagy egy olyan bájtot kényszeríthetőnek.       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_8_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetByte#1](~/add/codesnippet/csharp/m-system.data.datatabler_8_1.cs)]"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Byte
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetByte*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy olyan bájtot."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Beolvassa a megadott oszlop eltolástól kezdve a puffer be a megadott puffer eltolástól kezdve tömbként bájtos adatfolyam."
  remarks: "`GetBytes`a mezőben a rendelkezésre álló bájtok számát adja vissza. A legtöbbször ennek a mezőnek a pontos hossza. Előfordulhat azonban, a visszaadott száma kisebb, mint a mező értéke igaz hossza Ha `GetBytes` bájt beszerezni a mező már felhasználták. Ez lehet például az esetben, ha a <xref:System.Data.DataTableReader>nagy adatszerkezet éppen olvas be pufferbe, ha a puffer `null` (`Nothing` a Visual Basic nyelvben), `GetBytes` adja vissza a teljes mező hossza (bájt), a puffer eltolásának paraméter alapján fennmaradó mérete nem.</xref:System.Data.DataTableReader>       Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy bájttömböt vagy egy bájttömböt kényszeríthetőnek."
  example:
  - "The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\\ folder. In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.  \n  \n [!code-cs[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/csharp/ff921727-bdbe-4741-b853-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetBytes#1](~/add/codesnippet/visualbasic/ff921727-bdbe-4741-b853-_1.vb)]"
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: dataIndex
      type: System.Int64
      description: "Az index a mező, amelyből az olvasási művelet elindításához."
    - id: buffer
      type: System.Byte[]
      description: "A puffer, amelybe bájtos adatfolyam olvasására."
    - id: bufferIndex
      type: System.Int32
      description: "Az index indításának helyezi el az adatokat a pufferen belüli."
    - id: length
      type: System.Int32
      description: "Másolja a puffer maximális hosszát."
    return:
      type: System.Int64
      description: "A tényleges, beolvasott bájtok száma."
  overload: System.Data.DataTableReader.GetBytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy bájttömböt."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értéke egy karakter."
  remarks: "Nincs átalakításra történik; ezért beolvasott adat már kell lennie egy karakter vagy kényszeríthetőnek karaktert.       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_16_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetChar#1](~/add/codesnippet/csharp/m-system.data.datatabler_16_1.cs)]"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Char
      description: "Az oszlop értéke."
  overload: System.Data.DataTableReader.GetChar*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott mező nem tartalmaz karaktert."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A megadott oszlop értékét egy karakter tömbként adja vissza."
  remarks: "`GetChars`a mezőben a rendelkezésre álló karakterek számát adja vissza. A legtöbbször ennek a mezőnek a pontos hossza. Előfordulhat azonban, a visszaadott száma kisebb, mint a mező értéke igaz hossza Ha `GetChars` karakterek beszerezni a mező már felhasználták.       A tényleges karakterszámot, olvassa el lehet kisebb, mint a kért hosszát, a mező végének elérésekor. Ha a NULL értékű puffer (`Nothing` a Visual Basic nyelvben), `GetChars` karakterből állhat, nem a puffer eltolásának paraméter alapján fennmaradó méretét adja vissza a teljes mező hossza.       Nincs átalakításra történik; ezért az adatok már tömbnek kell lennie egy karakter vagy egy karaktertömbnek kényszeríthetőnek."
  example:
  - "The following example demonstrates the `GetChars` method. The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second. In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`. `TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.  \n  \n This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array. Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.  \n  \n [!code-cs[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/csharp/299b411e-96a3-40b6-89fc-_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetChars#1](~/add/codesnippet/visualbasic/299b411e-96a3-40b6-89fc-_1.vb)]"
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    - id: dataIndex
      type: System.Int64
      description: "Az index a mező, amelyből az olvasási művelet elindításához."
    - id: buffer
      type: System.Char[]
      description: "A puffer való beolvasásának adatfolyama karakter."
    - id: bufferIndex
      type: System.Int32
      description: "Az index indításának helyezi el az adatokat a pufferen belüli."
    - id: length
      type: System.Int32
      description: "Másolja a puffer maximális hosszát."
    return:
      type: System.Int64
      description: "Olvassa el a tényleges karakterszámot."
  overload: System.Data.DataTableReader.GetChars*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy karaktertömbnek."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop adattípusa képviselő karakterláncot."
  remarks: "A GetDataTypeName metódus mindig az alapul szolgáló típusát adja vissza <xref:System.Data.DataColumn>helyett egy szolgáltatóhoz tartozó típust.</xref:System.Data.DataColumn>"
  example:
  - "The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:  \n  \n [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_10_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDataTypeName#1](~/add/codesnippet/csharp/m-system.data.datatabler_10_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \nID: Int32  \nName: String  \n```"
  syntax:
    content: public override string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.String
      description: "Egy karakterlánc, amely az oszlop adattípusát."
  overload: System.Data.DataTableReader.GetDataTypeName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop, mint az érték egy <xref:System.DateTime>objektum.</xref:System.DateTime>"
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.DateTime>vagy kényszeríthetőnek egy `DataTime`.</xref:System.DateTime>       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_23_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetDateTime#1](~/add/codesnippet/csharp/m-system.data.datatabler_23_1.cs)]"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.DateTime
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy DateTime típusú érték."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének <xref:System.Decimal>.</xref:System.Decimal>"
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.Decimal>vagy kényszeríthetőnek egy `Decimal`.</xref:System.Decimal>       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/csharp/m-system.data.datatabler_4_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_4_1.vb)]"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Decimal
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetDecimal*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> érték."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi az oszlop értéke, egy kétszeres pontosságú lebegőpontos számot."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy kétszeres pontosságú lebegőpontos számot, vagy egy kétszeres pontosságú lebegőpontos számot kényszeríthetőnek kell lennie.       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/csharp/m-system.data.datatabler_19_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetDouble#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_19_1.vb)]"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Az oszlop nulla alapú sorszámát."
    return:
      type: System.Double
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetDouble*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref uid=&quot;langword_csharp_DataTableReader&quot; name=&quot;DataTableReader&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy kétszeres pontosságú lebegőpontos számot."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adja vissza, amely segítségével a gyűjtemény iterációt számbevevőre."
  remarks: "Enumerálók engedélyezése csak a <xref:System.Data.DataTableReader>.</xref:System.Data.DataTableReader> adatainak olvasása Enumerálók módosításához az alapul szolgáló gyűjtemény nem használható.       Először a számbavevő a gyűjtemény első eleme elé. At ez elhelyezése, hívja <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia `MoveNext` ahhoz, hogy a számláló értéke elolvasása előtt a gyűjtemény első eleme a `Current`.       `Current`Visszaadja egy <xref:System.Data.Common.DbDataRecord>, és az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Data.Common.DbDataRecord> `MoveNext`Beállítja a `Current` a következő elemre.       Után a gyűjtemény végéig átadása, a számbavevő a gyűjtemény utolsó eleme mögé elhelyezett és hívó-e `MoveNext` hamis értéket ad vissza. Ha az utolsó irányuló hívás `MoveNext` visszaadott `false`, hívó `Current` kivételt jelez. Ezenkívül mivel a <xref:System.Data.DataTableReader>csak előrefelé bejárható hozzáférést biztosít az adatokhoz, hívja <xref:System.Collections.IEnumerator.Reset%2A>az IEnumerator metódusában jelez <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Data.DataTableReader>       A <xref:System.Data.DataTableReader>biztosít egy stabil enumerátor.</xref:System.Data.DataTableReader> Ez azt jelenti, hogy akkor is, ha a sor törlése vagy elemek felvétele az alapul szolgáló adatokat belül előfordul, a GetEnumerator hívásával visszaadott számbavevő továbbra is érvényes."
  example:
  - "The following example demonstrates the use of the GetEnumerator method. This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.  \n  \n [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_7_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetEnumerator#1](~/add/codesnippet/csharp/m-system.data.datatabler_7_1.cs)]  \n  \n The procedure displays the following text in the Console window:  \n  \n```  \nPeter  \nMary  \nRuss  \n```"
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>elemgyűjtemény képviselő objektum.</xref:System.Collections.IEnumerator>"
  overload: System.Data.DataTableReader.GetEnumerator*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  remarks: ''
  example:
  - "Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/csharp/m-system.data.datatabler_13_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_13_1.vb)]"
  syntax:
    content: public override Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Type
      description: "A <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értéke, egy egyszeres pontosságú lebegőpontos számot."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy egyszeres pontosságú lebegőpontos számot, vagy egy egyszeres pontosságú lebegőpontos számot kényszeríthetőnek kell lennie.       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/csharp/m-system.data.datatabler_11_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetFloat#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_11_1.vb)]"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Single
      description: "Az oszlop értéke."
  overload: System.Data.DataTableReader.GetFloat*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy egyszeres pontosságú lebegőpontos számot."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értéke, egy globálisan egyedi azonosítóját (GUID)."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.Guid>vagy kényszeríthetőnek egy `Guid`.</xref:System.Guid>       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in DataTableReader. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetGuid#1](~/add/codesnippet/csharp/m-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Guid
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetGuid*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy GUID Azonosítót."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének aláírt 16 bites egész számként."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.Int16>vagy kényszeríthetőnek egy `Int16`.</xref:System.Int16>       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_1_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt16#1](~/add/codesnippet/csharp/m-system.data.datatabler_1_1.cs)]"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból"
    return:
      type: System.Int16
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetInt16*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy 16 bites előjeles egész szám."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének aláírt 32 bites egész számként."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.Int32>vagy kényszeríthetőnek egy `Int32`.</xref:System.Int32>       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/csharp/m-system.data.datatabler_15_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetInt32#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_15_1.vb)]"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból"
    return:
      type: System.Int32
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetInt32*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy 32 bites, előjeles egész értéket."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének egy 64 bites előjeles egész számként."
  remarks: "Nincs átalakításra történik; ezért a beolvasott adat már kell lennie egy <xref:System.Int64>vagy kényszeríthetőnek egy `Int64`.</xref:System.Int64>       Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column is not of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_5_1.vb)]\n [!code-cs[DataWorks DataTableReader.GetInt64#1](~/add/codesnippet/csharp/m-system.data.datatabler_5_1.cs)]"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból"
    return:
      type: System.Int64
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetInt64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy 64 bites, előjeles egész értéket."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének <xref:System.String>.</xref:System.String>"
  remarks: "A `GetName` és <xref:System.Data.DataTableReader.GetOrdinal%2A>módszerek inverz funkciókat biztosítanak.</xref:System.Data.DataTableReader.GetOrdinal%2A> Ez azt jelenti, hogy a hívó `GetOrdinal` hívása visszatérési értékének `GetName` térjen vissza az eredeti átadott paraméter `GetName`; Ugyanez vonatkozik eljárások hívása ellentétes sorrendben."
  example:
  - "The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetName#1](~/add/codesnippet/csharp/m-system.data.datatabler_6_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetName#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_6_1.vb)]"
  syntax:
    content: public override string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból"
    return:
      type: System.String
      description: "A megadott oszlop neve."
  overload: System.Data.DataTableReader.GetName*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a oszlop sorszáma, az oszlop neve a."
  remarks: "Mivel a legtöbb a módszerrel tartalmazza a <xref:System.Data.DataTableReader>osztály meg kell adni egy sorszám oszlopszám, használhatja a `GetOrdinal` metódusának segítéségével lekérheti az oszlopnak a számát, az oszlop neve a.</xref:System.Data.DataTableReader>       `GetOrdinal`kis-és nagybetűket keresést hajt végre. Ha nem sikerül, egy második nem betűérzékeny keresési történik. Ha az oszlop számát nem található egy `IndexOutOfRangeException` vált ki.       `GetOrdinal`van kana szélességű kis-és nagybetűket.       Mivel sorszámát-alapú keresését hatékonyabb, mint elnevezett keresések, nem hatékony hívására `GetOrdinal` a hurkon belül. Időt takaríthat meg hívása `GetOrdinal` egyszer, és az eredmények hozzárendelése egy egész változót a hurkon belül használható"
  example:
  - "If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information. In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :  \n  \n [!code-cs[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.datatabler_3_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_3_1.vb)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Int32
      description: "A nulla alapú oszlopból."
  overload: System.Data.DataTableReader.GetOrdinal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott értéke nem érvényes oszlopnevet."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop típusának szolgáltatói formátumban."
  remarks: "Mivel a <xref:System.Data.DataTableReader>mindig adja meg a típus tárolja el az alapul szolgáló <xref:System.Data.DataColumn>a visszaadott érték mindig azonos tárolja a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> típusként adja vissza a GetProviderSpecificFieldType metódus meghívásával.</xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Használata esetén a <xref:System.Data.DataTableReader>osztály a GetProviderSpecificFieldType metódus hívása azonos típusú adja vissza a <xref:System.Type.GetType%2A>metódus.</xref:System.Type.GetType%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Type
      description: "A <xref:System.Type>, amely az objektum adattípusa.</xref:System.Type>"
  overload: System.Data.DataTableReader.GetProviderSpecificFieldType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének szolgáltatói formátumban."
  remarks: "Mivel a <xref:System.Data.DataTableReader>mindig adja meg a típus tárolja el az alapul szolgáló <xref:System.Data.DataColumn>mindig a GetProviderSpecificValue metódus által visszaadott érték a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> belül tárolt adatok azonos típusú adatokat ad vissza</xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Használata esetén a <xref:System.Data.DataTableReader>osztály a GetProviderSpecificValue metódust ad vissza, ugyanazt az értéket, és hívása írja a <xref:System.Data.DataTableReader.GetValue%2A>metódus.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Az oszlop, amelynek az értéke beolvasott nulláról induló száma."
    return:
      type: System.Object
      description: "A szolgáltatói formátumban megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetProviderSpecificValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt<xref href=&quot;System.Data.DataTableReader&quot;></xref>"
  platform:
  - net462
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A megadott tömb beírja a szolgáltatóhoz tartozó összes oszlop információja a <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "Mivel a <xref:System.Data.DataTableReader>mindig adja meg a típusú adatokat tárolja el az alapul szolgáló <xref:System.Data.DataColumn>a hívott metódus a tárolja a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Data azonos típusú mindig GetProviderSpecificValues által visszaadott értékek</xref:System.Data.DataColumn> </xref:System.Data.DataTableReader> Használata esetén a <xref:System.Data.DataTableReader>osztály a GetProviderSpecificValues metódus hívása adja vissza a azonos értékek és típusok hívása a <xref:System.Data.DataTableReader.GetValues%2A>metódus.</xref:System.Data.DataTableReader.GetValues%2A> </xref:System.Data.DataTableReader>"
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Ki kell tölteni az oszlopokra vonatkozó típusú adatok objektumokból álló tömb a <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "Oszlop értékeinek száma másolja a tömbbe."
  overload: System.Data.DataTableReader.GetProviderSpecificValues*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai a <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  remarks: "A GetSchemaTable metódus az egyes oszlopok metaadatainak sorrendje a következő adja vissza: |} DataReader oszlop |} Leírás |}   |-----------------------|-----------------|   | Oszlopnév |} Az oszlop, mert a név megjelenik a <xref:System.Data.DataTable>. |}   | ColumnOrdinal |} Az oszlop sorszámát |}   | ColumnSize |}-1 érték esetén a <xref:System.Data.Common.SchemaTableColumn.ColumnSize>(vagy <xref:System.Data.DataColumn.MaxLength%2A>) a <xref:System.Data.DataColumn>tulajdonsága nem lehet megállapítani, vagy nincs megfelelő; ellenkező esetben 0 vagy pozitív egész szám, amely tartalmazza a `MaxLength` érték. |}   | NumericPrecision |} Ha az oszlop típusának numerikus típus, ez az oszlop maximális pontosság.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.MaxLength%2A> </xref:System.Data.Common.SchemaTableColumn.ColumnSize> </xref:System.Data.DataTable> Ha az oszlop típusa nem egy numerikus adattípusú, ez az null értékű. |}   | NumericScale |} Ha oszlop adattípusát méretezési összetevőt, a tizedesvesszőtől jobbra számjegyek számának visszaadása. Ellenkező esetben a null érték visszaadása. |}   | DataType |} Az alapul szolgáló típusú oszlop. |}   | Szolgáltatótípus |} Az jelzi, hogy az oszlop adattípusát. Ha az oszlop adattípusának sor sor változik, az értéke <xref:System.Object>.</xref:System.Object> Ez az oszlop nem tartalmazhat null értékű. |}   | IsLong |} `true` Ha az oszlop adattípusa <xref:System.String>és annak <xref:System.Data.DataColumn.MaxLength%2A>tulajdonság értéke -1.</xref:System.Data.DataColumn.MaxLength%2A> </xref:System.String> Ellenkező esetben `false`. |}   | AllowDBNull |} `true` a AllowDbNull korlátozás van beállítva, az az oszlop értéke igaz, ha sikertelen, ha `false`. |}   | IsReadOnly |} `true` Ha az oszlop nem módosított, ha `false`. |}   | IsRowVersion |} `false`, vár minden egyes oszlophoz. |}   | IsUnique |} `true`: A két sorok a <xref:System.Data.DataTable>ugyanaz az érték lehet ebben az oszlopban.</xref:System.Data.DataTable> `IsUnique`IGAZ, ha az oszlop felel meg a kulcs saját magát vagy garantálja van-e típusú egyedi, érvényes ez az oszlop egy korlátozás. `false`: Az oszlop tartalmazhat ismétlődő értékek a `DataTable`. Az oszlop az alapértelmezett érték `false`. |}   | IsKey |} `true`: Az oszlop az egyik oszlopkészleteket, hogy a együtt egyedi módon azonosítja az <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sor Az oszlopok csoportja `IsKey` beállítása `true` sorában egyedi módon kell azonosítania a `DataTable`. Esetében nem követelmény, hogy az oszlopok csoportja-e a minimális számú oszlopot. Az oszlopok csoportja, a rendszer a egy `DataTable` elsődleges kulcs, egyedi megkötésen vagy egyedi index. `false`: Az oszlop nem szükséges a sor egyedi azonosításához. Ez az érték `true` Ha az oszlop egyetlen vagy összetett elsődleges kulcsban. Ellenkező esetben a érték pedig `false`. |}   | IsAutoIncrement |} `true`: Az oszlop értékeket rendel az új sorok rögzített lépésekben. `false`: Az oszlop nem új sorok rögzített lépésekben értéket hozzárendelni. Az oszlop az alapértelmezett érték `false`. |}   | BaseCatalogName |} A katalógus szerepel az adattárban, amely tartalmazza az oszlop neve. `Null`Ha az alap katalógus neve nem határozható meg. Az alapértelmezett érték az oszlop egy `null` érték. |}   | BaseSchemaName |} Ez az érték mindig `Null`. |}   | BaseTableName |} A <xref:System.Data.DataTable>nevét. |}   | BaseColumnName |} A <xref:System.Data.DataTable>az oszlop neve. |}   | AutoIncrementSeed |} A <xref:System.Data.DataTable>tartozó <xref:System.Data.DataColumn.AutoIncrementSeed%2A>tulajdonság értéke. |}   | Az AutoIncrementStep |} A <xref:System.Data.DataTable>tartozó <xref:System.Data.DataColumn.AutoIncrementStep%2A>tulajdonság értéke. |}   | DefaultValue |} A <xref:System.Data.DataColumn>tartozó <xref:System.Data.DataColumn.DefaultValue%2A>tulajdonság értéke. |}   | Kifejezés |} A kifejezés-karakterlánc, ha az aktuális oszlop egy kifejezés oszlop és az összes oszlop a kifejezésben használt tartozik azonos `T:System.Data.DataTable` , amely tartalmazza a kifejezésoszlop; ellenkező esetben `null`. |}   | A ColumnMapping |} Az <xref:System.Data.MappingType>érték a <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> társított</xref:System.Data.MappingType> </xref:System.Data.DataColumn.DefaultValue%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataColumn.AutoIncrementStep%2A> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataTable> A típus egyik lehet `Attribute`, `Element`, `Hidden`, vagy `SimpleContent`. Az alapértelmezett érték `Element`. |}   | BaseTableNamespace |} A <xref:System.Data.DataTable>tartozó <xref:System.Data.DataTable.Namespace%2A>tulajdonság értéke. |}   | BaseColumnNamespace |} Értékét a <xref:System.Data.DataColumn>tartozó <xref:System.Data.DataColumn.Namespace%2A>tulajdonság. |}</xref:System.Data.DataColumn.Namespace%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable.Namespace%2A> </xref:System.Data.DataTable>"
  example:
  - "The following console application example retrieves schema information about the specified column. Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.  \n  \n [!code-cs[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/csharp/m-system.data.datatabler_14_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_14_1.vb)]"
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amely leírja, hogy az oszlop metaadatai."
  overload: System.Data.DataTableReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Data.DataTableReader&quot;> </xref> le van zárva."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének karakterláncként."
  remarks: "Hívás <xref:System.Data.DataTableReader.IsDBNull%2A>megtekintéséhez, hogy vannak-e null értékeket a metódus hívása előtt.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-cs[DataWorks DataTableReader.GetString#1](~/add/codesnippet/csharp/m-system.data.datatabler_17_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetString#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_17_1.vb)]"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból"
    return:
      type: System.String
      description: "A megadott oszlop értéke."
  overload: System.Data.DataTableReader.GetString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A megadott oszlop nem tartalmaz egy karakterláncot."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékének natív formátumában."
  remarks: "Bár hívása <xref:System.Data.DataTableReader.IsDBNull%2A>megjelenítéséhez, ha a metódus hívása előtt null értékeket, nincs ennek.</xref:System.Data.DataTableReader.IsDBNull%2A>"
  example:
  - "The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name. Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.  \n  \n [!code-cs[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/csharp/m-system.data.datatabler_22_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValue#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_22_1.vb)]"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból"
    return:
      type: System.Object
      description: "A megadott oszlop értéke. Ez a metódus visszaadja <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> null értékű oszlopokhoz."
  overload: System.Data.DataTableReader.GetValue*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy lezárt oszlopai hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Feltölti az oszlop értékekkel, az aktuális sor egy objektumokból álló tömb."
  remarks: "A legtöbb alkalmazás esetén ez a módszer hatékony biztosít az összes oszlop, minden oszlop külön-külön beolvasása helyett. Ha a szándéka az, hogy a sor lekérdezni az összes oszlop értékét a <xref:System.Data.DataTableReader>, a `GetValues` módszer lehetővé teszi a leghatékonyabb megoldás.</xref:System.Data.DataTableReader>       Megadhat egy <xref:System.Object>tömb, amely tartalmazza az eredményül kapott sor található oszlopok száma nem lépi.</xref:System.Object> Csak a adatok mennyisége az `Object` tömb tárolására képes a tömb másolandó. Is átadhatja az `Object` tömb, amelynek hossza nagyobb, mint az eredményül kapott sor, amelyben a további tömbelemek marad eset változatlan marad a metódus hívása található oszlopok száma.       Ez a módszer `DBNull` a kimeneti tömb null értékű oszlopokhoz."
  example:
  - "The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>. In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.  \n  \n [!code-cs[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/csharp/m-system.data.datatabler_21_1.cs)]\n [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_21_1.vb)]"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "A tömb <xref:System.Object>amelybe oszlop értékeit másolja a <xref href=&quot;System.Data.DataTableReader&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Oszlop értékeinek száma másolja a tömbbe."
  overload: System.Data.DataTableReader.GetValues*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.HasRows
  id: HasRows
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Data.DataTableReader&quot;> </xref> egy vagy több sort tartalmaz."
  remarks: "A `HasRows` tulajdonságát az aktuális eredményhalmaz információt ad vissza. Ha a <xref:System.Data.DataTableReader>több eredmény tartalmazza beállítása, a értékével ellenőrizheti a `HasRows` tulajdonság hívása után azonnal a <xref:System.Data.DataTableReader.NextResult%2A>metódust annak megállapítására, hogy az új eredményhalmaz tartalmaz-e sorokat.</xref:System.Data.DataTableReader.NextResult%2A> </xref:System.Data.DataTableReader>       Használja a `HasRows` tulajdonság hívására követelmény elkerülése érdekében a <xref:System.Data.DataTableReader.Read%2A>metódusában a <xref:System.Data.DataTableReader>Ha nincsenek sorok az aktuális eredményhalmaz belül.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.Read%2A>"
  example:
  - "The following example fills two <xref:System.Data.DataTable> instances with data. The first <xref:System.Data.DataTable> contains one row, and the second contains no rows. The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the HasRows property of each before it makes the call to PrintData.  \n  \n [!code-cs[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/csharp/p-system.data.datatabler_1_1.cs)]\n [!code-vb[DataWorks DataTableReader.HasRows#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_1_1.vb)]"
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.DataTableReader&quot;> </xref> tartalmaz egy vagy több sor; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.HasRows*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Lezárt adatainak lekérésére történt kísérlet <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.IsClosed
  id: IsClosed
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Data.DataTableReader&quot;> </xref> le van zárva."
  remarks: "<xref:System.Data.DataTableReader.Close%2A>az egyetlen lehetőség és `IsClosed` és <xref:System.Data.DataTableReader.RecordsAffected%2A>után elérhető csak tulajdonságainak vannak a <xref:System.Data.DataTableReader>be lett zárva.</xref:System.Data.DataTableReader> </xref:System.Data.DataTableReader.RecordsAffected%2A></xref:System.Data.DataTableReader.Close%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "Beolvasása <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Ha a <xref href=&quot;System.Data.DataTableReader&quot;> </xref> lezárt; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy az oszlop nem létező vagy a hiányzó értékeket tartalmaz."
  remarks: "Ez a metódus vannak null értékek a típusos get metódusok meghívása előtt hívható (például <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, és így tovább) kiadását okozó hiba elkerülése érdekében.</xref:System.Data.DataTableReader.GetChar%2A> </xref:System.Data.DataTableReader.GetByte%2A>"
  example:
  - "The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>. If the value the column within a particular row is null, the code displays the text \\<NULL>. If the data within the column of the correct type, the example displays an error message for each row.  \n  \n [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_18_1.vb)]\n [!code-cs[DataWorks DataTableReader.IsDbNull#1](~/add/codesnippet/csharp/m-system.data.datatabler_18_1.cs)]"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott oszlop érték egyenértékű <xref href=&quot;System.DBNull&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.IsDBNull*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékét az adott a oszlopból natív formátumában."
  remarks: "Ez a túlterhelési <xref:System.Data.DataTableReader.Item%2A>viselkedik-e az azonos a <xref:System.Data.DataTableReader.GetValue%2A>metódus.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>. The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.  \n  \n [!code-vb[DataWorks DataTableReader.Item#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_0_1.vb)]\n [!code-cs[DataWorks DataTableReader.Item#1](~/add/codesnippet/csharp/p-system.data.datatabler_0_1.cs)]"
  syntax:
    content: public override object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A nulla alapú oszlopból."
    return:
      type: System.Object
      description: "A megadott oszlop natív formátumában értéke."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Az átadott index kívül esik a tartományon 0 volt <xref:System.Data.DataTableReader.FieldCount*>– 1.</xref:System.Data.DataTableReader.FieldCount*>"
  platform:
  - net462
- uid: System.Data.DataTableReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott oszlop értékét az oszlop neve a natív formátumában."
  remarks: "A kis-és nagybetűket keres a először történik. Ha nem sikerül, egy második nem betűérzékeny keresési történik.       Ez a metódus kana-szélesség-és nagybetűk megkülönböztetése nélkül.       Ezen túlterhelt verziója <xref:System.Data.DataTableReader.Item%2A>hívása felel meg a <xref:System.Data.DataTableReader.GetOrdinal%2A>metódust, és ezt követően majd hívja a <xref:System.Data.DataTableReader.GetValue%2A>metódus.</xref:System.Data.DataTableReader.GetValue%2A> </xref:System.Data.DataTableReader.GetOrdinal%2A> </xref:System.Data.DataTableReader.Item%2A>"
  example:
  - "Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column. Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.  \n  \n [!code-vb[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/visualbasic/p-system.data.datatabler_2_1.vb)]\n [!code-cs[DataWorks DataTableReader.ItemName#1](~/add/codesnippet/csharp/p-system.data.datatabler_2_1.cs)]"
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Az oszlop neve."
    return:
      type: System.Object
      description: "A megadott oszlop natív formátumában értéke."
  overload: System.Data.DataTableReader.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott értéke nem érvényes oszlopnevet."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Kísérlet történt adatok lekérése a törölt sor."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.NextResult
  id: NextResult
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kiadásokban a <xref href=&quot;System.Data.DataTableReader&quot;> </xref> a következő eredményhalmazhoz, ha van ilyen."
  remarks: "Több eredmény létrehozásával létrehozható feldolgozásához használt, egy <xref:System.Data.DataTableReader>keresztül egy <xref:System.Data.DataSet>tartalmazó két vagy több táblában, vagy olyan tömb, amely tartalmazza a két vagy több <xref:System.Data.DataTable>példányok.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTableReader>       Egy új <xref:System.Data.DataTableReader>van pozicionálva a első találatra.</xref:System.Data.DataTableReader>"
  example:
  - "In the following example, the TestConstructor method creates two <xref:System.Data.DataTable>instances. In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window. In order to test this application, create a new Console application, and paste the sample code into the newly created file.  \n  \n [!code-vb[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_9_1.vb)]\n [!code-cs[DataWorks DataTableReader.NextResult#1](~/add/codesnippet/csharp/m-system.data.datatabler_9_1.cs)]  \n  \n The Console window displays the following results:  \n  \n```  \n1 Mary  \n2 Andy  \n3 Peter  \n4 Russ  \n1 Wireless Network Card  \n2 Hard Drive  \n3 Monitor  \n4 CPU  \n```"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha egy másik eredménykészlet; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.NextResult*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Kísérlet történt egy lezárt navigálhat <xref href=&quot;System.Data.DataTableReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataTableReader.Read
  id: Read
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kiadásokban a <xref href=&quot;System.Data.DataTableReader&quot;> </xref> a következő bejegyzéshez."
  remarks: "Az alapértelmezett pozíciója a <xref:System.Data.DataTableReader>előtt az első rekordra.</xref:System.Data.DataTableReader> Ezért meg kell hívnia `Read` bármely adatokhoz hozzáférő elindításához."
  example:
  - "The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.  \n  \n [!code-cs[DataWorks DataTableReader.Read#1](~/add/codesnippet/csharp/m-system.data.datatabler_12_1.cs)]\n [!code-vb[DataWorks DataTableReader.Read#1](~/add/codesnippet/visualbasic/m-system.data.datatabler_12_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha egy másik sorral olvasható; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataTableReader.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvassa el, vagy egy oszlop lezárt hozzáférési kísérlet történt <xref href=&quot;System.Data.DataTableReader&quot;> </xref> ."
  platform:
  - net462
- uid: System.Data.DataTableReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.DataTableReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi az SQL-utasítás végrehajtása törölte beszúrni vagy módosította sorok száma."
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "A <xref href=&quot;System.Data.DataTableReader&quot;> </xref> nem támogatja ezt a tulajdonságot, és mindig a 0 értéket adja vissza."
  overload: System.Data.DataTableReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable)
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable)
  nameWithType: DataTableReader.DataTableReader(DataTable)
  fullName: System.Data.DataTableReader.DataTableReader(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableReader.#ctor(System.Data.DataTable[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader(DataTable[])
  nameWithType: DataTableReader.DataTableReader(DataTable[])
  fullName: System.Data.DataTableReader.DataTableReader(DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.Close
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close()
  nameWithType: DataTableReader.Close()
  fullName: System.Data.DataTableReader.Close()
- uid: System.Data.DataTableReader.Depth
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
  fullName: System.Data.DataTableReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataTableReader.FieldCount
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
  fullName: System.Data.DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DataTableReader.GetBoolean(Int32)
  fullName: System.Data.DataTableReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTableReader.GetByte(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DataTableReader.GetByte(Int32)
  fullName: System.Data.DataTableReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetChar(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DataTableReader.GetChar(Int32)
  fullName: System.Data.DataTableReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.DataTableReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetDataTypeName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DataTableReader.GetDataTypeName(Int32)
  fullName: System.Data.DataTableReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataTableReader.GetDateTime(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DataTableReader.GetDateTime(Int32)
  fullName: System.Data.DataTableReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.DataTableReader.GetDecimal(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DataTableReader.GetDecimal(Int32)
  fullName: System.Data.DataTableReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.DataTableReader.GetDouble(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DataTableReader.GetDouble(Int32)
  fullName: System.Data.DataTableReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.DataTableReader.GetEnumerator
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataTableReader.GetEnumerator()
  fullName: System.Data.DataTableReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataTableReader.GetFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DataTableReader.GetFieldType(Int32)
  fullName: System.Data.DataTableReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataTableReader.GetFloat(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DataTableReader.GetFloat(Int32)
  fullName: System.Data.DataTableReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.DataTableReader.GetGuid(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DataTableReader.GetGuid(Int32)
  fullName: System.Data.DataTableReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.DataTableReader.GetInt16(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DataTableReader.GetInt16(Int32)
  fullName: System.Data.DataTableReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.DataTableReader.GetInt32(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DataTableReader.GetInt32(Int32)
  fullName: System.Data.DataTableReader.GetInt32(Int32)
- uid: System.Data.DataTableReader.GetInt64(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DataTableReader.GetInt64(Int32)
  fullName: System.Data.DataTableReader.GetInt64(Int32)
- uid: System.Data.DataTableReader.GetName(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DataTableReader.GetName(Int32)
  fullName: System.Data.DataTableReader.GetName(Int32)
- uid: System.Data.DataTableReader.GetOrdinal(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DataTableReader.GetOrdinal(String)
  fullName: System.Data.DataTableReader.GetOrdinal(String)
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DataTableReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DataTableReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.DataTableReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DataTableReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.DataTableReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataTableReader.GetSchemaTable
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DataTableReader.GetSchemaTable()
  fullName: System.Data.DataTableReader.GetSchemaTable()
- uid: System.Data.DataTableReader.GetString(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DataTableReader.GetString(Int32)
  fullName: System.Data.DataTableReader.GetString(Int32)
- uid: System.Data.DataTableReader.GetValue(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DataTableReader.GetValue(Int32)
  fullName: System.Data.DataTableReader.GetValue(Int32)
- uid: System.Data.DataTableReader.GetValues(System.Object[])
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DataTableReader.GetValues(Object[])
  fullName: System.Data.DataTableReader.GetValues(Object[])
- uid: System.Data.DataTableReader.HasRows
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
  fullName: System.Data.DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
  fullName: System.Data.DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DataTableReader.IsDBNull(Int32)
  fullName: System.Data.DataTableReader.IsDBNull(Int32)
- uid: System.Data.DataTableReader.Item(System.Int32)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DataTableReader.Item(Int32)
  fullName: System.Data.DataTableReader.Item(Int32)
- uid: System.Data.DataTableReader.Item(System.String)
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item(String)
  nameWithType: DataTableReader.Item(String)
  fullName: System.Data.DataTableReader.Item(String)
- uid: System.Data.DataTableReader.NextResult
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult()
  nameWithType: DataTableReader.NextResult()
  fullName: System.Data.DataTableReader.NextResult()
- uid: System.Data.DataTableReader.Read
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read()
  nameWithType: DataTableReader.Read()
  fullName: System.Data.DataTableReader.Read()
- uid: System.Data.DataTableReader.RecordsAffected
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
  fullName: System.Data.DataTableReader.RecordsAffected
- uid: System.Data.DataTableReader.#ctor*
  parent: System.Data.DataTableReader
  isExternal: false
  name: DataTableReader
  nameWithType: DataTableReader.DataTableReader
- uid: System.Data.DataTableReader.Close*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Close
  nameWithType: DataTableReader.Close
- uid: System.Data.DataTableReader.Depth*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Depth
  nameWithType: DataTableReader.Depth
- uid: System.Data.DataTableReader.FieldCount*
  parent: System.Data.DataTableReader
  isExternal: false
  name: FieldCount
  nameWithType: DataTableReader.FieldCount
- uid: System.Data.DataTableReader.GetBoolean*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBoolean
  nameWithType: DataTableReader.GetBoolean
- uid: System.Data.DataTableReader.GetByte*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetByte
  nameWithType: DataTableReader.GetByte
- uid: System.Data.DataTableReader.GetBytes*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetBytes
  nameWithType: DataTableReader.GetBytes
- uid: System.Data.DataTableReader.GetChar*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChar
  nameWithType: DataTableReader.GetChar
- uid: System.Data.DataTableReader.GetChars*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetChars
  nameWithType: DataTableReader.GetChars
- uid: System.Data.DataTableReader.GetDataTypeName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DataTableReader.GetDataTypeName
- uid: System.Data.DataTableReader.GetDateTime*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDateTime
  nameWithType: DataTableReader.GetDateTime
- uid: System.Data.DataTableReader.GetDecimal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDecimal
  nameWithType: DataTableReader.GetDecimal
- uid: System.Data.DataTableReader.GetDouble*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetDouble
  nameWithType: DataTableReader.GetDouble
- uid: System.Data.DataTableReader.GetEnumerator*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DataTableReader.GetEnumerator
- uid: System.Data.DataTableReader.GetFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFieldType
  nameWithType: DataTableReader.GetFieldType
- uid: System.Data.DataTableReader.GetFloat*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetFloat
  nameWithType: DataTableReader.GetFloat
- uid: System.Data.DataTableReader.GetGuid*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetGuid
  nameWithType: DataTableReader.GetGuid
- uid: System.Data.DataTableReader.GetInt16*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt16
  nameWithType: DataTableReader.GetInt16
- uid: System.Data.DataTableReader.GetInt32*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt32
  nameWithType: DataTableReader.GetInt32
- uid: System.Data.DataTableReader.GetInt64*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetInt64
  nameWithType: DataTableReader.GetInt64
- uid: System.Data.DataTableReader.GetName*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetName
  nameWithType: DataTableReader.GetName
- uid: System.Data.DataTableReader.GetOrdinal*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DataTableReader.GetOrdinal
- uid: System.Data.DataTableReader.GetProviderSpecificFieldType*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DataTableReader.GetProviderSpecificFieldType
- uid: System.Data.DataTableReader.GetProviderSpecificValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DataTableReader.GetProviderSpecificValue
- uid: System.Data.DataTableReader.GetProviderSpecificValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DataTableReader.GetProviderSpecificValues
- uid: System.Data.DataTableReader.GetSchemaTable*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DataTableReader.GetSchemaTable
- uid: System.Data.DataTableReader.GetString*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetString
  nameWithType: DataTableReader.GetString
- uid: System.Data.DataTableReader.GetValue*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValue
  nameWithType: DataTableReader.GetValue
- uid: System.Data.DataTableReader.GetValues*
  parent: System.Data.DataTableReader
  isExternal: false
  name: GetValues
  nameWithType: DataTableReader.GetValues
- uid: System.Data.DataTableReader.HasRows*
  parent: System.Data.DataTableReader
  isExternal: false
  name: HasRows
  nameWithType: DataTableReader.HasRows
- uid: System.Data.DataTableReader.IsClosed*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsClosed
  nameWithType: DataTableReader.IsClosed
- uid: System.Data.DataTableReader.IsDBNull*
  parent: System.Data.DataTableReader
  isExternal: false
  name: IsDBNull
  nameWithType: DataTableReader.IsDBNull
- uid: System.Data.DataTableReader.Item*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Item
  nameWithType: DataTableReader.Item
- uid: System.Data.DataTableReader.NextResult*
  parent: System.Data.DataTableReader
  isExternal: false
  name: NextResult
  nameWithType: DataTableReader.NextResult
- uid: System.Data.DataTableReader.Read*
  parent: System.Data.DataTableReader
  isExternal: false
  name: Read
  nameWithType: DataTableReader.Read
- uid: System.Data.DataTableReader.RecordsAffected*
  parent: System.Data.DataTableReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DataTableReader.RecordsAffected
