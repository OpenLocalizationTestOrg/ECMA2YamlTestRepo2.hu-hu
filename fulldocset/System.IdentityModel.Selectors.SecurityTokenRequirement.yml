### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  id: SecurityTokenRequirement
  children:
  - System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  - System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  - System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  - System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  - System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  - System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  - System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  - System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  langs:
  - csharp
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
  type: Class
  summary: "Adja meg a biztonsági jogkivonatra vonatkozó követelményeket."
  remarks: "Alkalmazás kódja általában használatához nincs szükség a SecurityTokenRequirement osztály, kivéve, ha egy egyéni biztonsági jogkivonatot manager, biztonsági jogkivonat-szolgáltató vagy a biztonsági jogkivonat-hitelesítővel jönnek létre a biztonsági token. A SecurityTokenRequirement osztály használatával egy biztonságijogkivonat-kezelő által adja meg a biztonsági jogkivonat, például a kulcs szükséges méret, kulcs típusa és hogyan használható a kulcsot. Ha egy biztonsági jogkivonatot meghatározható, hogy a megadott feltételeknek megfelelő, egy <xref:System.IdentityModel.Selectors.SecurityTokenProvider>és <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>érhető el kimenő SOAP-üzenetek biztonsági jogkivonatokat és biztonsági jogkivonatokat a bejövő SOAP-üzenetekkel, illetve hitelesítéséhez.</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Például az alapértelmezett biztonsági jogkivonat-kezelő kimenő SOAP-üzenetek rendelkezik a <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>metódus, amely egy SecurityTokenRequirement paramétert fogad, amely hívható meg a biztonsági jogkivonat-szolgáltató, amely megfelel a biztonsági jogkivonat-követelményhez megadott feltételre beszerzése.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>"
  example:
  - "<xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>  \n  \n <xref:System.IdentityModel.Selectors.SecurityTokenProvider>  \n  \n <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>  \n  \n <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>  \n  \n <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator%28System.IdentityModel.Selectors.SecurityTokenRequirement%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%40%29>  \n  \n <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider%28System.IdentityModel.Selectors.SecurityTokenRequirement%29>"
  syntax:
    content: public class SecurityTokenRequirement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: SecurityTokenRequirement()
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> osztály."
  syntax:
    content: public SecurityTokenRequirement ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  id: GetProperty``1(System.String)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: SecurityTokenRequirement.GetProperty(String)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  syntax:
    content: public TValue GetProperty<TValue> (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: TValue
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  id: IsOptionalTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi a token tulajdonság értéke, ha a nem kötelező."
  syntax:
    content: public static string IsOptionalTokenProperty { get; }
    return:
      type: System.String
      description: "A token tulajdonság értékének."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  id: KeySize
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi vagy beállítja a szükséges biztonsági jogkivonat társított kulcs."
  remarks: "A KeySize tulajdonság lekérésével is elérhető a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>tulajdonságot, amelynek tulajdonság értékek gyűjteménye.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> A KeySize tulajdonság értékének megfelelő indexnél tárolja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>"
  syntax:
    content: public int KeySize { get; set; }
    return:
      type: System.Int32
      description: "A kulcsot, a bits társított biztonsági jogkivonat mérete. Az alapértelmezett érték a 0."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A KeySize tulajdonság 0-nál kisebb értékre van beállítva."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  id: KeySizeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi egy érték, amely az indexet a nevét adja meg a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  remarks: "A szükséges kulcs mérete beállításához használja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize%2A>"
  syntax:
    content: public static string KeySizeProperty { get; }
    return:
      type: System.String
      description: "Az index nevét a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  id: KeyType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi vagy beállítja a típusa (aszimmetrikus vagy szimmetrikus) rendelt kulcsot egy biztonsági jogkivonatot."
  remarks: "A KeyType tulajdonság lekérésével is elérhető a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>tulajdonságot, amelynek tulajdonság értékek gyűjteménye.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> Az index értékének megfelelő van tárolva, a KeyType tulajdonság értéke a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyType KeyType { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyType
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyType&quot;> </xref> , amely megadja, hogy a típus (aszimmetrikus vagy szimmetrikus) rendelt kulcsot egy biztonsági jogkivonatot. Az alapértelmezett érték <xref uid=&quot;langword_csharp_SymmetricKey&quot; name=&quot;SymmetricKey&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  id: KeyTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi egy érték, amely az indexet a nevét adja meg a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  remarks: "A szükséges kulcs típusa beállításához használja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>"
  syntax:
    content: public static string KeyTypeProperty { get; }
    return:
      type: System.String
      description: "Az index nevét a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  id: KeyUsage
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi vagy beállítja egy érték, amely megadja, hogy miként legyen használható a biztonsági jogkivonat társított kulcs."
  remarks: "A KeyUsage tulajdonság lekérésével is elérhető a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>tulajdonságot, amelynek tulajdonság értékek gyűjteménye.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> A KeyUsage tulajdonság értékének megfelelő indexnél tárolja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyUsage KeyUsage { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyUsage
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyUsage&quot;> </xref> , amely megadja, hogy miként legyen használható a biztonsági jogkivonat társított kulcs. Az alapértelmezett érték <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyUsage&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  id: KeyUsageProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi egy érték, amely az indexet a nevét adja meg a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  remarks: "A kulcshasználat követelmény beállításához használja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage%2A>"
  syntax:
    content: public static string KeyUsageProperty { get; }
    return:
      type: System.String
      description: "Az index nevét a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  id: PeerAuthenticationMode
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi az indexet a nevét a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>gyűjtemény olyan tulajdonsághoz, amely megadja a társ hitelesítési módszert.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>"
  remarks: "A funkció beállítani a hitelesítési mód hozzáadásához származtatni egy osztály <xref:System.IdentityModel.Selectors.SecurityTokenRequirement>és tegye elérhetővé, tulajdonság vagy konstruktor.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement> A konstruktor vagy tulajdonság hozzáadása a társ-hitelesítési mód és a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>adatgyűjtést, a PeerAuthenticationMode tulajdonság index a gyűjteményhez.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>"
  syntax:
    content: public static string PeerAuthenticationMode { get; }
    return:
      type: System.String
      description: "Az index nevét a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>gyűjtemény olyan tulajdonsághoz, amely megadja a társ hitelesítési módszert.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*>"
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  id: Properties
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "A nem statikus tulajdonságok gyűjteményét lekérdezi az aktuális <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> példány."
  remarks: "A értékeit használja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>tulajdonságokat a indexek lekérni egy adott tulajdonság értéke a gyűjteményhez.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A> </xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty%2A> </xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty%2A> </xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty%2A>"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Egy &lt;xref:System.Collections.Generic.IDictionary%602&gt; az aktuális a nem statikus tulajdonságok gyűjteményét tartalmazza, amelyek <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;> </xref> példány."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  id: RequireCryptographicToken
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a biztonsági jogkivonat képesnek kell lennie a kriptográfiai műveleteket, például titkosítást."
  remarks: "Néhány biztonsági jogkivonatokat, mint például a <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, nem biztonságos elegendő a titkosítási műveleteket, és csak a hitelesítéshez használhatók.</xref:System.IdentityModel.Tokens.UserNameSecurityToken>       A RequireCryptographicToken tulajdonság lekérésével is elérhető a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>tulajdonságot, amelynek tulajdonság értékek gyűjteménye.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> A RequireCryptographicToken tulajdonság értékének megfelelő indexnél tárolja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty%2A>"
  syntax:
    content: public bool RequireCryptographicToken { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a biztonsági jogkivonat képesnek kell lennie a kriptográfiai műveleteket; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  id: RequireCryptographicTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi az indexet a nevét a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  syntax:
    content: public static string RequireCryptographicTokenProperty { get; }
    return:
      type: System.String
      description: "Az index nevét a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  id: TokenType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi vagy beállítja a szükséges biztonsági jogkivonat típusa."
  remarks: "A statikus tulajdonságok valamelyikét használja a <xref:System.IdentityModel.Tokens.SecurityTokenTypes>osztályra, hogy a tulajdonság értékét.</xref:System.IdentityModel.Tokens.SecurityTokenTypes>       A TokenType tulajdonság lekérésével is elérhető a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>tulajdonságot, amelynek tulajdonság értékek gyűjteménye.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> A TokenType tulajdonság értékének megfelelő indexnél tárolja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty%2A>"
  syntax:
    content: public string TokenType { get; set; }
    return:
      type: System.String
      description: "A szükséges biztonsági jogkivonat típusa."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  id: TokenTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Lekérdezi egy érték, amely az indexet a nevét adja meg a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  remarks: "A szükséges biztonsági jogkivonat típusa beállításához használja a <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>tulajdonság.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>"
  syntax:
    content: public static string TokenTypeProperty { get; }
    return:
      type: System.String
      description: "Az index nevét a <> </> *> gyűjtemény számítógépeinek a <> </> *> tulajdonság."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  id: TryGetProperty``1(System.String,``0@)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  langs:
  - csharp
  name: TryGetProperty(String,TValue)
  nameWithType: SecurityTokenRequirement.TryGetProperty(String,TValue)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(String,TValue)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  syntax:
    content: public bool TryGetProperty<TValue> (string propertyName, out TValue result);
    parameters:
    - id: propertyName
      type: System.String
      description: "Fel kell venni a párbeszédpanelre."
    - id: result
      type: TValue
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: SecurityTokenRequirement()
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement()
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.SecurityTokenRequirement()
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty``1(System.String)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: GetProperty(String)
  nameWithType: SecurityTokenRequirement.GetProperty(String)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty(String)
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType
- uid: System.IdentityModel.Tokens.SecurityKeyType
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyType
  nameWithType: SecurityKeyType
  fullName: System.IdentityModel.Tokens.SecurityKeyType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage
- uid: System.IdentityModel.Tokens.SecurityKeyUsage
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyUsage
  nameWithType: SecurityKeyUsage
  fullName: System.IdentityModel.Tokens.SecurityKeyUsage
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty``1(System.String,``0@)
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TryGetProperty(String,TValue)
  nameWithType: SecurityTokenRequirement.TryGetProperty(String,TValue)
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty(String,TValue)
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.GetProperty<TValue>*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: GetProperty<TValue>
  nameWithType: SecurityTokenRequirement.GetProperty<TValue>
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.IsOptionalTokenProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: IsOptionalTokenProperty
  nameWithType: SecurityTokenRequirement.IsOptionalTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySize*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySize
  nameWithType: SecurityTokenRequirement.KeySize
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeySizeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeySizeProperty
  nameWithType: SecurityTokenRequirement.KeySizeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyType
  nameWithType: SecurityTokenRequirement.KeyType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyTypeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyTypeProperty
  nameWithType: SecurityTokenRequirement.KeyTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsage*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsage
  nameWithType: SecurityTokenRequirement.KeyUsage
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.KeyUsageProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: KeyUsageProperty
  nameWithType: SecurityTokenRequirement.KeyUsageProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.PeerAuthenticationMode*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: PeerAuthenticationMode
  nameWithType: SecurityTokenRequirement.PeerAuthenticationMode
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.Properties*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: Properties
  nameWithType: SecurityTokenRequirement.Properties
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicToken
  nameWithType: SecurityTokenRequirement.RequireCryptographicToken
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicTokenProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: RequireCryptographicTokenProperty
  nameWithType: SecurityTokenRequirement.RequireCryptographicTokenProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenType
  nameWithType: SecurityTokenRequirement.TokenType
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TokenTypeProperty*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TokenTypeProperty
  nameWithType: SecurityTokenRequirement.TokenTypeProperty
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement.TryGetProperty<TValue>*
  parent: System.IdentityModel.Selectors.SecurityTokenRequirement
  isExternal: false
  name: TryGetProperty<TValue>
  nameWithType: SecurityTokenRequirement.TryGetProperty<TValue>
