### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLog
  id: EventLog
  children:
  - System.Diagnostics.EventLog.#ctor
  - System.Diagnostics.EventLog.#ctor(System.String)
  - System.Diagnostics.EventLog.#ctor(System.String,System.String)
  - System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.EventLog.BeginInit
  - System.Diagnostics.EventLog.Clear
  - System.Diagnostics.EventLog.Close
  - System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)
  - System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)
  - System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)
  - System.Diagnostics.EventLog.Delete(System.String)
  - System.Diagnostics.EventLog.Delete(System.String,System.String)
  - System.Diagnostics.EventLog.DeleteEventSource(System.String)
  - System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)
  - System.Diagnostics.EventLog.Dispose(System.Boolean)
  - System.Diagnostics.EventLog.EnableRaisingEvents
  - System.Diagnostics.EventLog.EndInit
  - System.Diagnostics.EventLog.Entries
  - System.Diagnostics.EventLog.EntryWritten
  - System.Diagnostics.EventLog.Exists(System.String)
  - System.Diagnostics.EventLog.Exists(System.String,System.String)
  - System.Diagnostics.EventLog.GetEventLogs
  - System.Diagnostics.EventLog.GetEventLogs(System.String)
  - System.Diagnostics.EventLog.Log
  - System.Diagnostics.EventLog.LogDisplayName
  - System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)
  - System.Diagnostics.EventLog.MachineName
  - System.Diagnostics.EventLog.MaximumKilobytes
  - System.Diagnostics.EventLog.MinimumRetentionDays
  - System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)
  - System.Diagnostics.EventLog.OverflowAction
  - System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)
  - System.Diagnostics.EventLog.Source
  - System.Diagnostics.EventLog.SourceExists(System.String)
  - System.Diagnostics.EventLog.SourceExists(System.String,System.String)
  - System.Diagnostics.EventLog.SynchronizingObject
  - System.Diagnostics.EventLog.WriteEntry(System.String)
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.String)
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  - System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])
  - System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])
  - System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])
  - System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])
  - System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])
  langs:
  - csharp
  name: EventLog
  nameWithType: EventLog
  fullName: System.Diagnostics.EventLog
  type: Class
  summary: "Kommunikációt tesz lehetővé a Windows eseménynaplóiban keresse meg."
  remarks: "Az eseménynaplóban lehetővé teszi eléréséhez, vagy testre szabhatja a Windows eseménynaplóiban keresse meg, amely fontos szoftveres vagy hardveres események kapcsolatos információkat rögzíti. Használja az eseménynaplóban, akkor is létező napló olvasásának, bejegyzést írni a naplók, létrehozása vagy törlése eseményforrások, naplók törlése és válaszolni a naplóbejegyzéseket. Az új naplók az eseményforrás létrehozásakor is létrehozhat.      > [!IMPORTANT] > Ez a típus megvalósítja az <xref:System.IDisposable>felületet.</xref:System.IDisposable> Ha befejezte a típussal, ezért fel kell azt közvetlenül vagy közvetve. Arra, hogy a típus közvetlenül, hívja az <xref:System.IDisposable.Dispose%2A>metódust egy `try` / `catch` blokk.</xref:System.IDisposable.Dispose%2A> Eltávolítása után közvetve, használjon egy nyelvi szerkezet például `using` (a C#) vagy `Using` (a Visual Basic nyelvben). A &quot;Használatával az objektum, amely megvalósítja IDisposable&quot; szakaszában talál további információt a <xref:System.IDisposable>felületet a témakörben.</xref:System.IDisposable>       Mellett egyéni eseménynaplóit és a bejegyzéseket hozzáférést biztosító, az EventLog osztály lehetővé teszi az összes Eseménynapló gyűjteménye érhető el. Használhatja a `static` naplókat, törli az eseménynaplóban tagjai napló listák első, hozzon létre egy forrás törlése vagy határozza meg, ha a számítógép már tartalmaz egy adott forrásból.       Nincsenek a három alapértelmezett eseménynaplókat: alkalmazás, a rendszer és a biztonság. A biztonsági napló csak olvasható. Egyéb alkalmazások és szolgáltatások telepítése, például az Active Directory további eseménynaplók rendelkezhet.       Nincsenek biztonsági szempontok az EventLog osztály használatával. Az eseménynaplóban szükséges <xref:System.Diagnostics.EventLogPermission>engedélyek konkrét műveletek a .NET-keretrendszer 2.0 és újabb verziók, vagy a .NET-keretrendszer 1.0 és 1.1 a teljesen megbízható.</xref:System.Diagnostics.EventLogPermission> Azt javasoljuk, hogy <xref:System.Diagnostics.EventLogPermission>részlegesen megbízható kód nem engedélyezhető.</xref:System.Diagnostics.EventLogPermission>  Soha ne át kell bármilyen Eseménynapló objektum, beleértve a <xref:System.Diagnostics.EventLogEntryCollection>és <xref:System.Diagnostics.EventLogEntry>objektumok, kevésbé megbízható kód.</xref:System.Diagnostics.EventLogEntry> </xref:System.Diagnostics.EventLogEntryCollection> Például egy eseménynapló-objektum létrehozása, bejegyzésének írása, és majd átadja az EventLog részlegesen megbízható kód objektum hozhatnak létre egy biztonsági probléma, mert olvasása és írása az eseménynaplóba teszi lehetővé teszi, hogy műveleteket, például egy másik alkalmazás nevében Eseménynapló-üzenetek kiadása.       Felhasználói fiókok felügyelete (UAC) kezdve a Windows Vista, határozza meg a felhasználó hitelesítő adatait. Ha a beépített Rendszergazdák csoport tagja, két futásidejű jogkivonatot kapott: egy általános jogú felhasználói jogkivonat és egy rendszergazdai hozzáférési jogkivonatot. Alapértelmezés szerint áll az általános jogú felhasználói szerepkörben. A biztonsági napló hozzáférő kódot futtatásához meg kell először emelheti a hitelesítő adatok az általános jogú felhasználói rendszergazda. Ehhez nyissa meg a helyi menü az alkalmazás az alkalmazás indításakor (ha egeret használ, kattintson a jobb gombbal az alkalmazás ikonja) és az azt jelzi, hogy rendszergazdaként futtatja.       Az eseménynaplóban hozhat létre egyéni eseménynaplókat, hogy a kiszolgáló eseménynaplójában keresztül tekintheti meg. Használja a <xref:System.Diagnostics.EventLog.RegisterDisplayName%2A>metódust az Eseménynapló honosított nevét az eseménynaplóban.</xref:System.Diagnostics.EventLog.RegisterDisplayName%2A> Használja a <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>metódus konfigurálásához az Eseménynapló viselkedését, amikor eléri a maximális méret.</xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>       Az Eseménynapló olvasni, adja meg a napló nevét (<xref:System.Diagnostics.EventLog.Log%2A> tulajdonság) és a számítógép neve (<xref:System.Diagnostics.EventLog.MachineName%2A> az eseménynaplóba. a tulajdonság</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> Ha nem adja meg a számítógép neve, a helyi számítógépen &quot;.&quot;, feltételezi. Nincs szükség a forrás megadása (<xref:System.Diagnostics.EventLog.Source%2A> tulajdonság), mert a forrás csak szükséges naplókat írásakor.</xref:System.Diagnostics.EventLog.Source%2A> A <xref:System.Diagnostics.EventLog.Entries%2A>tulajdonság automatikusan töltődik bejegyzés az eseménynaplóba listája.</xref:System.Diagnostics.EventLog.Entries%2A>       Írás az eseménynaplóba, adja meg, vagy hozzon létre egy eseményforrás (<xref:System.Diagnostics.EventLog.Source%2A> tulajdonság).</xref:System.Diagnostics.EventLog.Source%2A> Rendszergazdai hitelesítő adatokkal kell rendelkeznie a számítógépen egy új eseményforrás létrehozása. Az eseményforrás bejegyzések érvényes forrásként az alkalmazás regisztrálja az eseménynaplóban talál. A következő eseményforrás segítségével egyszerre csak egy naplóba bejegyezni. A <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság véletlenszerű karakterlánc lehet, de a nevének kell lennie azon a számítógépen más forrásokból különálló.</xref:System.Diagnostics.EventLog.Source%2A> A forrás esetén általában az alkalmazás vagy egy másik azonosító karakterláncot. Duplikált létrehozására tett kísérlet <xref:System.Diagnostics.EventLog.Source%2A>érték kivételt jelez.</xref:System.Diagnostics.EventLog.Source%2A> Azonban egyetlen eseménynaplóra társítható több forrásból.       Ha az Eseménynapló az Eseménynapló-példányhoz társított a következő eseményforrás nem létezik, egy új eseményforrás jön létre. Hozzon létre az eseményforrás a Windows Vista és újabb vagy Windows Server 2003, a rendszergazdai hitelesítő adatokkal kell rendelkeznie.       Ez a követelmény nem, mert annak megállapításához, hogy a forrás egyedi biztonsági naplókat, beleértve az összes Eseménynapló kell keresni. Kezdve a Windows Vista, felhasználók nem rendelkeznek hozzáféréssel a biztonsági napló; ezért egy <xref:System.Security.SecurityException>vált ki.</xref:System.Security.SecurityException>      > [!IMPORTANT] > Létrehozása vagy egy eseményforrás törlése az alapul szolgáló kód szinkronizálást igényel egy elnevezett mutex használatával. Ha egy magas szintű jogosultsággal rendelkező alkalmazás zárolja az elnevezett mutex, létrehozása vagy egy eseményforrás törlése közben hatására az alkalmazás nem válaszol, amíg a zárolás. Ez a probléma megelőzése érdekében soha ne adjon <xref:System.Security.Permissions.SecurityPermissionFlag>nem megbízható kód engedéllyel.</xref:System.Security.Permissions.SecurityPermissionFlag> Ezenkívül <xref:System.Security.Permissions.SecurityPermissionFlag>engedély potenciálisan lehetővé teszi, hogy más engedélyek megadásának kihagyását, és csak kell biztosítani a nagyon megbízható kód.</xref:System.Security.Permissions.SecurityPermissionFlag>       Alkalmazásokhoz és szolgáltatásokhoz az alkalmazásnaplóba vagy egy egyéni naplót kell írni. Eszközillesztők kell írni a rendszernaplóba. Ha nincs explicit módon beállítva a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság, az Eseménynapló alapértelmezés szerint a alkalmazásnaplója tartalmazza.</xref:System.Diagnostics.EventLog.Log%2A>      > [!NOTE] > Semmilyen védelme érdekében az alkalmazás írásában, mint bármely regisztrált forrás.  Ha egy alkalmazás kap <xref:System.Diagnostics.EventLogPermissionAccess>engedéllyel, akkor minden érvényes forrás a számítógépen regisztrált eseményeit írhat.</xref:System.Diagnostics.EventLogPermissionAccess>       A <xref:System.Diagnostics.EventLog.WriteEvent%2A>és <xref:System.Diagnostics.EventLog.WriteEntry%2A>módszerek beírni az eseményeket az eseménynaplóba.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.WriteEvent%2A> Meg kell adnia egy eseményforrás beírni az eseményeket; Hozzon létre és az eseményforrás a forrással első bejegyzés írása előtt konfigurálnia kell.       Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissíti az esemény olyan adatforrások listáját, és az új forrás, a esemény írásakor, az írási művelet sikertelen lesz. Új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>objektum vagy a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Rendszergazdai hitelesítő adatokkal kell rendelkeznie a számítógépen egy új eseményforrás létrehozása.       Minden forrás csak egy eseménynapló írhat egyszerre; azonban az alkalmazás segítségével több forrásból több eseménynaplók írni. Az alkalmazás például szükség lehet a különböző eseménynaplók vagy a különböző erőforrás-fájlok több forrásból. Módosítsa a konfigurációs adatait egy meglévő forrás-, törölje az adatforrást, és akkor hozza létre az új konfigurációval. Egyéb alkalmazások és összetevők a meglévő forrást használja, ha a frissített konfigurációval, a meglévő forrás törlése helyett hozzon létre egy új forrásból.       Az esemény kategória és üzenet karakterláncok regisztrálhatja az eseményforrás honosított erőforrásokkal. Az alkalmazás helyett a tényleges karakterlánc-érték megadásával az erőforrás-azonosítók használatával írhat Eseménynapló-bejegyzései. Tekintse meg a <xref:System.Diagnostics.EventLogInstaller>és <xref:System.Diagnostics.EventSourceCreationData>osztályok az erőforrás-fájlokat a forrás konfigurálásával kapcsolatos további információkat a.</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller>       Ha az alkalmazás karakterlánc-értékek közvetlenül ír az eseménynaplóba, nincs az erőforrás-a forrás fájl tulajdonságainak beállítása. A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>       Történő írásakor, az események legalább adjon meg egy üzenet karakterlánc vagy az erőforrás-azonosító, egy üzenet karakterláncot kell megadnia. Más esemény tulajdonságainak megadása nem kötelező. Választható beállítások közé tartoznak a következők:-állíthatja be a <xref:System.Diagnostics.EventLogEntryType>megadhatja, hogy az Eseménynapló használatával jeleníti meg a következő bejegyzés ikont.</xref:System.Diagnostics.EventLogEntryType>      -Megadhat egy kategóriaazonosító az esemény, ha az alkalmazás kategóriák az események szűréséhez.      -Csatolhat a bináris adatok esemény gépelte Ha azt szeretné, hogy rendelje hozzá a további információk az adott esemény.      > [!IMPORTANT] > Eseménynaplózás lemezterület, processzoridő és más rendszererőforrásokat felhasználva. Fontos, csak alapvető információk naplózásához. Azt javasoljuk, hogy Eseménynapló hívások helyez hiba elérési útjának ahelyett, hogy a fő elérési úton, így azok nem hátrányosan hatása a teljesítményre.       Az Eseménynapló-példányok esetében a kezdeti tulajdonság értékek listája, tekintse meg a <xref:System.Diagnostics.EventLog.%23ctor%2A>konstruktor.</xref:System.Diagnostics.EventLog.%23ctor%2A>"
  example:
  - "The following example creates the event source `MySource` if it doesn't already exist, and writes an entry to the event log `MyNewLog`.  \n  \n> [!NOTE]\n>  Starting with Windows Vista, you must run this application as an administrator.  \n  \n [!code-cs[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_0_1.cs)]\n [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_0_1.cpp)]\n [!code-vb[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("EntryWritten")]

      [System.ComponentModel.InstallerType("System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Diagnostics.MonitoringDescription("EventLogDesc")]

      public class EventLog : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.EventLog.#ctor
  id: '#ctor'
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: EventLog()
  nameWithType: EventLog.EventLog()
  fullName: System.Diagnostics.EventLog.EventLog()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> osztály. A napló nem rendel a példányt."
  remarks: "Hívása előtt <xref:System.Diagnostics.EventLog.WriteEntry%2A>, adja meg a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonsága a <xref:System.Diagnostics.EventLog>példány.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> Ha csak olvas <xref:System.Diagnostics.EventLog.Entries%2A>a naplóból megadhatja csak a <xref:System.Diagnostics.EventLog.Log%2A>és <xref:System.Diagnostics.EventLog.MachineName%2A>Tulajdonságok.</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.Entries%2A>      > [!NOTE] > Ha nincs megadva egy <xref:System.Diagnostics.EventLog.MachineName%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.MachineName%2A>       Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Diagnostics.EventLog>.</xref:System.Diagnostics.EventLog> példánya      | Tulajdonság |} A kezdeti érték |}   |--------------|-------------------|   | <xref:System.Diagnostics.EventLog.Source%2A>| Üres karakterlánc (&quot;&quot;). |} |} <xref:System.Diagnostics.EventLog.Log%2A>| Üres karakterlánc (&quot;&quot;). |} |} <xref:System.Diagnostics.EventLog.MachineName%2A>| A helyi számítógépen (&quot;.&quot;). |}</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.Source%2A>"
  example:
  - "The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.  \n  \n [!code-cs[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_9_1.cs)]\n [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_9_1.cpp)]\n [!code-vb[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_9_1.vb)]"
  syntax:
    content: public EventLog ();
    parameters: []
  overload: System.Diagnostics.EventLog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: EventLog(String)
  nameWithType: EventLog.EventLog(String)
  fullName: System.Diagnostics.EventLog.EventLog(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> osztály. A példány társítja a helyi számítógépen a napló."
  remarks: "Ez a túlterhelés beállítja a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonságot a `logName` paraméter.</xref:System.Diagnostics.EventLog.Log%2A> Hívása előtt <xref:System.Diagnostics.EventLog.WriteEntry%2A>, adja meg a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonsága a <xref:System.Diagnostics.EventLog>példány.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> Ha csak olvas <xref:System.Diagnostics.EventLog.Entries%2A>a naplóból megadhatja csak a <xref:System.Diagnostics.EventLog.Log%2A>és <xref:System.Diagnostics.EventLog.MachineName%2A>Tulajdonságok.</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.Entries%2A>      > [!NOTE] > Ha nincs megadva egy <xref:System.Diagnostics.EventLog.MachineName%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.MachineName%2A> Ez a konstruktor túlterhelés határozza meg a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonságot, de ez módosítható olvasás előtt a <xref:System.Diagnostics.EventLog.Entries%2A>tulajdonság.</xref:System.Diagnostics.EventLog.Entries%2A> </xref:System.Diagnostics.EventLog.Log%2A>       Ha a forrás ad meg a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság értéke egyedi a számítógépen, a későbbi hívása más forrásokból <xref:System.Diagnostics.EventLog.WriteEntry%2A>létrehoz egy naplófájlt a megadott névvel, ha még nem létezik.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.Source%2A>       Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Diagnostics.EventLog>.</xref:System.Diagnostics.EventLog> példánya      | Tulajdonság |} A kezdeti érték |}   |--------------|-------------------|   | <xref:System.Diagnostics.EventLog.Source%2A>| Üres karakterlánc (&quot;&quot;). |} |} <xref:System.Diagnostics.EventLog.Log%2A>| A `logName` paraméter. |}   | <xref:System.Diagnostics.EventLog.MachineName%2A>| A helyi számítógépen (&quot;.&quot;). |}</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.Source%2A>"
  example:
  - "The following example reads entries in the event log, \"myNewLog\", on the local computer.  \n  \n [!code-cpp[Classic EventLog.EventLog1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_13_1.cpp)]\n [!code-cs[Classic EventLog.EventLog1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_13_1.cs)]\n [!code-vb[Classic EventLog.EventLog1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_13_1.vb)]"
  syntax:
    content: public EventLog (string logName);
    parameters:
    - id: logName
      type: System.String
      description: "A helyi számítógépen a napló nevét."
  overload: System.Diagnostics.EventLog.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A naplófájl neve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A naplófájl neve érvénytelen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: EventLog(String,String)
  nameWithType: EventLog.EventLog(String,String)
  fullName: System.Diagnostics.EventLog.EventLog(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> osztály. A példány társítja a napló a megadott számítógépen."
  remarks: "Ez a túlterhelés beállítja a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonságot a `logName` paraméter és a <xref:System.Diagnostics.EventLog.MachineName%2A>tulajdonságot a `machineName` paraméter.</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> <xref:System.Diagnostics.EventLog.WriteEntry%2A>Adja meg a <xref:System.Diagnostics.EventLog.Source%2A> <xref:System.Diagnostics.EventLog>.</xref:System.Diagnostics.EventLog> tulajdonság</xref:System.Diagnostics.EventLog.Source%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> hívása előtt Ha csak olvas <xref:System.Diagnostics.EventLog.Entries%2A>a naplóból megadhatja csak a <xref:System.Diagnostics.EventLog.Log%2A>és <xref:System.Diagnostics.EventLog.MachineName%2A>Tulajdonságok.</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.Entries%2A>      > [!NOTE] > Ez a konstruktor túlterhelés határozza meg a <xref:System.Diagnostics.EventLog.Log%2A>és <xref:System.Diagnostics.EventLog.MachineName%2A>Tulajdonságok, azonban módosítható olvasása előtt vagy a <xref:System.Diagnostics.EventLog.Entries%2A>tulajdonság.</xref:System.Diagnostics.EventLog.Entries%2A> </xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A>       Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Diagnostics.EventLog>.</xref:System.Diagnostics.EventLog> példánya      | Tulajdonság |} A kezdeti érték |}   |--------------|-------------------|   | <xref:System.Diagnostics.EventLog.Source%2A>| Üres karakterlánc (&quot;&quot;). |} |} <xref:System.Diagnostics.EventLog.Log%2A>| A `logName` paraméter. |}   | <xref:System.Diagnostics.EventLog.MachineName%2A>| A `machineName` paraméter. |}</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.Source%2A>"
  example:
  - "The following example reads entries in the event log, \"myNewLog\", on the computer \"myServer\".  \n  \n [!code-cs[Classic EventLog.EventLog2 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_0_1.cs)]\n [!code-cpp[Classic EventLog.EventLog2 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_0_1.cpp)]\n [!code-vb[Classic EventLog.EventLog2 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_0_1.vb)]"
  syntax:
    content: public EventLog (string logName, string machineName);
    parameters:
    - id: logName
      type: System.String
      description: "A megadott számítógépen a napló nevét."
    - id: machineName
      type: System.String
      description: "A számítógép, amelyen a naplóban található."
  overload: System.Diagnostics.EventLog.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A naplófájl neve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A naplófájl neve érvénytelen.       – vagy – a számítógép neve érvénytelen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: EventLog(String,String,String)
  nameWithType: EventLog.EventLog(String,String,String)
  fullName: System.Diagnostics.EventLog.EventLog(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> osztály. A példány társítja a megadott számítógépen a napló és hoz létre vagy rendeli hozzá a megadott forrást a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref>."
  remarks: "Ez a konstruktor beállítja a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonságot a `logName` paraméter, a <xref:System.Diagnostics.EventLog.MachineName%2A>tulajdonságot a `machineName` paramétert, és a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonságot a `source` paraméter.</xref:System.Diagnostics.EventLog.Source%2A> </xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> A <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság megadása kötelező, ha a írása egy eseménynaplóba.</xref:System.Diagnostics.EventLog.Source%2A> Azonban ha csak egy eseménynaplóból, csak olvasási a <xref:System.Diagnostics.EventLog.Log%2A>és <xref:System.Diagnostics.EventLog.MachineName%2A>Tulajdonságok szükségesek (feltéve, a kiszolgálón az Eseménynaplóban van egy már társítva).</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> Ha csak az eseménynaplóban a olvasását, a előfordulhat, hogy elegendő konstruktorának másik túlterhelését.       Az alábbi táblázat a kezdeti tulajdonságértékek <xref:System.Diagnostics.EventLog>.</xref:System.Diagnostics.EventLog> példánya      | Tulajdonság |} A kezdeti érték |}   |--------------|-------------------|   | <xref:System.Diagnostics.EventLog.Source%2A>| A `source` paraméter. |}   | <xref:System.Diagnostics.EventLog.Log%2A>| A `logName` paraméter. |}   | <xref:System.Diagnostics.EventLog.MachineName%2A>| A `machineName` paraméter. |}</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.Source%2A>"
  example:
  - "The following example writes an entry to an event log, \"MyNewLog\", on the local computer, using the source \"MySource\".  \n  \n [!code-cs[Classic EventLog.EventLog3 Example#1](~/add/codesnippet/csharp/fd99d44e-2d79-45f8-97e3-_1.cs)]\n [!code-cpp[Classic EventLog.EventLog3 Example#1](~/add/codesnippet/cpp/fd99d44e-2d79-45f8-97e3-_1.cpp)]\n [!code-vb[Classic EventLog.EventLog3 Example#1](~/add/codesnippet/visualbasic/fd99d44e-2d79-45f8-97e3-_1.vb)]"
  syntax:
    content: public EventLog (string logName, string machineName, string source);
    parameters:
    - id: logName
      type: System.String
      description: "A megadott számítógépen a napló neve"
    - id: machineName
      type: System.String
      description: "A számítógép, amelyen a naplóban található."
    - id: source
      type: System.String
      description: "Eseménynapló-bejegyzések forrását."
  overload: System.Diagnostics.EventLog.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A naplófájl neve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A naplófájl neve érvénytelen.       – vagy – a számítógép neve érvénytelen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.BeginInit
  id: BeginInit
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: BeginInit()
  nameWithType: EventLog.BeginInit()
  fullName: System.Diagnostics.EventLog.BeginInit()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Megkezdődik a inicializálása egy <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> egy űrlapon használt, vagy egy másik összetevő használja. Az inicializálás futásidőben következik be."
  remarks: "A [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] tervezési környezetben használt egyik beépülő az űrlap vagy egy másik összetevő inicializálása elindítani ezt a módszert használja. A <xref:System.Diagnostics.EventLog.EndInit%2A>metódus befejezi az inicializálási.</xref:System.Diagnostics.EventLog.EndInit%2A> A BeginInit metódus használatával és <xref:System.Diagnostics.EventLog.EndInit%2A>módszerek vezérlő letiltása teljes inicializálása előtt használt.</xref:System.Diagnostics.EventLog.EndInit%2A>"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Diagnostics.EventLog.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Diagnostics.EventLog&quot;></xref>már inicializálva van."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Clear
  id: Clear
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Clear()
  nameWithType: EventLog.Clear()
  fullName: System.Diagnostics.EventLog.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Összes bejegyzés eltávolítása az eseménynaplóban talál."
  remarks: "Eseménynaplók tartalmazhatnak, hogy hány bejegyzés meghatározó maximális mérettel vannak beállítva. Amikor egy eseménynapló megtelik, az nem rögzíti az új események adatait, vagy felülírja a korábbi bejegyzések kezdődik. Esemény a Rögzítés leállítása, ha ez a módszer segítségével a napló meglévő bejegyzések törlése, és engedélyezze újból elindítani a rögzítés események. A számítógép, amelyen a naplóban találhatók eseménynapló-bejegyzések törlése rendszergazdai engedélyekkel kell rendelkeznie.       Törölje bezárja az eseménynaplóban talál, esemény leírók kiadott új lekéri írási és olvasási kezeli, és megnyitja az eseménynaplóban talál. A metódus hívása után fogadott események nem törlődnek a meglévő események együtt."
  example:
  - "The following example clears an event log.  \n  \n> [!CAUTION]\n>  Because Application, System, Security, and other non-custom logs can contain crucial information; be sure to specify a custom log before executing this example code. This example deletes the custom log `myNewLog`.  \n  \n [!code-cs[Classic EventLog.Clear Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_11_1.cs)]\n [!code-vb[Classic EventLog.Clear Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_11_1.vb)]\n [!code-cpp[Classic EventLog.Clear Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_11_1.cpp)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Diagnostics.EventLog.Clear*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült törölni az eseménynaplóban talál.       – vagy – a naplófájl nem nyitható meg. A Windows-hibakód nem érhető el."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egy érték nincs megadva a <xref:System.Diagnostics.EventLog.Log*>tulajdonság.</xref:System.Diagnostics.EventLog.Log*> Győződjön meg arról, hogy a napló nevét nem üres karakterlánc."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A napló nem létezik."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Close
  id: Close
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Close()
  nameWithType: EventLog.Close()
  fullName: System.Diagnostics.EventLog.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az Eseménynapló és a kiadások bezárása írási és olvasási kezeli."
  remarks: "Neve a Close metódus által a védett <xref:System.ComponentModel.Component.Dispose%2A>metódus.</xref:System.ComponentModel.Component.Dispose%2A> Nem lehet meghívni a Close <xref:System.ComponentModel.Component.Dispose%2A>.</xref:System.ComponentModel.Component.Dispose%2A> hívása előtt kell"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Diagnostics.EventLog.Close*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az eseménynaplóban olvasható leíró vagy írási leíró nem jelent meg sikeresen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)
  id: CreateEventSource(System.Diagnostics.EventSourceCreationData)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: CreateEventSource(EventSourceCreationData)
  nameWithType: EventLog.CreateEventSource(EventSourceCreationData)
  fullName: System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy érvényes eseményforrás a következőhöz honosított eseménynek létesít üzenetek, a megadott konfigurációs tulajdonságok használatát a forrás- és az ehhez kapcsolódó eseménynaplót készít a."
  remarks: "Use this overload to configure a new source for writing entries to an event log on the local computer or a remote computer. It is not necessary to use this method to read from an event log.  \n  \n The CreateEventSource method uses the input `sourceData`<xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log. A new source name cannot match an existing source name or an existing event log name on the target computer. If the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property is not set, the source is registered for the Application event log. If the <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> is not set, the source is registered on the local computer.  \n  \n> [!NOTE]\n>  To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.  \n>   \n>  The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.  \n>   \n>  Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  \n  \n Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  \n  \n Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method. You must have administrative rights on the computer to create a new event source.  \n  \n You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  \n  \n The operating system stores event logs as files. When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the \".evt\" file name extension.  \n  \n Each source can only write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files.  \n  \n You can register the event source with localized resource file(s) for your event category and message strings. Your application can write event log entries using resource identifiers, rather than specifying the actual string. The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings. You can register a separate file for event categories, messages and parameter insertion strings, or you can register the same resource file for all three types of strings. Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log. If your application writes strings values directly to the event log, you do not need to set these properties.  \n  \n The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.  \n  \n To change the configuration details of an existing source, you must delete the source and then create it with the new configuration. If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.  \n  \n> [!NOTE]\n>  If a source is configured for an event log, and you reconfigure it for another event log, you must restart the computer for the changes to take effect."
  example:
  - "The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer. If the event source does not exist, the example sets the message resource file for the source and creates the new event source. Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.  \n  \n [!code-cpp[EventLog_WriteEvent#6](~/add/codesnippet/cpp/4fd418fb-73e7-42a9-9ba2-_1.cpp)]\n [!code-vb[EventLog_WriteEvent#6](~/add/codesnippet/visualbasic/4fd418fb-73e7-42a9-9ba2-_1.vb)]\n [!code-cs[EventLog_WriteEvent#6](~/add/codesnippet/csharp/4fd418fb-73e7-42a9-9ba2-_1.cs)]  \n  \n The example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings. Specifically, resource identifier 5001 is defined for the localized name of the event log.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public static void CreateEventSource (System.Diagnostics.EventSourceCreationData sourceData);
    parameters:
    - id: sourceData
      type: System.Diagnostics.EventSourceCreationData
      description: "A konfigurációs tulajdonságok a forrás és a cél eseménynaplójába."
  overload: System.Diagnostics.EventLog.CreateEventSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The computer name specified in <code>sourceData</code> is not valid.  \n  \n \\- or -  \n  \n The source name specified in <code>sourceData</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The log name specified in <code>sourceData</code> is not valid. Event log names must consist of printable characters and cannot include the characters '*', '?', or '\\\\'.  \n  \n \\- or -  \n  \n The log name specified in <code>sourceData</code> is not valid for user log creation. The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  \n  \n \\- or -  \n  \n The log name matches an existing event source name.  \n  \n \\- or -  \n  \n The source name specified in <code>sourceData</code> results in a registry key path longer than 254 characters.  \n  \n \\- or -  \n  \n The first 8 characters of the log name specified in <code>sourceData</code> are not unique.  \n  \n \\- or -  \n  \n The source name specified in <code>sourceData</code> is already registered.  \n  \n \\- or -  \n  \n The source name specified in <code>sourceData</code> matches an existing event log name."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)
  id: CreateEventSource(System.String,System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: CreateEventSource(String,String)
  nameWithType: EventLog.CreateEventSource(String,String)
  fullName: System.Diagnostics.EventLog.CreateEventSource(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott adatforrás neve létesít bejegyzéseket a helyi számítógépen a napló írása egy érvényes esemény forrásaként. Ez a módszer a helyi számítógépen is létrehozhat egy új egyéni naplót."
  remarks: "Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the local computer.  \n  \n If `logName` is `null` or an empty string (\"\") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log. If the log does not exist on the local computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.  \n  \n> [!NOTE]\n>  To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.  \n>   \n>  The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. Starting with Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.  \n>   \n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  \n  \n You only need to create an event source if you are writing to the event log. Before writing an entry to an event log, you must register the event source with the event log as a valid source of events. When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry. If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.  \n  \n> [!NOTE]\n>  You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log on the local computer. If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A> when reading from a log, the local computer (\".\") is assumed.  \n  \n Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  \n  \n Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method. You must have administrative rights on the computer to create a new event source.  \n  \n You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  \n  \n The operating system stores event logs as files. When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the \".evt\" file name extension.  \n  \n The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name. Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files.  \n  \n The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.  \n  \n To change the configuration details of an existing source, you must delete the source and then create it with the new configuration. If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.  \n  \n> [!NOTE]\n>  If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect."
  example:
  - "The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.  \n  \n [!code-cs[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_15_1.cs)]\n [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_15_1.cpp)]\n [!code-vb[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_15_1.vb)]"
  syntax:
    content: public static void CreateEventSource (string source, string logName);
    parameters:
    - id: source
      type: System.String
      description: "A forrás nevét, amellyel az alkalmazás regisztrálva lesz a helyi számítógépen."
    - id: logName
      type: System.String
      description: "A napló nevét az adatforrás-bejegyzések kerülnek. Lehetséges értékek a következők: alkalmazás, a rendszer vagy egy egyéni eseménynaplóba."
  overload: System.Diagnostics.EventLog.CreateEventSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code> is an empty string (\"\") or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>logName</code> is not a valid event log name. Event log names must consist of printable characters, and cannot include the characters '*', '?', or '\\\\'.  \n  \n \\- or -  \n  \n <code>logName</code> is not valid for user log creation. The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  \n  \n \\- or -  \n  \n The log name matches an existing event source name.  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters.  \n  \n \\- or -  \n  \n The first 8 characters of <code>logName</code> match the first 8 characters of an existing event log name.  \n  \n \\- or -  \n  \n The source cannot be registered because it already exists on the local computer.  \n  \n \\- or -  \n  \n The source name matches an existing event log name."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg a helyi számítógépen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)
  id: CreateEventSource(System.String,System.String,System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: CreateEventSource(String,String,String)
  nameWithType: EventLog.CreateEventSource(String,String,String)
  fullName: System.Diagnostics.EventLog.CreateEventSource(String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott adatforrás neve létrehozza a bejegyzéseket a megadott számítógépen a napló írása egy érvényes esemény forrásaként. Ez a módszer új egyéni napló létrehozása a megadott számítógépen is használható."
  remarks: "Use this overload to create a custom log or to create and register a <xref:System.Diagnostics.EventLog.Source%2A> to an existing log on the specified computer.  \n  \n If `logName` is `null` or an empty string (\"\") when you call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, the log defaults to the Application log. If the log does not exist on the specified computer, the system creates a custom log and registers your application as a <xref:System.Diagnostics.EventLog.Source%2A> for that log.  \n  \n You only need to create an event source if you are writing to the event log. Before writing an entry to an event log, you must register the event source with the event log as a valid source of events. When you write a log entry, the system uses the <xref:System.Diagnostics.EventLog.Source%2A> to find the appropriate log in which to place your entry. If you are reading the event log, you can either specify the <xref:System.Diagnostics.EventLog.Source%2A>, or a <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.MachineName%2A>.  \n  \n> [!NOTE]\n>  To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.  \n>   \n>  The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. In Windows Vista and later, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.  \n>   \n>  In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  \n  \n Use <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  \n  \n Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method. You must have administrative rights on the computer to create a new event source.  \n  \n You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  \n  \n The operating system stores event logs as files. When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLog.Log%2A> property with the \".evt\" file name extension.  \n  \n The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name. Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files.  \n  \n The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.  \n  \n To change the configuration details of an existing source, you must delete the source and then create it with the new configuration. If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.  \n  \n> [!NOTE]\n>  If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect."
  example:
  - "The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.  \n  \n [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/add/codesnippet/cpp/86732307-05e6-4c1a-b98e-_1.cpp)]\n [!code-cs[Classic EventLog.SourceExists1 Example#1](~/add/codesnippet/csharp/86732307-05e6-4c1a-b98e-_1.cs)]\n [!code-vb[Classic EventLog.SourceExists1 Example#1](~/add/codesnippet/visualbasic/86732307-05e6-4c1a-b98e-_1.vb)]"
  syntax:
    content: public static void CreateEventSource (string source, string logName, string machineName);
    parameters:
    - id: source
      type: System.String
      description: "A forrás, amellyel az alkalmazás regisztrálva lesz a megadott számítógépen."
    - id: logName
      type: System.String
      description: "A napló nevét az adatforrás-bejegyzések kerülnek. Lehetséges értékek a következők: alkalmazás, a rendszer vagy egy egyéni eseménynaplóba. Ha nem ad meg értéket, `logName` alkalmazás alapértelmezés szerint."
    - id: machineName
      type: System.String
      description: "Regisztrálja a forrás, a számítógép nevét vagy a &quot;.&quot; a helyi számítógépen."
  overload: System.Diagnostics.EventLog.CreateEventSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>machineName</code> is not a valid computer name.  \n  \n \\- or -  \n  \n <code>source</code> is an empty string (\"\") or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>logName</code> is not a valid event log name. Event log names must consist of printable characters, and cannot include the characters '*', '?', or '\\\\'.  \n  \n \\- or -  \n  \n <code>logName</code> is not valid for user log creation. The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  \n  \n \\- or -  \n  \n The log name matches an existing event source name.  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters.  \n  \n \\- or -  \n  \n The first 8 characters of <code>logName</code> match the first 8 characters of an existing event log name on the specified computer.  \n  \n \\- or -  \n  \n The source cannot be registered because it already exists on the specified computer.  \n  \n \\- or -  \n  \n The source name matches an existing event source name."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem lehet megnyitni a megadott számítógépen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Delete(System.String)
  id: Delete(System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Delete(String)
  nameWithType: EventLog.Delete(String)
  fullName: System.Diagnostics.EventLog.Delete(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az Eseménynapló eltávolítása a helyi számítógépen."
  remarks: "Ezt a módszert használja, amikor a napló, törli a helyi számítógépen. Amennyiben rendelkezik a megfelelő engedélyekkel a számítógépen a napló törölheti.       Törlése eltávolítja a megadott napló `logName` a helyi számítógépről. Ha azt szeretné, csak a naplóba regisztrált forrás törlése, <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</xref:System.Diagnostics.EventLog.DeleteEventSource%2A> hívása Ha szeretné a naplóbejegyzések törlése, hívja <xref:System.Diagnostics.EventLog.Clear%2A>.</xref:System.Diagnostics.EventLog.Clear%2A> Törölje és <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>vannak `static` módszerek, így azok nem hívható meg az osztály a.</xref:System.Diagnostics.EventLog.DeleteEventSource%2A> Nincs szükség új példányának létrehozása <xref:System.Diagnostics.EventLog>vagy metódus meghívására.</xref:System.Diagnostics.EventLog>       A Delete metódus először törli a fájlt, amely a napló tartalmát tárolja. Majd fér hozzá a beállításjegyzékben, és eltávolítja az, hogy a naplók regisztrált eseményforrások. Ha később a napló újbóli létrehozásához, regisztrálnia kell az Eseményforrások újra, ha azok használható fel újra. Ha nem regisztrálja az Eseményforrások és más felhasználók írni egy eseményforrás napló név megadása nélkül, az eseményforrás létrejön az alkalmazások eseménynaplójában. Ezért alkalmazásokat, amelyek korábban volt bejegyzést törölni, majd újból naplóba írás ír az alkalmazásnaplóba Ehelyett, mert az már tartalmaz a következő eseményforrás.      > [!NOTE] > Újbóli létrehozása az Eseménynapló nehéz folyamat lehet. Ne törlésével a rendszer által létrehozott Eseménynapló, például az alkalmazásnaplóba.       Törlés hívása keresztül napló automatikusan törlésekor, amellyel bejelentkezik a regisztrált adatforrások. Ez más alkalmazásokhoz, hogy a napló működésképtelenné teheti."
  example:
  - "The following example deletes a log from the local computer. The example determines the log from its source.  \n  \n> [!NOTE]\n>  More than one source might write to an event log. Before deleting a custom log, make sure there are no other sources writing to that log.  \n  \n [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_12_1.cpp)]\n [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_12_1.vb)]\n [!code-cs[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_12_1.cs)]"
  syntax:
    content: public static void Delete (string logName);
    parameters:
    - id: logName
      type: System.String
      description: 'Törli a napló nevét. Lehetséges értékek a következők: alkalmazás, a biztonsági, a rendszer és a bármely egyéni eseménynaplók azon a számítógépen.'
  overload: System.Diagnostics.EventLog.Delete*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>logName</code>üres karakterlánc (&quot;&quot;) vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The registry key for the event log could not be opened on the local computer.  \n  \n \\- or -  \n  \n The log does not exist on the local computer."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült törölni az eseménynaplóban talál.       – vagy – a naplófájl nem nyitható meg. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Delete(System.String,System.String)
  id: Delete(System.String,System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Delete(String,String)
  nameWithType: EventLog.Delete(String,String)
  fullName: System.Diagnostics.EventLog.Delete(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az Eseménynapló eltávolítja a megadott számítógépről."
  remarks: "Ezt a módszert használja, amikor a törölni kívánt napló távoli számítógépen. Amennyiben rendelkezik a megfelelő engedélyekkel a számítógépen a napló törölheti.       <xref:System.Diagnostics.EventLog.Delete%2A>eltávolítja a megadott napló `logName` a megadott számítógépen `machineName`.</xref:System.Diagnostics.EventLog.Delete%2A> Ha azt szeretné, csak a naplóba regisztrált forrás törlése, <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>.</xref:System.Diagnostics.EventLog.DeleteEventSource%2A> hívása Ha szeretné a naplóbejegyzések törlése, hívja <xref:System.Diagnostics.EventLog.Clear%2A>.</xref:System.Diagnostics.EventLog.Clear%2A> <xref:System.Diagnostics.EventLog.Delete%2A>és <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>vannak `static` módszerek, így azok nem hívható meg az osztály a.</xref:System.Diagnostics.EventLog.DeleteEventSource%2A></xref:System.Diagnostics.EventLog.Delete%2A> Nincs szükség egy példányának létrehozása <xref:System.Diagnostics.EventLog>vagy metódus meghívására.</xref:System.Diagnostics.EventLog>       Ez a módszer először törli a fájlt, amely a napló tartalmát tárolja. Majd fér hozzá a beállításjegyzékben, és eltávolítja az, hogy a naplók regisztrált eseményforrások. Ha később a napló újbóli létrehozásához, regisztrálnia kell az Eseményforrások újra, ha azok használható fel újra. Ha nem regisztrálja az Eseményforrások és más felhasználók írni egy eseményforrás napló név megadása nélkül, az eseményforrás létrejön az alkalmazások eseménynaplójában. Ezért alkalmazásokat, amelyek korábban volt bejegyzést törölni, majd újból naplóba írás ír az alkalmazásnaplóba Ehelyett, mert az már tartalmaz a következő eseményforrás.      > [!NOTE] > Újbóli létrehozása az Eseménynapló nehéz folyamat lehet. Ne törlésével a rendszer által létrehozott Eseménynapló, például az alkalmazásnaplóba.       A napló keresztül <xref:System.Diagnostics.EventLog.Delete%2A>automatikusan törli az adott napló regisztrált adatforrások</xref:System.Diagnostics.EventLog.Delete%2A> hívása törlése Ez más alkalmazásokhoz, hogy a napló működésképtelenné teheti."
  example:
  - "The following example deletes a log from the specified computer. The example determines the log from its source.  \n  \n> [!NOTE]\n>  More than one source might write to an event log. Before deleting a custom log, make sure there are no other sources writing to that log.  \n  \n [!code-cs[Classic EventLog.Delete1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_17_1.cs)]\n [!code-cpp[Classic EventLog.Delete1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_17_1.cpp)]\n [!code-vb[Classic EventLog.Delete1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_17_1.vb)]"
  syntax:
    content: public static void Delete (string logName, string machineName);
    parameters:
    - id: logName
      type: System.String
      description: 'Törli a napló nevét. Lehetséges értékek a következők: alkalmazás, a biztonsági, a rendszer és a bármilyen egyéni eseménynaplók a megadott számítógépen.'
    - id: machineName
      type: System.String
      description: "Törli a napló, a számítógép nevét vagy a &quot;.&quot; a helyi számítógépen."
  overload: System.Diagnostics.EventLog.Delete*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>logName</code> is an empty string (\"\") or <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>machineName</code> is not a valid computer name."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The registry key for the event log could not be opened on the specified computer.  \n  \n \\- or -  \n  \n The log does not exist on the specified computer."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Nem sikerült törölni az eseménynaplóban talál.       – vagy – a naplófájl nem nyitható meg. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.DeleteEventSource(System.String)
  id: DeleteEventSource(System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: DeleteEventSource(String)
  nameWithType: EventLog.DeleteEventSource(String)
  fullName: System.Diagnostics.EventLog.DeleteEventSource(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az adatforrás-eseményregisztráció eltávolítása a helyi számítógép az eseménynaplóban talál."
  remarks: "A regisztrációját törölni szeretné ezt a módszert használja egy <xref:System.Diagnostics.EventLog.Source%2A>a helyi számítógépről.</xref:System.Diagnostics.EventLog.Source%2A> DeleteEventSource fér hozzá a beállításjegyzéket azon a helyi számítógépen, és eltávolítja a regisztrációját, az alkalmazás események érvényes forrásaként.       Eltávolíthatja az összetevőt az események érvényes forrásként, ha már nincs szüksége, hogy bejegyzéseket, hogy a naplóba bejegyezni. Például előfordulhat, hogy ehhez Ha módosítania kell a összetevő egy naplóból egy másikra. Mivel az egy forrásból csak regisztrálható egy naplófájlba egyszerre, a napló módosítása kell aktuális regisztrációjának eltávolítása.       DeleteEventSource eltávolítása csak a naplóba regisztrált forrás. Ha el szeretné távolítani a napló magát, hívja <xref:System.Diagnostics.EventLog.Delete%2A>.</xref:System.Diagnostics.EventLog.Delete%2A> Ha szeretné a naplóbejegyzések törlése, hívja <xref:System.Diagnostics.EventLog.Clear%2A>.</xref:System.Diagnostics.EventLog.Clear%2A> <xref:System.Diagnostics.EventLog.Delete%2A>és DeleteEventSource `static` módszerek, így azok nem hívható meg az osztály a.</xref:System.Diagnostics.EventLog.Delete%2A> Nincs szükség egy példányának létrehozása <xref:System.Diagnostics.EventLog>vagy metódus meghívására.</xref:System.Diagnostics.EventLog>       A napló keresztül <xref:System.Diagnostics.EventLog.Delete%2A>automatikusan törli az adott napló regisztrált adatforrások</xref:System.Diagnostics.EventLog.Delete%2A> hívása törlése Ez más alkalmazásokhoz, hogy a napló működésképtelenné teheti.      > [!NOTE] > Ha egy forrás leképezése már megtörtént a naplóba, és új naplóba való megfelelteti, újra kell indítania a számítógépet a módosítások életbe léptetéséhez."
  example:
  - "The following example deletes a source from the local computer. The example determines the log from its source, and then deletes the log.  \n  \n> [!NOTE]\n>  More than one source might write to an event log. Before deleting a custom log, make sure there are no other sources writing to that log.  \n  \n [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_8_1.cpp)]\n [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_8_1.vb)]\n [!code-cs[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_8_1.cs)]"
  syntax:
    content: public static void DeleteEventSource (string source);
    parameters:
    - id: source
      type: System.String
      description: "A neve, amellyel az alkalmazás regisztrálva van az Eseménynapló rendszer."
  overload: System.Diagnostics.EventLog.DeleteEventSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>source</code> parameter does not exist in the registry of the local computer.  \n  \n \\- or -  \n  \n You do not have write access on the registry key for the event log."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)
  id: DeleteEventSource(System.String,System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: DeleteEventSource(String,String)
  nameWithType: EventLog.DeleteEventSource(String,String)
  fullName: System.Diagnostics.EventLog.DeleteEventSource(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az alkalmazás forrás eseményregisztráció eltávolítja a megadott számítógépről."
  remarks: "Ez a túlterhelés használatával regisztrációjának eltávolítása egy <xref:System.Diagnostics.EventLog.Source%2A>távoli számítógépről.</xref:System.Diagnostics.EventLog.Source%2A> <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>fér hozzá a megadott számítógépen beállításjegyzékének `machineName` és eltávolítja a regisztrációját, az alkalmazás események érvényes forrásaként.</xref:System.Diagnostics.EventLog.DeleteEventSource%2A>       Eltávolíthatja az összetevőt az események érvényes forrásként, ha már nincs szüksége, hogy bejegyzéseket, hogy a naplóba bejegyezni. Például előfordulhat, hogy ehhez Ha módosítania kell a összetevő egy naplóból egy másikra. Mivel az egy forrásból csak regisztrálható egy naplófájlba egyszerre, a napló módosítása kell aktuális regisztrációjának eltávolítása.       <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>csak a naplóba regisztrált forrás eltávolítja.</xref:System.Diagnostics.EventLog.DeleteEventSource%2A> Ha el szeretné távolítani a napló magát, hívja <xref:System.Diagnostics.EventLog.Delete%2A>.</xref:System.Diagnostics.EventLog.Delete%2A> Ha szeretné a naplóbejegyzések törlése, hívja <xref:System.Diagnostics.EventLog.Clear%2A>.</xref:System.Diagnostics.EventLog.Clear%2A> <xref:System.Diagnostics.EventLog.Delete%2A>és <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>vannak `static` módszerek, így azok nem hívható meg az osztály a.</xref:System.Diagnostics.EventLog.DeleteEventSource%2A></xref:System.Diagnostics.EventLog.Delete%2A> Nincs szükség egy példányának létrehozása <xref:System.Diagnostics.EventLog>vagy metódus meghívására.</xref:System.Diagnostics.EventLog>       A napló keresztül <xref:System.Diagnostics.EventLog.Delete%2A>automatikusan törli az adott napló regisztrált adatforrások</xref:System.Diagnostics.EventLog.Delete%2A> hívása törlése Ez más alkalmazásokhoz, hogy a napló működésképtelenné teheti.      > [!NOTE] > Ha egy forrás leképezése már megtörtént a naplóba, és új naplóba való megfelelteti, újra kell indítania a számítógépet a módosítások életbe léptetéséhez."
  example:
  - "The following example deletes a source from the specified computer. The example determines the log from its source, and then deletes the log.  \n  \n> [!NOTE]\n>  More than one source might write to an event log. Before deleting a custom log, make sure there are no other sources writing to that log.  \n  \n [!code-cs[Classic EventLog.Delete1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_6_1.cs)]\n [!code-cpp[Classic EventLog.Delete1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_6_1.cpp)]\n [!code-vb[Classic EventLog.Delete1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_6_1.vb)]"
  syntax:
    content: public static void DeleteEventSource (string source, string machineName);
    parameters:
    - id: source
      type: System.String
      description: "A neve, amellyel az alkalmazás regisztrálva van az Eseménynapló rendszer."
    - id: machineName
      type: System.String
      description: "Távolítsa el a regisztrációt, hogy a számítógép nevét vagy a &quot;.&quot; a helyi számítógépen."
  overload: System.Diagnostics.EventLog.DeleteEventSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>machineName</code> parameter is invalid.  \n  \n \\- or -  \n  \n The <code>source</code> parameter does not exist in the registry of the specified computer.  \n  \n \\- or -  \n  \n You do not have write access on the registry key for the event log."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>source</code>nem lehet törölni, mert a beállításjegyzék, a szülő beállításkulcsa <code>source</code> nem tartalmaz egy azonos nevű kulcsot."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLog.Dispose(Boolean)
  fullName: System.Diagnostics.EventLog.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref>, és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()`metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter értéke igaz, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja a <xref:System.Diagnostics.EventLog>hivatkozik.</xref:System.Diagnostics.EventLog> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Diagnostics.EventLog.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.EnableRaisingEvents
  id: EnableRaisingEvents
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: EnableRaisingEvents
  nameWithType: EventLog.EnableRaisingEvents
  fullName: System.Diagnostics.EventLog.EnableRaisingEvents
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> kap <xref href=&quot;System.Diagnostics.EventLog.EntryWritten&quot;> </xref> rendszeresemény-értesítéseket."
  remarks: "A EnableRaisingEvents tulajdonság határozza meg, hogy az <xref:System.Diagnostics.EventLog>eseményeket indít, amikor bejegyzések kerüljenek a.</xref:System.Diagnostics.EventLog> Ha a tulajdonság értéke `true`, összetevők, amelyek megkapják a <xref:System.Diagnostics.EventLog.EntryWritten>esemény megkapják az értesítési bármikor bejegyzése a naplóban megadott íródik a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság.</xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.EntryWritten> Ha EnableRaisingEvents `false`, nem események aktiválódnak.      > [!NOTE] > Is fogadhatja az értesítéseket csak akkor, ha a bejegyzések íródtak a helyi számítógépen. Ön nem kapnak értesítést a távoli számítógépeken lévő írt bejegyzések."
  example:
  - "The following example handles an <xref:System.Diagnostics.EventLog.EntryWritten> event.  \n  \n [!code-cs[Classic EventLog.EnableRaisingEvents Example#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_32_1.cs)]\n [!code-vb[Classic EventLog.EnableRaisingEvents Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_32_1.vb)]\n [!code-cpp[Classic EventLog.EnableRaisingEvents Example#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_32_1.cpp)]"
  syntax:
    content: public bool EnableRaisingEvents { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> értesítést kapjon, ha a bejegyzés írva a napló; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLog.EnableRaisingEvents*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Az Eseménynapló távoli számítógépen is."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.EndInit
  id: EndInit
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: EndInit()
  nameWithType: EventLog.EndInit()
  fullName: System.Diagnostics.EventLog.EndInit()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Befejezi az inicializálási egy <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> az űrlap vagy egy másik összetevő használja. Az inicializálás futásidőben következik be."
  remarks: "A [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] tervezési környezetben ezt a módszert használja az űrlap vagy egy másik összetevő által használt inicializálása befejezéséhez. A <xref:System.Diagnostics.EventLog.BeginInit%2A>metódus elindítja az inicializálás.</xref:System.Diagnostics.EventLog.BeginInit%2A> Használja a <xref:System.Diagnostics.EventLog.BeginInit%2A>EndInit módszerek megakadályozza, hogy a vezérlő teljes inicializálása előtt használt.</xref:System.Diagnostics.EventLog.BeginInit%2A>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Diagnostics.EventLog.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Entries
  id: Entries
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Entries
  nameWithType: EventLog.Entries
  fullName: System.Diagnostics.EventLog.Entries
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az Eseménynapló tartalmának beolvasása"
  remarks: "A bejegyzések tag használja, az esemény eseménynaplóból való olvasásakor.       A tulajdonság csak olvasható, mert nem módosítható egy és tételek naplóba írás. Ehelyett adja meg a <xref:System.Diagnostics.EventLog.Source%2A>, és hívja meg <xref:System.Diagnostics.EventLog.WriteEntry%2A>egy új naplóbejegyzés írni.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.Source%2A> Bejegyzések segítségével bejegyzéseket az eseménynaplóban az számát, és megtekintheti az egyes <xref:System.Diagnostics.EventLogEntry>a gyűjteményben.</xref:System.Diagnostics.EventLogEntry> Használja az indexelt <xref:System.Diagnostics.EventLogEntryCollection.Item%2A>tag, például egy adott belépési adatainak lekérésére <xref:System.Diagnostics.EventLogEntry.Message%2A>, <xref:System.Diagnostics.EventLogEntry.Category%2A>, <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>, vagy <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</xref:System.Diagnostics.EventLogEntry.EntryType%2A> </xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> </xref:System.Diagnostics.EventLogEntry.Category%2A> </xref:System.Diagnostics.EventLogEntry.Message%2A> </xref:System.Diagnostics.EventLogEntryCollection.Item%2A>       Nincs szükség a adjon meg egy <xref:System.Diagnostics.EventLog.Source%2A>csak történő olvasásakor a naplóban.</xref:System.Diagnostics.EventLog.Source%2A> Csak megadhatja a <xref:System.Diagnostics.EventLog.Log%2A>nevét és <xref:System.Diagnostics.EventLog.MachineName%2A>(server számítógép neve) tulajdonságai a <xref:System.Diagnostics.EventLog>példány.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> Mindkét esetben a bejegyzések tag automatikusan töltődik bejegyzés az eseménynaplóba listája. Kiválaszthatja a megfelelő index egy elem ebben a listában az egyes bejegyzések olvasását.       Fontos megkülönböztetése olvasását és írását naplóbejegyzések, hogy nincs szükség külön metódus meghívására egy írásvédett. Miután a <xref:System.Diagnostics.EventLog.Log%2A>és <xref:System.Diagnostics.EventLog.MachineName%2A>vannak megadva, a bejegyzések tulajdonság automatikusan feltöltődik értékkel.</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A> Ha módosítja a értéke <xref:System.Diagnostics.EventLog.Log%2A>vagy a <xref:System.Diagnostics.EventLog.MachineName%2A>tulajdonság, a bejegyzések tulajdonság van tölteni a következő alkalommal, olvassa el azt.</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A>      > [!NOTE] > Nem kell megadni, <xref:System.Diagnostics.EventLog.MachineName%2A>Ha csatlakozik egy naplóban.</xref:System.Diagnostics.EventLog.MachineName%2A> Ha nem adja meg a <xref:System.Diagnostics.EventLog.MachineName%2A>, a helyi számítógépen &quot;.&quot;, feltételezi.</xref:System.Diagnostics.EventLog.MachineName%2A>"
  example:
  - "The following example reads entries in the event log, \"MyNewLog\", on the local computer.  \n  \n [!code-cs[Classic EventLog.Entries Example#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_23_1.cs)]\n [!code-cpp[Classic EventLog.Entries Example#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_23_1.cpp)]\n [!code-vb[Classic EventLog.Entries Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_23_1.vb)]"
  syntax:
    content: public System.Diagnostics.EventLogEntryCollection Entries { get; }
    return:
      type: System.Diagnostics.EventLogEntryCollection
      description: "Egy <xref href=&quot;System.Diagnostics.EventLogEntryCollection&quot;> </xref> okozó bejegyzéseket az eseménynaplóban. Mindegyik bejegyzés rendelve egy példányát a <xref href=&quot;System.Diagnostics.EventLogEntry&quot;> </xref> osztály."
  overload: System.Diagnostics.EventLog.Entries*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.EntryWritten
  id: EntryWritten
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: EntryWritten
  nameWithType: EventLog.EntryWritten
  fullName: System.Diagnostics.EventLog.EntryWritten
  type: Event
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Akkor következik be, amikor bejegyzése a helyi számítógépen van írása egy eseménynaplóba."
  remarks: "Ahhoz, hogy a rendszeresemény-értesítéseket, be kell <xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A>való `true`.</xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A> Eseményértesítések bejegyzéseket a helyi számítógépen írásakor csak fogadhat. Ön nem kapnak értesítést a távoli számítógépeken lévő írt bejegyzések.       Amikor létrehoz egy EntryWritten delegált, meg kell adnia a módszert, amelyet az esemény fogja kezelni. Az esemény társítja a eseménykezelő, vegye fel a küldött példányának az esemény. Az eseménykezelő nevezzük, amikor az esemény akkor következik be, amíg el nem távolítja a delegált. A delegáltak események kezelésére vonatkozó további információkért lásd: [események](~/add/includes/ajax-current-ext-md.md).       A rendszer <xref:System.Diagnostics.EventLog.WriteEntry%2A>csak akkor, ha az utolsó írás esemény történt legalább hat másodperces.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Ez azt jelenti, hogy csak kap egy EntryWritten eseményértesítés egy hat másodperces intervallumon belül, akkor is, ha egynél több eseménynapló módosítása következik be. Elég hosszú alvó időköz (körülbelül 10 másodperc) közötti hívások beszúrásakor <xref:System.Diagnostics.EventLog.WriteEntry%2A>, kevésbé valószínű, hogy teljesíti az eseményre.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Azonban írási események gyakrabban fordulhat elő, ha nem léphet a eseményértesítés, amíg a következő időszak. Általában kimaradt eseményértesítések nem elveszik, de késleltetett."
  example:
  - "The following example handles an entry written event.  \n  \n [!code-cs[Classic EventLog.EntryWritten Example#1](~/add/codesnippet/csharp/e-system.diagnostics.eve_1.cs)]\n [!code-cpp[Classic EventLog.EntryWritten Example#1](~/add/codesnippet/cpp/e-system.diagnostics.eve_1.cpp)]\n [!code-vb[Classic EventLog.EntryWritten Example#1](~/add/codesnippet/visualbasic/e-system.diagnostics.eve_1.vb)]"
  syntax:
    content: public event System.Diagnostics.EntryWrittenEventHandler EntryWritten;
    return:
      type: System.Diagnostics.EntryWrittenEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Exists(System.String)
  id: Exists(System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Exists(String)
  nameWithType: EventLog.Exists(String)
  fullName: System.Diagnostics.EventLog.Exists(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Meghatározza, hogy létezik-e a naplót a helyi számítógépen."
  remarks: "Ez a módszer segítségével meghatározhatja, hogy létezik-e a napló a helyi számítógépen. Ha meg szeretné határozni, hogy a forrás létezik-e a helyi számítógépen, használjon <xref:System.Diagnostics.EventLog.SourceExists%2A>.</xref:System.Diagnostics.EventLog.SourceExists%2A>       Ez a módszer a beállításjegyzék fér hozzá, mert a megfelelő engedélyekkel kell rendelkeznie a helyi számítógépen; Ellenkező esetben a lekérdezés visszaadja az `false`.       Nem adhat egy új naplófájl egy már létező napló neve ugyanazon a számítógépen, mert ezt a módszert használja egy új naplófájl létrehozása előtt annak meghatározásához, hogy a megadott `logName` már létezik a helyi számítógépen. A `logName` paraméter nincs a kis-és nagybetűket.       Létezik van egy `static` metódust, így azt nem hívható meg az osztály a. Nincs szükség egy példányának létrehozása <xref:System.Diagnostics.EventLog>Exists hívása.</xref:System.Diagnostics.EventLog>"
  example:
  - >-
    [!code-cpp[EventLog_Exists_1#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_4_1.cpp)]
     [!code-vb[EventLog_Exists_1#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_4_1.vb)]
     [!code-cs[EventLog_Exists_1#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_4_1.cs)]
  syntax:
    content: public static bool Exists (string logName);
    parameters:
    - id: logName
      type: System.String
      description: 'Keresse meg a napló nevét. Lehetséges értékek a következők: alkalmazás, a biztonsági, a rendszer, a más alkalmazás-specifikus naplók (tehát például az Active Directory) vagy a bármely egyéni napló azon a számítógépen.'
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a napló már létezik a helyi számítógépen; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLog.Exists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A naplónév van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy az érték üres."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Exists(System.String,System.String)
  id: Exists(System.String,System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Exists(String,String)
  nameWithType: EventLog.Exists(String,String)
  fullName: System.Diagnostics.EventLog.Exists(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Meghatározza, hogy létezik-e a napló a megadott számítógépen."
  remarks: "Ez a módszer segítségével meghatározhatja, hogy létezik-e egy távoli számítógépen. Ha meg szeretné határozni, hogy létezik-e egy távoli számítógépen, használjon <xref:System.Diagnostics.EventLog.SourceExists%2A>.</xref:System.Diagnostics.EventLog.SourceExists%2A>       Ez a módszer a beállításjegyzék fér hozzá, mert a beállításjegyzék megfelelő engedélyekkel kell rendelkeznie a megadott számítógépen; Ellenkező esetben a lekérdezés visszaadja az `false`.       Nem adhat egy új naplófájl egy már létező napló neve ugyanazon a számítógépen, mert ezt a módszert használja egy új naplófájl létrehozása előtt annak meghatározásához, hogy egy és a megadott `logName` már létezik a megadott kiszolgáló az `machineName` paraméter. A `logName` és `machineName` paraméterei nem kis-és nagybetűket.       <xref:System.Diagnostics.EventLog.Exists%2A>van egy `static` metódust, így azt nem hívható meg az osztály a.</xref:System.Diagnostics.EventLog.Exists%2A> Nincs szükség <xref:System.Diagnostics.EventLog> <xref:System.Diagnostics.EventLog.Exists%2A>.</xref:System.Diagnostics.EventLog.Exists%2A> hívása</xref:System.Diagnostics.EventLog> új példányának létrehozása"
  syntax:
    content: public static bool Exists (string logName, string machineName);
    parameters:
    - id: logName
      type: System.String
      description: 'A naplóban keresendő. Lehetséges értékek a következők: alkalmazás, a biztonsági, a rendszer, a más alkalmazás-specifikus naplók (tehát például az Active Directory) vagy a bármely egyéni napló azon a számítógépen.'
    - id: machineName
      type: System.String
      description: "A számítógépen keresse meg a napló nevét vagy a &quot;.&quot; a helyi számítógépen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a napló már létezik a megadott számítógépen; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLog.Exists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> machineName </code> paraméter formátuma érvénytelen. Győződjön meg arról, hogy a megfelelő szintaxist használja a számítógép, amelyen keres.       – vagy – a <code> logName </code> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy az érték üres."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.GetEventLogs
  id: GetEventLogs
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: GetEventLogs()
  nameWithType: EventLog.GetEventLogs()
  fullName: System.Diagnostics.EventLog.GetEventLogs()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A helyi számítógép összes eseménynaplók keres, és létrehoz egy tömbjét <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> objektumokat, amelyek a listában."
  remarks: "A tömb <xref:System.Diagnostics.EventLog>objektumok pillanatképet az összes Eseménynapló a helyi számítógépen, ha GetEventLogs hívása történt.</xref:System.Diagnostics.EventLog> Ez a helyzet nem dinamikus gyűjteménye nem tükrözi a törlés vagy a naplók valós időben létrehozását. Ellenőrizze, hogy a napló a tömb létezik-e olvasási vagy írási előtt. A tömb általában legalább három naplók tartalmazza: alkalmazás, a rendszer és a biztonság. Ha a helyi számítógépen létrehozott egyéni naplókat, azok megjelennek, valamint a tömb.       Eseménynaplók listájának lekéréséhez a megfelelő engedélyekkel kell rendelkeznie. Ezek az engedélyek megegyeznek <xref:System.Diagnostics.EventLog.Exists%2A>és <xref:System.Diagnostics.EventLog.SourceExists%2A>.</xref:System.Diagnostics.EventLog.SourceExists%2A> </xref:System.Diagnostics.EventLog.Exists%2A> meghívásához szükséges"
  example:
  - "The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.  \n  \n [!code-vb[EventLogProperties#2](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_10_1.vb)]\n [!code-cpp[EventLogProperties#2](~/add/codesnippet/cpp/m-system.diagnostics.eve_10_1.cpp)]\n [!code-cs[EventLogProperties#2](~/add/codesnippet/csharp/m-system.diagnostics.eve_10_1.cs)]"
  syntax:
    content: public static System.Diagnostics.EventLog[] GetEventLogs ();
    parameters: []
    return:
      type: System.Diagnostics.EventLog[]
      description: "Típusú tömb <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> , amely jelzi, hogy a naplók a helyi számítógépen."
  overload: System.Diagnostics.EventLog.GetEventLogs*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Olvasási hozzáférés a beállításjegyzék nem rendelkeznek.       – vagy – nincs Eseménynapló szolgáltatás a számítógépen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.GetEventLogs(System.String)
  id: GetEventLogs(System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: GetEventLogs(String)
  nameWithType: EventLog.GetEventLogs(String)
  fullName: System.Diagnostics.EventLog.GetEventLogs(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott számítógép összes eseménynaplók keres, és létrehoz egy tömbjét <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> objektumokat, amelyek a listában."
  remarks: "A tömb <xref:System.Diagnostics.EventLog>objektumok pillanatképet az összes Eseménynapló által megadott számítógépen a `machineName` paraméter amikor hívása <xref:System.Diagnostics.EventLog.GetEventLogs%2A>történik.</xref:System.Diagnostics.EventLog.GetEventLogs%2A> </xref:System.Diagnostics.EventLog> Ez a helyzet nem dinamikus gyűjteménye nem tükrözi a törlés vagy a naplók valós időben létrehozását. Ellenőrizze, hogy a napló a tömb létezik-e olvasási vagy írási előtt. A tömb általában legalább három naplók tartalmazza: alkalmazás, a rendszer és a biztonság. Ha a megadott számítógépen létrehozott egyéni naplókat, azok megjelennek, valamint a tömb.       <xref:System.Diagnostics.EventLog.GetEventLogs%2A>van egy `static` metódust, így azt nem hívható meg a a <xref:System.Diagnostics.EventLog>osztály maga.</xref:System.Diagnostics.EventLog></xref:System.Diagnostics.EventLog.GetEventLogs%2A> Nincs szükség a példányt létrehozni egy <xref:System.Diagnostics.EventLog>objektum a metódus végrehajtásához.</xref:System.Diagnostics.EventLog>       Eseménynaplók listájának lekéréséhez a megfelelő engedélyekkel kell rendelkeznie. Ezek az engedélyek megegyeznek <xref:System.Diagnostics.EventLog.Exists%2A>és <xref:System.Diagnostics.EventLog.SourceExists%2A>.</xref:System.Diagnostics.EventLog.SourceExists%2A> </xref:System.Diagnostics.EventLog.Exists%2A> meghívásához szükséges"
  example:
  - "The following example gets a list of logs on the computer \"myServer\". It then outputs the name of each log.  \n  \n [!code-cpp[Classic EventLog.GetEventLogs1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_18_1.cpp)]\n [!code-cs[Classic EventLog.GetEventLogs1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_18_1.cs)]\n [!code-vb[Classic EventLog.GetEventLogs1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_18_1.vb)]"
  syntax:
    content: public static System.Diagnostics.EventLog[] GetEventLogs (string machineName);
    parameters:
    - id: machineName
      type: System.String
      description: "A számítógépet, amelyen az eseménynaplók kereséséhez."
    return:
      type: System.Diagnostics.EventLog[]
      description: "Típusú tömb <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> , amely jelzi, hogy a naplók az adott számítógépen."
  overload: System.Diagnostics.EventLog.GetEventLogs*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> machineName </code> paraméter értéke érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Olvasási hozzáférés a beállításjegyzék nem rendelkeznek.       – vagy – nincs Eseménynapló szolgáltatás a számítógépen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Log
  id: Log
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Log
  nameWithType: EventLog.Log
  fullName: System.Diagnostics.EventLog.Log
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a írni vagy olvasni a napló nevét."
  remarks: "Three log files exist by default on the server: Application, System, and Security. Applications and services use the Application log file. Device drivers use the System log file. The system generates success and failure audit events in the Security log when auditing is turned on. If you have other applications installed, like Active Directory on Windows servers, there might be other default log files. In addition, you can create custom log files on a local or remote computer. Custom logs help organize your entries in a more detailed way than is allowed when your components write events to the default Application log.  \n  \n> [!NOTE]\n>  Log names are limited to eight characters. According to the system, MyLogSample1 and MyLogSample2 are the same log.  \n  \n If you write to an event log, it is not enough to specify the Log property. You must associate a <xref:System.Diagnostics.EventLog.Source%2A> property with your event log resource to connect it to a particular log. It is not necessary to specify a <xref:System.Diagnostics.EventLog.Source%2A> when only reading from a log, but an event source must be associated with the event log resource in the server's registry. You can specify only the Log name and <xref:System.Diagnostics.EventLog.MachineName%2A> (server computer name) to read from it.  \n  \n> [!NOTE]\n>  You are not required to specify the <xref:System.Diagnostics.EventLog.MachineName%2A> if you are connecting to a log. If you do not specify the <xref:System.Diagnostics.EventLog.MachineName%2A>, the local computer (\".\") is assumed.  \n  \n If the <xref:System.Diagnostics.EventLog.Source%2A> property has not been specified, a call to Log returns an empty string if Log has not been explicitly set (by setting the Log property, or through the constructor). If the <xref:System.Diagnostics.EventLog.Source%2A> has been specified, Log returns the name of the log to which that source was registered.  \n  \n A source can only be registered to one log at a time. If the <xref:System.Diagnostics.EventLog.Source%2A> property was set for an instance of <xref:System.Diagnostics.EventLog>, you cannot change the Log property for that <xref:System.Diagnostics.EventLog> without changing the value of <xref:System.Diagnostics.EventLog.Source%2A> or calling <xref:System.Diagnostics.EventLog.DeleteEventSource%2A> first. If you change the Log property after the <xref:System.Diagnostics.EventLog.Source%2A> property has been set, writing a log entry throws an exception.  \n  \n The operating system stores event logs as files. When you use <xref:System.Diagnostics.EventLogInstaller> or <xref:System.Diagnostics.EventLog.CreateEventSource%2A> to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the Log property with the \".evt\" file name extension.  \n  \n You cannot create a new log using the Log property alone (without specifying a source for the log). You can call <xref:System.Diagnostics.EventLog.CreateEventSource%2A>, passing in a new log name as a parameter, and then call <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>. However, the intent is usually either to create (and write entries to) new application-specific logs, or to read from existing logs.  \n  \n If the Log value changes, the event log is closed and all event handles are released.  \n  \n> [!CAUTION]\n>  If you set the Log property to the name of a log that does not exist, the system attaches the <xref:System.Diagnostics.EventLog> to the Application log, but does not warn you that it is using a log other than the one you specified."
  example:
  - "The following example reads entries in the event log, \"NewEventLog\", on the local computer.  \n  \n [!code-cpp[Classic EventLog.Log Example#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_17_1.cpp)]\n [!code-cs[Classic EventLog.Log Example#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_17_1.cs)]\n [!code-vb[Classic EventLog.Log Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_17_1.vb)]"
  syntax:
    content: public string Log { get; set; }
    return:
      type: System.String
      description: "A napló nevét. Ennek az lehet az alkalmazás, a rendszer, a biztonsági vagy az egyéni naplófájlok nevének. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.EventLog.Log*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.LogDisplayName
  id: LogDisplayName
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: LogDisplayName
  nameWithType: EventLog.LogDisplayName
  fullName: System.Diagnostics.EventLog.LogDisplayName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi az eseménynaplóban rövid nevét."
  remarks: "> [!NOTE]> A Windows Vista és újabb verziók felhasználók nem rendelkeznek hozzáféréssel a biztonsági naplóba. Ha futtatja a Windows Vista vagy újabb felhasználóként, egy <xref:System.Security.SecurityException>a biztonsági naplóhoz. az esemény nevét elérésére tett kísérlet során</xref:System.Security.SecurityException> kap   >> A Windows Vista és újabb, valamint a felhasználói fiókok felügyelete (UAC) a felhasználó jogosultságával határozza meg. Ha a beépített Rendszergazdák csoport tagja, két futásidejű jogkivonatot kapott: egy általános jogú felhasználói jogkivonat és egy rendszergazdai hozzáférési jogkivonatot. Alapértelmezés szerint áll az általános jogú felhasználói szerepkörben. Végrehajtani a biztonsági napló hozzáférő kódot, akkor kell először emelheti a jogosultságokat az általános jogú felhasználó rendszergazda. Ehhez kattintson a jobb gombbal az alkalmazás ikonja, és jelzi, hogy szeretné-e rendszergazdai az alkalmazás indításakor."
  example:
  - "The following example enumerates the event logs defined on the local computer and displays the LogDisplayName for each event log.  \n  \n [!code-vb[EventLogProperties#2](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_29_1.vb)]\n [!code-cpp[EventLogProperties#2](~/add/codesnippet/cpp/p-system.diagnostics.eve_29_1.cpp)]\n [!code-cs[EventLogProperties#2](~/add/codesnippet/csharp/p-system.diagnostics.eve_29_1.cs)]"
  syntax:
    content: public string LogDisplayName { get; }
    return:
      type: System.String
      description: "Amely jelöli az eseménynaplóba, a rendszer-Eseménynapló neve."
  overload: System.Diagnostics.EventLog.LogDisplayName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A megadott <xref:System.Diagnostics.EventLog.Log*>nem létezik ezen a számítógépen a beállításjegyzékben.</xref:System.Diagnostics.EventLog.Log*>"
  platform:
  - net462
- uid: System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)
  id: LogNameFromSourceName(System.String,System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: LogNameFromSourceName(String,String)
  nameWithType: EventLog.LogNameFromSourceName(String,String)
  fullName: System.Diagnostics.EventLog.LogNameFromSourceName(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi, amelyben a megadott forrás regisztrálva van a napló nevét."
  remarks: "Az eseményforrás azt jelzi, hogy mi a eseményt naplóz. Ez gyakran az alkalmazás nevét, vagy a az alkalmazás részletes esetén pedig az alkalmazás nagy. Alkalmazásokhoz és szolgáltatásokhoz az alkalmazásnaplóba vagy egy egyéni naplót kell írni. Eszközillesztők kell írni a rendszernaplóba.       Amikor létrehoz egy új forrása, amely csak írhat egy napló egyszerre, a rendszer az alkalmazás az eseménynaplóban talál érvényes bejegyzések adatforrásként regisztrálja. A <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság karakterlánc lehet, de a név nem használható más forrásokból azon a számítógépen.</xref:System.Diagnostics.EventLog.Source%2A> Egy duplikált létrehozására tett kísérlet <xref:System.Diagnostics.EventLog.Source%2A>érték kivételt jelez.</xref:System.Diagnostics.EventLog.Source%2A> Van azonban, az egyetlen eseménynaplóra számos különböző forrásokból azt írásakor."
  example:
  - "The following example deletes a source from the local computer. The example determines the log from its source, and then deletes the log.  \n  \n> [!NOTE]\n>  More than one source might write to an event log. Before deleting a custom log, make sure there are no other sources writing to that log.  \n  \n [!code-cpp[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_2_1.cpp)]\n [!code-vb[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_2_1.vb)]\n [!code-cs[Classic EventLog.DeleteEventSource Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_2_1.cs)]"
  syntax:
    content: public static string LogNameFromSourceName (string source, string machineName);
    parameters:
    - id: source
      type: System.String
      description: "A forrás neve."
    - id: machineName
      type: System.String
      description: "Meg, amikor a számítógép nevét vagy a &quot;.&quot; a helyi számítógépen."
    return:
      type: System.String
      description: "A beállításjegyzékben a megadott forrás társított napló nevét."
  overload: System.Diagnostics.EventLog.LogNameFromSourceName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.MachineName
  id: MachineName
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: MachineName
  nameWithType: EventLog.MachineName
  fullName: System.Diagnostics.EventLog.MachineName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a számítógépet, amelyen az eseményeket olvasni vagy írni nevét."
  remarks: "Ha ír az eseménynaplóba, társítania kell egy <xref:System.Diagnostics.EventLog.Source%2A>objektummal hívja meg az Eseménynapló csatlakozni, hogy egy adott naplóban.</xref:System.Diagnostics.EventLog.Source%2A> Nincs szükség a adja meg a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság csak történő olvasásakor a naplóban.</xref:System.Diagnostics.EventLog.Source%2A> Csak megadhatja a <xref:System.Diagnostics.EventLog.Log%2A>nevét és a számítógépnév (server számítógép neve).</xref:System.Diagnostics.EventLog.Log%2A>      > [!NOTE] > Megadása nem szükséges a számítógépnév naplóba csatlakozik. Ha nem adja meg a számítógépnév, a helyi számítógépen (&quot;.&quot;) veszi alapul.       A forrás egyszerre csak egy naplófájlba lehet regisztrálni. Ha a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság lett beállítva a példányt <xref:System.Diagnostics.EventLog>, a számítógépnév tulajdonság nem lehet módosítani, amely <xref:System.Diagnostics.EventLog>értékének módosítása nélkül <xref:System.Diagnostics.EventLog.Source%2A>és a <xref:System.Diagnostics.EventLog.DeleteEventSource%2A>első.</xref:System.Diagnostics.EventLog.DeleteEventSource%2A> </xref:System.Diagnostics.EventLog.Source%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> Ha módosítja a számítógépnév tulajdonság a <xref:System.Diagnostics.EventLog>bezár minden leírót, és a napló és a forrás az új számítógép reattaches.</xref:System.Diagnostics.EventLog>       A számítógépnév érték nem lehet üres karakterlánc. Ha az nincs megadva, alapértelmezés szerint a helyi számítógépen (&quot;.&quot;)."
  example:
  - "The following example reads entries in the event log, \"NewEventLog\", on a specified computer.  \n  \n [!code-cs[Classic EventLog.MachineName Example#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_6_1.cs)]\n [!code-vb[Classic EventLog.MachineName Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_6_1.vb)]\n [!code-cpp[Classic EventLog.MachineName Example#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_6_1.cpp)]"
  syntax:
    content: public string MachineName { get; set; }
    return:
      type: System.String
      description: "A kiszolgáló, amelyen az eseménynaplóban található neve. Az alapértelmezett érték a helyi számítógépen (&quot;.&quot;)."
  overload: System.Diagnostics.EventLog.MachineName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A számítógép neve érvénytelen."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.MaximumKilobytes
  id: MaximumKilobytes
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: MaximumKilobytes
  nameWithType: EventLog.MaximumKilobytes
  fullName: System.Diagnostics.EventLog.MaximumKilobytes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a napló maximális méretét kilobájtban."
  remarks: "A MaximumKilobytes értéknek tulajdonság adja meg az eseménynapló-fájl mérete. Ha az eseménynaplóban eléri a méretkorlátot, a konfigurált <xref:System.Diagnostics.EventLog.OverflowAction%2A>az érték szabja meg, hogy az új bejegyzések törlődnek, vagy hogy felülírja az új bejegyzések a régebbi bejegyzések.</xref:System.Diagnostics.EventLog.OverflowAction%2A>      > [!NOTE] > A tulajdonság adja meg az eseménynaplót, ez a példány által képviselt konfigurációs beállítását. Az Eseménynapló eléri maximális méretét, amikor ez a tulajdonság meghatározza, hogyan kezeli a az operációs rendszer az új bejegyzések az Eseménynapló regisztrált összes eseményforrások szerint."
  example:
  - "The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.  \n  \n [!code-vb[EventLogProperties#2](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_15_1.vb)]\n [!code-cpp[EventLogProperties#2](~/add/codesnippet/cpp/p-system.diagnostics.eve_15_1.cpp)]\n [!code-cs[EventLogProperties#2](~/add/codesnippet/csharp/p-system.diagnostics.eve_15_1.cs)]"
  syntax:
    content: public long MaximumKilobytes { get; set; }
    return:
      type: System.Int64
      description: "A napló maximális méretét kilobájtban. Az alapértelmezett érték 512 512 KB fájl maximális méretét jelzi."
  overload: System.Diagnostics.EventLog.MaximumKilobytes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott érték kisebb 64, vagy nagyobb, mint 4194240, vagy nem egy páros számú többszöröse az 64."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Diagnostics.EventLog.Log*> value is not a valid log name.  \n  \n \\- or -  \n  \n The registry key for the event log could not be opened on the target computer."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.MinimumRetentionDays
  id: MinimumRetentionDays
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: MinimumRetentionDays
  nameWithType: EventLog.MinimumRetentionDays
  fullName: System.Diagnostics.EventLog.MinimumRetentionDays
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a bejegyzéseket az eseménynaplóban a megőrizni kívánt napok számát."
  remarks: "A MinimumRetentionDays tulajdonság használatával vizsgálja meg az Eseménynapló aktuális beállítás. Használjon <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>napokban, ameddig a minden egyes bejegyzés az eseménynaplóba meg kell őrizni minimális számának módosításához.</xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>       A MinimumRetentionDays érték függ a konfigurált túlcsordulás viselkedését az eseménynaplóban talál. Ha a <xref:System.Diagnostics.OverflowAction>az Eseménynapló tulajdonsága <xref:System.Diagnostics.OverflowAction>, majd a MinimumRetentionDays értéke 0.</xref:System.Diagnostics.OverflowAction> </xref:System.Diagnostics.OverflowAction> Ha a <xref:System.Diagnostics.OverflowAction>az Eseménynapló tulajdonsága <xref:System.Diagnostics.OverflowAction>, akkor a MinimumRetentionDays értéke -1.</xref:System.Diagnostics.OverflowAction> </xref:System.Diagnostics.OverflowAction> Ha a <xref:System.Diagnostics.OverflowAction>az Eseménynapló tulajdonsága <xref:System.Diagnostics.OverflowAction>, akkor a MinimumRetentionDays érték nullánál nagyobbnak, és az eseménynapló-bejegyzések megőrzéséhez, ha az Eseménynapló megtelt napok számát jelöli.</xref:System.Diagnostics.OverflowAction> </xref:System.Diagnostics.OverflowAction>       A túlcsordulási csak fordul elő, amikor egy eseménynapló eléri a maximális méretét. Ha egy <xref:System.Diagnostics.EventLog>rendelkezik a <xref:System.Diagnostics.EventLog.OverflowAction%2A>beállítása <xref:System.Diagnostics.OverflowAction>, és az Eseménynapló eléri maximális méretét, majd az új bejegyzések írt csak ha a bejegyzést, amelynek élettartama meghaladja a MinimumRetentionDays időszak lecserélheti.</xref:System.Diagnostics.OverflowAction> </xref:System.Diagnostics.EventLog.OverflowAction%2A> </xref:System.Diagnostics.EventLog> Eseménynapló bejegyzéseinek megőrzése legalább akkor alkalmazható, ha az eseménynaplóban rendszeresen archiválva legyen. Ellenkező esetben veszhetnek el új bejegyzéseket az eseménynaplóban elérésekor a megadott korlátot. Új esemény információk elveszhetnek, állítsa be az események alapján egy adott eseménynaplónál a archív ütemezését legalább nap."
  example:
  - "The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.  \n  \n [!code-vb[EventLogProperties#2](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_12_1.vb)]\n [!code-cpp[EventLogProperties#2](~/add/codesnippet/cpp/p-system.diagnostics.eve_12_1.cpp)]\n [!code-cs[EventLogProperties#2](~/add/codesnippet/csharp/p-system.diagnostics.eve_12_1.cs)]"
  syntax:
    content: public int MinimumRetentionDays { get; }
    return:
      type: System.Int32
      description: "Bejegyzés az eseménynaplóba kerülnek megadott napok száma. Az alapértelmezett értéke a 7."
  overload: System.Diagnostics.EventLog.MinimumRetentionDays*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)
  id: ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: ModifyOverflowPolicy(OverflowAction,Int32)
  nameWithType: EventLog.ModifyOverflowPolicy(OverflowAction,Int32)
  fullName: System.Diagnostics.EventLog.ModifyOverflowPolicy(OverflowAction,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Módosítja az új bejegyzések írásra, ha az eseménynaplóban eléri a maximális fájlméret konfigurált működését."
  remarks: "Az Eseménynapló túlcsordulás viselkedését határozza meg, mi történik, ha új bejegyzések írandó napló által elérte a maximális méretet.      > [!NOTE] > Túlcsordulás viselkedését lép érvénybe, csak akkor, amikor egy eseménynapló eléri maximális méretét. A túlcsordulás viselkedés nem befolyásolja a írása egy új bejegyzést, amely lehetővé teszi további eseménynapló-bejegyzések naplóba.       A ModifyOverflowPolicy metódus konfigurálja az Eseménynapló túlcsordulás viselkedését. <xref:System.Diagnostics.EventLog>a példány.</xref:System.Diagnostics.EventLog> Az Eseménynapló, amelyet ez a metódus hívása után a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság, a <xref:System.Diagnostics.EventLog.OverflowAction%2A>és <xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A>tulajdonságértékek tükrözze az újonnan konfigurált túlcsordulás viselkedését.</xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A> </xref:System.Diagnostics.EventLog.OverflowAction%2A> </xref:System.Diagnostics.EventLog.Log%2A>      > [!NOTE] > A tulajdonság adja meg az eseménynaplót, ez a példány által képviselt konfigurációs beállítását. Az Eseménynapló eléri maximális méretét, amikor ez a tulajdonság meghatározza, hogyan kezeli a az operációs rendszer az új bejegyzések az Eseménynapló regisztrált összes eseményforrások szerint.       Állítsa be a `action` paramétert <xref:System.Diagnostics.OverflowAction>annak jelzésére, hogy egy új bejegyzést ír a legrégebbi bejegyzést amikor a <xref:System.Diagnostics.EventLog>eléri maximális méretét.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.OverflowAction> Ha a `action` paraméter értéke <xref:System.Diagnostics.OverflowAction>, a `retentionDays` paraméter értékét a rendszer figyelmen kívül hagyja.</xref:System.Diagnostics.OverflowAction>       Állítsa be a `action` paramétert <xref:System.Diagnostics.OverflowAction>annak jelzésére, hogy minden új bejegyzést ír a régebbi bejegyzések amikor a <xref:System.Diagnostics.EventLog>eléri maximális méretét.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.OverflowAction> Adja meg az, hogy hány napig eseményeket meg kell őrizni a napló használata a `retentionDays` paraméter. A megőrzési tartományon belüli írt események nem írják új bejegyzést.       Állítsa be a `action` paramétert <xref:System.Diagnostics.OverflowAction>elveti az új események, amikor a napló maximális méretet.</xref:System.Diagnostics.OverflowAction> Ha a `action` paraméter értéke <xref:System.Diagnostics.OverflowAction>, a `retentionDays` paraméter értékét a rendszer figyelmen kívül hagyja.</xref:System.Diagnostics.OverflowAction>      > [!CAUTION] > Beállítást a túlcsordulás házirend <xref:System.Diagnostics.OverflowAction>határozza meg, hogy a rendszer elveti az új bejegyzések a az Eseménynapló megtelt.</xref:System.Diagnostics.OverflowAction> Ha ezt a beállítást használja, győződjön meg arról, az eseménynaplóban rendszeresen archivált, és ne lépje a maximális méretkorlát törölve."
  example:
  - "The following example displays the configured overflow policy for a specified event log, and allows the user to select a new overflow policy setting for the event log.  \n  \n [!code-vb[EventLogProperties#3](~/add/codesnippet/visualbasic/0b0fc273-a638-4af9-ae99-_1.vb)]\n [!code-cpp[EventLogProperties#3](~/add/codesnippet/cpp/0b0fc273-a638-4af9-ae99-_1.cpp)]\n [!code-cs[EventLogProperties#3](~/add/codesnippet/csharp/0b0fc273-a638-4af9-ae99-_1.cs)]"
  syntax:
    content: public void ModifyOverflowPolicy (System.Diagnostics.OverflowAction action, int retentionDays);
    parameters:
    - id: action
      type: System.Diagnostics.OverflowAction
      description: "Az új bejegyzések az eseménynapló írása túlcsordulás működést."
    - id: retentionDays
      type: System.Int32
      description: "A minimális száma napig őrizzen meg minden egyes eseménynapló-bejegyzés. A paraméter használata csak akkor, ha `action` értéke <xref href=&quot;System.Diagnostics.OverflowAction&quot;> </xref>."
  overload: System.Diagnostics.EventLog.ModifyOverflowPolicy*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>action</code>Érvénytelen <xref:System.Diagnostics.EventLog.OverflowAction*> érték."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>retentionDays</code>kisebb, mint egy, vagy nagyobb, mint 365 van."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Diagnostics.EventLog.Log*> value is not a valid log name.  \n  \n \\- or -  \n  \n The registry key for the event log could not be opened on the target computer."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.OverflowAction
  id: OverflowAction
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: OverflowAction
  nameWithType: EventLog.OverflowAction
  fullName: System.Diagnostics.EventLog.OverflowAction
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi a konfigurált viselkedés új bejegyzések tárolását, ha az eseménynaplóban eléri a maximális naplófájlméret."
  remarks: "Eseménynaplók növekedjen mérete új eseményeket jegyez őket. Minden egyes Eseménynapló méretkorlátja beállított maximális; a <xref:System.Diagnostics.EventLog.MaximumKilobytes%2A>tulajdonság határozza meg a maximális méretét kilobájtban az esemény naplófájl mérete számára engedélyezett.</xref:System.Diagnostics.EventLog.MaximumKilobytes%2A>       A OverflowAction tulajdonság értékének használatával vizsgálja meg a maximális méret Eseménynapló konfigurált túlcsordulás viselkedését. A <xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>metódus túlcsordulás változtathatja az eseménynaplóhoz.</xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A>      > [!NOTE] > Túlcsordulás viselkedését lép érvénybe, csak akkor, amikor egy eseménynapló eléri maximális méretét. A túlcsordulás viselkedés nem befolyásolja a írása egy új bejegyzést, amely lehetővé teszi további eseménynapló-bejegyzések naplóba."
  example:
  - "The following example enumerates the event logs defined on the local computer, and displays configuration details for each event log.  \n  \n [!code-vb[EventLogProperties#2](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_28_1.vb)]\n [!code-cpp[EventLogProperties#2](~/add/codesnippet/cpp/p-system.diagnostics.eve_28_1.cpp)]\n [!code-cs[EventLogProperties#2](~/add/codesnippet/csharp/p-system.diagnostics.eve_28_1.cs)]"
  syntax:
    content: public System.Diagnostics.OverflowAction OverflowAction { get; }
    return:
      type: System.Diagnostics.OverflowAction
      description: "A <xref href=&quot;System.Diagnostics.OverflowAction&quot;> </xref> érték, amely meghatározza a beállított viselkedés új bejegyzések tárolásához, amikor az eseménynaplóban eléri a maximális méretét. Az alapértelmezett érték <xref href=&quot;System.Diagnostics.OverflowAction&quot;> </xref>."
  overload: System.Diagnostics.EventLog.OverflowAction*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)
  id: RegisterDisplayName(System.String,System.Int64)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: RegisterDisplayName(String,Int64)
  nameWithType: EventLog.RegisterDisplayName(String,Int64)
  fullName: System.Diagnostics.EventLog.RegisterDisplayName(String,Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az Eseménynapló, a kiszolgáló eseménynaplójában megjelenő honosított nevét adja meg."
  remarks: "RegisterDisplayName segítségével regisztrálja, és az egyéni eseménynaplók az eseménynaplóban megjelenítendő egy honosított neve.       A megadott erőforrás-azonosítót meg kell felelnie az erőforrás-fájlban definiált honosított karakterláncot. Az Eseménynapló megjeleníti az egyéni esemény naplójának neve, a honosított karakterlánc és az aktuális kulturális beállítások használatával. Például adhatja meg az erőforrás-fájlban eltérő kulturális környezetek honosított több eseménynapló nevét. Az Eseménynapló használatával jeleníti meg a honosított karakterláncát a kulturális környezet beállításokat az aktuális felhasználó.       Ha az Eseménynapló nem tölthető be a honosított karakterlánc az erőforrás-fájlból, vagy nincs megjelenítendő név regisztrálták az eseménynaplóhoz, az Eseménynapló megjeleníti a meghatározott <xref:System.Diagnostics.EventLog.Log%2A>.</xref:System.Diagnostics.EventLog.Log%2A> esemény naplójának neve      > [!NOTE] >, Nem kell regisztrálnia az előre definiált eseménynaplók megjelenítendő nevét. Az operációs rendszer regisztrálja az alkalmazást, a rendszer és biztonság eseménynaplók honosított megjelenítési nevének."
  example:
  - "The following example determines whether the event source named `SampleApplicationSource` is registered on the local computer. If the event source does not exist, the example sets the message resource file for the source and creates the new event source. Finally, the example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.  \n  \n [!code-cpp[EventLog_WriteEvent#6](~/add/codesnippet/cpp/m-system.diagnostics.eve_1_1.cpp)]\n [!code-vb[EventLog_WriteEvent#6](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_1_1.vb)]\n [!code-cs[EventLog_WriteEvent#6](~/add/codesnippet/csharp/m-system.diagnostics.eve_1_1.cs)]  \n  \n The example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings. Specifically, resource identifier 5001 is defined for the localized name of the event log.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public void RegisterDisplayName (string resourceFile, long resourceId);
    parameters:
    - id: resourceFile
      type: System.String
      description: "Honosított erőforrásfájl teljesen megadott elérési útja."
    - id: resourceId
      type: System.Int64
      description: "Az erőforrás-azonosító, amely indexeli az erőforrás-fájlon belüli honosított karakterláncot."
  overload: System.Diagnostics.EventLog.RegisterDisplayName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Diagnostics.EventLog.Log*> value is not a valid log name.  \n  \n \\- or -  \n  \n The registry key for the event log could not be opened on the target computer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>resourceFile </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.Source
  id: Source
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: Source
  nameWithType: EventLog.Source
  fullName: System.Diagnostics.EventLog.Source
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a regisztrálásához és az eseménynapló írásához használt neve."
  remarks: "Az eseményforrás azt jelzi, hogy mi a eseményt naplóz. Ez gyakran az alkalmazás nevét, vagy a az alkalmazás részletes esetén pedig az alkalmazás nagy. Alkalmazásokhoz és szolgáltatásokhoz az alkalmazásnaplóba vagy egy egyéni naplót kell írni. Eszközillesztők kell írni a rendszernaplóba.       Csak meg kell adnia egy eseményforrás, ha az eseménynaplóban talál. Az eseménynapló írása egy bejegyzést, mielőtt regisztrálnia kell az eseményforrás az eseménynaplóban talál események érvényes forrásaként. A naplóbejegyzés írásához a rendszer a megfelelő naplót a megadott adatot elhelyezéséhez kereséséhez használja a Source tulajdonság. Ha az eseménynaplóban olvas, vagy megadhatja a forrás, vagy egy <xref:System.Diagnostics.EventLog.Log%2A>és <xref:System.Diagnostics.EventLog.MachineName%2A>.</xref:System.Diagnostics.EventLog.MachineName%2A> </xref:System.Diagnostics.EventLog.Log%2A>      > [!NOTE] > Nem kötelező megadni a <xref:System.Diagnostics.EventLog.MachineName%2A>Ha csatlakozik a helyi számítógépen a napló.</xref:System.Diagnostics.EventLog.MachineName%2A> Ha nem adja meg a <xref:System.Diagnostics.EventLog.MachineName%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.MachineName%2A>       És <xref:System.Diagnostics.EventLog.WriteEvent%2A> <xref:System.Diagnostics.EventLog.WriteEntry%2A>beírni az eseményeket az eseménynaplóba.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.WriteEvent%2A> Meg kell adnia egy eseményforrás beírni az eseményeket; Hozzon létre és az eseményforrás a forrással első bejegyzés írása előtt konfigurálnia kell.       Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       Az Eseménynapló meglévő vagy új Eseménynapló eseményforrást hozhat létre. Amikor létrehoz egy új új Eseménynapló forrása, a rendszer regisztrálja, amellyel bejelentkezik a forrást, de a napló nem jön létre, csak az első bejegyzés beíródik azt.       A forrás a helyi számítógépen; egyedinek kell lennie. egy új adatforrás neve nem egyezhet meg, egy meglévő adatforrás neve, vagy egy meglévő eseménynaplónevet. Minden forrás csak egy eseménynapló írhat egyszerre; azonban az alkalmazás segítségével több forrásból több eseménynaplók írni. Az alkalmazás például szükség lehet a különböző eseménynaplók vagy a különböző erőforrás-fájlok több forrásból.       Ha módosítja az érték, a <xref:System.Diagnostics.EventLog>az regisztrálva van, amely le van zárva, és összes esemény leíró kiadásakor.</xref:System.Diagnostics.EventLog>       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>       Módosítsa a konfigurációs adatait egy meglévő forrás-, törölje az adatforrást, és akkor hozza létre az új konfigurációval. Ha egyéb alkalmazások és összetevők a meglévő forrást használja, hozzon létre egy új forrásból a meglévő forrás törlése helyett a frissített konfigurációt.      > [!NOTE] > Ha egy forrás leképezése már megtörtént a naplóba, és új naplóba való megfelelteti, újra kell indítania a számítógépet a módosítások életbe léptetéséhez."
  example:
  - "The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.  \n  \n [!code-cs[Classic EventLog.Source Example#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_18_1.cs)]\n [!code-vb[Classic EventLog.Source Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_18_1.vb)]\n [!code-cpp[Classic EventLog.Source Example#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_18_1.cpp)]"
  syntax:
    content: public string Source { get; set; }
    return:
      type: System.String
      description: "A név regisztrálva az a eseménynapló-bejegyzések forrásaként. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.EventLog.Source*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A forrás nevét eredményezi egy beállításkulcs elérési útját 254 karakternél hosszabb."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.SourceExists(System.String)
  id: SourceExists(System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: SourceExists(String)
  nameWithType: EventLog.SourceExists(String)
  fullName: System.Diagnostics.EventLog.SourceExists(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Meghatározza, hogy egy eseményforrás regisztrálva van-e a helyi számítógépen."
  remarks: "Ez a módszer segítségével ellenőrizze, hogy létezik-e az eseményforrás a helyi számítógépen. Ha meg szeretné határozni, hogy létezik-e a napló a helyi számítógépen, használjon <xref:System.Diagnostics.EventLog.Exists%2A>.</xref:System.Diagnostics.EventLog.Exists%2A>       Ez a módszer a beállításjegyzék fér hozzá, mert a megfelelő engedélyekkel kell rendelkeznie a helyi számítógépen; Ellenkező esetben a <xref:System.Security.SecurityException>fog jelezni.</xref:System.Security.SecurityException>      > [!NOTE] > Eseményforrás Windows Vista és újabb vagy Windows Server 2003 megkereséséhez, rendszergazdai jogosultságokkal kell rendelkeznie.   >> Ezt a követelményt oka, hogy annak megállapításához, hogy a forrás egyedi biztonsági, beleértve az összes Eseménynapló kell keresni. Kezdve a Windows Vista, felhasználók nem rendelkeznek hozzáféréssel a biztonsági napló; ezért egy <xref:System.Security.SecurityException>vált ki.</xref:System.Security.SecurityException>   >> Kezdve a Windows Vista felhasználói fiókok felügyelete (UAC) meghatározza, hogy a felhasználói jogosultságokkal. Ha a beépített Rendszergazdák csoport tagja, két futásidejű jogkivonatot kapott: egy általános jogú felhasználói jogkivonat és egy rendszergazdai hozzáférési jogkivonatot. Alapértelmezés szerint áll az általános jogú felhasználói szerepkörben. Végrehajtani a teljesítményszámlálók hozzáférő kódot, akkor kell először emelheti a jogosultságokat az általános jogú felhasználó rendszergazda. Ehhez kattintson a jobb gombbal az alkalmazás ikonja, és jelzi, hogy szeretné-e rendszergazdai az alkalmazás indításakor.      > [!NOTE] > Olyan szolgáltatás, amely végrehajtja az alatt a <xref:System.ServiceProcess.ServiceAccount>fiók nem rendelkezik a metódus végrehajtásához szükséges jogosultságokkal.</xref:System.ServiceProcess.ServiceAccount> A megoldás, hogy ellenőrizze, hogy a forrás létezik a <xref:System.ServiceProcess.ServiceInstaller>, és ha nem létezik, a telepítő a forrás létrehozásához.</xref:System.ServiceProcess.ServiceInstaller>       Nem adhat új forrás ugyanazon a számítógépen egy meglévő forrás nevére, mert ehhez a módszerhez megkísérlése előtt hívására <xref:System.Diagnostics.EventLog.CreateEventSource%2A>annak érdekében, hogy a megadott névvel forrás `source` még nem létezik a helyi számítógépen.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> A `source` paraméter nincs a kis-és nagybetűket."
  example:
  - "The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.  \n  \n [!code-cs[Classic EventLog.Source Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_14_1.cs)]\n [!code-vb[Classic EventLog.Source Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_14_1.vb)]\n [!code-cpp[Classic EventLog.Source Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_14_1.cpp)]"
  syntax:
    content: public static bool SourceExists (string source);
    parameters:
    - id: source
      type: System.String
      description: "A forrás neve."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az eseményforrás regisztrálva van a helyi számítógépen; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLog.SourceExists*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code>source</code>nem található, de akár az összeset az eseménynaplók nem lehet keresni."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.SourceExists(System.String,System.String)
  id: SourceExists(System.String,System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: SourceExists(String,String)
  nameWithType: EventLog.SourceExists(String,String)
  fullName: System.Diagnostics.EventLog.SourceExists(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Meghatározza, hogy egy eseményforrás regisztrálva van-e az adott számítógépen."
  remarks: "Ez a módszer segítségével ellenőrizze, hogy létezik-e az eseményforrás a megadott számítógépen a `machineName` paraméter. Ha meg szeretné határozni, hogy létezik-e a napló a megadott számítógépen, használjon <xref:System.Diagnostics.EventLog.Exists%2A>.</xref:System.Diagnostics.EventLog.Exists%2A>       Ez a módszer a beállításjegyzék fér hozzá, mert a megfelelő engedélyekkel kell rendelkeznie a megadott kiszolgálón. Ellenkező esetben a <xref:System.Security.SecurityException>fog jelezni.</xref:System.Security.SecurityException>      > [!NOTE] > Eseményforrás Windows Vista és újabb vagy Windows Server 2003 megkereséséhez, rendszergazdai jogosultságokkal kell rendelkeznie.   >> Ezt a követelményt oka, hogy annak megállapításához, hogy a forrás egyedi biztonsági, beleértve az összes Eseménynapló kell keresni. Kezdve a Windows Vista, felhasználók nem rendelkeznek hozzáféréssel a biztonsági napló; ezért egy <xref:System.Security.SecurityException>vált ki.</xref:System.Security.SecurityException>   >> Kezdve a Windows Vista felhasználói fiókok felügyelete (UAC) meghatározza, hogy a felhasználói jogosultságokkal. Ha a beépített Rendszergazdák csoport tagja, két futásidejű jogkivonatot kapott: egy általános jogú felhasználói jogkivonat és egy rendszergazdai hozzáférési jogkivonatot. Alapértelmezés szerint áll az általános jogú felhasználói szerepkörben. Végrehajtani a teljesítményszámlálók hozzáférő kódot, akkor kell először emelheti a jogosultságokat az általános jogú felhasználó rendszergazda. Ehhez kattintson a jobb gombbal az alkalmazás ikonja, és jelzi, hogy szeretné-e rendszergazdai az alkalmazás indításakor.      > [!NOTE] > Olyan szolgáltatás, amely végrehajtja az alatt a <xref:System.ServiceProcess.ServiceAccount>fiók nem rendelkezik a metódus végrehajtásához szükséges jogosultságokkal.</xref:System.ServiceProcess.ServiceAccount> A megoldás, hogy ellenőrizze, hogy a forrás létezik a <xref:System.ServiceProcess.ServiceInstaller>, és ha nem létezik, a telepítő a forrás létrehozásához.</xref:System.ServiceProcess.ServiceInstaller>       Nem adhat új forrás ugyanazon a számítógépen egy meglévő forrás nevére, mert ehhez a módszerhez megkísérlése előtt hívására <xref:System.Diagnostics.EventLog.CreateEventSource%2A>annak érdekében, hogy a megadott névvel forrás `source` nem létezik a számítógépen.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> A `source` és `machineName` paraméterei nem kis-és nagybetűket.       <xref:System.Diagnostics.EventLog.SourceExists%2A>van egy `static` metódust, így azt nem hívható meg az osztály a.</xref:System.Diagnostics.EventLog.SourceExists%2A> Nincs szükség <xref:System.Diagnostics.EventLog> <xref:System.Diagnostics.EventLog.SourceExists%2A>.</xref:System.Diagnostics.EventLog.SourceExists%2A> hívására</xref:System.Diagnostics.EventLog> példányának létrehozása"
  example:
  - "The following example creates the source `MySource` on the computer `MyServer`, and writes an entry to the event log `MyNewLog`.  \n  \n [!code-cpp[Classic EventLog.SourceExists1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_16_1.cpp)]\n [!code-cs[Classic EventLog.SourceExists1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_16_1.cs)]\n [!code-vb[Classic EventLog.SourceExists1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_16_1.vb)]"
  syntax:
    content: public static bool SourceExists (string source, string machineName);
    parameters:
    - id: source
      type: System.String
      description: "A forrás neve."
    - id: machineName
      type: System.String
      description: "A nevet a számítógépnek, amelyre meg, vagy &quot;.&quot; a helyi számítógépen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az eseményforrás regisztrálva van az adott számítógépen; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLog.SourceExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>machineName</code>Érvénytelen van."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code>source</code>nem található, de akár az összeset az eseménynaplók nem lehet keresni."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.SynchronizingObject
  id: SynchronizingObject
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: SynchronizingObject
  nameWithType: EventLog.SynchronizingObject
  fullName: System.Diagnostics.EventLog.SynchronizingObject
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a következtében kiadott eseménykezelő-hívások átadásra való előkészítéséhez használt objektum egy <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> esemény írása bejegyzés."
  remarks: "Ha SynchronizingObject van `null`, módszerek kezelése a <xref:System.Diagnostics.EventLog.EntryWritten>eseményt a rendszer szál készletéből szálon nevezzük.</xref:System.Diagnostics.EventLog.EntryWritten> A rendszerkészletek szál további információkért lásd: <xref:System.Threading.ThreadPool>.</xref:System.Threading.ThreadPool>       Ha a <xref:System.Diagnostics.EventLog.EntryWritten>eseményt kezeli a vizuális Windows Forms összetevő, például egy gombra, a rendszer szálkészlet általi eléréséhez szükséges az összetevő nem működik, vagy kivétel eredményezhet.</xref:System.Diagnostics.EventLog.EntryWritten> Windows Forms komponens, amely azt eredményezi, a metódusok kezelése SynchronizingObject beállításával elkerüléséhez a <xref:System.Diagnostics.EventLog.EntryWritten>esemény-összetevő létrehozásának időpontja elemmel azonos szálban kell meghívni.</xref:System.Diagnostics.EventLog.EntryWritten>       Ha a <xref:System.Diagnostics.EventLog>belül használt [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)] Windows Forms-tervezőben, SynchronizingObject értéke automatikusan a vezérlőt tartalmazó a <xref:System.Diagnostics.EventLog>.</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog> Például, ha egy <xref:System.Diagnostics.EventLog>a Form1 tervezőjét (amely örököl <xref:System.Windows.Forms.Form>) SynchronizingObject tulajdonságának <xref:System.Diagnostics.EventLog>Form1 példányának értékre van állítva.</xref:System.Diagnostics.EventLog> </xref:System.Windows.Forms.Form> </xref:System.Diagnostics.EventLog>"
  syntax:
    content: public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
    return:
      type: System.ComponentModel.ISynchronizeInvoke
      description: "A <xref href=&quot;System.ComponentModel.ISynchronizeInvoke&quot;> </xref> következtében kiadott eseménykezelő hívások átadásra való előkészítéséhez használt egy <xref href=&quot;System.Diagnostics.EventLog.EntryWritten&quot;> </xref> az Eseménynapló azonosítójú esemény."
  overload: System.Diagnostics.EventLog.SynchronizingObject*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String)
  id: WriteEntry(System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String)
  nameWithType: EventLog.WriteEntry(String)
  fullName: System.Diagnostics.EventLog.WriteEntry(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Információ típusa, az adott üzenethez szöveggel bejegyzést ír az eseménynaplóban talál."
  remarks: "Ezt a módszert használja az információt bejegyzést írni az eseménynaplóba, a társított <xref:System.Diagnostics.EventLog>példány.</xref:System.Diagnostics.EventLog> Ha meg szeretné határozni a bármely más <xref:System.Diagnostics.EventLogEntryType>használjon egy másik többszörös definíciót <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLogEntryType>      > [!NOTE] > A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet.       Meg kell adni a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság a- <xref:System.Diagnostics.EventLog>összetevő ahhoz, hogy a napló bejegyzések</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell.       Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       Ha a forrás szerepel a <xref:System.Diagnostics.EventLog.Source%2A>az e tulajdonság <xref:System.Diagnostics.EventLog>-példány nincs regisztrálva a számítógépen, amely a összetevő ír, <xref:System.Diagnostics.EventLog.WriteEntry%2A>hívások <xref:System.Diagnostics.EventLog.CreateEventSource%2A>és regisztrálja a forrás.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A>      > [!NOTE] > Ha nincs megadva egy <xref:System.Diagnostics.EventLog.MachineName%2A>a a <xref:System.Diagnostics.EventLog>hívása előtt példány <xref:System.Diagnostics.EventLog.CreateEventSource%2A>vagy <xref:System.Diagnostics.EventLog.WriteEntry%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.MachineName%2A>       Ha a rendszer a <xref:System.Diagnostics.EventLog.Source%2A>és <xref:System.Diagnostics.EventLog.WriteEntry%2A>a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság nincs beállítva a <xref:System.Diagnostics.EventLog>példányt, a napló alapértelmezés szerint a alkalmazásnaplója tartalmazza.</xref:System.Diagnostics.EventLog> a</xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> hívás keresztül</xref:System.Diagnostics.EventLog.Source%2A> kell-e      > [!NOTE] > Nagy része a fent felsorolt kivételeket a <xref:System.Diagnostics.EventLog.Source%2A>.</xref:System.Diagnostics.EventLog.Source%2A> regisztrációján során hibák által előállított       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Bejegyzést írni egy távoli számítógépen, ha az üzenet (a szöveges karakterlánc) értéke nem lehet várt Ha a távoli számítógépen nem fut a .NET-keretrendszer.      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél."
  example:
  - "The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.  \n  \n [!code-cs[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_7_1.cs)]\n [!code-cpp[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_7_1.cpp)]\n [!code-vb[Classic EventLog.CreateEventSource Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_7_1.vb)]"
  syntax:
    content: public void WriteEntry (string message);
    parameters:
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Diagnostics.EventLog.Source*> property of the <xref href=\"System.Diagnostics.EventLog\"></xref> has not been set.  \n  \n -or-  \n  \n The method attempted to register a new event source, but the computer name in <xref:System.Diagnostics.EventLog.MachineName*> is not valid.  \n  \n \\- or -  \n  \n The source is already registered for a different event log.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)
  id: WriteEntry(System.String,System.Diagnostics.EventLogEntryType)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,EventLogEntryType)
  nameWithType: EventLog.WriteEntry(String,EventLogEntryType)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,EventLogEntryType)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy hiba, figyelmeztetés, információ, sikeres műveletek naplózása vagy hiba naplóbejegyzés az adott üzenethez szöveggel ír az eseménynaplóba."
  remarks: "Ezt a módszert használja a megadott <xref:System.Diagnostics.EventLogEntryType>az eseménynaplóba</xref:System.Diagnostics.EventLogEntryType> a bejegyzés A `type` ikon és a napló az Eseménynapló típusú oszlopban lévő szöveget jelzi.      > [!NOTE] > A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet.       Meg kell adni a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság a- <xref:System.Diagnostics.EventLog>összetevő ahhoz, hogy a napló bejegyzések</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell.       Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       Ha a forrás szerepel a <xref:System.Diagnostics.EventLog.Source%2A>az e tulajdonság <xref:System.Diagnostics.EventLog>-példány nincs regisztrálva a számítógépen, amely a összetevő ír, <xref:System.Diagnostics.EventLog.WriteEntry%2A>hívások <xref:System.Diagnostics.EventLog.CreateEventSource%2A>és regisztrálja a forrás.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A>      > [!NOTE] > Ha nincs megadva egy <xref:System.Diagnostics.EventLog.MachineName%2A>a a <xref:System.Diagnostics.EventLog>hívása előtt példány <xref:System.Diagnostics.EventLog.CreateEventSource%2A>vagy <xref:System.Diagnostics.EventLog.WriteEntry%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.MachineName%2A>       Ha a rendszer a <xref:System.Diagnostics.EventLog.Source%2A>és <xref:System.Diagnostics.EventLog.WriteEntry%2A>a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság nincs beállítva a <xref:System.Diagnostics.EventLog>példányt, a napló alapértelmezés szerint a alkalmazásnaplója tartalmazza.</xref:System.Diagnostics.EventLog> a</xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> hívás keresztül</xref:System.Diagnostics.EventLog.Source%2A> kell-e      > [!NOTE] > Fent felsorolt sok kivétel következik be, a <xref:System.Diagnostics.EventLog.Source%2A>.</xref:System.Diagnostics.EventLog.Source%2A> regisztrálása során hibák által előállított       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Bejegyzést írni egy távoli számítógépen, ha az üzenet (a szöveges karakterlánc) értéke nem lehet várt Ha a távoli számítógépen nem fut a .NET-keretrendszer.      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél."
  example:
  - "The following example writes a warning entry to an event log, \"MyNewLog\", on the local computer.  \n  \n [!code-cpp[Classic EventLog.WriteEntry2 Example#1](~/add/codesnippet/cpp/19aeba79-224e-4604-90d9-_1.cpp)]\n [!code-cs[Classic EventLog.WriteEntry2 Example#1](~/add/codesnippet/csharp/19aeba79-224e-4604-90d9-_1.cs)]\n [!code-vb[Classic EventLog.WriteEntry2 Example#1](~/add/codesnippet/visualbasic/19aeba79-224e-4604-90d9-_1.vb)]"
  syntax:
    content: public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type);
    parameters:
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
    - id: type
      type: System.Diagnostics.EventLogEntryType
      description: "Egy a <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> értékeket."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Diagnostics.EventLog.Source*> property of the <xref href=\"System.Diagnostics.EventLog\"></xref> has not been set.  \n  \n -or-  \n  \n The method attempted to register a new event source, but the computer name in <xref:System.Diagnostics.EventLog.MachineName*> is not valid.  \n  \n \\- or -  \n  \n The source is already registered for a different event log.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>type</code>Érvénytelen <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String)
  id: WriteEntry(System.String,System.String)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,String)
  nameWithType: EventLog.WriteEntry(String,String)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott üzenet szöveggel információkat típus bejegyzést ír az eseménynaplót, a megadott forrás regisztrált az."
  remarks: "Ezt a módszert információk bejegyzést írni az eseménynaplót, az olyan forráshoz, amely már regisztrálva van a megfelelő naplót egy esemény forrásaként. Ha meg szeretné határozni a bármely más <xref:System.Diagnostics.EventLogEntryType>használjon egy másik többszörös definíciót <xref:System.Diagnostics.EventLog.WriteEntry%2A>.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLogEntryType>       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél.   >> A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet."
  example:
  - "The following example creates the source `MySource` if it does not already exist, and writes an entry to the event log `MyNewLog`.  \n  \n [!code-cpp[Classic EventLog.WriteEntry1 Example#1](~/add/codesnippet/cpp/m-system.diagnostics.eve_3_1.cpp)]\n [!code-cs[Classic EventLog.WriteEntry1 Example#1](~/add/codesnippet/csharp/m-system.diagnostics.eve_3_1.cs)]\n [!code-vb[Classic EventLog.WriteEntry1 Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.eve_3_1.vb)]"
  syntax:
    content: public static void WriteEntry (string source, string message);
    parameters:
    - id: source
      type: System.String
      description: "A forrás, amellyel az alkalmazás regisztrálva lesz a megadott számítógépen."
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>source</code> value is an empty string (\"\").  \n  \n \\- or -  \n  \n The <code>source</code> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)
  id: WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,EventLogEntryType,Int32)
  nameWithType: EventLog.WriteEntry(String,EventLogEntryType,Int32)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,EventLogEntryType,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott üzenet szövegeket és az alkalmazás által meghatározott eseményazonosító bejegyzést ír az eseménynaplóba."
  remarks: "Ezt a módszert használja, az alkalmazás által meghatározott bejegyzés `eventID` az eseménynaplóban talál. A `eventID` együtt a forrás egyedi módon azonosítja az egy eseményt. Minden alkalmazás saját számozott események és a leíró karakterláncát, amelyhez leképezik definiálhat. Esemény megjelenítők adhat megérteni a hibával, és milyen műveleteket kell elvégezni felajánlja a felhasználónak a karakterlánc-értékek megjelenítése.      > [!NOTE] > A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet.       Az eseményazonosító kívül megadhat egy <xref:System.Diagnostics.EventLogEntryType>az esemény írása az eseménynaplóba.</xref:System.Diagnostics.EventLogEntryType> A `type` ikon és a napló az Eseménynapló típusú oszlopban lévő szöveget jelzi. Ez a paraméter azt jelzi, hogy az eseménytípus hiba, figyelmeztetés, információ, sikeres vagy sikertelen események naplózása.       Meg kell adni a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság a- <xref:System.Diagnostics.EventLog>összetevő ahhoz, hogy a napló bejegyzések</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell.       Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       Ha a forrás szerepel a <xref:System.Diagnostics.EventLog.Source%2A>az e tulajdonság <xref:System.Diagnostics.EventLog>-példány nincs regisztrálva a számítógépen, amely a összetevő ír, <xref:System.Diagnostics.EventLog.WriteEntry%2A>hívások <xref:System.Diagnostics.EventLog.CreateEventSource%2A>és regisztrálja a forrás.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A>      > [!NOTE] > Ha nincs megadva egy <xref:System.Diagnostics.EventLog.MachineName%2A>a a <xref:System.Diagnostics.EventLog>hívása előtt példány <xref:System.Diagnostics.EventLog.CreateEventSource%2A>vagy <xref:System.Diagnostics.EventLog.WriteEntry%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.MachineName%2A>       Ha a rendszer a <xref:System.Diagnostics.EventLog.Source%2A>és <xref:System.Diagnostics.EventLog.WriteEntry%2A>a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság nincs beállítva a <xref:System.Diagnostics.EventLog>példányt, a napló alapértelmezés szerint a alkalmazásnaplója tartalmazza.</xref:System.Diagnostics.EventLog> a</xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> hívás keresztül</xref:System.Diagnostics.EventLog.Source%2A> kell-e      > [!NOTE] > Fent felsorolt sok kivétel következik be, a <xref:System.Diagnostics.EventLog.Source%2A>.</xref:System.Diagnostics.EventLog.Source%2A> regisztrálása során hibák által előállított       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Bejegyzést írni egy távoli számítógépen, ha az üzenet (a szöveges karakterlánc) értéke nem lehet várt Ha a távoli számítógépen nem fut a .NET-keretrendszer.      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél."
  example:
  - >-
    [!code-cpp[EventLog_WriteEntry_1_3#3](~/add/codesnippet/cpp/597042ed-6d84-4ccf-a867-_1.cpp)]
     [!code-cs[EventLog_WriteEntry_1_3#3](~/add/codesnippet/csharp/597042ed-6d84-4ccf-a867-_1.cs)]
     [!code-vb[EventLog_WriteEntry_1_3#3](~/add/codesnippet/visualbasic/597042ed-6d84-4ccf-a867-_1.vb)]
  syntax:
    content: public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID);
    parameters:
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
    - id: type
      type: System.Diagnostics.EventLogEntryType
      description: "Egy a <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> értékeket."
    - id: eventID
      type: System.Int32
      description: "Az esemény az alkalmazás-specifikus azonosítója."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Diagnostics.EventLog.Source*> property of the <xref href=\"System.Diagnostics.EventLog\"></xref> has not been set.  \n  \n -or-  \n  \n The method attempted to register a new event source, but the computer name in <xref:System.Diagnostics.EventLog.MachineName*> is not valid.  \n  \n \\- or -  \n  \n The source is already registered for a different event log.  \n  \n \\- or -  \n  \n <code>eventID</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>type</code>Érvénytelen <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)
  id: WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,String,EventLogEntryType)
  nameWithType: EventLog.WriteEntry(String,String,EventLogEntryType)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String,EventLogEntryType)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy hiba, figyelmeztetés, információ, sikeres műveletek naplózása vagy hiba naplóbejegyzés az adott üzenethez szöveggel ír az eseménynaplót, a megadott regisztrált eseményforrás az."
  remarks: "Ezt a módszert használja <xref:System.Diagnostics.EventLogEntryType>az eseménynaplóba, a forrás már regisztrálva van a megfelelő napló eseményforrást használatával</xref:System.Diagnostics.EventLogEntryType> megadott bejegyzés A `type` ikon és a napló az Eseménynapló típusú oszlopban lévő szöveget jelzi.      > [!NOTE] > A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet.       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél."
  example:
  - "The following example writes a warning entry to an event log, \"MyNewLog\", on the local computer.  \n  \n [!code-cs[Classic EventLog.WriteEntry3 Example#1](~/add/codesnippet/csharp/c03f903c-8fbd-441f-afe0-_1.cs)]\n [!code-vb[Classic EventLog.WriteEntry3 Example#1](~/add/codesnippet/visualbasic/c03f903c-8fbd-441f-afe0-_1.vb)]\n [!code-cpp[Classic EventLog.WriteEntry3 Example#1](~/add/codesnippet/cpp/c03f903c-8fbd-441f-afe0-_1.cpp)]"
  syntax:
    content: public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type);
    parameters:
    - id: source
      type: System.String
      description: "A forrás, amellyel az alkalmazás regisztrálva lesz a megadott számítógépen."
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
    - id: type
      type: System.Diagnostics.EventLogEntryType
      description: "Egy a <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> értékeket."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>source</code> value is an empty string (\"\").  \n  \n \\- or -  \n  \n The <code>source</code> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>type</code>Érvénytelen <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  id: WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,EventLogEntryType,Int32,Int16)
  nameWithType: EventLog.WriteEntry(String,EventLogEntryType,Int32,Int16)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,EventLogEntryType,Int32,Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott üzenet szövegét, alkalmazás által meghatározott eseményazonosító és alkalmazás által meghatározott kategóriák bejegyzést ír az eseménynaplóba."
  remarks: "Ezt a módszert használja, az alkalmazás által meghatározott bejegyzés `category` az eseménynaplóban talál. Az Eseménynapló használ egy eseményforrás által írt események szűrése a kategóriát. Az Eseménynapló használatával megjelenítheti a kategória numerikus érték, vagy használhat a kategória az erőforrás-azonosítóval egy honosított karakterlánc megjelenítéséhez.      > [!NOTE] > A `category` paraméternek pozitív értéknek kell lennie. Kategória negatív értékek megjelenik egy kiegészítő pozitív számot az Eseménynapló Viewer. Például egy –10 jelenik meg, mint 65,526, mint 65 535 – 1.      > [!NOTE] > A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet.       Az Eseménynapló lokalizált kategóriapéldány karakterláncok megjelenítéséhez kell használnia egy eseményforrás kategória erőforrásfájl konfigurálva, és állítsa be a `category` egy erőforrás-azonosítója a kategória erőforrás fájlban. Ha a következő eseményforrás nem rendelkezik konfigurált kategória erőforrás fájlból, illetve a megadott `category` nem indexeli a kategória erőforrásfájl karakterláncot, akkor az Eseménynapló használatával jeleníti meg, hogy a bejegyzés numerikus kategória értéke. A kategória erőforrásfájl, és a használatával <xref:System.Diagnostics.EventLogInstaller>vagy az <xref:System.Diagnostics.EventSourceCreationData>osztály</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller> az erőforrásfájl karakterláncokhoz kategória darabszámot konfigurálása       A kategória mellett adja meg az eseményt az eseménynaplóba írt esemény azonosítóját. Esemény azonosítók, az eseményforrás, valamint az esemény egyedi azonosítására. Minden alkalmazás saját számozott események és a leíró karakterláncát, amelyhez leképezik definiálhat. Esemény megjelenítők adhat megérteni a hibával, és milyen műveleteket kell elvégezni felajánlja a felhasználónak a karakterlánc-értékek megjelenítése.       Végül egy beállítható <xref:System.Diagnostics.EventLogEntryType>az esemény írása az eseménynaplóba.</xref:System.Diagnostics.EventLogEntryType> A `type` ikon és a napló az Eseménynapló típusú oszlopban lévő szöveget jelzi. Ez a paraméter azt jelzi, hogy az eseménytípus hiba, figyelmeztetés, információ, sikeres vagy sikertelen események naplózása.       Meg kell adni a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság a- <xref:System.Diagnostics.EventLog>összetevő ahhoz, hogy a napló bejegyzések</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell.       Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       Ha a forrás szerepel a <xref:System.Diagnostics.EventLog.Source%2A>az e tulajdonság <xref:System.Diagnostics.EventLog>-példány nincs regisztrálva a számítógépen, amely a összetevő ír, <xref:System.Diagnostics.EventLog.WriteEntry%2A>hívások <xref:System.Diagnostics.EventLog.CreateEventSource%2A>és regisztrálja a forrás.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A>      > [!NOTE] > Ha nincs megadva egy <xref:System.Diagnostics.EventLog.MachineName%2A>a a <xref:System.Diagnostics.EventLog>hívása előtt példány <xref:System.Diagnostics.EventLog.CreateEventSource%2A>vagy <xref:System.Diagnostics.EventLog.WriteEntry%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.MachineName%2A>       Ha a rendszer a <xref:System.Diagnostics.EventLog.Source%2A>és <xref:System.Diagnostics.EventLog.WriteEntry%2A>a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság nincs beállítva a <xref:System.Diagnostics.EventLog>példányt, a napló alapértelmezés szerint a alkalmazásnaplója tartalmazza.</xref:System.Diagnostics.EventLog> a</xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> hívás keresztül</xref:System.Diagnostics.EventLog.Source%2A> kell-e      > [!NOTE] > Fent felsorolt sok kivétel következik be, a <xref:System.Diagnostics.EventLog.Source%2A>.</xref:System.Diagnostics.EventLog.Source%2A> regisztrálása során hibák által előállított       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Bejegyzést írni egy távoli számítógépen, ha az üzenet (a szöveges karakterlánc) értéke nem lehet várt Ha a távoli számítógépen nem fut a .NET-keretrendszer.      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél."
  example:
  - >-
    [!code-cpp[EventLog_WriteEntry_1_3#3](~/add/codesnippet/cpp/b3db94bc-a96c-4168-a8f0-_1.cpp)]
     [!code-cs[EventLog_WriteEntry_1_3#3](~/add/codesnippet/csharp/b3db94bc-a96c-4168-a8f0-_1.cs)]
     [!code-vb[EventLog_WriteEntry_1_3#3](~/add/codesnippet/visualbasic/b3db94bc-a96c-4168-a8f0-_1.vb)]
  syntax:
    content: public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);
    parameters:
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
    - id: type
      type: System.Diagnostics.EventLogEntryType
      description: "Egy a <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> értékeket."
    - id: eventID
      type: System.Int32
      description: "Az esemény az alkalmazás-specifikus azonosítója."
    - id: category
      type: System.Int16
      description: "Az alkalmazás-specifikus alkategória az üzenethez társított."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Diagnostics.EventLog.Source*> property of the <xref href=\"System.Diagnostics.EventLog\"></xref> has not been set.  \n  \n -or-  \n  \n The method attempted to register a new event source, but the computer name in <xref:System.Diagnostics.EventLog.MachineName*> is not valid.  \n  \n \\- or -  \n  \n The source is already registered for a different event log.  \n  \n \\- or -  \n  \n <code>eventID</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>type</code>Érvénytelen <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)
  id: WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,String,EventLogEntryType,Int32)
  nameWithType: EventLog.WriteEntry(String,String,EventLogEntryType,Int32)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String,EventLogEntryType,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott üzenet szövege és alkalmazás által meghatározott eseményazonosító bejegyzést ír az eseménynaplót, az a megadott regisztrált esemény forrását."
  remarks: "Ezt a módszert használja, az alkalmazás által meghatározott bejegyzés `eventID` a megfelelő naplót eseményforrást már használja egy adatforrás regisztrálva az eseménynaplóban talál. A `eventID`, és a forrás egyedi módon azonosítja az egy eseményt. Minden alkalmazás saját számozott események és a leíró karakterláncát, amelyhez leképezik definiálhat. Esemény megjelenítők jelent-e ezek a karakterláncok a felhasználó számára, hogy a felhasználó megérteni a hibával, és felajánlja a milyen műveleteket kell elvégezni.      > [!NOTE] > A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet.       Az eseményazonosító, ez <xref:System.Diagnostics.EventLog.WriteEntry%2A>lehetővé teszi, hogy adjon meg egy <xref:System.Diagnostics.EventLogEntryType>írása az eseménynaplóba az esemény</xref:System.Diagnostics.EventLogEntryType> </xref:System.Diagnostics.EventLog.WriteEntry%2A> túlterhelése mellett A `type` ikon és a napló az Eseménynapló típusú oszlopban lévő szöveget jelzi. Ez a paraméter azt jelzi, hogy az eseménytípus hiba, figyelmeztetés, információ, sikeres vagy sikertelen események naplózása.       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél."
  example:
  - >-
    [!code-cs[EventLog_WriteEntry_4#1](~/add/codesnippet/csharp/2d8498b8-a54d-48c9-9ee7-_1.cs)]
     [!code-cpp[EventLog_WriteEntry_4#1](~/add/codesnippet/cpp/2d8498b8-a54d-48c9-9ee7-_1.cpp)]
     [!code-vb[EventLog_WriteEntry_4#1](~/add/codesnippet/visualbasic/2d8498b8-a54d-48c9-9ee7-_1.vb)]
  syntax:
    content: public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID);
    parameters:
    - id: source
      type: System.String
      description: "A forrás, amellyel az alkalmazás regisztrálva lesz a megadott számítógépen."
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
    - id: type
      type: System.Diagnostics.EventLogEntryType
      description: "Egy a <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> értékeket."
    - id: eventID
      type: System.Int32
      description: "Az esemény az alkalmazás-specifikus azonosítója."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>source</code> value is an empty string (\"\").  \n  \n \\- or -  \n  \n The <code>source</code> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>eventID</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>type</code>Érvénytelen <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])
  id: WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,EventLogEntryType,Int32,Int16,Byte[])
  nameWithType: EventLog.WriteEntry(String,EventLogEntryType,Int32,Int16,Byte[])
  fullName: System.Diagnostics.EventLog.WriteEntry(String,EventLogEntryType,Int32,Int16,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott üzenet szövegét, alkalmazás által meghatározott eseményazonosító és alkalmazás által meghatározott kategóriák bejegyzést ír az eseménynaplóba, és hozzáfűzi a bináris adat az üzenetet."
  remarks: "Ez a túlterhelés használatával alkalmazás által meghatározott esemény-specifikus adatok írása az eseménynaplóba. Az Eseménynapló nem értelmezi ezeket az adatokat; nyers adatok csak a kombinált hexadecimális és a szöveg formátumban jeleníti meg. Használjon takarékosan, esemény-specifikus adatok csak akkor, ha biztos benne, hogy valaki a probléma hibakeresés hasznos lesz többek között. Esemény-specifikus adatok használatával tárolja az adatokat az alkalmazás függetlenül. az Eseménynapló használatával tud feldolgozni. Például akkor sikerült kiírhatja egy megjelenítő kimondottan az események, vagy kiírhatja olyan program, amely megvizsgálja a naplófájlt, és jelentést készít, az esemény-specifikus adatok kapcsolatos információk.       A bináris adatok mellett az alkalmazás által meghatározott kategória és az alkalmazás által meghatározott eseményazonosító is megadhat. Az Eseménynapló használ egy eseményforrás által írt események szűrése a kategóriát. Az Eseménynapló használatával megjelenítheti a kategória numerikus érték, vagy használhat a kategória az erőforrás-azonosítóval egy honosított karakterlánc megjelenítéséhez.      > [!NOTE] > A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet.      > [!NOTE] > A `category` paraméternek pozitív értéknek kell lennie. Kategória negatív értékek megjelenik egy kiegészítő pozitív számot az Eseménynapló Viewer. Például egy –10 jelenik meg, mint 65,526, mint 65 535 – 1.       Az Eseménynapló lokalizált kategóriapéldány karakterláncok megjelenítéséhez kell használnia egy eseményforrás kategória erőforrásfájl konfigurálva, és állítsa be a `category` egy erőforrás-azonosítója a kategória erőforrás fájlban. Ha a következő eseményforrás nem rendelkezik konfigurált kategória erőforrás fájlból, illetve a megadott `category` nem indexeli a kategória erőforrásfájl karakterláncot, akkor az Eseménynapló használatával jeleníti meg, hogy a bejegyzés numerikus kategória értéke. A kategória erőforrásfájl, és a használatával <xref:System.Diagnostics.EventLogInstaller>vagy az <xref:System.Diagnostics.EventSourceCreationData>osztály</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller> az erőforrásfájl karakterláncokhoz kategória darabszámot konfigurálása       Esemény azonosítók, az eseményforrás, valamint az esemény egyedi azonosítására. Minden alkalmazás saját számozott események és a leíró karakterláncát, amelyhez leképezik definiálhat. Esemény megjelenítők adhat megérteni a hibával, és milyen műveleteket kell elvégezni felajánlja a felhasználónak a karakterlánc-értékek megjelenítése.       Végül egy beállítható <xref:System.Diagnostics.EventLogEntryType>az esemény írása az eseménynaplóba.</xref:System.Diagnostics.EventLogEntryType> A `type` ikon és a napló az Eseménynapló típusú oszlopban lévő szöveget jelzi. Ez a paraméter azt jelzi, hogy az eseménytípus hiba, figyelmeztetés, információ, sikeres vagy sikertelen események naplózása.       Meg kell adni a <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság a- <xref:System.Diagnostics.EventLog>összetevő ahhoz, hogy a napló bejegyzések</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell.       Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       Ha a forrás szerepel a <xref:System.Diagnostics.EventLog.Source%2A>az e tulajdonság <xref:System.Diagnostics.EventLog>-példány nincs regisztrálva a számítógépen, amely a összetevő ír, <xref:System.Diagnostics.EventLog.WriteEntry%2A>hívások <xref:System.Diagnostics.EventLog.CreateEventSource%2A>és regisztrálja a forrás.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A>      > [!NOTE] > Ha nincs megadva egy <xref:System.Diagnostics.EventLog.MachineName%2A>a a <xref:System.Diagnostics.EventLog>hívása előtt példány <xref:System.Diagnostics.EventLog.CreateEventSource%2A>vagy <xref:System.Diagnostics.EventLog.WriteEntry%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.WriteEntry%2A> </xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.MachineName%2A>       Ha a rendszer a <xref:System.Diagnostics.EventLog.Source%2A>és <xref:System.Diagnostics.EventLog.WriteEntry%2A>a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság nincs beállítva a <xref:System.Diagnostics.EventLog>példányt, a napló alapértelmezés szerint a alkalmazásnaplója tartalmazza.</xref:System.Diagnostics.EventLog> a</xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog.WriteEntry%2A> hívás keresztül</xref:System.Diagnostics.EventLog.Source%2A> kell-e      > [!NOTE] > Fent felsorolt sok kivétel következik be, a <xref:System.Diagnostics.EventLog.Source%2A>.</xref:System.Diagnostics.EventLog.Source%2A> regisztrálása során hibák által előállított       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Bejegyzést írni egy távoli számítógépen, ha az üzenet (a szöveges karakterlánc) értéke nem lehet várt Ha a távoli számítógépen nem fut a .NET-keretrendszer.      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél."
  example:
  - >-
    [!code-cs[EventLog_WriteEntry_5#1](~/add/codesnippet/csharp/1c6518b6-dc55-4c74-9028-_1.cs)]
     [!code-vb[EventLog_WriteEntry_5#1](~/add/codesnippet/visualbasic/1c6518b6-dc55-4c74-9028-_1.vb)]
     [!code-cpp[EventLog_WriteEntry_5#1](~/add/codesnippet/cpp/1c6518b6-dc55-4c74-9028-_1.cpp)]
  syntax:
    content: public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);
    parameters:
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
    - id: type
      type: System.Diagnostics.EventLogEntryType
      description: "Egy a <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> értékeket."
    - id: eventID
      type: System.Int32
      description: "Az esemény az alkalmazás-specifikus azonosítója."
    - id: category
      type: System.Int16
      description: "Az alkalmazás-specifikus alkategória az üzenethez társított."
    - id: rawData
      type: System.Byte[]
      description: "Bájttömb, amely tárolja a bejegyzéshez tartozó bináris adat."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Diagnostics.EventLog.Source*> property of the <xref href=\"System.Diagnostics.EventLog\"></xref> has not been set.  \n  \n -or-  \n  \n The method attempted to register a new event source, but the computer name in <xref:System.Diagnostics.EventLog.MachineName*> is not valid.  \n  \n \\- or -  \n  \n The source is already registered for a different event log.  \n  \n \\- or -  \n  \n <code>eventID</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>type</code>Érvénytelen <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  id: WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,String,EventLogEntryType,Int32,Int16)
  nameWithType: EventLog.WriteEntry(String,String,EventLogEntryType,Int32,Int16)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String,EventLogEntryType,Int32,Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott üzenet szövegét, alkalmazás által meghatározott eseményazonosító és alkalmazás által meghatározott kategóriák bejegyzést ír az eseménynaplóba, a megadott regisztrált eseményforrás használatával. A <code> category </code> a naplóban szereplő események szűrése az Eseménynapló használatával."
  remarks: "Ezt a módszert használja, az alkalmazás által meghatározott bejegyzés `category` az Eseménynapló használatával olyan forráshoz, amely már regisztrálva van a megfelelő naplót egy esemény forrásaként. Az Eseménynapló használ egy eseményforrás által írt események szűrése a kategóriát. Az Eseménynapló használatával megjelenítheti a kategória numerikus érték, vagy használhat a kategória az erőforrás-azonosítóval egy honosított karakterlánc megjelenítéséhez.      > [!NOTE] > A `category` paraméternek pozitív értéknek kell lennie. Kategória negatív értékek megjelenik egy kiegészítő pozitív számot az Eseménynapló Viewer. Például egy –10 jelenik meg, mint 65,526, mint 65 535 – 1.       Az Eseménynapló lokalizált kategóriapéldány karakterláncok megjelenítéséhez kell használnia egy eseményforrás kategória erőforrásfájl konfigurálva, és állítsa be a `category` egy erőforrás-azonosítója a kategória erőforrás fájlban. Ha a következő eseményforrás nem rendelkezik konfigurált kategória erőforrás fájlból, illetve a megadott `category` nem indexeli a kategória erőforrásfájl karakterláncot, akkor az Eseménynapló használatával jeleníti meg, hogy a bejegyzés numerikus kategória értéke. A kategória erőforrásfájl, és a használatával <xref:System.Diagnostics.EventLogInstaller>vagy az <xref:System.Diagnostics.EventSourceCreationData>osztály</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller> az erőforrásfájl karakterláncokhoz kategória darabszámot konfigurálása       A kategória mellett adja meg az eseményt az eseménynaplóba írt esemény azonosítóját. Esemény azonosítók, az eseményforrás, valamint az esemény egyedi azonosítására. Minden alkalmazás saját számozott események és a leíró karakterláncát, amelyhez leképezik definiálhat. Esemény megjelenítők adhat megérteni a hibával, és milyen műveleteket kell elvégezni felajánlja a felhasználónak a karakterlánc-értékek megjelenítése.       Végül egy beállítható <xref:System.Diagnostics.EventLogEntryType>az esemény írása az eseménynaplóba.</xref:System.Diagnostics.EventLogEntryType> A `type` ikon és a napló az Eseménynapló típusú oszlopban lévő szöveget jelzi. Ez a paraméter azt jelzi, hogy az eseménytípus hiba, figyelmeztetés, információ, sikeres vagy sikertelen események naplózása.       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél.   >> A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet."
  example:
  - >-
    [!code-cpp[EventLog_WriteEntry_1_3#1](~/add/codesnippet/cpp/189fd615-c100-4e72-9c0b-_1.cpp)]
     [!code-cs[EventLog_WriteEntry_1_3#1](~/add/codesnippet/csharp/189fd615-c100-4e72-9c0b-_1.cs)]
     [!code-vb[EventLog_WriteEntry_1_3#1](~/add/codesnippet/visualbasic/189fd615-c100-4e72-9c0b-_1.vb)]
  syntax:
    content: public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);
    parameters:
    - id: source
      type: System.String
      description: "A forrás, amellyel az alkalmazás regisztrálva lesz a megadott számítógépen."
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
    - id: type
      type: System.Diagnostics.EventLogEntryType
      description: "Egy a <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> értékeket."
    - id: eventID
      type: System.Int32
      description: "Az esemény az alkalmazás-specifikus azonosítója."
    - id: category
      type: System.Int16
      description: "Az alkalmazás-specifikus alkategória az üzenethez társított."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>source</code> value is an empty string (\"\").  \n  \n \\- or -  \n  \n The <code>source</code> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>eventID</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>type</code>Érvénytelen <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])
  id: WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEntry(String,String,EventLogEntryType,Int32,Int16,Byte[])
  nameWithType: EventLog.WriteEntry(String,String,EventLogEntryType,Int32,Int16,Byte[])
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String,EventLogEntryType,Int32,Int16,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott üzenet szövegét, alkalmazás által meghatározott eseményazonosító és alkalmazás által meghatározott kategóriák bejegyzést ír az Eseménynapló (a megadott regisztrált eseményforrás segítségével), és hozzáfűzi a bináris adat az üzenetet."
  remarks: "Ehhez a módszerhez az eseménynaplót, és már regisztrálva van a megfelelő naplót eseményforrást a forrás az alkalmazás által meghatározott esemény vonatkozó adatokat írni. Az Eseménynapló nem értelmezi ezeket az adatokat; nyers adatok csak a kombinált hexadecimális és a szöveg formátumban jeleníti meg. Esemény-specifikus adatok felhasználásával takarékosan; Adja hozzá, csak akkor, ha biztos benne, hogy akkor lehet hasznos. Esemény-specifikus adatok használatával tárolja az adatokat az alkalmazás függetlenül. az Eseménynapló használatával tud feldolgozni. Például akkor sikerült kiírhatja egy megjelenítő kimondottan az események, vagy kiírhatja olyan program, amely megvizsgálja a naplófájlt, és jelentést készít, az esemény-specifikus adatok kapcsolatos információk.       A bináris adatok mellett az alkalmazás által meghatározott kategória és az alkalmazás által meghatározott eseményazonosító is megadhat. Az Eseménynapló használ egy eseményforrás által írt események szűrése a kategóriát. Az Eseménynapló használatával megjelenítheti a kategória numerikus érték, vagy használhat a kategória az erőforrás-azonosítóval egy honosított karakterlánc megjelenítéséhez.      > [!NOTE] > A `category` paraméternek pozitív értéknek kell lennie. Kategória negatív értékek megjelenik egy kiegészítő pozitív számot az Eseménynapló Viewer. Például egy –10 65,526, mint 65 535 – 1 néven jelennek meg.       Az Eseménynapló lokalizált kategóriapéldány karakterláncok megjelenítéséhez kell használnia egy eseményforrás kategória erőforrásfájl konfigurálva, és állítsa be a `category` egy erőforrás-azonosítója a kategória erőforrás fájlban. Ha a következő eseményforrás nem rendelkezik konfigurált kategória erőforrás fájlból, illetve a megadott `category` nem indexeli a kategória erőforrásfájl karakterláncot, akkor az Eseménynapló használatával jeleníti meg, hogy a bejegyzés numerikus kategória értéke. A kategória erőforrásfájl, és a használatával <xref:System.Diagnostics.EventLogInstaller>vagy az <xref:System.Diagnostics.EventSourceCreationData>osztály</xref:System.Diagnostics.EventSourceCreationData> </xref:System.Diagnostics.EventLogInstaller> az erőforrásfájl karakterláncokhoz kategória darabszámot konfigurálása       Esemény azonosítók, az eseményforrás együtt az esemény egyedi azonosítására. Minden alkalmazás saját számozott események és a leíró karakterláncát, amelyhez leképezik definiálhat. Esemény megjelenítők adhat megérteni a hibával, és milyen műveleteket kell elvégezni felajánlja a felhasználónak a karakterlánc-értékek megjelenítése.       Végül egy beállítható <xref:System.Diagnostics.EventLogEntryType>az esemény írása az eseménynaplóba.</xref:System.Diagnostics.EventLogEntryType> A `type` ikon és a napló az Eseménynapló típusú oszlopban lévő szöveget jelzi. Ez a paraméter azt jelzi, hogy az eseménytípus hiba, figyelmeztetés, információ, sikeres vagy sikertelen események naplózása.       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódust a megadott karakterlánc közvetlenül ír az eseménynaplóba, akkor használja a honosítható üzenet erőforrásfájl.</xref:System.Diagnostics.EventLog.WriteEntry%2A> Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus beírni az eseményeket honosított üzenet erőforrás-fájllal.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Ha a `message` paraméter NUL karaktert tartalmaz, az üzenet az Eseménynapló megszakadt a NUL karakternél.   >> A `message` karakterlánca nem tartalmazhat %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet."
  example:
  - >-
    [!code-cpp[EventLog_WriteEntry_1_3#2](~/add/codesnippet/cpp/0b90a83a-dcc8-46e6-a8db-_1.cpp)]
     [!code-cs[EventLog_WriteEntry_1_3#2](~/add/codesnippet/csharp/0b90a83a-dcc8-46e6-a8db-_1.cs)]
     [!code-vb[EventLog_WriteEntry_1_3#2](~/add/codesnippet/visualbasic/0b90a83a-dcc8-46e6-a8db-_1.vb)]
  syntax:
    content: public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);
    parameters:
    - id: source
      type: System.String
      description: "A forrás, amellyel az alkalmazás regisztrálva lesz a megadott számítógépen."
    - id: message
      type: System.String
      description: "A karakterláncot a eseménynaplójába írhatja."
    - id: type
      type: System.Diagnostics.EventLogEntryType
      description: "Egy a <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref> értékeket."
    - id: eventID
      type: System.Int32
      description: "Az esemény az alkalmazás-specifikus azonosítója."
    - id: category
      type: System.Int16
      description: "Az alkalmazás-specifikus alkategória az üzenethez társított."
    - id: rawData
      type: System.Byte[]
      description: "Bájttömb, amely tárolja a bejegyzéshez tartozó bináris adat."
  overload: System.Diagnostics.EventLog.WriteEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>source</code> value is an empty string (\"\").  \n  \n \\- or -  \n  \n The <code>source</code> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>eventID</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>type</code>Érvénytelen <xref href=&quot;System.Diagnostics.EventLogEntryType&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])
  id: WriteEvent(System.Diagnostics.EventInstance,System.Object[])
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEvent(EventInstance,Object[])
  nameWithType: EventLog.WriteEvent(EventInstance,Object[])
  fullName: System.Diagnostics.EventLog.WriteEvent(EventInstance,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Honosított bejegyzést ír az eseménynaplóba."
  remarks: "Ezt a módszert a honosított bejegyzést írni az eseménynaplóba. Az esemény tulajdonságai a erőforrás-azonosítók nem karakterlánc-értékekkel adja meg. Az Eseménynapló használatával az erőforrás-azonosítók használatával jeleníti meg a megfelelő karakterláncok <xref:System.Diagnostics.EventLog.Source%2A>.</xref:System.Diagnostics.EventLog.Source%2A> honosított erőforrás-fájlból Erőforrás-azonosítók használatával események írása előtt regisztrálnia kell a forrás a megfelelő erőforrás-fájllal.       A bemeneti `instance` példány eseményüzenet és tulajdonságait határozza meg. Állítsa be a <xref:System.Diagnostics.EventInstance.InstanceId%2A>, a `instance` forrásfájlban üzenetben erőforrás a megadott üzenet bemeneti.</xref:System.Diagnostics.EventInstance.InstanceId%2A> Opcionálisan megadhat a <xref:System.Diagnostics.EventInstance.CategoryId%2A>és <xref:System.Diagnostics.EventInstance.EntryType%2A>, a `instance` beviteli az Eseménynapló-bejegyzés kategória és esemény típusának azonosítására.</xref:System.Diagnostics.EventInstance.EntryType%2A> </xref:System.Diagnostics.EventInstance.CategoryId%2A> A honosított üzenet beszúrása nyelvfüggetlen karakterláncok is megadható. Állítsa be `values` való `null` Ha az esemény nem tartalmazza a behelyettesítési karakterláncok formázási helyőrzőit.       A <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság a- <xref:System.Diagnostics.EventLog>összetevő <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</xref:System.Diagnostics.EventLog.WriteEvent%2A> használata előtt</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> meg kell adni A megadott forrás konfigurálni kell, hogy a napló; honosított bejegyzések írásakor a forrás legalább kell definiált üzenet erőforrásfájl.       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>módszert, ha az alkalmazás ír karakterlánc értékeket közvetlenül az eseménynaplóba.</xref:System.Diagnostics.EventLog.WriteEntry%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Ha egy távoli számítógépre, értékének egy bejegyzést írni az `message` karakterlánc nem lehet várt Ha a távoli számítógépen nem fut a .NET-keretrendszer. Emellett a `message` karakterlánca nem tartalmazza a(z) %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet."
  example:
  - "The following example writes two audit entries to the event log `myNewLog`. The example creates a new event source and a new event log if they do not exist on the local computer. The event message text is specified using a resource identifier in a resource file.  \n  \n [!code-cpp[EventLog_WriteEvent#7](~/add/codesnippet/cpp/6a714dbf-bcbc-4f5a-a8b4-_1.cpp)]\n [!code-vb[EventLog_WriteEvent#7](~/add/codesnippet/visualbasic/6a714dbf-bcbc-4f5a-a8b4-_1.vb)]\n [!code-cs[EventLog_WriteEvent#7](~/add/codesnippet/csharp/6a714dbf-bcbc-4f5a-a8b4-_1.cs)]  \n  \n The example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public void WriteEvent (System.Diagnostics.EventInstance instance, object[] values);
    parameters:
    - id: instance
      type: System.Diagnostics.EventInstance
      description: "Egy <xref href=&quot;System.Diagnostics.EventInstance&quot;> </xref> honosított eseménynapló-bejegyzést képviselő példány."
    - id: values
      type: System.Object[]
      description: "Az üzenet az Eseménynapló-bejegyzés egyesíteni karakterláncokból álló tömb."
  overload: System.Diagnostics.EventLog.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Diagnostics.EventLog.Source*> property of the <xref href=\"System.Diagnostics.EventLog\"></xref> has not been set.  \n  \n -or-  \n  \n The method attempted to register a new event source, but the computer name in <xref:System.Diagnostics.EventLog.MachineName*> is not valid.  \n  \n \\- or -  \n  \n The source is already registered for a different event log.  \n  \n \\- or -  \n  \n <code>instance.InstanceId</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n <code>values</code> has more than 256 elements.  \n  \n \\- or -  \n  \n One of the <code>values</code> elements is longer than 32766 bytes.  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])
  id: WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEvent(EventInstance,Byte[],Object[])
  nameWithType: EventLog.WriteEvent(EventInstance,Byte[],Object[])
  fullName: System.Diagnostics.EventLog.WriteEvent(EventInstance,Byte[],Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "A megadott eseményadatok, üzenet behelyettesítési karakterláncok és társított bináris adatok eseménynapló-bejegyzést ír."
  remarks: "Ezt a módszert egy további eseményspecifikus adatokkal honosított bejegyzést írni az eseménynaplóban talál. Az esemény tulajdonságai a erőforrás-azonosítók nem karakterlánc-értékekkel adja meg. Az Eseménynapló használatával az erőforrás-azonosítók használatával jeleníti meg a megfelelő karakterláncok <xref:System.Diagnostics.EventLog.Source%2A>.</xref:System.Diagnostics.EventLog.Source%2A> honosított erőforrás-fájlból Erőforrás-azonosítók használatával események írása előtt regisztrálnia kell a forrás a megfelelő erőforrás-fájllal.       A bemeneti `instance` példány eseményüzenet és tulajdonságait határozza meg. Állítsa be a <xref:System.Diagnostics.EventInstance.InstanceId%2A>, a `instance` forrásfájlban üzenetben erőforrás a megadott üzenet bemeneti.</xref:System.Diagnostics.EventInstance.InstanceId%2A> Opcionálisan megadhat a <xref:System.Diagnostics.EventInstance.CategoryId%2A>és <xref:System.Diagnostics.EventInstance.EntryType%2A>, a `instance` beviteli az Eseménynapló-bejegyzés kategória és esemény típusának azonosítására.</xref:System.Diagnostics.EventInstance.EntryType%2A> </xref:System.Diagnostics.EventInstance.CategoryId%2A> A honosított üzenet beszúrása nyelvfüggetlen karakterláncok is megadható. Állítsa be `values` való `null` Ha az esemény nem tartalmazza a behelyettesítési karakterláncok formázási helyőrzőit.       Adja meg a bináris adatok egy eseményt, amikor szükséges további információkat a következő eseményhez. Tegyük fel például, a `data` paraméter egy adott hiba információkat tartalmazza. Az Eseménynapló nem értelmezi a vonatkozó esemény adatok; az adatok egy kombinált hexadecimális és a szöveg formátumban jeleníti meg. Esemény-specifikus adatok felhasználásával takarékosan; Adja hozzá, csak akkor, ha biztos benne, hogy akkor lehet hasznos. Esemény-specifikus adatok használatával tárolja az adatokat az alkalmazás függetlenül. az Eseménynapló használatával tud feldolgozni. Például akkor sikerült kiírhatja egy megjelenítő kimondottan az események, vagy kiírhatja olyan program, amely megvizsgálja az eseménynaplóba, és jelentést készít, az esemény-specifikus adatok kapcsolatos információk.       A <xref:System.Diagnostics.EventLog.Source%2A>tulajdonság a- <xref:System.Diagnostics.EventLog>összetevő előtt összetevő <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</xref:System.Diagnostics.EventLog.WriteEvent%2A> használata előtt</xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Source%2A> meg kell adni A megadott forrás konfigurálni kell, hogy a napló; honosított bejegyzések írásakor a forrás legalább kell definiált üzenet erőforrásfájl.       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.      > [!NOTE] > Ha nincs megadva egy <xref:System.Diagnostics.EventLog.MachineName%2A>a a <xref:System.Diagnostics.EventLog>hívása előtt példány <xref:System.Diagnostics.EventLog.WriteEvent%2A>, a helyi számítógépen (&quot;.&quot;) feltételezi.</xref:System.Diagnostics.EventLog.WriteEvent%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.MachineName%2A>       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>módszert, ha az alkalmazás ír karakterlánc értékeket közvetlenül az eseménynaplóba.</xref:System.Diagnostics.EventLog.WriteEntry%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>      > [!NOTE] > Ha egy távoli számítógépre, értékének egy bejegyzést írni az `message` karakterlánc nem lehet várt Ha a távoli számítógépen nem fut a .NET-keretrendszer. Emellett a `message` karakterlánca nem tartalmazza a(z) %*n*, ahol *n* nem egész számnak (például: %1), mert az Eseménynapló beszúrási karakterláncként kezeli. Az Internet Protocol, 6 (IPv6) címet tartalmazhat ez verzió karaktersorozat, mert nem tud egy IPv6-címet tartalmazó esemény üzenetet."
  example:
  - "The following example writes two audit entries to the event log `myNewLog`. The example creates a new event source and a new event log if they do not exist on the local computer. The event message text is specified using a resource identifier in a resource file.  \n  \n [!code-cpp[EventLog_WriteEvent#7](~/add/codesnippet/cpp/9c997f17-0108-4c5c-b894-_1.cpp)]\n [!code-vb[EventLog_WriteEvent#7](~/add/codesnippet/visualbasic/9c997f17-0108-4c5c-b894-_1.vb)]\n [!code-cs[EventLog_WriteEvent#7](~/add/codesnippet/csharp/9c997f17-0108-4c5c-b894-_1.cs)]  \n  \n The example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public void WriteEvent (System.Diagnostics.EventInstance instance, byte[] data, object[] values);
    parameters:
    - id: instance
      type: System.Diagnostics.EventInstance
      description: "Egy <xref href=&quot;System.Diagnostics.EventInstance&quot;> </xref> honosított eseménynapló-bejegyzést képviselő példány."
    - id: data
      type: System.Byte[]
      description: "Bájttömb, amely tárolja a bejegyzéshez tartozó bináris adat."
    - id: values
      type: System.Object[]
      description: "Az üzenet az Eseménynapló-bejegyzés egyesíteni karakterláncokból álló tömb."
  overload: System.Diagnostics.EventLog.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Diagnostics.EventLog.Source*> property of the <xref href=\"System.Diagnostics.EventLog\"></xref> has not been set.  \n  \n -or-  \n  \n The method attempted to register a new event source, but the computer name in <xref:System.Diagnostics.EventLog.MachineName*> is not valid.  \n  \n \\- or -  \n  \n The source is already registered for a different event log.  \n  \n \\- or -  \n  \n <code>instance.InstanceId</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n <code>values</code> has more than 256 elements.  \n  \n \\- or -  \n  \n One of the <code>values</code> elements is longer than 32766 bytes.  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])
  id: WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEvent(String,EventInstance,Object[])
  nameWithType: EventLog.WriteEvent(String,EventInstance,Object[])
  fullName: System.Diagnostics.EventLog.WriteEvent(String,EventInstance,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Az adott eseményt az Eseménynapló-bejegyzés írja az adatok és az üzenet behelyettesítési karakterláncok, a megadott regisztrált forrás használatával."
  remarks: "Ezt a módszert a honosított bejegyzést írni az eseménynaplóba, a forrás már regisztrálva van a megfelelő naplót eseményforrást a használatával. Az esemény tulajdonságai a erőforrás-azonosítók nem karakterlánc-értékekkel adja meg. Az Eseménynapló használatával az erőforrás-azonosítók használatával jeleníti meg a megfelelő karakterláncok a forrás lokalizált erőforrást fájlból. Erőforrás-azonosítók használatával események írása előtt regisztrálnia kell a forrás a megfelelő erőforrás-fájllal.       A bemeneti `instance` példány eseményüzenet és tulajdonságait határozza meg. Állítsa be a <xref:System.Diagnostics.EventInstance.InstanceId%2A>, a `instance` forrásfájlban üzenetben erőforrás a megadott üzenet bemeneti.</xref:System.Diagnostics.EventInstance.InstanceId%2A> Opcionálisan megadhat a <xref:System.Diagnostics.EventInstance.CategoryId%2A>és <xref:System.Diagnostics.EventInstance.EntryType%2A>, a `instance` beviteli az Eseménynapló-bejegyzés kategória és esemény típusának azonosítására.</xref:System.Diagnostics.EventInstance.EntryType%2A> </xref:System.Diagnostics.EventInstance.CategoryId%2A> A honosított üzenet beszúrása nyelvfüggetlen karakterláncok is megadható. Állítsa be `values` való `null` Ha az esemény nem tartalmazza a behelyettesítési karakterláncok formázási helyőrzőit.       A megadott forrás regisztrálnia kell az Eseménynapló <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</xref:System.Diagnostics.EventLog.WriteEvent%2A> használata előtt A megadott forrás konfigurálni kell, hogy a napló; honosított bejegyzések írásakor a forrás legalább kell definiált üzenet erőforrásfájl.       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>módszert, ha az alkalmazás ír karakterlánc értékeket közvetlenül az eseménynaplóba.</xref:System.Diagnostics.EventLog.WriteEntry%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>"
  example:
  - "The following example writes an informational event entry and a warning event entry to an existing event log. The event message text is specified using a resource identifier in a resource file. The example assumes the corresponding resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#8](~/add/codesnippet/cpp/a57d89b3-94d2-4b9a-803c-_1.cpp)]\n [!code-vb[EventLog_WriteEvent#8](~/add/codesnippet/visualbasic/a57d89b3-94d2-4b9a-803c-_1.vb)]\n [!code-cs[EventLog_WriteEvent#8](~/add/codesnippet/csharp/a57d89b3-94d2-4b9a-803c-_1.cs)]  \n  \n The example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, object[] values);
    parameters:
    - id: source
      type: System.String
      description: "Az alkalmazás a megadott számítógépen regisztrált Eseményforrás neve."
    - id: instance
      type: System.Diagnostics.EventInstance
      description: "Egy <xref href=&quot;System.Diagnostics.EventInstance&quot;> </xref> honosított eseménynapló-bejegyzést képviselő példány."
    - id: values
      type: System.Object[]
      description: "Az üzenet az Eseménynapló-bejegyzés egyesíteni karakterláncokból álló tömb."
  overload: System.Diagnostics.EventLog.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>source</code> value is an empty string (\"\").  \n  \n \\- or -  \n  \n The <code>source</code> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>instance.InstanceId</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n <code>values</code> has more than 256 elements.  \n  \n \\- or -  \n  \n One of the <code>values</code> elements is longer than 32766 bytes.  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
- uid: System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])
  id: WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])
  parent: System.Diagnostics.EventLog
  langs:
  - csharp
  name: WriteEvent(String,EventInstance,Byte[],Object[])
  nameWithType: EventLog.WriteEvent(String,EventInstance,Byte[],Object[])
  fullName: System.Diagnostics.EventLog.WriteEvent(String,EventInstance,Byte[],Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Egy esemény bejegyzést naplóz az adott esemény adatokkal, üzenet behelyettesítési karakterláncok, és a bináris adatok, és használja a megadott regisztrálva eseményforrás ír."
  remarks: "Ezt a módszert egy további eseményspecifikus adatokkal honosított bejegyzést írni az eseménynaplót, az már regisztrálva van a megfelelő naplót eseményforrást a forrás. Az esemény tulajdonságai a erőforrás-azonosítók nem karakterlánc-értékekkel adja meg. Az Eseménynapló használatával az erőforrás-azonosítók használatával jeleníti meg a megfelelő karakterláncok a forrás lokalizált erőforrást fájlból. Erőforrás-azonosítók használatával események írása előtt regisztrálnia kell a forrás a megfelelő erőforrás-fájllal.       A bemeneti `instance` példány eseményüzenet és tulajdonságait határozza meg. Állítsa be a <xref:System.Diagnostics.EventInstance.InstanceId%2A>, a `instance` forrásfájlban üzenetben erőforrás a megadott üzenet bemeneti.</xref:System.Diagnostics.EventInstance.InstanceId%2A> Opcionálisan megadhat a <xref:System.Diagnostics.EventInstance.CategoryId%2A>és <xref:System.Diagnostics.EventInstance.EntryType%2A>, a `instance` beviteli az Eseménynapló-bejegyzés kategória és esemény típusának azonosítására.</xref:System.Diagnostics.EventInstance.EntryType%2A> </xref:System.Diagnostics.EventInstance.CategoryId%2A> A honosított üzenet beszúrása nyelvfüggetlen karakterláncok is megadható. Állítsa be `values` való `null` Ha az esemény nem tartalmazza a behelyettesítési karakterláncok formázási helyőrzőit.       Adja meg a bináris adatok egy eseményt, amikor szükséges további információkat a következő eseményhez. Tegyük fel például, a `data` paraméter egy adott hiba információkat tartalmazza. Az Eseménynapló nem értelmezi a vonatkozó esemény adatok; az adatok egy kombinált hexadecimális és a szöveg formátumban jeleníti meg. Esemény-specifikus adatok felhasználásával takarékosan; Adja hozzá, csak akkor, ha biztos benne, hogy akkor lehet hasznos. Esemény-specifikus adatok használatával tárolja az adatokat az alkalmazás függetlenül. az Eseménynapló használatával tud feldolgozni. Például akkor sikerült kiírhatja egy megjelenítő kimondottan az események, vagy kiírhatja olyan program, amely megvizsgálja az eseménynaplóba, és jelentést készít, az esemény-specifikus adatok kapcsolatos információk.       A megadott forrás regisztrálnia kell az Eseménynapló <xref:System.Diagnostics.EventLog.WriteEvent%2A>.</xref:System.Diagnostics.EventLog.WriteEvent%2A> használata előtt A megadott forrás konfigurálni kell, hogy a napló; honosított bejegyzések írásakor a forrás legalább kell definiált üzenet erőforrásfájl.       Hozzon létre és az eseményforrás a forrással rendelkező első bejegyzés írása előtt konfigurálnia kell. Az új eseményforrás létrehozása az alkalmazás telepítése során. Ez lehetővé teszi, hogy a regisztrált eseményforrások listája és azok konfigurációja frissíteni az operációs rendszer számára. Ha az operációs rendszer nem frissítette az esemény olyan adatforrások listáját, és megkísérli írni az új forrással rendelkező esemény az írási művelet sikertelen lesz. Egy új forrás használatával konfigurálhatja egy <xref:System.Diagnostics.EventLogInstaller>, vagy használja a <xref:System.Diagnostics.EventLog.CreateEventSource%2A>metódus.</xref:System.Diagnostics.EventLog.CreateEventSource%2A> </xref:System.Diagnostics.EventLogInstaller> Új eseményforrás létrehozása a számítógépen rendszergazdai jogosultsággal kell rendelkeznie.       A forrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. A <xref:System.Diagnostics.EventLog.WriteEntry%2A>módszert, ha az alkalmazás ír karakterlánc értékeket közvetlenül az eseménynaplóba.</xref:System.Diagnostics.EventLog.WriteEntry%2A>       Ha az alkalmazás erőforrás-azonosítók és karakterlánc-értékek bejegyzést ír, akkor regisztrálnia kell a két külön forrásból. Például konfigurálja egy forrás erőforrásfájlokat, majd használja a forrást a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus írása az eseménynaplóba az erőforrás-azonosítók használatával bejegyzések</xref:System.Diagnostics.EventLog.WriteEvent%2A> Ezután hozzon létre egy eltérő forrást erőforrás fájlok nélkül, és használja a forrást a a <xref:System.Diagnostics.EventLog.WriteEntry%2A>metódus írni karakterláncok közvetlenül az eseménynaplót az, hogy az adatforrás.</xref:System.Diagnostics.EventLog.WriteEntry%2A>"
  example:
  - "The following example writes an informational event entry and a warning event entry to an existing event log. The event message text is specified using a resource identifier in a resource file. The example assumes the corresponding resource file has been registered for the source.  \n  \n [!code-cpp[EventLog_WriteEvent#8](~/add/codesnippet/cpp/d4971002-e0d1-493b-96f8-_1.cpp)]\n [!code-vb[EventLog_WriteEvent#8](~/add/codesnippet/visualbasic/d4971002-e0d1-493b-96f8-_1.vb)]\n [!code-cs[EventLog_WriteEvent#8](~/add/codesnippet/csharp/d4971002-e0d1-493b-96f8-_1.cs)]  \n  \n The example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, byte[] data, object[] values);
    parameters:
    - id: source
      type: System.String
      description: "Az alkalmazás a megadott számítógépen regisztrált Eseményforrás neve."
    - id: instance
      type: System.Diagnostics.EventInstance
      description: "Egy <xref href=&quot;System.Diagnostics.EventInstance&quot;> </xref> honosított eseménynapló-bejegyzést képviselő példány."
    - id: data
      type: System.Byte[]
      description: "Bájttömb, amely tárolja a bejegyzéshez tartozó bináris adat."
    - id: values
      type: System.Object[]
      description: "Az üzenet az Eseménynapló-bejegyzés egyesíteni karakterláncokból álló tömb."
  overload: System.Diagnostics.EventLog.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>source</code> value is an empty string (\"\").  \n  \n \\- or -  \n  \n The <code>source</code> value is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>instance.InstanceId</code> is less than zero or greater than &lt;xref:System.UInt16.MaxValue?displayProperty=fullName&gt;.  \n  \n \\- or -  \n  \n <code>values</code> has more than 256 elements.  \n  \n \\- or -  \n  \n One of the <code>values</code> elements is longer than 32766 bytes.  \n  \n \\- or -  \n  \n The source name results in a registry key path longer than 254 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instance</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A beállításkulcs, az Eseménynapló nem nyitható meg."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Az operációs rendszer hibát jelzett az Eseménynapló-bejegyzés az eseménynaplóba írásakor. A Windows-hibakód nem érhető el."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Diagnostics.EventLog.#ctor
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EventLog()
  nameWithType: EventLog.EventLog()
  fullName: System.Diagnostics.EventLog.EventLog()
- uid: System.Diagnostics.EventLog.#ctor(System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EventLog(String)
  nameWithType: EventLog.EventLog(String)
  fullName: System.Diagnostics.EventLog.EventLog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLog.#ctor(System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EventLog(String,String)
  nameWithType: EventLog.EventLog(String,String)
  fullName: System.Diagnostics.EventLog.EventLog(String,String)
- uid: System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EventLog(String,String,String)
  nameWithType: EventLog.EventLog(String,String,String)
  fullName: System.Diagnostics.EventLog.EventLog(String,String,String)
- uid: System.Diagnostics.EventLog.BeginInit
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: BeginInit()
  nameWithType: EventLog.BeginInit()
  fullName: System.Diagnostics.EventLog.BeginInit()
- uid: System.Diagnostics.EventLog.Clear
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Clear()
  nameWithType: EventLog.Clear()
  fullName: System.Diagnostics.EventLog.Clear()
- uid: System.Diagnostics.EventLog.Close
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Close()
  nameWithType: EventLog.Close()
  fullName: System.Diagnostics.EventLog.Close()
- uid: System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: CreateEventSource(EventSourceCreationData)
  nameWithType: EventLog.CreateEventSource(EventSourceCreationData)
  fullName: System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData)
- uid: System.Diagnostics.EventSourceCreationData
  parent: System.Diagnostics
  isExternal: false
  name: EventSourceCreationData
  nameWithType: EventSourceCreationData
  fullName: System.Diagnostics.EventSourceCreationData
- uid: System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: CreateEventSource(String,String)
  nameWithType: EventLog.CreateEventSource(String,String)
  fullName: System.Diagnostics.EventLog.CreateEventSource(String,String)
- uid: System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: CreateEventSource(String,String,String)
  nameWithType: EventLog.CreateEventSource(String,String,String)
  fullName: System.Diagnostics.EventLog.CreateEventSource(String,String,String)
- uid: System.Diagnostics.EventLog.Delete(System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Delete(String)
  nameWithType: EventLog.Delete(String)
  fullName: System.Diagnostics.EventLog.Delete(String)
- uid: System.Diagnostics.EventLog.Delete(System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Delete(String,String)
  nameWithType: EventLog.Delete(String,String)
  fullName: System.Diagnostics.EventLog.Delete(String,String)
- uid: System.Diagnostics.EventLog.DeleteEventSource(System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: DeleteEventSource(String)
  nameWithType: EventLog.DeleteEventSource(String)
  fullName: System.Diagnostics.EventLog.DeleteEventSource(String)
- uid: System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: DeleteEventSource(String,String)
  nameWithType: EventLog.DeleteEventSource(String,String)
  fullName: System.Diagnostics.EventLog.DeleteEventSource(String,String)
- uid: System.Diagnostics.EventLog.Dispose(System.Boolean)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLog.Dispose(Boolean)
  fullName: System.Diagnostics.EventLog.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLog.EnableRaisingEvents
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EnableRaisingEvents
  nameWithType: EventLog.EnableRaisingEvents
  fullName: System.Diagnostics.EventLog.EnableRaisingEvents
- uid: System.Diagnostics.EventLog.EndInit
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EndInit()
  nameWithType: EventLog.EndInit()
  fullName: System.Diagnostics.EventLog.EndInit()
- uid: System.Diagnostics.EventLog.Entries
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Entries
  nameWithType: EventLog.Entries
  fullName: System.Diagnostics.EventLog.Entries
- uid: System.Diagnostics.EventLogEntryCollection
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntryCollection
  nameWithType: EventLogEntryCollection
  fullName: System.Diagnostics.EventLogEntryCollection
- uid: System.Diagnostics.EventLog.EntryWritten
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EntryWritten
  nameWithType: EventLog.EntryWritten
  fullName: System.Diagnostics.EventLog.EntryWritten
- uid: System.Diagnostics.EntryWrittenEventHandler
  parent: System.Diagnostics
  isExternal: false
  name: EntryWrittenEventHandler
  nameWithType: EntryWrittenEventHandler
  fullName: System.Diagnostics.EntryWrittenEventHandler
- uid: System.Diagnostics.EventLog.Exists(System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Exists(String)
  nameWithType: EventLog.Exists(String)
  fullName: System.Diagnostics.EventLog.Exists(String)
- uid: System.Diagnostics.EventLog.Exists(System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Exists(String,String)
  nameWithType: EventLog.Exists(String,String)
  fullName: System.Diagnostics.EventLog.Exists(String,String)
- uid: System.Diagnostics.EventLog.GetEventLogs
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: GetEventLogs()
  nameWithType: EventLog.GetEventLogs()
  fullName: System.Diagnostics.EventLog.GetEventLogs()
- uid: System.Diagnostics.EventLog[]
  parent: System.Diagnostics
  isExternal: false
  name: EventLog
  nameWithType: EventLog
  fullName: System.Diagnostics.EventLog[]
  spec.csharp:
  - uid: System.Diagnostics.EventLog
    name: EventLog
    nameWithType: EventLog
    fullName: EventLog[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLog.GetEventLogs(System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: GetEventLogs(String)
  nameWithType: EventLog.GetEventLogs(String)
  fullName: System.Diagnostics.EventLog.GetEventLogs(String)
- uid: System.Diagnostics.EventLog.Log
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Log
  nameWithType: EventLog.Log
  fullName: System.Diagnostics.EventLog.Log
- uid: System.Diagnostics.EventLog.LogDisplayName
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: LogDisplayName
  nameWithType: EventLog.LogDisplayName
  fullName: System.Diagnostics.EventLog.LogDisplayName
- uid: System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: LogNameFromSourceName(String,String)
  nameWithType: EventLog.LogNameFromSourceName(String,String)
  fullName: System.Diagnostics.EventLog.LogNameFromSourceName(String,String)
- uid: System.Diagnostics.EventLog.MachineName
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: MachineName
  nameWithType: EventLog.MachineName
  fullName: System.Diagnostics.EventLog.MachineName
- uid: System.Diagnostics.EventLog.MaximumKilobytes
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: MaximumKilobytes
  nameWithType: EventLog.MaximumKilobytes
  fullName: System.Diagnostics.EventLog.MaximumKilobytes
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.EventLog.MinimumRetentionDays
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: MinimumRetentionDays
  nameWithType: EventLog.MinimumRetentionDays
  fullName: System.Diagnostics.EventLog.MinimumRetentionDays
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: ModifyOverflowPolicy(OverflowAction,Int32)
  nameWithType: EventLog.ModifyOverflowPolicy(OverflowAction,Int32)
  fullName: System.Diagnostics.EventLog.ModifyOverflowPolicy(OverflowAction,Int32)
- uid: System.Diagnostics.OverflowAction
  parent: System.Diagnostics
  isExternal: false
  name: OverflowAction
  nameWithType: OverflowAction
  fullName: System.Diagnostics.OverflowAction
- uid: System.Diagnostics.EventLog.OverflowAction
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: OverflowAction
  nameWithType: EventLog.OverflowAction
  fullName: System.Diagnostics.EventLog.OverflowAction
- uid: System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: RegisterDisplayName(String,Int64)
  nameWithType: EventLog.RegisterDisplayName(String,Int64)
  fullName: System.Diagnostics.EventLog.RegisterDisplayName(String,Int64)
- uid: System.Diagnostics.EventLog.Source
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Source
  nameWithType: EventLog.Source
  fullName: System.Diagnostics.EventLog.Source
- uid: System.Diagnostics.EventLog.SourceExists(System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: SourceExists(String)
  nameWithType: EventLog.SourceExists(String)
  fullName: System.Diagnostics.EventLog.SourceExists(String)
- uid: System.Diagnostics.EventLog.SourceExists(System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: SourceExists(String,String)
  nameWithType: EventLog.SourceExists(String,String)
  fullName: System.Diagnostics.EventLog.SourceExists(String,String)
- uid: System.Diagnostics.EventLog.SynchronizingObject
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: SynchronizingObject
  nameWithType: EventLog.SynchronizingObject
  fullName: System.Diagnostics.EventLog.SynchronizingObject
- uid: System.ComponentModel.ISynchronizeInvoke
  parent: System.ComponentModel
  isExternal: false
  name: ISynchronizeInvoke
  nameWithType: ISynchronizeInvoke
  fullName: System.ComponentModel.ISynchronizeInvoke
- uid: System.Diagnostics.EventLog.WriteEntry(System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String)
  nameWithType: EventLog.WriteEntry(String)
  fullName: System.Diagnostics.EventLog.WriteEntry(String)
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,EventLogEntryType)
  nameWithType: EventLog.WriteEntry(String,EventLogEntryType)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,EventLogEntryType)
- uid: System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: false
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,String)
  nameWithType: EventLog.WriteEntry(String,String)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String)
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,EventLogEntryType,Int32)
  nameWithType: EventLog.WriteEntry(String,EventLogEntryType,Int32)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,EventLogEntryType,Int32)
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,String,EventLogEntryType)
  nameWithType: EventLog.WriteEntry(String,String,EventLogEntryType)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String,EventLogEntryType)
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,EventLogEntryType,Int32,Int16)
  nameWithType: EventLog.WriteEntry(String,EventLogEntryType,Int32,Int16)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,EventLogEntryType,Int32,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,String,EventLogEntryType,Int32)
  nameWithType: EventLog.WriteEntry(String,String,EventLogEntryType,Int32)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String,EventLogEntryType,Int32)
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,EventLogEntryType,Int32,Int16,Byte[])
  nameWithType: EventLog.WriteEntry(String,EventLogEntryType,Int32,Int16,Byte[])
  fullName: System.Diagnostics.EventLog.WriteEntry(String,EventLogEntryType,Int32,Int16,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,String,EventLogEntryType,Int32,Int16)
  nameWithType: EventLog.WriteEntry(String,String,EventLogEntryType,Int32,Int16)
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String,EventLogEntryType,Int32,Int16)
- uid: System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry(String,String,EventLogEntryType,Int32,Int16,Byte[])
  nameWithType: EventLog.WriteEntry(String,String,EventLogEntryType,Int32,Int16,Byte[])
  fullName: System.Diagnostics.EventLog.WriteEntry(String,String,EventLogEntryType,Int32,Int16,Byte[])
- uid: System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEvent(EventInstance,Object[])
  nameWithType: EventLog.WriteEvent(EventInstance,Object[])
  fullName: System.Diagnostics.EventLog.WriteEvent(EventInstance,Object[])
- uid: System.Diagnostics.EventInstance
  parent: System.Diagnostics
  isExternal: false
  name: EventInstance
  nameWithType: EventInstance
  fullName: System.Diagnostics.EventInstance
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEvent(EventInstance,Byte[],Object[])
  nameWithType: EventLog.WriteEvent(EventInstance,Byte[],Object[])
  fullName: System.Diagnostics.EventLog.WriteEvent(EventInstance,Byte[],Object[])
- uid: System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEvent(String,EventInstance,Object[])
  nameWithType: EventLog.WriteEvent(String,EventInstance,Object[])
  fullName: System.Diagnostics.EventLog.WriteEvent(String,EventInstance,Object[])
- uid: System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEvent(String,EventInstance,Byte[],Object[])
  nameWithType: EventLog.WriteEvent(String,EventInstance,Byte[],Object[])
  fullName: System.Diagnostics.EventLog.WriteEvent(String,EventInstance,Byte[],Object[])
- uid: System.Diagnostics.EventLog.#ctor*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EventLog
  nameWithType: EventLog.EventLog
- uid: System.Diagnostics.EventLog.BeginInit*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: BeginInit
  nameWithType: EventLog.BeginInit
- uid: System.Diagnostics.EventLog.Clear*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Clear
  nameWithType: EventLog.Clear
- uid: System.Diagnostics.EventLog.Close*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Close
  nameWithType: EventLog.Close
- uid: System.Diagnostics.EventLog.CreateEventSource*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: CreateEventSource
  nameWithType: EventLog.CreateEventSource
- uid: System.Diagnostics.EventLog.Delete*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Delete
  nameWithType: EventLog.Delete
- uid: System.Diagnostics.EventLog.DeleteEventSource*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: DeleteEventSource
  nameWithType: EventLog.DeleteEventSource
- uid: System.Diagnostics.EventLog.Dispose*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Dispose
  nameWithType: EventLog.Dispose
- uid: System.Diagnostics.EventLog.EnableRaisingEvents*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EnableRaisingEvents
  nameWithType: EventLog.EnableRaisingEvents
- uid: System.Diagnostics.EventLog.EndInit*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: EndInit
  nameWithType: EventLog.EndInit
- uid: System.Diagnostics.EventLog.Entries*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Entries
  nameWithType: EventLog.Entries
- uid: System.Diagnostics.EventLog.Exists*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Exists
  nameWithType: EventLog.Exists
- uid: System.Diagnostics.EventLog.GetEventLogs*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: GetEventLogs
  nameWithType: EventLog.GetEventLogs
- uid: System.Diagnostics.EventLog.Log*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Log
  nameWithType: EventLog.Log
- uid: System.Diagnostics.EventLog.LogDisplayName*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: LogDisplayName
  nameWithType: EventLog.LogDisplayName
- uid: System.Diagnostics.EventLog.LogNameFromSourceName*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: LogNameFromSourceName
  nameWithType: EventLog.LogNameFromSourceName
- uid: System.Diagnostics.EventLog.MachineName*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: MachineName
  nameWithType: EventLog.MachineName
- uid: System.Diagnostics.EventLog.MaximumKilobytes*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: MaximumKilobytes
  nameWithType: EventLog.MaximumKilobytes
- uid: System.Diagnostics.EventLog.MinimumRetentionDays*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: MinimumRetentionDays
  nameWithType: EventLog.MinimumRetentionDays
- uid: System.Diagnostics.EventLog.ModifyOverflowPolicy*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: ModifyOverflowPolicy
  nameWithType: EventLog.ModifyOverflowPolicy
- uid: System.Diagnostics.EventLog.OverflowAction*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: OverflowAction
  nameWithType: EventLog.OverflowAction
- uid: System.Diagnostics.EventLog.RegisterDisplayName*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: RegisterDisplayName
  nameWithType: EventLog.RegisterDisplayName
- uid: System.Diagnostics.EventLog.Source*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: Source
  nameWithType: EventLog.Source
- uid: System.Diagnostics.EventLog.SourceExists*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: SourceExists
  nameWithType: EventLog.SourceExists
- uid: System.Diagnostics.EventLog.SynchronizingObject*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: SynchronizingObject
  nameWithType: EventLog.SynchronizingObject
- uid: System.Diagnostics.EventLog.WriteEntry*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEntry
  nameWithType: EventLog.WriteEntry
- uid: System.Diagnostics.EventLog.WriteEvent*
  parent: System.Diagnostics.EventLog
  isExternal: false
  name: WriteEvent
  nameWithType: EventLog.WriteEvent
