### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.ProjectInstance
  id: ProjectInstance
  children:
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Execution.ProjectInstance.Build
  - Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  - Microsoft.Build.Execution.ProjectInstance.DeepCopy
  - Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  - Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  - Microsoft.Build.Execution.ProjectInstance.Directory
  - Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  - Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  - Microsoft.Build.Execution.ProjectInstance.FullPath
  - Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  - Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  - Microsoft.Build.Execution.ProjectInstance.InitialTargets
  - Microsoft.Build.Execution.ProjectInstance.IsImmutable
  - Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  - Microsoft.Build.Execution.ProjectInstance.Items
  - Microsoft.Build.Execution.ProjectInstance.ItemTypes
  - Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  - Microsoft.Build.Execution.ProjectInstance.Properties
  - Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  - Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  - Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.Targets
  - Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  - Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  - Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  langs:
  - csharp
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
  type: Class
  summary: "A projekt példányát képviselik."
  remarks: "Az osztály példányai vezethet, ha a projekt klónozták. Konstruktorok olyan belső ahhoz, hogy a felhasználóknak kell létrehoznia a projekt példányok a már meglévőket.       Új projekt példányai nem módosíthatók, azzal a különbséggel, hogy példány elemek is hozzáadja őket, és objektumpéldány tulajdonságai úgy állítsa be őket. Projekt példányok hasznosak, mert módosíthatók és beépített többször az eredeti projekt megzavarása nélkül.       Ez az osztály, sem bármely összetevőjének engedélyezett hivatkoznak <xref:Microsoft.Build.Construction>vagy <xref:Microsoft.Build.Evaluation>objektumok.</xref:Microsoft.Build.Evaluation> </xref:Microsoft.Build.Construction>       Projekt példány célok futtató és a feladat beállításjegyzék nem érhetők el."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")]

      public class ProjectInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy új projekt példányt, és inicializálja az adott projekt gyökérkönyvtárában, az alapértelmezett projekt gyűjtemény használatával."
  remarks: "Nincs köztes <xref:Microsoft.Build.Evaluation.Project>objektum létrehozása.</xref:Microsoft.Build.Evaluation.Project> Ez akkor hasznos, ha a projekt lesz létrehozva, de nem jelenik meg vagy módosított."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "A projekt legfelső szintű elemének."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String)
  nameWithType: ProjectInstance.ProjectInstance(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy új projekt példányt, és inicializálja az adott projekt fájlból, az alapértelmezett projekt gyűjtemény használatával."
  remarks: "Nincs köztes <xref:Microsoft.Build.Evaluation.Project>objektum létrehozása.</xref:Microsoft.Build.Evaluation.Project> Ez akkor hasznos, ha a projekt lesz létrehozva, de nem jelenik meg vagy módosított."
  syntax:
    content: public ProjectInstance (string projectFile);
    parameters:
    - id: projectFile
      type: System.String
      description: "A projekt fájl nevét."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy új projekt példányt, és inicializálja az adott projekt fájlból, az adott globális tulajdonságok, eszközök verziója és az alapértelmezett projekt gyűjtemény használatával."
  remarks: "Nincs köztes <xref:Microsoft.Build.Evaluation.Project>objektum létrehozása.</xref:Microsoft.Build.Evaluation.Project> Ez akkor hasznos, ha a projekt lesz létrehozva, de nem jelenik meg vagy módosított."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: projectFile
      type: System.String
      description: "A projekt fájl nevét."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A globális tulajdonságait."
    - id: toolsVersion
      type: System.String
      description: "Az eszközök verziója."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy új projekt példányt, és inicializálja az adott projekt gyökérkönyvtárában, az adott globális tulajdonságait, a eszközök verziója és a gyűjtemény használatával."
  remarks: "Nincs köztes <xref:Microsoft.Build.Evaluation.Project>objektum létrehozása.</xref:Microsoft.Build.Evaluation.Project> Ez akkor hasznos, ha a projekt lesz létrehozva, de nem jelenik meg vagy módosított."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "A projekt legfelső szintű elem"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A globális tulajdonságait. NULL értékű lehet."
    - id: toolsVersion
      type: System.String
      description: "Az eszközök verziója. NULL értékű lehet."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Gyűjtemény"
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy új projekt példányt, és inicializálja az adott projekt fájlból, az adott globális tulajdonságait, a eszközök verziója és a gyűjtemény használatával."
  remarks: "Nincs köztes <xref:Microsoft.Build.Evaluation.Project>objektum létrehozása.</xref:Microsoft.Build.Evaluation.Project> Ez akkor hasznos, ha a projekt lesz létrehozva, de nem jelenik meg vagy módosított."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectFile
      type: System.String
      description: "A projekt fájl nevét."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A globális tulajdonságait. NULL értékű lehet."
    - id: toolsVersion
      type: System.String
      description: "Az eszközök verziója. NULL értékű lehet."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Gyűjtemény"
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy új projekt példányt, és inicializálja az adott projekt gyökérkönyvtárában, az adott globális tulajdonságait, a eszközök verziója és a gyűjtemény segítségével"
  remarks: "Nincs köztes <xref:Microsoft.Build.Evaluation.Project>objektum létrehozása.</xref:Microsoft.Build.Evaluation.Project> Ez akkor hasznos, ha a projekt lesz létrehozva, de nem jelenik meg vagy módosított."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "A projekt legfelső szintű elemének."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A globális tulajdonságait. NULL értékű lehet."
    - id: toolsVersion
      type: System.String
      description: "Az eszközök verziója. NULL értékű lehet."
    - id: subToolsetVersion
      type: System.String
      description: "A sub eszközkészlet verziója. NULL értékű lehet."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Gyűjtemény."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy új projekt példányt, és inicializálja az adott projekt fájlból, az adott globális tulajdonságait, a eszközök verziója, a sub eszközkészlet verziója és a gyűjtemény használatával."
  remarks: "Nincs köztes <xref:Microsoft.Build.Evaluation.Project>objektum létrehozása.</xref:Microsoft.Build.Evaluation.Project> Ez akkor hasznos, ha a projekt lesz létrehozva, de nem jelenik meg vagy módosított."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectFile
      type: System.String
      description: "A projekt fájl nevét."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "A globális tulajdonságait. NULL értékű lehet."
    - id: toolsVersion
      type: System.String
      description: "Az eszközök verziója. NULL értékű lehet."
    - id: subToolsetVersion
      type: System.String
      description: "A sub eszközkészlet verziója. NULL értékű lehet."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Gyűjtemény."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  id: AddItem(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: AddItem(String,String)
  nameWithType: ProjectInstance.AddItem(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Nincsenek metaadatok elemet ad hozzá a projekthez."
  remarks: "A Microsoft nem lép egy ProjectItemInstance győződjön meg arról, amely már használja egy másik ProjectInstance jelenleg nem áll."
  syntax:
    content: public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "A hozzáadni kívánt elem elem típusa."
    - id: evaluatedInclude
      type: System.String
      description: "A kiértékelt Include attribútum a cikk."
    return:
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Új elemet adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott metaadatok elemet ad hozzá a projekthez."
  remarks: "A Microsoft nem lép egy ProjectItemInstance győződjön meg arról, amely már használja egy másik ProjectInstance jelenleg nem áll."
  syntax:
    content: public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);
    parameters:
    - id: itemType
      type: System.String
      description: "A hozzáadni kívánt elem elem típusa."
    - id: evaluatedInclude
      type: System.String
      description: "A kiértékelt Include attribútum a cikk."
    - id: metadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "Az elem metaadatait."
    return:
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Az új elemet adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build
  id: Build
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build()
  nameWithType: ProjectInstance.Build()
  fullName: Microsoft.Build.Execution.ProjectInstance.Build()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A projekt alapértelmezett céljai épít, a figyelő a projekt gyűjtemény szoftverek."
  syntax:
    content: public bool Build ();
    parameters: []
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a sikeres fordítás; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Az alapértelmezett célok a projekt épít, és az adott figyelő szoftverek."
  remarks: "InvalidOperationException jelez, ha a figyelő a megadott szoftverek bármelyike már csatolva a naplózási szolgáltatás."
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "A figyelő a build használandó szoftverek. NULL értékű lehet."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a sikeres fordítás; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A projekt alapértelmezett céljai épít, az adott figyelő szoftverek és a távoli figyelő szoftverek."
  remarks: "InvalidOperationException jelez, ha a figyelő a megadott szoftverek bármelyike már csatolva a naplózási szolgáltatás."
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "A figyelő a build használandó szoftverek. NULL értékű lehet."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "A build használandó távoli figyelő szoftverek. NULL értékű lehet."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a sikeres fordítás; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A projekt adott cél épít, és az adott figyelő szoftverek."
  remarks: "InvalidOperationException jelez, ha a figyelő a megadott szoftverek bármelyike már csatolva a naplózási szolgáltatás."
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: target
      type: System.String
      description: "A cél-és létrehozása. NULL értékű lehet."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "A figyelő a build használandó szoftverek. NULL értékű lehet."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a sikeres fordítás; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott célokat a projekt épít, és az adott figyelő szoftverek."
  remarks: "InvalidOperationException jelez, ha a figyelő a megadott szoftverek bármelyike már csatolva a naplózási szolgáltatás."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "A célok hozhat létre. NULL értékű lehet."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "A figyelő a build használandó szoftverek. NULL értékű lehet."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a sikeres fordítás; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott cél a projekt épít, az adott figyelő szoftverek és a távoli figyelő szoftverek."
  remarks: "InvalidOperationException jelez, ha a figyelő a megadott szoftverek bármelyike már csatolva a naplózási szolgáltatás."
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: target
      type: System.String
      description: "A cél-és létrehozása. NULL értékű lehet."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "A figyelő a build használandó szoftverek. NULL értékű lehet."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "A build használandó távoli figyelő szoftverek. NULL értékű lehet."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a sikeres fordítás; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Fejlesztheti tárolók listája az adott figyelő szoftverek. Lehet, hogy a célok null értékű. Lehet, hogy a figyelő szoftverek null értékű."
  remarks: "Ha a figyelő szolgáltatott szoftverek bármelyike már csatolva a naplózási szolgáltatás azt lett átadva, okoz a InvalidOperationException."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, out System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.TargetResult> targetOutputs);
    parameters:
    - id: targets
      type: System.String[]
      description: "A build tárolók listája. NULL értékű lehet."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Figyelő szoftverek célok összeállításakor használandó felsorolt listája."
    - id: targetOutputs
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
      description: "A cél kimenetek hoz létre."
    return:
      type: System.Boolean
      description: "Igaz értéket ad vissza a siker, hamis hiba esetén."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott célokat a projekt épít, az adott figyelő szoftverek és a távoli figyelő szoftverek."
  remarks: "InvalidOperationException jelez, ha a figyelő a megadott szoftverek bármelyike már csatolva a naplózási szolgáltatás."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "A célok hozhat létre. NULL értékű lehet."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "A figyelő a build használandó szoftverek. NULL értékű lehet."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "A build használandó távoli figyelő szoftverek. NULL értékű lehet."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a sikeres fordítás; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott célokat, a megadott cél kimenetek és az adott figyelő szoftverek és a távoli figyelő szoftverek alkot."
  remarks: "InvalidOperationException jelez, ha a figyelő a megadott szoftverek bármelyike már csatolva a naplózási szolgáltatás."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, out System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.TargetResult> targetOutputs);
    parameters:
    - id: targets
      type: System.String[]
      description: "A célok hozhat létre. NULL értékű lehet."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "A figyelő a build használandó szoftverek. NULL értékű lehet."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "A build használandó távoli figyelő szoftverek. NULL értékű lehet."
    - id: targetOutputs
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
      description: "A cél kimenetek."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a sikeres fordítás; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy
  id: DeepCopy
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DeepCopy()
  nameWithType: ProjectInstance.DeepCopy()
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy független, a részletes klón a projekthez, és minden benne. Klónozás az eredeti azonos mutability rendelkezik. Fordítási egyetlen fájl vagy, hogy a buildek közötti build eredmények hasznos."
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance DeepCopy ();
    parameters: []
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "Ez a projekt független, a részletes klónja hoz létre."
  overload: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  id: DeepCopy(System.Boolean)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DeepCopy(Boolean)
  nameWithType: ProjectInstance.DeepCopy(Boolean)
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy(Boolean)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Egy független, mély klón a projekthez, és minden, a megadott mutability hoz létre. Fordítási egyetlen fájl vagy, hogy a buildek közötti build eredmények hasznos."
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);
    parameters:
    - id: isImmutable
      type: System.Boolean
      description: "Azt jelzi, mutability klónozását."
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "Ez a projekt független, mély klónja megadott mutability adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  id: DefaultTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Lekérdezi vagy beállítja a projektet az alapértelmezett tárolók listája."
  remarks: "Ha explicit módon megadott célok megadva a beépített alapértelmezett célok."
  syntax:
    content: public System.Collections.Generic.List<string> DefaultTargets { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Ebben a projektben alapértelmezett célok listáját adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.DefaultTargets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Directory
  id: Directory
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Directory
  nameWithType: ProjectInstance.Directory
  fullName: Microsoft.Build.Execution.ProjectInstance.Directory
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: 'Lekérdezi a projekt gyökérkönyvtárában. Relatív elérési útja, és az aktuális könyvtár beállítása az összeállítás közbeni értékeléséhez használt. A rendszer soha nem null értékű: projektek nem a lemezről betöltött használni a jelenlegi könyvtárat a build indításakor az.'
  syntax:
    content: public string Directory { get; }
    return:
      type: System.String
      description: "A projekt gyökérkönyvtár, amely soha nem null visszaadása. Nincs betöltve a lemezről projektek a build indításánál térjen vissza az aktuális könyvtár."
  overload: Microsoft.Build.Execution.ProjectInstance.Directory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  id: EvaluateCondition(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: EvaluateCondition(String)
  nameWithType: ProjectInstance.EvaluateCondition(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Kiértékeli a megadott karakterlánc feltételeként kibontásával elemek és tulajdonságai, a jelenlegi elem és a tulajdonságok érhetők el, majd ennek a logikai kiértékelése során."
  remarks: "Ez akkor hasznos, a parancsablakban.       Operációs rendszer metaadatok kifejezések nem bővíti ki."
  syntax:
    content: public bool EvaluateCondition (string condition);
    parameters:
    - id: condition
      type: System.String
      description: "A karakterláncot kell."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a karakterlánc eredménye IGAZ; hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  id: ExpandString(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ExpandString(String)
  nameWithType: ProjectInstance.ExpandString(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ExpandString(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Kiértékeli a megadott karakterlánc kibontásával elemek és tulajdonságai, a jelenlegi elem és a rendelkezésre álló tulajdonságok használatával."
  remarks: "Ez akkor hasznos, egyes gazdagépek, illetve a hibakereső parancsablakban.       Operációs rendszer metaadatok kifejezések nem bővíti ki."
  syntax:
    content: public string ExpandString (string unexpandedValue);
    parameters:
    - id: unexpandedValue
      type: System.String
      description: "A karakterláncot kell."
    return:
      type: System.String
      description: "A kibővített karakterlánc típusú értéket ad vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.ExpandString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath
  id: FullPath
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: FullPath
  nameWithType: ProjectInstance.FullPath
  fullName: Microsoft.Build.Execution.ProjectInstance.FullPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Lekérdezi a projekt fájl teljes elérési útja. Naplózásra használható."
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "A projektfájl ad vissza a teljes elérési útja. Ha a projekt neve soha nem volt null értéket ad vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.FullPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott elem definíciója Include attribútumának kiértékelt, escape-karakterrel megjelölt értékének beolvasása."
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemDefinitionInstance
      description: "Az elem definíciója kiértékelése és escape-karakterrel megjelölve."
    return:
      type: System.String
      description: "Vissza a kiértékelt escape-karaktersorozatot a megadott elem definíció Include attribútum értéke."
  overload: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Lekérdezi a megadott elem a belefoglalási attribútum kiértékelt, escape-karakterrel megjelölt értékét."
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "A cikk értékelése és escape-karakterrel megjelölve."
    return:
      type: System.String
      description: "Vissza a kiértékelt escape-karaktersorozatot a megadott elem felvétele attribútum értéke."
  overload: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  id: GetItems(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetItems(String)
  nameWithType: ProjectInstance.GetItems(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItems(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Ebben a projektben a megadott típusú lekérdezi az összes elemet. A rendszer egy csak olvasható."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance> GetItems (string itemType);
    parameters:
    - id: itemType
      type: System.String
      description: "Az elem típusa kérhető elemekre."
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Ebben a projektben az adott típusú összes azon elemeit adja vissza. Egy üres listát ad vissza, ha ilyen nincs."
  overload: Microsoft.Build.Execution.ProjectInstance.GetItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  id: GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetItemsByItemTypeAndEvaluatedInclude(String,String)
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Ebben a projektben a megadott típusú elemeinek lekérdezi és értékelni értéket tartalmazza. A rendszer egy csak olvasható."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectItemInstance> GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "Az elem típusa kérhető elemekre."
    - id: evaluatedInclude
      type: System.String
      description: "A cikkek beolvasni a kiértékelt include értékét"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Ebben a projektben az adott típusú összes azon elemeit adja vissza, és értékelni értéket tartalmazza. A visszatérési egy üres gyűjteményt, ha nincs."
  overload: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectMetadataInstance)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott metadatum escape-karakterrel megjelölt értékének beolvasása."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);
    parameters:
    - id: metadatum
      type: Microsoft.Build.Execution.ProjectMetadataInstance
      description: "A metadatum meg kell jelölni."
    return:
      type: System.String
      description: "A megadott metadatum escape-karakterrel megjelölt értékét adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott elem definíciója megadott nevét a metadatum escape-karakterrel megjelölt értékének beolvasása."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemDefinitionInstance
      description: "Az elem definíciója adni a metadatum értéket."
    - id: name
      type: System.String
      description: "A metadatum neve."
    return:
      type: System.String
      description: "A megadott nevű, a megadott elem definíciója a metadatum escape-karakterrel megjelölt értékét adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItemInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott nevű metadatum escape-karakterrel megjelölt értékének lekérdezi a megadott elem."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Az elemet a metadatum értéket adjon meg."
    - id: name
      type: System.String
      description: "A metadatum neve."
    return:
      type: System.String
      description: "A megadott elem a megadott nevű metadatum escape-karakterrel megjelölt értékét adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: ProjectInstance.GetProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott nevű tulajdonság beolvasása."
  syntax:
    content: public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "A lekérdezni a tulajdonság nevét."
    return:
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "Visszaadja a megadott nevű tulajdonság. Ha a tulajdonság nem létezik ilyen nevű null értéket ad vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: ProjectInstance.GetPropertyValue(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott nevű tulajdonság értékének beolvasása."
  remarks: "Ez a módszer nem különbözteti meg a tulajdonság értéke az üres karakterlánc, és nem a megadott nevű tulajdonság."
  syntax:
    content: public string GetPropertyValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "A tulajdonság, amelynek az értéke kérhető neve."
    return:
      type: System.String
      description: "A megadott nevű tulajdonság értékét adja vissza. Üres karakterláncot ad vissza, ha a tulajdonság nem létezik ilyen nevű. A visszaadott érték nem escape-karakterrel megjelölt karaktersorozatok rendelkezik."
  overload: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  id: GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetPropertyValueEscaped(ProjectPropertyInstance)
  nameWithType: ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott tulajdonság escape-karakterrel megjelölt értékének beolvasása."
  syntax:
    content: public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);
    parameters:
    - id: property
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "A tulajdonság, meg kell jelölni."
    return:
      type: System.String
      description: "A megadott tulajdonság escape-karakterrel megjelölt értékét adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  id: GlobalProperties
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
  fullName: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Lekérdezi a szótár ebben a projektben, a kiértékelés globális tulajdonságok, ha van ilyen."
  remarks: "Read only collection.  \n  \n Traverses project references.  \n  \n This is the publicly exposed getter, that translates into a read-only dead IDictionary\\<string, string>."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> GlobalProperties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Ebben a projektben a kiértékelés globális tulajdonságok szótár adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.GlobalProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  id: InitialTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Lekérdezi a kezdeti tárolók listája a projekt és annak importjaitól mélysége-első. Ezeken a célokon előtt semmilyen más célra készült."
  syntax:
    content: public System.Collections.Generic.List<string> InitialTargets { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "A projekt és az összes Ez annak importjaitól, mélysége-első kezdeti célok listáját adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.InitialTargets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  id: IsImmutable
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
  fullName: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Lekérdezi azt a jelzőt, amely azt jelzi, hogy a projekt példány nem módosítható. Ez a jelző véglegesen van beállítva, a példány létrehozásakor."
  syntax:
    content: public bool IsImmutable { get; }
    return:
      type: System.Boolean
      description: "A jelző adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.IsImmutable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  id: ItemDefinitions
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A cikk definíciókban csak olvasható dictionary kap a projektben kulccsal a kapcsolódó elem típusa."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectItemDefinitionInstance> ItemDefinitions { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance}
      description: "A projekt kulccsal a kapcsolódó elem típusa csak olvasható dictionary a cikk meghatározások adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Items
  id: Items
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Items
  nameWithType: ProjectInstance.Items
  fullName: Microsoft.Build.Execution.ProjectInstance.Items
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Ebben a projektben lekéri az összes elemet."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance> Items { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Ez a projekt összes elemet adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.Items*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  id: ItemTypes
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Ez a projekt összes konfigurációelem-típusok beolvasása"
  syntax:
    content: public System.Collections.Generic.ICollection<string> ItemTypes { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Ebben a projektben adja vissza az összes konfigurációelem-típusok."
  overload: Microsoft.Build.Execution.ProjectInstance.ItemTypes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  id: ProjectFileLocation
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Lekérdezi az eredeti fájl helyét. Soha nem null értékű."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Az eredeti fájl helyét adja meg. Soha nem null értéket ad vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Properties
  id: Properties
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Properties
  nameWithType: ProjectInstance.Properties
  fullName: Microsoft.Build.Execution.ProjectInstance.Properties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Ebben a projektben lévő összes tulajdonság lekérése."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance> Properties { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectPropertyInstance}
      description: "Ebben a projektben adja vissza az összes tulajdonság."
  overload: Microsoft.Build.Execution.ProjectInstance.Properties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  id: RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: RemoveItem(ProjectItemInstance)
  nameWithType: ProjectInstance.RemoveItem(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveItem(ProjectItemInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Egy elem eltávolítása a projektben, ha van ilyen. Igaz értéket ad eredményül, ha jelen van, hamis más módon."
  syntax:
    content: public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Az elem el kell távolítani."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a cikk voltak eltávolítása előtt hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  id: RemoveProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: RemoveProperty(String)
  nameWithType: ProjectInstance.RemoveProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Eltávolítja a megadott nevű tulajdonság. Igaz értéket ad vissza, ha a tulajdonság egy értéket (valószínűleg üres karakterlánc), egyébként hamis rendelkezett."
  syntax:
    content: public bool RemoveProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "Az eltávolítandó tulajdonság neve."
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a tulajdonság egy értéket (valószínűleg üres) eltávolítása előtt hamis más módon."
  overload: Microsoft.Build.Execution.ProjectInstance.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  id: SetProperty(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: SetProperty(String,String)
  nameWithType: ProjectInstance.SetProperty(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.SetProperty(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A megadott nevű és értékű tulajdonság hozzáadása a projekthez. A tulajdonság felülírja a gyűjtemény már található azonos nevű."
  remarks: "A Microsoft nem lép egy ProjectPropertyInstance győződjön meg arról, amely már használja egy másik ProjectPropertyInstance jelenleg nem áll."
  syntax:
    content: public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "A tulajdonság neve."
    - id: evaluatedValue
      type: System.String
      description: "A tulajdonság hozzáadása kiértékelt értéke."
    return:
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "Az új tulajdonság adja vissza."
  overload: Microsoft.Build.Execution.ProjectInstance.SetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Targets
  id: Targets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Targets
  nameWithType: ProjectInstance.Targets
  fullName: Microsoft.Build.Execution.ProjectInstance.Targets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Lekérdezi számbavevő keresztül az összes cél ebben a projektben. Ez a gyűjtemény csak olvasható."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectTargetInstance> Targets { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
      description: "Ebben a projektben az összes cél keresztül adja vissza számbevevőre."
  overload: Microsoft.Build.Execution.ProjectInstance.Targets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  id: ToolsVersion
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
  fullName: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Az ebben a projektben, a kiértékelés eszközök verzió kap, ha van ilyen."
  remarks: "Az eredmény nincs feltétlenül ugyanaz, mint az eszközök verziót a projekt címke az lehet, hogy külsőleg megadva, például egy /tv kapcsolóval."
  syntax:
    content: public string ToolsVersion { get; }
    return:
      type: System.String
      description: "Az ebben a projektben, a kiértékelés eszközök verziója ad vissza, ha van ilyen."
  overload: Microsoft.Build.Execution.ProjectInstance.ToolsVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  id: ToProjectRootElement
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ToProjectRootElement()
  nameWithType: ProjectInstance.ToProjectRootElement()
  fullName: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Létrehoz egy ProjectRootElement a ProjectInstance tartalmát."
  syntax:
    content: public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();
    parameters: []
    return:
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Visszaadja egy ProjectRootElement, amely ezt a példányt jelenti."
  overload: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  id: UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: UpdateStateFrom(ProjectInstance)
  nameWithType: ProjectInstance.UpdateStateFrom(ProjectInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(ProjectInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "A projekt állapotát a felváltja <> </> *>, <> </> *> és <xref:Microsoft.Build.Execution.ProjectInstance.Items*>levőkkel a megadott <xref href=&quot;Microsoft.Build.Execution.ProjectInstance&quot;> </xref>.</xref:Microsoft.Build.Execution.ProjectInstance.Items*>"
  syntax:
    content: public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);
    parameters:
    - id: projectState
      type: Microsoft.Build.Execution.ProjectInstance
      description: "A <xref uid=&quot;langword_csharp_ProjectInstance&quot; name=&quot;ProjectInstance&quot; href=&quot;&quot;> </xref> a frissítése."
  overload: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement)
- uid: Microsoft.Build.Construction.ProjectRootElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectRootElement
  nameWithType: ProjectRootElement
  fullName: Microsoft.Build.Construction.ProjectRootElement
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String)
  nameWithType: ProjectInstance.ProjectInstance(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem(String,String)
  nameWithType: ProjectInstance.AddItem(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String)
- uid: Microsoft.Build.Execution.ProjectItemInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectItemInstance
  nameWithType: ProjectItemInstance
  fullName: Microsoft.Build.Execution.ProjectItemInstance
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,String>>
  nameWithType: IEnumerable<KeyValuePair<String,String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build()
  nameWithType: ProjectInstance.Build()
  fullName: Microsoft.Build.Execution.ProjectInstance.Build()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ILogger>
  nameWithType: IEnumerable<ILogger>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Framework.ILogger>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Framework.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ForwardingLoggerRecord>
  nameWithType: IEnumerable<ForwardingLoggerRecord>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Logging.ForwardingLoggerRecord
    name: ForwardingLoggerRecord
    nameWithType: ForwardingLoggerRecord
    fullName: ForwardingLoggerRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,TargetResult>
  nameWithType: IDictionary<String,TargetResult>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.TargetResult>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.TargetResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.TargetResult
    name: TargetResult
    nameWithType: TargetResult
    fullName: TargetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy()
  nameWithType: ProjectInstance.DeepCopy()
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy()
- uid: Microsoft.Build.Execution.ProjectInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy(Boolean)
  nameWithType: ProjectInstance.DeepCopy(Boolean)
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy(Boolean)
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Directory
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Directory
  nameWithType: ProjectInstance.Directory
  fullName: Microsoft.Build.Execution.ProjectInstance.Directory
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: EvaluateCondition(String)
  nameWithType: ProjectInstance.EvaluateCondition(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(String)
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ExpandString(String)
  nameWithType: ProjectInstance.ExpandString(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ExpandString(String)
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: FullPath
  nameWithType: ProjectInstance.FullPath
  fullName: Microsoft.Build.Execution.ProjectInstance.FullPath
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
- uid: Microsoft.Build.Execution.ProjectItemDefinitionInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectItemDefinitionInstance
  nameWithType: ProjectItemDefinitionInstance
  fullName: Microsoft.Build.Execution.ProjectItemDefinitionInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItems(String)
  nameWithType: ProjectInstance.GetItems(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItems(String)
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectItemInstance>
  nameWithType: ICollection<ProjectItemInstance>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Execution.ProjectItemInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectItemInstance
    name: ProjectItemInstance
    nameWithType: ProjectItemInstance
    fullName: ProjectItemInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItemsByItemTypeAndEvaluatedInclude(String,String)
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectItemInstance>
  nameWithType: IEnumerable<ProjectItemInstance>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectItemInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Execution.ProjectItemInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectItemInstance
    name: ProjectItemInstance
    nameWithType: ProjectItemInstance
    fullName: ProjectItemInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectMetadataInstance)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
- uid: Microsoft.Build.Execution.ProjectMetadataInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectMetadataInstance
  nameWithType: ProjectMetadataInstance
  fullName: Microsoft.Build.Execution.ProjectMetadataInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItemInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetProperty(String)
  nameWithType: ProjectInstance.GetProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetProperty(String)
- uid: Microsoft.Build.Execution.ProjectPropertyInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectPropertyInstance
  nameWithType: ProjectPropertyInstance
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ProjectInstance.GetPropertyValue(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValueEscaped(ProjectPropertyInstance)
  nameWithType: ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
  fullName: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.InitialTargets
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
  fullName: Microsoft.Build.Execution.ProjectInstance.IsImmutable
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectItemDefinitionInstance>
  nameWithType: IDictionary<String,ProjectItemDefinitionInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectItemDefinitionInstance
    name: ProjectItemDefinitionInstance
    nameWithType: ProjectItemDefinitionInstance
    fullName: ProjectItemDefinitionInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Items
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Items
  nameWithType: ProjectInstance.Items
  fullName: Microsoft.Build.Execution.ProjectInstance.Items
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemTypes
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
- uid: Microsoft.Build.Construction.ElementLocation
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ElementLocation
  nameWithType: ElementLocation
  fullName: Microsoft.Build.Construction.ElementLocation
- uid: Microsoft.Build.Execution.ProjectInstance.Properties
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Properties
  nameWithType: ProjectInstance.Properties
  fullName: Microsoft.Build.Execution.ProjectInstance.Properties
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectPropertyInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectPropertyInstance>
  nameWithType: ICollection<ProjectPropertyInstance>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectPropertyInstance
    name: ProjectPropertyInstance
    nameWithType: ProjectPropertyInstance
    fullName: ProjectPropertyInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveItem(ProjectItemInstance)
  nameWithType: ProjectInstance.RemoveItem(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveItem(ProjectItemInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveProperty(String)
  nameWithType: ProjectInstance.RemoveProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(String)
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: SetProperty(String,String)
  nameWithType: ProjectInstance.SetProperty(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.SetProperty(String,String)
- uid: Microsoft.Build.Execution.ProjectInstance.Targets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Targets
  nameWithType: ProjectInstance.Targets
  fullName: Microsoft.Build.Execution.ProjectInstance.Targets
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectTargetInstance>
  nameWithType: IDictionary<String,ProjectTargetInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectTargetInstance
    name: ProjectTargetInstance
    nameWithType: ProjectTargetInstance
    fullName: ProjectTargetInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
  fullName: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToProjectRootElement()
  nameWithType: ProjectInstance.ToProjectRootElement()
  fullName: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement()
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: UpdateStateFrom(ProjectInstance)
  nameWithType: ProjectInstance.UpdateStateFrom(ProjectInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(ProjectInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance.ProjectInstance
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem
  nameWithType: ProjectInstance.AddItem
- uid: Microsoft.Build.Execution.ProjectInstance.Build*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build
  nameWithType: ProjectInstance.Build
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy
  nameWithType: ProjectInstance.DeepCopy
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
- uid: Microsoft.Build.Execution.ProjectInstance.Directory*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Directory
  nameWithType: ProjectInstance.Directory
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: EvaluateCondition
  nameWithType: ProjectInstance.EvaluateCondition
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ExpandString
  nameWithType: ProjectInstance.ExpandString
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: FullPath
  nameWithType: ProjectInstance.FullPath
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItems
  nameWithType: ProjectInstance.GetItems
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItemsByItemTypeAndEvaluatedInclude
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped
  nameWithType: ProjectInstance.GetMetadataValueEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetProperty
  nameWithType: ProjectInstance.GetProperty
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValue
  nameWithType: ProjectInstance.GetPropertyValue
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValueEscaped
  nameWithType: ProjectInstance.GetPropertyValueEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
- uid: Microsoft.Build.Execution.ProjectInstance.Items*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Items
  nameWithType: ProjectInstance.Items
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
- uid: Microsoft.Build.Execution.ProjectInstance.Properties*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Properties
  nameWithType: ProjectInstance.Properties
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveItem
  nameWithType: ProjectInstance.RemoveItem
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveProperty
  nameWithType: ProjectInstance.RemoveProperty
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: SetProperty
  nameWithType: ProjectInstance.SetProperty
- uid: Microsoft.Build.Execution.ProjectInstance.Targets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Targets
  nameWithType: ProjectInstance.Targets
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToProjectRootElement
  nameWithType: ProjectInstance.ToProjectRootElement
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: UpdateStateFrom
  nameWithType: ProjectInstance.UpdateStateFrom
