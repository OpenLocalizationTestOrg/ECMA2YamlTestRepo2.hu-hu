### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Financial
  id: Financial
  children:
  - Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  - Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  - Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  - Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  name: Financial
  nameWithType: Financial
  fullName: Microsoft.VisualBasic.Financial
  type: Class
  summary: "A <xref uid=&quot;langword_csharp_Financial&quot; name=&quot;Financial&quot; href=&quot;&quot;> </xref> modul pénzügyi műveletek végrehajtásához használt eljárásokat tartalmaz."
  remarks: "Ez a modul támogatja a Visual Basic futásidejű kódtár kivonási irányelvnek, a jelenlegi és jövőbeni értékeket, a kamatláb, return és kifizetéseket például pénzügyi számításokat tagokat."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._25_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Financial
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadása egy eszköz értékcsökkenését egy adott időszakra vonatkozóan, vagy egyéb a két módszer használatával."
  remarks: "A dupla leírási gyorsított ütemben kivonási irányelvnek számítja ki. Kivonási irányelvnek az első időszaktól a legmagasabb, és a következő időszakokban csökken.       A `Life` és `Period` argumentumot kell megadni a azonos egységekben. Például ha `Life` hónapban, kap `Period` hónapon belül is meg kell adni. Az összes argumentumnak pozitív számnak kell lennie.       A `DDB` függvény a következő képlet használatával kiszámítja a értékcsökkenését egy adott időszakban: kivonási irányelvnek időszak = ((Cost – Salvage) * tényező) / élettartama"
  example:
  - "This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/0a9b2d8a-2f04-4c59-80da-_1.vb)]"
  syntax:
    content: public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);
    parameters:
    - id: Cost
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az eszköz kezdeti költségét."
    - id: Salvage
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>az eszköz hasznos élettartama végén értékének megadásával."
    - id: Life
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az eszköz hasznos élettartama hosszát."
    - id: Period
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az időszakot, mely eszköz kivonási irányelvnek számítani."
    - id: Factor
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a sebesség, amellyel az egyenleg elutasítja. Ha nincs megadva, 2 (leírási módszer) feltételezi."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadása egy eszköz értékcsökkenését egy adott időszakra vonatkozóan, vagy egyéb a két módszer használatával."
  overload: Microsoft.VisualBasic.Financial.DDB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Factor</code>&lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt;<code>Life.</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> , amely meghatározza egy járadék jövőbeli értékét időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  remarks: "Amely meghatározza egy járadék rögzített cash kifizetések adott idő alatt több. Amely meghatározza egy járadék egy (például otthoni jelzálog) kölcsönre egy (például egy havi megtakarítások terv) lehet.       A `Rate` és `NPer` argumentumok ki kell számítani az azonos egységekben időszak használatával. Például ha `Rate` hónapon belülre esik számítja `NPer` is ki kell számítani hónap használatával.       Az összes argumentum (például a megtakarítások betétek) kifizetett jelzik a negatív számok; (például az osztandó ellenőrzések) kapott pozitív számok jelzik."
  example:
  - "This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`). Note that because `Payment` represents cash paid out, it is a negative number.  \n  \n [!code-vb[VbVbalrMath#22](~/add/codesnippet/visualbasic/0c46fa91-bd2b-4dd0-a9f3-_1.vb)]"
  syntax:
    content: public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>időszakonkénti megadása. Például ha egy autó kölcsön beolvasni az éves százalékos aránya (6%/4!A) 10 százalékát, és havi kifizetések, időszakonként ez 0,1/12 vagy 0,0083."
    - id: NPer
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>a járadék fizetési időszak megadása. Például ha havi részletekben négy év car kölcsön, a kölcsön 4 x 12 (vagy 48) időszak összesen rendelkezik."
    - id: Pmt
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>minden időszak elvégzendő fizetési megadása. Kifizetések általában tartalmaznak egyszerű és iránt érdeklődik, amely nem változik a járadék élettartama során."
    - id: PV
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jelenlegi érték (vagy összeg) jövőbeli kifizetések sorozatát. Például amikor egy autó megvásárlása hitelfelvétel van szüksége, hitelösszeg értéke a teheti havi car fizetési hitelező számára. Ha nincs megadva, a 0 feltételezi."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Nem kötelező. Típusú objektum <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , amely megadja, amikor kifizetések terhelése miatt. Ennek az argumentumnak kell lennie, vagy <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> esetén kifizetések miatt a fizetési időszak végén vagy <xref uid=&quot;langword_csharp_DueDate.BegOfPeriod&quot; name=&quot;DueDate.BegOfPeriod&quot; href=&quot;&quot;> </xref> esetén kifizetések esedékes időszak elején. Ha nincs megadva, <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> feltételezi."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> , amely meghatározza egy járadék jövőbeli értékét időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  overload: Microsoft.VisualBasic.Financial.FV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> egy adott időszakra, amely meghatározza egy járadék kamatfizetést időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  remarks: "Amely meghatározza egy járadék rögzített cash kifizetések adott idő alatt több. Amely meghatározza egy járadék egy (például otthoni jelzálog) kölcsönre egy (például egy havi megtakarítások terv) lehet.       A `Rate` és `NPer` argumentumok ki kell számítani az azonos egységekben időszak használatával. Például ha `Rate` hónapon belülre esik számítja `NPer` is ki kell számítani hónap használatával.       Az összes argumentum (például a megtakarítások betétek) kifizetett jelzik a negatív számok; (például az osztandó ellenőrzések) kapott pozitív számok jelzik."
  example:
  - "This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#26](~/add/codesnippet/visualbasic/2fa7f248-74e0-4498-aee1-_1.vb)]"
  syntax:
    content: public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>időszakonkénti megadása. Például ha egy autó kölcsön beolvasni az éves százalékos aránya (6%/4!A) 10 százalékát, és havi kifizetések, időszakonként ez 0,1/12 vagy 0,0083."
    - id: Per
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a tartomány 1 – fizetési határidő `NPer`."
    - id: NPer
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>a járadék fizetési időszak megadása. Például ha havi részletekben négy év car kölcsön, a kölcsön 4 x 12 (vagy 48) időszak összesen rendelkezik."
    - id: PV
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jelenlegi érték, vagy jövőbeli kifizetések és befizetések sorozatát napjainkban érték. Például amikor egy autó megvásárlása hitelfelvétel van szüksége, hitelösszeg értéke a teheti havi car fizetési hitelező számára."
    - id: FV
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jövőbeni érték vagy egyenleget azt szeretné, hogy a végső fizetési elvégzése után. Például a jövőbeni érték oka $0, amely az értékét a végső fizetési után. Azonban ha 50 000 $ gyermeke oktatási célokra több mint 18 év menteni szeretné, majd $ 50 000 lesz a jövőbeli érték. Ha nincs megadva, a 0 feltételezi."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Nem kötelező. Típusú objektum <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , amely megadja, amikor kifizetések terhelése miatt. Ennek az argumentumnak kell lennie, vagy `DueDate.EndOfPeriod` esetén kifizetések miatt a fizetési időszak végén vagy `DueDate.BegOfPeriod` esetén kifizetések esedékes időszak elején. Ha nincs megadva, `DueDate.EndOfPeriod` feltételezi."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> egy adott időszakra, amely meghatározza egy járadék kamatfizetést időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  overload: Microsoft.VisualBasic.Financial.IPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;= 0 or <code>Per</code> &gt;<code>NPer</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  id: IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> adja meg a belső megtérülési rátát ismétlődő pénzmozgások (kifizetések és befizetések) sorozata."
  remarks: "A belső megtérülési rátát az kifizetések és befizetések rendszeres időközönként előforduló álló befektetés érkezett kamatláb.       A `IRR` a funkció a tömbön belüli értékek sorrendjét kifizetések és befizetések értékeket. Ne adja meg a fizetési és a fogadást értékek a megfelelő sorrendben. Az egyes időszakokhoz pénzforgalmi nem kell javítani, amely meghatározza egy járadék.       `IRR`közelítés számítja ki. A értékkel kezdődő `Guess`, `IRR` a számításokat, míg az eredmény 0,00001 százalékosnál ciklusokat. Ha `IRR` után 20 eredményt próbál, nem sikerül nem található."
  example:
  - "In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. `Guess` is the estimated internal rate of return.  \n  \n [!code-vb[VbVbalrMath#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._228_1.vb)]"
  syntax:
    content: public static double IRR (ref double[] ValueArray, double Guess = 0.1);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Kötelező. A tömb <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> pénzforgalmi értékek megadása. A tömb tartalmaznia kell legalább egy negatív (egy fizetési) és egy pozitív értékkel (visszaigazolás)."
    - id: Guess
      type: System.Double
      description: "Nem kötelező. Becslései értéket objektum által visszaadott <xref uid=&quot;langword_csharp_IRR&quot; name=&quot;IRR&quot; href=&quot;&quot;> </xref>. Ha nincs megadva, `Guess` 0,1 (10 százalék) van."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> adja meg a belső megtérülési rátát ismétlődő pénzmozgások (kifizetések és befizetések) sorozata."
  overload: Microsoft.VisualBasic.Financial.IRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tömb argumentum értékek érvénytelenek vagy <code> Guess </code> &lt;= -1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  id: MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> a módosított belső megtérülési az ismétlődő pénzmozgások (kifizetések és befizetések) adott sorozata."
  remarks: "A módosított belső megtérülési rátát a belső megtérülési rátát esetén kifizetések és befizetések különböző ütemben finanszíroznak. A `MIRR` függvény figyelembe kell venni a befektetés költségeit (`FinanceRate`) és a fogadott cash bevételek újbóli kamatláb (`ReinvestRate`).       A `FinanceRate` és `ReinvestRatearguments` százalékos értékben a decimális értékek. Például 12 százalékban van kifejezve 0.12.       A `MIRR` a funkció a tömbön belüli értékek sorrendjét kifizetések és befizetések értékeket. Ne adja meg a fizetési és a fogadást értékek a megfelelő sorrendben."
  example:
  - "This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`. `LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.  \n  \n [!code-vb[VbVbalrMath#29](~/add/codesnippet/visualbasic/ba568dc0-432d-4a7b-b1d0-_1.vb)]"
  syntax:
    content: public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Kötelező. A tömb <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> pénzforgalmi értékek megadása. A tömb tartalmaznia kell legalább egy negatív (egy fizetési) és egy pozitív értékkel (visszaigazolás)."
    - id: FinanceRate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a kamatláb fizetett pénzügyi költség."
    - id: ReinvestRate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a származó cash bevételek újrabefektetéséből származó bevételeket érkezett kamatláb alapján."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> a módosított belső megtérülési az ismétlődő pénzmozgások (kifizetések és befizetések) adott sorozata."
  overload: Microsoft.VisualBasic.Financial.MIRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1"
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "Nullával való osztás történt."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadása, amely meghatározza egy járadék időszakok számát időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  remarks: "Amely meghatározza egy járadék egy meghatározott időtartamra vonatkozóan rögzített cash kifizetések sorozata. Amely meghatározza egy járadék egy (például otthoni jelzálog) kölcsönre egy (például egy havi megtakarítások terv) lehet.       Az összes argumentum (például a megtakarítások betétek) kifizetett jelzik a negatív számok; (például az osztandó ellenőrzések) kapott pozitív számok jelzik."
  example:
  - "This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`. Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#19](~/add/codesnippet/visualbasic/57cf6dfc-5811-4703-a937-_1.vb)]"
  syntax:
    content: public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>időszakonkénti megadása. Például ha egy autó kölcsön beolvasni az éves százalékos aránya (6%/4!A) 10 százalékát, és havi kifizetések, időszakonként ez 0,1/12 vagy 0,0083."
    - id: Pmt
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>minden időszak elvégzendő fizetési megadása. Kifizetések általában tartalmaznak egyszerű és iránt érdeklődik, amely nem változik a járadék élettartama során."
    - id: PV
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jelenlegi érték, vagy jövőbeli kifizetések és befizetések sorozatát napjainkban érték. Például amikor egy autó megvásárlása hitelfelvétel van szüksége, hitelösszeg értéke a teheti havi car fizetési hitelező számára."
    - id: FV
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jövőbeni érték vagy azt szeretné, miután kiválasztotta a végső fizetési egyenleget. Például a jövőbeni érték oka $0, amely az értékét a végső fizetési után. Azonban ha 50 000 $ gyermeke oktatási célokra több mint 18 év menteni szeretné, majd $ 50 000 lesz a jövőbeli érték. Ha nincs megadva, a 0 feltételezi."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Nem kötelező. Típusú objektum <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , amely megadja, amikor kifizetések terhelése miatt. Ennek az argumentumnak kell lennie, vagy `DueDate.EndOfPeriod` esetén kifizetések miatt a fizetési időszak végén vagy `DueDate.BegOfPeriod` esetén kifizetések esedékes időszak elején. Ha nincs megadva, `DueDate.EndOfPeriod` feltételezi."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadása, amely meghatározza egy járadék időszakok számát időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  overload: Microsoft.VisualBasic.Financial.NPer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rate</code>= 0 and <code>Pmt</code> = 0"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  id: NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadása egy befektetés nettó jelenértékét ismétlődő pénzmozgások (kifizetések és befizetések) és diszkontráta alapján."
  remarks: "Egy befektetés nettó jelenértékét kifizetések és befizetések jövőbeli sorozata aktuális értéke.       A `NPV` a funkció a tömbön belüli értékek sorrendjét kifizetések és befizetések értékeket. Ne adja meg a fizetési és a fogadást értékek a megfelelő sorrendben.       A `NPV` befektetési első pénzforgalmi értékét a dátum előtt egy időszakkal kezdődik, és a tömb utolsó pénzforgalmi értékkel végződik.       A net található érték kiszámításához jövőbeli cash-flow alapul. Az első időszaktól elején az első pénzforgalmi akkor fordul elő, ha az első olyan értéket kell adni által visszaadott érték `NPV` és nem kell foglalni a pénzforgalmi értékei `ValueArray`.       A `NPV` függvény hasonlít a `PV` függvény (jelenértékének), kivéve a `PV` funkció lehetővé teszi, hogy vége vagy egy időszak kezdete pénzmozgások. A változó eltérően `NPV` pénzforgalmi értékek `PV` cash-flow javítani kell a befektetés teljes."
  example:
  - "This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`. The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.  \n  \n [!code-vb[VbVbalrMath#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._103_1.vb)]"
  syntax:
    content: public static double NPV (double Rate, ref double[] ValueArray);
    parameters:
    - id: Rate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a kedvezményes időszak hossza, kifejezett decimálisként."
    - id: ValueArray
      type: System.Double[]
      description: "Kötelező. A tömb <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> pénzforgalmi értékek megadása. A tömb tartalmaznia kell legalább egy negatív (egy fizetési) és egy pozitív értékkel (visszaigazolás)."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadása egy befektetés nettó jelenértékét ismétlődő pénzmozgások (kifizetések és befizetések) és diszkontráta alapján."
  overload: Microsoft.VisualBasic.Financial.NPV*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ValueArray</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> járadék teljes befizetést időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  remarks: "Amely meghatározza egy járadék rögzített cash kifizetések során egy adott időn belül több. Amely meghatározza egy járadék egy (például otthoni jelzálog) kölcsönre egy (például egy havi megtakarítások terv) lehet.       A `Rate` és `NPer` argumentumok ki kell számítani az azonos egységekben időszak használatával. Például ha `Rate` hónapon belülre esik számítja `NPer` is ki kell számítani hónap használatával.       Az összes argumentum (például a megtakarítások betétek) fizetett jelzik a negatív számok; (például az osztandó ellenőrzések) kapott pozitív számok jelzik."
  example:
  - "This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`  \n  \n [!code-vb[VbVbalrMath#7](~/add/codesnippet/visualbasic/7dc3a2f6-c47c-4a51-b799-_1.vb)]"
  syntax:
    content: public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Megadja a időszakonkénti kamatlábat. Például ha egy autó kölcsön beolvasni az éves százalékos aránya (6%/4!A) 10 százalékát, és havi kifizetések, időszakonként ez 0,1/12 vagy 0,0083."
    - id: NPer
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a járadék fizetési időszakok száma. Például ha havi részletekben négy év car kölcsön, a kölcsön 4 x 12 (vagy 48) időszak összesen rendelkezik."
    - id: PV
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jelenlegi érték (vagy összeg) a jövőben fizetendő kifizetések amely egyenértékű. Például amikor egy autó megvásárlása hitelfelvétel van szüksége, hitelösszeg értéke a teheti havi car fizetési hitelező számára."
    - id: FV
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jövőbeni érték vagy azt szeretné, miután kiválasztotta a végső fizetési egyenleget. Például a jövőbeni érték oka $0, amely az értékét a végső fizetési után. Azonban ha gyermeke oktatási célokra 18 évben $ 50 000 menteni szeretné, majd $ 50 000 lesz a jövőbeli érték. Ha nincs megadva, a 0 feltételezi."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Nem kötelező. Típusú objektum <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , amely megadja, amikor kifizetések terhelése miatt. Ennek az argumentumnak kell lennie, vagy `DueDate.EndOfPeriod` esetén kifizetések miatt a fizetési időszak végén vagy `DueDate.BegOfPeriod` esetén kifizetések esedékes időszak elején. Ha nincs megadva, `DueDate.EndOfPeriod` feltételezi."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> járadék teljes befizetést időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  overload: Microsoft.VisualBasic.Financial.Pmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> egy adott időszakra, amely meghatározza egy járadék befizetést időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  remarks: "Amely meghatározza egy járadék egy meghatározott időtartamra vonatkozóan rögzített cash kifizetések sorozata. Amely meghatározza egy járadék egy (például otthoni jelzálog) kölcsönre egy (például egy havi megtakarítások terv) lehet.       A `Rate` és `NPer` argumentumok ki kell számítani az azonos egységekben időszak használatával. Például ha `Rate` hónapon belülre esik számítja `NPer` is ki kell számítani hónap használatával.       Az összes argumentum (például a megtakarítások betétek) fizetett jelzik a negatív számok; (például az osztandó ellenőrzések) kapott pozitív számok jelzik."
  example:
  - "This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#24](~/add/codesnippet/visualbasic/43623fd2-2acb-4eab-9abc-_1.vb)]"
  syntax:
    content: public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Megadja a időszakonkénti kamatlábat. Például ha egy autó kölcsön beolvasni az éves százalékos aránya (6%/4!A) 10 százalékát, és havi kifizetések, időszakonként ez 0,1/12 vagy 0,0083."
    - id: Per
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a fizetési határidő közötti tartományban 1 `NPer`."
    - id: NPer
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a járadék fizetési időszakok száma. Például ha havi részletekben négy év car kölcsön, a kölcsön 4 x 12 (vagy 48) időszak összesen rendelkezik."
    - id: PV
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>jövőbeli kifizetések és befizetések sorozata aktuális értékét adja meg. Például amikor egy autó megvásárlása hitelfelvétel van szüksége, hitelösszeg értéke a teheti havi car fizetési hitelező számára."
    - id: FV
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jövőbeni érték vagy azt szeretné, miután kiválasztotta a végső fizetési egyenleget. Például a jövőbeni érték oka $0, amely az értékét a végső fizetési után. Azonban ha 50 000 $ gyermeke oktatási célokra több mint 18 év menteni szeretné, majd $ 50 000 lesz a jövőbeli érték. Ha nincs megadva, a 0 feltételezi."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Nem kötelező. Típusú objektum <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , amely megadja, amikor kifizetések terhelése miatt. Ennek az argumentumnak kell lennie, vagy `DueDate.EndOfPeriod` esetén kifizetések miatt a fizetési időszak végén vagy `DueDate.BegOfPeriod` esetén kifizetések esedékes időszak elején. Ha nincs megadva, `DueDate.EndOfPeriod` feltételezi."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> egy adott időszakra, amely meghatározza egy járadék befizetést időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  overload: Microsoft.VisualBasic.Financial.PPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;=0 or <code>Per</code> &gt; <code>NPer</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadásával, amely meghatározza egy járadék jelenértékét a jövőben fizetendő időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  remarks: "Amely meghatározza egy járadék egy meghatározott időtartamra vonatkozóan rögzített cash kifizetések sorozata. Amely meghatározza egy járadék egy (például otthoni jelzálog) kölcsönre egy (például egy havi megtakarítások terv) lehet.       A `Rate` és `NPer` argumentumok ki kell számítani az azonos egységekben időszak használatával. Például ha `Rate` hónapon belülre esik számítja `NPer` is ki kell számítani hónap használatával.       Az összes argumentum (például a megtakarítások betétek) kifizetett jelzik a negatív számok; (például az osztandó ellenőrzések) kapott pozitív számok jelzik."
  example:
  - "In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`). Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.  \n  \n [!code-vb[VbVbalrMath#25](~/add/codesnippet/visualbasic/0175a2c1-5f6c-4f6b-9587-_1.vb)]"
  syntax:
    content: public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Megadja a időszakonkénti kamatlábat. Például ha egy autó kölcsön beolvasni az éves százalékos aránya (6%/4!A) 10 százalékát, és havi kifizetések, időszakonként ez 0,1/12 vagy 0,0083."
    - id: NPer
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a járadék fizetési időszakok száma. Például ha havi részletekben négy év car kölcsön, a hitel időszakainak 4 x 12 (vagy 48) fizetési."
    - id: Pmt
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az egyes időszakokhoz elvégzendő fizetési. Kifizetések általában tartalmaznak, és a iránt érdeklődik, amely nem változik a járadék élettartama során."
    - id: FV
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Megadja azt szeretné, hogy miután elvégezte a végső fizetési jövőbeni érték vagy cash egyenleg. Például a jövőbeni érték oka $0, amely az értékét a végső fizetési után. Azonban ha 50 000 $ gyermeke oktatási célokra több mint 18 év menteni szeretné, majd $ 50 000 lesz a jövőbeli érték. Ha nincs megadva, a 0 feltételezi."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Nem kötelező. Típusú objektum <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , amely megadja, amikor kifizetések terhelése miatt. Ennek az argumentumnak kell lennie, vagy `DueDate.EndOfPeriod` esetén kifizetések miatt a fizetési időszak végén vagy `DueDate.BegOfPeriod` esetén kifizetések esedékes időszak elején. Ha nincs megadva, `DueDate.EndOfPeriod` feltételezi."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadásával, amely meghatározza egy járadék jelenértékét a jövőben fizetendő időszakos, rögzített nagyságú befizetések és rögzített kamatláb alapján."
  overload: Microsoft.VisualBasic.Financial.PV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  id: Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadásával, amely meghatározza egy járadék időszakonkénti kamatlábat."
  remarks: "Amely meghatározza egy járadék egy meghatározott időtartamra vonatkozóan rögzített cash kifizetések sorozata. Amely meghatározza egy járadék egy (például otthoni jelzálog) kölcsönre egy (például egy havi megtakarítások terv) lehet.       Az összes argumentum (például a megtakarítások betétek) kifizetett jelzik a negatív számok; (például az osztandó ellenőrzések) kapott pozitív számok jelzik.       `Rate`közelítés számítja ki. A értékkel kezdődő `Guess`, `Rate` a számításokat, míg az eredmény 0,00001 százalékosnál ciklusokat. Ha `Rate` után 20 eredményt próbál, nem sikerül nem található. Ha a becslés 10 százaléka és `Rate` sikertelen, próbálja meg más értéket `Guess`."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/ea19cd36-8223-44a7-9131-_1.vb)]"
  syntax:
    content: public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);
    parameters:
    - id: NPer
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a járadék fizetési időszakok száma. Például ha havi részletekben négy év car kölcsön, a kölcsön 4 * 12 (vagy 48) időszak összesen rendelkezik."
    - id: Pmt
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az egyes időszakokhoz elvégzendő fizetési. Kifizetések általában tartalmaznak egyszerű és iránt érdeklődik, amely nem változik a járadék élettartama során."
    - id: PV
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg a jelenlegi érték, vagy későbbi kifizetések és befizetések sorozatát napjainkban érték. Például amikor egy autó megvásárlása hitelfelvétel van szüksége, hitelösszeg értéke a teheti havi car fizetési hitelező számára."
    - id: FV
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Megadja azt szeretné, hogy miután elvégezte a végső fizetési jövőbeni érték vagy cash egyenleg. Például a jövőbeni érték oka $0, amely az értékét a végső fizetési után. Azonban ha 50 000 $ gyermeke oktatási célokra több mint 18 év menteni szeretné, majd $ 50 000 lesz a jövőbeli érték. Ha nincs megadva, a 0 feltételezi."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Nem kötelező. Típusú objektum <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , amely megadja, amikor kifizetések terhelése miatt. Ennek az argumentumnak kell lennie, vagy `DueDate.EndOfPeriod` esetén kifizetések miatt a fizetési időszak végén vagy `DueDate.BegOfPeriod` esetén kifizetések esedékes időszak elején. Ha nincs megadva, `DueDate.EndOfPeriod` feltételezi."
    - id: Guess
      type: System.Double
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>becslései értéket adja vissza, <xref uid=&quot;langword_csharp_Rate&quot; name=&quot;Rate&quot; href=&quot;&quot;> </xref>. Ha nincs megadva, `Guess` 0,1 (10 százalék) van."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> megadásával, amely meghatározza egy járadék időszakonkénti kamatlábat."
  overload: Microsoft.VisualBasic.Financial.Rate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  id: SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> értékcsökkenését lineáris eszköz egy időszakra."
  remarks: "A kivonási irányelvnek időszak kell megadni, mint az azonos egységben a `Life` argumentum. Az összes argumentumnak pozitív számnak kell lennie."
  example:
  - "This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public static double SLN (double Cost, double Salvage, double Life);
    parameters:
    - id: Cost
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az eszköz kezdeti költségét."
    - id: Salvage
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>az eszköz hasznos élettartama végén értékének megadásával."
    - id: Life
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az eszköz hasznos élettartama hosszát."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> értékcsökkenését lineáris eszköz egy időszakra."
  overload: Microsoft.VisualBasic.Financial.SLN*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Life</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  id: SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> értékcsökkenését sum évek számjegyösszegével eszköz meghatározott ideje."
  remarks: "A `Life` és `Period` argumentumot kell megadni a azonos egységekben. Például ha `Life` hónapban, kap `Period` hónapon belül is meg kell adni. Az összes argumentumnak pozitív számnak kell lennie."
  example:
  - "This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/9fc7d5a0-c6cb-4861-b899-_1.vb)]"
  syntax:
    content: public static double SYD (double Cost, double Salvage, double Life, double Period);
    parameters:
    - id: Cost
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az eszköz kezdeti költségét."
    - id: Salvage
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>az eszköz hasznos élettartama végén értékének megadásával."
    - id: Life
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>az eszköz hasznos élettartama hosszát adja meg."
    - id: Period
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Adja meg az időszakot, mely eszköz kivonási irányelvnek számítani."
    return:
      type: System.Double
      description: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> értékcsökkenését sum évek számjegyösszegével eszköz meghatározott ideje."
  overload: Microsoft.VisualBasic.Financial.SYD*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Salvage</code>&lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DivideByZeroException
  isExternal: true
  name: System.DivideByZeroException
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.DueDate
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DueDate
  nameWithType: DueDate
  fullName: Microsoft.VisualBasic.DueDate
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.DDB*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB
  nameWithType: Financial.DDB
- uid: Microsoft.VisualBasic.Financial.FV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV
  nameWithType: Financial.FV
- uid: Microsoft.VisualBasic.Financial.IPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt
  nameWithType: Financial.IPmt
- uid: Microsoft.VisualBasic.Financial.IRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR
  nameWithType: Financial.IRR
- uid: Microsoft.VisualBasic.Financial.MIRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR
  nameWithType: Financial.MIRR
- uid: Microsoft.VisualBasic.Financial.NPer*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer
  nameWithType: Financial.NPer
- uid: Microsoft.VisualBasic.Financial.NPV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV
  nameWithType: Financial.NPV
- uid: Microsoft.VisualBasic.Financial.Pmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt
  nameWithType: Financial.Pmt
- uid: Microsoft.VisualBasic.Financial.PPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt
  nameWithType: Financial.PPmt
- uid: Microsoft.VisualBasic.Financial.PV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV
  nameWithType: Financial.PV
- uid: Microsoft.VisualBasic.Financial.Rate*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate
  nameWithType: Financial.Rate
- uid: Microsoft.VisualBasic.Financial.SLN*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN
  nameWithType: Financial.SLN
- uid: Microsoft.VisualBasic.Financial.SYD*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD
  nameWithType: Financial.SYD
