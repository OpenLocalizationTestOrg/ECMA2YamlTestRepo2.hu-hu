### YamlMime:ManagedReference
items:
- uid: System.Collections.CollectionBase
  id: CollectionBase
  children:
  - System.Collections.CollectionBase.#ctor
  - System.Collections.CollectionBase.#ctor(System.Int32)
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnClearComplete
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: CollectionBase
  nameWithType: CollectionBase
  fullName: System.Collections.CollectionBase
  type: Class
  summary: "Biztosítja a <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> alaposztályban a egy szigorú típusmegadású gyűjteményt."
  remarks: "Egy CollectionBase példány mindig módosítható. Tekintse meg <xref:System.Collections.ReadOnlyCollectionBase>ezt az osztályt csak olvasható verziója</xref:System.Collections.ReadOnlyCollectionBase>       Egy CollectionBase kapacitása a CollectionBase tárolására képes elemek száma. Elemek hozzáadása a egy CollectionBase, automatikusan nagyobb-e a kapacitás szükség szerint keresztül foglalásainak módosítása. A kapacitás beállításával csökkenthetők a <xref:System.Collections.CollectionBase.Capacity%2A>tulajdonság explicit módon.</xref:System.Collections.CollectionBase.Capacity%2A>"
  example:
  - "The following code example implements the CollectionBase class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/t-system.collections.col_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/t-system.collections.col_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/t-system.collections.col_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class CollectionBase : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: CollectionBase()
  nameWithType: CollectionBase.CollectionBase()
  fullName: System.Collections.CollectionBase.CollectionBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> osztály az alapértelmezett kezdeti kapacitással rendelkező átjáróeszközt."
  remarks: "A kapacitása egy <xref:System.Collections.CollectionBase>elemek száma, amelyek a <xref:System.Collections.CollectionBase>tárolására képes.</xref:System.Collections.CollectionBase> </xref:System.Collections.CollectionBase> Az elemek hozzáadása egy <xref:System.Collections.CollectionBase>, automatikusan jobb lesz, a kapacitás kérelmének újra-hozzárendelése a belső tömbnek.</xref:System.Collections.CollectionBase>       Ha a gyűjtemény méreténél becsülhető, adja meg a kezdeti kapacitása szükségtelenné teszi többféle átméretezési műveletek elemek a <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> való hozzáadása közben       Ez a konstruktor O(1) során."
  syntax:
    content: protected CollectionBase ();
    parameters: []
  overload: System.Collections.CollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: CollectionBase(Int32)
  nameWithType: CollectionBase.CollectionBase(Int32)
  fullName: System.Collections.CollectionBase.CollectionBase(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> osztály a megadott kapacitással rendelkező átjáróeszközt."
  remarks: "A kapacitása egy <xref:System.Collections.CollectionBase>elemek száma, amelyek a <xref:System.Collections.CollectionBase>tárolására képes.</xref:System.Collections.CollectionBase> </xref:System.Collections.CollectionBase> Az elemek hozzáadása egy <xref:System.Collections.CollectionBase>, automatikusan jobb lesz, a kapacitás kérelmének újra-hozzárendelése a belső tömbnek.</xref:System.Collections.CollectionBase>       Ha a gyűjtemény méreténél becsülhető, adja meg a kezdeti kapacitása szükségtelenné teszi többféle átméretezési műveletek elemek a <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> való hozzáadása közben       Ez a konstruktor egy O (`n`) műveletet, ahol `n` van `capacity`."
  syntax:
    content: protected CollectionBase (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "Az új lista kezdetben tárolására alkalmas elemek száma."
  overload: System.Collections.CollectionBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.Capacity
  id: Capacity
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: Capacity
  nameWithType: CollectionBase.Capacity
  fullName: System.Collections.CollectionBase.Capacity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi vagy beállítja az elemek száma, amelyek a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> tartalmazhat."
  remarks: "Kapacitása elemek száma, amelyek a <xref:System.Collections.CollectionBase>tárolhatja.</xref:System.Collections.CollectionBase> <xref:System.Collections.CollectionBase.Count%2A>elemek, amelyek ténylegesen az <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> száma</xref:System.Collections.CollectionBase.Count%2A>       Kapacitása mindig nagyobb vagy egyenlő a <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A> Ha <xref:System.Collections.CollectionBase.Count%2A>meghaladja a kapacitását elem hozzáadása közben, a kapacitás automatikusan növekszik a belső tömbnek újra-hozzárendelése előtt másolja a régi és az új elemekkel.</xref:System.Collections.CollectionBase.Count%2A>       A kapacitás csökkenthetők a kapacitás tulajdonság explicit módon beállításával. A kapacitás értéke explicit módon, ha a belső tömbnek is a megadott kapacitás alkalmazásához újra felhasználni.       Ez a tulajdonság értékének beolvasása során O(1); O a következő tulajdonság beállítása (`n`) műveletet, ahol `n` új kapacitás."
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "Az elemek száma, amelyek a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> tartalmazhat."
  overload: System.Collections.CollectionBase.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Egy érték, amely kisebb, mint <xref:System.Collections.CollectionBase.Count*>.</xref:System.Collections.CollectionBase.Count*> kapacitás beállítása"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Nincs elég memória érhető el a rendszer."
  platform:
  - net462
- uid: System.Collections.CollectionBase.Clear
  id: Clear
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: Clear()
  nameWithType: CollectionBase.Clear()
  fullName: System.Collections.CollectionBase.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Eltávolítja az összes objektum a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány. Ez a metódus nem bírálható felül."
  remarks: "<xref:System.Collections.CollectionBase.Count%2A>nullára van állítva.</xref:System.Collections.CollectionBase.Count%2A>       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A>       Egyéni műveletek elvégzéséhez előtt vagy után a gyűjtemény nincs bejelölve, bírálja felül a védett <xref:System.Collections.CollectionBase.OnClear%2A>vagy <xref:System.Collections.CollectionBase.OnClearComplete%2A>metódus.</xref:System.Collections.CollectionBase.OnClearComplete%2A> </xref:System.Collections.CollectionBase.OnClear%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.CollectionBase.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.Count
  id: Count
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: Count
  nameWithType: CollectionBase.Count
  fullName: System.Collections.CollectionBase.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi a levő elemek száma a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány. Ez a tulajdonság nem bírálható felül."
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/p-system.collections.col_0_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/p-system.collections.col_0_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/p-system.collections.col_0_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Levő elemek száma a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány.       Ez a tulajdonság értékének beolvasása során O(1)."
  overload: System.Collections.CollectionBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: CollectionBase.GetEnumerator()
  fullName: System.Collections.CollectionBase.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Adja vissza, amely megismétli a számbavevő a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "[A Visual Basic, a C#]       A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége.  Ezért használatával `foreach` ajánlott, az adatbázis közvetlen módosítása az enumerátor helyett.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.IEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.IEnumerator.Reset%2A> At ez elhelyezése, hívja <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.IEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.IEnumerator.Current%2A>átállítása.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Ha <xref:System.Collections.IEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.IEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.IEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.IEnumerator.MoveNext%2A>visszaadott `false`, hívó <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> követ</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenné válik, és <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>egy <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> jelez</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> , vagy hívja a következő Ha a gyűjtemény módosítás közötti <xref:System.Collections.IEnumerator.MoveNext%2A>és <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>adja vissza az elem, értékűre van állítva, akkor is, ha a számláló már érvénytelenné válik.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem biztonságos szál eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Bár a GetEnumerator metódus nem látható a COM-ügyfelek alapértelmezés szerint, a szülőobjektumtól a <xref:System.Collections.CollectionBase>osztály is elérhetővé teheti azt, és a COM-ügyfelekben nem kívánt viselkedést okozhatnak.</xref:System.Collections.CollectionBase>       Ez a módszer O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/m-system.collections.col_2_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/m-system.collections.col_2_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/m-system.collections.col_2_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>a a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.CollectionBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.InnerList
  id: InnerList
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: InnerList
  nameWithType: CollectionBase.InnerList
  fullName: System.Collections.CollectionBase.InnerList
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi egy <xref href=&quot;System.Collections.ArrayList&quot;> </xref> elemeinek listáját tartalmazó a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonságot, de nem a példányon a InnerList tulajdonsága által visszaadott.</xref:System.Collections.CollectionBase.List%2A>"
  syntax:
    content: protected System.Collections.ArrayList InnerList { get; }
    return:
      type: System.Collections.ArrayList
      description: "Egy <xref href=&quot;System.Collections.ArrayList&quot;> </xref> képviselő a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány magát.       Ez a tulajdonság értékének beolvasása során O(1)."
  overload: System.Collections.CollectionBase.InnerList*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.List
  id: List
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: List
  nameWithType: CollectionBase.List
  fullName: System.Collections.CollectionBase.List
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi egy <xref:System.Collections.IList>elemeinek listáját tartalmazó a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány.</xref:System.Collections.IList>"
  remarks: "Az On * módszerek hívják, csak a lista tulajdonsága által visszaadott példányon, de nem a példány által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A>       Ez a tulajdonság értékének beolvasása során O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/p-system.collections.col_1_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/p-system.collections.col_1_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/p-system.collections.col_1_1.vb)]"
  syntax:
    content: protected System.Collections.IList List { get; }
    return:
      type: System.Collections.IList
      description: "Egy <xref:System.Collections.IList>képviselő a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány magát.</xref:System.Collections.IList>"
  overload: System.Collections.CollectionBase.List*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnClear
  id: OnClear
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnClear()
  nameWithType: CollectionBase.OnClear()
  fullName: System.Collections.CollectionBase.OnClear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "További egyéni folyamatok hajtja tartalmának törlése a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi egy származtatott osztályt valamilyen művelet végrehajtása előtt a gyűjtemény üres.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       A folyamat sikertelen lesz, ha a gyűjtemény visszaáll az előző állapotába.       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Collections.CollectionBase.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnClearComplete
  id: OnClearComplete
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: CollectionBase.OnClearComplete()
  fullName: System.Collections.CollectionBase.OnClearComplete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hajt végre további egyéni folyamatok tartalmának törlése után a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi egy származtatott osztályt valamilyen művelet végrehajtása után a gyűjtemény üres.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Collections.CollectionBase.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  id: OnInsert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnInsert(Int32,Object)
  nameWithType: CollectionBase.OnInsert(Int32,Object)
  fullName: System.Collections.CollectionBase.OnInsert(Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "További egyéni folyamatok elvégzi az új elem beszúrása előtt a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja általi valamilyen művelet végrehajtása előtt a megadott elem szerepel a származtatott osztály célja.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       A folyamat sikertelen lesz, ha a gyűjtemény visszaáll az előző állapotába.       Ez a módszer az alapértelmezett implementációja O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/m-system.collections.col_1_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/m-system.collections.col_1_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/m-system.collections.col_1_1.vb)]"
  syntax:
    content: protected virtual void OnInsert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Szúrja be a nulla alapú index `value`."
    - id: value
      type: System.Object
      description: "Az új érték a következő helyen lévő elem `index`."
  overload: System.Collections.CollectionBase.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: CollectionBase.OnInsertComplete(Int32,Object)
  fullName: System.Collections.CollectionBase.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hajt végre további egyéni folyamatok után az új elem beszúrása a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan bírálható felül egy származtatott osztály a megadott elem beszúrása után néhány művelet végrehajtásához.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       A gyűjtemény visszaáll az előző állapotába esetén a következők egyikét:-a folyamat sikertelen lesz.      – Ezt a módszert felülbírálja a kivételt jelez.       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Szúrja be a nulla alapú index `value`."
    - id: value
      type: System.Object
      description: "Az új érték a következő helyen lévő elem `index`."
  overload: System.Collections.CollectionBase.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  id: OnRemove(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnRemove(Int32,Object)
  nameWithType: CollectionBase.OnRemove(Int32,Object)
  fullName: System.Collections.CollectionBase.OnRemove(Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "További egyéni folyamatok hajt végre, amikor egy elem eltávolítása a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi valamilyen művelet végrehajtása előtt a rendszer eltávolítja a megadott elem egy származtatott osztályt.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       A folyamat sikertelen lesz, ha a gyűjtemény visszaáll az előző állapotába.       Ez a módszer az alapértelmezett implementációja O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/m-system.collections.col_0_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/m-system.collections.col_0_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/m-system.collections.col_0_1.vb)]"
  syntax:
    content: protected virtual void OnRemove (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `value` található."
    - id: value
      type: System.Object
      description: "Távolítsa el az elem értékének `index`."
  overload: System.Collections.CollectionBase.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: CollectionBase.OnRemoveComplete(Int32,Object)
  fullName: System.Collections.CollectionBase.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Egy elemnek az eltávolítása után további egyéni folyamatok végez a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan bírálható felül egy származtatott osztály a megadott elem eltávolítása után néhány művelet végrehajtásához.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       A gyűjtemény visszaáll az előző állapotába esetén a következők egyikét:-a folyamat sikertelen lesz.      – Ezt a módszert felülbírálja a kivételt jelez.       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `value` található."
    - id: value
      type: System.Object
      description: "Távolítsa el az elem értékének `index`."
  overload: System.Collections.CollectionBase.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  id: OnSet(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnSet(Int32,Object,Object)
  nameWithType: CollectionBase.OnSet(Int32,Object,Object)
  fullName: System.Collections.CollectionBase.OnSet(Int32,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Érték beállítása előtt további egyéni folyamatok végez a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi származtatott osztály valamilyen művelet végrehajtása előtt a megadott elem értéke legyen.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       A folyamat sikertelen lesz, ha a gyűjtemény visszaáll az előző állapotába.       Ez a módszer az alapértelmezett implementációja O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/b38eea40-0898-4372-aa13-_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/b38eea40-0898-4372-aa13-_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/b38eea40-0898-4372-aa13-_1.vb)]"
  syntax:
    content: protected virtual void OnSet (int index, object oldValue, object newValue);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `oldValue` található."
    - id: oldValue
      type: System.Object
      description: "Lecseréli a érték `newValue`."
    - id: newValue
      type: System.Object
      description: "Az új érték a következő helyen lévő elem `index`."
  overload: System.Collections.CollectionBase.OnSet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  id: OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnSetComplete(Int32,Object,Object)
  nameWithType: CollectionBase.OnSetComplete(Int32,Object,Object)
  fullName: System.Collections.CollectionBase.OnSetComplete(Int32,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Érték beállítása után további egyéni folyamatok végez a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi származtatott osztály valamilyen művelet végrehajtása után a megadott elem értéke legyen.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       A gyűjtemény visszaáll az előző állapotába esetén a következők egyikét:-a folyamat sikertelen lesz.      – Ezt a módszert felülbírálja a kivételt jelez.       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnSetComplete (int index, object oldValue, object newValue);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `oldValue` található."
    - id: oldValue
      type: System.Object
      description: "Lecseréli a érték `newValue`."
    - id: newValue
      type: System.Object
      description: "Az új érték a következő helyen lévő elem `index`."
  overload: System.Collections.CollectionBase.OnSetComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: CollectionBase.OnValidate(Object)
  fullName: System.Collections.CollectionBase.OnValidate(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "További egyéni folyamatok hajtja érték ellenőrzése."
  remarks: "Meghatározza, hogy ez a módszer az alapértelmezett implementációja e `value` van `null`, és ha igen, okoz <xref:System.ArgumentNullException>.</xref:System.ArgumentNullException> További művelet végrehajtására, amikor a rendszer érvényesíti a megadott elem származtatott osztálya általi szolgál.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.CollectionBase.List%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.CollectionBase.InnerList%2A>tulajdonság.</xref:System.Collections.CollectionBase.InnerList%2A> </xref:System.Collections.CollectionBase.List%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/m-system.collections.col_3_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/m-system.collections.col_3_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/m-system.collections.col_3_1.vb)]"
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Az objektum ellenőrzése."
  overload: System.Collections.CollectionBase.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: CollectionBase.RemoveAt(Int32)
  fullName: System.Collections.CollectionBase.RemoveAt(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Eltávolítja a megadott indexpozíciójánál található elem a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> példány. Ez a metódus nincs felülbírálható."
  remarks: "A szomszédos elemeket, listák, például a gyűjtemények az elemeket, kövesse az eltávolított elem feljebb a vacated helyszíni elfoglalt. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportosítva gyűjtők, például egy kivonattáblát gyűjteményére vonatkoznak.       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Az eltávolítandó elem nulla alapú indexét."
  overload: System.Collections.CollectionBase.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> egyenlőnek vagy annál nagyobb <xref:System.Collections.CollectionBase.Count*>."
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: CollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Másolja át a teljes <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> egy kompatibilis egydimenziós <xref:System.Array>, a megadott index a céltömb induló.</xref:System.Array>"
  remarks: "A megadott tömb egy kompatibilis típusúnak kell lennie.       Ez a módszer <xref:System.Array.Copy%2A?displayProperty=fullName>elemeinek másolásához.</xref:System.Array.Copy%2A?displayProperty=fullName>       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Az egydimenziós <xref:System.Array>átmásolva elem, amely a cél <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>.</xref:System.Array> A <xref:System.Array>kell rendelkeznie a nulla alapú indexelést.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét `array` mely másolása megkezdődik."
  overload: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>többdimenziós.       – vagy – a forrás elemeinek száma <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> nagyobb, mint a rendelkezésre álló terület <code>index</code> a cél végére <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A forrás típusa <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> nem konvertálható automatikusan a cél típusa <code> array </code>."
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: CollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Egy érték, amely jelzi, hogy hozzáférést lekérdezi a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> van (a többszálú futtatásra) szinkronizálva."
  remarks: "A <xref:System.Collections.CollectionBase>példány nincs szinkronizálva.</xref:System.Collections.CollectionBase> Származtatott osztályok is adja meg a szinkronizált verzióját a <xref:System.Collections.CollectionBase>használatával a <xref:System.Collections.ICollection.SyncRoot%2A>tulajdonság.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.CollectionBase>       Egy gyűjtemény számbavétele nincs belsőleg egy szál biztonságos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Az alábbi példakód bemutatja, hogyan a gyűjteményhez történő zárolja a <xref:System.Collections.ICollection.SyncRoot%2A>a teljes enumerálása során: [!code-cpp [System.Collections.CollectionBase#2](~/add/codesnippet/cpp/c3b5b435-5577-4ea3-8822-_1.cpp)][!code-cs[System.Collections.CollectionBase#2](~/add/codesnippet/csharp/c3b5b435-5577-4ea3-8822-_1.cs)][!code-vb[System.Collections.CollectionBase#2](~/add/codesnippet/visualbasic/c3b5b435-5577-4ea3-8822-_1.vb) ] a tulajdonság értékének beolvasása során O(1).    </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférést a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> van (a többszálú futtatásra) szinkronizált; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: CollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása lekérdezi a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>."
  remarks: "Származtatott osztályok is adja meg a saját szinkronizált verzióját a <xref:System.Collections.CollectionBase>használatával a <xref:System.Collections.ICollection.SyncRoot%2A>tulajdonság.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.CollectionBase> A szinkronizálási kódot kell műveleteket végezhet a <xref:System.Collections.ICollection.SyncRoot%2A>, a <xref:System.Collections.CollectionBase>, nem közvetlenül a <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> a</xref:System.Collections.CollectionBase> </xref:System.Collections.ICollection.SyncRoot%2A> Ez biztosítja, hogy a gyűjtemények más objektumok származó megfelelő működését. Pontosabban, tart fenn a megfelelő szinkronizálási más szállal, amely előfordulhat, hogy egyidejűleg módosítása a <xref:System.Collections.CollectionBase>objektum.</xref:System.Collections.CollectionBase>       Egy gyűjtemény számbavétele nincs belsőleg egy szál biztonságos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Az alábbi példakód bemutatja, hogyan a gyűjteményhez történő zárolja a <xref:System.Collections.ICollection.SyncRoot%2A>a teljes enumerálása során: [!code-cpp [System.Collections.CollectionBase#2](~/add/codesnippet/cpp/cacfe8dc-771f-47eb-a7e1-_1.cpp)][!code-cs[System.Collections.CollectionBase#2](~/add/codesnippet/csharp/cacfe8dc-771f-47eb-a7e1-_1.cs)][!code-vb[System.Collections.CollectionBase#2](~/add/codesnippet/visualbasic/cacfe8dc-771f-47eb-a7e1-_1.vb) ] a tulajdonság értékének beolvasása során O(1).    </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>."
  overload: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: CollectionBase.System.Collections.IList.Add(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Objektum hozzáadása az végén a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>."
  remarks: "Ha <xref:System.Collections.CollectionBase.Count%2A>már megegyezik, automatikusan újra-hozzárendelése a belső tömbnek, és a meglévő elemek másolása a új tömb, az új elem hozzáadása előtt a kapacitás, a lista nő.</xref:System.Collections.CollectionBase.Count%2A>       Ha <xref:System.Collections.CollectionBase.Count%2A>kisebb, mint a kapacitás, ez a módszer egy O(1) művelet.</xref:System.Collections.CollectionBase.Count%2A> Ha a kapacitás növelhető meg, hogy megfeleljen az új elem, ez a módszer válik O (`n`) műveletet, ahol `n` <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A>"
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/9be064c1-54ea-4721-8714-_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/9be064c1-54ea-4721-8714-_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/9be064c1-54ea-4721-8714-_1.vb)]"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>végére lehet hozzáadni a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> index, ahol a <code> value </code> hozzá lett adva."
  overload: System.Collections.CollectionBase.System#Collections#IList#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> csak olvasható.       – vagy – a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: CollectionBase.System.Collections.IList.Contains(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Meghatározza, hogy a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> egy adott elemet tartalmaz."
  remarks: "Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A>       Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg.       A .NET-keretrendszer 2.0-s verziótól kezdődően ez a módszer a gyűjtemény-objektumokat használ <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>metódusai `item` meghatározásához e `item` létezik.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> A .NET-keretrendszer korábbi verzióiban ez a döntés használatával történt a <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>módszerek a `item` paraméter a gyűjtemény objektumokon.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/c05c77a6-90e8-47cd-a625-_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/c05c77a6-90e8-47cd-a625-_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/c05c77a6-90e8-47cd-a625-_1.vb)]"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>keresik a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> tartalmazza a megadott <code> value </code>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.CollectionBase.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: CollectionBase.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "A megadott keres <xref:System.Object>és visszaadja az első olyan belül a teljes nulla alapú indexét <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>.</xref:System.Object>"
  remarks: "Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A>       Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg.       A .NET-keretrendszer 2.0-s verziótól kezdődően ez a módszer a gyűjtemény-objektumokat használ <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>metódusai `item` meghatározásához e `item` létezik.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> A .NET-keretrendszer korábbi verzióiban ez a döntés használatával történt a <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>módszerek a `item` paraméter a gyűjtemény objektumokon.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/154015bb-f734-471d-93de-_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/154015bb-f734-471d-93de-_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/154015bb-f734-471d-93de-_1.vb)]"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>keresik a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A első előfordulása nulla alapú indexét <code> value </code> belül a teljes <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>, ha található, ha sikertelen, -1."
  overload: System.Collections.CollectionBase.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: CollectionBase.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Az elem beszúrása a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> a megadott indexnél."
  remarks: "Ha <xref:System.Collections.CollectionBase.Count%2A>már megegyezik, a kapacitás, a lista nő által automatikusan újraelosztása a belső tömbnek, mielőtt az új elem szerepel.</xref:System.Collections.CollectionBase.Count%2A>       Ha `index` egyenlő <xref:System.Collections.CollectionBase.Count%2A>, `value` <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> végére kerül</xref:System.Collections.CollectionBase.Count%2A>       A gyűjtemények összefüggő elemek például a listája, a kurzor követő elemek áthelyezése lefelé megfeleljen az új elem. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportosítva gyűjtők, például egy kivonattáblát gyűjteményére vonatkoznak.       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A>"
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/f8b730a7-8cec-40ed-9d7e-_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/f8b730a7-8cec-40ed-9d7e-_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/f8b730a7-8cec-40ed-9d7e-_1.vb)]"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `value` kell beilleszteni."
    - id: value
      type: System.Object
      description: "A <xref:System.Object>lehet beszúrni.</xref:System.Object>"
  overload: System.Collections.CollectionBase.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> nagyobb, mint <xref:System.Collections.CollectionBase.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> csak olvasható.       – vagy – a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: CollectionBase.System.Collections.IList.IsFixedSize
  fullName: System.Collections.CollectionBase.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> rögzített méretű rendelkezik."
  remarks: "Rögzített méretű gyűjtemény nem teszi lehetővé hozzáadását és eltávolítását, az elem után a gyűjtemény létrejött, de lehetővé teszi a meglévő elemeket módosítása.       A gyűjtemény rögzített méretű egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a hozzáadása és eltávolítása elemek; Ezért ha módosítás történik az alapul szolgáló gyűjtemény, hozzáadását és eltávolítását, az elem, beleértve a rögzített méretű gyűjtemény tükrözi ezeket a módosításokat.       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> rendelkezik egy rögzített méretű; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: CollectionBase.System.Collections.IList.IsReadOnly
  fullName: System.Collections.CollectionBase.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> csak olvasható."
  remarks: "A csak olvasható gyűjtemény nem teszi lehetővé a hozzáadása, eltávolítása vagy módosítása az elem a gyűjtemény létrehozása után.       A gyűjtemény csak olvasható egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a módosítását a gyűjtemény; Ezért ha az alapul szolgáló gyűjtemény módosításai, a csak olvasható gyűjtemény tükrözi ezeket a módosításokat.       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> csak olvasható; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: CollectionBase.System.Collections.IList.Item(Int32)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi vagy beállítja az elem a megadott indexnél."
  remarks: "Ez a tulajdonság lehetővé teszi a hozzáférést egy adott elem a gyűjteményben a következő szintaxissal: `myCollection[index]`.       Ez a tulajdonság értékének beolvasása során O(1); a következő tulajdonság beállítása során is O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/83a912ba-0bf4-468a-a9c4-_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/83a912ba-0bf4-468a-a9c4-_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/83a912ba-0bf4-468a-a9c4-_1.vb)]"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Az elem lekérése vagy beállítása nulla alapú indexét."
    return:
      type: System.Object
      description: "Az elem a megadott indexnél."
  overload: System.Collections.CollectionBase.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> egyenlőnek vagy annál nagyobb <xref:System.Collections.CollectionBase.Count*>."
  platform:
  - net462
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Collections.CollectionBase
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: CollectionBase.System.Collections.IList.Remove(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Eltávolít egy adott objektum első előfordulásának a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>."
  remarks: "Ha a <xref:System.Collections.CollectionBase>a megadott objektum nem tartalmaz a <xref:System.Collections.CollectionBase>változatlan marad.</xref:System.Collections.CollectionBase> </xref:System.Collections.CollectionBase> Nincs kivétel történt.       Ez a módszer egy lineáris keresést; hajt végre. Ez a módszer ezért O (`n`) műveletet, ahol `n` <xref:System.Collections.CollectionBase.Count%2A>.</xref:System.Collections.CollectionBase.Count%2A>       Ez a módszer egyenlőség <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> meghívásával azt határozza meg.       A szomszédos elemeket, listák, például a gyűjtemények az elemeket, kövesse az eltávolított elem feljebb a vacated helyszíni elfoglalt. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportosítva gyűjtők, például egy kivonattáblát gyűjteményére vonatkoznak."
  example:
  - "The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.  \n  \n [!code-cpp[System.Collections.CollectionBase#1](~/add/codesnippet/cpp/92a20c91-2133-45e3-9527-_1.cpp)]\n [!code-cs[System.Collections.CollectionBase#1](~/add/codesnippet/csharp/92a20c91-2133-45e3-9527-_1.cs)]\n [!code-vb[System.Collections.CollectionBase#1](~/add/codesnippet/visualbasic/92a20c91-2133-45e3-9527-_1.vb)]"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>eltávolítása a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref>.</xref:System.Object>"
  overload: System.Collections.CollectionBase.System#Collections#IList#Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> value </code> paraméter nem található a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> objektum."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> csak olvasható.       – vagy – a <xref href=&quot;System.Collections.CollectionBase&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.CollectionBase.#ctor
  parent: System.Collections.CollectionBase
  isExternal: false
  name: CollectionBase()
  nameWithType: CollectionBase.CollectionBase()
  fullName: System.Collections.CollectionBase.CollectionBase()
- uid: System.Collections.CollectionBase.#ctor(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: CollectionBase(Int32)
  nameWithType: CollectionBase.CollectionBase(Int32)
  fullName: System.Collections.CollectionBase.CollectionBase(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.CollectionBase.Capacity
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Capacity
  nameWithType: CollectionBase.Capacity
  fullName: System.Collections.CollectionBase.Capacity
- uid: System.Collections.CollectionBase.Clear
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Clear()
  nameWithType: CollectionBase.Clear()
  fullName: System.Collections.CollectionBase.Clear()
- uid: System.Collections.CollectionBase.Count
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Count
  nameWithType: CollectionBase.Count
  fullName: System.Collections.CollectionBase.Count
- uid: System.Collections.CollectionBase.GetEnumerator
  parent: System.Collections.CollectionBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: CollectionBase.GetEnumerator()
  fullName: System.Collections.CollectionBase.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.CollectionBase.InnerList
  parent: System.Collections.CollectionBase
  isExternal: false
  name: InnerList
  nameWithType: CollectionBase.InnerList
  fullName: System.Collections.CollectionBase.InnerList
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections.CollectionBase.List
  parent: System.Collections.CollectionBase
  isExternal: false
  name: List
  nameWithType: CollectionBase.List
  fullName: System.Collections.CollectionBase.List
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.CollectionBase.OnClear
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClear()
  nameWithType: CollectionBase.OnClear()
  fullName: System.Collections.CollectionBase.OnClear()
- uid: System.Collections.CollectionBase.OnClearComplete
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClearComplete()
  nameWithType: CollectionBase.OnClearComplete()
  fullName: System.Collections.CollectionBase.OnClearComplete()
- uid: System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsert(Int32,Object)
  nameWithType: CollectionBase.OnInsert(Int32,Object)
  fullName: System.Collections.CollectionBase.OnInsert(Int32,Object)
- uid: System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: CollectionBase.OnInsertComplete(Int32,Object)
  fullName: System.Collections.CollectionBase.OnInsertComplete(Int32,Object)
- uid: System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemove(Int32,Object)
  nameWithType: CollectionBase.OnRemove(Int32,Object)
  fullName: System.Collections.CollectionBase.OnRemove(Int32,Object)
- uid: System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: CollectionBase.OnRemoveComplete(Int32,Object)
  fullName: System.Collections.CollectionBase.OnRemoveComplete(Int32,Object)
- uid: System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSet(Int32,Object,Object)
  nameWithType: CollectionBase.OnSet(Int32,Object,Object)
  fullName: System.Collections.CollectionBase.OnSet(Int32,Object,Object)
- uid: System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSetComplete(Int32,Object,Object)
  nameWithType: CollectionBase.OnSetComplete(Int32,Object,Object)
  fullName: System.Collections.CollectionBase.OnSetComplete(Int32,Object,Object)
- uid: System.Collections.CollectionBase.OnValidate(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnValidate(Object)
  nameWithType: CollectionBase.OnValidate(Object)
  fullName: System.Collections.CollectionBase.OnValidate(Object)
- uid: System.Collections.CollectionBase.RemoveAt(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: CollectionBase.RemoveAt(Int32)
  fullName: System.Collections.CollectionBase.RemoveAt(Int32)
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: CollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: CollectionBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: CollectionBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.CollectionBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: CollectionBase.System.Collections.IList.Add(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Add(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: CollectionBase.System.Collections.IList.Contains(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Contains(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: CollectionBase.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.IndexOf(Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: CollectionBase.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Insert(Int32,Object)
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: CollectionBase.System.Collections.IList.IsFixedSize
  fullName: System.Collections.CollectionBase.System.Collections.IList.IsFixedSize
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: CollectionBase.System.Collections.IList.IsReadOnly
  fullName: System.Collections.CollectionBase.System.Collections.IList.IsReadOnly
- uid: System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: CollectionBase.System.Collections.IList.Item(Int32)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Item(Int32)
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: CollectionBase.System.Collections.IList.Remove(Object)
  fullName: System.Collections.CollectionBase.System.Collections.IList.Remove(Object)
- uid: System.Collections.CollectionBase.#ctor*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: CollectionBase
  nameWithType: CollectionBase.CollectionBase
- uid: System.Collections.CollectionBase.Capacity*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Capacity
  nameWithType: CollectionBase.Capacity
- uid: System.Collections.CollectionBase.Clear*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Clear
  nameWithType: CollectionBase.Clear
- uid: System.Collections.CollectionBase.Count*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: Count
  nameWithType: CollectionBase.Count
- uid: System.Collections.CollectionBase.GetEnumerator*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: GetEnumerator
  nameWithType: CollectionBase.GetEnumerator
- uid: System.Collections.CollectionBase.InnerList*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: InnerList
  nameWithType: CollectionBase.InnerList
- uid: System.Collections.CollectionBase.List*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: List
  nameWithType: CollectionBase.List
- uid: System.Collections.CollectionBase.OnClear*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClear
  nameWithType: CollectionBase.OnClear
- uid: System.Collections.CollectionBase.OnClearComplete*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnClearComplete
  nameWithType: CollectionBase.OnClearComplete
- uid: System.Collections.CollectionBase.OnInsert*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsert
  nameWithType: CollectionBase.OnInsert
- uid: System.Collections.CollectionBase.OnInsertComplete*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnInsertComplete
  nameWithType: CollectionBase.OnInsertComplete
- uid: System.Collections.CollectionBase.OnRemove*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemove
  nameWithType: CollectionBase.OnRemove
- uid: System.Collections.CollectionBase.OnRemoveComplete*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnRemoveComplete
  nameWithType: CollectionBase.OnRemoveComplete
- uid: System.Collections.CollectionBase.OnSet*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSet
  nameWithType: CollectionBase.OnSet
- uid: System.Collections.CollectionBase.OnSetComplete*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnSetComplete
  nameWithType: CollectionBase.OnSetComplete
- uid: System.Collections.CollectionBase.OnValidate*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: OnValidate
  nameWithType: CollectionBase.OnValidate
- uid: System.Collections.CollectionBase.RemoveAt*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: RemoveAt
  nameWithType: CollectionBase.RemoveAt
- uid: System.Collections.CollectionBase.System#Collections#ICollection#CopyTo*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: CollectionBase.System.Collections.ICollection.CopyTo
- uid: System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: CollectionBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: CollectionBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.CollectionBase.System#Collections#IList#Add*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: CollectionBase.System.Collections.IList.Add
- uid: System.Collections.CollectionBase.System#Collections#IList#Contains*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: CollectionBase.System.Collections.IList.Contains
- uid: System.Collections.CollectionBase.System#Collections#IList#IndexOf*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: CollectionBase.System.Collections.IList.IndexOf
- uid: System.Collections.CollectionBase.System#Collections#IList#Insert*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: CollectionBase.System.Collections.IList.Insert
- uid: System.Collections.CollectionBase.System#Collections#IList#IsFixedSize*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: CollectionBase.System.Collections.IList.IsFixedSize
- uid: System.Collections.CollectionBase.System#Collections#IList#IsReadOnly*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: CollectionBase.System.Collections.IList.IsReadOnly
- uid: System.Collections.CollectionBase.System#Collections#IList#Item*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: CollectionBase.System.Collections.IList.Item
- uid: System.Collections.CollectionBase.System#Collections#IList#Remove*
  parent: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: CollectionBase.System.Collections.IList.Remove
