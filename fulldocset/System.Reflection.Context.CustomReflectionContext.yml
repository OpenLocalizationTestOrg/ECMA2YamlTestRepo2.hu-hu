### YamlMime:ManagedReference
items:
- uid: System.Reflection.Context.CustomReflectionContext
  id: CustomReflectionContext
  children:
  - System.Reflection.Context.CustomReflectionContext.#ctor
  - System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  - System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  - System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  - System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  - System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  - System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  langs:
  - csharp
  name: CustomReflectionContext
  nameWithType: CustomReflectionContext
  fullName: System.Reflection.Context.CustomReflectionContext
  type: Class
  summary: "A testre szabható reflexiós környezetben jelöli."
  remarks: "CustomReflectionContext módot biztosít a segítségével vegye fel vagy távolítsa el az egyéni attribútumok a reflexió objektumok vagy típusú tulajdonságok hozzáadása azokat az objektumokat, a teljes reflexiós modellt újbóli végrehajtása nélkül. Az alapértelmezett CustomReflectionContext egyszerűen becsomagolja reflexiós objektumok változtatás nélkül, de subclassing, és a megfelelő metódusok felülbírálása, hozzáadása, eltávolítása, vagy módosítsa az attribútumokat, amelyek érvényesek a tükrözött paraméter vagy a tag vagy új tulajdonságok hozzáadása egy tükrözött típust.       Tegyük fel, hogy a kód a következő attribútumot alkalmazása gyári metódusokat az egyezmény, de most szükséges külső kód, amely nem rendelkezik attribútumok használata. CustomReflectionContext attribútumokkal kell ellátni objektumok azonosítására szolgáló szabályt ad meg, és automatikusan megadhatja azokat az objektumokat, amelyek azok a felhasználói kódból megtekintve használható.       CustomReflectionContext hatékonyan használatához a kódot, amely a tükrözött-objektumokat használ támogatnia kell a reflexiós környezetben megadása helyett, feltéve, hogy az összes tükrözött objektum társítva a futásidejű reflexiós környezetben fogalmát. A .NET-keretrendszer számos reflexiós módszert biztosítanak a <xref:System.Reflection.ReflectionContext>paraméter erre a célra.</xref:System.Reflection.ReflectionContext>       Módosítsa az attribútumokat, amelyek érvényesek a tükrözött paraméter vagy a tag, bírálja felül a <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>vagy <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29>metódus.</xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> </xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> Ezek a módszerek a tükrözött objektum és az aktuális reflexiós környezetben attribútumok listáját, és rendelkeznie kell az egyéni reflexiós környezetben attribútumok listáját adja vissza.      > [!WARNING] > CustomReflectionContext módszerek ne férhessenek az attribútumlistát, a tükrözött vagy metódus meghívásával közvetlenül a <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>metódust a megadott <xref:System.Reflection.MemberInfo>vagy <xref:System.Reflection.ParameterInfo>példány, de Ehelyett használjon a `declaredAttributes` listát, amely paramétereként átadása a <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A>metódus túlterhelések.</xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MemberInfo> </xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>       Egy tükrözött típus tulajdonságainak hozzáadásához bírálja felül a <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>metódus.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> A metódus fogad el egy paraméter, amely meghatározza a tükrözött típusát, és további tulajdonságok listáját adja vissza. Használjon a <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>metódus visszatéréshez tulajdonság objektumok létrehozásához.</xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> Megadhat delegáltak létrehozható a tulajdonság, amely erre a célra a tulajdonságelérő, és csak olvasható, vagy csak írható tulajdonság létrehozása elérőnek kihagyhatja. Ne feledje, hogy ilyen típusú tulajdonságok nem metaadatok vagy közös köztes nyelv (CIL-hez) biztonsági.      > [!WARNING] > Legyen óvatos tükrözött objektumok közötti egyenlőségi reflexiós környezetben végzett munka során, mert az objektumok képviselhet több környezetekben tükrözött ugyanahhoz az objektumhoz. Használhatja a <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A>módszer egy adott reflexiós környezetben verziójának egy tükrözött objektum.</xref:System.Reflection.Context.CustomReflectionContext.MapType%2A>      > [!WARNING] > A CustomReflectionContext objektum megváltoztatja a által egy adott reflection objektum, például a tartalomészlelés által visszaadott attribútumokat a <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>metódus.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Nem változtatja meg az egyéni attribútum által visszaadott adatok a <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A>metódust, és a két lista fog térni egy egyéni reflexiós környezetben használatakor.</xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A>"
  example:
  - "The following example demonstrates how to subclass  CustomReflectionContext to add a custom attribute to all the members of a given type whose names begin with \"To\". To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.  \n  \n [!code-cs[System.Reflection.Context.CustomReflectionContext#1](~/add/codesnippet/csharp/system.reflection.context.customreflectioncontext.consoleapplication1/program.cs#1)]"
  syntax:
    content: 'public abstract class CustomReflectionContext : System.Reflection.ReflectionContext'
  inheritance:
  - System.Reflection.ReflectionContext
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.#ctor
  id: '#ctor'
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CustomReflectionContext()
  nameWithType: CustomReflectionContext.CustomReflectionContext()
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()
  type: Constructor
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Reflection.Context.CustomReflectionContext&quot;> </xref> osztály."
  syntax:
    content: protected CustomReflectionContext ();
    parameters: []
  overload: System.Reflection.Context.CustomReflectionContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  id: '#ctor(System.Reflection.ReflectionContext)'
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CustomReflectionContext(ReflectionContext)
  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  type: Constructor
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Reflection.Context.CustomReflectionContext&quot;> </xref> osztályt a megadott reflexiós környezetben alapjaként."
  syntax:
    content: protected CustomReflectionContext (System.Reflection.ReflectionContext source);
    parameters:
    - id: source
      type: System.Reflection.ReflectionContext
      description: "A használandó alapjaként reflexiós környezetben."
  overload: System.Reflection.Context.CustomReflectionContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  id: AddProperties(System.Type)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: AddProperties(Type)
  nameWithType: CustomReflectionContext.AddProperties(Type)
  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(Type)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Felülbírálja a származtatott osztály, amikor egy gyűjteményét biztosítja további tulajdonságok a típushoz, mely a reflexiós környezetben."
  remarks: "Bírálja felül ezt a metódust adja meg, milyen tulajdonságok hozzá kell adni a megadott típusra. A tulajdonságok létrehozásához használja a <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>metódus.</xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo> AddProperties (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A Tulajdonságok hozzáadása a típus."
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
      description: "A megadott típus esetében további tulajdonságok gyűjteménye."
  overload: System.Reflection.Context.CustomReflectionContext.AddProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Fel kell venni egy típust használni kívánt tulajdonság képviselő objektumot hoz létre a <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>metódus.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>"
  remarks: "Ez a metódus által visszaadott objektumok nincsenek teljes <xref:System.Reflection.PropertyInfo>objektumokat, és csak a környezetében kell használni a <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>metódus.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> </xref:System.Reflection.PropertyInfo>"
  syntax:
    content: protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func<object,object> getter, Action<object,object> setter);
    parameters:
    - id: propertyType
      type: System.Type
      description: "Létrehozásához tulajdonság típusával."
    - id: name
      type: System.String
      description: "A tulajdonság létrehozása neve."
    - id: getter
      type: System.Func{System.Object,System.Object}
      description: "A tulajdonság képviselő objektum <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérővel."
    - id: setter
      type: System.Action{System.Object,System.Object}
      description: "A tulajdonság képviselő objektum <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> elérővel."
    return:
      type: System.Reflection.PropertyInfo
      description: "A tulajdonság képviselő objektum."
  overload: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  id: CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Fel kell venni egy típust használni kívánt tulajdonság képviselő objektumot hoz létre a <xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>metódus és a megadott egyéni attribútum használatával.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties*>"
  remarks: "Ez a metódus által visszaadott objektumok nincsenek teljes <xref:System.Reflection.PropertyInfo>objektumokat, és csak a környezetében kell használni a <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A>metódus.</xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> </xref:System.Reflection.PropertyInfo>"
  syntax:
    content: protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func<object,object> getter, Action<object,object> setter, System.Collections.Generic.IEnumerable<Attribute> propertyCustomAttributes, System.Collections.Generic.IEnumerable<Attribute> getterCustomAttributes, System.Collections.Generic.IEnumerable<Attribute> setterCustomAttributes);
    parameters:
    - id: propertyType
      type: System.Type
      description: "Létrehozásához tulajdonság típusával."
    - id: name
      type: System.String
      description: "A tulajdonság létrehozása neve."
    - id: getter
      type: System.Func{System.Object,System.Object}
      description: "A tulajdonság képviselő objektum <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérővel."
    - id: setter
      type: System.Action{System.Object,System.Object}
      description: "A tulajdonság képviselő objektum <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> elérővel."
    - id: propertyCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "A tulajdonság alkalmazandó egyéni attribútumok gyűjteménye."
    - id: getterCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "A tulajdonság alkalmazandó egyéni attribútumok gyűjteménye <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérővel."
    - id: setterCustomAttributes
      type: System.Collections.Generic.IEnumerable{System.Attribute}
      description: "A tulajdonság alkalmazandó egyéni attribútumok gyűjteménye <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> elérővel."
    return:
      type: System.Reflection.PropertyInfo
      description: "A tulajdonság képviselő objektum."
  overload: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  id: GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Ha felül van bírálva a származtatott osztály, ebben a reflexiós környezetben határozzák a megadott tag biztosít az egyéni attribútumok listáját."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<object> declaredAttributes);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "A tag, amelynek egyéni attribútumok adja vissza."
    - id: declaredAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "A tag attribútumainak az aktuális kontextusában gyűjteménye."
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "Egy gyűjteményt, amely a megadott tag a reflexiós környezetben egyéni attribútumait tartalmazza."
  overload: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  id: GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Ha felül van bírálva a származtatott osztály, ebben a reflexiós környezetben határozzák a megadott paraméter biztosít az egyéni attribútumok listáját."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<object> GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable<object> declaredAttributes);
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
      description: "A paraméter, amelynek egyéni attribútumok adja vissza."
    - id: declaredAttributes
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "A paraméter-attribútumok az aktuális kontextusában gyűjteménye."
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: "Egy gyűjteményt, amely a megadott paraméter a reflexiós környezetben egyéni attribútumait tartalmazza."
  overload: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  id: MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: MapAssembly(Assembly)
  nameWithType: CustomReflectionContext.MapAssembly(Assembly)
  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(Assembly)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Lekérdezi a megjelenítésre, a reflexiós környezetben, egy másik reflexiós környezetben az objektum által képviselt szerelvény."
  syntax:
    content: public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "A szerelvény ebben a környezetben képviselő külső ábrázolása."
    return:
      type: System.Reflection.Assembly
      description: "Ebben a környezetben reflexiós szerelvény ábrázolása."
  overload: System.Reflection.Context.CustomReflectionContext.MapAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  id: MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.Context.CustomReflectionContext
  langs:
  - csharp
  name: MapType(TypeInfo)
  nameWithType: CustomReflectionContext.MapType(TypeInfo)
  fullName: System.Reflection.Context.CustomReflectionContext.MapType(TypeInfo)
  type: Method
  assemblies:
  - System.Reflection.Context
  namespace: System.Reflection.Context
  summary: "Lekérdezi a megjelenítésre, a reflexiós környezetben, a másik reflexiós környezetben egy objektum által jelképezett típusú."
  syntax:
    content: public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);
    parameters:
    - id: type
      type: System.Reflection.TypeInfo
      description: "Ebben a környezetben képviselő típus külső ábrázolása."
    return:
      type: System.Reflection.TypeInfo
      description: "A típus a reflexiós környezetben ábrázolása."
  overload: System.Reflection.Context.CustomReflectionContext.MapType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Reflection.ReflectionContext
  isExternal: false
  name: System.Reflection.ReflectionContext
- uid: System.Reflection.Context.CustomReflectionContext.#ctor
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext()
  nameWithType: CustomReflectionContext.CustomReflectionContext()
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext()
- uid: System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext(ReflectionContext)
  nameWithType: CustomReflectionContext.CustomReflectionContext(ReflectionContext)
  fullName: System.Reflection.Context.CustomReflectionContext.CustomReflectionContext(ReflectionContext)
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: AddProperties(Type)
  nameWithType: CustomReflectionContext.AddProperties(Type)
  fullName: System.Reflection.Context.CustomReflectionContext.AddProperties(Type)
- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PropertyInfo>
  nameWithType: IEnumerable<PropertyInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Reflection.PropertyInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Object,System.Object}
  parent: System
  isExternal: true
  name: Func<Object,Object>
  nameWithType: Func<Object,Object>
  fullName: System.Func<System.Object,System.Object>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Action{System.Object,System.Object}
  parent: System
  isExternal: true
  name: Action<Object,Object>
  nameWithType: Action<Object,Object>
  fullName: System.Action<System.Object,System.Object>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  nameWithType: CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
  fullName: System.Reflection.Context.CustomReflectionContext.CreateProperty(Type,String,Func<Object,Object>,Action<Object,Object>,IEnumerable<Attribute>,IEnumerable<Attribute>,IEnumerable<Attribute>)
- uid: System.Collections.Generic.IEnumerable{System.Attribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Attribute>
  nameWithType: IEnumerable<Attribute>
  fullName: System.Collections.Generic.IEnumerable<System.Attribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Attribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(MemberInfo,IEnumerable<Object>)
- uid: System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  nameWithType: CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
  fullName: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(ParameterInfo,IEnumerable<Object>)
- uid: System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapAssembly(Assembly)
  nameWithType: CustomReflectionContext.MapAssembly(Assembly)
  fullName: System.Reflection.Context.CustomReflectionContext.MapAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapType(TypeInfo)
  nameWithType: CustomReflectionContext.MapType(TypeInfo)
  fullName: System.Reflection.Context.CustomReflectionContext.MapType(TypeInfo)
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: true
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection.Context.CustomReflectionContext.#ctor*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CustomReflectionContext
  nameWithType: CustomReflectionContext.CustomReflectionContext
- uid: System.Reflection.Context.CustomReflectionContext.AddProperties*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: AddProperties
  nameWithType: CustomReflectionContext.AddProperties
- uid: System.Reflection.Context.CustomReflectionContext.CreateProperty*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: CreateProperty
  nameWithType: CustomReflectionContext.CreateProperty
- uid: System.Reflection.Context.CustomReflectionContext.GetCustomAttributes*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: GetCustomAttributes
  nameWithType: CustomReflectionContext.GetCustomAttributes
- uid: System.Reflection.Context.CustomReflectionContext.MapAssembly*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapAssembly
  nameWithType: CustomReflectionContext.MapAssembly
- uid: System.Reflection.Context.CustomReflectionContext.MapType*
  parent: System.Reflection.Context.CustomReflectionContext
  isExternal: false
  name: MapType
  nameWithType: CustomReflectionContext.MapType
