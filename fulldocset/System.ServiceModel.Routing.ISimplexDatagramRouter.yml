### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.ISimplexDatagramRouter
  id: ISimplexDatagramRouter
  children:
  - System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)
  langs:
  - csharp
  name: ISimplexDatagramRouter
  nameWithType: ISimplexDatagramRouter
  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter
  type: Interface
  summary: "Meghatározza az egyirányú (szimplex) datagram üzenetek feldolgozásához szükséges felületet."
  remarks: "Az adategyezmény a következő beállításokkal rendelkezik:-munkamenetek engedélyezett, de nem szükséges.      -Egyirányú üzeneteket."
  syntax:
    content: >-
      [System.ServiceModel.ServiceContract(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", SessionMode=System.ServiceModel.SessionMode.Allowed)]

      public interface ISimplexDatagramRouter
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.ISimplexDatagramRouter
  langs:
  - csharp
  name: BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Az üzenet az aszinkron feldolgozás kezdeményezi."
  syntax:
    content: public IAsyncResult BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Az üzenet feldolgozását."
    - id: callback
      type: System.AsyncCallback
      description: "Egy <xref:System.AsyncCallback>delegált hív meg, ha az üzenet feldolgozása befejeződött.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "A felhasználói állapot objektum átadott visszahívás eljárást."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amelyek segítségével kérdezze le, vagy várja meg, eredményeket, vagy mindkét; Ez az érték is szükséges <xref:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*>.</xref:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*> hívásakor</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)
  id: EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.ISimplexDatagramRouter
  langs:
  - csharp
  name: EndProcessMessage(IAsyncResult)
  nameWithType: ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "Üzenet feldolgozása aszinkron végrehajtása befejeződik."
  syntax:
    content: public void EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Az aszinkron <xref:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*>.</xref:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*> hívás által visszaadott eredmény"
  overload: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.ISimplexDatagramRouter
  isExternal: false
  name: BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.ISimplexDatagramRouter
  isExternal: false
  name: EndProcessMessage(IAsyncResult)
  nameWithType: ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage*
  parent: System.ServiceModel.Routing.ISimplexDatagramRouter
  isExternal: false
  name: BeginProcessMessage
  nameWithType: ISimplexDatagramRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage*
  parent: System.ServiceModel.Routing.ISimplexDatagramRouter
  isExternal: false
  name: EndProcessMessage
  nameWithType: ISimplexDatagramRouter.EndProcessMessage
