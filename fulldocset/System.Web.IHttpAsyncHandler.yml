### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpAsyncHandler
  id: IHttpAsyncHandler
  children:
  - System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  langs:
  - csharp
  name: IHttpAsyncHandler
  nameWithType: IHttpAsyncHandler
  fullName: System.Web.IHttpAsyncHandler
  type: Interface
  summary: "Határozza meg, amely HTTP-kezelő aszinkron objektumok kell megvalósítania."
  remarks: "Egy IHttpAsyncHandler osztályt is társítható a fájlnév-kiterjesztésűeket, vagy egy adott URL-címet egy konfigurációs fájl segítségével a a `httpHandlers` konfigurációs szakasz. Az ASP.NET infrastruktúra majd hozható létre, és a kezelő hívható, amikor a vonatkozó kérés érkezik. Azt is megteheti a kezelő meghatározása .ashx fájlban, és a vonatkozó kérés érkezett a .ashx fájlt a meg fogja végrehajtani."
  syntax:
    content: 'public interface IHttpAsyncHandler : System.Web.IHttpHandler'
  implements:
  - System.Web.IHttpHandler
  platform:
  - net462
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.IHttpAsyncHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "A HTTP-kezelő egy aszinkron hívás kezdeményezése."
  syntax:
    content: public IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Egy <xref href=&quot;System.Web.HttpContext&quot;> </xref> objektum, amely a belső kiszolgáló objektumokra mutató hivatkozásokat biztosít (például <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, és <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) használt HTTP-kérelmek kiszolgálásához."
    - id: cb
      type: System.AsyncCallback
      description: "A <xref:System.AsyncCallback>hívására az aszinkron metódushívások befejeződött.</xref:System.AsyncCallback> Ha `cb` van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a delegált nem hívják meg."
    - id: extraData
      type: System.Object
      description: "A kérés feldolgozásához szükséges további adatokat."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, hogy a folyamat a állapotára vonatkozó információkat tartalmazza.</xref:System.IAsyncResult>"
  overload: System.Web.IHttpAsyncHandler.BeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.IHttpAsyncHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aszinkron folyamat befejezési módszert biztosít, ha a folyamat befejeződik."
  remarks: "Használhatja a EndProcessRequest alkalmazást a kivételek az aszinkron során lépett fel."
  syntax:
    content: public void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, hogy a folyamat a állapotára vonatkozó információkat tartalmazza.</xref:System.IAsyncResult>"
  overload: System.Web.IHttpAsyncHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest*
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: IHttpAsyncHandler.BeginProcessRequest
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest*
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: IHttpAsyncHandler.EndProcessRequest
