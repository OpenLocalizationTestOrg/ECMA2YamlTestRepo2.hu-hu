### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogInstaller
  id: EventLogInstaller
  children:
  - System.Diagnostics.EventLogInstaller.#ctor
  - System.Diagnostics.EventLogInstaller.CategoryCount
  - System.Diagnostics.EventLogInstaller.CategoryResourceFile
  - System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  - System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)
  - System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  - System.Diagnostics.EventLogInstaller.Log
  - System.Diagnostics.EventLogInstaller.MessageResourceFile
  - System.Diagnostics.EventLogInstaller.ParameterResourceFile
  - System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)
  - System.Diagnostics.EventLogInstaller.Source
  - System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)
  - System.Diagnostics.EventLogInstaller.UninstallAction
  langs:
  - csharp
  name: EventLogInstaller
  nameWithType: EventLogInstaller
  fullName: System.Diagnostics.EventLogInstaller
  type: Class
  summary: "Telepítse és konfigurálja az Eseménynapló, amely az alkalmazás olvassa be, vagy ír, amikor fut teszi lehetővé."
  remarks: "The EventLogInstaller is used by the [Installutil.exe (Installer Tool)](~/add/includes/ajax-current-ext-md.md) when installing an event log. The EventLogInstaller class can install event logs only on the local computer.  \n  \n Use the EventLogInstaller class when your application writes to an event log; it is not necessary to use an event log installer for your application to read from an event log. Applications and services should write to the Application log or a custom log. Device drivers should write to the System log.  \n  \n> [!NOTE]\n>  The Security log is read-only.  \n  \n The installer creates the event source that you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventLogInstaller.Log%2A> property. This behavior is similar to calling <xref:System.Diagnostics.EventLog.CreateEventSource%2A> on the <xref:System.Diagnostics.EventLog> component.  \n  \n Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  \n  \n Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configurations. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an EventLogInstaller, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method. You must have administrative rights on the computer to create a new event source.  \n  \n You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  \n  \n To install an event log, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`. Within your project, create an EventLogInstaller for each event log that your application will write to and add the instance to your project installer class.  \n  \n When the [Installutil.exe (Installer Tool)](../Topic/Installutil.exe%20\\(Installer%20Tool\\).md) is called, it looks at the <xref:System.ComponentModel.RunInstallerAttribute>. If it is `true`, the tool installs all the items in the <xref:System.Configuration.Install.Installer.Installers%2A> collection that are associated with your project installer. If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the tool ignores the project installer.  \n  \n You modify other properties of an EventLogInstaller either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer, but before the installer tool runs. You must set the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property if your application will be writing to the event log.  \n  \n Use EventLogInstaller to register a new source for a new or existing event log; do not use EventLogInstaller to change an existing source. The EventLogInstaller class does not modify the configuration properties of an existing source to match the specified installation properties. The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer. The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.  \n  \n You can register the event source with localized resource files for your event category and message strings. Your application can write event log entries using resource identifiers, rather than specifying the actual string. The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings. You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings. Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log. If your application writes strings values directly to the event log, you do not need to set these properties.  \n  \n The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log. Create a different source without resource files and then use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.  \n  \n Typically, you do not call the methods of the EventLogInstaller class from within your code; they are generally called only by Installutil.exe. The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process. It backs out failures, if necessary, by calling the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method for the object that generated the exception."
  example:
  - "The following code example sets the installation properties for a new event source. The code example sets the source name and the event log name, and adds the EventLogInstaller to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.  \n  \n [!code-cpp[EventLogInstaller#1](~/add/codesnippet/cpp/t-system.diagnostics.eve_5_1.cpp)]\n [!code-cs[EventLogInstaller#1](~/add/codesnippet/csharp/t-system.diagnostics.eve_5_1.cs)]\n [!code-vb[EventLogInstaller#1](~/add/codesnippet/visualbasic/t-system.diagnostics.eve_5_1.vb)]"
  syntax:
    content: 'public class EventLogInstaller : System.Configuration.Install.ComponentInstaller'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Configuration.Install.Installer
  - System.Configuration.Install.ComponentInstaller
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.HelpText
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.#ctor
  id: '#ctor'
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: EventLogInstaller()
  nameWithType: EventLogInstaller.EventLogInstaller()
  fullName: System.Diagnostics.EventLogInstaller.EventLogInstaller()
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.EventLogInstaller&quot;> </xref> osztály."
  syntax:
    content: public EventLogInstaller ();
    parameters: []
  overload: System.Diagnostics.EventLogInstaller.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.CategoryCount
  id: CategoryCount
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: CategoryCount
  nameWithType: EventLogInstaller.CategoryCount
  fullName: System.Diagnostics.EventLogInstaller.CategoryCount
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a kategóriák száma a kategória erőforrás fájlban."
  remarks: "Használja a CategoryCount és <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>beírni az eseményeket a Tulajdonságok honosított karakterláncok kategória.</xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> Az Eseménynapló esemény bejegyzése a kategóriákhoz jeleníti meg, ha az esemény írásakor adjon meg egy kategóriát. Eseménynapló kategóriák érhetők karakterláncokat alkalmazás által meghatározott események szűrése, vagy adja meg az adatokat egy olyan eseményre. Az alkalmazás például a különböző összetevők vagy különböző műveleteket külön kategóriák adhat meg.       Kategóriák opcionálisak; Ha az alkalmazás nem használja a kategóriák, ne adja meg a CategoryCount és <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>Tulajdonságok.</xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>       A Platform SDK dokumentációját a &quot;Üzenet fordító&quot; című részleteket eseményüzeneteket definiálása és felépítése esemény erőforrásfájlokat, [http://msdn.microsoft.com](http://msdn.microsoft.com/)."
  example:
  - "The following code example sets the installation properties for a new event source. The code example sets the event source name, event log name, and resource file for localized event text.  \n  \n [!code-cs[EventLogInstaller_Resources#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_14_1.cs)]\n [!code-vb[EventLogInstaller_Resources#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_14_1.vb)]\n [!code-cpp[EventLogInstaller_Resources#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_14_1.cpp)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public int CategoryCount { get; set; }
    return:
      type: System.Int32
      description: "A kategória erőforrásfájl kategóriák száma. Az alapértelmezett értéke nulla."
  overload: System.Diagnostics.EventLogInstaller.CategoryCount*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.CategoryResourceFile
  id: CategoryResourceFile
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: CategoryResourceFile
  nameWithType: EventLogInstaller.CategoryResourceFile
  fullName: System.Diagnostics.EventLogInstaller.CategoryResourceFile
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja az erőforrás-fájlt, amely tartalmazza a kategória karakterláncok a forrás elérési útját."
  remarks: "Használja a <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>és CategoryResourceFile tulajdonságok beírni az eseményeket a honosított karakterláncok kategória.</xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> Az Eseménynapló esemény bejegyzése kategóriájának jeleníti meg, ha az esemény írásakor adjon meg egy kategóriát. Eseménynapló kategóriák érhetők karakterláncokat alkalmazás által meghatározott események szűrése, vagy adja meg az eseménnyel kapcsolatos információkat. Az alkalmazás például előfordulhat, hogy rendelkezik a különböző összetevők vagy különböző műveleteket külön kategóriák.       Kategóriák opcionálisak; Ha az alkalmazás nem használja a kategóriák, ne adja meg a <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>és CategoryResourceFile tulajdonságait.</xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>       A Platform SDK dokumentációját a &quot;Üzenet fordító&quot; című részleteket eseményüzeneteket definiálása és felépítése esemény erőforrásfájlokat, [http://msdn.microsoft.com](http://msdn.microsoft.com/)."
  example:
  - "The following code example sets the installation properties for a new event source. The code example sets the event source name, event log name, and resource file for localized event text.  \n  \n [!code-cs[EventLogInstaller_Resources#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_22_1.cs)]\n [!code-vb[EventLogInstaller_Resources#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_22_1.vb)]\n [!code-cpp[EventLogInstaller_Resources#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_22_1.cpp)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public string CategoryResourceFile { get; set; }
    return:
      type: System.String
      description: "A kategória erőforrás elérési útja. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.EventLogInstaller.CategoryResourceFile*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  id: CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: CopyFromComponent(IComponent)
  nameWithType: EventLogInstaller.CopyFromComponent(IComponent)
  fullName: System.Diagnostics.EventLogInstaller.CopyFromComponent(IComponent)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Másolja át a tulajdonság értékének egy <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> komponenst, amely egy eseménynapló telepítéskor szükségesek."
  remarks: "A megadott összetevő a `component` paraméternek kell lennie egy <xref:System.Diagnostics.EventLog>; ellenkező esetben kivételt vált ki.</xref:System.Diagnostics.EventLog>       Általában nem igényelnek a módszerek a <xref:System.Diagnostics.EventLogInstaller>a a kód; általában akkor kizárólag a [Installutil.exe (Installer eszköz)](~/add/includes/ajax-current-ext-md.md).</xref:System.Diagnostics.EventLogInstaller> CopyFromComponent segítségével Installutil.exe a <xref:System.Diagnostics.EventLogInstaller>meglévő <xref:System.Diagnostics.EventLog>.</xref:System.Diagnostics.EventLog> értékeivel</xref:System.Diagnostics.EventLogInstaller> tulajdonság értékeinek beállítása       Ha a <xref:System.Diagnostics.EventLog.Log%2A>, a <xref:System.Diagnostics.EventLog>, amely az átadott érték egy üres karakterlánc (&quot;&quot;), meg kell adni a <xref:System.Diagnostics.EventLog.Log%2A>tulajdonság előtt a telepítő végrehajtja a érvényes értékre.</xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog> </xref:System.Diagnostics.EventLog.Log%2A>"
  syntax:
    content: public override void CopyFromComponent (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Egy <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> sablonként használni a <xref href=&quot;System.Diagnostics.EventLogInstaller&quot;> </xref>."
  overload: System.Diagnostics.EventLogInstaller.CopyFromComponent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott összetevő nem áll egy <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref>.       – vagy – a <> </> *> vagy <> </> *> tulajdonság a megadott összetevő <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres."
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)
  id: Install(System.Collections.IDictionary)
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: Install(IDictionary)
  nameWithType: EventLogInstaller.Install(IDictionary)
  fullName: System.Diagnostics.EventLogInstaller.Install(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "A telepítés, és a beállításjegyzék Eseménynapló adatokat ír az adatbázis."
  remarks: "A telepítési módszer írja az Eseménynapló-adatokat, a beállításjegyzék, és az Eseménynapló társítja a napló által meghatározott a <xref:System.Diagnostics.EventLogInstaller.Log%2A>tulajdonság.</xref:System.Diagnostics.EventLogInstaller.Log%2A> Ha a napló már nem létezik (és a forrás megadva), a telepítés létrehoz egy naplófájlt, és az új forrás társítja.       Általában nem igényelnek a módszerek a <xref:System.Diagnostics.EventLogInstaller>a a kód; általában akkor kizárólag a [Installutil.exe (Installer eszköz)](~/add/includes/ajax-current-ext-md.md).</xref:System.Diagnostics.EventLogInstaller> Az eszköz automatikusan meghívja a telepítési módszer írása beállításjegyzék-információk az eseménynaplóban telepítése folyamatban van társítva, a telepítés során. Telepítés tranzakciós, így ha valamelyik telepítési projekt összetevő hibája esetén a telepítés során, a korábban telepített összetevőket visszaállít a rendszer telepítés előtti állapotába. Egyes összetevők meghívásával mindez <xref:System.Diagnostics.EventLogInstaller.Rollback%2A>metódus.</xref:System.Diagnostics.EventLogInstaller.Rollback%2A>       Használjon <xref:System.Diagnostics.EventLogInstaller>regisztrálni egy új vagy meglévő eseménynaplóba; új forrást ne használjon <xref:System.Diagnostics.EventLogInstaller>módosítani egy meglévő.</xref:System.Diagnostics.EventLogInstaller> </xref:System.Diagnostics.EventLogInstaller> A <xref:System.Diagnostics.EventLogInstaller>osztály nem egy meglévő forrás megadott telepítési tulajdonságokban egyező konfiguráció tulajdonságainak módosítása.</xref:System.Diagnostics.EventLogInstaller> A telepítési módszer kivételt jelez, ha a <xref:System.Diagnostics.EventLogInstaller.Source%2A>tulajdonsága egyezést mutat a forrás-nevet, amely regisztrálva van a számítógépen egy másik eseménynaplóba.</xref:System.Diagnostics.EventLogInstaller.Source%2A> A telepítési módszer kihagyja a forrás regisztrálása, ha a <xref:System.Diagnostics.EventLogInstaller.Source%2A>tulajdonsága egyezést mutat a forrás-nevet, amely már regisztrálva van a megadott azonos Eseménynapló a <xref:System.Diagnostics.EventLogInstaller.Log%2A>tulajdonság.</xref:System.Diagnostics.EventLogInstaller.Log%2A> </xref:System.Diagnostics.EventLogInstaller.Source%2A>       Egy alkalmazás telepítése rutin használja a projekt telepítő <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>tulajdonság automatikusan a már telepített összetevőinek adatainak tárolásához.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> Az állapotadatokat, telepítésre, amelyet a `stateSaver` szerint az eszköz telepíti minden egyes <xref:System.Diagnostics.EventLogInstaller>.</xref:System.Diagnostics.EventLogInstaller> paraméter, folyamatosan frissül. Általában nincs szükség a kód módosítható explicit módon az állapotadatokat."
  syntax:
    content: public override void Install (System.Collections.IDictionary stateSaver);
    parameters:
    - id: stateSaver
      type: System.Collections.IDictionary
      description: "Egy <xref:System.Collections.IDictionary>tevékenységgel menthetők a fordítás során hajtsa végre a visszaállítást, vagy távolítsa el a műveletet.</xref:System.Collections.IDictionary>"
  overload: System.Diagnostics.EventLogInstaller.Install*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A platform, a telepítő próbál használni, az nem Windows NT 4.0-s vagy újabb."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott <xref:System.Diagnostics.EventLogInstaller.Source*>tulajdonság már regisztrálva van egy másik eseménynaplónál</xref:System.Diagnostics.EventLogInstaller.Source*> nevét"
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  id: IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: IsEquivalentInstaller(ComponentInstaller)
  nameWithType: EventLogInstaller.IsEquivalentInstaller(ComponentInstaller)
  fullName: System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(ComponentInstaller)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Meghatározza, hogy a telepítő és egy másik megadott telepítő utal azonos forrásból."
  remarks: "Általában nem igényelnek a módszerek a <xref:System.Diagnostics.EventLogInstaller>a a kód; általában akkor csak a telepítő eszköz (Installutil.exe) által.</xref:System.Diagnostics.EventLogInstaller>"
  syntax:
    content: public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);
    parameters:
    - id: otherInstaller
      type: System.Configuration.Install.ComponentInstaller
      description: "A telepítő összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ezt a telepítőt, és a telepítő által megadott a <code> otherInstaller </code> paraméter lenne a telepítésével vagy eltávolításával azonos forrásból; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLogInstaller.IsEquivalentInstaller*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.Log
  id: Log
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: Log
  nameWithType: EventLogInstaller.Log
  fullName: System.Diagnostics.EventLogInstaller.Log
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a forrás beállítása a napló nevét."
  remarks: "You can use the Log property to associate the source you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property with either an existing log or a new log on the local computer. The [Installutil.exe (Installer Tool)](~/add/includes/ajax-current-ext-md.md) uses this information to map the source to the log in the computer's registry. Applications and services should write to the Application log or a custom log. Device drivers should write to the System log.  \n  \n To write entries to an event log, you must create a source and register it with an event log. An event source can only write to one log at a time. The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries. If you do not specify a log name before the installer runs, the installer registers your source to the Application log. If you specify a new source and an existing log, the installer creates a new event source and associates it with the log you specify. If you specify both a new source and a new log, the installer associates the new source with the new log in the registry, but the log is not created until the first entry is written to it.  \n  \n The operating system stores event logs as files. When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the Log property with the \".evt\" file name extension.  \n  \n Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source. The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties. The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer. The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the Log property.  \n  \n For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties."
  syntax:
    content: public string Log { get; set; }
    return:
      type: System.String
      description: "A napló nevét. Ez lehet alkalmazást, a rendszer vagy az egyéni naplófájlok nevének. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.EventLogInstaller.Log*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.MessageResourceFile
  id: MessageResourceFile
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: MessageResourceFile
  nameWithType: EventLogInstaller.MessageResourceFile
  fullName: System.Diagnostics.EventLogInstaller.MessageResourceFile
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a forrás karakterláncok formázási üzenetet tartalmazó erőforrás-fájl elérési útja."
  remarks: "Use the MessageResourceFile property to configure an event log source to write localized event messages. Event messages are application-defined strings that describe the event to the user.  \n  \n Your application can write event log entries using resource identifiers. A resource identifier indexes a message located in the MessageResourceFile. The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.  \n  \n The event source must be configured either for writing localized entries or for writing direct strings. Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.  \n  \n If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the MessageResourceFile property.  \n  \n If the <xref:System.Diagnostics.EventLog.MachineName%2A> property is not the local computer identifier (\".\"), the .NET Framework assumes that the resource file is on a remote computer. If the MessageResourceFile property value contains a drive letter, the resource file is assumed to be on the \\\\\\\\<machinename\\>\\\\<drive\\>$ share (for example, \\\\\\server\\c$). If the value contains the string %systemroot%, the resource file is assumed to be on the \\\\\\\\<machinename\\>\\admin$ share (for example, \\\\\\server\\admin$).  \n  \n For details about defining event messages and building event resource files, see the \"Message Compiler\" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/)."
  example:
  - "The following code example sets the installation properties for a new event source. The code example sets the event source name, event log name, and resource file for localized event text.  \n  \n [!code-cs[EventLogInstaller_Resources#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_9_1.cs)]\n [!code-vb[EventLogInstaller_Resources#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_9_1.vb)]\n [!code-cpp[EventLogInstaller_Resources#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_9_1.cpp)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public string MessageResourceFile { get; set; }
    return:
      type: System.String
      description: "Az üzenet erőforrás elérési útja. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.EventLogInstaller.MessageResourceFile*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.ParameterResourceFile
  id: ParameterResourceFile
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: ParameterResourceFile
  nameWithType: EventLogInstaller.ParameterResourceFile
  fullName: System.Diagnostics.EventLogInstaller.ParameterResourceFile
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a paraméter-karakterláncai üzenet a következő adatforrás tartalmazó erőforrás-fájl elérési útját."
  remarks: "A ParameterResourceFile tulajdonság segítségével konfigurálhatja a honosított eseményüzeneteket beszúrt paraméter karakterláncok írni egy eseménynapló-forrás. Minden egyes megadott honosított eseményüzenet a <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>tulajdonság tartalmazhat behelyettesítendő karakterláncok helyőrzőit.</xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> A helyőrzők segítségével adja meg a pozíció és erőforrás-azonosítója egy nyelvtől független karakterlánc az eseményüzenet belül. Az Eseménynapló lecseréli a helyőrzőket a megfelelő sztringeket a ParameterResourceFile, és formázza az eseménynapló-üzenet a következő honosított esemény bejegyzés.       Például az alábbi szakasz üzenet szövegfájl meghatározása egy karakterlánc paraméter helyőrzővel: ```      MessageId = 1501   Severity = Success   Facility = Application   SymbolicName = COMPONENT_STARTING   Language=English   Component %%6050 is starting.   .   ``` paraméter erőforrás fájlon belül a behelyettesítendő karakterlánc definiálni kell az erőforrás-azonosító, amely megfelel a helyőrző a lent látható módon: ```   MessageId = 6050   Severity = Success   Facility = Application   SymbolicName = COMPONENT_NAME_MSGID   Language=English   TRIGGER.EXE   .   ``` az eseményforrás honosított bejegyzések írásra vagy közvetlen karakterláncok írásra kell konfigurálni. Használja a <xref:System.Diagnostics.EventLog.WriteEvent%2A>metódus a forrást, egy üzenet erőforrás a fájllal konfigurált honosított bejegyzést írni.</xref:System.Diagnostics.EventLog.WriteEvent%2A>       Ha az alkalmazás esemény üzenet karakterláncok közvetlenül ír az eseménynaplóba, vagy ha a <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>nem tartalmaz üzenetek paraméter beszúrási helyőrzőkkel, ne adja meg a ParameterResourceFile tulajdonság.</xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>       A Platform SDK dokumentációját a &quot;Üzenet fordító&quot; című részleteket eseményüzeneteket definiálása és felépítése esemény erőforrásfájlokat, [http://msdn.microsoft.com](http://msdn.microsoft.com/)."
  example:
  - "The following code example sets the installation properties for a new event source. The code example sets the event source name, event log name, and resource file for localized event text.  \n  \n [!code-cs[EventLogInstaller_Resources#1](~/add/codesnippet/csharp/p-system.diagnostics.eve_26_1.cs)]\n [!code-vb[EventLogInstaller_Resources#1](~/add/codesnippet/visualbasic/p-system.diagnostics.eve_26_1.vb)]\n [!code-cpp[EventLogInstaller_Resources#1](~/add/codesnippet/cpp/p-system.diagnostics.eve_26_1.cpp)]  \n  \n The code example uses the following message text file, built into the resource library EventLogMsgs.dll. A message text file is the source from which the message resource file is created. The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings. Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.  \n  \n```  \n; // EventLogMsgs.mc  \n; // ********************************************************  \n  \n; // Use the following commands to build this file:  \n  \n; //   mc -s EventLogMsgs.mc  \n; //   rc EventLogMsgs.rc  \n; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   \n; // ********************************************************  \n  \n; // - Event categories -  \n; // Categories must be numbered consecutively starting at 1.  \n; // ********************************************************  \n  \nMessageId=0x1  \nSeverity=Success  \nSymbolicName=INSTALL_CATEGORY  \nLanguage=English  \nInstallation  \n.  \n  \nMessageId=0x2  \nSeverity=Success  \nSymbolicName=QUERY_CATEGORY  \nLanguage=English  \nDatabase Query  \n.  \n  \nMessageId=0x3  \nSeverity=Success  \nSymbolicName=REFRESH_CATEGORY  \nLanguage=English  \nData Refresh  \n.  \n  \n; // - Event messages -  \n; // *********************************  \n  \nMessageId = 1000  \nSeverity = Success  \nFacility = Application  \nSymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  \nLanguage=English  \nMy application message text, in English, for message id 1000, called from %1.  \n.  \n  \nMessageId = 1001  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  \nLanguage=English  \nMy application message text, in English, for message id 1001, called from %1.  \n.  \n  \nMessageId = 1002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = GENERIC_INFO_MESSAGE_ID_1002  \nLanguage=English  \nMy generic information message in English, for message id 1002.  \n.  \n  \nMessageId = 1003  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  \nLanguage=English  \nMy generic warning message in English, for message id 1003, called from %1.  \n.  \n  \nMessageId = 1004  \nSeverity = Success  \nFacility = Application  \nSymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  \nLanguage=English  \nThe update cycle is complete for %%5002.  \n.  \n  \nMessageId = 1005  \nSeverity = Warning  \nFacility = Application  \nSymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  \nLanguage=English  \nThe refresh operation did not complete because the connection to server %1 could not be established.  \n.  \n  \n; // - Event log display name -  \n; // ********************************************************  \n  \nMessageId = 5001  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  \nLanguage=English  \nSample Event Log  \n.  \n  \n; // - Event message parameters -  \n; //   Language independent insertion strings  \n; // ********************************************************  \n  \nMessageId = 5002  \nSeverity = Success  \nFacility = Application  \nSymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  \nLanguage=English  \nSVC_UPDATE.EXE  \n.  \n```"
  syntax:
    content: public string ParameterResourceFile { get; set; }
    return:
      type: System.String
      description: "Az üzenet paraméter erőforrás-fájl elérési útját. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.EventLogInstaller.ParameterResourceFile*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)
  id: Rollback(System.Collections.IDictionary)
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: Rollback(IDictionary)
  nameWithType: EventLogInstaller.Rollback(IDictionary)
  fullName: System.Diagnostics.EventLogInstaller.Rollback(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "A számítógép visszaállítása a állapotba, amelyben a telepítés előtt visszaállítása az eseménynapló-adatok a telepítési folyamat létrehozó a beállításjegyzék által."
  remarks: "A visszaállítási metódus eredő visszavonja a <xref:System.Diagnostics.EventLogInstaller.Install%2A>metódus.</xref:System.Diagnostics.EventLogInstaller.Install%2A> Visszaállítás nevezik, ha valamelyik összetevő a telepítési projekt telepítése sikertelen. A <xref:System.Diagnostics.EventLogInstaller.Install%2A>metódus hoz létre, vagy egy eseménynapló és eseményforrás tulajdonságainak beállítása.</xref:System.Diagnostics.EventLogInstaller.Install%2A> Visszaállítás törli az Eseménynapló és a forrás vagy a már meglévő adatforrás tulajdonságainak visszaállítása a telepítés előtti értékre.       Általában nem igényelnek a módszerek a <xref:System.Diagnostics.EventLogInstaller>a a kód; általában akkor kizárólag a [Installutil.exe (Installer eszköz)](~/add/includes/ajax-current-ext-md.md).</xref:System.Diagnostics.EventLogInstaller> Az eszköz meghívja a visszavonás használata esetén, amikor vagy egy másik összetevő nem tudta telepíteni, a telepítési folyamat már által végrehajtott módosítások visszavonása.       Egy alkalmazás telepítése rutin használja a projekt telepítő <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>tulajdonság automatikusan a már telepített összetevőinek adatainak tárolásához.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> Az állapotadatokat, mint visszaállítási átadott a `savedState` szerint az eszköz visszaállítja a minden egyes <xref:System.Diagnostics.EventLogInstaller>.</xref:System.Diagnostics.EventLogInstaller> paraméter, folyamatosan frissül. Általában nincs szükség a kód módosítható explicit módon az állapotadatokat."
  syntax:
    content: public override void Rollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: "Egy <xref:System.Collections.IDictionary>, amely tartalmazza a számítógépet a telepítés előtti állapotát.</xref:System.Collections.IDictionary>"
  overload: System.Diagnostics.EventLogInstaller.Rollback*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.Source
  id: Source
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: Source
  nameWithType: EventLogInstaller.Source
  fullName: System.Diagnostics.EventLogInstaller.Source
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Lekérdezi vagy beállítja a forrás nevét, a napló regisztrálására."
  remarks: "Az eseményforrás azt jelzi, hogy mi a eseményt naplóz. Ez gyakran azért, az alkalmazás nevét, vagy egy nagy alkalmazáson belül egy összetevő nevére.       A telepítő a Source tulajdonság használatával regisztrálhatja alkalmazását az eseménynapló bejegyzéseinek érvényes forrásaként. Egy új adatforrás neve nem egyezhet meg, egy meglévő adatforrás neve, vagy egy meglévő eseménynaplónevet. Minden forrás csak írhat egy eseménynapló egyszerre; azonban az alkalmazás segítségével több forrásból több eseménynaplók írni. Az alkalmazás például szükség lehet a különböző eseménynaplók vagy a különböző erőforrás-fájlok több forrásból.       Alkalmazásokhoz és szolgáltatásokhoz az alkalmazásnaplóba vagy egy egyéni naplót kell írni. Eszközillesztők kell írni a rendszernaplóba. Ha nem adja meg a napló nevét, a telepítő futtatása előtt, a telepítő regisztrál az adatforrásból az alkalmazásnaplóba. Ha megad egy nem létező napló neve, a rendszer regisztrálja a forrás, amellyel bejelentkezik, de nem jön létre a napló csak az első bejegyzés beíródik azt.       Használjon <xref:System.Diagnostics.EventLogInstaller>regisztrálni egy új vagy meglévő eseménynaplóba; új forrást ne használjon <xref:System.Diagnostics.EventLogInstaller>módosítani egy meglévő.</xref:System.Diagnostics.EventLogInstaller> </xref:System.Diagnostics.EventLogInstaller> A <xref:System.Diagnostics.EventLogInstaller>osztály nem egy meglévő forrás megadott telepítési tulajdonságokban egyező konfiguráció tulajdonságainak módosítása.</xref:System.Diagnostics.EventLogInstaller> A <xref:System.Diagnostics.EventLogInstaller.Install%2A>metódus kivételt jelez, ha a forrás tulajdonsága egyezést mutat a forrás-nevet, amely regisztrálva van a számítógépen egy másik eseménynaplóba.</xref:System.Diagnostics.EventLogInstaller.Install%2A> A <xref:System.Diagnostics.EventLogInstaller.Install%2A>metódus nem regisztrálja a forrás, ha a Source tulajdonság már regisztrálva van a megadott azonos eseménynapló forrás neve megegyezik a <xref:System.Diagnostics.EventLogInstaller.Log%2A>tulajdonság.</xref:System.Diagnostics.EventLogInstaller.Log%2A> </xref:System.Diagnostics.EventLogInstaller.Install%2A>       Az eseménynaplók és a források viselkedésmódját kapcsolatos információkat, lásd: a <xref:System.Diagnostics.EventLog>osztály dokumentációja a <xref:System.Diagnostics.EventLog.Log%2A>és <xref:System.Diagnostics.EventLog.Source%2A>Tulajdonságok.</xref:System.Diagnostics.EventLog.Source%2A> </xref:System.Diagnostics.EventLog.Log%2A> </xref:System.Diagnostics.EventLog>"
  syntax:
    content: public string Source { get; set; }
    return:
      type: System.String
      description: "A bejegyzések forrásként regisztrálni az Eseménynapló neve. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Diagnostics.EventLogInstaller.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)
  id: Uninstall(System.Collections.IDictionary)
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: Uninstall(IDictionary)
  nameWithType: EventLogInstaller.Uninstall(IDictionary)
  fullName: System.Diagnostics.EventLogInstaller.Uninstall(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Telepítés megszüntetéséhez eseménynapló-adatok eltávolítása a beállításjegyzékből."
  remarks: "Ha a <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A>tulajdonság értéke `Remove`, az Eltávolítás metódus törli a forrás és a társított naplófájl jön létre, ha a telepítő a <xref:System.Diagnostics.EventLogInstaller.Log%2A>és <xref:System.Diagnostics.EventLogInstaller.Source%2A>létrehozása egy új Eseménynapló és a forrás megadva a tulajdonságai.</xref:System.Diagnostics.EventLogInstaller.Source%2A> </xref:System.Diagnostics.EventLogInstaller.Log%2A> </xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A>       Általában nem igényelnek a módszerek a <xref:System.Diagnostics.EventLogInstaller>a a kód; általában akkor kizárólag a [Installutil.exe (Installer eszköz)](~/add/includes/ajax-current-ext-md.md) a távolítsa el a mód.</xref:System.Diagnostics.EventLogInstaller> Az eszköz automatikusan meghívja az Eltávolítás helyreállítása a rendszer azon részei, amelyek a telepítés előtti állapotába telepítés is hatással volt. Ez magában foglalja, törlés, beállításjegyzék-információk az eseménynaplóban eltávolítása folyamatban van társítva.       Az alkalmazás eltávolításához rutin használja a projekt telepítő <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>tulajdonság automatikusan gondoskodik a vonatkozó információkat, amelyek már el lett távolítva.</xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> Az állapotadatokat, eltávolítás, átadott a `savedState` szerint az eszköz eltávolítása minden egyes <xref:System.Diagnostics.EventLogInstaller>.</xref:System.Diagnostics.EventLogInstaller> paraméter, folyamatosan frissül. Általában nincs szükség a kód módosítható explicit módon az állapotadatokat."
  syntax:
    content: public override void Uninstall (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: "Egy <xref:System.Collections.IDictionary>, amely tartalmazza a számítógépet a telepítés előtti állapotát.</xref:System.Collections.IDictionary>"
  overload: System.Diagnostics.EventLogInstaller.Uninstall*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogInstaller.UninstallAction
  id: UninstallAction
  parent: System.Diagnostics.EventLogInstaller
  langs:
  - csharp
  name: UninstallAction
  nameWithType: EventLogInstaller.UninstallAction
  fullName: System.Diagnostics.EventLogInstaller.UninstallAction
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Diagnostics
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a [Installutil.exe (Installer eszköz)](~/add/includes/ajax-current-ext-md.md) távolítsa el az eseménynaplót, vagy hagyja, a telepített állapotában eltávolítási időben."
  remarks: "Amikor telepít egy eseménynapló, opcionálisan csatlakozhat azt egy már létező napló. Ha így tesz, el kell döntenie, hogy a napló kell telepítés előtti állapotába való visszatéréshez, vagy az aktuális, a telepítés utáni állapotban marad. Ha térjen vissza az Eseménynapló telepítés előtti állapotába való, a rendszer nem állítja vissza az Eseménynapló bejegyzéseihez telepítés módosításait. Csak az Eseménynapló-tulajdonságok társított visszaállíthatja a <xref:System.Diagnostics.EventLogInstaller>telepítés előtti értékükre.</xref:System.Diagnostics.EventLogInstaller>"
  syntax:
    content: public System.Configuration.Install.UninstallAction UninstallAction { get; set; }
    return:
      type: System.Configuration.Install.UninstallAction
      description: "Egy a <xref href=&quot;System.Configuration.Install.UninstallAction&quot;> </xref> érték, amely jelzi, hogy mely állapotot, ha hagyja az eseménynaplóban a <xref href=&quot;System.Diagnostics.EventLog&quot;> </xref> el lesz távolítva. Az alapértelmezett érték <xref uid=&quot;langword_csharp_Remove&quot; name=&quot;Remove&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventLogInstaller.UninstallAction*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "UninstallAction érvénytelen értéket tartalmaz. Ez a tulajdonság csak érvényes értékei <xref uid=&quot;langword_csharp_Remove&quot; name=&quot;Remove&quot; href=&quot;&quot;> </xref> és <xref uid=&quot;langword_csharp_NoAction&quot; name=&quot;NoAction&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Configuration.Install.ComponentInstaller
  isExternal: false
  name: System.Configuration.Install.ComponentInstaller
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Diagnostics.EventLogInstaller.#ctor
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: EventLogInstaller()
  nameWithType: EventLogInstaller.EventLogInstaller()
  fullName: System.Diagnostics.EventLogInstaller.EventLogInstaller()
- uid: System.Diagnostics.EventLogInstaller.CategoryCount
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: CategoryCount
  nameWithType: EventLogInstaller.CategoryCount
  fullName: System.Diagnostics.EventLogInstaller.CategoryCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.EventLogInstaller.CategoryResourceFile
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: CategoryResourceFile
  nameWithType: EventLogInstaller.CategoryResourceFile
  fullName: System.Diagnostics.EventLogInstaller.CategoryResourceFile
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: CopyFromComponent(IComponent)
  nameWithType: EventLogInstaller.CopyFromComponent(IComponent)
  fullName: System.Diagnostics.EventLogInstaller.CopyFromComponent(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Install(IDictionary)
  nameWithType: EventLogInstaller.Install(IDictionary)
  fullName: System.Diagnostics.EventLogInstaller.Install(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: IsEquivalentInstaller(ComponentInstaller)
  nameWithType: EventLogInstaller.IsEquivalentInstaller(ComponentInstaller)
  fullName: System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(ComponentInstaller)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.EventLogInstaller.Log
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Log
  nameWithType: EventLogInstaller.Log
  fullName: System.Diagnostics.EventLogInstaller.Log
- uid: System.Diagnostics.EventLogInstaller.MessageResourceFile
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: MessageResourceFile
  nameWithType: EventLogInstaller.MessageResourceFile
  fullName: System.Diagnostics.EventLogInstaller.MessageResourceFile
- uid: System.Diagnostics.EventLogInstaller.ParameterResourceFile
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: ParameterResourceFile
  nameWithType: EventLogInstaller.ParameterResourceFile
  fullName: System.Diagnostics.EventLogInstaller.ParameterResourceFile
- uid: System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Rollback(IDictionary)
  nameWithType: EventLogInstaller.Rollback(IDictionary)
  fullName: System.Diagnostics.EventLogInstaller.Rollback(IDictionary)
- uid: System.Diagnostics.EventLogInstaller.Source
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Source
  nameWithType: EventLogInstaller.Source
  fullName: System.Diagnostics.EventLogInstaller.Source
- uid: System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Uninstall(IDictionary)
  nameWithType: EventLogInstaller.Uninstall(IDictionary)
  fullName: System.Diagnostics.EventLogInstaller.Uninstall(IDictionary)
- uid: System.Diagnostics.EventLogInstaller.UninstallAction
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: UninstallAction
  nameWithType: EventLogInstaller.UninstallAction
  fullName: System.Diagnostics.EventLogInstaller.UninstallAction
- uid: System.Configuration.Install.UninstallAction
  parent: System.Configuration.Install
  isExternal: false
  name: UninstallAction
  nameWithType: UninstallAction
  fullName: System.Configuration.Install.UninstallAction
- uid: System.Diagnostics.EventLogInstaller.#ctor*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: EventLogInstaller
  nameWithType: EventLogInstaller.EventLogInstaller
- uid: System.Diagnostics.EventLogInstaller.CategoryCount*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: CategoryCount
  nameWithType: EventLogInstaller.CategoryCount
- uid: System.Diagnostics.EventLogInstaller.CategoryResourceFile*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: CategoryResourceFile
  nameWithType: EventLogInstaller.CategoryResourceFile
- uid: System.Diagnostics.EventLogInstaller.CopyFromComponent*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: CopyFromComponent
  nameWithType: EventLogInstaller.CopyFromComponent
- uid: System.Diagnostics.EventLogInstaller.Install*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Install
  nameWithType: EventLogInstaller.Install
- uid: System.Diagnostics.EventLogInstaller.IsEquivalentInstaller*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: IsEquivalentInstaller
  nameWithType: EventLogInstaller.IsEquivalentInstaller
- uid: System.Diagnostics.EventLogInstaller.Log*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Log
  nameWithType: EventLogInstaller.Log
- uid: System.Diagnostics.EventLogInstaller.MessageResourceFile*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: MessageResourceFile
  nameWithType: EventLogInstaller.MessageResourceFile
- uid: System.Diagnostics.EventLogInstaller.ParameterResourceFile*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: ParameterResourceFile
  nameWithType: EventLogInstaller.ParameterResourceFile
- uid: System.Diagnostics.EventLogInstaller.Rollback*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Rollback
  nameWithType: EventLogInstaller.Rollback
- uid: System.Diagnostics.EventLogInstaller.Source*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Source
  nameWithType: EventLogInstaller.Source
- uid: System.Diagnostics.EventLogInstaller.Uninstall*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: Uninstall
  nameWithType: EventLogInstaller.Uninstall
- uid: System.Diagnostics.EventLogInstaller.UninstallAction*
  parent: System.Diagnostics.EventLogInstaller
  isExternal: false
  name: UninstallAction
  nameWithType: EventLogInstaller.UninstallAction
