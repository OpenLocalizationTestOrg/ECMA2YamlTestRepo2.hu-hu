### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TableCellCollection
  id: TableCellCollection
  children:
  - System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.Capacity
  - System.Windows.Documents.TableCellCollection.Clear
  - System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)
  - System.Windows.Documents.TableCellCollection.Count
  - System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.IsReadOnly
  - System.Windows.Documents.TableCellCollection.IsSynchronized
  - System.Windows.Documents.TableCellCollection.Item(System.Int32)
  - System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)
  - System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Documents.TableCellCollection.SyncRoot
  - System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator
  - System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Windows.Documents.TableCellCollection.TrimToSize
  langs:
  - csharp
  name: TableCellCollection
  nameWithType: TableCellCollection
  fullName: System.Windows.Documents.TableCellCollection
  type: Class
  summary: "Szabványos lehetőségek biztosít létrehozására és kezelésére típus szálbiztos, rendezett gyűjteménye <xref href=&quot;System.Windows.Documents.TableCell&quot;> </xref> objektumok."
  remarks: "Ez a gyűjtemény támogatja a szabványos nulla alapú indexelést.       A <xref:System.Windows.Documents.TableRow.Cells%2A>tulajdonság által biztosított a <xref:System.Windows.Documents.TableRow>osztály adja vissza egy TableCellCollection.</xref:System.Windows.Documents.TableRow> </xref:System.Windows.Documents.TableRow.Cells%2A>"
  syntax:
    content: 'public sealed class TableCellCollection : System.Collections.Generic.ICollection<System.Windows.Documents.TableCell>, System.Collections.Generic.IEnumerable<System.Windows.Documents.TableCell>, System.Collections.Generic.IList<System.Windows.Documents.TableCell>, System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Windows.Documents.TableCell>
  - System.Collections.Generic.IEnumerable<System.Windows.Documents.TableCell>
  - System.Collections.Generic.IList<System.Windows.Documents.TableCell>
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)
  id: Add(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Add(TableCell)
  nameWithType: TableCellCollection.Add(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Add(TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Hozzáfűz egy meghatározott <xref href=&quot;System.Windows.Documents.TableCell&quot;> </xref> táblázatcellák a gyűjteményhez."
  syntax:
    content: public void Add (System.Windows.Documents.TableCell item);
    parameters:
    - id: item
      type: System.Windows.Documents.TableCell
      description: "A <xref href=&quot;System.Windows.Documents.TableCell&quot;> </xref> illesztendő tábla cellák gyűjteménye."
  overload: System.Windows.Documents.TableCellCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jelenik meg, mikor <code> item </code> már tartozik egy gyűjteményhez."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jelenik meg, mikor <code> item </code> null értékű."
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.Capacity
  id: Capacity
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: TableCellCollection.Capacity
  fullName: System.Windows.Documents.TableCellCollection.Capacity
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Lekérdezi vagy beállítja a előzetesen lefoglalt gyűjtemény elemek maximális száma ehhez a gyűjteményhez."
  remarks: "A kapacitás tulajdonság jelöli a gyűjteményben lévő elemek tárolására előzetesen lefoglalt helyek száma, mivel a <xref:System.Windows.Documents.TableCellCollection.Count%2A>tulajdonság adja meg a gyűjtemény jelenleg elemeinek tényleges számát.</xref:System.Windows.Documents.TableCellCollection.Count%2A> A kapacitás értéke mindig legalább akkora, mint <xref:System.Windows.Documents.TableCellCollection.Count%2A>.</xref:System.Windows.Documents.TableCellCollection.Count%2A> értéke       Ha az újonnan hozzáadott gyűjtemény elemeinek okozhat a gyűjtemény száma meghaladja a gyűjtemény kapacitását, és a kapacitás jobb lesz automatikusan az újonnan hozzáadott gyűjtemény elemeinek befogadásához.  A gyűjtemény a kapacitás növelése magában foglalja a lefoglalásával további gyűjtemény üzembe helyezési ponti, ami azt eredményezi azok háromszorosa teljesítmény- és Memóriaterhelést.  A kapacitás tulajdonság segítségével optimalizálhatja a gyűjtemény kapacitását azokban az esetekben, ahol a gyűjtemény elemeinek teljes és maximális számát is ismert előre. Használja a <xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A>módszer az aktuális gyűjtemény Count végezzen a gyűjtemény kapacitását okozza.</xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A>"
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "Előzetesen lefoglalt gyűjtemény elem kapacitás ehhez a gyűjteményhez. Az alapértelmezett értéke 8."
  overload: System.Windows.Documents.TableCellCollection.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Következik be, amikor egy megkísérli egy érték, amely kisebb, mint a jelenlegi érték <xref:System.Windows.Documents.TableCellCollection.Count*>.</xref:System.Windows.Documents.TableCellCollection.Count*> kapacitás beállítása"
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.Clear
  id: Clear
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TableCellCollection.Clear()
  fullName: System.Windows.Documents.TableCellCollection.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Törli az összes elemet a gyűjteményből."
  remarks: "Törölje a jelet, értékének hívása után a <xref:System.Windows.Documents.TableCellCollection.Count%2A>tulajdonság válik **0** , értéke pedig a <xref:System.Windows.Documents.TableCellCollection.Capacity%2A>tulajdonság nem változott.</xref:System.Windows.Documents.TableCellCollection.Capacity%2A> </xref:System.Windows.Documents.TableCellCollection.Count%2A> Állítsa be egy új kapacitás, hívja meg a <xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A>vagy explicit módon beállítva egy új kapacitás keresztül a <xref:System.Windows.Documents.TableCellCollection.Capacity%2A>tulajdonság.</xref:System.Windows.Documents.TableCellCollection.Capacity%2A> </xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Documents.TableCellCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)
  id: Contains(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Contains(TableCell)
  nameWithType: TableCellCollection.Contains(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Contains(TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "A megadott elem a gyűjteményben lévő jelenlétét lekérdezések."
  syntax:
    content: public bool Contains (System.Windows.Documents.TableCell item);
    parameters:
    - id: item
      type: System.Windows.Documents.TableCell
      description: "A gyűjtemény jelenlétét lekérdezés elemet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott <code> item </code> megtalálható a gyűjteményben; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TableCellCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TableCellCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Documents.TableCellCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "A gyűjtemény tartalmát, és beilleszti azokat a megadott tömb a megadott index a tömb pozíciótól kezdődően."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A gyűjtemény tartalma másolja egydimenziós tömb. A tömb kell használnia, nulla alapú indexelést."
    - id: index
      type: System.Int32
      description: "A nulla alapú index `array` kezdőpontját beilleszteni a másolt gyűjtemény objektumok pozíció megadására."
  overload: System.Windows.Documents.TableCellCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jelenik meg, mikor <code> array </code> tartalmaz, amelyek nem kompatibilis a típussal elemek <xref href=&quot;System.Windows.Documents.TableCell&quot;> </xref>, vagy, ha <code> index </code> megadja a pozíció határán kívül eső <code> array </code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jelenik meg, mikor <code> array </code> null értékű."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Jelenik meg, mikor <code> index </code> 0-nál kisebb."
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)
  id: CopyTo(System.Windows.Documents.TableCell[],System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: CopyTo(TableCell[],Int32)
  nameWithType: TableCellCollection.CopyTo(TableCell[],Int32)
  fullName: System.Windows.Documents.TableCellCollection.CopyTo(TableCell[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "A gyűjtemény tartalmát, és beilleszti azokat a megadott <xref href=&quot;System.Windows.Documents.TableCell&quot;> </xref> tömb a megadott index a tömb pozíciótól kezdődően."
  syntax:
    content: public void CopyTo (System.Windows.Documents.TableCell[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Documents.TableCell[]
      description: "Egy egydimenziós <xref href=&quot;System.Windows.Documents.TableCell&quot;> </xref> tömbben a gyűjtemény tartalma kerülnek. A tömb kell használnia, nulla alapú indexelést."
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét a `array` , amely megadja a másolt gyűjtemény objektumok beszúrása kezdőpontját pozícióját."
  overload: System.Windows.Documents.TableCellCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jelenik meg, mikor <code> array </code> tartalmaz, amelyek nem kompatibilis a típussal elemek <xref href=&quot;System.Windows.Documents.TableCell&quot;> </xref>, vagy – ha <code> index </code> meghatározza a pozíció határain kívülre eső <code> array </code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jelenik meg, mikor <code> array </code> null értékű."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Jelenik meg, mikor <code> index </code> 0-nál kisebb."
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.Count
  id: Count
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Count
  nameWithType: TableCellCollection.Count
  fullName: System.Windows.Documents.TableCellCollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Lekérdezi a gyűjtemény által jelenleg tárolt elemek száma."
  remarks: "A <xref:System.Windows.Documents.TableCellCollection.Capacity%2A>tulajdonság elemek tárolására a gyűjtemény, előre lefoglalt tárolóhelyek számot jelöli, mivel a Count tulajdonság jelöli a gyűjtemény jelenleg elemeinek tényleges számát.</xref:System.Windows.Documents.TableCellCollection.Capacity%2A>  Értékének <xref:System.Windows.Documents.TableCellCollection.Capacity%2A>mindig legalább akkora, mint a Count értékének.</xref:System.Windows.Documents.TableCellCollection.Capacity%2A>       Ha az újonnan hozzáadott gyűjtemény elemeinek okozhat a gyűjtemény száma meghaladja a gyűjtemény kapacitását, és a kapacitás jobb lesz automatikusan az újonnan hozzáadott gyűjtemény elemeinek befogadásához. A gyűjtemény a kapacitás növelése magában foglalja a lefoglalásával további gyűjtemény üzembe helyezési ponti, ami azt eredményezi azok háromszorosa teljesítmény- és Memóriaterhelést.  Használja a <xref:System.Windows.Documents.TableCellCollection.Capacity%2A>optimalizálja a gyűjtemény kapacitását azokban az esetekben, ahol a gyűjtemény elemeinek teljes és maximális száma előre ismert tulajdonság.</xref:System.Windows.Documents.TableCellCollection.Capacity%2A> Használja a <xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A>módszer az aktuális gyűjtemény Count végezzen a gyűjtemény kapacitását okozza.</xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Jelenleg a gyűjteményben lévő elemek száma."
  overload: System.Windows.Documents.TableCellCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)
  id: IndexOf(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: IndexOf(TableCell)
  nameWithType: TableCellCollection.IndexOf(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.IndexOf(TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Visszaadja a megadott gyűjteményelemet nulla alapú indexét."
  syntax:
    content: public int IndexOf (System.Windows.Documents.TableCell item);
    parameters:
    - id: item
      type: System.Windows.Documents.TableCell
      description: "A gyűjtemény egyik elemét indexét vissza."
    return:
      type: System.Int32
      description: "A megadott gyűjteményelemet, vagy a -1, ha a megadott elem nem tagja a gyűjtemény nulla alapú indexét."
  overload: System.Windows.Documents.TableCellCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)
  id: Insert(System.Int32,System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Insert(Int32,TableCell)
  nameWithType: TableCellCollection.Insert(Int32,TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Insert(Int32,TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "A megadott elem beszúrása a gyűjtemény egy megadott helyen."
  remarks: "Ha <xref:System.Windows.Documents.TableCellCollection.Count%2A>egyenlő <xref:System.Windows.Documents.TableCellCollection.Capacity%2A>Ehhez a gyűjteményhez, a gyűjtemény kapacitását jobb lesz automatikusan előtt az új sort kell beszúrni.</xref:System.Windows.Documents.TableCellCollection.Capacity%2A> </xref:System.Windows.Documents.TableCellCollection.Count%2A> Állítsa be `index` értékének egyenlőnek <xref:System.Windows.Documents.TableCellCollection.Count%2A>egy új gyűjteményelem hozzáfűzése a gyűjteményben.</xref:System.Windows.Documents.TableCellCollection.Count%2A>       A meglévő gyűjtemény elemeinek indexek előfordulhat, hogy kell beállítani, az újonnan behelyezett gyűjteményelem befogadásához."
  syntax:
    content: public void Insert (int index, System.Windows.Documents.TableCell item);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amely megadja az szúrja be, a gyűjtemény `item`."
    - id: item
      type: System.Windows.Documents.TableCell
      description: "Egy elem beszúrása a gyűjteményben."
  overload: System.Windows.Documents.TableCellCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Jelenik meg, mikor <code> index </code> 0-nál kisebb."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jelenik meg, mikor <code> item </code> null értékű."
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TableCellCollection.IsReadOnly
  fullName: System.Windows.Documents.TableCellCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a típus vagy tag támogatja a [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastruktúra és nem javasolt közvetlenül a kódból használni."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Jelenleg ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TableCellCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TableCellCollection.IsSynchronized
  fullName: System.Windows.Documents.TableCellCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a típus vagy tag támogatja a [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastruktúra és nem javasolt közvetlenül a kódból használni."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Jelenleg ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TableCellCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TableCellCollection.Item(Int32)
  fullName: System.Windows.Documents.TableCellCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Lekérdezi vagy beállítja a gyűjteményelem megadott indexnél. Ez az egy indexelt tulajdonság."
  remarks: "Ez az egy indexelt tulajdonság, amely támogatja a szabványos indexelési szintaxis (hasonlóan egy adott cella tömbben elérésére használt)."
  syntax:
    content: public System.Windows.Documents.TableCell this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amely megadja a gyűjteményelem pozícióját."
    return:
      type: System.Windows.Documents.TableCell
      description: "A megadott indexpozíciónál gyűjteményelemet."
  overload: System.Windows.Documents.TableCellCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Jelenik meg, mikor <code> index </code> kisebb nullánál, vagy ha <code> index </code> nagyobb vagy egyenlő a <xref:System.Windows.Documents.TableCellCollection.Count*>.</xref:System.Windows.Documents.TableCellCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)
  id: Remove(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Remove(TableCell)
  nameWithType: TableCellCollection.Remove(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Remove(TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Eltávolítja a megadott elem a gyűjteményben."
  remarks: "A fennmaradó gyűjtemény elemeinek indexek előfordulhat, hogy kell beállítani, az eltávolított gyűjteményelem megfelelően."
  syntax:
    content: public bool Remove (System.Windows.Documents.TableCell item);
    parameters:
    - id: item
      type: System.Windows.Documents.TableCell
      description: "Elem eltávolítása a gyűjteményből."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott elem található, eltávolított; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TableCellCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ha emelt <code> item </code> azonban nem szerepel a gyűjteményben."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Jelenik meg, mikor <code> item </code> null értékű."
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TableCellCollection.RemoveAt(Int32)
  fullName: System.Windows.Documents.TableCellCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Eltávolítja egy elemet a gyűjteményből, index által megadott."
  remarks: "A fennmaradó gyűjtemény elemeinek indexek előfordulhat, hogy kell beállítani, az eltávolított gyűjteményelem megfelelően."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A gyűjteményelem eltávolítása megadó nulla alapú indexét."
  overload: System.Windows.Documents.TableCellCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Jelenik meg, mikor <code> index </code> kisebb nullánál, vagy ha <code> index </code> nagyobb vagy egyenlő a <xref:System.Windows.Documents.TableCellCollection.Count*>.</xref:System.Windows.Documents.TableCellCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: TableCellCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Documents.TableCellCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Eltávolítja a kezdő index és count, a gyűjtemény által megadott elemek címtartományt."
  remarks: "A fennmaradó gyűjtemény elemeinek indexek előfordulhat, hogy igazítani a tükrözze az eltávolított adatgyűjtő elemeket."
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "Egy elemet szeretne eltávolítani a tartományának kezdetét jelzi nulla alapú indexét."
    - id: count
      type: System.Int32
      description: "Az elemek eltávolításához száma által megadott helyről verziótól `index`."
  overload: System.Windows.Documents.TableCellCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Jelenik meg, mikor <code> index </code> vagy <code> count </code> kisebb nullánál, vagy ha <code> index </code> nagyobb vagy egyenlő a <xref:System.Windows.Documents.TableCellCollection.Count*>.</xref:System.Windows.Documents.TableCellCollection.Count*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Jelenik meg, mikor <code> index </code> és <code> count </code> ne adjon meg egy érvényes tartományt ebben a gyűjteményben."
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TableCellCollection.SyncRoot
  fullName: System.Windows.Documents.TableCellCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a típus vagy tag támogatja a [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] infrastruktúra és nem javasolt közvetlenül a kódból használni."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Egy objektum, amely segítségével szinkronizálása hozzáférése a gyűjteményhez."
  overload: System.Windows.Documents.TableCellCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: TableCellCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Windows.Documents.TableCell> IEnumerable<TableCell>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.Documents.TableCell}
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable<System#Windows#Documents#TableCell>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TableCellCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IEnumerable>felületet.</xref:System.Collections.IEnumerable> </xref:System.Windows.Documents.TableCellCollection>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>objektum, amely segítségével a gyűjtemény iterációt.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection> Használja a típus környezetben is biztonságos <xref:System.Windows.Documents.TableCellCollection.Add%2A>metódus inkább.</xref:System.Windows.Documents.TableCellCollection.Add%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>hozzáadása a <xref href=&quot;System.Windows.Documents.TableCellCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A pozíció, amelybe az új elem lett beszúrva."
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: TableCellCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection> Használja a típus környezetben is biztonságos <xref:System.Windows.Documents.TableCellCollection.Clear%2A>metódus inkább.</xref:System.Windows.Documents.TableCellCollection.Clear%2A>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection> Használja a típus környezetben is biztonságos <xref:System.Windows.Documents.TableCellCollection.Contains%2A>metódus inkább.</xref:System.Windows.Documents.TableCellCollection.Contains%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>keresik a <xref href=&quot;System.Windows.Documents.TableCellCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref:System.Object>megtalálható a <xref href=&quot;System.Windows.Documents.TableCellCollection&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection> Használja a típus környezetben is biztonságos <xref:System.Windows.Documents.TableCellCollection.IndexOf%2A>metódus inkább.</xref:System.Windows.Documents.TableCellCollection.IndexOf%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>keresik a <xref href=&quot;System.Windows.Documents.TableCellCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Az index <code> value </code> található a listában, ha sikertelen, ha a -1."
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection> Használja a típus környezetben is biztonságos <xref:System.Windows.Documents.TableCellCollection.Insert%2A>metódus inkább.</xref:System.Windows.Documents.TableCellCollection.Insert%2A>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, ahol a <xref:System.Object>.</xref:System.Object> beszúrása"
    - id: value
      type: System.Object
      description: "A <xref:System.Object>elhelyezni a <xref href=&quot;System.Windows.Documents.TableCellCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a a <xref href=&quot;System.Windows.Documents.TableCellCollection&quot;> </xref> rendelkezik egy rögzített méretű; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: TableCellCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a a <xref href=&quot;System.Windows.Documents.TableCellCollection&quot;> </xref> csak olvasható; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection> Használja a típus környezetben is biztonságos <xref:System.Windows.Documents.TableCellCollection.Item%2A>tulajdonság helyette.</xref:System.Windows.Documents.TableCellCollection.Item%2A>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Az elem lekérése vagy beállítása nulla alapú indexét."
    return:
      type: System.Object
      description: "Az elem a megadott indexnél."
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection> Használja a típus biztonságos <xref:System.Windows.Documents.TableCellCollection.Remove%2A>, <xref:System.Windows.Documents.TableCellCollection.RemoveAt%2A>, vagy <xref:System.Windows.Documents.TableCellCollection.RemoveRange%2A>módszerek helyette</xref:System.Windows.Documents.TableCellCollection.RemoveRange%2A> </xref:System.Windows.Documents.TableCellCollection.RemoveAt%2A> </xref:System.Windows.Documents.TableCellCollection.Remove%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref:System.Object>eltávolítása a <xref href=&quot;System.Windows.Documents.TableCellCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Ez a tag ismertetését lásd: &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Windows.Documents.TableCellCollection>példány típusúvá egy <xref:System.Collections.IList>felületet.</xref:System.Collections.IList> </xref:System.Windows.Documents.TableCellCollection> Használja a típus biztonságos <xref:System.Windows.Documents.TableCellCollection.Remove%2A>, <xref:System.Windows.Documents.TableCellCollection.RemoveAt%2A>, vagy <xref:System.Windows.Documents.TableCellCollection.RemoveRange%2A>módszerek helyette.</xref:System.Windows.Documents.TableCellCollection.RemoveRange%2A> </xref:System.Windows.Documents.TableCellCollection.RemoveAt%2A> </xref:System.Windows.Documents.TableCellCollection.Remove%2A>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Az eltávolítandó elem nulla alapú indexét."
  overload: System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.TableCellCollection.TrimToSize
  id: TrimToSize
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: TrimToSize()
  nameWithType: TableCellCollection.TrimToSize()
  fullName: System.Windows.Documents.TableCellCollection.TrimToSize()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "A gyűjtemény memória-felhasználás optimalizálja úgy, hogy az alapul szolgáló gyűjtemény <> </> *> egyenlő a <> </> *> jelenleg a gyűjteményben lévő elemek."
  remarks: "Ez a módszer használható egy gyűjtemény Memóriaterhelést minimalizálása érdekében, különösen akkor, ha a gyűjtemény által tartalmazott elemeinek halmazát várhatóan statikus."
  syntax:
    content: public void TrimToSize ();
    parameters: []
  overload: System.Windows.Documents.TableCellCollection.TrimToSize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Add(TableCell)
  nameWithType: TableCellCollection.Add(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Add(TableCell)
- uid: System.Windows.Documents.TableCell
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell
- uid: System.Windows.Documents.TableCellCollection.Capacity
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Capacity
  nameWithType: TableCellCollection.Capacity
  fullName: System.Windows.Documents.TableCellCollection.Capacity
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.Clear
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Clear()
  nameWithType: TableCellCollection.Clear()
  fullName: System.Windows.Documents.TableCellCollection.Clear()
- uid: System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Contains(TableCell)
  nameWithType: TableCellCollection.Contains(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Contains(TableCell)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TableCellCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Documents.TableCellCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: CopyTo(TableCell[],Int32)
  nameWithType: TableCellCollection.CopyTo(TableCell[],Int32)
  fullName: System.Windows.Documents.TableCellCollection.CopyTo(TableCell[],Int32)
- uid: System.Windows.Documents.TableCell[]
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell[]
  spec.csharp:
  - uid: System.Windows.Documents.TableCell
    name: TableCell
    nameWithType: TableCell
    fullName: TableCell[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Documents.TableCellCollection.Count
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Count
  nameWithType: TableCellCollection.Count
  fullName: System.Windows.Documents.TableCellCollection.Count
- uid: System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IndexOf(TableCell)
  nameWithType: TableCellCollection.IndexOf(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.IndexOf(TableCell)
- uid: System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Insert(Int32,TableCell)
  nameWithType: TableCellCollection.Insert(Int32,TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Insert(Int32,TableCell)
- uid: System.Windows.Documents.TableCellCollection.IsReadOnly
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableCellCollection.IsReadOnly
  fullName: System.Windows.Documents.TableCellCollection.IsReadOnly
- uid: System.Windows.Documents.TableCellCollection.IsSynchronized
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableCellCollection.IsSynchronized
  fullName: System.Windows.Documents.TableCellCollection.IsSynchronized
- uid: System.Windows.Documents.TableCellCollection.Item(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TableCellCollection.Item(Int32)
  fullName: System.Windows.Documents.TableCellCollection.Item(Int32)
- uid: System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Remove(TableCell)
  nameWithType: TableCellCollection.Remove(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Remove(TableCell)
- uid: System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TableCellCollection.RemoveAt(Int32)
  fullName: System.Windows.Documents.TableCellCollection.RemoveAt(Int32)
- uid: System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: TableCellCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Documents.TableCellCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Documents.TableCellCollection.SyncRoot
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableCellCollection.SyncRoot
  fullName: System.Windows.Documents.TableCellCollection.SyncRoot
- uid: System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: TableCellCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.Generic.IEnumerable()
- uid: System.Collections.Generic.IEnumerator{System.Windows.Documents.TableCell}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<TableCell>
  nameWithType: IEnumerator<TableCell>
  fullName: System.Collections.Generic.IEnumerator<System.Windows.Documents.TableCell>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Windows.Documents.TableCell>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Documents.TableCell
    name: TableCell
    nameWithType: TableCell
    fullName: TableCell
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TableCellCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: TableCellCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Clear()
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TableCellCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Windows.Documents.TableCellCollection.TrimToSize
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: TrimToSize()
  nameWithType: TableCellCollection.TrimToSize()
  fullName: System.Windows.Documents.TableCellCollection.TrimToSize()
- uid: System.Windows.Documents.TableCellCollection.Add*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Add
  nameWithType: TableCellCollection.Add
- uid: System.Windows.Documents.TableCellCollection.Capacity*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Capacity
  nameWithType: TableCellCollection.Capacity
- uid: System.Windows.Documents.TableCellCollection.Clear*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Clear
  nameWithType: TableCellCollection.Clear
- uid: System.Windows.Documents.TableCellCollection.Contains*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Contains
  nameWithType: TableCellCollection.Contains
- uid: System.Windows.Documents.TableCellCollection.CopyTo*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: CopyTo
  nameWithType: TableCellCollection.CopyTo
- uid: System.Windows.Documents.TableCellCollection.Count*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Count
  nameWithType: TableCellCollection.Count
- uid: System.Windows.Documents.TableCellCollection.IndexOf*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IndexOf
  nameWithType: TableCellCollection.IndexOf
- uid: System.Windows.Documents.TableCellCollection.Insert*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Insert
  nameWithType: TableCellCollection.Insert
- uid: System.Windows.Documents.TableCellCollection.IsReadOnly*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableCellCollection.IsReadOnly
- uid: System.Windows.Documents.TableCellCollection.IsSynchronized*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableCellCollection.IsSynchronized
- uid: System.Windows.Documents.TableCellCollection.Item*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Item
  nameWithType: TableCellCollection.Item
- uid: System.Windows.Documents.TableCellCollection.Remove*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Remove
  nameWithType: TableCellCollection.Remove
- uid: System.Windows.Documents.TableCellCollection.RemoveAt*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TableCellCollection.RemoveAt
- uid: System.Windows.Documents.TableCellCollection.RemoveRange*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: RemoveRange
  nameWithType: TableCellCollection.RemoveRange
- uid: System.Windows.Documents.TableCellCollection.SyncRoot*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableCellCollection.SyncRoot
- uid: System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable<System#Windows#Documents#TableCell>#GetEnumerator*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Windows.Documents.TableCell>.GetEnumerator
  nameWithType: TableCellCollection.System.Collections.Generic.IEnumerable<System.Windows.Documents.TableCell>.GetEnumerator
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: TableCellCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Add*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TableCellCollection.System.Collections.IList.Add
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: TableCellCollection.System.Collections.IList.Clear
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TableCellCollection.System.Collections.IList.Contains
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TableCellCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TableCellCollection.System.Collections.IList.Insert
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TableCellCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Item*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TableCellCollection.System.Collections.IList.Item
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TableCellCollection.System.Collections.IList.Remove
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: TableCellCollection.System.Collections.IList.RemoveAt
- uid: System.Windows.Documents.TableCellCollection.TrimToSize*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: TrimToSize
  nameWithType: TableCellCollection.TrimToSize
