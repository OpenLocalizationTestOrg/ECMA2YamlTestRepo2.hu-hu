### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection
  id: TreeNodeBindingCollection
  children:
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  - System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: TreeNodeBindingCollection
  nameWithType: TreeNodeBindingCollection
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection
  type: Class
  summary: "Számoknak <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objektumokat a <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> vezérlő. Ez az osztály nem örökölhető."
  remarks: "A TreeNodeBindingCollection osztály használható tárolására és kezelésére gyűjteménye <xref:System.Web.UI.WebControls.TreeNodeBinding>objektumokat a <xref:System.Web.UI.WebControls.TreeView>vezérlő.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNodeBinding> A <xref:System.Web.UI.WebControls.TreeView>használ a TreeNodeBindingCollection osztály a <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>tulajdonság.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeView>       A <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>tulajdonsága tartalmazza <xref:System.Web.UI.WebControls.TreeNodeBinding>objektumok, amelyek meghatározzák egy adatelemet, ezért van a csomópont közötti kapcsolat.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Ha egy adatforrást, ha minden adatelemet tartalmaz (például egy XML-elem több attribútumokkal rendelkező), több tulajdonság kötése egy csomópont jeleníti meg a által visszaadott érték a `ToString` metódus az elem, alapértelmezés szerint. Egy XML-elem esetén a csomópont jeleníti meg az elem nevét, a fa alapvető szerkezetét mutatja, de nem nagyon hasznos ellenkező esetben. A csomópont kell egy adott adatok elemtulajdonság fa csomópont kötések megadásával kötni. Bár a <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>gyűjtemény programból feltölthetők, általában be deklarációval.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>       A fa csomópont kötéseinek beállítása deklarációval: 1.  Megnyitása és bezárása beágyazásához `<DataBindings>` címkék a nyitó és a záró címkék között a <xref:System.Web.UI.WebControls.TreeView>vezérlő.</xref:System.Web.UI.WebControls.TreeView>      2.  Hely `<asp:TreeNodeBinding>` elemei között a nyitó és záró `<DataBindings>` , amelyet meg szeretne fa csomópont kötésben címkék.       Programozott módon kezelheti a TreeNodeBindingCollection hozzáadása és eltávolítása <xref:System.Web.UI.WebControls.TreeNodeBinding>objektumok.</xref:System.Web.UI.WebControls.TreeNodeBinding> Hozzáadása egy <xref:System.Web.UI.WebControls.TreeNodeBinding>gyűjtésére, felhasználására objektumot a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>vagy <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>metódus.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> Csomópontok eltávolítása a gyűjteményből, használja a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>, vagy <xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=fullName>metódus.</xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>       A TreeNodeBindingCollection az osztály támogatja a gyűjtemény elemeinek eléréséhez többféleképpen:-használatát a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>megszerezni az indexelő egy <xref:System.Web.UI.WebControls.TreeNode>objektum közvetlenül egy adott nulla alapú indexét.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>      – Használja a <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=fullName>metódus létrehozása, amely segítségével a gyűjtemény iterációt számbevevőre.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=fullName>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to populate a TreeNodeBindingCollection object declaratively. The second code example demonstrates how to populate a TreeNodeBindingCollection object programmatically.  \n  \n The following code example demonstrates how to populate a TreeNodeBindingCollection object declaratively. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_291_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_291_1.aspx)]  \n  \n The following code example demonstrates how to populate a TreeNodeBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_291_2.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_291_2.aspx)]  \n  \n The following is the XML data for the preceding code examples.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n       <Section Heading=\"Section 1\">  \n       </Section>  \n       <Section Heading=\"Section 2\">  \n       </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: 'public sealed class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  id: Add(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Add(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Add(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A megadott hozzáfűzi <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objektum végének a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objektum."
  remarks: "Az Add metódus használatával hozzáfűzése a megadott <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum végének a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objektum.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>       Alternatív megoldásként is beszúrhat egy <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>egy adott index az a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>metódus.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Add method to add a new <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically to a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/csharp/1c7f636a-948c-4466-bc6b-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/visualbasic/1c7f636a-948c-4466-bc6b-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public int Add (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> hozzáfűzendő."
    return:
      type: System.Int32
      description: "A hozzáadott helyét nulla alapú indexét <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> a a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  id: Contains(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Contains(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Contains(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Meghatározza, hogy a megadott <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objektum már szerepel a gyűjteményben."
  remarks: "A Contains módszer segítségével meghatározhatja, hogy egy <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum tartalmazza a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objektum.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> Ezt a módszert gyakran használatos meglétét tesztelése egy <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum a feladatok, például a hozzáadása vagy eltávolítása előtt egy <xref:System.Web.UI.WebControls.TreeNodeBinding>a gyűjteményből.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> található."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> szerepel a gyűjteményben; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: CopyTo(TreeNodeBinding[],Int32)
  nameWithType: TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Másolja át az összes elemet a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> egy kompatibilis egydimenziós tömb objektum <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objektumok, a cél tömb a megadott indextől kezdődő."
  remarks: "A CopyTo metódus használatával a tartalom másolása a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>az objektum `bindingArray`.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Másolja a program kezdődő `index`. A gyűjteményben lévő elemek eléréséhez használhatja a tömb.       Alternatív megoldásként használhatja a <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>létrehozása a számbavevő a gyűjtemény elemeinek elérésére használt módszer.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection to an array.  \n  \n [!code-cs[TreeNodeBindingCollectionCopyTo#1](~/add/codesnippet/csharp/57693c79-624a-4a4d-979f-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/57693c79-624a-4a4d-979f-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index);
    parameters:
    - id: bindingArray
      type: System.Web.UI.WebControls.TreeNodeBinding[]
      description: "A nulla alapú tömbje <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> , amely megkapja a másolt elemeket az objektumok a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "A pozíció `bindingArray` indításának a másolt tartalom fogadására."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: TreeNodeBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Object
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: TreeNodeBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  id: IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: IndexOf(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Meghatározza, hogy a megadott indexét <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objektum a gyűjteményben."
  remarks: "A megadott nulla alapú indexét határozza meg a IndexOf módszerrel <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objektum.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> Ha a csomópont nem található a gyűjteményben, a módszer&1; értéket ad vissza.      > [!NOTE] > Ha a megadott <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum többször szerepel a gyűjteményben, a első előfordulása indexét adja vissza.</xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> kereséséhez."
    return:
      type: System.Int32
      description: "A első előfordulása nulla alapú indexét <code> binding </code> belül a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>, ha található, ha sikertelen, -1."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  id: Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Insert(Int32,TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A meghatározott beszúr <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> az objektum a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objektum a megadott helyen."
  remarks: "Az Insert metódus használata lehet beszúrni a megadott <xref:System.Web.UI.WebControls.TreeNodeBinding>az objektum a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objektum `index`.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>       Alternatív megoldásként fűzheti egy <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum végének a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>használatával a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>metódus.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Insert method to insert a new <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically into a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-vb[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/visualbasic/b258c1b7-cd55-4993-aa16-_1.aspx)]\n [!code-cs[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/csharp/b258c1b7-cd55-4993-aa16-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét helyet, ahol a beszúrandó a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>."
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> szúrható be."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objektum a megadott indexpozíciónál található a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objektum."
  remarks: "A cikk indexelő eléréséhez használja a <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objektum helyen `i` tömb jelölésével.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> A cikk indexelő lehetővé teszi a módosítására, vagy cserélje le a <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum közvetlenül a gyűjteményben.</xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Item indexer to access the items that are in a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. The <xref:System.Web.UI.WebControls.TreeNodeBinding> object for the third-level nodes is updated programmatically with new values. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1093_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1093_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "A nulla alapú indexét a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> beolvasása."
    return:
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> a megadott indexpozíciónál található a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: TreeNodeBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
    - id: value
      type: System.Object
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: TreeNodeBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  id: Remove(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Remove(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Remove(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Eltávolítja a megadott <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objektum a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objektum."
  remarks: "Használja a Remove metódust eltávolítja a megadott <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum a gyűjteményből.</xref:System.Web.UI.WebControls.TreeNodeBinding> Hajtsa végre az adott csomópont elemek majd kerülnek töltse ki az üres pozícióját. Az indexek, az áthelyezett elemek is frissülnek.       Alternatív megoldásként távolítsa el a megadott index az a csomópont a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>metódus.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> Minden csomópont távolítsa el a gyűjtemény használja a <xref:System.Web.UI.StateManagedCollection.Clear%2A>metódus.</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically from a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/csharp/d829ba87-3d4f-4bb0-a238-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/visualbasic/d829ba87-3d4f-4bb0-a238-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> eltávolítása."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Eltávolítja a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objektum a megadott helyen a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objektum."
  remarks: "RemoveAt metódus segítségével távolítsa el a <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum helyen `index` a egy <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objektum.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> Hajtsa végre az adott csomópont elemek majd kerülnek töltse ki az üres pozícióját. Az indexek, az áthelyezett elemek is frissülnek.       Alternatív megoldásként távolítsa el egy adott <xref:System.Web.UI.WebControls.TreeNodeBinding>objektum használatával a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>metódus.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> Is eltávolíthatja minden csomópont a gyűjtemény segítségével a <xref:System.Web.UI.StateManagedCollection.Clear%2A>metódus.</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically from a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-vb[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_131_1.aspx)]\n [!code-cs[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_131_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét helyét a <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> eltávolítása."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: TreeNodeBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Add(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Add(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(TreeNodeBinding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeBinding
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Contains(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Contains(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(TreeNodeBinding)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CopyTo(TreeNodeBinding[],Int32)
  nameWithType: TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
- uid: System.Web.UI.WebControls.TreeNodeBinding[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNodeBinding
    name: TreeNodeBinding
    nameWithType: TreeNodeBinding
    fullName: TreeNodeBinding[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: TreeNodeBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: TreeNodeBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: IndexOf(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Insert(Int32,TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnClear()
  nameWithType: TreeNodeBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear()
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: TreeNodeBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Remove(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Remove(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: TreeNodeBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeBindingCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeBindingCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeBindingCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: TreeNodeBindingCollection.CreateKnownType
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: TreeNodeBindingCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeBindingCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Insert
  nameWithType: TreeNodeBindingCollection.Insert
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeBindingCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnClear
  nameWithType: TreeNodeBindingCollection.OnClear
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnValidate
  nameWithType: TreeNodeBindingCollection.OnValidate
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeBindingCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeBindingCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: TreeNodeBindingCollection.SetDirtyObject
