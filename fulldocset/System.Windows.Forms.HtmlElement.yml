### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.HtmlElement
  id: HtmlElement
  children:
  - System.Windows.Forms.HtmlElement.All
  - System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)
  - System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)
  - System.Windows.Forms.HtmlElement.CanHaveChildren
  - System.Windows.Forms.HtmlElement.Children
  - System.Windows.Forms.HtmlElement.Click
  - System.Windows.Forms.HtmlElement.ClientRectangle
  - System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)
  - System.Windows.Forms.HtmlElement.Document
  - System.Windows.Forms.HtmlElement.DomElement
  - System.Windows.Forms.HtmlElement.DoubleClick
  - System.Windows.Forms.HtmlElement.Drag
  - System.Windows.Forms.HtmlElement.DragEnd
  - System.Windows.Forms.HtmlElement.DragLeave
  - System.Windows.Forms.HtmlElement.DragOver
  - System.Windows.Forms.HtmlElement.Enabled
  - System.Windows.Forms.HtmlElement.Equals(System.Object)
  - System.Windows.Forms.HtmlElement.FirstChild
  - System.Windows.Forms.HtmlElement.Focus
  - System.Windows.Forms.HtmlElement.Focusing
  - System.Windows.Forms.HtmlElement.GetAttribute(System.String)
  - System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)
  - System.Windows.Forms.HtmlElement.GetHashCode
  - System.Windows.Forms.HtmlElement.GotFocus
  - System.Windows.Forms.HtmlElement.Id
  - System.Windows.Forms.HtmlElement.InnerHtml
  - System.Windows.Forms.HtmlElement.InnerText
  - System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)
  - System.Windows.Forms.HtmlElement.InvokeMember(System.String)
  - System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])
  - System.Windows.Forms.HtmlElement.KeyDown
  - System.Windows.Forms.HtmlElement.KeyPress
  - System.Windows.Forms.HtmlElement.KeyUp
  - System.Windows.Forms.HtmlElement.LosingFocus
  - System.Windows.Forms.HtmlElement.LostFocus
  - System.Windows.Forms.HtmlElement.MouseDown
  - System.Windows.Forms.HtmlElement.MouseEnter
  - System.Windows.Forms.HtmlElement.MouseLeave
  - System.Windows.Forms.HtmlElement.MouseMove
  - System.Windows.Forms.HtmlElement.MouseOver
  - System.Windows.Forms.HtmlElement.MouseUp
  - System.Windows.Forms.HtmlElement.Name
  - System.Windows.Forms.HtmlElement.NextSibling
  - System.Windows.Forms.HtmlElement.OffsetParent
  - System.Windows.Forms.HtmlElement.OffsetRectangle
  - System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  - System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  - System.Windows.Forms.HtmlElement.OuterHtml
  - System.Windows.Forms.HtmlElement.OuterText
  - System.Windows.Forms.HtmlElement.Parent
  - System.Windows.Forms.HtmlElement.RaiseEvent(System.String)
  - System.Windows.Forms.HtmlElement.RemoveFocus
  - System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)
  - System.Windows.Forms.HtmlElement.ScrollLeft
  - System.Windows.Forms.HtmlElement.ScrollRectangle
  - System.Windows.Forms.HtmlElement.ScrollTop
  - System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)
  - System.Windows.Forms.HtmlElement.Style
  - System.Windows.Forms.HtmlElement.TabIndex
  - System.Windows.Forms.HtmlElement.TagName
  langs:
  - csharp
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: System.Windows.Forms.HtmlElement
  type: Class
  summary: "Egy weblap HTML elemet jelképezi."
  remarks: "HtmlElement esetén például jelenti. minden lehetséges HTML-dokumentumot, az elem típusa `BODY`, `TABLE`, és `FORM`, többek között. Az osztály a kell található összes elem a leggyakrabban használt tulajdonságok közzététele.       A legtöbb elem tartozhat *gyermekelemek*: más HTML-elem van, hogy azok alá vannak elhelyezve. Használja a <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>tulajdonság annak megállapítására, hogy egy adott elem gyermekelemek, és a <xref:System.Windows.Forms.HtmlElement.Children%2A>gyűjteményt iterációt őket.</xref:System.Windows.Forms.HtmlElement.Children%2A> </xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> A <xref:System.Windows.Forms.HtmlElement.Parent%2A>tulajdonság visszaadja a HtmlElement esetén, amelyben az aktuális elem van beágyazva.</xref:System.Windows.Forms.HtmlElement.Parent%2A>       Gyakran kell attribútumok, tulajdonságai és metódusai az alapul szolgáló elem, amely nem érhetők el közvetlenül által HtmlElement esetén, mint például a hozzáférést a `SRC` attribútuma egy `IMG` elem vagy a `Submit` metódusa egy `FORM`. A <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>és <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>módszerek lehetővé teszik a beolvasása, és módosíthatja bármely attribútumot vagy egy adott elem tulajdonsága közben <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>semmilyen metódus nem lesz közzétéve a a felügyelt Document Object Model (DOM) hozzáférést biztosít.</xref:System.Windows.Forms.HtmlElement.InvokeMember%2A> </xref:System.Windows.Forms.HtmlElement.SetAttribute%2A> </xref:System.Windows.Forms.HtmlElement.GetAttribute%2A> Ha az alkalmazás nem rendelkezik felügyelt kód engedéllyel, emellett hatásnak tulajdonságai és metódusai rendelkező a <xref:System.Windows.Forms.HtmlElement.DomElement%2A>attribútum.</xref:System.Windows.Forms.HtmlElement.DomElement%2A>       Használja a <xref:System.Windows.Forms.HtmlElement.TagName%2A>tulajdonság annak megállapítására, hogy egy adott típusú elem.</xref:System.Windows.Forms.HtmlElement.TagName%2A>       A HTML-dokumentum futási időben módosítható. Létrehozhat új HtmlElement esetén objektumok a <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>metódusában <xref:System.Windows.Forms.HtmlDocument>, és egy másik elem használatával vegye fel őket a <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>vagy <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>módszerek.</xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> </xref:System.Windows.Forms.HtmlElement.AppendChild%2A> </xref:System.Windows.Forms.HtmlDocument> </xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> Is HTML-kódként elemeket létrehozni és hozzárendelni őket egy meglévő elem <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>tulajdonság.</xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>"
  example:
  - "The following code example shows how to examine an arbitrary HTML document and derive a string describing the HTML elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document. This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#1](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#1)]\n [!code-cs[System.Windows.Forms.HtmlElement#1](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#1)]"
  syntax:
    content: public sealed class HtmlElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.All
  id: All
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: All
  nameWithType: HtmlElement.All
  fullName: System.Windows.Forms.HtmlElement.All
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi egy <xref href=&quot;System.Windows.Forms.HtmlElementCollection&quot;> </xref> az összes elem az aktuális elem alatt."
  remarks: "Csak azokat az elemeket az aktuális elem a közvetlen szülővel rendelkező elérésére, a <xref:System.Windows.Forms.HtmlElement.Children%2A>gyűjtemény helyette.</xref:System.Windows.Forms.HtmlElement.Children%2A>       A gyűjtemény elemszámának nem feltétlenül visszatér a forrás-sorrendjét."
  syntax:
    content: public System.Windows.Forms.HtmlElementCollection All { get; }
    return:
      type: System.Windows.Forms.HtmlElementCollection
      description: "Az összes elemben, amely közvetlen vagy közvetett az aktuális elem gyűjteménye. Ha az aktuális elem egy `TABLE`, például az összes ad vissza minden `TH`, `TR`, és `TD` elem a táblázatban, mint például az esetleges egyéb elemek, valamint `DIV` és `SPAN` a cellák található elemeket."
  overload: System.Windows.Forms.HtmlElement.All*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)
  id: AppendChild(System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: AppendChild(HtmlElement)
  nameWithType: HtmlElement.AppendChild(HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.AppendChild(HtmlElement)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Elem hozzáadása egy másik elem részfája."
  remarks: "A HTML Document Object Model (DOM) lehetővé teszi számos módon a HTML-fájlba futásidejű tartalmának módosítására. A appendchild metódusban, új elemek hozzáadása egy meglévő dokumentum vagy az elem áthelyezése az oldalon.       Elem már van szülője, ha egy elem hozzáfűzése egy másik elem automatikusan eltávolítja az elem előző szülőjétől örökli.       Bármely bejegyzésekkel futásidőben dokumentumhoz használatával appendchild metódusban nem maradnak meg hívásakor a <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A>metódust a <xref:System.Windows.Forms.WebBrowser>vezérlő.</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A>"
  example:
  - "The following code example creates a new hyperlink using the <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A> method and adds it to end of a page using `AppendChild` on the `BODY` element. The example requires that your application contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#8](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#8)]\n [!code-cs[System.Windows.Forms.HtmlElement#8](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#8)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement AppendChild (System.Windows.Forms.HtmlElement newElement);
    parameters:
    - id: newElement
      type: System.Windows.Forms.HtmlElement
      description: "A <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> hozzáfűzendő karakterlánc ezen a helyen, a fában."
    return:
      type: System.Windows.Forms.HtmlElement
      description: "Az elem, miután felvette a fához."
  overload: System.Windows.Forms.HtmlElement.AppendChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)
  id: AttachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: AttachEventHandler(String,EventHandler)
  nameWithType: HtmlElement.AttachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlElement.AttachEventHandler(String,EventHandler)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hozzáadása egy elnevezett esemény eseménykezelő a HTML-Document Object Model (DOM) a."
  remarks: "A felügyelt Document Object Model (DOM) események csak a select számát mutatja. A legtöbb hatásnak események csak meghatározott bizonyos típusú elemek; például a `submit` esemény, amely csak érvényes `FORM` elemek. Ezen AttachEventHandler eseménykezelő hozzá hatásnak eseményekből.       Meg kell csatolni esemény a dokumentum vagy az objektum csak a dokumentum betöltése befejezése után. A legkorábbi meg kell hívnia Ez a módszer van a <xref:System.Windows.Forms.WebBrowser.DocumentCompleted>az esemény a <xref:System.Windows.Forms.WebBrowser>vezérlő.</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.DocumentCompleted>       Nem felügyelt elérhető eseményekkel kapcsolatos további információkért lásd: [hatásnak tagot fér hozzá a felügyelt HTML-dokumentum Object Model](~/add/includes/ajax-current-ext-md.md) és a IHTMLElement felületek: [IHTMLElement](http://go.microsoft.com/fwlink/?LinkId=104876), [IHTMLElement2](http://go.microsoft.com/fwlink/?LinkId=104877), [IHTMLElement3](http://go.microsoft.com/fwlink/?LinkId=104878), [IHTMLElement4](http://go.microsoft.com/fwlink/?LinkId=104879)."
  syntax:
    content: public void AttachEventHandler (string eventName, EventHandler eventHandler);
    parameters:
    - id: eventName
      type: System.String
      description: "Az esemény neve szeretné kezelni."
    - id: eventHandler
      type: System.EventHandler
      description: "A felügyelt kód, amely kezeli a eseményét."
  overload: System.Windows.Forms.HtmlElement.AttachEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.CanHaveChildren
  id: CanHaveChildren
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: CanHaveChildren
  nameWithType: HtmlElement.CanHaveChildren
  fullName: System.Windows.Forms.HtmlElement.CanHaveChildren
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi egy érték, amely jelzi, hogy ez az elem lehet-e gyermekelemek."
  remarks: "Bizonyos elemek, például a `IMG` és `SCRIPT`, nem lehet gyermeke. Használja ezt a tulajdonságot, mielőtt meghívja a <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>vagy <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>tetszőleges elemen.</xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> </xref:System.Windows.Forms.HtmlElement.AppendChild%2A>"
  example:
  - "The following code example handles the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>. If an element was not previous selected using a mouse click, the code assigns the element to a private class variable named `MoveElement`. If an element was selected, the code attempts to append it to the element that was just clicked. This code example requires that your application hosts a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have already added an event handler for the <xref:System.Windows.Forms.HtmlElement.Click> event on <xref:System.Windows.Forms.HtmlDocument>.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#2](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#2)]\n [!code-cs[System.Windows.Forms.HtmlElement#2](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#2)]"
  syntax:
    content: public bool CanHaveChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha elemnek lehet gyermekelemek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.HtmlElement.CanHaveChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Children
  id: Children
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Children
  nameWithType: HtmlElement.Children
  fullName: System.Windows.Forms.HtmlElement.Children
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi egy <xref href=&quot;System.Windows.Forms.HtmlElementCollection&quot;> </xref> az aktuális elem minden gyermekek."
  remarks: "Az elemek HTML-fájlba belül számos más alattuk HTML-elem lehet. A gyermek gyűjtemény felfedezése a faszerkezet dokumentum egy egyszerű mechanizmust biztosít.       Gyermekek csak elemet, amelynek közvetlen szülője az aktuális elem közzététele. Ha rendelkezik egy <xref:System.Windows.Forms.HtmlElement>a egy `TABLE` elem gyermekei Erre azért van szükség minden a `TR` (sor) elemeinek belül a `TABLE`.</xref:System.Windows.Forms.HtmlElement> Beolvasni a `TD` (cella) elemeiben található a `TR` elemek, szüksége lesz a minden egyes személy vagy a gyermekek gyűjtemény használatára `TR` elem, vagy a <xref:System.Windows.Forms.HtmlElement.All%2A>gyűjtemény <xref:System.Windows.Forms.HtmlElement>.</xref:System.Windows.Forms.HtmlElement> </xref:System.Windows.Forms.HtmlElement.All%2A> használata       A gyűjtemény elemszámának nem garantált, hogy a forrás sorrendje.       Ha <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>van `false`, `Children` mindig üres lesz.</xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>"
  example:
  - "The following code example examines an arbitrary HTML document and derive a string describing the elements, with indentation and level numbers used to indicate how deeply nested the elements are in the document. It does this by searching the `Children` collection of all elements recursively, starting with the HTML element at the top of the document. This code example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#1](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#1)]\n [!code-cs[System.Windows.Forms.HtmlElement#1](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#1)]"
  syntax:
    content: public System.Windows.Forms.HtmlElementCollection Children { get; }
    return:
      type: System.Windows.Forms.HtmlElementCollection
      description: "Összes <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> az aktuális elem egy szülővel rendelkező objektumok kapcsán."
  overload: System.Windows.Forms.HtmlElement.Children*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Click
  id: Click
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Click
  nameWithType: HtmlElement.Click
  fullName: System.Windows.Forms.HtmlElement.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó kattint a bal oldali egérgombbal elemen."
  remarks: "Az alapértelmezett művelet elemen kattintson esemény megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       Egy elem egy kattintson esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       Ha a felhasználó nem jelenleg rendelkezik beviteli fókuszba elemen, a Click esemény után történik a <xref:System.Windows.Forms.HtmlElement.Focusing>esemény, de előtte a <xref:System.Windows.Forms.HtmlElement.LostFocus>esemény adott elemhez.</xref:System.Windows.Forms.HtmlElement.LostFocus> </xref:System.Windows.Forms.HtmlElement.Focusing>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Click event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the Click event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#432](~/add/codesnippet/csharp/e-system.windows.forms.h_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#432](~/add/codesnippet/visualbasic/e-system.windows.forms.h_5_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Click;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ClientRectangle
  id: ClientRectangle
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ClientRectangle
  nameWithType: HtmlElement.ClientRectangle
  fullName: System.Windows.Forms.HtmlElement.ClientRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Az elem ügyfélterületének határán lekérdezi a HTML-dokumentumban."
  remarks: "ClientRectangle pozíció adatok csak az elemek egy explicit magassága és szélessége által hozzárendelt, vagy olyan elemeket, használja a abszolút elhelyezés adja vissza. A dokumentum elengedhetetlen el, ha a pozíció stílusa `absolute`, amely akkor is elhelyezhetők bármely koordinátákkal rendelkeznek a HTML-weblap után."
  example:
  - "Assume you have loaded the following HTML page into a hosted instance of the <xref:System.Windows.Forms.WebBrowser> control.  \n  \n```  \n<HTML>  \n  \n    <BODY>  \n  \n        <DIV id=\"div1\" style=\"position:absolute;top:100px;left:100px;border-      style:solid;border-width:1px;\">  \n            Edit this text.  \n        </DIV>  \n  \n    </BODY>  \n  \n</HTML>  \n```  \n  \n The following code example demonstrates retrieving this element and expanding its dimensions if the client area is less than 400 pixels wide by 50 pixels high, and also sets the `DIV` to the `contentEditable` state so that the user can input text.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#3](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#3)]\n [!code-cs[System.Windows.Forms.HtmlElement#3](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#3)]"
  syntax:
    content: public System.Drawing.Rectangle ClientRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Az elem, csökkentve szegélyek és görgetősávok bármely területe által elfoglalt ügyfélterületen. A pozíció és az elem, beleértve a kiegészítéseket méretei beszerzéséhez használja <xref:System.Windows.Forms.HtmlElement.OffsetRectangle*>helyette.</xref:System.Windows.Forms.HtmlElement.OffsetRectangle*>"
  overload: System.Windows.Forms.HtmlElement.ClientRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)
  id: DetachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DetachEventHandler(String,EventHandler)
  nameWithType: HtmlElement.DetachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlElement.DetachEventHandler(String,EventHandler)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Eseménykezelő eltávolítja a a HTML-Document Object Model (DOM) az elnevezett eseményeket."
  syntax:
    content: public void DetachEventHandler (string eventName, EventHandler eventHandler);
    parameters:
    - id: eventName
      type: System.String
      description: "Az esemény neve szeretné kezelni."
    - id: eventHandler
      type: System.EventHandler
      description: "A felügyelt kód, amely kezeli a eseményét."
  overload: System.Windows.Forms.HtmlElement.DetachEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Document
  id: Document
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Document
  nameWithType: HtmlElement.Document
  fullName: System.Windows.Forms.HtmlElement.Document
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a <xref href=&quot;System.Windows.Forms.HtmlDocument&quot;> </xref> , amelyhez tartozik ehhez az elemhez."
  remarks: "Néhány HTML-lapok üzemeltethet kereteket használ a `FRAMESET` címkék. Ebben az esetben minden egyes `FRAME` elem <xref:System.Windows.Forms.HtmlDocument>.</xref:System.Windows.Forms.HtmlDocument> saját példányát fogja tartalmazni. E tulajdonság megadása a leghasznosabb, ha egy elem egy hivatkozást az eseménykezelő kapta a <xref:System.Windows.Forms.HtmlElementEventArgs>, és a dokumentumot, ahol az elem van néhány művelet elvégzésére.</xref:System.Windows.Forms.HtmlElementEventArgs>"
  syntax:
    content: public System.Windows.Forms.HtmlDocument Document { get; }
    return:
      type: System.Windows.Forms.HtmlDocument
      description: "A szülő dokumentum ezt az összetevőt."
  overload: System.Windows.Forms.HtmlElement.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DomElement
  id: DomElement
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DomElement
  nameWithType: HtmlElement.DomElement
  fullName: System.Windows.Forms.HtmlElement.DomElement
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi egy nem felügyelt illesztőfelület-mutató ehhez az elemhez."
  remarks: "<xref:System.Windows.Forms.HtmlElement>van egy burkoló a az Internet Explorer Document Object Model (DOM), amely íródott a Component Object Model (COM).</xref:System.Windows.Forms.HtmlElement> Ha el szeretné érni a hatásnak tulajdonságok vagy az alapul szolgáló COM-felület metódusok, mint `IHTMLElement`, azokat is használhatja ezt az objektumot a lekérdezés.       Ahhoz, hogy a nem felügyelt felületek, szüksége lesz a MSHTML könyvtárban (mshtml.dll) importálnia kell az alkalmazást. Azonban is végrehajthat hatásnak tulajdonságok és metódusok használata a `Invoke` metódust."
  example:
  - "The following code example uses unmanaged interfaces to take the currently selected text and convert it into a hyperlink, with the URL chosen by the user. This code was written under the assumption that your form has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`, and that you have added the unmanaged MSHTML library as a reference to your project.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#4](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#4)]\n [!code-cs[System.Windows.Forms.HtmlElement#4](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#4)]"
  syntax:
    content: public object DomElement { get; }
    return:
      type: System.Object
      description: "A COM `IUnknown` elemhez, és a HTML-elem egyik is típusúvá mutató felületek, például a `IHTMLElement`."
  overload: System.Windows.Forms.HtmlElement.DomElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DoubleClick
  id: DoubleClick
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DoubleClick
  nameWithType: HtmlElement.DoubleClick
  fullName: System.Windows.Forms.HtmlElement.DoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó kattint a bal oldali egérgombbal egy elem felett kétszer, gyors egymásutánban."
  remarks: "A dupla operációs rendszer a felhasználó az egér beállításai határozzák meg. A felhasználó beállíthatja a két kattintás helyett az egér valamelyik gombját, érdemes figyelembe venni a dupla kattintással közötti idő.       Az alapértelmezett művelet elemen DoubleClick esemény megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       Egy elem egy DoubleClick esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the DoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#433](~/add/codesnippet/csharp/e-system.windows.forms.h_26_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#433](~/add/codesnippet/visualbasic/e-system.windows.forms.h_26_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler DoubleClick;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Drag
  id: Drag
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Drag
  nameWithType: HtmlElement.Drag
  fullName: System.Windows.Forms.HtmlElement.Drag
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Történő húzásakor következik be a felhasználó szöveget különböző helyekre."
  remarks: "Ezt az eseményt akkor fordul elő, amikor szöveg húzza a következő helyeken: - belül vagy között tárolt HTML-lapok a <xref:System.Windows.Forms.WebBrowser>vezérlő vagy az Internet Explorer - egy másik alkalmazás – a Windows asztal úgy, hogy az alapértelmezett művelet egy elem húzásának esemény megszakíthatja a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A> </xref:System.Windows.Forms.WebBrowser>       Egy egy elem húzásának esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Drag event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the Drag event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#434](~/add/codesnippet/csharp/e-system.windows.forms.h_11_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#434](~/add/codesnippet/visualbasic/e-system.windows.forms.h_11_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Drag;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DragEnd
  id: DragEnd
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DragEnd
  nameWithType: HtmlElement.DragEnd
  fullName: System.Windows.Forms.HtmlElement.DragEnd
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A csomóponthúzási művelet befejezésekor következik be."
  remarks: "Az alapértelmezett művelet elemen DragEnd esemény megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       Egy elem egy DragEnd esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DragEnd event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the DragEnd event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#435](~/add/codesnippet/csharp/e-system.windows.forms.h_35_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#435](~/add/codesnippet/visualbasic/e-system.windows.forms.h_35_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler DragEnd;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DragLeave
  id: DragLeave
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DragLeave
  nameWithType: HtmlElement.DragLeave
  fullName: System.Windows.Forms.HtmlElement.DragLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó van az ezen elem felett egy elem húzásának már nem."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DragLeave event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the DragLeave event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#436](~/add/codesnippet/csharp/e-system.windows.forms.h_21_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#436](~/add/codesnippet/visualbasic/e-system.windows.forms.h_21_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler DragLeave;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.DragOver
  id: DragOver
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: DragOver
  nameWithType: HtmlElement.DragOver
  fullName: System.Windows.Forms.HtmlElement.DragOver
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Történő húzásakor következik be a felhasználó szöveget a elem felett."
  remarks: "Az alapértelmezett művelet elemen DragOver esemény megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       Egy elem egy DragOver esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DragOver event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the DragOver event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#437](~/add/codesnippet/csharp/e-system.windows.forms.h_31_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#437](~/add/codesnippet/visualbasic/e-system.windows.forms.h_31_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler DragOver;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Enabled
  id: Enabled
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Enabled
  nameWithType: HtmlElement.Enabled
  fullName: System.Windows.Forms.HtmlElement.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja, hogy a felhasználói adatok bemeneteként a ehhez az elemhez."
  remarks: "A `FORM` elemek, mint például a beviteli mezők és választógombok beállítást engedélyezve `false` megakadályozza, hogy a felhasználó a képernyő-mezők használatával. Egyéb elemek például a `DIV` vagy `SPAN`, engedélyezve beállítás `false` hatására az összes szöveg jelenik meg az egyes elemek árnyékolt elemen belül; azonban a szöveg továbbra is lesznek választhatók. Szakítsa meg a kijelölést, vegye fel a hatásnak eseménykezelő `onselectstart` esemény használatával a <xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A>metódus.</xref:System.Windows.Forms.HtmlElement.AttachEventHandler%2A>"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az elem lehetővé teszi, hogy a felhasználói bevitel; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.HtmlElement.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: HtmlElement.Equals(Object)
  fullName: System.Windows.Forms.HtmlElement.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ha a megadott objektum megegyezik a jelenlegi elem teszteket."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Az objektum tesztelése az egyezés keresésekor."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>obj</code> is an <xref href=&quot;System.Windows.Forms.HtmlElement&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.HtmlElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.FirstChild
  id: FirstChild
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: FirstChild
  nameWithType: HtmlElement.FirstChild
  fullName: System.Windows.Forms.HtmlElement.FirstChild
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A dokumentumok fastruktúrája alatt ez az elem a következő elem beolvasása."
  remarks: "FirstChild együtt használhatja <xref:System.Windows.Forms.HtmlElement.NextSibling%2A>végigvezetheti a dokumentumok fastruktúrája a HTML-dokumentumot.</xref:System.Windows.Forms.HtmlElement.NextSibling%2A>"
  syntax:
    content: public System.Windows.Forms.HtmlElement FirstChild { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "Egy <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> képviselő az első elem a forrás-sorrendjét, a jelenlegi elem alatt található."
  overload: System.Windows.Forms.HtmlElement.FirstChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Focus
  id: Focus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Focus()
  nameWithType: HtmlElement.Focus()
  fullName: System.Windows.Forms.HtmlElement.Focus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Felhasználói bevitel fókuszának menti az elemben."
  remarks: "A fókusz beállítása elemen is biztosít, amelyek elem arra utalnak, és lehetővé teszi az aktív elem; a fókusszal rendelkező elem a <xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> <xref:System.Windows.Forms.HtmlDocument>.</xref:System.Windows.Forms.HtmlDocument> tulajdonsága</xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A> által visszaadott például       Bármely billentyűparancsra fókusz meghívása után a felhasználó adja meg, hogy kapnak."
  syntax:
    content: public void Focus ();
    parameters: []
  overload: System.Windows.Forms.HtmlElement.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Focusing
  id: Focusing
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Focusing
  nameWithType: HtmlElement.Focusing
  fullName: System.Windows.Forms.HtmlElement.Focusing
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor az elem első felhasználó beviteli fókuszba."
  remarks: "Egy elem, akinek a fókusz, mielőtt a felhasználó, a tálcán vagy a ALT + TAB billentyűkombinációval egy másik alkalmazás át lett váltva a Focusing kap és <xref:System.Windows.Forms.HtmlElement.GotFocus>események újra amikor a felhasználó vált, az alkalmazás.</xref:System.Windows.Forms.HtmlElement.GotFocus>       Ez az esemény alapértelmezett működése nem szakítható meg. Fókusz eltávolítása egy elem, hívja meg a <xref:System.Windows.Forms.HtmlElement.Focus%2A>belül egy másik elem a <xref:System.Windows.Forms.HtmlElement.GotFocus>esemény.</xref:System.Windows.Forms.HtmlElement.GotFocus> </xref:System.Windows.Forms.HtmlElement.Focus%2A>       Egy elem egy Focusing esemény is előfordul, az adott elemhez szülők és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Focusing event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the Focusing event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#438](~/add/codesnippet/csharp/e-system.windows.forms.h_10_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#438](~/add/codesnippet/visualbasic/e-system.windows.forms.h_10_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler Focusing;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: HtmlElement.GetAttribute(String)
  fullName: System.Windows.Forms.HtmlElement.GetAttribute(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Az elem nevű attribútum értékét kérdezi le."
  remarks: "Egy attribútum a HTML-formátumban bármilyen érvényes név-érték pár adott elemhez. <xref:System.Windows.Forms.HtmlElement>csak a vonatkozó összes elem csak bizonyos típusú elemek; vonatkozó kihagyva attribútumok közzététele `SRC` az előre megadott attribútum a `IMG` címke, például, de nem a `DIV` címke.</xref:System.Windows.Forms.HtmlElement> Használja a GetAttribute és <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>segítségével kezelheti a meg nem jelenített meg a felügyelt Document Object Model (DOM) attribútumok.</xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>       GetAttribute és <xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>-és nagybetűk.</xref:System.Windows.Forms.HtmlElement.SetAttribute%2A>"
  example:
  - "The following code example retrieves all of the `META` tags within an HTML document, using GetAttribute to find the `META` tag with the name `Description`. The example requires that your application has a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlDocument#6](~/add/codesnippet/visualbasic/HtmlDocumentProject/Form1.vb#6)]\n [!code-cs[System.Windows.Forms.HtmlDocument#6](~/add/codesnippet/csharp/HtmlDocumentProjectCSharp/Form1.cs#6)]"
  syntax:
    content: public string GetAttribute (string attributeName);
    parameters:
    - id: attributeName
      type: System.String
      description: "Az attribútum neve. Az argumentum értéke azonban nem."
    return:
      type: System.String
      description: "Ez az attribútum, elem értéke, egy <xref:System.String>érték.</xref:System.String> Ha a megadott attribútum nem létezik ezzel az elemmel, egy üres karakterláncot ad vissza."
  overload: System.Windows.Forms.HtmlElement.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)
  id: GetElementsByTagName(System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: GetElementsByTagName(String)
  nameWithType: HtmlElement.GetElementsByTagName(String)
  fullName: System.Windows.Forms.HtmlElement.GetElementsByTagName(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekéri az elemgyűjtemény eredményelemei HTML-formátumban a megadott `HTML` címke."
  syntax:
    content: public System.Windows.Forms.HtmlElementCollection GetElementsByTagName (string tagName);
    parameters:
    - id: tagName
      type: System.String
      description: "A címke nevét amelynek <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> lekérdezni kívánt objektumokat."
    return:
      type: System.Windows.Forms.HtmlElementCollection
      description: "Egy <xref href=&quot;System.Windows.Forms.HtmlElementCollection&quot;> </xref> összes elemeket tartalmazó amelynek `HTML` címke neve megegyezik <code> tagName </code>."
  overload: System.Windows.Forms.HtmlElement.GetElementsByTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: HtmlElement.GetHashCode()
  fullName: System.Windows.Forms.HtmlElement.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Egy adott típusának a kivonatoló függvényt funkcionál."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Az aktuális <xref:System.Object>.</xref:System.Object> kivonatoló kódot"
  overload: System.Windows.Forms.HtmlElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.GotFocus
  id: GotFocus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: GotFocus
  nameWithType: HtmlElement.GotFocus
  fullName: System.Windows.Forms.HtmlElement.GotFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, az elem felhasználói bevitel fókuszának fogadásakor."
  remarks: "Is sem szakítsa meg az esemény alapértelmezett viselkedését, sem propagálása felfelé megakadályozása. Fókusz eltávolítása egy elem, hívja meg a <xref:System.Windows.Forms.HtmlElement.Focus%2A>a GotFocus esemény belül a különböző elemnél.</xref:System.Windows.Forms.HtmlElement.Focus%2A>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "Save the following HTML code into a file, and load the file into a <xref:System.Windows.Forms.WebBrowser> control in a Windows Forms project.  \n  \n```  \n<HTML>  \n    <BODY>  \n        <FORM name=\"form1\">  \n            <INPUT type=\"text\" size=20 name=\"text1\">  \n            <INPUT type=\"text\" size=20 name=\"text2\">  \n            <INPUT type=\"text\" size=20 name=\"text3\">  \n        </FORM>  \n    </BODY>  \n</HTML>  \n```  \n  \n The following code example prevents the next `INPUT` element in the tab order from receiving user input focus if the previous element contains less than five characters. The example requires that the previously mentioned HTML file is loaded into an instance of the <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#15](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#15)]\n [!code-cs[System.Windows.Forms.HtmlElement#15](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#15)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler GotFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Id
  id: Id
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Id
  nameWithType: HtmlElement.Id
  fullName: System.Windows.Forms.HtmlElement.Id
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja az elem szolgáló címkék."
  remarks: "Azonosító egyedi; kell lennie. nem lehet két olyan elemet ugyanezzel az azonosítóval egyazon dokumentumban belül. Használja a <xref:System.Windows.Forms.HtmlElement.Name%2A>tulajdonság ahhoz, hogy megkapja a ugyanezzel az azonosítóval logikailag egymáshoz kapcsolódó elemek csoportja számára.</xref:System.Windows.Forms.HtmlElement.Name%2A>"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "Az elem egyedi azonosítója."
  overload: System.Windows.Forms.HtmlElement.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InnerHtml
  id: InnerHtml
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InnerHtml
  nameWithType: HtmlElement.InnerHtml
  fullName: System.Windows.Forms.HtmlElement.InnerHtml
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja a HTML-kódot, ez az elem alatt."
  remarks: "Számos módon új elemek hozzáadása létező HTML-lapot, mint például a <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>és <xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A>módszerek.</xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A> </xref:System.Windows.Forms.HtmlElement.AppendChild%2A> InnerHtml használata gyakran a leggyorsabban új tartalmat hozzáadni, ha sok attribútumok vagy stílusok meg az új elemek.       InnerHtml eltér az <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>hívásakor abban, hogy az innerHTML tulajdonságot nem fog tartalmazni, amely az objektumot határozza meg a HTML-KÓDBAN.</xref:System.Windows.Forms.HtmlElement.OuterHtml%2A> Lásd: <xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>További információt a különbség a két tulajdonság.</xref:System.Windows.Forms.HtmlElement.OuterHtml%2A>       Az elem korábban fűzött gyermekek InnerHtml beállítás megsemmisít. Ha egy elem lekérése a DOM, és hozzárendelheti a szülők InnerHtml tulajdonságot új HTML, hogy a hivatkozás használhatatlan lesz, és a működés, ha meghívja a tulajdonságok és metódusok nincs definiálva.       Bizonyos elemek InnerHtml beállítás nem érvényes művelet. Néhány HTML-címkék rendelkezik nincs záró címkéje, például a `IMG` címkét, és ezért nem tartalmazhatnak beágyazott elemekre. Néhány címkéket, mint például a `SCRIPT` címkét, csak tartalmazhat a szöveges tartalom; InnerHtml beállítása hibát eredményez. Mindkét típusú címkék a <xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A>tulajdonság visszaadható `false`.</xref:System.Windows.Forms.HtmlElement.CanHaveChildren%2A> Azonban még nem állíthatja be InnerHtml `TABLE` és `TR` elemeket nem megfelelően formázott HTML hozzárendelése ezeket az elemeket, megsérülhet a dokumentum a megjelenítést. Használjon <xref:System.Windows.Forms.HtmlElement.AppendChild%2A>vagy a `insertRow` és `insertCell` a nem felügyelt metódusai `IHTMLTable` felület adja hozzá a sort, és a cellákra egy `TABLE`.</xref:System.Windows.Forms.HtmlElement.AppendChild%2A>       Ha csak a szöveg hozzárendelése egy elem és a nem a HTML-kódot kell, akkor a <xref:System.Windows.Forms.HtmlElement.InnerText%2A>tulajdonság helyette.</xref:System.Windows.Forms.HtmlElement.InnerText%2A>       Érték hozzárendelése InnerHtml megsemmisíti a szöveges értékek a korábban hozzárendelt használatával <xref:System.Windows.Forms.HtmlElement.InnerText%2A>.</xref:System.Windows.Forms.HtmlElement.InnerText%2A>"
  syntax:
    content: public string InnerHtml { get; set; }
    return:
      type: System.String
      description: "A HTML-kódot, amely meghatározza az aktuális elem a gyermekelemek."
  overload: System.Windows.Forms.HtmlElement.InnerHtml*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezzel az elemmel elemek gyermek létrehozása nem engedélyezett."
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InnerText
  id: InnerText
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InnerText
  nameWithType: HtmlElement.InnerText
  fullName: System.Windows.Forms.HtmlElement.InnerText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja az elem hozzárendelt szöveget."
  remarks: "HTML hozzárendelése InnerText rendelkező elemet kísérli meg, ha a HTML-kódja a dokumentum konstans karakterként jelenik meg ugyanúgy, mintha megtekintett HTML szövegfájlba belül. Ha egy elem használatával HTML rendel a <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>tulajdonság, InnerText ad vissza a teljes szöveg abban, hogy a kód HTML eltávolítani.</xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>       Érték hozzárendelése InnerText semmisítse meg a gyermekelemek elemhez tartozó."
  example:
  - "The following code creates a new hyperlink using <xref:System.Windows.Forms.HtmlDocument.CreateElement%2A>, and assigns text to the link using the InnerText property.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#8](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#8)]\n [!code-cs[System.Windows.Forms.HtmlElement#8](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#8)]"
  syntax:
    content: public string InnerText { get; set; }
    return:
      type: System.String
      description: "Az elem szöveget, hiányzik a HTML-kódot. Ha az elem gyermekelemet tartalmaz, a gyermek elemek csak a szöveg megmarad."
  overload: System.Windows.Forms.HtmlElement.InnerText*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A megadott elem nem tartalmazhat szöveget (például egy `IMG` elem)."
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)
  id: InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  nameWithType: HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Új elem beszúrása a Document Object Model (DOM)."
  remarks: "Ne hívja meg ezt a módszert csak után a <xref:System.Windows.Forms.WebBrowser.DocumentCompleted>azonosítójú esemény a <xref:System.Windows.Forms.WebBrowser>vezérlő történt.</xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.WebBrowser.DocumentCompleted> A metódus hívása előtt ezután azt eredményezheti, hogy kivételt, mivel a dokumentum nem rendelkezik végzett betöltése.       E érték <xref:System.Windows.Forms.HtmlElementInsertionOrientation>érvényes függvényében adható meg az elem típusa.</xref:System.Windows.Forms.HtmlElementInsertionOrientation> Például <xref:System.Windows.Forms.HtmlElementInsertionOrientation>érvényes, ha az elem egy `DIV`, kivéve, ha van egy `SCRIPT` vagy `IMG` elem egyike sem tartalmazhat gyermekelemet.</xref:System.Windows.Forms.HtmlElementInsertionOrientation>"
  example:
  - "The following code example inserts a `DIV` element into the top of every page that users view outside of the ADatum.com server. The example requires that your form contains a <xref:System.Windows.Forms.WebBrowser> control named `WebBrowser1`. Your sample must also import the namespace <xref:System.Text.RegularExpressions>.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#9](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#9)]\n [!code-cs[System.Windows.Forms.HtmlElement#9](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#9)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement InsertAdjacentElement (System.Windows.Forms.HtmlElementInsertionOrientation orient, System.Windows.Forms.HtmlElement newElement);
    parameters:
    - id: orient
      type: System.Windows.Forms.HtmlElementInsertionOrientation
      description: "Ez az elem található az aktuális elem képest beillesztendő helyét."
    - id: newElement
      type: System.Windows.Forms.HtmlElement
      description: "Az új elem beszúrására."
    return:
      type: System.Windows.Forms.HtmlElement
      description: "A <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> csak helyeztek. Ha sikertelen volt a Beszúrás, ezzel visszatér <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.HtmlElement.InsertAdjacentElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String)
  id: InvokeMember(System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InvokeMember(String)
  nameWithType: HtmlElement.InvokeMember(String)
  fullName: System.Windows.Forms.HtmlElement.InvokeMember(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Egy hatásnak metódus végrehajtása a az alapul szolgáló DOM-elemnek ezt az összetevőt."
  remarks: "Ez a módszer segítségével hívható meg metódus a a Document Object Model (DOM), amelynek nincs megfelelője a felügyelt kódban. Az InvokeMember ezen verziója segítségével hajtható végre hatásnak metódusoknak, amelyek argumentum nélkül. Egy vonatkozó példáért lásd: <xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>.</xref:System.Windows.Forms.HtmlElement.InvokeMember%2A>"
  syntax:
    content: public object InvokeMember (string methodName);
    parameters:
    - id: methodName
      type: System.String
      description: "A következő tulajdonság vagy a meghívni kívánt metódus nevét."
    return:
      type: System.Object
      description: "Ez a metódus által visszaadott elem jelenik meg egy <xref:System.Object>.</xref:System.Object> Ha a <xref:System.Object>egy másik HTML-elem és hivatkozás szerepel a nem felügyelt MSHTML könyvtárhoz hozzáadni a projekthez, akkor is típusúvá azt a megfelelő nem felügyelt felületről.</xref:System.Object>"
  overload: System.Windows.Forms.HtmlElement.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])
  id: InvokeMember(System.String,System.Object[])
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: InvokeMember(String,Object[])
  nameWithType: HtmlElement.InvokeMember(String,Object[])
  fullName: System.Windows.Forms.HtmlElement.InvokeMember(String,Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A jelenlegi HTML-weblap parancsnyelv által definiált függvény végrehajtása."
  remarks: "Ez a módszer segítségével hívható meg metódus a a Document Object Model (DOM), amelynek nincs megfelelője a felügyelt kódban. Az InvokeMember metódus számára megadott minden argumentum konvertálja Win32 `VARIANT` adattípusok, mielőtt elnevezett scripting funkciójának feleltek meg."
  example:
  - "The following code example gets a `TABLE` called `dataTable` and uses the unexposed `moveRow` method to move a row from the end of the table to the beginning.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#11](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#11)]\n [!code-cs[System.Windows.Forms.HtmlElement#11](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#11)]"
  syntax:
    content: public object InvokeMember (string methodName, object[] parameter);
    parameters:
    - id: methodName
      type: System.String
      description: "A következő tulajdonság vagy a meghívni kívánt metódus nevét."
    - id: parameter
      type: System.Object[]
      description: "Paraméterek listáját."
    return:
      type: System.Object
      description: "Az elem, a függvény által visszaadott <xref:System.Object>.</xref:System.Object> ábrázolva. Ha a <xref:System.Object>egy másik HTML-elem és hivatkozás szerepel a nem felügyelt MSHTML könyvtárhoz hozzáadni a projekthez, akkor is típusúvá azt a megfelelő nem felügyelt felületről.</xref:System.Object>"
  overload: System.Windows.Forms.HtmlElement.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.KeyDown
  id: KeyDown
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: KeyDown
  nameWithType: HtmlElement.KeyDown
  fullName: System.Windows.Forms.HtmlElement.KeyDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó megnyomja egy kulcsot a billentyűzet."
  remarks: "KeyDown akkor fordul elő, <xref:System.Windows.Forms.HtmlElement.KeyPress>ami bekapcsolása <xref:System.Windows.Forms.HtmlElement.KeyUp>.</xref:System.Windows.Forms.HtmlElement.KeyUp> előtt következik be,</xref:System.Windows.Forms.HtmlElement.KeyPress> mielőtt       Az alapértelmezett művelet a KeyDown esemény elemen megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       A KeyDown esemény elemen is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the KeyDown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the KeyDown event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#442](~/add/codesnippet/csharp/e-system.windows.forms.h_1_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#442](~/add/codesnippet/visualbasic/e-system.windows.forms.h_1_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler KeyDown;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.KeyPress
  id: KeyPress
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: KeyPress
  nameWithType: HtmlElement.KeyPress
  fullName: System.Windows.Forms.HtmlElement.KeyPress
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó lenyom, majd felenged egy billentyűt a billentyűzeten."
  remarks: "Billentyű megnyomása után <xref:System.Windows.Forms.HtmlElement.KeyDown>és <xref:System.Windows.Forms.HtmlElement.KeyUp>.</xref:System.Windows.Forms.HtmlElement.KeyUp> előtt</xref:System.Windows.Forms.HtmlElement.KeyDown> következik be       Az alapértelmezett művelet elemen billentyű megnyomása esemény megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       Egy elem egy billentyű megnyomása esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the KeyPress event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the KeyPress event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#443](~/add/codesnippet/csharp/e-system.windows.forms.h_16_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#443](~/add/codesnippet/visualbasic/e-system.windows.forms.h_16_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler KeyPress;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.KeyUp
  id: KeyUp
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: KeyUp
  nameWithType: HtmlElement.KeyUp
  fullName: System.Windows.Forms.HtmlElement.KeyUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó felenged egy billentyűt a billentyűzeten."
  remarks: "KeyUp következik be <xref:System.Windows.Forms.HtmlElement.KeyPress>, amely <xref:System.Windows.Forms.HtmlElement.KeyDown>.</xref:System.Windows.Forms.HtmlElement.KeyDown> után kerül sor</xref:System.Windows.Forms.HtmlElement.KeyPress> után       Ez az esemény nem szakítható meg.       Egy elem egy KeyUp esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the KeyUp event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the KeyUp event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#444](~/add/codesnippet/csharp/e-system.windows.forms.h_3_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#444](~/add/codesnippet/visualbasic/e-system.windows.forms.h_3_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler KeyUp;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.LosingFocus
  id: LosingFocus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: LosingFocus
  nameWithType: HtmlElement.LosingFocus
  fullName: System.Windows.Forms.HtmlElement.LosingFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Az elem elvesztése felhasználói bevitel fókuszának következik be."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the LosingFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the LosingFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#440](~/add/codesnippet/csharp/e-system.windows.forms.h_12_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#440](~/add/codesnippet/visualbasic/e-system.windows.forms.h_12_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler LosingFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.LostFocus
  id: LostFocus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: LostFocus
  nameWithType: HtmlElement.LostFocus
  fullName: System.Windows.Forms.HtmlElement.LostFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Az elem felhasználói bevitel fókuszának elvesztette következik be."
  remarks: "Egy elem fő vonás események LostFocus következik be, amíg azt program fókuszt újra, a lapon jelölje ki a felhasználó vagy az alkalmazás hívása után többé nem kapja az <xref:System.Windows.Forms.HtmlElement.Focus%2A>metódust, hogy a(z).</xref:System.Windows.Forms.HtmlElement.Focus%2A>       Ez az esemény nem szakítható meg.       Egy elem LostFocus esemény is előfordul, az adott elemhez szülők és a a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the LostFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the LostFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#441](~/add/codesnippet/csharp/e-system.windows.forms.h_0_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#441](~/add/codesnippet/visualbasic/e-system.windows.forms.h_0_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler LostFocus;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseDown
  id: MouseDown
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseDown
  nameWithType: HtmlElement.MouseDown
  fullName: System.Windows.Forms.HtmlElement.MouseDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó megnyomja az egér valamelyik gombját."
  remarks: "Az alapértelmezett művelet elemen MouseDown esemény megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       Egy elem MouseDown esemény is előfordul, az adott elemhez szülőelemek és a a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseDown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseDown event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#446](~/add/codesnippet/csharp/e-system.windows.forms.h_32_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#446](~/add/codesnippet/visualbasic/e-system.windows.forms.h_32_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseDown;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseEnter
  id: MouseEnter
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseEnter
  nameWithType: HtmlElement.MouseEnter
  fullName: System.Windows.Forms.HtmlElement.MouseEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó először az egérmutatót az aktuális elem felett."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseEnter event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseEnter event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#449](~/add/codesnippet/csharp/e-system.windows.forms.h_28_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#449](~/add/codesnippet/visualbasic/e-system.windows.forms.h_28_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseEnter;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseLeave
  id: MouseLeave
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseLeave
  nameWithType: HtmlElement.MouseLeave
  fullName: System.Windows.Forms.HtmlElement.MouseLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó az egérmutatót az aktuális elem ki."
  remarks: ''
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseLeave event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseLeave event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#450](~/add/codesnippet/csharp/e-system.windows.forms.h_33_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#450](~/add/codesnippet/visualbasic/e-system.windows.forms.h_33_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseLeave;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseMove
  id: MouseMove
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseMove
  nameWithType: HtmlElement.MouseMove
  fullName: System.Windows.Forms.HtmlElement.MouseMove
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó az egérmutatót az elem között."
  remarks: "Ez az esemény nem szakítható meg.       Egy elem egy MouseMove esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseMove event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseMove event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#445](~/add/codesnippet/csharp/e-system.windows.forms.h_15_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#445](~/add/codesnippet/visualbasic/e-system.windows.forms.h_15_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseMove;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseOver
  id: MouseOver
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseOver
  nameWithType: HtmlElement.MouseOver
  fullName: System.Windows.Forms.HtmlElement.MouseOver
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor az egérmutató belép elem határain."
  remarks: "Az alapértelmezett művelet elemen gombállapotokat esemény megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       Egy elem egy gombállapotokat esemény is előfordul, az adott elemhez szülőelemek és az a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseOver event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseOver event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#447](~/add/codesnippet/csharp/e-system.windows.forms.h_29_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#447](~/add/codesnippet/visualbasic/e-system.windows.forms.h_29_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseOver;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.MouseUp
  id: MouseUp
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: MouseUp
  nameWithType: HtmlElement.MouseUp
  fullName: System.Windows.Forms.HtmlElement.MouseUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Akkor következik be, amikor a felhasználó elengedi az egér valamelyik gombját."
  remarks: "Az alapértelmezett művelet elemen MouseUp esemény megszakíthatja úgy, hogy a <xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.ReturnValue%2A>       Egy elem MouseUp esemény is előfordul, az adott elemhez szülőelemek és a a <xref:System.Windows.Forms.HtmlDocument>osztály maga, kivéve, ha beállítása a <xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A>tulajdonsága a <xref:System.Windows.Forms.HtmlElementEventArgs>az osztály `true`.</xref:System.Windows.Forms.HtmlElementEventArgs> </xref:System.Windows.Forms.HtmlElementEventArgs.BubbleEvent%2A> </xref:System.Windows.Forms.HtmlDocument>       A különbség a között esemény propagálása felfelé és egy olyan eseményre alapértelmezett művelet visszavonása Visszavonás kapcsolatos további információkért lásd: [kapcsolatos a DHTML objektummodell](http://msdn.microsoft.com/library/ms533022.aspx)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseUp event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.HtmlElement> named `HtmlElement1`. Then ensure that the event handler is associated with the MouseUp event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#448](~/add/codesnippet/csharp/e-system.windows.forms.h_17_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#448](~/add/codesnippet/visualbasic/e-system.windows.forms.h_17_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.HtmlElementEventHandler MouseUp;
    return:
      type: System.Windows.Forms.HtmlElementEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Name
  id: Name
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Name
  nameWithType: HtmlElement.Name
  fullName: System.Windows.Forms.HtmlElement.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja az elem nevét."
  remarks: "A Name tulajdonság segítségével beolvasni a <xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A>metódust a <xref:System.Windows.Forms.HtmlElement.All%2A> <xref:System.Windows.Forms.HtmlDocument>.</xref:System.Windows.Forms.HtmlDocument> tulajdonság</xref:System.Windows.Forms.HtmlElement.All%2A> a</xref:System.Windows.Forms.HtmlElementCollection.GetElementsByName%2A> dokumentumból       Ha alkalmazza `INPUT` elemek, nevét határozza meg a változó nevét, az adott elemhez tartozó adatok az űrlap elküldésekor a kiszolgálóra."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>az elem nevét képviselő.</xref:System.String>"
  overload: System.Windows.Forms.HtmlElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.NextSibling
  id: NextSibling
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: NextSibling
  nameWithType: HtmlElement.NextSibling
  fullName: System.Windows.Forms.HtmlElement.NextSibling
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A következő elem beolvasása az elem a dokumentum fában ugyanazon a szinten."
  remarks: "Nextsibling elem együtt használhatja <xref:System.Windows.Forms.HtmlElement.FirstChild%2A>végigvezetheti a dokumentumok fastruktúrája egy HTML-elem.</xref:System.Windows.Forms.HtmlElement.FirstChild%2A>"
  syntax:
    content: public System.Windows.Forms.HtmlElement NextSibling { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "Egy <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> jelölő elem az aktuális elem jobb."
  overload: System.Windows.Forms.HtmlElement.NextSibling*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.OffsetParent
  id: OffsetParent
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: OffsetParent
  nameWithType: HtmlElement.OffsetParent
  fullName: System.Windows.Forms.HtmlElement.OffsetParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi az elem, amelyből <xref:System.Windows.Forms.HtmlElement.OffsetRectangle*>kiszámítása.</xref:System.Windows.Forms.HtmlElement.OffsetRectangle*>"
  remarks: "Elemek is elhelyezhetők, az alábbi három módszer egyikével a HTML-lapok: alapértelmezett folyamata elhelyezéséhez; relatív elhelyezés, amely az elem ellensúlyozza a rögzített méretű szülőelemének; a abszolút elhelyezés, és amely elem kap egy rögzített a koordinálja a dokumentum a bal felső sarokban lévő viszonyított pozícióját.       Ha a dokumentum elemek relatív vagy abszolút elhelyezéséhez, használhatja `OffsetParent` egy elem az ügyfélterületen elfoglalt kiszámításához.       További információ elem HTML, elhelyezéséhez: [kapcsolatos elem elhelyezéséhez](http://msdn.microsoft.com/library/ms533005.aspx)."
  example:
  - "The following code example shows how OffsetParent and <xref:System.Windows.Forms.HtmlElement.OffsetRectangle%2A> differ for `span1`, `span2` and `span3`:  \n  \n```  \n<HTML>  \n    <BODY id=\"documentBody\">  \n  \n        <DIV id=\"div1\">  \n            <SPAN id=\"span1\">Placeholder text 1.</SPAN>  \n        </DIV>  \n  \n        <DIV id=\"div2\" style=\"position:relative;top:100px;left:100px;\">  \n            <SPAN id=\"span2\">Placeholder text 2.</SPAN>  \n        </DIV>  \n  \n        <DIV id=\"div3\" style=\"position:absolute;top:200px;left:200px;\">  \n            <DIV id=\"div4\" style=\"position:relative;top:100px;left:100px;\">  \n                <SPAN id=\"span3\">Placeholder text 3.</SPAN>  \n            </DIV>  \n        </DIV>  \n  \n    </BODY>  \n</HTML>  \n```  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#6](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#6)]\n [!code-cs[System.Windows.Forms.HtmlElement#6](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#6)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement OffsetParent { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "Az elem, amelyből az eltolások számítja ki.       Ha egy elem szülő- vagy más, az elem hierarchia elem használ relatív vagy abszolút elhelyezést, <xref uid=&quot;langword_csharp_OffsetParent&quot; name=&quot;OffsetParent&quot; href=&quot;&quot;> </xref> lesz az első relatív vagy abszolút módon pozícionált elem, amelyben az aktuális elem van beágyazva. Ha az egyik eleme az aktuális elem fölé teljesen vagy viszonylag elhelyezett, <xref uid=&quot;langword_csharp_OffsetParent&quot; name=&quot;OffsetParent&quot; href=&quot;&quot;> </xref> lesz a `BODY` címke a dokumentum."
  overload: System.Windows.Forms.HtmlElement.OffsetParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.OffsetRectangle
  id: OffsetRectangle
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: OffsetRectangle
  nameWithType: HtmlElement.OffsetRectangle
  fullName: System.Windows.Forms.HtmlElement.OffsetRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi egy elemet a szülői mappától kiinduló relatív elérési helyét."
  remarks: "Elemek is elhelyezhetők, az alábbi három módszer egyikével a HTML-lapok:-alapértelmezett folyamata elhelyezéséhez.      -Relatív elhelyezés, amely az elem ellensúlyozza a rögzített méretű szülőelemének a.      -Abszolút elhelyezés, amely elemhez kap egy rögzített a koordinálja a dokumentum a bal felső sarokban lévő viszonyított pozícióját.       További információ elem HTML, elhelyezéséhez: [kapcsolatos elem elhelyezéséhez](http://msdn.microsoft.com/library/ms533005.aspx)."
  example:
  - "The following code example shows how <xref:System.Windows.Forms.HtmlElement.OffsetParent%2A> and OffsetRectangle differ for `span1`, `span2` and `span3`:  \n  \n```  \n<HTML>  \n    <BODY id=\"documentBody\">  \n  \n        <DIV id=\"div1\">  \n            <SPAN id=\"span1\">Placeholder text 1.</SPAN>  \n        </DIV>  \n  \n        <DIV id=\"div2\" style=\"position:relative;top:100px;left:100px;\">  \n            <SPAN id=\"span2\">Placeholder text 2.</SPAN>  \n        </DIV>  \n  \n        <DIV id=\"div3\" style=\"position:absolute;top:200px;left:200px;\">  \n            <DIV id=\"div4\" style=\"position:relative;top:100px;left:100px;\">  \n                <SPAN id=\"span3\">Placeholder text 3.</SPAN>  \n            </DIV>  \n        </DIV>  \n  \n    </BODY>  \n</HTML>  \n```  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#6](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#6)]\n [!code-cs[System.Windows.Forms.HtmlElement#6](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#6)]"
  syntax:
    content: public System.Drawing.Rectangle OffsetRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Az x és y koordinátáját pozíciók elemnél, és szélességének és magasságának, a szülő viszonyítva.       Egy elem szülő relatív vagy abszolút helyezkedik el, ha OffsetRectangle visszatér a szülőelem eltolását. Ha a maga az elem a szülő tekintetében viszonylag helyezkedik el, a OffsetRectangle visszatér az eltolás szülőjétől örökli."
  overload: System.Windows.Forms.HtmlElement.OffsetRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  id: op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: op_Equality(HtmlElement,HtmlElement)
  nameWithType: HtmlElement.op_Equality(HtmlElement,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.op_Equality(HtmlElement,HtmlElement)
  type: Operator
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Összehasonlítja a két elem az egyezés keresésekor."
  remarks: "Az egyenlő operátor tesztek a `IUnknown` az alapul szolgáló COM-objektumok, a megadott által becsomagolt mutatóját <xref:System.Windows.Forms.HtmlElement>osztályok.</xref:System.Windows.Forms.HtmlElement>"
  syntax:
    content: public static bool op_Equality (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);
    parameters:
    - id: left
      type: System.Windows.Forms.HtmlElement
      description: "Az első <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>."
    - id: right
      type: System.Windows.Forms.HtmlElement
      description: "A második <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha mindkét paraméter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vagy ha mindkét elem a azonos alapul szolgáló COM-illesztőfelület; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.HtmlElement.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  id: op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: op_Inequality(HtmlElement,HtmlElement)
  nameWithType: HtmlElement.op_Inequality(HtmlElement,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.op_Inequality(HtmlElement,HtmlElement)
  type: Operator
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Összehasonlít két <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref> egyenlőtlen objektumokat."
  syntax:
    content: public static bool op_Inequality (System.Windows.Forms.HtmlElement left, System.Windows.Forms.HtmlElement right);
    parameters:
    - id: left
      type: System.Windows.Forms.HtmlElement
      description: "Az első <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>."
    - id: right
      type: System.Windows.Forms.HtmlElement
      description: "A második <xref href=&quot;System.Windows.Forms.HtmlElement&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>csak az egyik elem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vagy a két objektum nem egyenlő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.HtmlElement.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.OuterHtml
  id: OuterHtml
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: OuterHtml
  nameWithType: HtmlElement.OuterHtml
  fullName: System.Windows.Forms.HtmlElement.OuterHtml
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja a jelenlegi elem HTML-kódot."
  remarks: "<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>Tér vissza az aktuális elem környező címkék kivételével az aktuális elem található összes HTML, mivel OuterHtml tartalmazza az aktuális elem címke, valamint a címkét tartalmaz, például HTML-KÓDBAN: `<HTML>` `<BODY>` `<DIV id=&quot;div1&quot;>` `Hello` `<DIV id=&quot;div2&quot;>` `World` `<DIV id=&quot;div3&quot;>` `How are you?` `</DIV>` `</DIV>` `</DIV>` `</BODY>` `</HTML>` ebben a példában, OuterHtml hívása `div2` visszaadható: `<DIV id=&quot;div2&quot;>` `World` `<DIV id=&quot;div3&quot;>` `How are you?` `</DIV>` `</DIV>` <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>hívása visszaadható: `World` `<DIV id=&quot;div3&quot;>` `How are you?` `</DIV>` OuterHtml rendel egy új értéket, ha az aktuális elemhivatkozás érvénytelenné válnak; ez nem befolyásolja a neve , csak rendelt HTML tulajdonságait és a gyermek tartalmát.                     </xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>                                                                                                                        </xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>"
  syntax:
    content: public string OuterHtml { get; set; }
    return:
      type: System.String
      description: "Az aktuális elem és a gyermekek HTML kód."
  overload: System.Windows.Forms.HtmlElement.OuterHtml*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.OuterText
  id: OuterText
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: OuterText
  nameWithType: HtmlElement.OuterText
  fullName: System.Windows.Forms.HtmlElement.OuterText
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja a jelenlegi elem szövegét."
  remarks: "HTML hozzárendelése OuterText rendelkező elemet kísérli meg, ha a HTML-kódja a dokumentum konstans karakterként jelenik meg ugyanúgy, mintha megtekintett HTML szövegfájlba belül. Ha egy elem használatával HTML rendel a <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>tulajdonság, OuterText ad vissza a teljes szöveg abban, hogy a kód HTML eltávolítani.</xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>       Érték hozzárendelése OuterText semmisítse meg a gyermekelemek elemhez tartozó."
  syntax:
    content: public string OuterText { get; set; }
    return:
      type: System.String
      description: "A szöveg, a jelenlegi elemen belül, és az elem gyermeke."
  overload: System.Windows.Forms.HtmlElement.OuterText*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ez az elem kívül szöveg nem állítható be."
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Parent
  id: Parent
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Parent
  nameWithType: HtmlElement.Parent
  fullName: System.Windows.Forms.HtmlElement.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi az aktuális elem szülőelem."
  remarks: "A szülő tulajdonságot lehetővé teszi, hogy egy elem környezet felderítését. A leghasznosabb eseménykezelők belül, mint <xref:System.Windows.Forms.HtmlElement.Click>, amely a dokumentum objektum hierarchia bármely részén lévő elemek is érvényesítést.</xref:System.Windows.Forms.HtmlElement.Click>       A szülő tulajdonságot HTML-elem (HTML-dokumentum felső) vissza saját magára mutat. Szülő hívásakor hurkot belül, győződjön meg arról, hogy a hurok break feltétele összehasonlítja az aktuális elem típusa és milyen típusú a `Parent` tulajdonság, vagy pedig a kód futhat-e ki végtelen ciklus."
  example:
  - "The following code example finds all of the `IMG` tags in a document, and uses the Parent property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#7](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#7)]\n [!code-cs[System.Windows.Forms.HtmlElement#7](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#7)]"
  syntax:
    content: public System.Windows.Forms.HtmlElement Parent { get; }
    return:
      type: System.Windows.Forms.HtmlElement
      description: "Az elem újabb az aktuális elem a HTML-dokumentum hierarchiában."
  overload: System.Windows.Forms.HtmlElement.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.RaiseEvent(System.String)
  id: RaiseEvent(System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: RaiseEvent(String)
  nameWithType: HtmlElement.RaiseEvent(String)
  fullName: System.Windows.Forms.HtmlElement.RaiseEvent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Hívása az összes regisztrált Eseményleírók nevű esemény hatására."
  remarks: "Ez a módszer HTML Document Object Model (DOM) események eléréséhez használt. Közvetlenül meghívja a [IHTMLElement3::fireEvent](http://go.microsoft.com/fwlink/?LinkId=103189) metódust. A DOM keresztül történő használatáról további információt a <xref:System.Windows.Forms.HtmlElement>osztály című [hatásnak tagot fér hozzá a felügyelt HTML-dokumentum Object Model](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Forms.HtmlElement>"
  syntax:
    content: public void RaiseEvent (string eventName);
    parameters:
    - id: eventName
      type: System.String
      description: "Az esemény kell kiadni a neve."
  overload: System.Windows.Forms.HtmlElement.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.RemoveFocus
  id: RemoveFocus
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: RemoveFocus()
  nameWithType: HtmlElement.RemoveFocus()
  fullName: System.Windows.Forms.HtmlElement.RemoveFocus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Eltávolítja az aktuális elemből összpontosítson, ha az elem van a fókusz."
  remarks: "A metódus hívása vet fel a <xref:System.Windows.Forms.HtmlElement.LostFocus>elem eseménye.</xref:System.Windows.Forms.HtmlElement.LostFocus>       Ha egy elem ezzel a módszerrel a fókusz nincs bejelölve, az elem, nem a tabulátorsorrend szerinti következő elemet tartalmazó dokumentum kap."
  syntax:
    content: public void RemoveFocus ();
    parameters: []
  overload: System.Windows.Forms.HtmlElement.RemoveFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)
  id: ScrollIntoView(System.Boolean)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ScrollIntoView(Boolean)
  nameWithType: HtmlElement.ScrollIntoView(Boolean)
  fullName: System.Windows.Forms.HtmlElement.ScrollIntoView(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A dokumentum ezt az elemet tartalmazó, amíg az elem felső vagy alsó széle igazodik a dokumentumablakra görget."
  remarks: ''
  example:
  - "The following code example finds an element by name and scrolls through the page so that the top of the element is aligned with the top of the visible page.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#12](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#12)]\n [!code-cs[System.Windows.Forms.HtmlElement#12](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#12)]"
  syntax:
    content: public void ScrollIntoView (bool alignWithTop);
    parameters:
    - id: alignWithTop
      type: System.Boolean
      description: "Ha <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, az objektum tetején fog megjelenni az ablak tetején. Ha <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, az objektum alján jelenik meg az ablak alján."
  overload: System.Windows.Forms.HtmlElement.ScrollIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ScrollLeft
  id: ScrollLeft
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ScrollLeft
  nameWithType: HtmlElement.ScrollLeft
  fullName: System.Windows.Forms.HtmlElement.ScrollLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja az elem széle és a benne lévő tartalom bal széle közötti távolságot."
  remarks: "A görgethető terület teljes mérete használatával érhetők el <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; `ScrollLeft` és <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A>egymástól függetlenül elérhetők, mert ezek a fejlesztők számára beállított görgetési terület csak két tulajdonságait.</xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> </xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>"
  syntax:
    content: public int ScrollLeft { get; set; }
    return:
      type: System.Int32
      description: "A távolság képpontban megadva, az elem bal oldali széle és a benne lévő tartalom bal széle közötti."
  overload: System.Windows.Forms.HtmlElement.ScrollLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ScrollRectangle
  id: ScrollRectangle
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ScrollRectangle
  nameWithType: HtmlElement.ScrollRectangle
  fullName: System.Windows.Forms.HtmlElement.ScrollRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A dimenziók görgethető régió egy elem beolvasása."
  remarks: "Egy elem lesz görgethető régió benne lévő tartalom meghaladja a méretei, ha csak ha elem túlcsordulás stílus tiltja megjelenítési görgetősáv.       Közvetlenül nem módosítható a görgetési terület méretét, de a görgetősáv terület széleit és széleit, az elem távolságát módosíthatja. Használja a <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A>és <xref:System.Windows.Forms.HtmlElement.ScrollTop%2A>Tulajdonságok ennek eléréséhez.</xref:System.Windows.Forms.HtmlElement.ScrollTop%2A> </xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A>"
  syntax:
    content: public System.Drawing.Rectangle ScrollRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A görgethető terület, az elem mérete és koordináta helye."
  overload: System.Windows.Forms.HtmlElement.ScrollRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.ScrollTop
  id: ScrollTop
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: ScrollTop
  nameWithType: HtmlElement.ScrollTop
  fullName: System.Windows.Forms.HtmlElement.ScrollTop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja az elem széle és a benne lévő tartalom felső széle közötti távolságot."
  remarks: "A görgethető terület teljes mérete használatával érhetők el <xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>; <xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A>és `ScrollTop` egymástól függetlenül elérhetők, mert ezek a fejlesztők számára beállított görgetési terület csak két tulajdonságait.</xref:System.Windows.Forms.HtmlElement.ScrollLeft%2A> </xref:System.Windows.Forms.HtmlElement.ScrollRectangle%2A>"
  syntax:
    content: public int ScrollTop { get; set; }
    return:
      type: System.Int32
      description: "A távolság képpontban megadva, a felső szegélyéhez, hogy az elem és a benne lévő tartalom felső széle között."
  overload: System.Windows.Forms.HtmlElement.ScrollTop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: HtmlElement.SetAttribute(String,String)
  fullName: System.Windows.Forms.HtmlElement.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Az azonos nevű attribútum értékének beállítása elemnél."
  remarks: "Az attribútum a HTML bármilyen érvényes név-érték párhoz, hogy az elemhez. <xref:System.Windows.Forms.HtmlElement>csak a vonatkozó összes elem csak bizonyos típusú elemek; vonatkozó kihagyva attribútumok közzététele `SRC` az előre megadott attribútum a `IMG` címke, például, de nem a `DIV` címke.</xref:System.Windows.Forms.HtmlElement> Használjon <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>és kezelheti a meg nem jelenített meg a felügyelt Document Object Model (DOM) attribútumok SetAttribute.</xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>       Ha `attributeName` nincs meghatározott attribútum elemen, SetAttribute határozza meg azt a elem egy új attribútumaként.       <xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>és SetAttribute nem különböztetik meg.</xref:System.Windows.Forms.HtmlElement.GetAttribute%2A>       Beállítása a `class` attribútuma egy <xref:System.Windows.Forms.HtmlElement>, meg kell hivatkoznia, az attribútum `className` SetAttribute első argumentumának megadásakor</xref:System.Windows.Forms.HtmlElement>"
  example:
  - "The following code example adds a new `IMG` element to the current document, using SetAttribute to set the `SRC` attribute for the image.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#13](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#13)]\n [!code-cs[System.Windows.Forms.HtmlElement#13](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#13)]"
  syntax:
    content: public void SetAttribute (string attributeName, string value);
    parameters:
    - id: attributeName
      type: System.String
      description: "Az attribútum beállítása neve."
    - id: value
      type: System.String
      description: "Ennek az attribútumnak az új értéket."
  overload: System.Windows.Forms.HtmlElement.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.Style
  id: Style
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: Style
  nameWithType: HtmlElement.Style
  fullName: System.Windows.Forms.HtmlElement.Style
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja a stílusok az aktuális elem egy pontosvesszővel elválasztott listája."
  remarks: "A HTML Document Object Model (DOM) használatával stílusok a webes Consortiums egymásra épülő stíluslapok megadását meghatározott elemet megjelenítését. A Style tulajdonságának stílusok pontosvesszővel elválasztott név-érték párok, és minden párt az alábbiak szerint, pontosvesszővel elválasztva formájában: `style-name1:value1;...;[style-nameN:valueN;]` betűtípusát beállítása egy `DIV` elem 14-es alkalommal új latin félkövér, például rendelne a következő karakterláncot: `font-face:Times New Roman;font-size:14px;font-weight:bold;` a HTML DOM összes elérhető stílusok teljes listáját lásd: [valamennyi STYLE attribútumnak](http://msdn.microsoft.com/library/ms534651.aspx)."
  syntax:
    content: public string Style { get; set; }
    return:
      type: System.String
      description: "Az összes, az elem stílusok karakterlánc"
  overload: System.Windows.Forms.HtmlElement.Style*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.TabIndex
  id: TabIndex
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: TabIndex
  nameWithType: HtmlElement.TabIndex
  fullName: System.Windows.Forms.HtmlElement.TabIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja az elem helyének a bejárási sorrendben."
  remarks: "TabIndex meghatározza, hogy mely eleme egy HTML-dokumentumban mellett helyezhető fókuszba, amikor a felhasználó megnyomja a TAB billentyűt. Alapértelmezés szerint a sorrend csak elemek értékek `INPUT` elemek, a `SELECT` vezérlő, és bármely elem amelynek `contentEditable` tulajdonsága `true`. Megadhat bármilyen HTML-elem, mint a tabulátorsorrend szerinti egy `DIV`, egy explicit TabIndex hozzárendelésével.       Érvényes értékek TabIndex közé-32767 és 32767 között."
  syntax:
    content: public short TabIndex { get; set; }
    return:
      type: System.Int16
      description: "Az elem a bejárási sorrendben numerikus index."
  overload: System.Windows.Forms.HtmlElement.TabIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.HtmlElement.TagName
  id: TagName
  parent: System.Windows.Forms.HtmlElement
  langs:
  - csharp
  name: TagName
  nameWithType: HtmlElement.TagName
  fullName: System.Windows.Forms.HtmlElement.TagName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a HTML-címke neve."
  remarks: "A HTML-dokumentum objektummodell számos eleme van attribútumok, tulajdonságok és módszerek közül csak az elemek; például a `HREF` attribútuma a `A` elem, vagy a `Submit` metódusa `FORM`. Használja a TagName, miután potenciálisan tetszőleges típusú elemet, és a típusra vonatkozó művelet végrehajtása szükséges."
  example:
  - "The following code example finds all of the `IMG` tags in a document, and uses the `TagName` property to test whether the `IMG` is hyperlinked to another page; if it is, the code assigns the URL to the `ALT` attribute of the `IMG` tag, so that users can mouse over the image to see where it will take them.  \n  \n [!code-vb[System.Windows.Forms.HtmlElement#7](~/add/codesnippet/visualbasic/HtmlElementProject/Form1.vb#7)]\n [!code-cs[System.Windows.Forms.HtmlElement#7](~/add/codesnippet/csharp/HtmlElementProjectCSharp/Form1.cs#7)]"
  syntax:
    content: public string TagName { get; }
    return:
      type: System.String
      description: "Ez az elem használatával HTML-kód létrehozásához használt név."
  overload: System.Windows.Forms.HtmlElement.TagName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Forms.HtmlElement.All
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: All
  nameWithType: HtmlElement.All
  fullName: System.Windows.Forms.HtmlElement.All
- uid: System.Windows.Forms.HtmlElementCollection
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementCollection
  nameWithType: HtmlElementCollection
  fullName: System.Windows.Forms.HtmlElementCollection
- uid: System.Windows.Forms.HtmlElement.AppendChild(System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: AppendChild(HtmlElement)
  nameWithType: HtmlElement.AppendChild(HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.AppendChild(HtmlElement)
- uid: System.Windows.Forms.HtmlElement
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElement
  nameWithType: HtmlElement
  fullName: System.Windows.Forms.HtmlElement
- uid: System.Windows.Forms.HtmlElement.AttachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: AttachEventHandler(String,EventHandler)
  nameWithType: HtmlElement.AttachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlElement.AttachEventHandler(String,EventHandler)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.HtmlElement.CanHaveChildren
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: CanHaveChildren
  nameWithType: HtmlElement.CanHaveChildren
  fullName: System.Windows.Forms.HtmlElement.CanHaveChildren
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.HtmlElement.Children
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Children
  nameWithType: HtmlElement.Children
  fullName: System.Windows.Forms.HtmlElement.Children
- uid: System.Windows.Forms.HtmlElement.Click
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Click
  nameWithType: HtmlElement.Click
  fullName: System.Windows.Forms.HtmlElement.Click
- uid: System.Windows.Forms.HtmlElementEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementEventHandler
  nameWithType: HtmlElementEventHandler
  fullName: System.Windows.Forms.HtmlElementEventHandler
- uid: System.Windows.Forms.HtmlElement.ClientRectangle
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ClientRectangle
  nameWithType: HtmlElement.ClientRectangle
  fullName: System.Windows.Forms.HtmlElement.ClientRectangle
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.HtmlElement.DetachEventHandler(System.String,System.EventHandler)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DetachEventHandler(String,EventHandler)
  nameWithType: HtmlElement.DetachEventHandler(String,EventHandler)
  fullName: System.Windows.Forms.HtmlElement.DetachEventHandler(String,EventHandler)
- uid: System.Windows.Forms.HtmlElement.Document
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Document
  nameWithType: HtmlElement.Document
  fullName: System.Windows.Forms.HtmlElement.Document
- uid: System.Windows.Forms.HtmlDocument
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlDocument
  nameWithType: HtmlDocument
  fullName: System.Windows.Forms.HtmlDocument
- uid: System.Windows.Forms.HtmlElement.DomElement
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DomElement
  nameWithType: HtmlElement.DomElement
  fullName: System.Windows.Forms.HtmlElement.DomElement
- uid: System.Windows.Forms.HtmlElement.DoubleClick
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DoubleClick
  nameWithType: HtmlElement.DoubleClick
  fullName: System.Windows.Forms.HtmlElement.DoubleClick
- uid: System.Windows.Forms.HtmlElement.Drag
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Drag
  nameWithType: HtmlElement.Drag
  fullName: System.Windows.Forms.HtmlElement.Drag
- uid: System.Windows.Forms.HtmlElement.DragEnd
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DragEnd
  nameWithType: HtmlElement.DragEnd
  fullName: System.Windows.Forms.HtmlElement.DragEnd
- uid: System.Windows.Forms.HtmlElement.DragLeave
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DragLeave
  nameWithType: HtmlElement.DragLeave
  fullName: System.Windows.Forms.HtmlElement.DragLeave
- uid: System.Windows.Forms.HtmlElement.DragOver
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DragOver
  nameWithType: HtmlElement.DragOver
  fullName: System.Windows.Forms.HtmlElement.DragOver
- uid: System.Windows.Forms.HtmlElement.Enabled
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Enabled
  nameWithType: HtmlElement.Enabled
  fullName: System.Windows.Forms.HtmlElement.Enabled
- uid: System.Windows.Forms.HtmlElement.Equals(System.Object)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Equals(Object)
  nameWithType: HtmlElement.Equals(Object)
  fullName: System.Windows.Forms.HtmlElement.Equals(Object)
- uid: System.Windows.Forms.HtmlElement.FirstChild
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: FirstChild
  nameWithType: HtmlElement.FirstChild
  fullName: System.Windows.Forms.HtmlElement.FirstChild
- uid: System.Windows.Forms.HtmlElement.Focus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Focus()
  nameWithType: HtmlElement.Focus()
  fullName: System.Windows.Forms.HtmlElement.Focus()
- uid: System.Windows.Forms.HtmlElement.Focusing
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Focusing
  nameWithType: HtmlElement.Focusing
  fullName: System.Windows.Forms.HtmlElement.Focusing
- uid: System.Windows.Forms.HtmlElement.GetAttribute(System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetAttribute(String)
  nameWithType: HtmlElement.GetAttribute(String)
  fullName: System.Windows.Forms.HtmlElement.GetAttribute(String)
- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName(System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetElementsByTagName(String)
  nameWithType: HtmlElement.GetElementsByTagName(String)
  fullName: System.Windows.Forms.HtmlElement.GetElementsByTagName(String)
- uid: System.Windows.Forms.HtmlElement.GetHashCode
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetHashCode()
  nameWithType: HtmlElement.GetHashCode()
  fullName: System.Windows.Forms.HtmlElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.HtmlElement.GotFocus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GotFocus
  nameWithType: HtmlElement.GotFocus
  fullName: System.Windows.Forms.HtmlElement.GotFocus
- uid: System.Windows.Forms.HtmlElement.Id
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Id
  nameWithType: HtmlElement.Id
  fullName: System.Windows.Forms.HtmlElement.Id
- uid: System.Windows.Forms.HtmlElement.InnerHtml
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InnerHtml
  nameWithType: HtmlElement.InnerHtml
  fullName: System.Windows.Forms.HtmlElement.InnerHtml
- uid: System.Windows.Forms.HtmlElement.InnerText
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InnerText
  nameWithType: HtmlElement.InnerText
  fullName: System.Windows.Forms.HtmlElement.InnerText
- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement(System.Windows.Forms.HtmlElementInsertionOrientation,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  nameWithType: HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.InsertAdjacentElement(HtmlElementInsertionOrientation,HtmlElement)
- uid: System.Windows.Forms.HtmlElementInsertionOrientation
  parent: System.Windows.Forms
  isExternal: false
  name: HtmlElementInsertionOrientation
  nameWithType: HtmlElementInsertionOrientation
  fullName: System.Windows.Forms.HtmlElementInsertionOrientation
- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InvokeMember(String)
  nameWithType: HtmlElement.InvokeMember(String)
  fullName: System.Windows.Forms.HtmlElement.InvokeMember(String)
- uid: System.Windows.Forms.HtmlElement.InvokeMember(System.String,System.Object[])
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InvokeMember(String,Object[])
  nameWithType: HtmlElement.InvokeMember(String,Object[])
  fullName: System.Windows.Forms.HtmlElement.InvokeMember(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.HtmlElement.KeyDown
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: KeyDown
  nameWithType: HtmlElement.KeyDown
  fullName: System.Windows.Forms.HtmlElement.KeyDown
- uid: System.Windows.Forms.HtmlElement.KeyPress
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: KeyPress
  nameWithType: HtmlElement.KeyPress
  fullName: System.Windows.Forms.HtmlElement.KeyPress
- uid: System.Windows.Forms.HtmlElement.KeyUp
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: KeyUp
  nameWithType: HtmlElement.KeyUp
  fullName: System.Windows.Forms.HtmlElement.KeyUp
- uid: System.Windows.Forms.HtmlElement.LosingFocus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: LosingFocus
  nameWithType: HtmlElement.LosingFocus
  fullName: System.Windows.Forms.HtmlElement.LosingFocus
- uid: System.Windows.Forms.HtmlElement.LostFocus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: LostFocus
  nameWithType: HtmlElement.LostFocus
  fullName: System.Windows.Forms.HtmlElement.LostFocus
- uid: System.Windows.Forms.HtmlElement.MouseDown
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseDown
  nameWithType: HtmlElement.MouseDown
  fullName: System.Windows.Forms.HtmlElement.MouseDown
- uid: System.Windows.Forms.HtmlElement.MouseEnter
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseEnter
  nameWithType: HtmlElement.MouseEnter
  fullName: System.Windows.Forms.HtmlElement.MouseEnter
- uid: System.Windows.Forms.HtmlElement.MouseLeave
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseLeave
  nameWithType: HtmlElement.MouseLeave
  fullName: System.Windows.Forms.HtmlElement.MouseLeave
- uid: System.Windows.Forms.HtmlElement.MouseMove
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseMove
  nameWithType: HtmlElement.MouseMove
  fullName: System.Windows.Forms.HtmlElement.MouseMove
- uid: System.Windows.Forms.HtmlElement.MouseOver
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseOver
  nameWithType: HtmlElement.MouseOver
  fullName: System.Windows.Forms.HtmlElement.MouseOver
- uid: System.Windows.Forms.HtmlElement.MouseUp
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: MouseUp
  nameWithType: HtmlElement.MouseUp
  fullName: System.Windows.Forms.HtmlElement.MouseUp
- uid: System.Windows.Forms.HtmlElement.Name
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Name
  nameWithType: HtmlElement.Name
  fullName: System.Windows.Forms.HtmlElement.Name
- uid: System.Windows.Forms.HtmlElement.NextSibling
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: NextSibling
  nameWithType: HtmlElement.NextSibling
  fullName: System.Windows.Forms.HtmlElement.NextSibling
- uid: System.Windows.Forms.HtmlElement.OffsetParent
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OffsetParent
  nameWithType: HtmlElement.OffsetParent
  fullName: System.Windows.Forms.HtmlElement.OffsetParent
- uid: System.Windows.Forms.HtmlElement.OffsetRectangle
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OffsetRectangle
  nameWithType: HtmlElement.OffsetRectangle
  fullName: System.Windows.Forms.HtmlElement.OffsetRectangle
- uid: System.Windows.Forms.HtmlElement.op_Equality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: op_Equality(HtmlElement,HtmlElement)
  nameWithType: HtmlElement.op_Equality(HtmlElement,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.op_Equality(HtmlElement,HtmlElement)
- uid: System.Windows.Forms.HtmlElement.op_Inequality(System.Windows.Forms.HtmlElement,System.Windows.Forms.HtmlElement)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: op_Inequality(HtmlElement,HtmlElement)
  nameWithType: HtmlElement.op_Inequality(HtmlElement,HtmlElement)
  fullName: System.Windows.Forms.HtmlElement.op_Inequality(HtmlElement,HtmlElement)
- uid: System.Windows.Forms.HtmlElement.OuterHtml
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OuterHtml
  nameWithType: HtmlElement.OuterHtml
  fullName: System.Windows.Forms.HtmlElement.OuterHtml
- uid: System.Windows.Forms.HtmlElement.OuterText
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OuterText
  nameWithType: HtmlElement.OuterText
  fullName: System.Windows.Forms.HtmlElement.OuterText
- uid: System.Windows.Forms.HtmlElement.Parent
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Parent
  nameWithType: HtmlElement.Parent
  fullName: System.Windows.Forms.HtmlElement.Parent
- uid: System.Windows.Forms.HtmlElement.RaiseEvent(System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: RaiseEvent(String)
  nameWithType: HtmlElement.RaiseEvent(String)
  fullName: System.Windows.Forms.HtmlElement.RaiseEvent(String)
- uid: System.Windows.Forms.HtmlElement.RemoveFocus
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: RemoveFocus()
  nameWithType: HtmlElement.RemoveFocus()
  fullName: System.Windows.Forms.HtmlElement.RemoveFocus()
- uid: System.Windows.Forms.HtmlElement.ScrollIntoView(System.Boolean)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollIntoView(Boolean)
  nameWithType: HtmlElement.ScrollIntoView(Boolean)
  fullName: System.Windows.Forms.HtmlElement.ScrollIntoView(Boolean)
- uid: System.Windows.Forms.HtmlElement.ScrollLeft
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollLeft
  nameWithType: HtmlElement.ScrollLeft
  fullName: System.Windows.Forms.HtmlElement.ScrollLeft
- uid: System.Windows.Forms.HtmlElement.ScrollRectangle
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollRectangle
  nameWithType: HtmlElement.ScrollRectangle
  fullName: System.Windows.Forms.HtmlElement.ScrollRectangle
- uid: System.Windows.Forms.HtmlElement.ScrollTop
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollTop
  nameWithType: HtmlElement.ScrollTop
  fullName: System.Windows.Forms.HtmlElement.ScrollTop
- uid: System.Windows.Forms.HtmlElement.SetAttribute(System.String,System.String)
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: HtmlElement.SetAttribute(String,String)
  fullName: System.Windows.Forms.HtmlElement.SetAttribute(String,String)
- uid: System.Windows.Forms.HtmlElement.Style
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Style
  nameWithType: HtmlElement.Style
  fullName: System.Windows.Forms.HtmlElement.Style
- uid: System.Windows.Forms.HtmlElement.TabIndex
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: TabIndex
  nameWithType: HtmlElement.TabIndex
  fullName: System.Windows.Forms.HtmlElement.TabIndex
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Windows.Forms.HtmlElement.TagName
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: TagName
  nameWithType: HtmlElement.TagName
  fullName: System.Windows.Forms.HtmlElement.TagName
- uid: System.Windows.Forms.HtmlElement.All*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: All
  nameWithType: HtmlElement.All
- uid: System.Windows.Forms.HtmlElement.AppendChild*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: AppendChild
  nameWithType: HtmlElement.AppendChild
- uid: System.Windows.Forms.HtmlElement.AttachEventHandler*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: AttachEventHandler
  nameWithType: HtmlElement.AttachEventHandler
- uid: System.Windows.Forms.HtmlElement.CanHaveChildren*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: CanHaveChildren
  nameWithType: HtmlElement.CanHaveChildren
- uid: System.Windows.Forms.HtmlElement.Children*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Children
  nameWithType: HtmlElement.Children
- uid: System.Windows.Forms.HtmlElement.ClientRectangle*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ClientRectangle
  nameWithType: HtmlElement.ClientRectangle
- uid: System.Windows.Forms.HtmlElement.DetachEventHandler*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DetachEventHandler
  nameWithType: HtmlElement.DetachEventHandler
- uid: System.Windows.Forms.HtmlElement.Document*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Document
  nameWithType: HtmlElement.Document
- uid: System.Windows.Forms.HtmlElement.DomElement*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: DomElement
  nameWithType: HtmlElement.DomElement
- uid: System.Windows.Forms.HtmlElement.Enabled*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Enabled
  nameWithType: HtmlElement.Enabled
- uid: System.Windows.Forms.HtmlElement.Equals*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Equals
  nameWithType: HtmlElement.Equals
- uid: System.Windows.Forms.HtmlElement.FirstChild*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: FirstChild
  nameWithType: HtmlElement.FirstChild
- uid: System.Windows.Forms.HtmlElement.Focus*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Focus
  nameWithType: HtmlElement.Focus
- uid: System.Windows.Forms.HtmlElement.GetAttribute*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetAttribute
  nameWithType: HtmlElement.GetAttribute
- uid: System.Windows.Forms.HtmlElement.GetElementsByTagName*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetElementsByTagName
  nameWithType: HtmlElement.GetElementsByTagName
- uid: System.Windows.Forms.HtmlElement.GetHashCode*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: GetHashCode
  nameWithType: HtmlElement.GetHashCode
- uid: System.Windows.Forms.HtmlElement.Id*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Id
  nameWithType: HtmlElement.Id
- uid: System.Windows.Forms.HtmlElement.InnerHtml*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InnerHtml
  nameWithType: HtmlElement.InnerHtml
- uid: System.Windows.Forms.HtmlElement.InnerText*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InnerText
  nameWithType: HtmlElement.InnerText
- uid: System.Windows.Forms.HtmlElement.InsertAdjacentElement*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InsertAdjacentElement
  nameWithType: HtmlElement.InsertAdjacentElement
- uid: System.Windows.Forms.HtmlElement.InvokeMember*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: InvokeMember
  nameWithType: HtmlElement.InvokeMember
- uid: System.Windows.Forms.HtmlElement.Name*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Name
  nameWithType: HtmlElement.Name
- uid: System.Windows.Forms.HtmlElement.NextSibling*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: NextSibling
  nameWithType: HtmlElement.NextSibling
- uid: System.Windows.Forms.HtmlElement.OffsetParent*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OffsetParent
  nameWithType: HtmlElement.OffsetParent
- uid: System.Windows.Forms.HtmlElement.OffsetRectangle*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OffsetRectangle
  nameWithType: HtmlElement.OffsetRectangle
- uid: System.Windows.Forms.HtmlElement.op_Equality*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: op_Equality
  nameWithType: HtmlElement.op_Equality
- uid: System.Windows.Forms.HtmlElement.op_Inequality*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: op_Inequality
  nameWithType: HtmlElement.op_Inequality
- uid: System.Windows.Forms.HtmlElement.OuterHtml*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OuterHtml
  nameWithType: HtmlElement.OuterHtml
- uid: System.Windows.Forms.HtmlElement.OuterText*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: OuterText
  nameWithType: HtmlElement.OuterText
- uid: System.Windows.Forms.HtmlElement.Parent*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Parent
  nameWithType: HtmlElement.Parent
- uid: System.Windows.Forms.HtmlElement.RaiseEvent*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: RaiseEvent
  nameWithType: HtmlElement.RaiseEvent
- uid: System.Windows.Forms.HtmlElement.RemoveFocus*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: RemoveFocus
  nameWithType: HtmlElement.RemoveFocus
- uid: System.Windows.Forms.HtmlElement.ScrollIntoView*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollIntoView
  nameWithType: HtmlElement.ScrollIntoView
- uid: System.Windows.Forms.HtmlElement.ScrollLeft*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollLeft
  nameWithType: HtmlElement.ScrollLeft
- uid: System.Windows.Forms.HtmlElement.ScrollRectangle*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollRectangle
  nameWithType: HtmlElement.ScrollRectangle
- uid: System.Windows.Forms.HtmlElement.ScrollTop*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: ScrollTop
  nameWithType: HtmlElement.ScrollTop
- uid: System.Windows.Forms.HtmlElement.SetAttribute*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: SetAttribute
  nameWithType: HtmlElement.SetAttribute
- uid: System.Windows.Forms.HtmlElement.Style*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: Style
  nameWithType: HtmlElement.Style
- uid: System.Windows.Forms.HtmlElement.TabIndex*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: TabIndex
  nameWithType: HtmlElement.TabIndex
- uid: System.Windows.Forms.HtmlElement.TagName*
  parent: System.Windows.Forms.HtmlElement
  isExternal: false
  name: TagName
  nameWithType: HtmlElement.TagName
