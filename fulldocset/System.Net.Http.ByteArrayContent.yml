### YamlMime:ManagedReference
items:
- uid: System.Net.Http.ByteArrayContent
  id: ByteArrayContent
  children:
  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  - System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  - System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  - System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  name: ByteArrayContent
  nameWithType: ByteArrayContent
  fullName: System.Net.Http.ByteArrayContent
  type: Class
  summary: "Itt HTTP content egy bájttömböt alapján."
  syntax:
    content: 'public class ByteArrayContent : System.Net.Http.HttpContent'
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.Dispose(System.Boolean)
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: ByteArrayContent(Byte[])
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[])
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref> osztály."
  syntax:
    content: public ByteArrayContent (byte[] content);
    parameters:
    - id: content
      type: System.Byte[]
      description: "A tartalom inicializáló a <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: ByteArrayContent(Byte[],Int32,Int32)
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref> osztály."
  remarks: "Csak a meghatározott tartományon belül a `offset` paraméter és a `count` paraméterrel tartalmat. Szintaxis"
  syntax:
    content: public ByteArrayContent (byte[] content, int offset, int count);
    parameters:
    - id: content
      type: System.Byte[]
      description: "A tartalom inicializáló a <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
    - id: offset
      type: System.Int32
      description: "Megadja, hogy a memória, a a `content` inicializáló paraméter a <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
    - id: count
      type: System.Int32
      description: "A bájtok száma a `content` kezdve a `offset` inicializáló paraméter a <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>content</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A <code> offset </code> paraméternek nullánál kisebb.       – vagy – a <code> offset </code> paraméter által megadott tartalom hossza meghaladja a <code> content </code> paraméter.       – vagy – a <code> count  </code> paraméternek nullánál kisebb.       – vagy – a <code> count </code> paraméter által megadott tartalom hossza meghaladja a <code> content </code> paraméter - csökkentve a <code> offset </code> paraméter."
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  id: CreateContentReadStreamAsync
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: CreateContentReadStreamAsync()
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Hozza létre a tartalom HTTP-adatfolyam, ahol egy aszinkron művelet, amelynek biztonsági tárolására olvasásra memóriát a <xref href=&quot;System.Net.Http.ByteArrayContent&quot;> </xref>."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, a tartalom-adatfolyam összes létrehozása után.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: protected override System.Threading.Tasks.Task<System.IO.Stream> CreateContentReadStreamAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Szerializálni, és írja be a konstruktort az egy tartalom HTTP-adatfolyam, mint egy aszinkron művelet a megadott bájttömb."
  remarks: "Ez a művelet nem blokkolja. Ha a visszaadott <xref:System.Threading.Tasks.Task>objektum befejeződött, a teljes bájttömb van írva a `stream` paraméter.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: protected override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A cél adatfolyam."
    - id: context
      type: System.Net.TransportContext
      description: "A szállítási csatorna kötő jogkivonat például kapcsolatos információkat. Ez a paraméter lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.ByteArrayContent.SerializeToStreamAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.ByteArrayContent
  langs:
  - csharp
  name: TryComputeLength(Int64)
  nameWithType: ByteArrayContent.TryComputeLength(Int64)
  fullName: System.Net.Http.ByteArrayContent.TryComputeLength(Int64)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Meghatározza, hogy van-e egy bájttömbben érvényes hossza (bájt)."
  remarks: "A TryComputeLength módszer lehetővé teszi a származtatott tartalomtípus a tartalom hossza kiszámításához. Ez akkor hasznos, a tartalomtípusokat, amelyek könnyen kiszámíthatja a tartalom hosszúságát. Ha a tartalom hossza nem lehetséges, vagy drága (igényelnének a rendszer a teljes tartalma, ahol a szerializálási volna költséges vagy igényelnek nagy mennyiségű memóriát lefoglalni a rendszer meghajtóin) számítástechnikai, ez a módszer térhet vissza `false`. Ez a metódus visszatérési értéke `false`, ez azt jelenti, hogy szükség van a darabolásos átviteli vagy a tartalom kell beolvasni pufferelt előtt küldi el a kiszolgálón.       Ez a metódus mindig visszaadott `true` <xref:System.Net.Http.ByteArrayContent>.</xref:System.Net.Http.ByteArrayContent>"
  syntax:
    content: protected override bool TryComputeLength (out long length);
    parameters:
    - id: length
      type: System.Int64
      description: "A bájttömb bájtokban hossza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> length </code> nem egy érvényes hosszúságú; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.ByteArrayContent.TryComputeLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Http.HttpContent
  isExternal: false
  name: System.Net.Http.HttpContent
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[])
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent(Byte[])
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[])
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent(Byte[],Int32,Int32)
  nameWithType: ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
  fullName: System.Net.Http.ByteArrayContent.ByteArrayContent(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: CreateContentReadStreamAsync()
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync()
  fullName: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync()
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.IO.Stream>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: SerializeToStreamAsync(Stream,TransportContext)
  nameWithType: ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
  fullName: System.Net.Http.ByteArrayContent.SerializeToStreamAsync(Stream,TransportContext)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: TryComputeLength(Int64)
  nameWithType: ByteArrayContent.TryComputeLength(Int64)
  fullName: System.Net.Http.ByteArrayContent.TryComputeLength(Int64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.ByteArrayContent.#ctor*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: ByteArrayContent
  nameWithType: ByteArrayContent.ByteArrayContent
- uid: System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: CreateContentReadStreamAsync
  nameWithType: ByteArrayContent.CreateContentReadStreamAsync
- uid: System.Net.Http.ByteArrayContent.SerializeToStreamAsync*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: SerializeToStreamAsync
  nameWithType: ByteArrayContent.SerializeToStreamAsync
- uid: System.Net.Http.ByteArrayContent.TryComputeLength*
  parent: System.Net.Http.ByteArrayContent
  isExternal: false
  name: TryComputeLength
  nameWithType: ByteArrayContent.TryComputeLength
