### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectoryEntry
  id: DirectoryEntry
  children:
  - System.DirectoryServices.DirectoryEntry.#ctor
  - System.DirectoryServices.DirectoryEntry.#ctor(System.Object)
  - System.DirectoryServices.DirectoryEntry.#ctor(System.String)
  - System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)
  - System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)
  - System.DirectoryServices.DirectoryEntry.AuthenticationType
  - System.DirectoryServices.DirectoryEntry.Children
  - System.DirectoryServices.DirectoryEntry.Close
  - System.DirectoryServices.DirectoryEntry.CommitChanges
  - System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectoryEntry.DeleteTree
  - System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)
  - System.DirectoryServices.DirectoryEntry.Exists(System.String)
  - System.DirectoryServices.DirectoryEntry.Guid
  - System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])
  - System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)
  - System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])
  - System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectoryEntry.Name
  - System.DirectoryServices.DirectoryEntry.NativeGuid
  - System.DirectoryServices.DirectoryEntry.NativeObject
  - System.DirectoryServices.DirectoryEntry.ObjectSecurity
  - System.DirectoryServices.DirectoryEntry.Options
  - System.DirectoryServices.DirectoryEntry.Parent
  - System.DirectoryServices.DirectoryEntry.Password
  - System.DirectoryServices.DirectoryEntry.Path
  - System.DirectoryServices.DirectoryEntry.Properties
  - System.DirectoryServices.DirectoryEntry.RefreshCache
  - System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])
  - System.DirectoryServices.DirectoryEntry.Rename(System.String)
  - System.DirectoryServices.DirectoryEntry.SchemaClassName
  - System.DirectoryServices.DirectoryEntry.SchemaEntry
  - System.DirectoryServices.DirectoryEntry.UsePropertyCache
  - System.DirectoryServices.DirectoryEntry.Username
  langs:
  - csharp
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
  type: Class
  summary: "A DirectoryEntry osztály egy csomópont vagy egy objektumot az Active Directory tartományi szolgáltatások hierarchia magában foglalja."
  remarks: "Ez az osztály használata kötése objektumok, vagy olvasási és attribútumok frissítése. DirectoryEntry, segítőosztályok, valamint támogatja az életciklus-kezelési és navigációs módszerek. Ezek közé tartozik a létrehozása, törlése, átnevezése, áthelyezése egy alárendelt csomópont és gyermekei számbavétele. A csomópont módosítása után véglegesíteni kell ahhoz, hogy a fa mentheti a módosításokat. További információkért lásd: a <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>tulajdonság.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>       DirectoryEntry séma bejegyzések rendszeres bejegyzést, és néhány, de nem minden információ eléréséhez használható.       Az Active Directory tartományi szolgáltatások hierarchia akár több ezer csomópontot tartalmaz. Minden csomópont egy objektumot, például egy hálózati vagy egy felhasználói tartományban jelöli. A vállalati hálózatok folyamatosan akkor módosítható, mert az új alkalmazottak menjenek és objektumok, például hálózati nyomtatók és a számítógépek adhatók hozzá. Active Directory Service Interfaces (ADSI) technológia szoftveresen ezek az objektumok hozzáadása a könyvtárfában módszereket biztosítja.       Hozzon létre egy könyvtárat a hierarchiában, használja a <xref:System.DirectoryServices.DirectoryEntry.Children%2A>tulajdonság.</xref:System.DirectoryServices.DirectoryEntry.Children%2A> A <xref:System.DirectoryServices.DirectoryEntry.Children%2A>tulajdonság gyűjteménye, amely egy <xref:System.DirectoryServices.DirectoryEntries.Add%2A>módszer, amelyen keresztül, egy csomópontot a gyűjteményhez hozzáadni kívánt közvetlenül alatt a szülő csomópontban, amely jelenleg kötve.</xref:System.DirectoryServices.DirectoryEntries.Add%2A> </xref:System.DirectoryServices.DirectoryEntry.Children%2A> Amikor csomópontot ad hozzá a gyűjteményhez, meg kell adnia egy nevet az új csomópont, és egy séma-sablon, a csomópont társítani kívánt nevét. Például előfordulhat, hogy használandó séma &quot;Számítógép&quot; című új számítógépek hozzáadása a hierarchiában.       Ez az osztály is tartalmaz attribútum gyorsítótárazás, amelyek hasznosak lehetnek a hálózati forgalom optimalizálása. Attribútum-gyorsítótárazás használatát ismerteti a <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>tulajdonság.</xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>       Az Active Directory tartományi szolgáltatások szolgáltatók bármelyikét a DirectoryEntry kapcsolódó osztályok használható. Az aktuális szolgáltatók Internet Information Services (IIS), a Lightweight Directory Access Protocol (LDAP), a Novell NetWare Directory Service (NDS) és a Windows NT.      > [!NOTE] > Feltételezzük, hogy rendelkezik-e ez az osztály használata előtt az Active Directory tartományi szolgáltatások általános ismertetése. További információkért lásd: a <xref:System.DirectoryServices?displayProperty=fullName>névtér áttekintése.</xref:System.DirectoryServices?displayProperty=fullName>"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.DirectoryServices.Design.DirectoryEntryConverter))]

      [System.DirectoryServices.DSDescription("DirectoryEntryDesc")]

      public class DirectoryEntry : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: DirectoryEntry()
  nameWithType: DirectoryEntry.DirectoryEntry()
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> osztály."
  syntax:
    content: public DirectoryEntry ();
    parameters: []
  overload: System.DirectoryServices.DirectoryEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: DirectoryEntry(Object)
  nameWithType: DirectoryEntry.DirectoryEntry(Object)
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(Object)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> osztály, amely a megadott natív Active Directory tartományi szolgáltatások objektumhoz van kötve."
  remarks: "Ez a konstruktor lehetővé teszi, hogy a program a metódusok és tulajdonságainak a <xref:System.DirectoryServices.DirectoryEntry>osztály, amely megvalósítja a IADs felületet natív API-n keresztül natív Active Directory tartományi szolgáltatások-objektum.</xref:System.DirectoryServices.DirectoryEntry> A IADs felület kapcsolatos további információkért lásd: a témakör [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) az MSDN-könyvtárban, [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public DirectoryEntry (object adsObject);
    parameters:
    - id: adsObject
      type: System.Object
      description: "A natív Active Directory tartományi szolgáltatások objektum lehet kötést létrehozni a neve."
  overload: System.DirectoryServices.DirectoryEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: DirectoryEntry(String)
  nameWithType: DirectoryEntry.DirectoryEntry(String)
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> osztály, amely ehhez a példányhoz kötve van a csomópont az Active Directory tartományi szolgáltatásokban a megadott elérési úton található."
  remarks: ''
  example:
  - "The following example binds a <xref:System.DirectoryServices.DirectoryEntry> object to the directory entry at the specified path, and displays the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> property of each child entry that is specified by the node's <xref:System.DirectoryServices.DirectoryEntry.Children%2A> property.  \n  \n```vb  \nPublic Class PrintChildren  \n  \n    'Entry point which delegates to C-style main Private Function.  \n    Public Overloads Shared Sub Main()  \n        Main(System.Environment.GetCommandLineArgs())  \n    End Sub  \n  \n    Overloads Public Shared Sub Main(args() As String)  \n        Dim objDE As DirectoryEntry  \n        Dim strPath As String = \"LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \n        If args.Length > 0 Then  \n            strPath = args(1)  \n        End If   \n        ' Create a new DirectoryEntry with the given path.  \n        objDE = New DirectoryEntry(strPath)  \n  \n        Dim objChildDE As DirectoryEntry  \n        For Each objChildDE In  objDE.Children  \n            Console.WriteLine(objChildDE.Path)  \n        Next objChildDE  \n    End Sub 'Main  \nEnd Class 'PrintChildren  \n  \n```  \n  \n```c#  \npublic class PrintChildren{  \n   public static void Main(String[] args)  \n   {  \n      DirectoryEntry objDE;  \n      String strPath=\"LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n      if(args.Length>0)strPath=args[1];  \n  \n      // Create a new DirectoryEntry with the given path.  \n      objDE=new DirectoryEntry(strPath);  \n  \n      foreach(DirectoryEntry objChildDE in objDE.Children)  \n        Console.WriteLine(objChildDE.Path);  \n   }  \n }  \n  \n```  \n  \n```cpp#  \nint main()  \n{  \n    String^ args[] = Environment::GetCommandLineArgs();  \n    DirectoryEntry^ objDE;  \n    String^ strPath = \"LDAP://DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n    if(args->Length>1)  \n    {  \n        strPath=args[1];  \n    }  \n  \n    // Create a new DirectoryEntry with the given path.  \n    objDE = gcnew DirectoryEntry(strPath);  \n  \n    System::Collections::IEnumerator^ enum0 = objDE->Children->GetEnumerator();  \n    while (enum0->MoveNext())  \n    {  \n        DirectoryEntry^ objChildDE = safe_cast<DirectoryEntry^>(enum0->Current);  \n        Console::WriteLine(objChildDE->Path);  \n    }  \n}  \n  \n```"
  syntax:
    content: public DirectoryEntry (string path);
    parameters:
    - id: path
      type: System.String
      description: "Az elérési útja, ahol a címtárhoz való kötéshez a DirectoryEntry elemre feloldani a. A <xref:System.DirectoryServices.DirectoryEntry.Path*>ezt az értéket a tulajdonság az inicializáláskor felvesz.</xref:System.DirectoryServices.DirectoryEntry.Path*>"
  overload: System.DirectoryServices.DirectoryEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: DirectoryEntry(String,String,String)
  nameWithType: DirectoryEntry.DirectoryEntry(String,String,String)
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String,String,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> osztály."
  syntax:
    content: public DirectoryEntry (string path, string username, string password);
    parameters:
    - id: path
      type: System.String
      description: "Az elérési útját a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>. A <xref:System.DirectoryServices.DirectoryEntry.Path*>ezt az értéket a tulajdonság az inicializáláskor felvesz.</xref:System.DirectoryServices.DirectoryEntry.Path*>"
    - id: username
      type: System.String
      description: "Az ügyfél hitelesítéséhez használt felhasználónév. A <xref:System.DirectoryServices.DirectoryEntry.Username*>ezt az értéket a tulajdonság az inicializáláskor felvesz.</xref:System.DirectoryServices.DirectoryEntry.Username*>"
    - id: password
      type: System.String
      description: "Az ügyfél hitelesítéséhez használt jelszót. A <xref:System.DirectoryServices.DirectoryEntry.Password*>ezt az értéket a tulajdonság az inicializáláskor felvesz.</xref:System.DirectoryServices.DirectoryEntry.Password*>"
  overload: System.DirectoryServices.DirectoryEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)
  id: '#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)'
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: DirectoryEntry(String,String,String,AuthenticationTypes)
  nameWithType: DirectoryEntry.DirectoryEntry(String,String,String,AuthenticationTypes)
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String,String,String,AuthenticationTypes)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> osztály."
  syntax:
    content: public DirectoryEntry (string path, string username, string password, System.DirectoryServices.AuthenticationTypes authenticationType);
    parameters:
    - id: path
      type: System.String
      description: "Az elérési útját a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>. A <xref:System.DirectoryServices.DirectoryEntry.Path*>ezt az értéket a tulajdonság az inicializáláskor felvesz.</xref:System.DirectoryServices.DirectoryEntry.Path*>"
    - id: username
      type: System.String
      description: "Az ügyfél hitelesítéséhez használt felhasználónév. A <xref:System.DirectoryServices.DirectoryEntry.Username*>ezt az értéket a tulajdonság az inicializáláskor felvesz.</xref:System.DirectoryServices.DirectoryEntry.Username*>"
    - id: password
      type: System.String
      description: "Az ügyfél hitelesítéséhez használt jelszót. A <xref:System.DirectoryServices.DirectoryEntry.Password*>ezt az értéket a tulajdonság az inicializáláskor felvesz.</xref:System.DirectoryServices.DirectoryEntry.Password*>"
    - id: authenticationType
      type: System.DirectoryServices.AuthenticationTypes
      description: "Egy a <xref href=&quot;System.DirectoryServices.AuthenticationTypes&quot;> </xref> értékeket. A <xref:System.DirectoryServices.DirectoryEntry.AuthenticationType*>ezt az értéket a tulajdonság az inicializáláskor felvesz.</xref:System.DirectoryServices.DirectoryEntry.AuthenticationType*>"
  overload: System.DirectoryServices.DirectoryEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.AuthenticationType
  id: AuthenticationType
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: DirectoryEntry.AuthenticationType
  fullName: System.DirectoryServices.DirectoryEntry.AuthenticationType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi vagy beállítja a hitelesítés típusát."
  remarks: "A [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], az alapértelmezett érték: <xref:System.DirectoryServices.AuthenticationTypes>.</xref:System.DirectoryServices.AuthenticationTypes> Kezdve [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], az alapértelmezett érték: <xref:System.DirectoryServices.AuthenticationTypes>.</xref:System.DirectoryServices.AuthenticationTypes>"
  syntax:
    content: public System.DirectoryServices.AuthenticationTypes AuthenticationType { get; set; }
    return:
      type: System.DirectoryServices.AuthenticationTypes
      description: "Egy a <xref href=&quot;System.DirectoryServices.AuthenticationTypes&quot;> </xref> értékeket."
  overload: System.DirectoryServices.DirectoryEntry.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Children
  id: Children
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Children
  nameWithType: DirectoryEntry.Children
  fullName: System.DirectoryServices.DirectoryEntry.Children
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A gyermek ennek a csomópontnak bejegyzések lekérdezi az Active Directory tartományi szolgáltatások hierarchia."
  remarks: "A gyermek a rendszer a csomópont csak a közvetlen gyermekeit.       Ez a tulajdonság használatával található, beolvasása, vagy hozzon létre egy könyvtárat a hierarchiában. Ez a tulajdonság gyűjteménye, amely, valamint a szokásos iterációs képességeket biztosít egy <xref:System.DirectoryServices.DirectoryEntries.Add%2A>metódus, amelyen keresztül, egy csomópontot a gyűjteményhez hozzáadni kívánt közvetlenül alatt a szülő csomópontban, amely jelenleg kötve.</xref:System.DirectoryServices.DirectoryEntries.Add%2A> Amikor csomópontot ad hozzá a gyűjteményhez, meg kell adnia egy nevet az új csomópont, és egy séma-sablon, a csomópont társítani kívánt nevét. Például előfordulhat, hogy használandó séma &quot;Számítógép&quot; című új számítógépek hozzáadása a hierarchiában.      > [!NOTE] > Alapértelmezés szerint módosításai helyi gyorsítótárhoz. Ha módosít, vagy vegye fel a csomópont, meg kell hívnia a <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>metódus ahhoz, hogy a fa menthetők a módosítások véglegesítéséhez.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> Ha meghívja a <xref:System.DirectoryServices.DirectoryEntry.RefreshCache>hívása előtt <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, a tulajdonság-gyorsítótár a nem véglegesített módosításokat el fog veszni.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> </xref:System.DirectoryServices.DirectoryEntry.RefreshCache> További információkért lásd: a <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>és <xref:System.DirectoryServices.DirectoryEntry.RefreshCache>módszerek, és a <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>tulajdonság.</xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A> </xref:System.DirectoryServices.DirectoryEntry.RefreshCache> </xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>"
  syntax:
    content: public System.DirectoryServices.DirectoryEntries Children { get; }
    return:
      type: System.DirectoryServices.DirectoryEntries
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntries&quot;> </xref> ennek a csomópontnak az Active Directory tartományi szolgáltatások hierarchia gyermek bejegyzéseket tartalmazó objektum."
  overload: System.DirectoryServices.DirectoryEntry.Children*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Close
  id: Close
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Close()
  nameWithType: DirectoryEntry.Close()
  fullName: System.DirectoryServices.DirectoryEntry.Close()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Bezárja a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektumra, és kiadja a rendszererőforrások társított ezt az összetevőt."
  remarks: "Ez a metódus nem kezelt rendszererőforrásokat, kibocsátási szemétgyűjtés várakozás nélkül meghívható.       Zárja be, semmilyen hívását követően a <xref:System.DirectoryServices.DirectoryEntry>Kivételek lehet emelni.</xref:System.DirectoryServices.DirectoryEntry>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.DirectoryServices.DirectoryEntry.Close*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.CommitChanges
  id: CommitChanges
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: CommitChanges()
  nameWithType: DirectoryEntry.CommitChanges()
  fullName: System.DirectoryServices.DirectoryEntry.CommitChanges()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A következő könyvtárbejegyzés az alapul szolgáló könyvtár áruház végrehajtott módosítások mentése."
  remarks: "Alapértelmezés szerint tulajdonságok módosul helyileg a gyorsítótárba, és tulajdonságértékeket olvasható gyorsítótárba kerüljenek-e az első olvasott. További információkért lásd: <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>.</xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>       A gyorsítótár módosításai közé tartoznak a tulajdonságainak módosítását, valamint a hívások <xref:System.DirectoryServices.DirectoryEntries.Add%2A>(Ha ez az újonnan létrehozott bejegyzést).</xref:System.DirectoryServices.DirectoryEntries.Add%2A>      > [!CAUTION] > Hívásakor <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>CommitChanges, mielőtt a tulajdonság-gyorsítótár a nem véglegesített módosításokat el fog veszni.</xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>      ## Biztonság – használja a <xref:System.DirectoryServices.DirectoryServicesPermission>osztályt, olvasása, írása, törlése, módosítása és az Active Directory tartományi szolgáltatások hierarchia ad hozzá.</xref:System.DirectoryServices.DirectoryServicesPermission> Kapcsolódó számbavételi: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess>.</xref:System.DirectoryServices.DirectoryServicesPermissionAccess>"
  syntax:
    content: public void CommitChanges ();
    parameters: []
  overload: System.DirectoryServices.DirectoryEntry.CommitChanges*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)
  id: CopyTo(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: CopyTo(DirectoryEntry)
  nameWithType: DirectoryEntry.CopyTo(DirectoryEntry)
  fullName: System.DirectoryServices.DirectoryEntry.CopyTo(DirectoryEntry)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ez a bejegyzés másolatát hozza létre a megadott szülő gyermekeként."
  remarks: "Ha <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>van `true`, hívja <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>az állandó másolat új objektumra.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> </xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>       A Lightweight Directory Access Protocol (LDAP) szolgáltató jelenleg nem támogatja a CopyTo metódusának."
  syntax:
    content: public System.DirectoryServices.DirectoryEntry CopyTo (System.DirectoryServices.DirectoryEntry newParent);
    parameters:
    - id: newParent
      type: System.DirectoryServices.DirectoryEntry
      description: "Megkülönböztető nevét, a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum, amely a másolat létrehozása folyamatban van a fölérendelt."
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> az új szülőnek gyermekeként Ez a bejegyzés példányát képviselő objektum."
  overload: System.DirectoryServices.DirectoryEntry.CopyTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A megadott <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> nincs egy tárolót."
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)
  id: CopyTo(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: CopyTo(DirectoryEntry,String)
  nameWithType: DirectoryEntry.CopyTo(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectoryEntry.CopyTo(DirectoryEntry,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Másolat készítése a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum, a megadott szülő gyermekeként <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum, a megadott új néven."
  remarks: "A Lightweight Directory Access Protocol (LDAP) szolgáltató jelenleg nem támogatja ezt a módszert.       Ha <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>van `true`, hívja <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>az állandó másolat új objektumra.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> </xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry CopyTo (System.DirectoryServices.DirectoryEntry newParent, string newName);
    parameters:
    - id: newParent
      type: System.DirectoryServices.DirectoryEntry
      description: "A megkülönböztető a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum, amely a másolat létrehozása folyamatban van a fölérendelt."
    - id: newName
      type: System.String
      description: "Ez a bejegyzés példányának neve."
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "Ez a bejegyzés a megadott szülő gyermekeként átnevezett másolatát."
  overload: System.DirectoryServices.DirectoryEntry.CopyTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A megadott <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum nincs a tároló."
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.DeleteTree
  id: DeleteTree
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: DeleteTree()
  nameWithType: DirectoryEntry.DeleteTree()
  fullName: System.DirectoryServices.DirectoryEntry.DeleteTree()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Törli ezt a bejegyzést, és az ahhoz tartozó teljes részfát a Active Directory tartományi szolgáltatásokban történő."
  remarks: "Az Active Directory Service Interfaces (ADSI) rendszer által megadott szolgáltatót csak a Lightweight Directory Access Protocol (LDAP) jelenleg ezt a műveletet.      > [!CAUTION] > A bejegyzést, és az ahhoz tartozó teljes részfát a Active Directory tartományi szolgáltatásokban történő törlődnek.      ## Biztonság – használata <xref:System.DirectoryServices.DirectoryServicesPermission>a Active Directory tartományi szolgáltatásokban történő tételek törlésére vonatkozó.</xref:System.DirectoryServices.DirectoryServicesPermission> Kapcsolódó számbavételi: <xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=fullName>.</xref:System.DirectoryServices.DirectoryServicesPermissionAccess?displayProperty=fullName>"
  syntax:
    content: public void DeleteTree ();
    parameters: []
  overload: System.DirectoryServices.DirectoryEntry.DeleteTree*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A megadott <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> nincs egy tárolót."
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectoryEntry.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectoryEntry.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Az erőforrások (eltérő memória) által használt megválik az <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>."
  remarks: "Ezt a módszert nevezik nyilvános <xref:System.ComponentModel.Component.Dispose%2A>metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>a védett Dispose metódus meghívja a `disposing` paraméter `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>Elindítja a <xref:System.ComponentModel.Component.Dispose%2A>rendelkező `disposing` beállítása `false`.</xref:System.ComponentModel.Component.Dispose%2A></xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter `true`, ez a módszer kiadott összes erőforrást, amely a felügyelt objektumok tartja fenn, amelyhez a <xref:System.DirectoryServices.DirectoryEntry>objektum hivatkozik.</xref:System.DirectoryServices.DirectoryEntry> Ez a metódus meghívja a <xref:System.ComponentModel.Component.Dispose%2A>minden hivatkozott metódusa.</xref:System.ComponentModel.Component.Dispose%2A>       További információ a <xref:System.ComponentModel.Component.Dispose%2A>és <xref:System.Object.Finalize%2A>módszerek, lásd: [véglegesítése metódus felülbírálása](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.DirectoryServices.DirectoryEntry.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Exists(System.String)
  id: Exists(System.String)
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Exists(String)
  nameWithType: DirectoryEntry.Exists(String)
  fullName: System.DirectoryServices.DirectoryEntry.Exists(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Azt határozza meg, ha a megadott elérési út egy bejegyzésnek tényleges a címtárszolgáltatásban."
  remarks: ''
  example:
  - "The following example takes one argument and determines whether the path corresponds to a valid <xref:System.DirectoryServices.DirectoryEntry>.  \n  \n```vb  \nDim myADSPath As String = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \n' Determine whether the given path is correct for the DirectoryEntry.  \nIf DirectoryEntry.Exists(myADSPath) Then  \n   Console.WriteLine(\"The path {0} is valid\",myADSPath)  \nElse  \n   Console.WriteLine(\"The path {0} is invalid\",myADSPath)  \nEnd If  \n  \n```  \n  \n```c#  \nstring myADSPath =\"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Determine whether the given path is correct for the DirectoryEntry.  \nif (DirectoryEntry.Exists(myADSPath))  \n{  \n    Console.WriteLine(\"The path {0} is valid\",myADSPath);  \n}  \n    else  \n{  \n    Console.WriteLine(\"The path {0} is invalid\",myADSPath);  \n}  \n  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n// Determine whether the given path is correct for the DirectoryEntry.  \nif (DirectoryEntry::Exists(myADSPath))   \n{  \n    Console::WriteLine(\"The path {0} is valid\", myADSPath);  \n}   \nelse   \n{  \n    Console::WriteLine(\"The path {0} is invalid\", myADSPath);  \n}  \n  \n```"
  syntax:
    content: public static bool Exists (string path);
    parameters:
    - id: path
      type: System.String
      description: "A bejegyzés ellenőrzése elérési útját."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott elérési út érvényes bejegyzés a címtárszolgáltatásban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectoryEntry.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Guid
  id: Guid
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Guid
  nameWithType: DirectoryEntry.Guid
  fullName: System.DirectoryServices.DirectoryEntry.Guid
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a GUID azonosítója a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>."
  remarks: "Az objektum az Active Directory tartományi szolgáltatásokban való kötés, használja a <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A>tulajdonság.</xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A>"
  example:
  - "The following example demonstrates the Guid and <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and displays its Guid and <xref:System.DirectoryServices.DirectoryEntry.NativeGuid%2A> properties.  \n  \n```vb  \nDim myADSPath As [String] = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \n  \n' Display the Guid and NativeGuid.  \nConsole.WriteLine(\"The GUID of the ADS object:\" + myDirectoryEntry.Guid.ToString)  \nConsole.WriteLine(\"The Native GUID of the ADS\" + \"object:\" + myDirectoryEntry.NativeGuid)  \n  \n```  \n  \n```c#  \nString myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \nDirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  \n  \n// Display the Guid and NativeGuid.  \nConsole.WriteLine(\"The GUID of the ADS object:\"+  \n                  myDirectoryEntry.Guid);  \nConsole.WriteLine(\"The Native GUID of the ADS\"+  \n                  \"object:\"+myDirectoryEntry.NativeGuid);  \n  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  \n  \n// Display the Guid and NativeGuid.  \nConsole::WriteLine(\"The GUID of the ADS object: {0}\", myDirectoryEntry->Guid);  \nConsole::WriteLine(\"The Native GUID of the ADS object: {0}\",  \n                   myDirectoryEntry->NativeGuid);  \n  \n```"
  syntax:
    content: public Guid Guid { get; }
    return:
      type: System.Guid
      description: "A <xref:System.Guid>képviselő GUID-struktúra a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>.</xref:System.Guid>"
  overload: System.DirectoryServices.DirectoryEntry.Guid*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])
  id: Invoke(System.String,System.Object[])
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Invoke(String,Object[])
  nameWithType: DirectoryEntry.Invoke(String,Object[])
  fullName: System.DirectoryServices.DirectoryEntry.Invoke(String,Object[])
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A metódus meghívja az Active Directory tartományi szolgáltatások natív objektum."
  remarks: "Ha az eredményül kapott értéket a natív metódus valósítja meg a IADs felületén, a megfelelő <xref:System.DirectoryServices.DirectoryEntry>adja vissza.</xref:System.DirectoryServices.DirectoryEntry> A IADs felület kapcsolatos további információkért lásd: a témakör [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) az MSDN-könyvtárban, [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp)."
  syntax:
    content: public object Invoke (string methodName, object[] args);
    parameters:
    - id: methodName
      type: System.String
      description: "A meghívni kívánt metódus nevét."
    - id: args
      type: System.Object[]
      description: "Típusú tömb <xref:System.Object>objektum, amely tartalmazza a meghívni kívánt metódus argumentumaként.</xref:System.Object>"
    return:
      type: System.Object
      description: "A meghívott metódus visszatérési értéke."
  overload: System.DirectoryServices.DirectoryEntry.Invoke*
  exceptions:
  - type: System.DirectoryServices.DirectoryServicesCOMException
    commentId: T:System.DirectoryServices.DirectoryServicesCOMException
    description: "A natív metódus kivételt váltott ki a <xref:System.Runtime.InteropServices.COMException>kivétel.</xref:System.Runtime.InteropServices.COMException>"
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "A natív metódus kivételt váltott ki a <xref:System.Reflection.TargetInvocationException>kivétel.</xref:System.Reflection.TargetInvocationException> A <xref:System.Exception.InnerException*>tulajdonsága tartalmazza a <xref:System.Runtime.InteropServices.COMException>, amely tartalmazza a tényleges hiba történt kivétel.</xref:System.Runtime.InteropServices.COMException> </xref:System.Exception.InnerException*>"
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)
  id: InvokeGet(System.String)
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: InvokeGet(String)
  nameWithType: DirectoryEntry.InvokeGet(String)
  fullName: System.DirectoryServices.DirectoryEntry.InvokeGet(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A tulajdonság lekérése az Active Directory tartományi szolgáltatások natív objektum."
  remarks: "Ez a metódus nem használható. A <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>tulajdonság tulajdonságainak eléréséhez használandó a <xref:System.DirectoryServices.DirectoryEntry>objektum.</xref:System.DirectoryServices.DirectoryEntry> </xref:System.DirectoryServices.DirectoryEntry.Properties%2A>"
  syntax:
    content: public object InvokeGet (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "A tulajdonság használatával beolvassa a neve."
    return:
      type: System.Object
      description: "A kért tulajdonság képviselő objektum."
  overload: System.DirectoryServices.DirectoryEntry.InvokeGet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])
  id: InvokeSet(System.String,System.Object[])
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: InvokeSet(String,Object[])
  nameWithType: DirectoryEntry.InvokeSet(String,Object[])
  fullName: System.DirectoryServices.DirectoryEntry.InvokeSet(String,Object[])
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Beállítja az Active Directory tartományi szolgáltatások natív objektum."
  remarks: "Ez a metódus nem használható. A <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>tulajdonság tulajdonságainak eléréséhez használandó a <xref:System.DirectoryServices.DirectoryEntry>objektum.</xref:System.DirectoryServices.DirectoryEntry> </xref:System.DirectoryServices.DirectoryEntry.Properties%2A>"
  syntax:
    content: public void InvokeSet (string propertyName, object[] args);
    parameters:
    - id: propertyName
      type: System.String
      description: "A beállítandó tulajdonság nevét."
    - id: args
      type: System.Object[]
      description: "Az Active Directory tartományi szolgáltatások objektumon."
  overload: System.DirectoryServices.DirectoryEntry.InvokeSet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)
  id: MoveTo(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: MoveTo(DirectoryEntry)
  nameWithType: DirectoryEntry.MoveTo(DirectoryEntry)
  fullName: System.DirectoryServices.DirectoryEntry.MoveTo(DirectoryEntry)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Áthelyezi a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> a megadott szülő objektumot."
  remarks: "Ha <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>van `true`, hívja az <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>metódus olyan objektumon, a lépés elvégzéséhez állandó új.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> </xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>"
  syntax:
    content: public void MoveTo (System.DirectoryServices.DirectoryEntry newParent);
    parameters:
    - id: newParent
      type: System.DirectoryServices.DirectoryEntry
      description: "A szülő, amelyhez ez a bejegyzés áthelyezni kívánt."
  overload: System.DirectoryServices.DirectoryEntry.MoveTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A megadott <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> nincs egy tárolót."
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)
  id: MoveTo(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: MoveTo(DirectoryEntry,String)
  nameWithType: DirectoryEntry.MoveTo(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectoryEntry.MoveTo(DirectoryEntry,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Áthelyezi a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> a megadott szülő objektumot, és módosítja a nevét a megadott érték."
  remarks: "Ha <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>van `true`, hívja <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>az új objektum állandó a lépés elvégzéséhez.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> </xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>"
  syntax:
    content: public void MoveTo (System.DirectoryServices.DirectoryEntry newParent, string newName);
    parameters:
    - id: newParent
      type: System.DirectoryServices.DirectoryEntry
      description: "A szülő, amelyhez ez a bejegyzés áthelyezni kívánt."
    - id: newName
      type: System.String
      description: "Ez a bejegyzés új neve."
  overload: System.DirectoryServices.DirectoryEntry.MoveTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A megadott <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> nincs egy tárolót."
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Name
  id: Name
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Name
  nameWithType: DirectoryEntry.Name
  fullName: System.DirectoryServices.DirectoryEntry.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi az objektum neve, mert az alapul szolgáló címtárszolgáltatás nevű."
  remarks: "Ez nevével, jelszavat <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>, ez a bejegyzés megkülönbözteti a testvérei, és az egyes tárolókban testvérei egyedinek kell lennie.</xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A>"
  example:
  - "The following example creates a <xref:System.DirectoryServices.DirectoryEntry> for the node in the Active Directory Domain Services. It then displays the Name and <xref:System.DirectoryServices.DirectoryEntry.Path%2A> properties of its child nodes.  \n  \n```vb  \nDim myADSPath As String = \"LDAP://onecity/CN=Users,DC=onecity,  \n           _DC=corp,DC=fabrikam,DC=com\"  \nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \n  \nConsole.WriteLine(\"DirectoryEntry Name :\" + myDirectoryEntry.Name)  \nConsole.WriteLine(ControlChars.NewLine _  \n        + \"The child entries for this node in the Active Directory Domain Services hierarchy\")  \n  \nDim myDirectoryEntryChild As DirectoryEntry  \nFor Each myDirectoryEntryChild In  myDirectoryEntry.Children  \n   Console.WriteLine(myDirectoryEntryChild.Path)  \nNext myDirectoryEntryChild  \n```  \n  \n```c#  \nString myADSPath = \"LDAP://onecity/CN=Users,  \n             DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \nDirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  \n  \nConsole.WriteLine(\"DirectoryEntry Name :\"+ myDirectoryEntry.Name);  \nConsole.WriteLine(\"\\nThe child entries for this node \"+  \n   \"in the Active Directory Domain Services hierarchy\");  \n  \nforeach(DirectoryEntry myDirectoryEntryChild in  \n   myDirectoryEntry.Children)  \n{  \n   Console.WriteLine(myDirectoryEntryChild.Path);  \n}  \n  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  \n  \nConsole::WriteLine(\"DirectoryEntry Name : {0}\", myDirectoryEntry->Name);  \nConsole::WriteLine(\"\\nThe child entries for this node in the Active Directory Domain Services hierarchy\");  \n  \nCollections::IEnumerator^ myEnumerator = myDirectoryEntry->Children->GetEnumerator();  \nwhile (myEnumerator->MoveNext())   \n{  \n    DirectoryEntry^ myDirectoryEntryChild = safe_cast<DirectoryEntry^>(myEnumerator->Current);  \n    Console::WriteLine(myDirectoryEntryChild->Path);  \n}  \n```"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Mivel a mögöttes címtárszolgáltatás nevű objektum neve."
  overload: System.DirectoryServices.DirectoryEntry.Name*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.NativeGuid
  id: NativeGuid
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: NativeGuid
  nameWithType: DirectoryEntry.NativeGuid
  fullName: System.DirectoryServices.DirectoryEntry.NativeGuid
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a GUID azonosítója a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>, a szolgáltató által visszaadott formában."
  remarks: "A NativeGuid tulajdonsággal kötés egy objektumot az Active Directory tartományi szolgáltatásokban.      > [!NOTE] > A Lightweight Directory Access Protocol (LDAP) szolgáltató globálisan egyedi azonosítóját adja vissza egy <xref:System.DirectoryServices.DirectoryEntry>különböző formátumú, mint az Internet Information Services (IIS), a Novell NetWare Directory Server (NDS) és a Windows NT-szolgáltatók.</xref:System.DirectoryServices.DirectoryEntry>"
  example:
  - "The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> and NativeGuid properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and displays its <xref:System.DirectoryServices.DirectoryEntry.Guid%2A> and NativeGuid properties.  \n  \n```vb  \nDim myADSPath As [String] = \"LDAP://onecity/CN=Users,  \n             DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \n  \n' Display the Guid and NativeGuid.  \nConsole.WriteLine(\"The GUID of the ADS object:\" + myDirectoryEntry.Guid.ToString)  \nConsole.WriteLine(\"The Native GUID of the ADS\" + \"object:\" +   \n             myDirectoryEntry.NativeGuid)  \n```  \n  \n```c#  \nString myADSPath = \"LDAP://onecity/CN=Users,  \n             DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \nDirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath);  \n  \n// Display the Guid and NativeGuid.  \nConsole.WriteLine(\"The GUID of the ADS object:\"+  \n                  myDirectoryEntry.Guid);  \nConsole.WriteLine(\"The Native GUID of the ADS\"+  \n                  \"object:\"+myDirectoryEntry.NativeGuid);  \n  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  \n  \n// Display the Guid and NativeGuid.  \nConsole::WriteLine(\"The GUID of the ADS object: {0}\", myDirectoryEntry->Guid));  \nConsole::WriteLine(\"The Native GUID of the ADS object: {0}\",  \n                   myDirectoryEntry->NativeGuid);  \n```"
  syntax:
    content: public string NativeGuid { get; }
    return:
      type: System.String
      description: "A <xref:System.Guid>képviselő GUID-struktúra a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>, mert a szolgáltató által visszaadott.</xref:System.Guid>"
  overload: System.DirectoryServices.DirectoryEntry.NativeGuid*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.NativeObject
  id: NativeObject
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: NativeObject
  nameWithType: DirectoryEntry.NativeObject
  fullName: System.DirectoryServices.DirectoryEntry.NativeObject
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a natív Active Directory Service Interfaces (ADSI) objektum."
  remarks: "Használja ezt a tulajdonságot a natív Active Directory tartományi szolgáltatások objektum, amikor egy COM-illesztőfelület használni kívánt IADs felület implementálását. A IADs felület kapcsolatos további információkért lásd: a témakör [IADs](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp) az MSDN-könyvtárban, [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/iads.asp).       Speciális forgatókönyvek esetén, amelyek nem végezhető el ez az objektum van az <xref:System.DirectoryServices?displayProperty=fullName>csak osztályok.</xref:System.DirectoryServices?displayProperty=fullName> A használatához szüksége a IADs termékcsalád importálása a COM-illesztőfelület egyik, majd ezt a tulajdonságot, hogy a illesztő konvertálni."
  syntax:
    content: public object NativeObject { get; }
    return:
      type: System.Object
      description: "A natív ADSI objektum."
  overload: System.DirectoryServices.DirectoryEntry.NativeObject*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.ObjectSecurity
  id: ObjectSecurity
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: ObjectSecurity
  nameWithType: DirectoryEntry.ObjectSecurity
  fullName: System.DirectoryServices.DirectoryEntry.ObjectSecurity
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi vagy beállítja a bejegyzés a biztonsági leírót."
  syntax:
    content: public System.DirectoryServices.ActiveDirectorySecurity ObjectSecurity { get; set; }
    return:
      type: System.DirectoryServices.ActiveDirectorySecurity
      description: "Egy <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> biztonsági leíróját a következő könyvtárbejegyzés képviselő objektum."
  overload: System.DirectoryServices.DirectoryEntry.ObjectSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Options
  id: Options
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Options
  nameWithType: DirectoryEntry.Options
  fullName: System.DirectoryServices.DirectoryEntry.Options
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a szolgáltatói beállításokat a bejegyzés."
  syntax:
    content: public System.DirectoryServices.DirectoryEntryConfiguration Options { get; }
    return:
      type: System.DirectoryServices.DirectoryEntryConfiguration
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntryConfiguration&quot;> </xref> objektum, amely tartalmazza a szolgáltatói beállításokat a bejegyzés."
  overload: System.DirectoryServices.DirectoryEntry.Options*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Parent
  id: Parent
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Parent
  nameWithType: DirectoryEntry.Parent
  fullName: System.DirectoryServices.DirectoryEntry.Parent
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ez a bejegyzés szülő lekérdezi az Active Directory tartományi szolgáltatások hierarchiában."
  remarks: ''
  example:
  - "The following example searches a given <xref:System.DirectoryServices.DirectoryEntry> and displays the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> and Parent of the result.  \n  \n```vb  \nDim myADSPath As String = _   \n          \"LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \nDim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  \n  \nConsole.WriteLine(\"Parent is :\" + myDirectoryEntry.Parent.Path)  \n  \n```  \n  \n```c#  \nString myADSPath = \"LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \nDirectoryEntry myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \n  \nConsole.WriteLine(\"Parent is :\"+myDirectoryEntry.Parent.Path);  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=user,CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \n  \nConsole::WriteLine(\"Parent is :{0}\", myDirectoryEntry->Parent->Path);  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry Parent { get; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> Ez a bejegyzés szülőjének képviselő objektum."
  overload: System.DirectoryServices.DirectoryEntry.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Password
  id: Password
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Password
  nameWithType: DirectoryEntry.Password
  fullName: System.DirectoryServices.DirectoryEntry.Password
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Beállítja az ügyfél hitelesítéséhez használt jelszót."
  remarks: "Beállíthatja a <xref:System.DirectoryServices.DirectoryEntry.Username%2A>és jelszó tulajdonságokat meg alternatív hitelesítő adatok, amelyekkel hozzáférhet az Active Directory tartományi szolgáltatásokban.</xref:System.DirectoryServices.DirectoryEntry.Username%2A> Bármely más <xref:System.DirectoryServices.DirectoryEntry>objektumok veszi át ezt a példányt (például keresztül <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) automatikusan létrejönnek az azonos más hitelesítő adatokkal.</xref:System.DirectoryServices.DirectoryEntry.Children%2A> </xref:System.DirectoryServices.DirectoryEntry>"
  example:
  - "The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.Username%2A> and Password properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> of all its <xref:System.DirectoryServices.DirectoryEntry.Children%2A>.  \n  \n```vb  \nDim myADSPath As String = _  \n      \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \n  \n' Create an Instance of DirectoryEntry.  \nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \nmyDirectoryEntry.Username = UserName  \nmyDirectoryEntry.Password = SecurelyStoredPassword  \n  \n' Get the Child ADS objects.  \nConsole.WriteLine(\"The Child ADS objects are:\")  \nDim myChildDirectoryEntry As DirectoryEntry  \nFor Each myChildDirectoryEntry In  myDirectoryEntry.Children  \n   Console.WriteLine(myChildDirectoryEntry.Path)  \nNext myChildDirectoryEntry   \n```  \n  \n```c#  \nString myADSPath = \"LDAP://onecity/CN=Users,  \n         DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Create an Instance of DirectoryEntry.  \nDirectoryEntry myDirectoryEntry = new DirectoryEntry(myADSPath);  \nmyDirectoryEntry.Username = UserName;  \nmyDirectoryEntry.Password = SecurelyStoredPassword;  \n  \n// Get the Child ADS objects.  \nConsole.WriteLine(\"The Child ADS objects are:\");  \nforeach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  \n   Console.WriteLine(myChildDirectoryEntry.Path);  \n  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Create an Instance of DirectoryEntry.  \nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath);  \nmyDirectoryEntry->Username = UserName;  \nmyDirectoryEntry->Password = SecurelyStoredPassword;  \n  \n// Get the Child ADS objects.  \nConsole::WriteLine(\"The Child ADS objects are:\");  \nCollections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  \nwhile (myEnum->MoveNext())   \n{  \n    DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>  \n             (myEnum->Current);  \n    Console::WriteLine(myChildDirectoryEntry->Path);  \n}  \n  \n```"
  syntax:
    content: public string Password { set; }
    return:
      type: System.String
      description: "Az ügyfél hitelesítéséhez használt jelszót."
  overload: System.DirectoryServices.DirectoryEntry.Password*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Path
  id: Path
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Path
  nameWithType: DirectoryEntry.Path
  fullName: System.DirectoryServices.DirectoryEntry.Path
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi vagy beállítja azt az elérési út a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>."
  remarks: "The Path property uniquely identifies this entry in a networked environment. This entry can always be retrieved using this Path.  \n  \n Setting the Path retrieves a new entry from the directory store; it does not change the path of the currently bound entry.  \n  \n The classes associated with the <xref:System.DirectoryServices.DirectoryEntry> component can be used with any of the Active Directory Domain Services service providers. Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.  \n  \n> [!NOTE]\n>  The section of the Path that identifies the provider (precedes \"://\") is case-sensitive. For example, \"LDAP://\" or \"WinNT://\".  \n  \n The syntax for the Path property varies according to the provider. Some common scenarios are:  \n  \n WinNT  \n  \n-   Connect to a group on a computer. For example, \"WinNT**://\\<domain name>/\\<computer name>/\\<group name>**\". If you are connecting to a local computer, \"WinNT://**\\<computer name>/\\<group name>**\".  \n  \n-   Connect to a user on a computer. For example, \"WinNT://**\\<domain name>/\\<computer name>/\\<user name>**\". If you are connecting to a local computer, \"WinNT://**\\<computer name>/\\<user name>**\".  \n  \n-   Connect to services on a computer. For example, \"WinNT://**\\<domain name>/\\<computer name>/\\<service name>**\". If you are connecting to a local computer, \"WinNT://**\\<computer name>/\\<service name>**\".  \n  \n-   Discover all domains on the network. For example, \"WinNT:\" The domains can be found by enumerating the children of this entry.  \n  \n LDAP  \n  \n-   Connect to a group in a domain. For example, \"LDAP://CN=\\<group name>, CN =\\<Users>, DC=\\<domain component>, DC=\\<domain component>,...\".  \n  \n-   Connect to a user in a domain. For example, \"LDAP://CN=\\<full user name>, CN=\\<Users>, DC=\\<domain component>, DC=\\<domain component>,...\".  \n  \n-   Connect to computers in a domain. For example, \"LDAP://CN=\\<computer name>, CN=\\<Computers>, DC=\\<domain component>, DC=\\<domain component>,...\".  \n  \n IIS  \n  \n-   Connect to a Web directory. For example, \"IIS://LocalHost/W3SVC/1/ROOT/\\<Web directory name>\".  \n  \n To bind to the current domain using LDAP, use the path \"LDAP://RootDSE\", then get the default naming context and rebind the entry. For example:  \n  \n```c#  \nString str = ent.Properties[\"defaultNamingContext\"][0];  \nDirectoryEntry domain = new DirectoryEntry(\"LDAP://\" + str);  \n```  \n  \n For more information, see the documentation for your provider and the topic [Using Active Directory Service Interfaces](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/using_adsi.asp) in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Az elérési útját a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.DirectoryServices.DirectoryEntry.Path*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Properties
  id: Properties
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Properties
  nameWithType: DirectoryEntry.Properties
  fullName: System.DirectoryServices.DirectoryEntry.Properties
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Active Directory tartományi szolgáltatások tulajdonságait olvassa be a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum."
  remarks: "Ha a tulajdonság nincs inicializálva, tulajdonságok meghívja az ADSI felület [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx) metódus használatával kikeresheti az értéket a gyorsítótárból. Ha a underling gyorsítótár nem lett betöltve, [IADs::Get](http://msdn2.microsoft.com/library/aa746347.aspx) implicit módon hívja [IADs::GetInfo](http://msdn2.microsoft.com/library/aa746349.aspx). Ez a metódus nincs beállítva az alapul szolgáló könyvtár store-ból a gyorsítótárban támogatott tulajdonságok értékeit tölti be. További tulajdonságok hívások tulajdonságértékeket kér a csak a gyorsítótárban. Tulajdonság-gyorsítótár betöltése szabályozásához hívja meg a <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>.</xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>       **Megjegyzés:** a Properties tulajdonság nem támogatott az Active Directory-ügyfél bővítmény (DSClient) való használatra [!INCLUDE[WinNt4Family](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public System.DirectoryServices.PropertyCollection Properties { get; }
    return:
      type: System.DirectoryServices.PropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.PropertyCollection&quot;> </xref> objektum, amely tartalmazza a tulajdonságokat, amelyeket ez a bejegyzés van beállítva."
  overload: System.DirectoryServices.DirectoryEntry.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.RefreshCache
  id: RefreshCache
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: RefreshCache()
  nameWithType: DirectoryEntry.RefreshCache()
  fullName: System.DirectoryServices.DirectoryEntry.RefreshCache()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ez betölti a tulajdonságértékek <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum a tulajdonság-gyorsítótárba."
  remarks: >-
    > [!CAUTION]

    >  Any uncommitted changes to the property cache will be lost. Use the <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> method to persist changes to the directory store.
  syntax:
    content: public void RefreshCache ();
    parameters: []
  overload: System.DirectoryServices.DirectoryEntry.RefreshCache*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])
  id: RefreshCache(System.String[])
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: RefreshCache(String[])
  nameWithType: DirectoryEntry.RefreshCache(String[])
  fullName: System.DirectoryServices.DirectoryEntry.RefreshCache(String[])
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A megadott tulajdonságok értékeit betölti a tulajdonság-gyorsítótárba."
  remarks: >-
    > [!CAUTION]

    >  Any uncommitted changes to the property cache will be lost. Use <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> to persist changes to the directory store.
  syntax:
    content: public void RefreshCache (string[] propertyNames);
    parameters:
    - id: propertyNames
      type: System.String[]
      description: "A megadott tulajdonságok tömbjét."
  overload: System.DirectoryServices.DirectoryEntry.RefreshCache*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Rename(System.String)
  id: Rename(System.String)
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Rename(String)
  nameWithType: DirectoryEntry.Rename(String)
  fullName: System.DirectoryServices.DirectoryEntry.Rename(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ez a neve megváltozik <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum."
  remarks: "> [!NOTE]> Ez milyen hatással van a utal, hogy ez a bejegyzés használt elérési utat is.       Ha <xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>van `true`, ügyeljen arra, hogy a hívás a <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>metódus olyan objektumon, a lépés elvégzéséhez állandó új.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> </xref:System.DirectoryServices.DirectoryEntry.UsePropertyCache%2A>"
  syntax:
    content: public void Rename (string newName);
    parameters:
    - id: newName
      type: System.String
      description: "A bejegyzés új nevét."
  overload: System.DirectoryServices.DirectoryEntry.Rename*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.SchemaClassName
  id: SchemaClassName
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: SchemaClassName
  nameWithType: DirectoryEntry.SchemaClassName
  fullName: System.DirectoryServices.DirectoryEntry.SchemaClassName
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a séma osztály nevét a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum."
  remarks: "Ez megegyezik a <xref:System.DirectoryServices.DirectoryEntry.Name%2A>tulajdonsága a <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A>tulajdonság.</xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> </xref:System.DirectoryServices.DirectoryEntry.Name%2A>       A <xref:System.DirectoryServices.DirectoryEntry>objektum séma határozza meg a tulajdonságokat és metódusokat.</xref:System.DirectoryServices.DirectoryEntry>"
  example:
  - "The following example demonstrates the SchemaClassName and <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and gets all of its children if the <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> is a container object.  The <xref:System.DirectoryServices.DirectoryEntry.SchemaEntry%2A> is a container object if the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> of that object is \"container\".  \n  \n```vb  \nDim myADSPath As String = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \n  \n' Creates an Instance of DirectoryEntry.  \nDim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  \n  \n' Display the 'SchemaClassName'.  \nConsole.WriteLine(\"Schema class name:\" + myDirectoryEntry.SchemaClassName)  \n  \n' Gets the SchemaEntry of the ADS object.  \nDim mySchemaEntry As DirectoryEntry = myDirectoryEntry.SchemaEntry  \n  \nIf String.Compare(mySchemaEntry.Name, \"container\") = 0 Then  \n   Dim myChildDirectoryEntry As DirectoryEntry  \n   For Each myChildDirectoryEntry In  myDirectoryEntry.Children  \n      Console.WriteLine(myChildDirectoryEntry.Path)  \n   Next  \n```  \n  \n```c#  \nString myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Creates an Instance of DirectoryEntry.  \nDirectoryEntry  myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \n  \n// Display the 'SchemaClassName'.  \nConsole.WriteLine(\"Schema class name:\" + myDirectoryEntry.SchemaClassName);  \n  \n// Gets the SchemaEntry of the ADS object.  \nDirectoryEntry mySchemaEntry = myDirectoryEntry.SchemaEntry;  \n  \nif (string.Compare(mySchemaEntry.Name, \"container\") == 0)  \n{  \n   foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  \n      Console.WriteLine(myChildDirectoryEntry.Path);  \n}  \n  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Creates an Instance of DirectoryEntry.  \nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \n  \n// Display the 'SchemaClassName'.  \nConsole::WriteLine(\"Schema class name:{0}\", myDirectoryEntry->SchemaClassName);  \n  \n// Gets the SchemaEntry of the ADS Object.  \nDirectoryEntry^ mySchemaEntry = myDirectoryEntry->SchemaEntry;  \n  \nif (!String::Compare(mySchemaEntry->Name, \"container\"))   \n{  \n    Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  \n    while (myEnum->MoveNext())   \n    {  \n        DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  \n        Console::WriteLine(myChildDirectoryEntry->Path);  \n    }  \n}  \n  \n```"
  syntax:
    content: public string SchemaClassName { get; }
    return:
      type: System.String
      description: "A séma osztály nevét a <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objektum."
  overload: System.DirectoryServices.DirectoryEntry.SchemaClassName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.SchemaEntry
  id: SchemaEntry
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: SchemaEntry
  nameWithType: DirectoryEntry.SchemaEntry
  fullName: System.DirectoryServices.DirectoryEntry.SchemaEntry
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Ez a bejegyzés a séma objektum beolvasása."
  remarks: "Egy bejegyzést séma határozza meg a kötelező és választható tulajdonság neveinek listáját.       Ez a tulajdonság segítségével megtudhatja, milyen tulajdonságok és metódusok érhetők el a társított objektum."
  example:
  - "The following example demonstrates the <xref:System.DirectoryServices.DirectoryEntry.SchemaClassName%2A> and SchemaEntry properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> object and gets all of its children if the SchemaEntry object is a container object.  The SchemaEntry is a container object if the <xref:System.DirectoryServices.DirectoryEntry.Name%2A> of that object is \"container\".  \n  \n```vb  \nDim myADSPath As String = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \n  \n' Creates an Instance of DirectoryEntry.  \nDim myDirectoryEntry As New DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword)  \n  \n' Display the 'SchemaClassName'.  \nConsole.WriteLine(\"Schema class name:\" + myDirectoryEntry.SchemaClassName)  \n  \n' Gets the SchemaEntry of the ADS object.  \nDim mySchemaEntry As DirectoryEntry = myDirectoryEntry.SchemaEntry  \n  \nIf String.Compare(mySchemaEntry.Name, \"container\") = 0 Then  \n   Dim myChildDirectoryEntry As DirectoryEntry  \n   For Each myChildDirectoryEntry In  myDirectoryEntry.Children  \n      Console.WriteLine(myChildDirectoryEntry.Path)  \n   Next  \n```  \n  \n```c#  \nString myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Creates an Instance of DirectoryEntry.  \nDirectoryEntry  myDirectoryEntry=new DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \n  \n// Display the 'SchemaClassName'.  \nConsole.WriteLine(\"Schema class name:\"+myDirectoryEntry.SchemaClassName);  \n  \n// Gets the SchemaEntry of the ADS object.  \nDirectoryEntry mySchemaEntry = myDirectoryEntry.SchemaEntry;  \n  \nif (string.Compare(mySchemaEntry.Name,\"container\") == 0)  \n{  \n   foreach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  \n      Console.WriteLine(myChildDirectoryEntry.Path);  \n}  \n  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Creates an Instance of DirectoryEntry.  \nDirectoryEntry^ myDirectoryEntry = gcnew DirectoryEntry(myADSPath, UserName, SecurelyStoredPassword);  \n  \n// Display the 'SchemaClassName'.  \nConsole::WriteLine(\"Schema class name:{0}\", myDirectoryEntry->SchemaClassName);  \n  \n// Gets the SchemaEntry of the ADS Object*.  \nDirectoryEntry^ mySchemaEntry = myDirectoryEntry->SchemaEntry;  \n  \nif (!String::Compare(mySchemaEntry->Name, S\"container\"))   \n{  \n    Collections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  \n    while (myEnum->MoveNext())   \n    {  \n        DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  \n        Console::WriteLine(myChildDirectoryEntry->Path);  \n    }  \n}  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry SchemaEntry { get; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> a bejegyzés a séma osztály képviselő objektum."
  overload: System.DirectoryServices.DirectoryEntry.SchemaEntry*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.UsePropertyCache
  id: UsePropertyCache
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: UsePropertyCache
  nameWithType: DirectoryEntry.UsePropertyCache
  fullName: System.DirectoryServices.DirectoryEntry.UsePropertyCache
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a gyorsítótár legyen véglegesített minden művelet után."
  remarks: "Alapértelmezés szerint tulajdonságok módosul helyileg a gyorsítótárba, és tulajdonságértékeket olvasható gyorsítótárba kerüljenek-e az első olvasott. A UsePropertyCache tulajdonság esetén `true`, a hozzáférést a <xref:System.DirectoryServices.DirectoryEntry>objektum tulajdonságainak gyorsabb.</xref:System.DirectoryServices.DirectoryEntry> Ezt a beállítást `false` következtében a gyorsítótár az egyes műveletek után véglegesíthető.       Ha a UsePropertyCache tulajdonság `true` és gyorsítótárazott véglegesítési módosításokat szeretne hívja meg a <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>metódus.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> Frissítse az értékeket a gyorsítótárban, a könyvtár módosítások után, hívja meg a <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>metódus.</xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>      > [!CAUTION] > Hívásakor <xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>hívása előtt <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A>, a tulajdonság-gyorsítótár a nem véglegesített módosításokat el fog veszni.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A> </xref:System.DirectoryServices.DirectoryEntry.RefreshCache%2A>      > [!NOTE] > Az Internet Information Services (IIS) a szolgáltató nem támogatja a gyorsítótár véglegesítése után minden művelethez."
  syntax:
    content: public bool UsePropertyCache { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyorsítótár nem lehet véglegesíteni után minden művelet; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectoryEntry.UsePropertyCache*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryEntry.Username
  id: Username
  parent: System.DirectoryServices.DirectoryEntry
  langs:
  - csharp
  name: Username
  nameWithType: DirectoryEntry.Username
  fullName: System.DirectoryServices.DirectoryEntry.Username
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi vagy beállítja a felhasználó nevét, az ügyfél hitelesítéséhez használt."
  remarks: "Beállíthatja, hogy a felhasználónév és <xref:System.DirectoryServices.DirectoryEntry.Password%2A>ahhoz, hogy adjon meg más hitelesítő adatokat, amellyel hozzáférhet az adatokhoz, az Active Directory tartományi szolgáltatásokban.</xref:System.DirectoryServices.DirectoryEntry.Password%2A> Bármely más <xref:System.DirectoryServices.DirectoryEntry>objektumok veszi át ezt a példányt (például keresztül <xref:System.DirectoryServices.DirectoryEntry.Children%2A>) automatikusan létrejönnek az azonos más hitelesítő adatokkal.</xref:System.DirectoryServices.DirectoryEntry.Children%2A> </xref:System.DirectoryServices.DirectoryEntry>"
  example:
  - "The following example demonstrates the Username and <xref:System.DirectoryServices.DirectoryEntry.Password%2A> properties of the <xref:System.DirectoryServices.DirectoryEntry> class. This example gets the user-specified <xref:System.DirectoryServices.DirectoryEntry> and the <xref:System.DirectoryServices.DirectoryEntry.Path%2A> of all its <xref:System.DirectoryServices.DirectoryEntry.Children%2A>.  \n  \n```vb  \nDim myADSPath As String = _  \n      \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\"  \n  \n' Create an Instance of DirectoryEntry.  \nDim myDirectoryEntry As New DirectoryEntry(myADSPath)  \nmyDirectoryEntry.Username = UserName  \nmyDirectoryEntry.Password = SecurelyStoredPassword  \n  \n' Get the Child ADS objects.  \nConsole.WriteLine(\"The Child ADS objects are:\")  \nDim myChildDirectoryEntry As DirectoryEntry  \nFor Each myChildDirectoryEntry In  myDirectoryEntry.Children  \n   Console.WriteLine(myChildDirectoryEntry.Path)  \nNext myChildDirectoryEntry  \n```  \n  \n```c#  \nString myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Create an Instance of DirectoryEntry.  \nDirectoryEntry myDirectoryEntry = new DirectoryEntry(myADSPath);  \nmyDirectoryEntry.Username = UserName;  \nmyDirectoryEntry.Password = SecurelyStoredPassword;  \n  \n// Get the Child ADS objects.  \nConsole.WriteLine(\"The Child ADS objects are:\");  \nforeach(DirectoryEntry myChildDirectoryEntry in myDirectoryEntry.Children)  \n   Console.WriteLine(myChildDirectoryEntry.Path);  \n  \n```  \n  \n```cpp#  \nString^ myADSPath = \"LDAP://onecity/CN=Users,DC=onecity,DC=corp,DC=fabrikam,DC=com\";  \n  \n// Create an Instance of DirectoryEntry.  \nDirectoryEntry^ myDirectoryEntry = new DirectoryEntry(myADSPath);  \nmyDirectoryEntry->Username = UserName;  \nmyDirectoryEntry->Password = SecurelyStoredPassword;  \n  \n// Get the Child ADS objects.  \nConsole::WriteLine(\"The Child ADS objects are:\");  \nCollections::IEnumerator^ myEnum = myDirectoryEntry->Children->GetEnumerator();  \nwhile (myEnum->MoveNext())   \n{  \n    DirectoryEntry^ myChildDirectoryEntry = safe_cast<DirectoryEntry^>(myEnum->Current);  \n    Console::WriteLine(myChildDirectoryEntry->Path);  \n}  \n  \n```"
  syntax:
    content: public string Username { get; set; }
    return:
      type: System.String
      description: "Az ügyfél hitelesítéséhez használt felhasználónév."
  overload: System.DirectoryServices.DirectoryEntry.Username*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.DirectoryServicesCOMException
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryServicesCOMException
  nameWithType: DirectoryServicesCOMException
  fullName: System.DirectoryServices.DirectoryServicesCOMException
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.DirectoryServices.DirectoryEntry.#ctor
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: DirectoryEntry()
  nameWithType: DirectoryEntry.DirectoryEntry()
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.Object)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: DirectoryEntry(Object)
  nameWithType: DirectoryEntry.DirectoryEntry(Object)
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: DirectoryEntry(String)
  nameWithType: DirectoryEntry.DirectoryEntry(String)
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: DirectoryEntry(String,String,String)
  nameWithType: DirectoryEntry.DirectoryEntry(String,String,String)
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String,String,String)
- uid: System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: DirectoryEntry(String,String,String,AuthenticationTypes)
  nameWithType: DirectoryEntry.DirectoryEntry(String,String,String,AuthenticationTypes)
  fullName: System.DirectoryServices.DirectoryEntry.DirectoryEntry(String,String,String,AuthenticationTypes)
- uid: System.DirectoryServices.AuthenticationTypes
  parent: System.DirectoryServices
  isExternal: false
  name: AuthenticationTypes
  nameWithType: AuthenticationTypes
  fullName: System.DirectoryServices.AuthenticationTypes
- uid: System.DirectoryServices.DirectoryEntry.AuthenticationType
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: AuthenticationType
  nameWithType: DirectoryEntry.AuthenticationType
  fullName: System.DirectoryServices.DirectoryEntry.AuthenticationType
- uid: System.DirectoryServices.DirectoryEntry.Children
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Children
  nameWithType: DirectoryEntry.Children
  fullName: System.DirectoryServices.DirectoryEntry.Children
- uid: System.DirectoryServices.DirectoryEntries
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntries
  nameWithType: DirectoryEntries
  fullName: System.DirectoryServices.DirectoryEntries
- uid: System.DirectoryServices.DirectoryEntry.Close
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Close()
  nameWithType: DirectoryEntry.Close()
  fullName: System.DirectoryServices.DirectoryEntry.Close()
- uid: System.DirectoryServices.DirectoryEntry.CommitChanges
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: CommitChanges()
  nameWithType: DirectoryEntry.CommitChanges()
  fullName: System.DirectoryServices.DirectoryEntry.CommitChanges()
- uid: System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: CopyTo(DirectoryEntry)
  nameWithType: DirectoryEntry.CopyTo(DirectoryEntry)
  fullName: System.DirectoryServices.DirectoryEntry.CopyTo(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: CopyTo(DirectoryEntry,String)
  nameWithType: DirectoryEntry.CopyTo(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectoryEntry.CopyTo(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectoryEntry.DeleteTree
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: DeleteTree()
  nameWithType: DirectoryEntry.DeleteTree()
  fullName: System.DirectoryServices.DirectoryEntry.DeleteTree()
- uid: System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectoryEntry.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectoryEntry.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectoryEntry.Exists(System.String)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Exists(String)
  nameWithType: DirectoryEntry.Exists(String)
  fullName: System.DirectoryServices.DirectoryEntry.Exists(String)
- uid: System.DirectoryServices.DirectoryEntry.Guid
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Guid
  nameWithType: DirectoryEntry.Guid
  fullName: System.DirectoryServices.DirectoryEntry.Guid
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Invoke(String,Object[])
  nameWithType: DirectoryEntry.Invoke(String,Object[])
  fullName: System.DirectoryServices.DirectoryEntry.Invoke(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: InvokeGet(String)
  nameWithType: DirectoryEntry.InvokeGet(String)
  fullName: System.DirectoryServices.DirectoryEntry.InvokeGet(String)
- uid: System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: InvokeSet(String,Object[])
  nameWithType: DirectoryEntry.InvokeSet(String,Object[])
  fullName: System.DirectoryServices.DirectoryEntry.InvokeSet(String,Object[])
- uid: System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: MoveTo(DirectoryEntry)
  nameWithType: DirectoryEntry.MoveTo(DirectoryEntry)
  fullName: System.DirectoryServices.DirectoryEntry.MoveTo(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: MoveTo(DirectoryEntry,String)
  nameWithType: DirectoryEntry.MoveTo(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectoryEntry.MoveTo(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectoryEntry.Name
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Name
  nameWithType: DirectoryEntry.Name
  fullName: System.DirectoryServices.DirectoryEntry.Name
- uid: System.DirectoryServices.DirectoryEntry.NativeGuid
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: NativeGuid
  nameWithType: DirectoryEntry.NativeGuid
  fullName: System.DirectoryServices.DirectoryEntry.NativeGuid
- uid: System.DirectoryServices.DirectoryEntry.NativeObject
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: NativeObject
  nameWithType: DirectoryEntry.NativeObject
  fullName: System.DirectoryServices.DirectoryEntry.NativeObject
- uid: System.DirectoryServices.DirectoryEntry.ObjectSecurity
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: ObjectSecurity
  nameWithType: DirectoryEntry.ObjectSecurity
  fullName: System.DirectoryServices.DirectoryEntry.ObjectSecurity
- uid: System.DirectoryServices.ActiveDirectorySecurity
  parent: System.DirectoryServices
  isExternal: false
  name: ActiveDirectorySecurity
  nameWithType: ActiveDirectorySecurity
  fullName: System.DirectoryServices.ActiveDirectorySecurity
- uid: System.DirectoryServices.DirectoryEntry.Options
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Options
  nameWithType: DirectoryEntry.Options
  fullName: System.DirectoryServices.DirectoryEntry.Options
- uid: System.DirectoryServices.DirectoryEntryConfiguration
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntryConfiguration
  nameWithType: DirectoryEntryConfiguration
  fullName: System.DirectoryServices.DirectoryEntryConfiguration
- uid: System.DirectoryServices.DirectoryEntry.Parent
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Parent
  nameWithType: DirectoryEntry.Parent
  fullName: System.DirectoryServices.DirectoryEntry.Parent
- uid: System.DirectoryServices.DirectoryEntry.Password
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Password
  nameWithType: DirectoryEntry.Password
  fullName: System.DirectoryServices.DirectoryEntry.Password
- uid: System.DirectoryServices.DirectoryEntry.Path
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Path
  nameWithType: DirectoryEntry.Path
  fullName: System.DirectoryServices.DirectoryEntry.Path
- uid: System.DirectoryServices.DirectoryEntry.Properties
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Properties
  nameWithType: DirectoryEntry.Properties
  fullName: System.DirectoryServices.DirectoryEntry.Properties
- uid: System.DirectoryServices.PropertyCollection
  parent: System.DirectoryServices
  isExternal: false
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.DirectoryServices.PropertyCollection
- uid: System.DirectoryServices.DirectoryEntry.RefreshCache
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: RefreshCache()
  nameWithType: DirectoryEntry.RefreshCache()
  fullName: System.DirectoryServices.DirectoryEntry.RefreshCache()
- uid: System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: RefreshCache(String[])
  nameWithType: DirectoryEntry.RefreshCache(String[])
  fullName: System.DirectoryServices.DirectoryEntry.RefreshCache(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectoryEntry.Rename(System.String)
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Rename(String)
  nameWithType: DirectoryEntry.Rename(String)
  fullName: System.DirectoryServices.DirectoryEntry.Rename(String)
- uid: System.DirectoryServices.DirectoryEntry.SchemaClassName
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: SchemaClassName
  nameWithType: DirectoryEntry.SchemaClassName
  fullName: System.DirectoryServices.DirectoryEntry.SchemaClassName
- uid: System.DirectoryServices.DirectoryEntry.SchemaEntry
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: SchemaEntry
  nameWithType: DirectoryEntry.SchemaEntry
  fullName: System.DirectoryServices.DirectoryEntry.SchemaEntry
- uid: System.DirectoryServices.DirectoryEntry.UsePropertyCache
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: UsePropertyCache
  nameWithType: DirectoryEntry.UsePropertyCache
  fullName: System.DirectoryServices.DirectoryEntry.UsePropertyCache
- uid: System.DirectoryServices.DirectoryEntry.Username
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Username
  nameWithType: DirectoryEntry.Username
  fullName: System.DirectoryServices.DirectoryEntry.Username
- uid: System.DirectoryServices.DirectoryEntry.#ctor*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry.DirectoryEntry
- uid: System.DirectoryServices.DirectoryEntry.AuthenticationType*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: AuthenticationType
  nameWithType: DirectoryEntry.AuthenticationType
- uid: System.DirectoryServices.DirectoryEntry.Children*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Children
  nameWithType: DirectoryEntry.Children
- uid: System.DirectoryServices.DirectoryEntry.Close*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Close
  nameWithType: DirectoryEntry.Close
- uid: System.DirectoryServices.DirectoryEntry.CommitChanges*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: CommitChanges
  nameWithType: DirectoryEntry.CommitChanges
- uid: System.DirectoryServices.DirectoryEntry.CopyTo*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: CopyTo
  nameWithType: DirectoryEntry.CopyTo
- uid: System.DirectoryServices.DirectoryEntry.DeleteTree*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: DeleteTree
  nameWithType: DirectoryEntry.DeleteTree
- uid: System.DirectoryServices.DirectoryEntry.Dispose*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Dispose
  nameWithType: DirectoryEntry.Dispose
- uid: System.DirectoryServices.DirectoryEntry.Exists*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Exists
  nameWithType: DirectoryEntry.Exists
- uid: System.DirectoryServices.DirectoryEntry.Guid*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Guid
  nameWithType: DirectoryEntry.Guid
- uid: System.DirectoryServices.DirectoryEntry.Invoke*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Invoke
  nameWithType: DirectoryEntry.Invoke
- uid: System.DirectoryServices.DirectoryEntry.InvokeGet*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: InvokeGet
  nameWithType: DirectoryEntry.InvokeGet
- uid: System.DirectoryServices.DirectoryEntry.InvokeSet*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: InvokeSet
  nameWithType: DirectoryEntry.InvokeSet
- uid: System.DirectoryServices.DirectoryEntry.MoveTo*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: MoveTo
  nameWithType: DirectoryEntry.MoveTo
- uid: System.DirectoryServices.DirectoryEntry.Name*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Name
  nameWithType: DirectoryEntry.Name
- uid: System.DirectoryServices.DirectoryEntry.NativeGuid*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: NativeGuid
  nameWithType: DirectoryEntry.NativeGuid
- uid: System.DirectoryServices.DirectoryEntry.NativeObject*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: NativeObject
  nameWithType: DirectoryEntry.NativeObject
- uid: System.DirectoryServices.DirectoryEntry.ObjectSecurity*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: ObjectSecurity
  nameWithType: DirectoryEntry.ObjectSecurity
- uid: System.DirectoryServices.DirectoryEntry.Options*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Options
  nameWithType: DirectoryEntry.Options
- uid: System.DirectoryServices.DirectoryEntry.Parent*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Parent
  nameWithType: DirectoryEntry.Parent
- uid: System.DirectoryServices.DirectoryEntry.Password*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Password
  nameWithType: DirectoryEntry.Password
- uid: System.DirectoryServices.DirectoryEntry.Path*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Path
  nameWithType: DirectoryEntry.Path
- uid: System.DirectoryServices.DirectoryEntry.Properties*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Properties
  nameWithType: DirectoryEntry.Properties
- uid: System.DirectoryServices.DirectoryEntry.RefreshCache*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: RefreshCache
  nameWithType: DirectoryEntry.RefreshCache
- uid: System.DirectoryServices.DirectoryEntry.Rename*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Rename
  nameWithType: DirectoryEntry.Rename
- uid: System.DirectoryServices.DirectoryEntry.SchemaClassName*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: SchemaClassName
  nameWithType: DirectoryEntry.SchemaClassName
- uid: System.DirectoryServices.DirectoryEntry.SchemaEntry*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: SchemaEntry
  nameWithType: DirectoryEntry.SchemaEntry
- uid: System.DirectoryServices.DirectoryEntry.UsePropertyCache*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: UsePropertyCache
  nameWithType: DirectoryEntry.UsePropertyCache
- uid: System.DirectoryServices.DirectoryEntry.Username*
  parent: System.DirectoryServices.DirectoryEntry
  isExternal: false
  name: Username
  nameWithType: DirectoryEntry.Username
