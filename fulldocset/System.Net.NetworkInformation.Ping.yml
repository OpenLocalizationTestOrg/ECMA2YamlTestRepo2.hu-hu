### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "Lehetővé teszi az megállapításához, hogy egy távoli számítógép elérhető a hálózaton keresztül."
  remarks: "Alkalmazások a Ping osztály használatával észleli, ha egy távoli számítógép elérhető-e.       Hálózati topológia meg tudja állapítani, hogy a Ping sikeresen is képes kapcsolódni a távoli állomás. Jelenléte és proxyk, hálózati cím címfordítási (NAT) berendezéseket és tűzfalak konfigurációja előfordulhat, hogy pingelése sikeres végrehajtását. A sikeres Ping csak azt jelzi, hogy a távoli állomás elérhető a hálózaton; a magasabb szintű szolgáltatásokat (mint például a webkiszolgálók) a távoli állomáson levő jelenléte nem garantált.       Ez az osztály a Ping.exe eszköz hasonló funkciókat biztosít. A <xref:System.Net.NetworkInformation.Ping.Send%2A>és <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek Internet Control Message Protocol (ICMP) echo kérés üzenet küldhető egy távoli számítógép és az ICMP echo reply üzenetekre vár erről a számítógépről.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> ICMP-üzenetek részletes ismertetését lásd: RFC 792, rendelkezésre álló [http://www.ietf.org](http://www.ietf.org/).       A következő típusok a Ping osztályhoz használatosak, és részletesen ismerteti.      | **Típusnév**|**leírás**|}   |-------------------|---------------------|   | <xref:System.Net.NetworkInformation.IPStatus>| Meghatározza az ICMP echo kérés üzenetekre eredményét leíró állapotkódok. |}   | <xref:System.Net.NetworkInformation.PingOptions>| Lehetővé teszi konfigurálásához, vagy a kérelem csomag továbbítható (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>), hogy hányszor szabályozó beállítások beolvasása, és hogy töredezett (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ) lehet. |}   | <xref:System.Net.NetworkInformation.PingReply>| Az ICMP echo kérés eredményeit. |}   | <xref:System.Net.NetworkInformation.PingException>| Ha helyrehozhatatlan hiba lép fel. |}   | <xref:System.Net.NetworkInformation.PingCompletedEventArgs>| <xref:System.Net.NetworkInformation.Ping.PingCompleted>Események, amelyek <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívás befejeződött, vagy megszakadt értesítő kapcsolódó adatokat tartalmazza. |}   | <xref:System.Net.NetworkInformation.PingCompletedEventHandler>| A delegált esetén, amely biztosítja a visszahívási metódus <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívás befejeződött, vagy megszakadt. |}       A <xref:System.Net.NetworkInformation.Ping.Send%2A>és <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek, térjen vissza a válasz egy <xref:System.Net.NetworkInformation.PingReply>objektum.</xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingException> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.PingOptions> </xref:System.Net.NetworkInformation.IPStatus> A <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>tulajdonság értéket ad vissza egy <xref:System.Net.NetworkInformation.IPStatus>értéket a kérelem eredményét.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>       A kérelem küldéséhez meg kell adnia a távoli számítógépen. Ehhez azáltal, hogy a gazdagép neve karakterlánc, karakterlánc-formátum, IP-cím vagy egy <xref:System.Net.IPAddress>objektum.</xref:System.Net.IPAddress>       Azt is megadhatja a következő típusok közül információt:-a kérés kísérő adatokat. Adja meg `buffer` lehetővé teszi további továbbítani a távoli állomás és az a maximális átviteli egység a hálózati elérési út egy adott méretet adatcsomag szükséges időt. (Lásd a <xref:System.Net.NetworkInformation.Ping.Send%2A>vagy <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>túlterhelések igénylő egy `buffer` paraméter.)      -E az ICMP Echo csomag átvitel közben kell töredezetté.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> (Lásd a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonság és a <xref:System.Net.NetworkInformation.Ping.Send%2A>vagy <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>túlterhelések, amelyek igénybe vehet egy `options` paraméter.)      -Hány alkalommal útválasztási csomópontok, például az útválasztók és az átjárók, továbbíthatja a csomagot, mielőtt azt vagy elér a célként megadott számítógéphez, vagy a program elveti.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> (Lásd: <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>és a <xref:System.Net.NetworkInformation.Ping.Send%2A>vagy <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>túlterhelések igénylő egy `options` paraméter.)      -Az időkorlátot, amelyen belül a válasz kell érkeznie.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> </xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> (Lásd a <xref:System.Net.NetworkInformation.Ping.Send%2A>vagy <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>igénylő túlterhelések egy `timeout` paraméter.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>       A Ping osztály szinkron és aszinkron mind a kérelem küldéséhez használható metódusokat biztosít. Ha az alkalmazás a válaszra várakozás közben kell blokkolja, használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A> Ha az alkalmazás nem kell részt, használja az aszinkron <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>saját automatikusan lefoglalt a szálkészlet a szálban hajt végre.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Alkalmazások használhatják a <xref:System.Net.NetworkInformation.PingCompletedEventHandler>adhatja meg a hívott metódus delegált <xref:System.Net.NetworkInformation.Ping.PingCompleted>események.</xref:System.Net.NetworkInformation.Ping.PingCompleted> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum, amely tartalmazza a <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs>       A Ping osztály példányát nem használhat több egyidejű ICMP Echo kéréseket létrehozásához. <xref:System.Net.NetworkInformation.Ping.Send%2A>A <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>folyamatban lévő vagy a hívó <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>többször ahhoz az összes korábbi hívás befejezett okok <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> van hívás</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> közben</xref:System.Net.NetworkInformation.Ping.Send%2A> hívja."
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> osztály."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref> objektumot, és opcionálisan megválik a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()` metódus és a <xref:System.ComponentModel.Component.Finalize%2A>metódus.</xref:System.ComponentModel.Component.Finalize%2A> A nyilvános `Dispose()` metódus meghívja a védett Dispose metódus a `disposing` paraméter `true`. <xref:System.ComponentModel.Component.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.ComponentModel.Component.Finalize%2A>       Ha a `disposing` paraméter `true`, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja, amelyhez a <xref:System.Net.NetworkInformation.Ping>objektum hivatkozik.</xref:System.Net.NetworkInformation.Ping> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> kiadásokban csak a nem felügyelt erőforrások."
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Kiváltja a <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref> esemény."
  remarks: "Öröklő a <xref:System.Net.NetworkInformation.Ping>osztály felülírhatja ezt a metódust elvégzendő egyéb feladatokhoz, mint például a naplózás szereplő adatokat a `e` paraméter.</xref:System.Net.NetworkInformation.Ping>       Az eseménykezelő keresztül egy delegált esemény indítása hív meg. További információkért lásd: [NIB: esemény indítása](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       A OnPingCompleted módszert is lehetővé teszi az események kezelésére anélkül egy delegált származtatott osztályok. Ez az ajánlott módszere az esemény egy származtatott osztályban kezelésére."
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref> objektum, amely eseményadatokat tartalmazza."
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Akkor következik be, amikor egy Internet Control Message Protocol (ICMP) echo üzenetet küldeni és fogadni az ICMP echo reply üzenet egy aszinkron művelet befejeződik, vagy megszakadt."
  remarks: "Alkalmazások a PingCompleted esemény segítségével szerezhet információkat a befejezettség állapotát, illetve egy hívás által gyűjtött adatokat a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> A <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegált biztosít a hívás hátsó metódus meghívása mikor <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>vet fel ezt az eseményt.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler>"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott megkísérli <xref:System.Net.IPAddress>, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről.</xref:System.Net.IPAddress>"
  remarks: "Ez a módszer küld a gazdagép által megadott `address` egy 32 <xref:System.Byte>az ICMP echo üzenettel puffert.</xref:System.Byte> A módszer az ICMP echo reply üzenetben öt másodpercet vár. Ha nem érkezett válasz ideje, a metódus által visszaadott és <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonsága <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A> A csomag vagy a csomag töredék (ha töredezett) továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objektum, amely tájékoztatást ad azokról az ICMP echo válasz-üzenet, ha egy érkezett, vagy írja le a hiba okát, ha nincs üzenet érkezett."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Kísérletek Internet Control Message Protocol (ICMP) echo üzenetet küld a megadott számítógéphez, és fogadni a megfelelő ICMP echo válaszüzenet erről a számítógépről."
  remarks: "Ez a módszer küld egy 32 <xref:System.Byte>adatpuffer az ICMP echo üzenettel.</xref:System.Byte> A módszer az ICMP echo reply üzenetben öt másodpercet vár. Ha nem érkezett válasz ideje, a metódus által visszaadott és <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonsága <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A> A csomag vagy a csomag töredék (ha töredezett) továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.String> Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objektum, amely információval szolgál az ICMP echo válasz-üzenet, ha egy érkezett, vagy a hiba okát biztosít, ha nincs üzenet érkezett."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott megkísérli <xref:System.Net.IPAddress>, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről.</xref:System.Net.IPAddress> Ez a módszer lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "Ha az ICMP echo reply üzenet nem érkezett meg a megadott időn belül a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       A csomag vagy a csomag töredék továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objektum, amely az ICMP echo reply üzenet információkat nyújt, ha egy érkezett, vagy a hiba okát biztosít, ha nincs üzenet érkezett."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Kísérletek Internet Control Message Protocol (ICMP) echo üzenetet küld a megadott számítógéphez, és fogadni a megfelelő ICMP echo válaszüzenet erről a számítógépről. Ez a módszer lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "Ha az ICMP echo reply üzenet nem érkezett meg a megadott időn belül a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A> A csomag vagy a csomag töredék (ha töredezett) továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.String> Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objektum, amely az ICMP echo reply üzenet információkat nyújt, ha egy érkezett, vagy a hiba okát biztosít, ha nincs üzenet érkezett."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott megkísérli <xref:System.Net.IPAddress>, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről.</xref:System.Net.IPAddress> A túlterhelési lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "Ha az ICMP echo reply üzenet nem érkezett meg a megadott időn belül a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       A csomag vagy a csomag töredék továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objektum, amely információval szolgál az ICMP echo válasz-üzenet, ha egy érkezett, vagy a hiba okát biztosít, ha nincs üzenet érkezett. A metódus visszaadható <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> Ha a csomag meghaladja a maximális átviteli egység (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65500 bájtot."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>buffer</code> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vagy a <code>buffer</code> mérete nagyobb, mint a 65500 bájtot."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Kísérletek megadott puffer az Internet Control Message Protocol (ICMP) echo üzenetet küld a megadott számítógéphez, és fogadni a megfelelő ICMP echo válaszüzenet erről a számítógépről. A túlterhelési lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "Ha az ICMP echo reply üzenet nem érkezett meg a megadott időn belül a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       A csomag vagy a csomag töredék továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.String> Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objektum, amely az ICMP echo reply üzenet információkat nyújt, ha egy érkezett, vagy a hiba okát biztosít, ha nincs üzenet érkezett."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65500 bájtot."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;).       – vagy – <code>buffer</code> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vagy a <code>buffer</code> mérete nagyobb, mint a 65500 bájtot."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott megkísérli <xref:System.Net.IPAddress>és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről.</xref:System.Net.IPAddress> Ez a túlterhelés lehetővé teszi, hogy az időtúllépési értéket a művelet és a vezérlő töredezettséget és az ICMP echo üzenet csomag élő idő értékek megadását."
  remarks: "Ha az ICMP echo reply üzenet által megadott időn belül nem érkezik a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ha a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonság `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       Használja a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>az ICMP echo üzenet továbbítható a cél elérése előtt a maximálisan megengedett számú tulajdonsággal.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> töredezettséget és az ICMP echo üzenet csomag idő a működés közbeni értékeinek használt objektum."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objektum, amely információval szolgál az ICMP echo válasz-üzenet, ha egy érkezett, vagy a hiba okát biztosít, ha nincs üzenet érkezett. A metódus visszaadható <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> Ha a csomag meghaladja a maximális átviteli egység (MTU)."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65500 bájtot."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>buffer</code> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vagy a <code>buffer</code> mérete nagyobb, mint a 65500 bájtot."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Kísérletek megadott puffer az Internet Control Message Protocol (ICMP) echo üzenetet küld a megadott számítógéphez, és fogadni a megfelelő ICMP echo válaszüzenet erről a számítógépről. Ez a túlterhelés adja meg az időtúllépési értéket a művelet és a vezérlő töredezettséget és élő idő értékét az ICMP-csomag számára teszi lehetővé."
  remarks: "Ha az ICMP echo reply üzenet által megadott időn belül nem érkezik a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ha a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonság `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       Használja a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>az ICMP echo üzenet továbbítható a cél elérése előtt a maximálisan megengedett számú tulajdonsággal.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.String> Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> töredezettséget és az ICMP echo üzenet csomag idő a működés közbeni értékeinek használt objektum."
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref> objektum, amely az ICMP echo reply üzenet információkat nyújt, ha egy érkezett, vagy a hiba okát biztosít, ha nincs üzenet érkezett."
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65500 bájtot."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy nulla hosszúságú karakterláncok.       – vagy – <code>buffer</code> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vagy a <code>buffer</code> mérete nagyobb, mint a 65500 bájtot."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Aszinkron módon megpróbálja Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott <xref:System.Net.IPAddress>, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről.</xref:System.Net.IPAddress>"
  remarks: "A <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódus aszinkron módon az echo üzenetet küld, és az alkalmazás állapotának (sikeresen vagy sikertelenül), a művelet befejeződésekor visszaadása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Hívja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódust, ha az alkalmazás nem kell tiltani.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ez a módszer minden egyes hívásakor a szálkészlet automatikusan lefoglalt külön szálban hajtja végre. Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Lesz meghívva módszer megadásához <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>riasztást az esemény, hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum, amely tartalmazza a <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> A <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum örökli a <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>tulajdonság.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ez a tulajdonság tartalmazza a `userToken` objektum lett átadva a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Az alkalmazás a válaszra várakozás közben kell részt, ha valamelyikével a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ez a módszer küld egy 32 <xref:System.Byte>adatpuffer az ICMP echo üzenettel.</xref:System.Byte> A módszer az ICMP echo reply üzenetben öt másodpercet vár. Ha nem érkezett válasz ideje, a metódus által visszaadott és <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonsága <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       A csomag vagy a csomag töredék továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
    - id: userToken
      type: System.Object
      description: "A meghívni az aszinkron művelet befejeződése után metódusnak átadott objektum."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása a <xref:System.Net.NetworkInformation.Ping.SendAsync*>módszer van folyamatban.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nincs érvényes IP-címnek."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Aszinkron módon megkísérli Internet Control Message Protocol (ICMP) echo üzenetet küld a megadott számítógéphez, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről."
  remarks: "A sendasync metódusok párhuzamosan metódus aszinkron módon az echo üzenetet küld, és az alkalmazás állapotának (sikeresen vagy sikertelenül), a művelet befejeződésekor visszaadása. A sendasync metódusok párhuzamosan metódust hívja, ha az alkalmazás nem kell tiltani. Ez a módszer minden egyes hívásakor a szálkészlet automatikusan lefoglalt külön szálban hajtja végre. Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Lesz meghívva módszer megadásához <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>riasztást az esemény, hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum, amely tartalmazza a <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> A <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum örökli a <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>tulajdonság.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ez a tulajdonság tartalmazza a `userToken` objektum lett átadva a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Az alkalmazás a válaszra várakozás közben kell részt, ha a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ez a módszer küld egy 32 <xref:System.Byte>adatpuffer az ICMP echo üzenettel.</xref:System.Byte> A módszer az ICMP echo reply üzenetben öt másodpercet vár. Nem érkezett válasz, ha a metódus által visszaadott és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> időpont.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       A csomag vagy a csomag töredék továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.String> Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: userToken
      type: System.Object
      description: "A meghívni az aszinkron művelet befejeződése után metódusnak átadott objektum."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A sendasync metódusok párhuzamosan metódus hívása folyamatban van."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>nem lehet feloldani egy érvényes IP-címre."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Aszinkron módon megpróbálja Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott <xref:System.Net.IPAddress>, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről.</xref:System.Net.IPAddress> A túlterhelési lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "A <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódus aszinkron módon az Echo üzenetet küld, és az alkalmazás állapotának (sikeresen vagy sikertelenül), a művelet befejeződésekor visszaadása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Hívja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódust, ha az alkalmazás nem kell tiltani.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Minden hívás, amely automatikusan történik, a szálkészlet külön szálban hajt végre. Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Alkalmazások használhatják a <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegált lesz meghívva módszer megadásához <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>az esemény kiváltja.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum, amely tartalmazza a <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> A <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum örökli a <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>tulajdonság.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ez a tulajdonság tartalmazza a `userToken` objektum lett átadva a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Ha az alkalmazás a válaszra várakozás közben kell blokkolja, használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ha az ICMP echo reply üzenet által megadott időn belül nem érkezik a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A> A csomag vagy a csomag töredék (ha töredezett) továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "A meghívni az aszinkron művelet befejeződése után metódusnak átadott objektum."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>módszer van folyamatban.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nincs érvényes IP-címnek."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Aszinkron módon megkísérli Internet Control Message Protocol (ICMP) echo üzenetet küld a megadott számítógéphez, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről. A túlterhelési lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "A <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódus aszinkron módon az Echo üzenetet küld, és az alkalmazás állapotának (sikeresen vagy sikertelenül), a művelet befejeződésekor visszaadása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Hívja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódust, ha az alkalmazás nem kell tiltani.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Minden hívás, amely automatikusan történik, a szálkészlet külön szálban hajt végre. Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Alkalmazások használhatják a <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegált lesz meghívva módszer megadásához <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>az esemény kiváltja.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum, amely tartalmazza a <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> A <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum örökli a <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>tulajdonság.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ez a tulajdonság tartalmazza a `userToken` objektum lett átadva a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Ha az alkalmazás a válaszra várakozás közben kell blokkolja, használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ha az ICMP echo reply üzenet által megadott időn belül nem érkezik a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A> A csomag vagy a csomag töredék (ha töredezett) továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.String> Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: userToken
      type: System.Object
      description: "A meghívni az aszinkron művelet befejeződése után metódusnak átadott objektum."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>nem lehet feloldani egy érvényes IP-címre."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Aszinkron módon megpróbálja megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott <xref:System.Net.IPAddress>, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről.</xref:System.Net.IPAddress> A túlterhelési lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "Ez a metódus aszinkron módon az echo üzenetet küld, és az alkalmazás állapotának (sikeresen vagy sikertelenül), a művelet befejeződésekor visszaadása. Hívja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódust, ha az alkalmazás nem kell tiltani.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Minden hívás, amely automatikusan történik, a szálkészlet külön szálban hajt végre. Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Lesz meghívva módszer megadásához <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>riasztást az esemény, hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum, amely tartalmazza a <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> A <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum örökli a <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>tulajdonság.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ez a tulajdonság tartalmazza a `userToken` objektum lett átadva a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>      > [!NOTE] > Az alkalmazás blokkolja a válaszra várakozás során, ha a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ha az ICMP echo reply üzenet által megadott időn belül nem érkezik a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A> A csomag vagy a csomag töredék (ha töredezett) továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    - id: userToken
      type: System.Object
      description: "A meghívni az aszinkron művelet befejeződése után metódusnak átadott objektum."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nincs érvényes IP-címnek."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65500 bájtot."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Aszinkron módon megkísérli megadott puffer az Internet Control Message Protocol (ICMP) echo üzenetet küld a megadott számítógéphez, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről. A túlterhelési lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "A <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódus aszinkron módon az Echo üzenetet küld, és az alkalmazás állapotának (sikeresen vagy sikertelenül), a művelet befejeződésekor visszaadása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Hívja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódust, ha az alkalmazás nem kell tiltani.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Minden hívás, amely automatikusan történik, a szálkészlet külön szálban hajt végre. Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Alkalmazások használhatják a <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegált lesz meghívva módszer megadásához <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>az esemény kiváltja.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektumot tartalmazó egy <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> A <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum örökli a <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>tulajdonság.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ez a tulajdonság tartalmazza a `userToken` objektum lett átadva a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Ha az alkalmazás a válaszra várakozás közben kell blokkolja, használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ha az ICMP echo reply üzenet által megadott időn belül nem érkezik a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ez a túlterhelés csomagot, majd csomagok továbbítását alapértelmezett beállításai. A csomagot, amely tartalmazza az ICMP echo üzenet kell töredezetté az átvitel során, ha a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között. Megakadályozni, tegye a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>módszerek, amely fogad egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonságot `true`.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>van `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A> A csomag vagy a csomag töredék (ha töredezett) továbbítható útválasztási csomópontok 128 alkalommal megsemmisülne. Ez a beállítás módosításához használja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>rendelkező túlterhelést egy `options` paramétert, majd állítsa be a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>tulajdonságot a kívánt értéket.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.String> Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    - id: userToken
      type: System.Object
      description: "A meghívni az aszinkron művelet befejeződése után metódusnak átadott objektum."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>nem lehet feloldani egy érvényes IP-címre."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65500 bájtot."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Aszinkron módon megpróbálja megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott <xref:System.Net.IPAddress>, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről.</xref:System.Net.IPAddress> Ez a túlterhelés lehetővé teszi, hogy az időtúllépési értéket a művelet és a vezérlő töredezettséget és az ICMP echo üzenet csomag élő idő értékek megadását."
  remarks: "A <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódus aszinkron módon az Echo üzenetet küld, és az alkalmazás állapotának (sikeresen vagy sikertelenül), a művelet befejeződésekor visszaadása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Hívja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódust, ha az alkalmazás nem kell tiltani.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Minden hívás, amely automatikusan történik, a szálkészlet külön szálban hajt végre. Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Alkalmazások használhatják a <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegált lesz meghívva módszer megadásához <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>az esemény kiváltja.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum, amely tartalmazza a <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> A <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum örökli a <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>tulajdonság.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ez a tulajdonság tartalmazza a `userToken` objektum lett átadva a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Ha az alkalmazás blokkolja a válaszra várakozás során, használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ha az ICMP echo reply üzenet által megadott időn belül nem érkezik a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ha a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonság `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       Használja a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>az ICMP echo üzenet továbbítható a cél elérése előtt a maximálisan megengedett számú tulajdonsággal.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Egy <xref:System.Net.IPAddress>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.Net.IPAddress>"
    - id: timeout
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> töredezettséget és az ICMP echo üzenet csomag idő a működés közbeni értékeinek használt objektum."
    - id: userToken
      type: System.Object
      description: "A meghívni az aszinkron művelet befejeződése után metódusnak átadott objektum."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nincs érvényes IP-címnek."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65500 bájtot."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Aszinkron módon megkísérli megadott puffer az Internet Control Message Protocol (ICMP) echo üzenetet küld a megadott számítógéphez, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről. Ez a túlterhelés adja meg az időtúllépési értéket a művelet és a vezérlő töredezettséget és élő idő értékét az ICMP-csomag számára teszi lehetővé."
  remarks: "A <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódus aszinkron módon az Echo üzenetet küld, és az alkalmazás állapotának (sikeresen vagy sikertelenül), a művelet befejeződésekor visszaadása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Hívja a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>metódust, ha az alkalmazás nem kell tiltani.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Minden hívás, amely automatikusan történik, a szálkészlet külön szálban hajt végre. Az aszinkron művelet befejeződése után, a riasztást a <xref:System.Net.NetworkInformation.Ping.PingCompleted>eseményt.</xref:System.Net.NetworkInformation.Ping.PingCompleted> Alkalmazások használhatják a <xref:System.Net.NetworkInformation.PingCompletedEventHandler>delegált lesz meghívva módszer megadásához <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>az esemény kiváltja.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> Hozzá kell adni egy <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> hívása előtt az esemény a feladat</xref:System.Net.NetworkInformation.PingCompletedEventHandler> A delegált metódus kap egy <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum, amely tartalmazza a <xref:System.Net.NetworkInformation.PingReply>objektum, amely eredményét mutatja be a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.PingReply> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> A <xref:System.Net.NetworkInformation.PingCompletedEventArgs>objektum örökli a <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>tulajdonság.</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> </xref:System.Net.NetworkInformation.PingCompletedEventArgs> Ez a tulajdonság tartalmazza a `userToken` objektum lett átadva a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>hívása.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>       Ha az alkalmazás a válaszra várakozás közben kell blokkolja, használja a <xref:System.Net.NetworkInformation.Ping.Send%2A>módszerek; ezek a módszerek szinkronizáltak.</xref:System.Net.NetworkInformation.Ping.Send%2A>       Ha az ICMP echo reply üzenet által megadott időn belül nem érkezik a `timeout` paraméter, az ICMP echo nem tud és a <xref:System.Net.NetworkInformation.PingReply.Status%2A>tulajdonság értéke <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > Nagyon kis szám megadásakor `timeout`, a Ping-üzenetek fogadhatók akkor is, ha `timeout` eltelt ideje ezredmásodpercben.       Ha a <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>tulajdonság `true` és a teljes mérete nagyobb a maximális mérete továbbítható egy útválasztási csomópontot a helyi és távoli számítógépek között, az ICMP echo kérés sikertelen.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>       Használja a <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>az ICMP echo üzenet továbbítható a cél elérése előtt a maximálisan megengedett számú tulajdonsággal.</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> Ha a csomag nem éri el a rendeltetési után a megadott számú alkalommal továbbított, elveti a csomagot, és az ICMP echo kérés sikertelen. Ha ez történik, a <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus> beállítása</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját.</xref:System.String> Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    - id: buffer
      type: System.Byte[]
      description: "Egy <xref:System.Int32>érték, amely meghatározza a maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenetet.</xref:System.Int32>"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> töredezettséget és az ICMP echo üzenet csomag idő a működés közbeni értékeinek használt objektum."
    - id: userToken
      type: System.Object
      description: "A meghívni az aszinkron művelet befejeződése után metódusnak átadott objektum."
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;).       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendAsync*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6-cím és a helyi számítógépen Windows 2000-nél korábbi fut. az operációs rendszer."
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>nem lehet feloldani egy érvényes IP-címre."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65500 bájtot."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Megszakítja az összes függőben lévő aszinkron kérelmek Internet Control Message Protocol (ICMP) echo üzenet küldhető, és a megfelelő ICMP echo reply üzenetet kap."
  remarks: "A hívások leáll a metódus <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>, amely nem fejeződtek be.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott <xref:System.Net.IPAddress>, és egy megfelelő ICMP echo reply üzenetet kap arról a számítógépről, egy aszinkron művelet.</xref:System.Net.IPAddress>"
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejeződik, miután az ICMP-csomag el lett küldve, és a válasz érkezett.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Az IP-cím, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nincs érvényes IP-címnek."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Egy Internet Control Message Protocol (ICMP) echo tartalmazó üzenet, amely a megadott adatokat a megadott számítógépen puffer, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről egy aszinkron művelet, elküldi."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejeződik, miután az ICMP-csomag el lett küldve, és a válasz érkezett.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A számítógép, amely az ICMP echo üzenet célját. Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott <xref:System.Net.IPAddress>, és egy megfelelő ICMP echo reply üzenetet kap arról a számítógépről, egy aszinkron művelet.</xref:System.Net.IPAddress> A túlterhelési lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejeződik, miután az ICMP-csomag el lett küldve, és a válasz érkezett.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Az IP-cím, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját."
    - id: timeout
      type: System.Int32
      description: "A maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenet."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Egy Internet Control Message Protocol (ICMP) echo tartalmazó üzenet, amely a megadott adatokat a megadott számítógépen puffer, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről egy aszinkron művelet, elküldi. A túlterhelési lehetővé teszi, hogy a művelet időtúllépési értéket adjon meg."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejeződik, miután az ICMP-csomag el lett küldve, és a válasz érkezett.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A számítógép, amely az ICMP echo üzenet célját. Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "A maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenet."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott <xref:System.Net.IPAddress>, és egy megfelelő ICMP echo reply üzenetet kap arról a számítógépről, egy aszinkron művelet.</xref:System.Net.IPAddress> A túlterhelési lehetővé teszi, hogy a művelet és a küldési és fogadási puffert időtúllépési értéket adjon meg."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejeződik, miután az ICMP-csomag el lett küldve, és a válasz érkezett.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Az IP-cím, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját."
    - id: timeout
      type: System.Int32
      description: "A maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenet."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nincs érvényes IP-címnek."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65,500 bájtot."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Egy Internet Control Message Protocol (ICMP) echo tartalmazó üzenet, amely a megadott adatokat a megadott számítógépen puffer, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről egy aszinkron művelet, elküldi. A túlterhelési lehetővé teszi, hogy a művelet és a küldési és fogadási puffert időtúllépési értéket adjon meg."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejeződik, miután az ICMP-csomag el lett küldve, és a válasz érkezett.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A számítógép, amely az ICMP echo üzenet célját. Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "A maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenet."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "A megadott puffer az Internet Control Message Protocol (ICMP) echo üzenet küldése a számítógép, amelyen a megadott <xref:System.Net.IPAddress>, és egy megfelelő ICMP echo reply üzenetet kap arról a számítógépről, egy aszinkron művelet.</xref:System.Net.IPAddress> A túlterhelési segítségével adja meg a műveletet, használja a küldési és fogadási, puffert időtúllépési értékét, és szabályozhatja a töredezettséget és az ICMP echo üzenet csomag élő idő értékei."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejeződik, miután az ICMP-csomag el lett küldve, és a válasz érkezett.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "Az IP-cím, amely azonosítja a számítógépen, amely az ICMP echo üzenet célját."
    - id: timeout
      type: System.Int32
      description: "A maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenet."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> töredezettséget és az ICMP echo üzenet csomag idő a működés közbeni értékeinek használt objektum."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Hívása <xref:System.Net.NetworkInformation.Ping.SendPingAsync*>folyamatban van.</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "Kivétel történt az ICMP-üzenetek küldése és fogadása során. A pontos kivétel lépett fel, a belső kivételben találhatók."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> nincs érvényes IP-címnek."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum el lett távolítva."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A mérete <code> buffer </code> meghaladja a 65,500 bájtot."
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Egy Internet Control Message Protocol (ICMP) echo tartalmazó üzenet, amely a megadott adatokat a megadott számítógépen puffer, és a megfelelő ICMP echo reply üzenetet kap arról a számítógépről egy aszinkron művelet, elküldi. A túlterhelési segítségével adja meg a műveletet, használja a küldési és fogadási, puffert időtúllépési értékét, és szabályozhatja a töredezettséget és az ICMP echo üzenet csomag élő idő értékei."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejeződik, miután az ICMP-csomag el lett küldve, és a válasz érkezett.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A számítógép, amely az ICMP echo üzenet célját. Ez a paraméter számára megadott érték lehet egy állomásnevet vagy IP-cím karakterlánc-ábrázolása."
    - id: timeout
      type: System.Int32
      description: "A maximális ideje milliszekundumban megadva (után az echo üzenet küldése) vár az ICMP echo reply üzenet."
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>az ICMP echo üzenethez, és az ICMP echo reply üzenet által visszaadott adatokat tartalmazó tömb.</xref:System.Byte> A tömb nem tartalmazhat több, mint 65,500 bájt."
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> töredezettséget és az ICMP echo üzenet csomag idő a működés közbeni értékeinek használt objektum."
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
