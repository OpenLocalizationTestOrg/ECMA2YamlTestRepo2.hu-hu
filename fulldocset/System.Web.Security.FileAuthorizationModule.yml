### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FileAuthorizationModule
  id: FileAuthorizationModule
  children:
  - System.Web.Security.FileAuthorizationModule.#ctor
  - System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  - System.Web.Security.FileAuthorizationModule.Dispose
  - System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  langs:
  - csharp
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule
  fullName: System.Web.Security.FileAuthorizationModule
  type: Class
  summary: "Ellenőrzi, hogy a felhasználó rendelkezik-e hozzáféréssel a kért fájl. Ez az osztály nem örökölhető."
  remarks: "Ez a modul hozzáférés-vezérlési listák (ACL) adja meg a hitelesítési szolgáltatásokat fájlrendszer ellen. Ha a `mode` attribútuma a [elem (ASP.NET beállítási séma) hitelesítési](http://msdn.microsoft.com/en-us/27bc0ba9-f23a-45f3-ae42-dbe7916e3ee2) konfigurációs elem értéke `Windows` , hogy a <xref:System.Web.Security.WindowsAuthenticationModule>használja az alkalmazást, a modul biztosítja, hogy engedélyezi-e a kérelmező felhasználó FileAuthorizationModule írási vagy olvasási hozzáférést, attól függően, hogy a kérelem-műveletet az erőforrás a kérelem végrehajtása előtt.</xref:System.Web.Security.WindowsAuthenticationModule> További információkért lásd: a <xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>metódus.</xref:System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser%2A>"
  syntax:
    content: 'public sealed class FileAuthorizationModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  id: '#ctor'
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Létrehoz egy példányát a <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> osztály."
  remarks: "Ez a konstruktor nem célja, hogy az alkalmazás kódjában hívható.       ASP.NET meghívja ezt a konstruktort az <xref:System.Web.Security.FileAuthorizationModule>osztály</xref:System.Web.Security.FileAuthorizationModule> egy példányának létrehozása A konstruktor hívása, után hívja a <xref:System.Web.Security.FileAuthorizationModule.Init%2A>metódust is, az új <xref:System.Web.Security.FileAuthorizationModule>objektum.</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule.Init%2A>"
  syntax:
    content: public FileAuthorizationModule ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  id: CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Meghatározza, hogy a felhasználó rendelkezik-e hozzáféréssel a kért fájl."
  remarks: "A CheckFileAccessForUser metódus ellenőrzi, hogy az aktuális felhasználó, egy Windows-hozzáférési tokent, által képviselt hozzáférést kap a fájlrendszer hozzáférés-vezérlési listák (ACL) a kért fájl. A virtuális elérési út van leképezve a fájlrendszer fizikai elérési út, az ellenőrzés elvégzése előtt.       Ha van-e a HTTP-műveletet, a kérelem végrehajtásához használt `GET`, `POST`, vagy `HEAD`, a CheckFileAccessForUser módszert keres, olvasási hozzáféréssel rendelkezik a fájlhoz. Minden egyéb művelet használata esetén a CheckFileAccessForUser metódus ellenőrzi olvasási/írási engedéllyel a fájlra.       **Biztonsági megjegyzés** Ha a <xref:System.Web.Security.FileAuthorizationModule>modul nincs definiálva a `httpModules` az alkalmazás-konfigurációs szakaszát a <xref:System.Web.Security.FileAuthorizationModule>modul mindig adja vissza `true`.</xref:System.Web.Security.FileAuthorizationModule> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public static bool CheckFileAccessForUser (string virtualPath, IntPtr token, string verb);
    parameters:
    - id: virtualPath
      type: System.String
      description: "A fájl virtuális elérési útja."
    - id: token
      type: System.IntPtr
      description: "A felhasználó képviselő Windows hozzáférési jogkivonat."
    - id: verb
      type: System.String
      description: "A kérelem végrehajtásához használt HTTP-műveletet."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális felhasználó által képviselt <code> token </code> hozzáfér ehhez a fájlhoz a megadott HTTP-műveletet vagy, ha a <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> modul nincs az alkalmazás konfigurációs fájljában definiált; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>token</code> is <xref:System.IntPtr.Zero>.       -or-       <code>verb</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>Nincs alkalmazás könyvtárszerkezete a webes alkalmazás."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A megadott fájl <code> virtualPath </code> nem létezik."
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  id: Dispose
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Minden erőforrás által használt memória eltérő kiadja a <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref>."
  remarks: "Ez a módszer nem célja, hogy az alkalmazás kódjában hívható."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Security.FileAuthorizationModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializálja a <xref href=&quot;System.Web.Security.FileAuthorizationModule&quot;> </xref> objektum."
  remarks: "Ez a módszer nem célja, hogy az alkalmazás kódjában hívható.       Az inicializálási metódusnak biztosítja, hogy a <xref:System.Web.Security.FileAuthorizationModule>feldolgozása megtalálható a <xref:System.Web.HttpApplication.AuthorizeRequest>esemény.</xref:System.Web.HttpApplication.AuthorizeRequest> </xref:System.Web.Security.FileAuthorizationModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "Az aktuális <xref href=&quot;System.Web.HttpApplication&quot;> </xref> példány."
  overload: System.Web.Security.FileAuthorizationModule.Init*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.Security.FileAuthorizationModule.#ctor
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule()
  nameWithType: FileAuthorizationModule.FileAuthorizationModule()
  fullName: System.Web.Security.FileAuthorizationModule.FileAuthorizationModule()
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(System.String,System.IntPtr,System.String)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser(String,IntPtr,String)
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
  fullName: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser(String,IntPtr,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.Security.FileAuthorizationModule.Dispose
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose()
  nameWithType: FileAuthorizationModule.Dispose()
  fullName: System.Web.Security.FileAuthorizationModule.Dispose()
- uid: System.Web.Security.FileAuthorizationModule.Init(System.Web.HttpApplication)
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: FileAuthorizationModule.Init(HttpApplication)
  fullName: System.Web.Security.FileAuthorizationModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Security.FileAuthorizationModule.#ctor*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: FileAuthorizationModule
  nameWithType: FileAuthorizationModule.FileAuthorizationModule
- uid: System.Web.Security.FileAuthorizationModule.CheckFileAccessForUser*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: CheckFileAccessForUser
  nameWithType: FileAuthorizationModule.CheckFileAccessForUser
- uid: System.Web.Security.FileAuthorizationModule.Dispose*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Dispose
  nameWithType: FileAuthorizationModule.Dispose
- uid: System.Web.Security.FileAuthorizationModule.Init*
  parent: System.Web.Security.FileAuthorizationModule
  isExternal: false
  name: Init
  nameWithType: FileAuthorizationModule.Init
