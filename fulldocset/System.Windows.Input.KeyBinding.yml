### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.KeyBinding
  id: KeyBinding
  children:
  - System.Windows.Input.KeyBinding.#ctor
  - System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)
  - System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)
  - System.Windows.Input.KeyBinding.CreateInstanceCore
  - System.Windows.Input.KeyBinding.Gesture
  - System.Windows.Input.KeyBinding.Key
  - System.Windows.Input.KeyBinding.KeyProperty
  - System.Windows.Input.KeyBinding.Modifiers
  - System.Windows.Input.KeyBinding.ModifiersProperty
  langs:
  - csharp
  name: KeyBinding
  nameWithType: KeyBinding
  fullName: System.Windows.Input.KeyBinding
  type: Class
  summary: "Van kötve egy <xref href=&quot;System.Windows.Input.KeyGesture&quot;> </xref> való egy <xref href=&quot;System.Windows.Input.RoutedCommand&quot;> </xref> (vagy egy másik <xref:System.Windows.Input.ICommand>megvalósítása).</xref:System.Windows.Input.ICommand>"
  remarks: "Egy KeyBinding társítja a <xref:System.Windows.Input.KeyGesture>rendelkező egy <xref:System.Windows.Input.ICommand>, például egy <xref:System.Windows.Input.RoutedCommand>.</xref:System.Windows.Input.RoutedCommand> </xref:System.Windows.Input.ICommand> </xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.RoutedCommand>az elsődleges megvalósítása a <xref:System.Windows.Input.ICommand>az illesztő a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] rendszer commanding.</xref:System.Windows.Input.ICommand></xref:System.Windows.Input.RoutedCommand>  Általánosságban elmondható, hogy amikor a <xref:System.Windows.Input.KeyGesture>végrehajtja a rendszer a parancs hivatkoznak, de a következő parancsműködést további befolyásol parancs-specifikus tényezőket, mint a <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A>érték.</xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> </xref:System.Windows.Input.KeyGesture>  A commanding további információkért lásd: a [Commanding áttekintése](~/add/includes/ajax-current-ext-md.md).       A funkcióbillentyűket és egy érvényes számbillentyűzeten kulcsot kivételével <xref:System.Windows.Input.KeyGesture>tartalmaznia kell pontosan egy <xref:System.Windows.Input.Key>és egy vagy több <xref:System.Windows.Input.ModifierKeys>.</xref:System.Windows.Input.ModifierKeys> </xref:System.Windows.Input.Key> </xref:System.Windows.Input.KeyGesture>  Funkcióbillentyűk és számbillentyűzeten kulcsok nem kell egy billentyűlenyomás ahhoz, hogy egy érvényes <xref:System.Windows.Input.KeyGesture>.</xref:System.Windows.Input.KeyGesture> Adjon meg egy érvénytelen lehet <xref:System.Windows.Input.KeyGesture>és az egy érvénytelen társított kézmozdulatok, vagy egy KeyBinding [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] vagy kódot.</xref:System.Windows.Input.KeyGesture> Nem lehet érvényesíteni, amely megakadályozza a létrehozása és kötése nincs például egy <xref:System.Windows.Input.KeyGesture>, amely tartalmaz, csak nonfunction kulcsot, vagy csak módosítók azonban nincs kulcsa.</xref:System.Windows.Input.KeyGesture> Ilyen KeyBinding nem fogja megpróbálni meghívni a hozzárendelt parancs.       Az egy KeyBinding definiálásakor [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] kétféleképpen adja meg a <xref:System.Windows.Input.KeyGesture>.</xref:System.Windows.Input.KeyGesture> Az első módszer a egy KeyBinding létrehozásához [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] határozza meg a <xref:System.Windows.Input.KeyBinding.Gesture%2A>KeyBinding elem, amely lehetővé teszi egy szintaxisát, és adja meg a kulcsokat és módosítókat tartalmazó egyetlen karakterláncból, például &quot;CTRL + P&quot; attribútum.</xref:System.Windows.Input.KeyBinding.Gesture%2A> A második módja határozza meg a <xref:System.Windows.Input.KeyBinding.Key%2A>attribútum és a <xref:System.Windows.Input.KeyBinding.Modifiers%2A>KeyBinding elem attribútumaihoz.</xref:System.Windows.Input.KeyBinding.Modifiers%2A> </xref:System.Windows.Input.KeyBinding.Key%2A> Mindkét irányba beállítás a <xref:System.Windows.Input.KeyGesture>egyenértékű és módosíthatja az alapul szolgáló objektumon, de nem lesznek használhatók egy ütközést, ha mindkét.</xref:System.Windows.Input.KeyGesture>  Abban az esetben, ha a <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, és az <xref:System.Windows.Input.KeyBinding.Gesture%2A>attribútumok be vannak állítva, az attribútum definiált utolsó fog történni a <xref:System.Windows.Input.KeyGesture>.</xref:System.Windows.Input.KeyGesture> </xref:System.Windows.Input.KeyBinding.Gesture%2A> </xref:System.Windows.Input.KeyBinding.Modifiers%2A> </xref:System.Windows.Input.KeyBinding.Key%2A> Is csatlakozhat helyzetek Ha például egy <xref:System.Windows.Input.KeyBinding.Key%2A>Készlet legutóbbi fogja felülírja a fenti hitelesítési mód csak a kulcs összetevője azonban változatlanul hagyja a kézmozdulat módosítók.</xref:System.Windows.Input.KeyBinding.Key%2A> Általában javasoljuk, hogy használjon csak a <xref:System.Windows.Input.KeyBinding.Gesture%2A>attribútumot [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]; ez lesz a félreérthetőség elkerülése, biztosít a leggyakrabban zökkenőmentes szintaxist, és biztosítja a legegyszerűbb ábrázolását szerializálási.</xref:System.Windows.Input.KeyBinding.Gesture%2A>       Egy KeyBinding definiálni az adott objektum vagy osztály szinten regisztrálása a egy <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A>a <xref:System.Windows.Input.CommandManager>osztályba tartozik</xref:System.Windows.Input.CommandManager> .</xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> Egy KeyBinding meghatározásához általában úgy esik-e a vezérlő sablon beállítása az <xref:System.Windows.UIElement.InputBindings%2A>tulajdonság [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] is deklarálni kell egy vagy több <xref:System.Windows.Input.MouseBinding>vagy KeyBinding elemei.</xref:System.Windows.Input.MouseBinding> </xref:System.Windows.UIElement.InputBindings%2A>"
  example:
  - "The following example creates a KeyBinding and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.  \n  \n [!code-xml[commandWithHandler#CommandHandlerKeyBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlerkeybinding)]  \n  \n [!code-cs[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/add/codesnippet/csharp/CommandHandlerProcedural/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]\n [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/add/codesnippet/visualbasic/commandhandlerprocedural/window1.xaml.vb#commandhandlerkeybindingcodebehind)]"
  syntax:
    content: 'public class KeyBinding : System.Windows.Input.InputBinding'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Input.InputBinding
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)
  - System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Input.InputBinding.Command
  - System.Windows.Input.InputBinding.CommandParameter
  - System.Windows.Input.InputBinding.CommandParameterProperty
  - System.Windows.Input.InputBinding.CommandProperty
  - System.Windows.Input.InputBinding.CommandTarget
  - System.Windows.Input.InputBinding.CommandTargetProperty
  - System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.#ctor
  id: '#ctor'
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: KeyBinding()
  nameWithType: KeyBinding.KeyBinding()
  fullName: System.Windows.Input.KeyBinding.KeyBinding()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Input.KeyBinding&quot;> </xref> osztály."
  syntax:
    content: public KeyBinding ();
    parameters: []
  overload: System.Windows.Input.KeyBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)
  id: '#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)'
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: KeyBinding(ICommand,KeyGesture)
  nameWithType: KeyBinding.KeyBinding(ICommand,KeyGesture)
  fullName: System.Windows.Input.KeyBinding.KeyBinding(ICommand,KeyGesture)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Input.KeyBinding&quot;> </xref> használata a megadott osztály <xref:System.Windows.Input.ICommand>és <xref href=&quot;System.Windows.Input.KeyGesture&quot;> </xref>.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "A parancs társítandó `gesture`."
    - id: gesture
      type: System.Windows.Input.KeyGesture
      description: "Rendelje hozzá a kulcskombináció `command`."
  overload: System.Windows.Input.KeyBinding.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>command</code>or <code>gesture</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)
  id: '#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)'
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: KeyBinding(ICommand,Key,ModifierKeys)
  nameWithType: KeyBinding.KeyBinding(ICommand,Key,ModifierKeys)
  fullName: System.Windows.Input.KeyBinding.KeyBinding(ICommand,Key,ModifierKeys)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Input.KeyBinding&quot;> </xref> használata a megadott osztály <xref:System.Windows.Input.ICommand>és a megadott <xref href=&quot;System.Windows.Input.Key&quot;> </xref> és <xref href=&quot;System.Windows.Input.ModifierKeys&quot;> </xref> amely lesznek konvertálva egy <xref href=&quot;System.Windows.Input.KeyGesture&quot;> </xref>.</xref:System.Windows.Input.ICommand>"
  syntax:
    content: public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);
    parameters:
    - id: command
      type: System.Windows.Input.ICommand
      description: "A paranccsal jeleníthető meg."
    - id: key
      type: System.Windows.Input.Key
      description: "A kulcs társítva `command`."
    - id: modifiers
      type: System.Windows.Input.ModifierKeys
      description: "A módosítók társítandó `command`."
  overload: System.Windows.Input.KeyBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: KeyBinding.CreateInstanceCore()
  fullName: System.Windows.Input.KeyBinding.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Létrehoz egy új egy <xref href=&quot;System.Windows.Input.KeyBinding&quot;> </xref>."
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "Az új objektumot."
  overload: System.Windows.Input.KeyBinding.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.Gesture
  id: Gesture
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: Gesture
  nameWithType: KeyBinding.Gesture
  fullName: System.Windows.Input.KeyBinding.Gesture
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Lekérdezi vagy beállítja azt a hitelesítési mód a társított <xref href=&quot;System.Windows.Input.KeyBinding&quot;> </xref>."
  remarks: "A funkcióbillentyűket és a számbillentyűzeten kulcsok kivételével a <xref:System.Windows.Input.KeyGesture>tartalmaznia kell egy <xref:System.Windows.Input.Key>és egy vagy több <xref:System.Windows.Input.ModifierKeys>.</xref:System.Windows.Input.ModifierKeys> </xref:System.Windows.Input.Key> </xref:System.Windows.Input.KeyGesture>"
  example:
  - "The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).  \n  \n [!code-xml[commandWithHandler#CommandHandlerKeyBinding](~/add/codesnippet/xaml/commandWithHandler/Window1.xaml#commandhandlerkeybinding)]  \n  \n [!code-cs[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#keybindingwithkeyandmodifiers)]\n [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#keybindingwithkeyandmodifiers)]"
  syntax:
    content: public override System.Windows.Input.InputGesture Gesture { get; set; }
    return:
      type: System.Windows.Input.InputGesture
      description: "A billentyűkombinációt. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.KeyBinding.Gesture*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "az érték <code> gesture </code> van beállítása nem egy <xref href=&quot;System.Windows.Input.KeyGesture&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.Key
  id: Key
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: Key
  nameWithType: KeyBinding.Key
  fullName: System.Windows.Input.KeyBinding.Key
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Windows.Input.Key&quot;> </xref> , a <xref href=&quot;System.Windows.Input.KeyGesture&quot;> </xref> ez társított <xref href=&quot;System.Windows.Input.KeyBinding&quot;> </xref>."
  remarks: "A funkcióbillentyűket és a számbillentyűzeten kulcsok kivételével a <xref:System.Windows.Input.KeyGesture>tartalmaznia kell egy <xref:System.Windows.Input.Key>és egy vagy több <xref:System.Windows.Input.ModifierKeys>.</xref:System.Windows.Input.ModifierKeys> </xref:System.Windows.Input.Key> </xref:System.Windows.Input.KeyGesture>       Meghatározásakor a <xref:System.Windows.Input.KeyBinding>a [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] kétféleképpen adja meg a <xref:System.Windows.Input.KeyGesture>.</xref:System.Windows.Input.KeyGesture> </xref:System.Windows.Input.KeyBinding> Az első módszer létrehozásához egy <xref:System.Windows.Input.KeyBinding>a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] határozza meg a <xref:System.Windows.Input.KeyBinding.Gesture%2A>attribútuma a <xref:System.Windows.Input.KeyBinding>elemmel rendelkezik, ami lehetővé teszi, hogy a kulcsok és módosítókat tartalmazó meg egyetlen karakterláncból, például &quot;CTRL + P&quot; szintaxist.</xref:System.Windows.Input.KeyBinding> </xref:System.Windows.Input.KeyBinding.Gesture%2A> </xref:System.Windows.Input.KeyBinding> A második módja a Key attribútum megadása és a <xref:System.Windows.Input.KeyBinding.Modifiers%2A>attribútumait a <xref:System.Windows.Input.KeyBinding>elem.</xref:System.Windows.Input.KeyBinding> </xref:System.Windows.Input.KeyBinding.Modifiers%2A> Mindkét irányba beállítás a <xref:System.Windows.Input.KeyGesture>egyenértékű és módosíthatja az alapul szolgáló objektumon, de nem lesznek használhatók egy ütközést, ha mindkét.</xref:System.Windows.Input.KeyGesture>  Abban az esetben, ha a kulcs <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, és az <xref:System.Windows.Input.KeyBinding.Gesture%2A>attribútumok be vannak állítva, az attribútum definiált utolsó fog történni a <xref:System.Windows.Input.KeyGesture>.</xref:System.Windows.Input.KeyGesture> </xref:System.Windows.Input.KeyBinding.Gesture%2A> </xref:System.Windows.Input.KeyBinding.Modifiers%2A> Ha például egy kulcs set utolsó fog felülírja a fenti hitelesítési mód csak a kulcs összetevője, de változatlanul hagyja a kézmozdulat módosítók is csatlakozhat. Általában javasoljuk, hogy használjon csak a <xref:System.Windows.Input.KeyBinding.Gesture%2A>attribútumot [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]; ez lesz a félreérthetőség elkerülése, biztosít a leggyakrabban zökkenőmentes szintaxist, és biztosítja a legegyszerűbb ábrázolását szerializálási.</xref:System.Windows.Input.KeyBinding.Gesture%2A>"
  syntax:
    content: public System.Windows.Input.Key Key { get; set; }
    return:
      type: System.Windows.Input.Key
      description: "A kulcs részét a <xref href=&quot;System.Windows.Input.KeyGesture&quot;> </xref>. Az alapértelmezett érték <xref href=&quot;System.Windows.Input.Key&quot;> </xref>."
  overload: System.Windows.Input.KeyBinding.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.KeyProperty
  id: KeyProperty
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: KeyProperty
  nameWithType: KeyBinding.KeyProperty
  fullName: System.Windows.Input.KeyBinding.KeyProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Azonosítja a <xref:System.Windows.Input.KeyBinding.Key*>függőség tulajdonság.</xref:System.Windows.Input.KeyBinding.Key*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty KeyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.Modifiers
  id: Modifiers
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: Modifiers
  nameWithType: KeyBinding.Modifiers
  fullName: System.Windows.Input.KeyBinding.Modifiers
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Windows.Input.ModifierKeys&quot;> </xref> , a <xref href=&quot;System.Windows.Input.KeyGesture&quot;> </xref> ez társított <xref href=&quot;System.Windows.Input.KeyBinding&quot;> </xref>."
  remarks: "A funkcióbillentyűket és a számbillentyűzeten kulcsok kivételével a <xref:System.Windows.Input.KeyGesture>tartalmaznia kell egy <xref:System.Windows.Input.Key>és egy vagy több <xref:System.Windows.Input.ModifierKeys>.</xref:System.Windows.Input.ModifierKeys> </xref:System.Windows.Input.Key> </xref:System.Windows.Input.KeyGesture>       Meghatározásakor a <xref:System.Windows.Input.KeyBinding>a [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] kétféleképpen adja meg a <xref:System.Windows.Input.KeyGesture>.</xref:System.Windows.Input.KeyGesture> </xref:System.Windows.Input.KeyBinding> Az első módszer létrehozásához egy <xref:System.Windows.Input.KeyBinding>a [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] határozza meg a <xref:System.Windows.Input.KeyBinding.Gesture%2A>attribútuma a <xref:System.Windows.Input.KeyBinding>elemmel rendelkezik, ami lehetővé teszi, hogy a kulcsok és módosítókat tartalmazó meg egyetlen karakterláncból, például &quot;CTRL + P&quot; szintaxist.</xref:System.Windows.Input.KeyBinding> </xref:System.Windows.Input.KeyBinding.Gesture%2A> </xref:System.Windows.Input.KeyBinding> A második módja határozza meg a <xref:System.Windows.Input.KeyBinding.Key%2A>attribútum és módosítók attribútumait a <xref:System.Windows.Input.KeyBinding>elem.</xref:System.Windows.Input.KeyBinding> </xref:System.Windows.Input.KeyBinding.Key%2A> Mindkét irányba beállítás a <xref:System.Windows.Input.KeyGesture>egyenértékű és módosíthatja az alapul szolgáló objektumon, de nem lesznek használhatók egy ütközést, ha mindkét.</xref:System.Windows.Input.KeyGesture>  Abban az esetben, ha a <xref:System.Windows.Input.KeyBinding.Key%2A>, módosítók, és az <xref:System.Windows.Input.KeyBinding.Gesture%2A>attribútumok minden beállítás, az utolsó definiált attribútum fog történni a <xref:System.Windows.Input.KeyGesture>.</xref:System.Windows.Input.KeyGesture> </xref:System.Windows.Input.KeyBinding.Gesture%2A> </xref:System.Windows.Input.KeyBinding.Key%2A> Is csatlakozhat helyzetek Ha például egy <xref:System.Windows.Input.KeyBinding.Key%2A>Készlet legutóbbi fogja felülírja a fenti hitelesítési mód csak a kulcs összetevője azonban változatlanul hagyja a kézmozdulat módosítók.</xref:System.Windows.Input.KeyBinding.Key%2A> Általában javasoljuk, hogy használjon csak a <xref:System.Windows.Input.KeyBinding.Gesture%2A>attribútumot [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]; ez lesz a félreérthetőség elkerülése, biztosít a leggyakrabban zökkenőmentes szintaxist, és biztosítja a legegyszerűbb ábrázolását szerializálási.</xref:System.Windows.Input.KeyBinding.Gesture%2A>      <a name=&quot;xamlAttributeUsage_Modifiers&quot;></a>## XAML attribútumok használata ```   <object Modifiers=&quot;oneOrMoreModifierKeys&quot;/>      ``` <a name=&quot;xamlValues_Modifiers&quot;> </a> ## XAML értékek *oneOrMoreModifierKeys* egy vagy több módosító kulcsot, határozzák meg a <xref:System.Windows.Input.ModifierKeys>számbavételi, a &quot;+&quot; karakterrel határolt.</xref:System.Windows.Input.ModifierKeys>      "
  syntax:
    content: public System.Windows.Input.ModifierKeys Modifiers { get; set; }
    return:
      type: System.Windows.Input.ModifierKeys
      description: "A módosító kulcsait a <xref href=&quot;System.Windows.Input.KeyGesture&quot;> </xref>.  Az alapértelmezett érték <xref href=&quot;System.Windows.Input.ModifierKeys&quot;> </xref>."
  overload: System.Windows.Input.KeyBinding.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.KeyBinding.ModifiersProperty
  id: ModifiersProperty
  parent: System.Windows.Input.KeyBinding
  langs:
  - csharp
  name: ModifiersProperty
  nameWithType: KeyBinding.ModifiersProperty
  fullName: System.Windows.Input.KeyBinding.ModifiersProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Azonosítja a <xref:System.Windows.Input.KeyBinding.Modifiers*>függőség tulajdonság.</xref:System.Windows.Input.KeyBinding.Modifiers*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ModifiersProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputBinding
  isExternal: false
  name: System.Windows.Input.InputBinding
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Input.KeyBinding.#ctor
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: KeyBinding()
  nameWithType: KeyBinding.KeyBinding()
  fullName: System.Windows.Input.KeyBinding.KeyBinding()
- uid: System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: KeyBinding(ICommand,KeyGesture)
  nameWithType: KeyBinding.KeyBinding(ICommand,KeyGesture)
  fullName: System.Windows.Input.KeyBinding.KeyBinding(ICommand,KeyGesture)
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input.KeyGesture
  parent: System.Windows.Input
  isExternal: false
  name: KeyGesture
  nameWithType: KeyGesture
  fullName: System.Windows.Input.KeyGesture
- uid: System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: KeyBinding(ICommand,Key,ModifierKeys)
  nameWithType: KeyBinding.KeyBinding(ICommand,Key,ModifierKeys)
  fullName: System.Windows.Input.KeyBinding.KeyBinding(ICommand,Key,ModifierKeys)
- uid: System.Windows.Input.Key
  parent: System.Windows.Input
  isExternal: false
  name: Key
  nameWithType: Key
  fullName: System.Windows.Input.Key
- uid: System.Windows.Input.ModifierKeys
  parent: System.Windows.Input
  isExternal: false
  name: ModifierKeys
  nameWithType: ModifierKeys
  fullName: System.Windows.Input.ModifierKeys
- uid: System.Windows.Input.KeyBinding.CreateInstanceCore
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: KeyBinding.CreateInstanceCore()
  fullName: System.Windows.Input.KeyBinding.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Input.KeyBinding.Gesture
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: Gesture
  nameWithType: KeyBinding.Gesture
  fullName: System.Windows.Input.KeyBinding.Gesture
- uid: System.Windows.Input.InputGesture
  parent: System.Windows.Input
  isExternal: false
  name: InputGesture
  nameWithType: InputGesture
  fullName: System.Windows.Input.InputGesture
- uid: System.Windows.Input.KeyBinding.Key
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: Key
  nameWithType: KeyBinding.Key
  fullName: System.Windows.Input.KeyBinding.Key
- uid: System.Windows.Input.KeyBinding.KeyProperty
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: KeyProperty
  nameWithType: KeyBinding.KeyProperty
  fullName: System.Windows.Input.KeyBinding.KeyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Input.KeyBinding.Modifiers
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: Modifiers
  nameWithType: KeyBinding.Modifiers
  fullName: System.Windows.Input.KeyBinding.Modifiers
- uid: System.Windows.Input.KeyBinding.ModifiersProperty
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: ModifiersProperty
  nameWithType: KeyBinding.ModifiersProperty
  fullName: System.Windows.Input.KeyBinding.ModifiersProperty
- uid: System.Windows.Input.KeyBinding.#ctor*
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: KeyBinding
  nameWithType: KeyBinding.KeyBinding
- uid: System.Windows.Input.KeyBinding.CreateInstanceCore*
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: CreateInstanceCore
  nameWithType: KeyBinding.CreateInstanceCore
- uid: System.Windows.Input.KeyBinding.Gesture*
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: Gesture
  nameWithType: KeyBinding.Gesture
- uid: System.Windows.Input.KeyBinding.Key*
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: Key
  nameWithType: KeyBinding.Key
- uid: System.Windows.Input.KeyBinding.Modifiers*
  parent: System.Windows.Input.KeyBinding
  isExternal: false
  name: Modifiers
  nameWithType: KeyBinding.Modifiers
