### YamlMime:ManagedReference
items:
- uid: System.Messaging.XmlMessageFormatter
  id: XmlMessageFormatter
  children:
  - System.Messaging.XmlMessageFormatter.#ctor
  - System.Messaging.XmlMessageFormatter.#ctor(System.String[])
  - System.Messaging.XmlMessageFormatter.#ctor(System.Type[])
  - System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.XmlMessageFormatter.Clone
  - System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.XmlMessageFormatter.TargetTypeNames
  - System.Messaging.XmlMessageFormatter.TargetTypes
  - System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: XmlMessageFormatter
  nameWithType: XmlMessageFormatter
  fullName: System.Messaging.XmlMessageFormatter
  type: Class
  summary: "Rendezi sorba, és deserializes objektumok vagy onnan egy üzenet, az XSD-séma definíció alapján XML formátumban."
  remarks: "A XmlMessageFormatter alapértelmezett formázó, amely egy példánya <xref:System.Messaging.MessageQueue>használja az üzenetek várólistára kerülésének szerializálása.</xref:System.Messaging.MessageQueue> Amikor hoz létre <xref:System.Messaging.MessageQueue>, XmlMessageFormatter példánya létre, és a <xref:System.Messaging.MessageQueue>.</xref:System.Messaging.MessageQueue> társított</xref:System.Messaging.MessageQueue> példánya Megadhat egy másik formázó hoz létre, a kódban és azt <xref:System.Messaging.MessageQueue.Formatter%2A>a <xref:System.Messaging.MessageQueue>.</xref:System.Messaging.MessageQueue> tulajdonsága</xref:System.Messaging.MessageQueue.Formatter%2A>       A várakozási sorba írni a várólista alapértelmezett XmlMessageFormatter példány nem használható, de a várólista olvasni, amíg azt meg nem használható a <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>vagy <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>formázó tulajdonságának.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Vagy beállíthatja a következő értékek valamelyikét az alapértelmezett formázó példányon, vagy hozzon létre egy új példányát formázó, és az értékeket automatikusan állítja be a megfelelő mint szerepkör argumentumokban átadott őket <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A>konstruktor.</xref:System.Messaging.XmlMessageFormatter.%23ctor%2A>       Megadásakor <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>helyett <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, típus fenntartása be van jelölve olvasási idő, csökkenti a lehetősége, hogy a hiba helyett a fordítás során.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>minden bejegyzést kell teljesen minősített, a szerelvény nevének megadása szükséges.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> További Ha több egyidejű verziójával működik, a verziószám kell is hozzáfűzi a cél neve is.       A <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>és <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>Tulajdonságok kérje meg a formázó milyen sémákat próbálkozás üzenet deszerializálása során.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Ez lehetővé teszi az üzenettörzs értelmezése formázó.       A példány szerializált üzenet törzsében meg kell felelnie a sémák a céltípusok tömbje képviselt egyik. Ha olvassa el az üzenetet <xref:System.Messaging.MessageQueue.Receive%2A>, a módszer hoz, amely megfelel a sémában meghatározott típusú objektum, és beolvassa az üzenettörzs be azt.</xref:System.Messaging.MessageQueue.Receive%2A>       A két tulajdonság csak az egyik kell állítani a olvasása az üzenetsorból, de beállíthatja azt is. A típusok két tulajdonságai kombinált set lesz. A döntés, mely tulajdonság használatához, az alkalmazásra vonatkoznak, szükség. Az üzenettörzs amelynek sémája nem felel meg a tömb vagy tulajdonság típusú típust tartalmaz, ha egy kivételt fog jelezni, amikor az adott üzenet olvasása.       A XmlMessageFormatter része a kritikus fontosságú az üzenetküldési lazán összekapcsolt XML-alapú. A XSD.exe segédprogram használatát az XML-formátuma XML-séma, például az alkalmazás által használt egyik osztály szerializálni a segédprogram használatakor előállítására szolgál. Az osztály egy alapértelmezett konstruktorral kell rendelkezniük.       A formátumot használja újra a fordított folyamat során a segédprogram létrehozza a séma alapján osztály terjesztése leírására osztály adatait. A segédprogram és a létrehozott XML-séma használata lehetővé teszi, hogy elkerülhetők redistributing.dll fájlok minden alkalommal, amikor egy osztály újrafordítása, miután a osztály megvalósítása megváltozott. Mindaddig, amíg a séma nem módosítja az ügyfél vagy a kiszolgáló, az egyéb módosítások mindkét oldalon nem befolyásolják a másik."
  example:
  - "The following code example includes three pieces of code: a server component, an order class, and client code. The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages. The schema is an XML formatted file that describes the \"shape\" of the class. This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.  \n  \n The following code example represents a server component that receives orders through a message queue. The body of the message should be an order object whose schema matches the Order.cs class below. The server process or application deserializes the order.  \n  \n [!code-vb[Classic XmlMessageFormatter Example#1](~/add/codesnippet/visualbasic/t-system.messaging.xmlme_1.vb)]\n [!code-cpp[Classic XmlMessageFormatter Example#1](~/add/codesnippet/cpp/t-system.messaging.xmlme_1.cpp)]\n [!code-cs[Classic XmlMessageFormatter Example#1](~/add/codesnippet/csharp/t-system.messaging.xmlme_1.cs)]  \n  \n The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.  \n  \n [!code-vb[Classic XmlMessageFormatter Example#2](~/add/codesnippet/visualbasic/t-system.messaging.xmlme_2.vb)]\n [!code-cs[Classic XmlMessageFormatter Example#2](~/add/codesnippet/csharp/t-system.messaging.xmlme_2.cs)]\n [!code-cpp[Classic XmlMessageFormatter Example#2](~/add/codesnippet/cpp/t-system.messaging.xmlme_2.cpp)]  \n  \n Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body. The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body. The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.  \n  \n When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema. It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class). This new order class is used to serialize the order into the message body.  \n  \n The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue. The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility. An order is sent to the Orders queue on the local computer.  \n  \n [!code-vb[Classic XmlMessageFormatter Example#3](~/add/codesnippet/visualbasic/t-system.messaging.xmlme_3.vb)]\n [!code-cpp[Classic XmlMessageFormatter Example#3](~/add/codesnippet/cpp/t-system.messaging.xmlme_3.cpp)]\n [!code-cs[Classic XmlMessageFormatter Example#3](~/add/codesnippet/csharp/t-system.messaging.xmlme_3.cs)]  \n  \n After the schema is generated from the order class on the server, you can modify the class. Unless the schema changes, you do not need to redistribute the schema. After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified. The two classes have become loosely coupled."
  syntax:
    content: 'public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Messaging.IMessageFormatter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.#ctor
  id: '#ctor'
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: XmlMessageFormatter()
  nameWithType: XmlMessageFormatter.XmlMessageFormatter()
  fullName: System.Messaging.XmlMessageFormatter.XmlMessageFormatter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Messaging.XmlMessageFormatter&quot;> </xref> osztály a cél nélkül meg kell adnia beállítása."
  remarks: "Ez a konstruktor túlterhelés használatos leggyakrabban a várólistára írásakor céltípusok esetén nincs szükség, írása közben.       Üzenet olvasni egy sorból példányának <xref:System.Messaging.XmlMessageFormatter>létre ebben a konstruktorban, meg kell adni a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>vagy <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>tulajdonságai, a formázó tudja, mit megkísérli visszaállítani a szerializált típusok.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> </xref:System.Messaging.XmlMessageFormatter>       Amikor létrehoz egy új <xref:System.Messaging.MessageQueue>, egy alapértelmezett <xref:System.Messaging.XmlMessageFormatter>példány létrehozásakor, nincs beállítva a cél típusa.</xref:System.Messaging.XmlMessageFormatter> </xref:System.Messaging.MessageQueue> Csakúgy, mint egy formatter létre ebben a konstruktorban, be kell állítani formázó példánynak a céltípusok, ha azt szeretné, hogy a várólista olvasni."
  syntax:
    content: public XmlMessageFormatter ();
    parameters: []
  overload: System.Messaging.XmlMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: XmlMessageFormatter(String[])
  nameWithType: XmlMessageFormatter.XmlMessageFormatter(String[])
  fullName: System.Messaging.XmlMessageFormatter.XmlMessageFormatter(String[])
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Messaging.XmlMessageFormatter&quot;> </xref> osztály (teljesen minősített) karakterlánc-értékeket egy tömbként átadott céltípusok beállítása."
  remarks: "A cél típusú paraméterekkel rendelkező konstruktorok leggyakrabban használt olvasása az üzenetsorból. Történő írásakor, nincs szükség a céltípusok megadásához.       Ez túlterhelése a <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A>konstruktor beállítása a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>keresztül az átadott tömb értékek tulajdonságot a `targetTypeNames` paraméter.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> </xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> A beállítás lehetővé teszi, hogy ez a tulajdonság egy <xref:System.Messaging.MessageQueue>használó <xref:System.Messaging.XmlMessageFormatter>példány, olvassa el az objektumokat tartalmazó üzenetek megadott típusok.</xref:System.Messaging.XmlMessageFormatter> </xref:System.Messaging.MessageQueue>       Mind a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>és <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>Tulajdonságok kérje meg a formázó milyen sémákat próbálkozás üzenet deszerializálása során.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Ez lehetővé teszi az üzenettörzs értelmezése formázó.       A példány szerializált üzenet törzsében meg kell felelnie a sémák a céltípusok tömbje képviselt egyik. Ha olvassa el az üzenetet <xref:System.Messaging.MessageQueue.Receive%2A>, a módszer hoz, amely megfelel a sémában meghatározott típusú objektum, és beolvassa az üzenettörzs be azt.</xref:System.Messaging.MessageQueue.Receive%2A>       A két tulajdonság csak az egyik kell állítani a olvasása az üzenetsorból, de beállíthatja azt is. A típusok két tulajdonságai kombinált set lesz. Melyiket használja az egyik adott alkalmazásra. Az üzenettörzs amelynek sémája nem felel meg a tömb vagy tulajdonság típusú típust tartalmaz, ha egy kivételt fog jelezni, olvasási időpontban."
  example:
  - >-
    [!code-cpp[Message.Body#1](~/add/codesnippet/cpp/m-system.messaging.xmlme_1.cpp)]
     [!code-cs[Message.Body#1](~/add/codesnippet/csharp/m-system.messaging.xmlme_1.cs)]
     [!code-vb[Message.Body#1](~/add/codesnippet/visualbasic/m-system.messaging.xmlme_1.vb)]
  syntax:
    content: public XmlMessageFormatter (string[] targetTypeNames);
    parameters:
    - id: targetTypeNames
      type: System.String[]
      description: "Típusú tömb <xref:System.String>, amely megadja, hogy az üzenetből a formázó által típusok csoportja.</xref:System.String> Ezek az értékek teljesen minősített, például &quot;MyNamespace.MyOrders, MyOrdersAssemblyName&quot; kell lennie."
  overload: System.Messaging.XmlMessageFormatter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>targetTypeNames</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.#ctor(System.Type[])
  id: '#ctor(System.Type[])'
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: XmlMessageFormatter(Type[])
  nameWithType: XmlMessageFormatter.XmlMessageFormatter(Type[])
  fullName: System.Messaging.XmlMessageFormatter.XmlMessageFormatter(Type[])
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Messaging.XmlMessageFormatter&quot;> </xref> osztály típusú objektumokat tömbként átadott céltípusok beállítása."
  remarks: "A cél típusú paraméterekkel rendelkező konstruktorok leggyakrabban használt olvasása az üzenetsorból. Történő írásakor, nincs szükség a céltípusok megadásához.       Ez túlterhelése a <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A>konstruktor beállítása a <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>keresztül az átadott tömb értékek tulajdonságot a `targetTypes` paraméter.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> A beállítás lehetővé teszi, hogy ez a tulajdonság egy <xref:System.Messaging.MessageQueue>használó <xref:System.Messaging.XmlMessageFormatter>példány a megadott típusú objektumokat tartalmazó üzenetek olvasásához.</xref:System.Messaging.XmlMessageFormatter> </xref:System.Messaging.MessageQueue>       Mind a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>és <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>Tulajdonságok kérje meg a formázó milyen sémákat próbálkozás üzenet deszerializálása során.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Ez lehetővé teszi az üzenettörzs értelmezése formázó.       A példány szerializált üzenet törzsében meg kell felelnie a sémák a céltípusok tömbje képviselt egyik. Ha olvassa el az üzenetet <xref:System.Messaging.MessageQueue.Receive%2A>, a módszer hoz, amely megfelel a sémában meghatározott típusú objektum, és beolvassa az üzenettörzs be azt.</xref:System.Messaging.MessageQueue.Receive%2A>       A két tulajdonság csak az egyik kell állítani a olvasása az üzenetsorból, de beállíthatja azt is. A típusok két tulajdonságai kombinált set lesz. Melyiket használja az egyik adott alkalmazásra. Az üzenettörzs amelynek sémája nem felel meg a tömb vagy tulajdonság típusú típust tartalmaz, ha egy kivételt fog jelezni, olvasási időpontban.       Megadásakor <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>helyett <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, típus fenntartása be van jelölve olvasási idő, csökkenti a lehetősége, hogy a hiba helyett a fordítás során.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>minden bejegyzést kell teljesen minősített, a szerelvény nevének megadása szükséges.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> További Ha több egyidejű verziójával működik, a verziószám kell is hozzáfűzi a cél neve is.       Használata esetén <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, adhat hozzá az egyes objektumok (például `MyClass`) a listára, az alábbi C# kód bemutatott módon.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>      ```   TargetTypes = new Type[]{typeof(MyClass)}   ```"
  syntax:
    content: public XmlMessageFormatter (Type[] targetTypes);
    parameters:
    - id: targetTypes
      type: System.Type[]
      description: "Típusú tömb <xref:System.Type>, amely megadja, hogy az üzenetből a formázó által típusok csoportja.</xref:System.Type>"
  overload: System.Messaging.XmlMessageFormatter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>targetTypes</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: XmlMessageFormatter.CanRead(Message)
  fullName: System.Messaging.XmlMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Meghatározza, hogy a formázó is deszerializálni az üzenet."
  remarks: "CanRead meghívásakor formázó kísérli meg meghatározni, ha az üzenet tartalma valami azt is deszerializálni. A formázó csak tudja deszerializálni az üzenet, ha a az üzenet törzsében van rendelkezésre álló típusok ugyanazon séma a tömb által képviselt a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>és <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>Tulajdonságok.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> CanRead adja vissza `false` körülmények között a következő két:-az üzenet nem lett formázva a <xref:System.Messaging.XmlMessageFormatter>.</xref:System.Messaging.XmlMessageFormatter> használatával      – Az üzenettörzs a séma kívül esik a, akár a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>vagy <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>tulajdonság.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>       A <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>és <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>Tulajdonságok kérje meg a formázó milyen típusú objektumok képesnek kell lennie deszerializálása.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Ha bármilyen hiányzik a listából, még az üzenetben található, visszaadja-e a CanRead `false`."
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> vizsgálata."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az XML-formázó tudja deszerializálni az üzenet; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.XmlMessageFormatter.CanRead*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Sem a <> </> *> sem <> </> *> tulajdonság be van állítva."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.Clone
  id: Clone
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: Clone()
  nameWithType: XmlMessageFormatter.Clone()
  fullName: System.Messaging.XmlMessageFormatter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Létrehoz egy példányát a <xref href=&quot;System.Messaging.XmlMessageFormatter&quot;> </xref> osztály, amelynek olvasási/írási (a céltípusok készletek) tulajdonságok megegyeznek az aktuális <xref href=&quot;System.Messaging.XmlMessageFormatter&quot;> </xref> példány."
  remarks: "Ez a módszer formázó másolatát hozza létre, és inicializálja az ezen értékek összes annak tulajdonságait <xref:System.Messaging.XmlMessageFormatter>objektum.</xref:System.Messaging.XmlMessageFormatter>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Az objektum, amelynek a Tulajdonságok megegyeznek az e <xref href=&quot;System.Messaging.XmlMessageFormatter&quot;> </xref> példánynak, de amelynek metaadatok nem határoz meg, hogy egy formatter osztálypéldányt kell."
  overload: System.Messaging.XmlMessageFormatter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: XmlMessageFormatter.Read(Message)
  fullName: System.Messaging.XmlMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "A tartalom beolvassa az adott üzenethez, és létrehoz egy objektumot, amely tartalmazza a deszerializált üzenet."
  remarks: "Mind a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>és <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>Tulajdonságok kérje meg a formázó milyen sémákat próbálkozás üzenet deszerializálása során.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Ezen tulajdonságok egyikét, az üzenet deszerializálása is előtt kell beállítani.       A példány szerializált üzenet törzsében meg kell felelnie a sémák a céltípusok tömbje képviselt egyik. Ha olvassa el az üzenetet <xref:System.Messaging.MessageQueue.Receive%2A>, a módszer hoz, amely megfelel a sémában meghatározott típusú objektum, és beolvassa az üzenettörzs be azt.</xref:System.Messaging.MessageQueue.Receive%2A>       A céltípusok nem kell megadni ahhoz, hogy a várólista írni."
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref>, XML formátumban történő deszerializálásakor."
    return:
      type: System.Object
      description: "A deszerializált üzenet."
  overload: System.Messaging.XmlMessageFormatter.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Sem a <> </> *> sem <> </> *> tulajdonság be van állítva.       – vagy – a szerializált üzenet törzsében példány nem felel meg a sémák levő által képviselt egyik a <> </> *> és <> </> *> tulajdonságait."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.TargetTypeNames
  id: TargetTypeNames
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: TargetTypeNames
  nameWithType: XmlMessageFormatter.TargetTypeNames
  fullName: System.Messaging.XmlMessageFormatter.TargetTypeNames
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Meghatározza, hogy az üzenetből a formázó által típusok csoportja."
  remarks: "Mindkét a TargetTypeNames és <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>Tulajdonságok kérje meg a formázó milyen sémákat próbálkozás üzenet deszerializálása során.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> Ez lehetővé teszi az üzenettörzs értelmezése formázó.       A példány szerializált üzenet törzsében meg kell felelnie a sémák a céltípusok tömbje képviselt egyik. Ha olvassa el az üzenetet <xref:System.Messaging.MessageQueue.Receive%2A>, a módszer hoz, amely megfelel a sémában meghatározott típusú objektum, és beolvassa az üzenettörzs be azt.</xref:System.Messaging.MessageQueue.Receive%2A>       A két tulajdonság csak az egyik kell állítani a olvasása az üzenetsorból, de beállíthatja azt is. A típusok két tulajdonságai kombinált set lesz. A döntés, mely tulajdonság használatához, az alkalmazásra vonatkoznak, szükség. Az üzenettörzs amelynek sémája nem felel meg a tömb vagy tulajdonság típusú típust tartalmaz, ha egy kivételt fog jelezni, amikor az adott üzenet olvasása.       TargetTypeNames igényel minden bejegyzést kell teljesen minősített, szerelvény nevét. További Ha több egyidejű verziójával működik, a verziószám kell is hozzáfűzi a cél neve is.       A célként megadott típusok csak a következők megadása kötelező, ha olvasása az üzenetsorból. A TargetTypeNames és <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>Tulajdonságok nem kell írni a várakozási sorba állítható be.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>"
  syntax:
    content: public string[] TargetTypeNames { get; set; }
    return:
      type: System.String[]
      description: "Típusú tömb <xref:System.String>, amely megadja, hogy az az üzenet törzse deszerializálni az üzenet olvasásakor objektumtípusok.</xref:System.String>"
  overload: System.Messaging.XmlMessageFormatter.TargetTypeNames*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A TargetTypeNames tulajdonság <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.TargetTypes
  id: TargetTypes
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: TargetTypes
  nameWithType: XmlMessageFormatter.TargetTypes
  fullName: System.Messaging.XmlMessageFormatter.TargetTypes
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Meghatározza, hogy az üzenetből a formázó által típusok csoportja."
  remarks: "Mind a <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>és TargetTypes tulajdonságok kérje meg a formázó milyen sémákat próbálkozás üzenet deszerializálása során.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Ez lehetővé teszi az üzenettörzs értelmezése formázó.       A példány szerializált üzenet törzsében meg kell felelnie a sémák a céltípusok tömbje képviselt egyik. Ha olvassa el az üzenetet <xref:System.Messaging.MessageQueue.Receive%2A>, a módszer hoz, amely megfelel a sémában meghatározott típusú objektum, és beolvassa az üzenettörzs be azt.</xref:System.Messaging.MessageQueue.Receive%2A>       A két tulajdonság csak az egyik kell állítani a olvasása az üzenetsorból, de beállíthatja azt is. A típusok két tulajdonságai kombinált set lesz. A döntés, mely tulajdonság használatához, az alkalmazásra vonatkoznak, szükség. Az üzenettörzs amelynek sémája nem felel meg a tömb vagy tulajdonság típusú típust tartalmaz, ha egy kivételt fog jelezni, amikor az adott üzenet olvasása.       A célként megadott típusok csak a következők megadása kötelező, ha olvasása az üzenetsorból. A <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>és TargetTypes tulajdonságok nem kell írni a várólista kell beállítani.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>       Amikor a TargetTypes megadása helyett <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, típus fenntartása be van jelölve olvasási idő, csökkenti a lehetősége, hogy a hiba helyett a fordítás során.</xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>       TargetTypes használatakor is hozzáadhat az egyes objektumok (például `MyClass`) a C# kóddal bemutatott módon listájához `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`."
  example:
  - "The following code example sends and receives a message that contains an order to and from a queue.  \n  \n [!code-cpp[Message.Body#1](~/add/codesnippet/cpp/p-system.messaging.xmlme_1.cpp)]\n [!code-cs[Message.Body#1](~/add/codesnippet/csharp/p-system.messaging.xmlme_1.cs)]\n [!code-vb[Message.Body#1](~/add/codesnippet/visualbasic/p-system.messaging.xmlme_1.vb)]"
  syntax:
    content: public Type[] TargetTypes { get; set; }
    return:
      type: System.Type[]
      description: "Típusú tömb <xref:System.Type>, amely megadja, hogy az az üzenet törzse deszerializálni az üzenet olvasásakor objektumtípusok.</xref:System.Type>"
  overload: System.Messaging.XmlMessageFormatter.TargetTypes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A TargetTypes tulajdonság <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.XmlMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: XmlMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.XmlMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Rendezi sorba az objektum az az üzenet törzsét."
  remarks: "A céltípusok nem adható meg lehet írni a várólista azok olvasásakor kell lennie. A <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>vagy <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>tulajdonság csak akkor használja a formázó által Ha üzenet deszerializálása.</xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> </xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>       A <xref:System.Messaging.XmlMessageFormatter>teszi a <xref:System.Xml.Serialization.XmlSerializer>osztály, amely határozza meg, mit kell szerializálni.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Messaging.XmlMessageFormatter> Csak nyilvános mezők és nyilvános tulajdonságok törzsparaméter szerializálható. Struktúrák, tömbök és struktúrák tömbök struktúrák lesz minden szerializálható, mindaddig, amíg nem használják a kódolt stílus a SOAP protokoll."
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;> </xref> amelynek <xref:System.Messaging.Message.Body*>tulajdonság a szerializált objektum fogja tartalmazni.</xref:System.Messaging.Message.Body*>"
    - id: obj
      type: System.Object
      description: "A <xref:System.Object>szerializálandó az üzenetbe.</xref:System.Object>"
  overload: System.Messaging.XmlMessageFormatter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Messaging.XmlMessageFormatter.#ctor
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: XmlMessageFormatter()
  nameWithType: XmlMessageFormatter.XmlMessageFormatter()
  fullName: System.Messaging.XmlMessageFormatter.XmlMessageFormatter()
- uid: System.Messaging.XmlMessageFormatter.#ctor(System.String[])
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: XmlMessageFormatter(String[])
  nameWithType: XmlMessageFormatter.XmlMessageFormatter(String[])
  fullName: System.Messaging.XmlMessageFormatter.XmlMessageFormatter(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.XmlMessageFormatter.#ctor(System.Type[])
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: XmlMessageFormatter(Type[])
  nameWithType: XmlMessageFormatter.XmlMessageFormatter(Type[])
  fullName: System.Messaging.XmlMessageFormatter.XmlMessageFormatter(Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: XmlMessageFormatter.CanRead(Message)
  fullName: System.Messaging.XmlMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.XmlMessageFormatter.Clone
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: Clone()
  nameWithType: XmlMessageFormatter.Clone()
  fullName: System.Messaging.XmlMessageFormatter.Clone()
- uid: System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: XmlMessageFormatter.Read(Message)
  fullName: System.Messaging.XmlMessageFormatter.Read(Message)
- uid: System.Messaging.XmlMessageFormatter.TargetTypeNames
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: TargetTypeNames
  nameWithType: XmlMessageFormatter.TargetTypeNames
  fullName: System.Messaging.XmlMessageFormatter.TargetTypeNames
- uid: System.Messaging.XmlMessageFormatter.TargetTypes
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: TargetTypes
  nameWithType: XmlMessageFormatter.TargetTypes
  fullName: System.Messaging.XmlMessageFormatter.TargetTypes
- uid: System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: XmlMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.XmlMessageFormatter.Write(Message,Object)
- uid: System.Messaging.XmlMessageFormatter.#ctor*
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: XmlMessageFormatter
  nameWithType: XmlMessageFormatter.XmlMessageFormatter
- uid: System.Messaging.XmlMessageFormatter.CanRead*
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: XmlMessageFormatter.CanRead
- uid: System.Messaging.XmlMessageFormatter.Clone*
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: Clone
  nameWithType: XmlMessageFormatter.Clone
- uid: System.Messaging.XmlMessageFormatter.Read*
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: Read
  nameWithType: XmlMessageFormatter.Read
- uid: System.Messaging.XmlMessageFormatter.TargetTypeNames*
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: TargetTypeNames
  nameWithType: XmlMessageFormatter.TargetTypeNames
- uid: System.Messaging.XmlMessageFormatter.TargetTypes*
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: TargetTypes
  nameWithType: XmlMessageFormatter.TargetTypes
- uid: System.Messaging.XmlMessageFormatter.Write*
  parent: System.Messaging.XmlMessageFormatter
  isExternal: false
  name: Write
  nameWithType: XmlMessageFormatter.Write
