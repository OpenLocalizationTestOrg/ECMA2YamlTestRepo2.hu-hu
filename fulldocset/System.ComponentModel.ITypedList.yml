### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypedList
  id: ITypedList
  children:
  - System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  langs:
  - csharp
  name: ITypedList
  nameWithType: ITypedList
  fullName: System.ComponentModel.ITypedList
  type: Interface
  summary: "A séma köthető listáját, ahol eltér a kötés rendelkezésre álló tulajdonságok a nyilvános kötődni objektum tulajdonságainak felderítése lehetőségeket kínál."
  remarks: "Ezen a felületen használatakor, például egy <xref:System.Data.DataView>képviselő objektum egy `customer` tulajdonságait kötni kívánt tábla, a `customer` , amely az objektum <xref:System.Data.DataView>tulajdonságait adja meg, nem a <xref:System.Data.DataView>.</xref:System.Data.DataView> </xref:System.Data.DataView> </xref:System.Data.DataView>       Ez az interfész nincs köthető listájának tervezési idejű támogatásához szükséges.       Adatok kötésének akkor fordulhat elő, vagy futás közben, vagy a tervezőben, de a szabályok is vonatkoznak. Futási időben kell kötni a következő adatokat:- <xref:System.Array>-végrehajtó az <xref:System.Collections.IList>, amennyiben a végrehajtója rendelkezik egy szigorú típusmegadású <xref:System.Collections.IList.Item%2A>tulajdonság (Ez azt jelenti, hogy a <xref:System.Type>van, de semmi <xref:System.Object>).</xref:System.Object> </xref:System.Type> </xref:System.Collections.IList.Item%2A> </xref:System.Collections.IList> </xref:System.Array> Ez az alapértelmezett implementációja tételével elvégezhető <xref:System.Collections.IList.Item%2A>titkos.</xref:System.Collections.IList.Item%2A> Ha szeretne létrehozni egy <xref:System.Collections.IList>amely a következő egy szigorú típusmegadású gyűjteményt szabályainak, akkor a <xref:System.Collections.CollectionBase>.</xref:System.Collections.CollectionBase> kell származtatni</xref:System.Collections.IList>      -ITypedList végrehajtó.       A Designer kötése is inicializálása <xref:System.ComponentModel.Component>objektumok ugyanazok a szabályok követve.</xref:System.ComponentModel.Component>       Az adatforráshoz való kötés további információkért lásd: a <xref:System.Windows.Forms.Binding?displayProperty=fullName>osztályhoz.</xref:System.Windows.Forms.Binding?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to implement the ITypedList interface. A generic type named `SortableBindingList` derives from the <xref:System.ComponentModel.BindingList%601> class and implements the ITypedList interface. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#1](~/add/codesnippet/csharp/t-system.componentmodel._167_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#1](~/add/codesnippet/visualbasic/t-system.componentmodel._167_1.vb)]"
  syntax:
    content: public interface ITypedList
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Vissza a <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> , amely jelöli az egyes használja a kötéshez adatok elem tulajdonságainak."
  remarks: "Ha a `listAccessors` paraméter nem `null`, általában tartalmaz egy tulajdonságleíró, amely azonosítja az objektum, amely megvalósítja az <xref:System.ComponentModel.ITypedList>.</xref:System.ComponentModel.ITypedList> beolvasása tárolók listája Például egy <xref:System.Data.DataSet>két táblákat tartalmazó `myCustomers` és `myOrders`, a kapcsolat neve a `myCustOrders`.</xref:System.Data.DataSet> Ha létrehoz egy <xref:System.Data.DataView>objektum megtekintéséhez `myCustomers`, majd a GetItemProperties metódus hívása a `null` adja vissza a tulajdonság leíróit oszlopai `myCustomers`.</xref:System.Data.DataView> Ennek eredményeképpen a visszaadott tulajdonság leírók egyik tulajdonság leírója `myCustOrders`, mint egy tulajdonság leíróit tartalmazó lista elérő tömbbel rendelkező a GetItemProperties metódus hívása csak `myCustOrders` visszatér a tulajdonság leíróit `myOrders`."
  example:
  - "The following code example demonstrates how to implement the GetItemProperties method. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#3](~/add/codesnippet/csharp/3b46cd55-3314-419e-a8e7-_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#3](~/add/codesnippet/visualbasic/3b46cd55-3314-419e-a8e7-_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "A tömb <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> köthető, mint a gyűjteményben található objektumok. Ez lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> , amely jelöli az egyes használja a kötéshez adatok elem tulajdonságainak."
  overload: System.ComponentModel.ITypedList.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "A lista nevét adja vissza."
  remarks: "Ez a módszer csak tervezéskor és az elavult által használt <xref:System.Windows.Forms.DataGrid>vezérlő.</xref:System.Windows.Forms.DataGrid>"
  example:
  - "The following code example demonstrates how to implement the GetListName method. For a full code listing, see [How to: Implement the ITypedList Interface](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.ComponentModel.ITypedList#4](~/add/codesnippet/csharp/a1408425-c386-40d6-a339-_1.cs)]\n [!code-vb[System.ComponentModel.ITypedList#4](~/add/codesnippet/visualbasic/a1408425-c386-40d6-a339-_1.vb)]"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "A tömb <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objektumokat, amelyekre a lista nevét adja vissza. Ez lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "A lista nevét."
  overload: System.ComponentModel.ITypedList.GetListName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: ITypedList.GetItemProperties(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: ITypedList.GetListName(PropertyDescriptor[])
  fullName: System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ITypedList.GetItemProperties*
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetItemProperties
  nameWithType: ITypedList.GetItemProperties
- uid: System.ComponentModel.ITypedList.GetListName*
  parent: System.ComponentModel.ITypedList
  isExternal: false
  name: GetListName
  nameWithType: ITypedList.GetListName
