### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemSecurity
  id: FileSystemSecurity
  children:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  langs:
  - csharp
  name: FileSystemSecurity
  nameWithType: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
  type: Class
  summary: "Jelenti. a hozzáférés-vezérlés és a fájl vagy könyvtár biztonsági naplózási."
  remarks: "A FileSystemSecurity osztály alaposztálya a <xref:System.Security.AccessControl.FileSecurity>és <xref:System.Security.AccessControl.DirectorySecurity>osztályok.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Ezeket az osztályokat felel meg az összes rendszer fájl vagy könyvtár hozzáférési jogosultságokat, és adja meg, hogyan hozzáférések naplóz.       A FileSystemSecurity osztály hozzáférési és naplózási jogosultságok szabályok készletként jelöli. Minden hozzáférési szabály által képviselt egy <xref:System.Security.AccessControl.FileSystemAccessRule>objektum, amíg minden naplózási szabály által képviselt egy <xref:System.Security.AccessControl.FileSystemAuditRule>objektum.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       FileSystemSecurity osztálya: Microsoft Windows fájlt a biztonsági rendszer absztrakciója. Ez a rendszer minden egyes fájl vagy könyvtár tartozik egy tulajdonosi hozzáférés-szabályozási listához (DACL), amely szabályozza a hozzáférést a fájl vagy könyvtár, és a rendszer hozzáférési szabálygyűjtemény (Rendszerszintű), amely megadja a vezérlő hozzáférések naplóz.  A <xref:System.Security.AccessControl.FileSystemAccessRule>és <xref:System.Security.AccessControl.FileSystemAuditRule>osztályokat absztrakt entitással egészült ki, a hozzáférés-vezérlő bejegyzések (ACE-k) DACL-EK és rendszerszintű alkotó.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       A FileSystemSecurity osztály DACL-EK és rendszerszintű; részleteit számos elrejtése Nincs hozzáférés-vezérlő bejegyzések rendezése vagy null DACL foglalkoznia.       Új vagy módosított hozzáférés-vezérlési lista (ACL) adatokat fájlba megőrizni, használja a <xref:System.IO.File.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Új vagy módosított könyvtárra ACL-információk megőrizni, használja a <xref:System.IO.Directory.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Egy fájl hozzáférés-vezérlési lista kapcsolatos információ megszerzéséhez használja a <xref:System.IO.File.GetAccessControl%2A>vagy <xref:System.IO.FileInfo.GetAccessControl%2A>metódus.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Olyan könyvtárból ACL-információk lekéréséhez használja a <xref:System.IO.Directory.GetAccessControl%2A>vagy <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metódus.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_6_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_6_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_6_1.cpp)]"
  syntax:
    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "A számbavétel, amely lekérdezi a <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> használ hozzáférési jogok képviselő osztályt."
  remarks: "Osztályok, amelyek a a <xref:System.Security.AccessControl.FileSystemSecurity>osztály bírálja felül a AccessRightType tulajdonságot, és a hozzáférési jogok képviselő használata adja vissza.</xref:System.Security.AccessControl.FileSystemSecurity> Tömb, vagy több biztonsági objektumtípusokat tartalmazó gyűjtemények használata, ez a tulajdonság segítségével határozza meg a megfelelő enumerálástípusra használata minden egyes biztonsági objektum."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>objektumot képviselő a <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> számbavételi.</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> osztály, amely egy új szabályhoz a megadott felhasználó a megadott hozzáférési jogosultságokat, a hozzáférés-vezérlés és a jelzők jelöli."
  remarks: "Hozzáférés-vezérlési szabályok létrehozása az ajánlott módszer használatához az <xref:System.Security.AccessControl.FileSystemAccessRule>osztály</xref:System.Security.AccessControl.FileSystemAccessRule> a konstruktorok       A AccessRuleFactory metódus visszatérési típusa az alaposztály <xref:System.Security.AccessControl.AccessRule>, de az eredményül kapott értéket is konvertálható biztonságosan a származtatott osztály</xref:System.Security.AccessControl.AccessRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Egy <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> egy felhasználói fiókot képviselő objektum."
    - id: accessMask
      type: System.Int32
      description: "Egész szám, amely egy hozzáférési típust ad meg."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférési szabály örökölt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Egy a <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> érték, amely meghatározza, hogy hogyan való hozzáférés maszkok gyermekobjektumokra terjesztése."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Egy a <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> értékek, amelyek a hozzáférés-vezérlő bejegyzések (ACE-k) gyermekobjektumokra módját adja meg."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Egy a <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> , amely meghatározza, hogy a hozzáférés engedélyezett vagy megtagadott értékeket."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "Egy új <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> egy új szabályhoz a megadott felhasználó a megadott hozzáférési jogosultságokat, a hozzáférés-vezérlés és a jelzők képviselő objektum."
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – a <code> accessMask </code> paraméter értéke nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> identityReference </code> paraméter típusa egyike sem <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, és nem olyan típusú, mint <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> be, amely átalakítható <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "A számbavétel, amely lekérdezi a <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> képviselő hozzáférési szabályok által használt osztály."
  remarks: "Osztályok, amelyek a a <xref:System.Security.AccessControl.FileSystemSecurity>osztály bírálja felül a AccessRuleType tulajdonságot, és a hozzáférési szabályok ábrázolására használják adja vissza.</xref:System.Security.AccessControl.FileSystemSecurity> Tömb, vagy több biztonsági objektumtípusokat tartalmazó gyűjtemények használata, a tulajdonság segítségével határozza meg a megfelelő hozzáférési szabály típust kíván használni a minden egyes biztonsági objektum."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>objektumot képviselő a <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> osztály</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hozzáadja a megadott hozzáférési vezérlési lista (ACL) engedélyt az aktuális fájl vagy könyvtár."
  remarks: "A AddAccessRule metódus új szabály hozzáadása a listához lévő szabályok egy <xref:System.Security.AccessControl.FileSystemSecurity>objektum.</xref:System.Security.AccessControl.FileSystemSecurity>       Ha hozzáférés-vezérlési listaként (ACL) a megadott szabály már létezik, a AddAccessRule módszer továbbra is vegye fel a szabályt, egy kivétellel: egy <xref:System.Security.AccessControl.FileSystemAccessRule>használatával létrehozott objektum a <xref:System.Security.AccessControl.AccessControlType>számbavételi érték használatával létrehozott írja felül a <xref:System.Security.AccessControl.AccessControlType>számbavételi érték.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule>       Új vagy módosított ACL információk fájlokba történő megőrizni, használja a <xref:System.IO.File.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Új vagy módosított könyvtárra ACL-információk megőrizni, használja a <xref:System.IO.Directory.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Egy fájl hozzáférés-vezérlési lista kapcsolatos információ megszerzéséhez használja a <xref:System.IO.File.GetAccessControl%2A>vagy <xref:System.IO.FileInfo.GetAccessControl%2A>metódus.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Olyan könyvtárból ACL-információk lekéréséhez használja a <xref:System.IO.Directory.GetAccessControl%2A>vagy <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metódus.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Amikor felvesz egy hozzáférési szabály beállítás nélkül a <xref:System.Security.AccessControl.FileSystemRights>jelző, a <xref:System.Security.AccessControl.FileSystemRights>jelző automatikusan hozzáadódik a szabályt.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Ha később törli a szabály megadása nélkül a <xref:System.Security.AccessControl.FileSystemRights>jelző, a jelző automatikusan törlődni fog.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/92a71f8c-d81d-4955-8014-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/92a71f8c-d81d-4955-8014-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/92a71f8c-d81d-4955-8014-_1.cpp)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> olyan hozzáférési lista (ACL) engedély szükséges egy fájl vagy könyvtár hozzáadása képviselő objektum."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "A megadott naplózási szabály hozzáadása az aktuális fájl vagy könyvtár."
  remarks: "A AddAuditRule metódus hozzáadja egy új naplózási szabály lévő szabályok listáján a <xref:System.Security.AccessControl.FileSystemSecurity>objektum.</xref:System.Security.AccessControl.FileSystemSecurity>       A megadott szabály már létezik egy naplózási szabály, ha a AddAuditRule módszer továbbra is vegye fel a szabály."
  example:
  - "The following code example uses the AddAuditRule method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/a9a5c9f6-a8bf-4ad9-9027-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/a9a5c9f6-a8bf-4ad9-9027-_1.cs)]"
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> egy naplózási szabály hozzáadása egy fájl vagy könyvtár képviselő objektum."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> a megadott felhasználó a megadott naplózási szabály képviselő osztályt."
  remarks: "Naplózási szabályok létrehozása az ajánlott módszer használatához az <xref:System.Security.AccessControl.FileSystemAuditRule>osztály</xref:System.Security.AccessControl.FileSystemAuditRule> a konstruktorok       A AuditRuleFactory metódus visszatérési típusa az alaposztály <xref:System.Security.AccessControl.AuditRule>, de az eredményül kapott értéket is konvertálható biztonságosan a származtatott osztály</xref:System.Security.AccessControl.AuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Egy <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> egy felhasználói fiókot képviselő objektum."
    - id: accessMask
      type: System.Int32
      description: "Egész szám, amely egy hozzáférési típust ad meg."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférési szabály örökölt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Egy a <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> érték, amely meghatározza, hogy hogyan való hozzáférés maszkok gyermekobjektumokra terjesztése."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Egy a <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> értékek, amelyek a hozzáférés-vezérlő bejegyzések (ACE-k) gyermekobjektumokra módját adja meg."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Egy a <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> értékek, amelyek végrehajtása a naplózás típusát határozza meg."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "Egy új <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> a megadott felhasználó a megadott naplózási szabály képviselő objektum."
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – a <code> accessMask </code> tulajdonság értéke nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> identityReference </code> tulajdonság sem típusú <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, és nem olyan típusú, mint <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> be, amely átalakítható <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "A típus, amely lekérdezi a <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> képviselő naplózási szabályok által használt osztály."
  remarks: "Osztályok, amelyek a a <xref:System.Security.AccessControl.FileSystemSecurity>osztály bírálja felül a AuditRuleType tulajdonságot, és a naplózási jogosultságok képviselő használata adja vissza.</xref:System.Security.AccessControl.FileSystemSecurity> Tömb, vagy több biztonsági objektumtípusokat tartalmazó gyűjtemények használata, a tulajdonság segítségével határozza meg a megfelelő naplózási szabály típust kíván használni a minden egyes biztonsági objektum."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>objektumot képviselő a <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> osztály</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes hozzá tartozó engedélyezése vagy megtagadása hozzáférés-vezérlési lista (ACL) az aktuális fájl vagy könyvtár."
  remarks: "A RemoveAccessRule metódus eltávolítja az összes megfelelő <xref:System.Security.AccessControl.AccessControlType>hozzáférési szabályokat vagy az összes megfelelő <xref:System.Security.AccessControl.AccessControlType>hozzáférési szabályok törlődik az aktuális <xref:System.Security.AccessControl.FileSystemSecurity>objektum.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Például használhatja ezt a módszert a távolítsa el az összes <xref:System.Security.AccessControl.AccessControlType>hozzáférési szabályok egy felhasználó úgy, hogy egy <xref:System.Security.AccessControl.FileSystemAccessRule>használatával létrehozott objektum a <xref:System.Security.AccessControl.AccessControlType>érték, a <xref:System.Security.AccessControl.FileSystemRights>értéket, és egy felhasználói fiókot.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  Ha így tesz, a RemoveAccessRule metódus adja meg a Megtagadás szabály eltávolítja a <xref:System.Security.AccessControl.FileSystemRights>érték vagy a <xref:System.Security.AccessControl.FileSystemRights>érték.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>       Új vagy módosított hozzáférés-vezérlési lista (ACL) adatokat fájlba megőrizni, használja a <xref:System.IO.File.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Új vagy módosított könyvtárra ACL-információk megőrizni, használja a <xref:System.IO.Directory.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Egy fájl hozzáférés-vezérlési lista kapcsolatos információ megszerzéséhez használja a <xref:System.IO.File.GetAccessControl%2A>vagy <xref:System.IO.FileInfo.GetAccessControl%2A>metódus.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Olyan könyvtárból ACL-információk lekéréséhez használja a <xref:System.IO.Directory.GetAccessControl%2A>vagy <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metódus.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Amikor felvesz egy hozzáférési szabály beállítás nélkül a <xref:System.Security.AccessControl.FileSystemRights>jelző, a <xref:System.Security.AccessControl.FileSystemRights>jelző automatikusan hozzáadódik a szabályt.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Ha később törli a szabály megadása nélkül a <xref:System.Security.AccessControl.FileSystemRights>jelző, a jelző automatikusan törlődni fog.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/8c37102e-50e1-48e9-baeb-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/8c37102e-50e1-48e9-baeb-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/8c37102e-50e1-48e9-baeb-_1.cpp)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> olyan hozzáférési lista (ACL) engedély szükséges egy fájl vagy könyvtár eltávolítása képviselő objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférési szabály el lett távolítva; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes hozzáférés-vezérlési lista (ACL) engedélyekkel a megadott felhasználó az aktuális fájl vagy könyvtár."
  remarks: "A RemoveAccessRuleAll metódus eltávolít minden hozzáférés-vezérlési lista (ACL) engedélyekkel a megadott felhasználó.  A metódus figyelmen kívül hagyja az összes értéket a <xref:System.Security.AccessControl.FileSystemAccessRule>objektum a felhasználói fiók kivételével.</xref:System.Security.AccessControl.FileSystemAccessRule>       Új vagy módosított ACL információk fájlokba történő megőrizni, használja a <xref:System.IO.File.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Új vagy módosított könyvtárra ACL-információk megőrizni, használja a <xref:System.IO.Directory.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Egy fájl hozzáférés-vezérlési lista kapcsolatos információ megszerzéséhez használja a <xref:System.IO.File.GetAccessControl%2A>vagy <xref:System.IO.FileInfo.GetAccessControl%2A>metódus.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Olyan könyvtárból ACL-információk lekéréséhez használja a <xref:System.IO.Directory.GetAccessControl%2A>vagy <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metódus.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Amikor felvesz egy hozzáférési szabály beállítás nélkül a <xref:System.Security.AccessControl.FileSystemRights>jelző, a <xref:System.Security.AccessControl.FileSystemRights>jelző automatikusan hozzáadódik a szabályt.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Ha később törli a szabály megadása nélkül a <xref:System.Security.AccessControl.FileSystemRights>jelző, a jelző automatikusan törlődni fog.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objektum, amely megadja a felhasználó, akinek hozzáférés-vezérlés: lista (ACL) engedélyeit el kell távolítani egy fájl vagy könyvtár."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja egy megfelelő engedélyezhetik vagy megtagadhatják hozzáférés vezérlési lista (ACL) az aktuális fájl vagy könyvtár."
  remarks: "A RemoveAccessRuleSpecific metódus eltávolítja a megadott <xref:System.Security.AccessControl.AccessControlType>férnek hozzá a szabály vagy a megadott megfelelő <xref:System.Security.AccessControl.AccessControlType>hozzáférési szabály törlődik az aktuális <xref:System.Security.AccessControl.FileSystemSecurity>objektum.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Például használhatja ezt a módszert eltávolítja a megadott <xref:System.Security.AccessControl.AccessControlType>hozzáférési szabályt úgy, hogy egy felhasználó egy <xref:System.Security.AccessControl.FileSystemAccessRule>használatával létrehozott objektum a <xref:System.Security.AccessControl.AccessControlType>érték, a <xref:System.Security.AccessControl.FileSystemRights>értéket, és egy felhasználói fiókot.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  Ha így tesz, a RemoveAccessRuleSpecific metódus eltávolítja csak a Megtagadás szabály, amely meghatározza a <xref:System.Security.AccessControl.FileSystemRights>érték.</xref:System.Security.AccessControl.FileSystemRights>  Adja meg a Megtagadás szabály nem távolítja a <xref:System.Security.AccessControl.FileSystemRights>érték.</xref:System.Security.AccessControl.FileSystemRights>       Új vagy módosított hozzáférés-vezérlési lista (ACL) adatokat fájlba megőrizni, használja a <xref:System.IO.File.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Új vagy módosított könyvtárra ACL-információk megőrizni, használja a <xref:System.IO.Directory.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Egy fájl hozzáférés-vezérlési lista kapcsolatos információ megszerzéséhez használja a <xref:System.IO.File.GetAccessControl%2A>vagy <xref:System.IO.FileInfo.GetAccessControl%2A>metódus.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Olyan könyvtárból ACL-információk lekéréséhez használja a <xref:System.IO.Directory.GetAccessControl%2A>vagy <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metódus.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Amikor felvesz egy hozzáférési szabály beállítás nélkül a <xref:System.Security.AccessControl.FileSystemRights>jelző, a <xref:System.Security.AccessControl.FileSystemRights>jelző automatikusan hozzáadódik a szabályt.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Ha később törli a szabály megadása nélkül a <xref:System.Security.AccessControl.FileSystemRights>jelző, a jelző automatikusan törlődni fog.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objektum, amely megadja a felhasználó, akinek hozzáférés-vezérlés: lista (ACL) engedélyeit el kell távolítani egy fájl vagy könyvtár."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes hozzá tartozó engedélyezése vagy megtagadása naplózási szabályok az aktuális fájl vagy könyvtár."
  remarks: "A RemoveAuditRule metódus eltávolítja az összes megfelelő <xref:System.Security.AccessControl.AccessControlType>naplózási szabályok vagy az összes megfelelő <xref:System.Security.AccessControl.AccessControlType>törlődik az aktuális szabályok naplózása <xref:System.Security.AccessControl.FileSystemSecurity>objektum.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Például használhatja ezt a módszert a távolítsa el az összes <xref:System.Security.AccessControl.AccessControlType>úgy, hogy egy felhasználó szabályok naplózása egy <xref:System.Security.AccessControl.FileSystemAuditRule>használatával létrehozott objektum a <xref:System.Security.AccessControl.AccessControlType>érték, a <xref:System.Security.AccessControl.AuditFlags>értéket, és egy felhasználói fiókot.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Ha így tesz, a RemoveAuditRule metódus adja meg a Megtagadás szabály eltávolítja a <xref:System.Security.AccessControl.AuditFlags>érték vagy a <xref:System.Security.AccessControl.AuditFlags>érték.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the RemoveAuditRule method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/e76c77df-35cd-4fcd-bf24-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/e76c77df-35cd-4fcd-bf24-_1.cs)]"
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> egy naplózási szabály, amely egy fájl vagy könyvtár eltávolítása képviselő objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a naplózási szabály el lett távolítva; Ellenkező esetben<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "A megadott felhasználó összes naplózási szabály eltávolítása az aktuális fájl vagy könyvtár."
  remarks: "A RemoveAuditRuleAll metódus eltávolít a megadott felhasználó összes naplózási szabály.  Az összes értéket figyelmen kívül hagyja a <xref:System.Security.AccessControl.FileSystemAuditRule>objektum a felhasználói fiók kivételével.</xref:System.Security.AccessControl.FileSystemAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objektum, amely megadja a felhasználó, akinek naplózási szabályok el kell távolítani egy fájl vagy könyvtár."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja egy megfelelő engedélyezése vagy megtagadása naplózási szabály az aktuális fájl vagy könyvtár."
  remarks: "A RemoveAuditRuleSpecific metódus eltávolítja a megadott megfelelő <xref:System.Security.AccessControl.AccessControlType>naplózási szabály vagy a megadott megfelelő <xref:System.Security.AccessControl.AccessControlType>naplózási szabály törlődik az aktuális <xref:System.Security.AccessControl.FileSystemSecurity>objektum.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Például használhatja ezt a módszert eltávolítja a megadott <xref:System.Security.AccessControl.AccessControlType>naplózási szabály úgy, hogy egy felhasználó egy <xref:System.Security.AccessControl.FileSystemAuditRule>használatával létrehozott objektum a <xref:System.Security.AccessControl.AccessControlType>érték, a <xref:System.Security.AccessControl.AuditFlags>értéket, és egy felhasználói fiókot.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Ha így tesz, a RemoveAuditRuleSpecific metódus eltávolítja csak Megtagadás szabály, amely megadja a <xref:System.Security.AccessControl.AuditFlags>érték.</xref:System.Security.AccessControl.AuditFlags>  Adja meg a Megtagadás szabály nem távolítja a <xref:System.Security.AccessControl.AuditFlags>érték.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> egy naplózási szabály, amely egy fájl vagy könyvtár eltávolítása képviselő objektum."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Az aktuális fájl vagy könyvtár hozzáadja a megadott hozzáférési vezérlési lista (ACL) engedélyt, és eltávolítja az összes megfelelő hozzáférés-vezérlési lista engedélyeket."
  remarks: "A ResetAccessRule metódus hozzáadja a megadott hozzáférés-vezérlési lista (ACL) szabály, vagy felülírja bármely azonos ACL-szabályok, amelyek megfelelnek a `rule` paraméter.  Például ha a `rule` paraméter határozza meg a <xref:System.Security.AccessControl.FileSystemRights>érték és a ResetAccessRule módszer megkeresi az azonos ACL-szabályának, amely meghatározza a <xref:System.Security.AccessControl.FileSystemRights>értéket, az azonos szabályt felül lesz írva.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Ha a ResetAccessRule módszer megkeresi az azonos ACL-szabályának, amely megadja a <xref:System.Security.AccessControl.FileSystemRights>értéket, az azonos szabály is felül lesz írva.</xref:System.Security.AccessControl.FileSystemRights>       Új vagy módosított ACL információk fájlokba történő megőrizni, használja a <xref:System.IO.File.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Új vagy módosított könyvtárra ACL-információk megőrizni, használja a <xref:System.IO.Directory.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Egy fájl hozzáférés-vezérlési lista kapcsolatos információ megszerzéséhez használja a <xref:System.IO.File.GetAccessControl%2A>vagy <xref:System.IO.FileInfo.GetAccessControl%2A>metódus.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Olyan könyvtárból ACL-információk lekéréséhez használja a <xref:System.IO.Directory.GetAccessControl%2A>vagy <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metódus.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> olyan hozzáférési lista (ACL) engedély szükséges egy fájl vagy könyvtár hozzáadása képviselő objektum."
  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Az aktuális fájl vagy könyvtár a megadott hozzáférési vezérlési lista (ACL) engedély beállítása."
  remarks: "A SetAccessRule metódus hozzáadja a megadott hozzáférés-vezérlési lista (ACL) szabály, vagy felülírja bármely azonos ACL-szabályok, amelyek megfelelnek a <xref:System.Security.AccessControl.FileSystemRights>értékének a `rule` paraméter.</xref:System.Security.AccessControl.FileSystemRights>  Például ha a `rule` paraméter határozza meg a <xref:System.Security.AccessControl.FileSystemRights>érték és a SetAccessRule módszer megkeresi az azonos ACL-szabályának, amely meghatározza a <xref:System.Security.AccessControl.FileSystemRights>értéket, az azonos szabályt felül lesz írva.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Ha a SetAccessRule módszer megkeresi az azonos ACL-szabályának, amely megadja a <xref:System.Security.AccessControl.FileSystemRights>értéket, az azonos szabály nem lesz írva.</xref:System.Security.AccessControl.FileSystemRights>       Új vagy módosított ACL információk fájlokba történő megőrizni, használja a <xref:System.IO.File.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Új vagy módosított könyvtárra ACL-információk megőrizni, használja a <xref:System.IO.Directory.SetAccessControl%2A>vagy <xref:System.IO.FileInfo.SetAccessControl%2A>metódus.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Egy fájl hozzáférés-vezérlési lista kapcsolatos információ megszerzéséhez használja a <xref:System.IO.File.GetAccessControl%2A>vagy <xref:System.IO.FileInfo.GetAccessControl%2A>metódus.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Olyan könyvtárból ACL-információk lekéréséhez használja a <xref:System.IO.Directory.GetAccessControl%2A>vagy <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metódus.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> olyan hozzáférési lista (ACL) engedély szükséges egy fájl vagy könyvtár beállítása képviselő objektum."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Beállítja a megadott naplózási szabály az aktuális fájl vagy könyvtár."
  remarks: "A SetAuditRule metódus hozzáadja a megadott naplózási szabályt, vagy felülírja bármely azonos ellenőrzési szabályok, amelyek megfelelnek a <xref:System.Security.AccessControl.FileSystemRights>értékének a `rule` paraméter.</xref:System.Security.AccessControl.FileSystemRights>  Például ha a `rule` paraméter határozza meg a <xref:System.Security.AccessControl.FileSystemRights>érték és a SetAuditRule módszer megkeresi az azonos naplózási szabály, amely meghatározza a <xref:System.Security.AccessControl.FileSystemRights>értéket, az azonos szabályt felül lesz írva.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Ha a SetAuditRule módszer megkeresi az azonos naplózási szabály, amely megadja a <xref:System.Security.AccessControl.FileSystemRights>értéket, az azonos szabály nem lesz írva.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> egy naplózási szabály, amely egy fájl vagy könyvtár beállítása képviselő objektum."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: FileSystemSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: FileSystemSecurity.AddAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: FileSystemSecurity.AddAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: FileSystemSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: FileSystemSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: FileSystemSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: FileSystemSecurity.ResetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: FileSystemSecurity.SetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: FileSystemSecurity.SetAuditRule
