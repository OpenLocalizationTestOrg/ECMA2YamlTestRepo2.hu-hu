### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HMAC
  id: HMAC
  children:
  - System.Security.Cryptography.HMAC.#ctor
  - System.Security.Cryptography.HMAC.BlockSizeValue
  - System.Security.Cryptography.HMAC.Create
  - System.Security.Cryptography.HMAC.Create(System.String)
  - System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  - System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMAC.HashFinal
  - System.Security.Cryptography.HMAC.HashName
  - System.Security.Cryptography.HMAC.Initialize
  - System.Security.Cryptography.HMAC.Key
  langs:
  - csharp
  name: HMAC
  nameWithType: HMAC
  fullName: System.Security.Cryptography.HMAC
  type: Class
  summary: "Az absztrakt osztály, ahol minden megvalósítások a kivonat-alapú üzenethitelesítési kód (HMAC) kell származnia jelöli."
  remarks: "A kivonat-alapú üzenethitelesítési kód (HMAC) használható annak meghatározásához, hogy egy nem biztonságos csatornán keresztül küldött üzenet módosították, feltéve, hogy a küldő és fogadó ugyanazt a titkos kulcsot. A küldő kiszámítja a kivonatot az eredeti adatokkal, és elküldi az eredeti adatok, mind a HMAC egyetlen üzenetben. A fogadó újraszámítja a kivonat értéke a fogadott üzenethez, és ellenőrzi, hogy a számított kivonat átvitt kivonat értéke megegyezik.       HMAC iteratív titkosítási kivonatot függvényeket, például az MD5 vagy SHA-1, egy közös titkos kulcs együtt használható. A kriptográfiai erőssége HMAC tulajdonságai között az alapul szolgáló kivonatoló függvénytől függ.       Bármi is módosul az adatokat, vagy a kivonat értéke nem egyezik, eredményez, mert a titkos kulcs ismerete szükséges módosítani az üzenetet, és Reprodukálja a megfelelő kivonat értéke. Ezért ha az eredeti és számított kivonati értékek egyeznek, az üzenet hitelesítése."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  - System.Security.Cryptography.KeyedHashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: HMAC()
  nameWithType: HMAC.HMAC()
  fullName: System.Security.Cryptography.HMAC.HMAC()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.HMAC&quot;> </xref> osztály."
  syntax:
    content: protected HMAC ();
    parameters: []
  overload: System.Security.Cryptography.HMAC.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.BlockSizeValue
  id: BlockSizeValue
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: BlockSizeValue
  nameWithType: HMAC.BlockSizeValue
  fullName: System.Security.Cryptography.HMAC.BlockSizeValue
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a blokkméret a kivonatoló függvénnyel használandó."
  remarks: "A kivonat-alapú üzenethitelesítési kód (HMAC) a kivonatoló függvényt használja, ahol adatokat által használható alapvető tömörítés funkció adatblokkjait léptetés ujjlenyomattal ellátni. BlockSizeValue a bájtméretnek ilyen blokk. Érvénytelen 64 bájt."
  syntax:
    content: protected int BlockSizeValue { get; set; }
    return:
      type: System.Int32
      description: "A kivonatoló függvénnyel használandó blokkméret."
  overload: System.Security.Cryptography.HMAC.BlockSizeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.Create
  id: Create
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: Create()
  nameWithType: HMAC.Create()
  fullName: System.Security.Cryptography.HMAC.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Létrehoz egy új alapértelmezett végrehajtására, a kivonat-alapú üzenethitelesítési kód (HMAC)."
  remarks: "Alapértelmezés szerint ez a túlterhelés HMAC SHA-1 végrehajtásának használja. Ha szeretne megadni egy másik megvalósításában, használja a <xref:System.Security.Cryptography.HMAC.Create%28System.String%29>túlterhelést, amely lehetővé teszi egy algoritmus név megadása.</xref:System.Security.Cryptography.HMAC.Create%28System.String%29>"
  syntax:
    content: public static System.Security.Cryptography.HMAC Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.HMAC
      description: "Egy új SHA-1-példány, kivéve, ha az alapértelmezett beállítások használatával lettek változtatva az [ &lt;cryptoClass&gt; elem](../Topic/%3CcryptoClass%3E%20Element.md)."
  overload: System.Security.Cryptography.HMAC.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: Create(String)
  nameWithType: HMAC.Create(String)
  fullName: System.Security.Cryptography.HMAC.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Létrehoz egy új, a kivonat-alapú üzenethitelesítési kód (HMAC) megadott végrehajtására."
  remarks: "A kivonatoló algoritmusok, például az MD5, SHA-1, SHA-256 algoritmust és RIPEMD160 több HMAC is támogat. A teljes listáját lásd: a támogatott értékek a `algorithmName` paraméter."
  syntax:
    content: public static System.Security.Cryptography.HMAC Create (string algorithmName);
    parameters:
    - id: algorithmName
      type: System.String
      description: "A használandó HMAC implementációja. Az alábbi táblázat a érvényes értékei a `algorithmName` paraméter és a algoritmusok rendeli.       <table><thead><tr><th> Paraméterérték       </th><th> Valósít meg       </th></tr></thead><tbody><tr><td> System.Security.Cryptography.HMAC       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> System.Security.Cryptography.KeyedHashAlgorithm       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> HMACMD5       </td><td><xref href=&quot;System.Security.Cryptography.HMACMD5&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACMD5       </td><td><xref href=&quot;System.Security.Cryptography.HMACMD5&quot;></xref></td></tr><tr><td> HMACRIPEMD160       </td><td><xref href=&quot;System.Security.Cryptography.HMACRIPEMD160&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACRIPEMD160       </td><td><xref href=&quot;System.Security.Cryptography.HMACRIPEMD160&quot;></xref></td></tr><tr><td> HMACSHA1       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA1       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> HMACSHA256       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA256&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA256       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA256&quot;></xref></td></tr><tr><td> HMACSHA384       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA384       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;></xref></td></tr><tr><td> HMACSHA512       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA512       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref></td></tr><tr><td> MACTripleDES       </td><td><xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;></xref></td></tr><tr><td> System.Security.Cryptography.MACTripleDES       </td><td><xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;></xref></td></tr></tbody></table>"
    return:
      type: System.Security.Cryptography.HMAC
      description: "A megadott HMAC végrehajtása egy új példányát."
  overload: System.Security.Cryptography.HMAC.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HMAC.Dispose(Boolean)
  fullName: System.Security.Cryptography.HMAC.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Security.Cryptography.HMAC&quot;> </xref> indulásakor egy kulcsváltozás indokolt, és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()` metódus és a `Finalize` metódust. `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. `Finalize`Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.       Ha a `disposing` paraméter `true`, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja, amelyhez a <xref:System.Security.Cryptography.HMAC>hivatkozik.</xref:System.Security.Cryptography.HMAC> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Security.Cryptography.HMAC.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: HMAC.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HMAC.HashCore(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ha felül van bírálva a származtatott osztály, irányítja át az alapértelmezett objektumhoz írt adatok <xref href=&quot;System.Security.Cryptography.HMAC&quot;> </xref> kivonatoló algoritmussal számítástechnikai a kivonat értéke."
  remarks: "Alkalmazás kódja nem hívja meg ezt a módszert.       Ez a metódus absztrakt a kivonatoló számítás hajt végre. A kriptográfiai adatfolyam-objektum minden írni az adatok áthalad ezt a módszert. Minden adatblokk Ez a módszer az ujjlenyomat-objektumot állapotának frissíti az, hogy a megfelelő kivonatoló értéket adja vissza az adatfolyam végén."
  syntax:
    content: protected override void HashCore (byte[] rgb, int ib, int cb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: "A bemeneti adatok."
    - id: ib
      type: System.Int32
      description: "Az eltolás a bájttömb kezdőpontjaként adatokkal."
    - id: cb
      type: System.Int32
      description: "A tömb adatok használandó bájtok száma."
  overload: System.Security.Cryptography.HMAC.HashCore*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: HashFinal()
  nameWithType: HMAC.HashFinal()
  fullName: System.Security.Cryptography.HMAC.HashFinal()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ha a származtatott osztály felülbírálva, finalizes a kivonatoló számítás után utolsó adatokat dolgozza fel a titkosított adatfolyam-objektum."
  remarks: "Alkalmazás kódja nem hívja meg ezt a módszert. Ez a módszer minden részleges számítási finalizes, és az adatfolyam megfelelő kivonatoló értékét adja vissza."
  syntax:
    content: protected override byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A számított kivonat egy bájttömböt a kódot."
  overload: System.Security.Cryptography.HMAC.HashFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.HashName
  id: HashName
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: HashName
  nameWithType: HMAC.HashName
  fullName: System.Security.Cryptography.HMAC.HashName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a kivonatoló algoritmust kivonatoláshoz nevét."
  syntax:
    content: public string HashName { get; set; }
    return:
      type: System.String
      description: "A kivonatoló algoritmus neve."
  overload: System.Security.Cryptography.HMAC.HashName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Az aktuális kivonatoló algoritmus nem lehet módosítani."
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.Initialize
  id: Initialize
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: Initialize()
  nameWithType: HMAC.Initialize()
  fullName: System.Security.Cryptography.HMAC.Initialize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Az alapértelmezett végrehajtásának példányt inicializál <xref href=&quot;System.Security.Cryptography.HMAC&quot;> </xref>."
  remarks: "A kivonat-alapú üzenethitelesítési kód (HMAC) használható annak meghatározásához, hogy egy nem biztonságos csatornán keresztül küldött üzenet módosították, feltéve, hogy a küldő és fogadó ugyanazt a titkos kulcsot. A küldő kiszámítja a kivonatot az eredeti adatokkal, és elküldi az eredeti adatok, mind a HMAC egyetlen üzenetben. A fogadó újraszámítja a kivonat értéke a fogadott üzenethez, és ellenőrzi, hogy a számított kivonat átvitt kivonat értéke megegyezik.       HMAC iteratív titkosítási kivonatot függvényeket, például az MD5 vagy SHA-1, egy közös titkos kulcs együtt használható. A kriptográfiai erőssége HMAC tulajdonságai között az alapul szolgáló kivonatoló függvénytől függ.       Bármi is módosul az adatokat, vagy a kivonat értéke nem egyeznek, eredményez, mert a titkos kulcs ismerete szükséges módosítani az üzenetet, és Reprodukálja a megfelelő kivonat értéke. Ezért ha az eredeti és számított kivonati értékek egyeznek, az üzenet hitelesítése."
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Security.Cryptography.HMAC.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.HMAC.Key
  id: Key
  parent: System.Security.Cryptography.HMAC
  langs:
  - csharp
  name: Key
  nameWithType: HMAC.Key
  fullName: System.Security.Cryptography.HMAC.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a kivonatoló algoritmus használandó kulcs."
  remarks: "Ez a tulajdonság a létre kivonatoló algoritmus kulcsa.       A kivonat-alapú üzenethitelesítési kód (HMAC) használható annak meghatározásához, hogy egy nem biztonságos csatornán keresztül küldött üzenet módosították, feltéve, hogy a küldő és fogadó ugyanazt a titkos kulcsot. A küldő kiszámítja a kivonatot az eredeti adatokkal, és elküldi az eredeti adatok, mind a HMAC egyetlen üzenetben. A fogadó újraszámítja a kivonat értéke a fogadott üzenethez, és ellenőrzi, hogy a számított kivonat átvitt kivonat értéke megegyezik.       HMAC iteratív titkosítási kivonatot függvényeket, például az MD5 vagy SHA-1, egy közös titkos kulcs együtt használható. A kriptográfiai erőssége HMAC tulajdonságai között az alapul szolgáló kivonatoló függvénytől függ.       Bármi is módosul az adatokat, vagy a kivonat értéke nem egyezik, eredményez, mert a titkos kulcs ismerete szükséges módosítani az üzenetet, és Reprodukálja a megfelelő kivonat értéke. Ezért ha az eredeti és számított kivonati értékek egyeznek, az üzenet hitelesítése."
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "A kivonatoló algoritmus használandó kulcs."
  overload: System.Security.Cryptography.HMAC.Key*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Kísérlet van a kulcs-tulajdonság módosításához a kivonatolás megkezdése után."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.HMAC.#ctor
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: HMAC()
  nameWithType: HMAC.HMAC()
  fullName: System.Security.Cryptography.HMAC.HMAC()
- uid: System.Security.Cryptography.HMAC.BlockSizeValue
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: BlockSizeValue
  nameWithType: HMAC.BlockSizeValue
  fullName: System.Security.Cryptography.HMAC.BlockSizeValue
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HMAC.Create
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Create()
  nameWithType: HMAC.Create()
  fullName: System.Security.Cryptography.HMAC.Create()
- uid: System.Security.Cryptography.HMAC
  parent: System.Security.Cryptography
  isExternal: false
  name: HMAC
  nameWithType: HMAC
  fullName: System.Security.Cryptography.HMAC
- uid: System.Security.Cryptography.HMAC.Create(System.String)
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Create(String)
  nameWithType: HMAC.Create(String)
  fullName: System.Security.Cryptography.HMAC.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.HMAC.Dispose(System.Boolean)
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HMAC.Dispose(Boolean)
  fullName: System.Security.Cryptography.HMAC.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: HashCore(Byte[],Int32,Int32)
  nameWithType: HMAC.HashCore(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.HMAC.HashCore(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.HMAC.HashFinal
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: HashFinal()
  nameWithType: HMAC.HashFinal()
  fullName: System.Security.Cryptography.HMAC.HashFinal()
- uid: System.Security.Cryptography.HMAC.HashName
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: HashName
  nameWithType: HMAC.HashName
  fullName: System.Security.Cryptography.HMAC.HashName
- uid: System.Security.Cryptography.HMAC.Initialize
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Initialize()
  nameWithType: HMAC.Initialize()
  fullName: System.Security.Cryptography.HMAC.Initialize()
- uid: System.Security.Cryptography.HMAC.Key
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Key
  nameWithType: HMAC.Key
  fullName: System.Security.Cryptography.HMAC.Key
- uid: System.Security.Cryptography.HMAC.#ctor*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: HMAC
  nameWithType: HMAC.HMAC
- uid: System.Security.Cryptography.HMAC.BlockSizeValue*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: BlockSizeValue
  nameWithType: HMAC.BlockSizeValue
- uid: System.Security.Cryptography.HMAC.Create*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Create
  nameWithType: HMAC.Create
- uid: System.Security.Cryptography.HMAC.Dispose*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Dispose
  nameWithType: HMAC.Dispose
- uid: System.Security.Cryptography.HMAC.HashCore*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: HashCore
  nameWithType: HMAC.HashCore
- uid: System.Security.Cryptography.HMAC.HashFinal*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: HashFinal
  nameWithType: HMAC.HashFinal
- uid: System.Security.Cryptography.HMAC.HashName*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: HashName
  nameWithType: HMAC.HashName
- uid: System.Security.Cryptography.HMAC.Initialize*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Initialize
  nameWithType: HMAC.Initialize
- uid: System.Security.Cryptography.HMAC.Key*
  parent: System.Security.Cryptography.HMAC
  isExternal: false
  name: Key
  nameWithType: HMAC.Key
