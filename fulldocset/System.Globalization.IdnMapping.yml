### YamlMime:ManagedReference
items:
- uid: System.Globalization.IdnMapping
  id: IdnMapping
  children:
  - System.Globalization.IdnMapping.#ctor
  - System.Globalization.IdnMapping.AllowUnassigned
  - System.Globalization.IdnMapping.Equals(System.Object)
  - System.Globalization.IdnMapping.GetAscii(System.String)
  - System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)
  - System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)
  - System.Globalization.IdnMapping.GetHashCode
  - System.Globalization.IdnMapping.GetUnicode(System.String)
  - System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)
  - System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)
  - System.Globalization.IdnMapping.UseStd3AsciiRules
  langs:
  - csharp
  name: IdnMapping
  nameWithType: IdnMapping
  fullName: System.Globalization.IdnMapping
  type: Class
  summary: "A nem ASCII karaktereket támogatja internetes tartománynevek alapján. Ez az osztály nem örökölhető."
  remarks: "Internetes tartományneveket nevű tartomány címkéket, szóközzel elválasztva címke szerepel egy vagy több részből áll. Például a tartomány neve &quot;www.proseware.com&quot; a címkék, &quot;www&quot;, &quot;proseware&quot; és &quot;com&quot; elválasztott áll. Standard tartománynevek US-ASCII (vagy alapvető Latin) karakter közé eshet,&0021; U + U +&007;E a kijelölt karakterből áll. Internet-használat a kulturális környezetek, amelyek nem használják az US-ASCII karakterkészlet tételének tartománynevek alkalmazások (IDNA) megkönnyítése érdekében támogatja a Unicode-karaktereket az US-ASCII karaktert kívül 2003 standard fogadták el. Kiszolgálókat és a tartománynév feloldásával azonban továbbra is használják a karakterek US-ASCII karaktert tartományba esik.       A IDNA mechanizmusa Punycode történő leképezéséhez az IDN-formátumú tartománynév, amely a US-ASCII karaktert a tartománynak, a tartománynévrendszer által támogatott US-ASCII karaktert esik az Unicode-karaktereket tartalmaz. A IDNA módszer használata csak tartománynevek, nem az interneten keresztül továbbított adatok konvertálni.      > [!IMPORTANT] > A a [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], a IdnMapping osztály IDNA normál használt operációs rendszertől függően különböző verzióit támogatja: >> – Ha futtassa a [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], amelyet IDNA normál 2008 verziója támogatja [RFC 5891: Internationalized Domain Names alkalmazások (IDNA): protokoll](http://go.microsoft.com/fwlink/?LinkId=231875).   >-Futtatásakor a a Windows operációs rendszer korábbi verzióin támogatja-e az szabvány, amelyet a 2003-as verziójának [RFC 3490-es: tartománynevek tételének alkalmazások (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).   >> Lásd: [Unicode műszaki szabvány #46: IDNA kompatibilitási feldolgozása](http://go.microsoft.com/fwlink/?LinkId=232459) a különbségeket, a ezeknek a szabványoknak adott karakterkészleteket kezelni.       A <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=fullName>metódus normalizálja egy tartomány nevét, a normalizált nevet, amely megjeleníthető Unicode áll megjelenítésre karakternél, a US-ASCII kódtartományon (U +&0020; az U +&007;E), és lefoglalja egy ASCII-kompatibilis (ACE) kódolást előtagja (&quot;xn--&quot;) konvertálja az egyes címkék.</xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=fullName> A <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=fullName>metódus visszaállítja a tartomány címkéket alakít át a <xref:System.Globalization.IdnMapping.GetAscii%2A>metódus.</xref:System.Globalization.IdnMapping.GetAscii%2A> </xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=fullName>       Ha konvertálni a karakterláncot tartalmazza a címke elválasztó karaktert tartalmaz IDEOGRAFIKUS teljes STOP (U +&3002;), FÉLSZÉLESSÉGŰ teljes LEÁLLÍTÁS (U + FF0E), és a teljes IDEOGRAFIKUS teljes STOP (U + FF61), a <xref:System.Globalization.IdnMapping.GetAscii%2A>metódus alakítja át ezeket a címke elválasztó teljes STOP (időszak, U +&002;E).</xref:System.Globalization.IdnMapping.GetAscii%2A> A <xref:System.Globalization.IdnMapping.GetUnicode%2A>módszer, azonban nem állítja vissza az eredeti címke elválasztó karaktert.</xref:System.Globalization.IdnMapping.GetUnicode%2A>"
  example:
  - "The following example uses the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> method to convert an array of internationalized domain names to Punycode. The <xref:System.Globalization.IdnMapping.GetUnicode%2A> method then converts the Punycode domain name back to the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-vb[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.i_1.vb)]\n [!code-cs[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/csharp/t-system.globalization.i_1.cs)]"
  syntax:
    content: public sealed class IdnMapping
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.#ctor
  id: '#ctor'
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: IdnMapping()
  nameWithType: IdnMapping.IdnMapping()
  fullName: System.Globalization.IdnMapping.IdnMapping()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Globalization.IdnMapping&quot;> </xref> osztály."
  remarks: "A <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=fullName>és <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=fullName>tulajdonságait a rendszer inicializálja `false`.</xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=fullName> </xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=fullName> ASCII-karakterek kivételével A-Z, 0-9, a kötőjel (-) kis méretű adathalmazra karakter (U + 002D), és a pont (.) karaktert a tartománynevek megengedettek, de ki nem osztott Unicode kódpontokat nem."
  syntax:
    content: public IdnMapping ();
    parameters: []
  overload: System.Globalization.IdnMapping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.AllowUnassigned
  id: AllowUnassigned
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: AllowUnassigned
  nameWithType: IdnMapping.AllowUnassigned
  fullName: System.Globalization.IdnMapping.AllowUnassigned
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy használja-e az aktuális tagjai által végrehajtott műveletek ki nem osztott Unicode kódpontokat <xref href=&quot;System.Globalization.IdnMapping&quot;> </xref> objektum."
  remarks: "Regisztrált tartománynév nem tartalmazhat a ki nem osztott kódpontokat. Ennek következtében a AllowUnassigned tulajdonság alapértelmezett értéke van `false`. A IDNA megadását lehetővé teszi a ki nem osztott kódjuk, csak az egyező karakterláncok lekérdezésekben (Ez azt jelenti, hogy a tartománynév feloldása). A tartománynevek ki nem osztott kódjuk használatával kapcsolatos további információk: [RFC 3454, &quot;Internationalized karakterláncok (stringprep) előkészítése&quot;](http://go.microsoft.com/fwlink/?LinkId=231873) és [RFC 5891, &quot;Internationalized tartomány nevét az alkalmazások (IDNA): protokoll&quot;](http://go.microsoft.com/fwlink/?LinkId=231875).      > [!IMPORTANT] > TheAllowUnassigned tulajdonság esetén `false`, a társított tulajdonság viselkedés attól függ, az alapul szolgáló operációs rendszert. A [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], a <xref:System.Globalization.IdnMapping>osztály megfelel-e IDNA 2008, a Unicode 6.0-s szabvány alapján.</xref:System.Globalization.IdnMapping> A Windows korábbi verzióiban a <xref:System.Globalization.IdnMapping>osztály IDNA 2003 rendszeren alapuló Unicode 3 alapul.* x*.</xref:System.Globalization.IdnMapping> Néhány kódot pontot, amelyet hozzá nem rendelt IDNA 2003 karakterek van rendelve, és IDNA 2008 által támogatott. Például U + 0221 bevezetett Unicode 4.0-s verzióját. A [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], mint encoded &quot;xn –&6;la&quot;. A Windows korábbi verzióiban jelez egy <xref:System.ArgumentException>kivétel.</xref:System.ArgumentException>"
  syntax:
    content: public bool AllowUnassigned { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ki nem osztott kód pontokat használnak a műveletek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.IdnMapping.AllowUnassigned*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IdnMapping.Equals(Object)
  fullName: System.Globalization.IdnMapping.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Azt jelzi, hogy a megadott objektumot és az aktuális <xref href=&quot;System.Globalization.IdnMapping&quot;> </xref> objektum azonosak."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Az aktuális objektum hasonlítsa össze az objektumhoz."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az objektum által megadott a <code> obj </code> paraméter eredete <xref href=&quot;System.Globalization.IdnMapping&quot;> </xref> és annak <> </> *> és <> </> *> tulajdonságainak egyenlő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.IdnMapping.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetAscii(System.String)
  id: GetAscii(System.String)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetAscii(String)
  nameWithType: IdnMapping.GetAscii(String)
  fullName: System.Globalization.IdnMapping.GetAscii(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Kódolja a tartomány címkéket, amely a megjeleníthető Unicode-karaktereket az US-ASCII karakter közé karakterláncra Unicode karaktereket tartalmazó karakterlánc. A karakterlánc a szabványos IDNA megfelelően van formázva."
  remarks: "A `unicode` paraméter adja meg egy vagy több címke, amely érvényes Unicode-karaktereket tartalmazó karakterlánc. A címkék vannak elválasztva címke szerepel. A `unicode` paraméter nem kezdődhet a címke elválasztó, de is tartalmazza, és opcionálisan egy elválasztó végződik. A címke elválasztók teljes STOP (időszak, U +&002;E), IDEOGRAFIKUS teljes LEÁLLÍTÁSA (U +&3002;), FÉLSZÉLESSÉGŰ teljes LEÁLLÍTÁS (U + FF0E), és a teljes IDEOGRAFIKUS teljes STOP (U + FF61). Például a tartomány neve &quot;www.adatum.com&quot; a címkék, &quot;www&quot;, &quot;adatum&quot; és &quot;com&quot; elválasztott áll.       A címke nem tartalmazhatja a következő karaktereket:-a&0001; U + U +&001;F és U +&007;F Unicode vezérlőkarakterek.      -Hozzá nem rendelt Unicode-karaktereket, ha az értéke a <xref:System.Globalization.IdnMapping.AllowUnassigned%2A>tulajdonság `false`.</xref:System.Globalization.IdnMapping.AllowUnassigned%2A>      -A US-ASCII nem szabványos karakterek tartományát, például a hely karakter (U +&0020;), FELKIÁLTÓJEL (U +&0021;), JELÖLJE és alacsony sor (U +&005;F) karaktert, ha értékének a <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>tulajdonság `true`.</xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>      – Egy adott verziójához IDNA normál által tiltott karakter. Tiltott karaktereket kapcsolatos további információkért lásd: [RFC 3454: előkészítés a nemzetközi karakterlánc (&quot;stringprep&quot;)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003, és [RFC 5982: A Unicode kódpontokat és Internationalized Domain Names alkalmazások](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.       A <xref:System.Globalization.IdnMapping.GetAscii%2A>módszer teljes STOP (időszak, U +&002;E) összes címke szerint konvertálja.</xref:System.Globalization.IdnMapping.GetAscii%2A>       Ha `unicode` nem kívül az US-ASCII karaktereket tartalmaz. a metódus visszaadja tilos karaktertartománnyal és egyetlen karakter US-ASCII karaktert tartományon belül, `unicode` változatlan."
  example:
  - "The following example uses the GetAscii method to convert an array of internationalized domain names to Punycode, which is an encoded equivalent that consists of characters in the US-ASCII character range. The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-vb[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/visualbasic/m-system.globalization.i_0_1.vb)]\n [!code-cs[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/csharp/m-system.globalization.i_0_1.cs)]"
  syntax:
    content: public string GetAscii (string unicode);
    parameters:
    - id: unicode
      type: System.String
      description: "Alakítandó karakterláncot, amely egy vagy több tartomány címkéket címke Elválasztókkal tagolt áll."
    return:
      type: System.String
      description: "A karakterlánc által meghatározott egyenértékű a <code> unicode </code> paraméter, a US-ASCII megjeleníthető Unicode-karaktereket tartalmazó tartomány (U +&0020; az U +&007;E) karakter, és a IDNA szabványnak megfelelően formázott."
  overload: System.Globalization.IdnMapping.GetAscii*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>unicode</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>unicode</code>Érvénytelen a alapján a <xref:System.Globalization.IdnMapping.AllowUnassigned*> és <xref:System.Globalization.IdnMapping.UseStd3AsciiRules*> tulajdonságait és a IDNA szabvány."
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)
  id: GetAscii(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetAscii(String,Int32)
  nameWithType: IdnMapping.GetAscii(String,Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Kódolja a Unicode-karaktereket az US-ASCII karaktert kívül tartalmazó tartomány nevét címkék karakterláncrész. A substring van karakterlánccá alakítja át a megjeleníthető Unicode-karaktereket az US-ASCII karaktert tartományban, és a IDNA szabványnak megfelelően van formázva."
  remarks: "A `unicode` és `index` paraméterek megadása egy substring egy vagy több címkével, amely érvényes Unicode-karaktereket. A címkék vannak elválasztva címke szerepel. Az első karakternek a substring címke elválasztó nem kezdődhet, de is tartalmazza, és opcionálisan egy elválasztó végződik. A címke elválasztók teljes STOP (időszak, U +&002;E), IDEOGRAFIKUS teljes LEÁLLÍTÁSA (U +&3002;), FÉLSZÉLESSÉGŰ teljes LEÁLLÍTÁS (U + FF0E), és a teljes IDEOGRAFIKUS teljes STOP (U + FF61). Például a tartomány neve &quot;www.adatum.com&quot; a címkék, &quot;www&quot;, &quot;adatum&quot; és &quot;com&quot; elválasztott áll.       A címke nem tartalmazhatja a következő karaktereket:-a&0001; U + U +&001;F és U +&007;F Unicode vezérlőkarakterek.      -Hozzá nem rendelt Unicode-karaktereket, attól függően, hogy az értékét a <xref:System.Globalization.IdnMapping.AllowUnassigned%2A>tulajdonság.</xref:System.Globalization.IdnMapping.AllowUnassigned%2A>      -A US-ASCII nem szabványos karakterek tartományát, például a hely karakter (U +&0020;), FELKIÁLTÓJEL (U +&0021;), JELÖLJE és alacsony sor (U +&005;F) karaktert, attól függően, hogy az értékét a <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>tulajdonság.</xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>      – Egy adott verziójához IDNA normál által tiltott karakter. Tiltott karaktereket kapcsolatos további információkért lásd: [RFC 3454: előkészítés a nemzetközi karakterlánc (&quot;stringprep&quot;)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003, és [RFC 5982: A Unicode kódpontokat és Internationalized Domain Names alkalmazások](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.       A <xref:System.Globalization.IdnMapping.GetAscii%2A>módszer teljes STOP (időszak, U +&002;E) összes címke szerint konvertálja.</xref:System.Globalization.IdnMapping.GetAscii%2A>       Ha `unicode` nem kívül az US-ASCII karaktereket tartalmaz. a metódus visszaadja tilos karaktertartománnyal és egyetlen karakter US-ASCII karaktert tartományon belül, `unicode` változatlan."
  example:
  - "The following example removes the local part and the @ character from an email address, and passes the resulting domain name to the GetAscii method to create a Punycode domain name, which is an encoded equivalent that consists of characters in the US-ASCII character range. The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-cs[System.Globalization.IdnMapping.GetAscii#2](~/add/codesnippet/csharp/m-system.globalization.i_3_1.cs)]\n [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/add/codesnippet/visualbasic/m-system.globalization.i_3_1.vb)]"
  syntax:
    content: public string GetAscii (string unicode, int index);
    parameters:
    - id: unicode
      type: System.String
      description: "Alakítandó karakterláncot, amely egy vagy több tartomány címkéket címke Elválasztókkal tagolt áll."
    - id: index
      type: System.Int32
      description: "A nulla eltolás `unicode` , amely megadja, hogy a substring átalakítani elindítása. Az átalakítási műveletet végén továbbra is a `unicode` karakterlánc."
    return:
      type: System.String
      description: "A megadott karakterláncrészlet egyenértékű a <code> unicode </code> és <code> index </code> paraméterek, a US-ASCII megjeleníthető Unicode-karaktereket tartalmazó tartomány (U +&0020; az U +&007;E) karakter, és a IDNA szabvány szerinti formázása."
  overload: System.Globalization.IdnMapping.GetAscii*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>unicode</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> hossza nagyobb <code>unicode</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>unicode</code>Érvénytelen a alapján a <xref:System.Globalization.IdnMapping.AllowUnassigned*> és <xref:System.Globalization.IdnMapping.UseStd3AsciiRules*> tulajdonságait és a IDNA szabvány."
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)
  id: GetAscii(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetAscii(String,Int32,Int32)
  nameWithType: IdnMapping.GetAscii(String,Int32,Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(String,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Kódolja a megadott számú karakterláncrész US-ASCII karaktert esik az Unicode-karaktereket tartalmazó tartomány nevét címkék karakter. A substring van karakterlánccá alakítja át a megjeleníthető Unicode-karaktereket az US-ASCII karaktert tartományban, és a IDNA szabványnak megfelelően van formázva."
  remarks: "A `Unicode`, `index`, és `count` paraméterek megadása egy substring egy vagy több címkével, amely érvényes Unicode-karaktereket. A címkék vannak elválasztva címke szerepel. Az első karakternek a substring címke elválasztó nem kezdődhet, de is tartalmazza, és opcionálisan egy elválasztó végződik. A címke elválasztók teljes STOP (időszak, U +&002;E), IDEOGRAFIKUS teljes LEÁLLÍTÁSA (U +&3002;), FÉLSZÉLESSÉGŰ teljes LEÁLLÍTÁS (U + FF0E), és a teljes IDEOGRAFIKUS teljes STOP (U + FF61). Például a tartomány neve &quot;www.adatum.com&quot; a címkék, &quot;www&quot;, &quot;adatum&quot; és &quot;com&quot; elválasztott áll.       A címke nem tartalmazhatja a következő karaktereket:-a&0001; U + U +&001;F és U +&007;F Unicode vezérlőkarakterek.      -Hozzá nem rendelt Unicode-karaktereket, attól függően, hogy az értékét a <xref:System.Globalization.IdnMapping.AllowUnassigned%2A>tulajdonság.</xref:System.Globalization.IdnMapping.AllowUnassigned%2A>      -A US-ASCII nem szabványos karakterek tartományát, például a hely karakter (U +&0020;), FELKIÁLTÓJEL (U +&0021;), JELÖLJE és alacsony sor (U +&005;F) karaktert, attól függően, hogy az értékét a <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>tulajdonság.</xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A>      – Egy adott verziójához IDNA normál által tiltott karakter. Tiltott karaktereket kapcsolatos további információkért lásd: [RFC 3454: előkészítés a nemzetközi karakterlánc (&quot;stringprep&quot;)](http://go.microsoft.com/fwlink/?LinkId=231873) IDNA 2003, és [RFC 5982: A Unicode kódpontokat és Internationalized Domain Names alkalmazások](http://go.microsoft.com/fwlink/?LinkId=231877) IDNA 2008.       A <xref:System.Globalization.IdnMapping.GetAscii%2A>módszer teljes STOP (időszak, U +&002;E) összes címke szerint konvertálja.</xref:System.Globalization.IdnMapping.GetAscii%2A> Ha a substring az US-ASCII karaktert kívül nem karaktereket tartalmaz, és tilos egyetlen karakter US-ASCII karaktert tartományon belül, a metódus a változatlan karakterláncrészt adja vissza."
  example:
  - "The following example uses the GetAscii method to convert an internationalized domain name to a domain name that complies with the IDNA standard. The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the standardized domain name back into the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-vb[IdnMapping.GetX#1](~/add/codesnippet/visualbasic/9eb31a8b-c677-4c73-81bb-_1.vb)]\n [!code-cs[IdnMapping.GetX#1](~/add/codesnippet/csharp/9eb31a8b-c677-4c73-81bb-_1.cs)]"
  syntax:
    content: public string GetAscii (string unicode, int index, int count);
    parameters:
    - id: unicode
      type: System.String
      description: "Alakítandó karakterláncot, amely egy vagy több tartomány címkéket címke Elválasztókkal tagolt áll."
    - id: index
      type: System.Int32
      description: "A nulla eltolás `unicode` , amely megadja, hogy a substring elindítása."
    - id: count
      type: System.Int32
      description: "Alakítsa át a megadott pozíciónál elinduló substring a karakterek száma `index` a a `unicode` karakterlánc."
    return:
      type: System.String
      description: "A megadott karakterláncrészlet egyenértékű a <code> unicode </code>, <code> index </code>, és <code> count </code> paraméterek, a US-ASCII megjeleníthető Unicode-karaktereket tartalmazó tartomány (U +&0020; az U +&007;E) karakter, és a IDNA szabvány szerinti formázása."
  overload: System.Globalization.IdnMapping.GetAscii*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>unicode</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>vagy <code>count</code> nullánál kisebb.       – vagy – <code>index</code> hossza nagyobb <code>unicode</code>.       – vagy – <code>index</code> hossza nagyobb <code>unicode</code> mínusz <code>count</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>unicode</code>Érvénytelen a alapján a <xref:System.Globalization.IdnMapping.AllowUnassigned*> és <xref:System.Globalization.IdnMapping.UseStd3AsciiRules*> tulajdonságait és a IDNA szabvány."
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetHashCode
  id: GetHashCode
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IdnMapping.GetHashCode()
  fullName: System.Globalization.IdnMapping.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Egy kivonatoló kódot ad vissza a <xref href=&quot;System.Globalization.IdnMapping&quot;> </xref> objektum."
  remarks: "Bírálja felül a GetHashCode metódust, ha az alkalmazásnak egy jelentéssel bíró kivonatoló kódot algoritmus végrehajtásához."
  example:
  - "The following example assumes that a single string can contain multiple email addresses separated by spaces. It removes the local part and the @ character from each email address, and passes the resulting domain name to the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> or <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> method to create a Punycode domain name. The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the Punycode domain name back into the original domain name.  \n  \n [!code-cs[System.Globalization.IdnMapping.GetAscii#3](~/add/codesnippet/csharp/m-system.globalization.i_2_1.cs)]\n [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/add/codesnippet/visualbasic/m-system.globalization.i_2_1.vb)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy négy 32 bites előjeles állandók származó tulajdonságait egy <xref href=&quot;System.Globalization.IdnMapping&quot;> </xref> objektum.  A visszatérési érték nem bír speciális jelentéssel, és nem használható kód kivonatoló algoritmus."
  overload: System.Globalization.IdnMapping.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetUnicode(System.String)
  id: GetUnicode(System.String)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetUnicode(String)
  nameWithType: IdnMapping.GetUnicode(String)
  fullName: System.Globalization.IdnMapping.GetUnicode(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Dekódol egy vagy több tartomány címkéket, IDNA szabvány, a karakterláncot Unicode kódolású karakterlánc."
  remarks: "Tartománynevek, a címkék és a felirat elválasztók kapcsolatos további információkért lásd: a Megjegyzések a <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>metódus.</xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>"
  example:
  - "The following example uses the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> method to convert an array of internationalized domain names to Punycode. The GetUnicode method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.  \n  \n [!code-vb[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/visualbasic/m-system.globalization.i_1_1.vb)]\n [!code-cs[System.Globalization.IdnMapping.Class#1](~/add/codesnippet/csharp/m-system.globalization.i_1_1.cs)]"
  syntax:
    content: public string GetUnicode (string ascii);
    parameters:
    - id: ascii
      type: System.String
      description: "A karakterlánc dekódolni, amely egy vagy több címke a IDNA szabványnak megfelelően kódolt US-ASCII karakter közé (U +&0020; az U +&007;E) áll."
    return:
      type: System.String
      description: "A megadott IDNA SUBSTRING Unicode egyenértékű a <code> ascii </code> paraméter."
  overload: System.Globalization.IdnMapping.GetUnicode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ascii</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ascii</code>Érvénytelen a alapján a <xref:System.Globalization.IdnMapping.AllowUnassigned*> és <xref:System.Globalization.IdnMapping.UseStd3AsciiRules*> tulajdonságait és a IDNA szabvány."
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)
  id: GetUnicode(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetUnicode(String,Int32)
  nameWithType: IdnMapping.GetUnicode(String,Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Egy vagy több tartomány neve címkék, IDNA szabvány, a karakterláncot Unicode kódolású karakterláncrész dekódolása."
  remarks: "Tartománynevek, a címkék és a felirat elválasztók kapcsolatos további információkért lásd: a Megjegyzések a <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>metódus.</xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>"
  syntax:
    content: public string GetUnicode (string ascii, int index);
    parameters:
    - id: ascii
      type: System.String
      description: "A karakterlánc dekódolni, amely egy vagy több címke a IDNA szabványnak megfelelően kódolt US-ASCII karakter közé (U +&0020; az U +&007;E) áll."
    - id: index
      type: System.Int32
      description: "A nulla eltolás `ascii` , amely megadja, hogy a substring dekódolás elindítása. A dekódolási művelet végén továbbra is a `ascii` karakterlánc."
    return:
      type: System.String
      description: "A megadott IDNA SUBSTRING Unicode egyenértékű a <code> ascii </code> és <code> index </code> paraméterek."
  overload: System.Globalization.IdnMapping.GetUnicode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ascii</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla.       – vagy – <code>index</code> hossza nagyobb <code>ascii</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ascii</code>Érvénytelen a alapján a <xref:System.Globalization.IdnMapping.AllowUnassigned*> és <xref:System.Globalization.IdnMapping.UseStd3AsciiRules*> tulajdonságait és a IDNA szabvány."
  platform:
  - net462
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)
  id: GetUnicode(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: GetUnicode(String,Int32,Int32)
  nameWithType: IdnMapping.GetUnicode(String,Int32,Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(String,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Egy vagy több tartomány címkéket, IDNA szabvány, a karakterláncot Unicode kódolású tartalmazó megadott hosszúságú részkarakterlánc dekódolása."
  remarks: "Tartománynevek, a címkék és a felirat elválasztók kapcsolatos további információkért lásd: a Megjegyzések a <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>metódus.</xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName>"
  syntax:
    content: public string GetUnicode (string ascii, int index, int count);
    parameters:
    - id: ascii
      type: System.String
      description: "A karakterlánc dekódolni, amely egy vagy több címke a IDNA szabványnak megfelelően kódolt US-ASCII karakter közé (U +&0020; az U +&007;E) áll."
    - id: index
      type: System.Int32
      description: "A nulla eltolás `ascii` , amely megadja, hogy a substring elindítása."
    - id: count
      type: System.Int32
      description: "Alakítsa át a megadott pozíciónál elinduló substring a karakterek száma `index` a a `ascii` karakterlánc."
    return:
      type: System.String
      description: "A megadott IDNA SUBSTRING Unicode egyenértékű a <code> ascii </code>, <code> index </code>, és <code> count </code> paraméterek."
  overload: System.Globalization.IdnMapping.GetUnicode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ascii</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>vagy <code>count</code> nullánál kisebb.       – vagy – <code>index</code> hossza nagyobb <code>ascii</code>.       – vagy – <code>index</code> hossza nagyobb <code>ascii</code> mínusz <code>count</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ascii</code>Érvénytelen a alapján a <xref:System.Globalization.IdnMapping.AllowUnassigned*> és <xref:System.Globalization.IdnMapping.UseStd3AsciiRules*> tulajdonságait és a IDNA szabvány."
  platform:
  - net462
- uid: System.Globalization.IdnMapping.UseStd3AsciiRules
  id: UseStd3AsciiRules
  parent: System.Globalization.IdnMapping
  langs:
  - csharp
  name: UseStd3AsciiRules
  nameWithType: IdnMapping.UseStd3AsciiRules
  fullName: System.Globalization.IdnMapping.UseStd3AsciiRules
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy használja-e az aktuális tagjai által végrehajtott műveletek standard vagy enyhített elnevezési konvenciókat <xref href=&quot;System.Globalization.IdnMapping&quot;> </xref> objektum."
  remarks: "Tartománynevek, kövesse az általános elnevezési szabályok egy adott részének a US-ASCII karaktertartománnyal karakterből áll. A karakterek: betűkből A – Z, 0-tól 9 számjegyek, a kötőjel (-) karakter (U + 002D) és a pont (.) karakter. A kis-és a karakterek között nincs jelentős eltérés. Laza elnevezési konvenciókat egy ASCII szélesebb körű tartomány használatának engedélyezése karaktert, köztük a hely karakter (U +&0020;), a felkiáltójel (U +&0021;) karaktert, és az alulvonás karaktert (U +&005;F). Ha a UseStd3AsciiRules használata esetén `true`, csak a rendes karaktereket jelenhetnek meg a címke által visszaadott a <xref:System.Globalization.IdnMapping.GetAscii%2A>metódus.</xref:System.Globalization.IdnMapping.GetAscii%2A>       Alapértelmezés szerint a UseStd3AsciiRules használata esetén a tulajdonság értéke `false`, és egy bővített részhalmaza ASCII-karakterekből álló címke megengedett.      > [!NOTE] > A <xref:System.Globalization.IdnMapping>osztály nem engedélyezi a nondisplayable karakterek&0000; U + U +&001;F keresztül, és a tartománynév&007;F U + függetlenül a UseStd3AsciiRules használata esetén tulajdonság.</xref:System.Globalization.IdnMapping> Ez a Tiltás csökkenti a biztonsági támadások ellen, mint neve címhamisítást kockázatát."
  example:
  - "The following example generates URLs that contain characters in the ASCII range from U+0000 to U+007F and passes them to the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> method of two <xref:System.Globalization.IdnMapping> objects. One object has its UseStd3AsciiRules property set to `true`, and the other object has it set to `false`. The output displays the characters that are invalid when the UseStd3AsciiRules property is `true` but valid when it is `false`.  \n  \n [!code-cs[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/add/codesnippet/csharp/p-system.globalization.i_1.cs)]\n [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/add/codesnippet/visualbasic/p-system.globalization.i_1.vb)]"
  syntax:
    content: public bool UseStd3AsciiRules { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>szabványos elnevezési konvenciókat használata esetén a műveletek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.IdnMapping.UseStd3AsciiRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Globalization.IdnMapping.#ctor
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: IdnMapping()
  nameWithType: IdnMapping.IdnMapping()
  fullName: System.Globalization.IdnMapping.IdnMapping()
- uid: System.Globalization.IdnMapping.AllowUnassigned
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: AllowUnassigned
  nameWithType: IdnMapping.AllowUnassigned
  fullName: System.Globalization.IdnMapping.AllowUnassigned
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.IdnMapping.Equals(System.Object)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: Equals(Object)
  nameWithType: IdnMapping.Equals(Object)
  fullName: System.Globalization.IdnMapping.Equals(Object)
- uid: System.Globalization.IdnMapping.GetAscii(System.String)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetAscii(String)
  nameWithType: IdnMapping.GetAscii(String)
  fullName: System.Globalization.IdnMapping.GetAscii(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetAscii(String,Int32)
  nameWithType: IdnMapping.GetAscii(String,Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetAscii(String,Int32,Int32)
  nameWithType: IdnMapping.GetAscii(String,Int32,Int32)
  fullName: System.Globalization.IdnMapping.GetAscii(String,Int32,Int32)
- uid: System.Globalization.IdnMapping.GetHashCode
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetHashCode()
  nameWithType: IdnMapping.GetHashCode()
  fullName: System.Globalization.IdnMapping.GetHashCode()
- uid: System.Globalization.IdnMapping.GetUnicode(System.String)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetUnicode(String)
  nameWithType: IdnMapping.GetUnicode(String)
  fullName: System.Globalization.IdnMapping.GetUnicode(String)
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetUnicode(String,Int32)
  nameWithType: IdnMapping.GetUnicode(String,Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(String,Int32)
- uid: System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetUnicode(String,Int32,Int32)
  nameWithType: IdnMapping.GetUnicode(String,Int32,Int32)
  fullName: System.Globalization.IdnMapping.GetUnicode(String,Int32,Int32)
- uid: System.Globalization.IdnMapping.UseStd3AsciiRules
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: UseStd3AsciiRules
  nameWithType: IdnMapping.UseStd3AsciiRules
  fullName: System.Globalization.IdnMapping.UseStd3AsciiRules
- uid: System.Globalization.IdnMapping.#ctor*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: IdnMapping
  nameWithType: IdnMapping.IdnMapping
- uid: System.Globalization.IdnMapping.AllowUnassigned*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: AllowUnassigned
  nameWithType: IdnMapping.AllowUnassigned
- uid: System.Globalization.IdnMapping.Equals*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: Equals
  nameWithType: IdnMapping.Equals
- uid: System.Globalization.IdnMapping.GetAscii*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetAscii
  nameWithType: IdnMapping.GetAscii
- uid: System.Globalization.IdnMapping.GetHashCode*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetHashCode
  nameWithType: IdnMapping.GetHashCode
- uid: System.Globalization.IdnMapping.GetUnicode*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: GetUnicode
  nameWithType: IdnMapping.GetUnicode
- uid: System.Globalization.IdnMapping.UseStd3AsciiRules*
  parent: System.Globalization.IdnMapping
  isExternal: false
  name: UseStd3AsciiRules
  nameWithType: IdnMapping.UseStd3AsciiRules
