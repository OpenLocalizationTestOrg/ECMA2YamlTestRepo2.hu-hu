### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptConverter
  id: JavaScriptConverter
  children:
  - System.Web.Script.Serialization.JavaScriptConverter.#ctor
  - System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  - System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  - System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
  langs:
  - csharp
  name: JavaScriptConverter
  nameWithType: JavaScriptConverter
  fullName: System.Web.Script.Serialization.JavaScriptConverter
  type: Class
  summary: "Egy absztrakt alaposztály biztosít egy egyéni típuskonverternek."
  remarks: "A javascriptconverter osztálytól osztály szerializálási alkalmazza, és a folyamatok nem <xref:System.Web.Script.Serialization.JavaScriptSerializer>osztály</xref:System.Web.Script.Serialization.JavaScriptSerializer> által natívan támogatott felügyelt típusokhoz deszerializálási segítségével Is használhatja a javascriptconverter osztálytól, ha van szüksége a szerializálás és a deszerializálás folyamat teljesebb körű vezérlése.       A <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>tulajdonság azt jelzi, amelyhez egyéni konvertert szolgáltatásokat nyújt a konverter típusok.</xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>       Annak jelzésére, hogy egy egyéni konverter kell használniuk a <xref:System.Web.Script.Serialization.JavaScriptSerializer>példány, a konverter regisztrálnia kell a példánnyal.</xref:System.Web.Script.Serialization.JavaScriptSerializer> Használatakor a <xref:System.Web.Script.Serialization.JavaScriptSerializer>osztályban közvetlenül, használja a <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>metódus a konverter regisztrálni.</xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer> Ellenkező esetben, ha meghívott webes metódusok ECMAScript (JavaScript) származó, és az Egyéni átalakító használni kívánt, regisztrálni az hozzáadásával egy `converters` a konfigurációs fájlban. További információkért lásd: [hogyan: ASP.NET-szolgáltatások konfigurálása a Microsoft Ajax](~/add/includes/ajax-current-ext-md.md).       Ha a <xref:System.Web.Script.Serialization.JavaScriptSerializer>példány van szerializálása közben a szerializáló hívások, amelynek van regisztrálva, egyéni konvertert típus a <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>metódus.</xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer> Hasonlóképpen, ha a <xref:System.Web.Script.Serialization.JavaScriptSerializer>példány van a JavaScript Object Notation (JSON) karakterlánc deszerializálása és felismeri, hogy a JSON-karakterlánc belső típus tartozik a egyéni rendelhető hozzá a szerializáló hívások a <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A>metódus.</xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> </xref:System.Web.Script.Serialization.JavaScriptSerializer>"
  example:
  - "The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.  \n  \n [!code-cs[System.Web.Script.Serialization#2](~/add/codesnippet/csharp/t-system.web.script.seri_2_1.cs)]\n [!code-vb[System.Web.Script.Serialization#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_2_1.vb)]"
  syntax:
    content: public abstract class JavaScriptConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptConverter
  langs:
  - csharp
  name: JavaScriptConverter()
  nameWithType: JavaScriptConverter.JavaScriptConverter()
  fullName: System.Web.Script.Serialization.JavaScriptConverter.JavaScriptConverter()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.Script.Serialization.JavaScriptConverter&quot;> </xref> osztály."
  syntax:
    content: protected JavaScriptConverter ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  id: Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  parent: System.Web.Script.Serialization.JavaScriptConverter
  langs:
  - csharp
  name: Deserialize(IDictionary<String,Object>,Type,JavaScriptSerializer)
  nameWithType: JavaScriptConverter.Deserialize(IDictionary<String,Object>,Type,JavaScriptSerializer)
  fullName: System.Web.Script.Serialization.JavaScriptConverter.Deserialize(IDictionary<String,Object>,Type,JavaScriptSerializer)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Ha felül van bírálva a származtatott osztály, alakítja át a megadott könyvtár a megadott típusú objektumot."
  syntax:
    content: public abstract object Deserialize (System.Collections.Generic.IDictionary<string,object> dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Egy &lt;xref:System.Collections.Generic.IDictionary%602&gt; tulajdonságadat név/érték párok tárolt példányát."
    - id: type
      type: System.Type
      description: "Az eredményül kapott objektumok típusa."
    - id: serializer
      type: System.Web.Script.Serialization.JavaScriptSerializer
      description: "A <xref href=&quot;System.Web.Script.Serialization.JavaScriptSerializer&quot;> </xref> példány."
    return:
      type: System.Object
      description: "A deszerializált objektum."
  overload: System.Web.Script.Serialization.JavaScriptConverter.Deserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  id: Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  parent: System.Web.Script.Serialization.JavaScriptConverter
  langs:
  - csharp
  name: Serialize(Object,JavaScriptSerializer)
  nameWithType: JavaScriptConverter.Serialize(Object,JavaScriptSerializer)
  fullName: System.Web.Script.Serialization.JavaScriptConverter.Serialize(Object,JavaScriptSerializer)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Ha a származtatott osztály felülbírálva, név-érték párokból álló dictionary épít."
  remarks: "Ha egy egyéni konverter regisztrálása, amelynek típus szerializálható a <xref:System.Web.Script.Serialization.JavaScriptSerializer>példány szerializálása metódus meghívja.</xref:System.Web.Script.Serialization.JavaScriptSerializer>"
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);
    parameters:
    - id: obj
      type: System.Object
      description: "Az objektum szerializálása."
    - id: serializer
      type: System.Web.Script.Serialization.JavaScriptSerializer
      description: "Az objektum, amely a szerializálási felelős."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Egy objektum, amely tartalmazza a kulcs/érték párok, az objektum adatait tartalmazzák."
  overload: System.Web.Script.Serialization.JavaScriptConverter.Serialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
  id: SupportedTypes
  parent: System.Web.Script.Serialization.JavaScriptConverter
  langs:
  - csharp
  name: SupportedTypes
  nameWithType: JavaScriptConverter.SupportedTypes
  fullName: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "Felül van bírálva a származtatott osztály, amikor lekérdezi a támogatott típusok gyűjteménye."
  remarks: "A SupportedTypes tulajdonság listája a konverter által támogatott. Futási időben a <xref:System.Web.Script.Serialization.JavaScriptSerializer>példány ezt a tulajdonságot használja a felügyelt közül a megfelelő egyéni konverterek való leképezés meghatározásához.</xref:System.Web.Script.Serialization.JavaScriptSerializer>"
  example:
  - "The following example shows how to override the SupportedTypes property in a derived class. In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \n  \n [!code-cs[System.Web.Script.Serialization#3](~/add/codesnippet/csharp/p-system.web.script.seri_1.cs)]\n [!code-vb[System.Web.Script.Serialization#3](~/add/codesnippet/visualbasic/p-system.web.script.seri_1.vb)]"
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<Type> SupportedTypes { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "Egy objektum, amely megvalósítja az &lt;xref:System.Collections.Generic.IEnumerable%601&gt; , amely a konverter által támogatott eszköztípusok jelöli."
  overload: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: JavaScriptConverter()
  nameWithType: JavaScriptConverter.JavaScriptConverter()
  fullName: System.Web.Script.Serialization.JavaScriptConverter.JavaScriptConverter()
- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: Deserialize(IDictionary<String,Object>,Type,JavaScriptSerializer)
  nameWithType: JavaScriptConverter.Deserialize(IDictionary<String,Object>,Type,JavaScriptSerializer)
  fullName: System.Web.Script.Serialization.JavaScriptConverter.Deserialize(IDictionary<String,Object>,Type,JavaScriptSerializer)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Script.Serialization.JavaScriptSerializer
  parent: System.Web.Script.Serialization
  isExternal: false
  name: JavaScriptSerializer
  nameWithType: JavaScriptSerializer
  fullName: System.Web.Script.Serialization.JavaScriptSerializer
- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: Serialize(Object,JavaScriptSerializer)
  nameWithType: JavaScriptConverter.Serialize(Object,JavaScriptSerializer)
  fullName: System.Web.Script.Serialization.JavaScriptConverter.Serialize(Object,JavaScriptSerializer)
- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: SupportedTypes
  nameWithType: JavaScriptConverter.SupportedTypes
  fullName: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: JavaScriptConverter
  nameWithType: JavaScriptConverter.JavaScriptConverter
- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize*
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: Deserialize
  nameWithType: JavaScriptConverter.Deserialize
- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize*
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: Serialize
  nameWithType: JavaScriptConverter.Serialize
- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes*
  parent: System.Web.Script.Serialization.JavaScriptConverter
  isExternal: false
  name: SupportedTypes
  nameWithType: JavaScriptConverter.SupportedTypes
