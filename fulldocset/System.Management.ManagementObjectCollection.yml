### YamlMime:ManagedReference
items:
- uid: System.Management.ManagementObjectCollection
  id: ManagementObjectCollection
  children:
  - System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  - System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  - System.Management.ManagementObjectCollection.Count
  - System.Management.ManagementObjectCollection.Dispose
  - System.Management.ManagementObjectCollection.Finalize
  - System.Management.ManagementObjectCollection.GetEnumerator
  - System.Management.ManagementObjectCollection.IsSynchronized
  - System.Management.ManagementObjectCollection.SyncRoot
  - System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ManagementObjectCollection
  nameWithType: ManagementObjectCollection
  fullName: System.Management.ManagementObjectCollection
  type: Class
  summary: "WMI-n keresztül lekért objektumok különböző gyűjteményei jelöli. Az objektumok ebben a gyűjteményben <xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref>-származtatott típusok, beleértve a <xref href=&quot;System.Management.ManagementObject&quot;> </xref> és <xref href=&quot;System.Management.ManagementClass&quot;> </xref>. A gyűjtemény lehet keresztül végrehajtani a WMI-lekérdezés eredménye egy <xref href=&quot;System.Management.ManagementObjectSearcher&quot;> </xref>, egy a megadott típusú objektumok számbavétele keresztül, illetve egy <xref href=&quot;System.Management.ManagementClass&quot;> </xref> típusát jelölő. Ezenkívül ez lehet felügyeleti objektumok kapcsolódó megadott úgy, hogy egy adott felügyeleti objektum – ebben az esetben a gyűjtemény szeretné beolvasni módszerrel például gyűjteménye <xref href=&quot;System.Management.ManagementObject.GetRelated&quot;> </xref>. A gyűjtemény segítségével lehet telefonon a <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator>és a benne lévő objektumokat megvizsgálni, vagy nem kezelhetők a különböző kezelési feladatokat.</xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator>"
  syntax:
    content: 'public class ManagementObjectCollection : IDisposable, System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ManagementObjectCollection.CopyTo(Array,Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Másolja a gyűjtemény egy tömb."
  remarks: "##.NET-keretrendszer biztonsági teljes megbízhatóság a közvetlen hívónak. Ez a tag nem használható részben megbízható kóddal. További információkért lásd: [szalagtárak használata a részlegesen megbízható kódból](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Tömb másolandó."
    - id: index
      type: System.Int32
      description: "Az index indítását."
  overload: System.Management.ManagementObjectCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  id: CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: CopyTo(ManagementBaseObject[],Int32)
  nameWithType: ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Az elemek másolása a gyűjteménynek a egy <xref href=&quot;System.Management.ManagementBaseObject&quot;> </xref> tömb."
  remarks: "##.NET-keretrendszer biztonsági teljes megbízhatóság a közvetlen hívónak. Ez a tag nem használható részben megbízható kóddal. További információkért lásd: [szalagtárak használata a részlegesen megbízható kódból](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CopyTo (System.Management.ManagementBaseObject[] objectCollection, int index);
    parameters:
    - id: objectCollection
      type: System.Management.ManagementBaseObject[]
      description: "A céltömb."
    - id: index
      type: System.Int32
      description: "Az index indítását."
  overload: System.Management.ManagementObjectCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Count
  id: Count
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Count
  nameWithType: ManagementObjectCollection.Count
  fullName: System.Management.ManagementObjectCollection.Count
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "A gyűjteményben lévő objektumok számát jelző érték beolvasása."
  remarks: "Ez nagyon drága tulajdonság - van szükség, hogy a gyűjtemény összes tagjához vehető számba.      ## Tulajdonság értékét a gyűjteményben található objektumok száma.      ## .NET-keretrendszer biztonsági teljes megbízhatóság a közvetlen hívónak. Ez a tag nem használható részben megbízható kóddal. További információkért lásd: [szalagtárak használata a részlegesen megbízható kódból](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Értéket ad vissza egy <xref:System.Int32>érték a gyűjteményben lévő objektumok számát jelzi.</xref:System.Int32>"
  overload: System.Management.ManagementObjectCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Dispose
  id: Dispose
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Dispose()
  nameWithType: ManagementObjectCollection.Dispose()
  fullName: System.Management.ManagementObjectCollection.Dispose()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Ehhez az objektumhoz társított erőforrások kiadását. Ez a metódus meghívása után ez az objektum használata eredményezi egy <xref:System.ObjectDisposedException>merültek fel.</xref:System.ObjectDisposedException>"
  remarks: "##.NET-keretrendszer biztonsági teljes megbízhatóság a közvetlen hívónak. Ez a tag nem használható részben megbízható kóddal. További információkért lásd: [szalagtárak használata a részlegesen megbízható kódból](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Management.ManagementObjectCollection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.Finalize
  id: Finalize
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: Finalize()
  nameWithType: ManagementObjectCollection.Finalize()
  fullName: System.Management.ManagementObjectCollection.Finalize()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Az objektum rendelkező erőforrások értékesít. Ez az objektum az az objektum. A befejező szerint van megadva a destruktor szintaxis használatával."
  remarks: "##.NET-keretrendszer biztonsági teljes megbízhatóság a közvetlen hívónak. Ez a tag nem használható részben megbízható kóddal. További információkért lásd: [szalagtárak használata a részlegesen megbízható kódból](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: ~ManagementObjectCollection ();
    parameters: []
  overload: System.Management.ManagementObjectCollection.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ManagementObjectCollection.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "A számbavevő a gyűjtemény adja vissza."
  remarks: "Is csak többször (mint a Visual Basic .NET `For Each` utasítást, vagy egy C# `For` utasítás) keresztül a csak előrefelé bejárható enumerátor egy alkalommal. A memória, a példányokat tartalmazó WMI szabadul fel, hogy a számbavevő nem visszatekerése. Ezért a <xref:System.Management.ManagementObjectCollection.Count%2A>metódus nem használható, mert van szükség a számbavevő visszatekerése.</xref:System.Management.ManagementObjectCollection.Count%2A>       A csak számbavételekhez általában sokkal gyorsabban, és kevesebb memóriával hagyományos enumerálók, de nem engedélyezik a <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>.</xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A> hívások       Ha enumerátor rewindable, a gyűjtemény objektumok folyamatosan több enumerálások érhető el.      ## .NET-keretrendszer biztonsági teljes megbízhatóság a közvetlen hívónak. Ez a tag nem használható részben megbízható kóddal. További információkért lásd: [szalagtárak használata a részlegesen megbízható kódból](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Management.ManagementObjectCollection.ManagementObjectEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Management.ManagementObjectCollection.ManagementObjectEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>, amelyek segítségével a gyűjtemény iterációt.</xref:System.Collections.IEnumerator>"
  overload: System.Management.ManagementObjectCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
  fullName: System.Management.ManagementObjectCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Lekérdezi egy érték, amely jelzi, hogy az objektum szinkronizálva van-e."
  remarks: "##Tulajdonság értéke `true`, ha az objektum szinkronizálva van, egyébként `false`.      ## .NET-keretrendszer biztonsági teljes megbízhatóság a közvetlen hívónak. Ez a tag nem használható részben megbízható kóddal. További információkért lásd: [szalagtárak használata a részlegesen megbízható kódból](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Értéket ad vissza egy <xref:System.Boolean>érték azt jelzi, hogy az objektum szinkronizálva van-e.</xref:System.Boolean>"
  overload: System.Management.ManagementObjectCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.SyncRoot
  id: SyncRoot
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
  fullName: System.Management.ManagementObjectCollection.SyncRoot
  type: Property
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Lekérdezi a szinkronizáláshoz használt objektum."
  remarks: "##Tulajdonság értékét a szinkronizáláshoz használt objektum.      ## .NET-keretrendszer biztonsági teljes megbízhatóság a közvetlen hívónak. Ez a tag nem használható részben megbízható kóddal. További információkért lásd: [szalagtárak használata a részlegesen megbízható kódból](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Értéket ad vissza egy <xref:System.Object>érték, amely a szinkronizáláshoz használni az objektumot jelöli.</xref:System.Object>"
  overload: System.Management.ManagementObjectCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Management.ManagementObjectCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Management
  namespace: System.Management
  summary: "Értéket ad vissza egy <xref:System.Collections.IEnumerator>keresztül, amely megismétli a <xref href=&quot;System.Management.ManagementObjectCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[A Visual Basic, a C#]       A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége.  Ezért használatával `foreach` ajánlott, az adatbázis közvetlen módosítása az enumerátor helyett.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.IEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.IEnumerator.Reset%2A> At ez elhelyezése, hívja <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.IEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.IEnumerator.Current%2A>átállítása.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Ha <xref:System.Collections.IEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.IEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.IEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.IEnumerator.MoveNext%2A>visszaadott `false`, hívó <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> követ</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenné válik, és <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>egy <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> jelez</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> , vagy hívja a következő Ha a gyűjtemény módosítás közötti <xref:System.Collections.IEnumerator.MoveNext%2A>és <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>adja vissza az elem, értékűre van állítva, akkor is, ha a számláló már érvénytelenné válik.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem biztonságos szál eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Ez a módszer O(1) során."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Management.ManagementObjectCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ManagementObjectCollection.CopyTo(Array,Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo(ManagementBaseObject[],Int32)
  nameWithType: ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
  fullName: System.Management.ManagementObjectCollection.CopyTo(ManagementBaseObject[],Int32)
- uid: System.Management.ManagementBaseObject[]
  parent: System.Management
  isExternal: false
  name: ManagementBaseObject
  nameWithType: ManagementBaseObject
  fullName: System.Management.ManagementBaseObject[]
  spec.csharp:
  - uid: System.Management.ManagementBaseObject
    name: ManagementBaseObject
    nameWithType: ManagementBaseObject
    fullName: ManagementBaseObject[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Management.ManagementObjectCollection.Count
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Count
  nameWithType: ManagementObjectCollection.Count
  fullName: System.Management.ManagementObjectCollection.Count
- uid: System.Management.ManagementObjectCollection.Dispose
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Dispose()
  nameWithType: ManagementObjectCollection.Dispose()
  fullName: System.Management.ManagementObjectCollection.Dispose()
- uid: System.Management.ManagementObjectCollection.Finalize
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Finalize()
  nameWithType: ManagementObjectCollection.Finalize()
  fullName: System.Management.ManagementObjectCollection.Finalize()
- uid: System.Management.ManagementObjectCollection.GetEnumerator
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ManagementObjectCollection.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.GetEnumerator()
- uid: System.Management.ManagementObjectCollection.ManagementObjectEnumerator
  parent: System.Management
  isExternal: false
  name: ManagementObjectCollection+ManagementObjectEnumerator
  nameWithType: ManagementObjectCollection+ManagementObjectEnumerator
  fullName: System.Management.ManagementObjectCollection+ManagementObjectEnumerator
- uid: System.Management.ManagementObjectCollection.IsSynchronized
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
  fullName: System.Management.ManagementObjectCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.ManagementObjectCollection.SyncRoot
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
  fullName: System.Management.ManagementObjectCollection.SyncRoot
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Management.ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Management.ManagementObjectCollection.CopyTo*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: CopyTo
  nameWithType: ManagementObjectCollection.CopyTo
- uid: System.Management.ManagementObjectCollection.Count*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Count
  nameWithType: ManagementObjectCollection.Count
- uid: System.Management.ManagementObjectCollection.Dispose*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Dispose
  nameWithType: ManagementObjectCollection.Dispose
- uid: System.Management.ManagementObjectCollection.Finalize*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: Finalize
  nameWithType: ManagementObjectCollection.Finalize
- uid: System.Management.ManagementObjectCollection.GetEnumerator*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ManagementObjectCollection.GetEnumerator
- uid: System.Management.ManagementObjectCollection.IsSynchronized*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ManagementObjectCollection.IsSynchronized
- uid: System.Management.ManagementObjectCollection.SyncRoot*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ManagementObjectCollection.SyncRoot
- uid: System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Management.ManagementObjectCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ManagementObjectCollection.System.Collections.IEnumerable.GetEnumerator
