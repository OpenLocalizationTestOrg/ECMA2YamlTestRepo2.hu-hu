### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaDataMember
  id: MetaDataMember
  children:
  - System.Data.Linq.Mapping.MetaDataMember.#ctor
  - System.Data.Linq.Mapping.MetaDataMember.Association
  - System.Data.Linq.Mapping.MetaDataMember.AutoSync
  - System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  - System.Data.Linq.Mapping.MetaDataMember.DbType
  - System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  - System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  - System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  - System.Data.Linq.Mapping.MetaDataMember.Expression
  - System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  - System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  - System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  - System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  - System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  - System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  - System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  - System.Data.Linq.Mapping.MetaDataMember.IsVersion
  - System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  - System.Data.Linq.Mapping.MetaDataMember.MappedName
  - System.Data.Linq.Mapping.MetaDataMember.Member
  - System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  - System.Data.Linq.Mapping.MetaDataMember.Name
  - System.Data.Linq.Mapping.MetaDataMember.Ordinal
  - System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  - System.Data.Linq.Mapping.MetaDataMember.StorageMember
  - System.Data.Linq.Mapping.MetaDataMember.Type
  - System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  langs:
  - csharp
  name: MetaDataMember
  nameWithType: MetaDataMember
  fullName: System.Data.Linq.Mapping.MetaDataMember
  type: Class
  summary: "A mező vagy tulajdonság a tartomány objektumok közötti leképezést egy adatbázis tábláinak oszlopba jelöli."
  syntax:
    content: public abstract class MetaDataMember
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MetaDataMember()
  nameWithType: MetaDataMember.MetaDataMember()
  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.Linq.Mapping.MetaDataMember&quot;> </xref> osztály."
  syntax:
    content: protected MetaDataMember ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaDataMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Association
  id: Association
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Association
  nameWithType: MetaDataMember.Association
  fullName: System.Data.Linq.Mapping.MetaDataMember.Association
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> , amely megfelel a ehhez a taghoz."
  remarks: "Ez a tulajdonság társítást egy adatbázis például egy idegen kulcs elsődlegeskulcs-kapcsolathoz."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAssociation
      description: "A megfelelő <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> Ha létezik; egyéb esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.Association*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  id: AutoSync
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Az ehhez a taghoz INSERT olvasási visszaírt viselkedését beolvasása és a frissítési műveleteket."
  syntax:
    content: public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }
    return:
      type: System.Data.Linq.Mapping.AutoSync
      description: "Egy <xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref> enumerálása."
  overload: System.Data.Linq.Mapping.MetaDataMember.AutoSync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  id: CanBeNull
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy ez a tag értéke lehet hozzárendelni a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> érték."
  remarks: "Ez a tulajdonság akkor függ a <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>tulajdonság, és kényelmi célokat szolgál.</xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>"
  syntax:
    content: public abstract bool CanBeNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ezt a tagot is hozzárendelhető a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> érték; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType
  id: DbType
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DbType
  nameWithType: MetaDataMember.DbType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a hozzá tartozó adatbázis-oszlop típusa."
  remarks: "Ez határozza meg az oszlop egy Transact-SQL táblázat deklaráció parancsban használt pontos szöveg lesz. Ha nem így meghatározott, az adatbázis-oszlop típusa van következtetni a tag típusa."
  syntax:
    content: public abstract string DbType { get; }
    return:
      type: System.String
      description: "Az adatbázis oszlop karakterlánc típusú."
  overload: System.Data.Linq.Mapping.MetaDataMember.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  id: DeclaringType
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> , amely az adatok tagot tartalmaz."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "A metaadat-típus, amely az aktuális tagot tartalmaz."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  id: DeferredSourceAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a get és set ehhez a taghoz késleltetett forrását használt elérővel."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "Az ehhez a taghoz a késleltetett forrás eléréséhez használt elérővel."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  id: DeferredValueAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a elérő, és állítsa be a késleltetett ezt a tagot (anélkül, hogy ez a fetch) használt."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "Az elérő használatával elérhető a késleltetett értéket ehhez a taghoz."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression
  id: Expression
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Expression
  nameWithType: MetaDataMember.Expression
  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a számított oszlopot definiáló kifejezés."
  syntax:
    content: public abstract string Expression { get; }
    return:
      type: System.String
      description: "A számított oszlop kifejezése karakterláncként."
  overload: System.Data.Linq.Mapping.MetaDataMember.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  id: IsAssociation
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy ez a tag egy társítás kapcsolat határozza meg."
  syntax:
    content: public abstract bool IsAssociation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a tag definiál egy társítás kapcsolatban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  id: IsDbGenerated
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy ez a tag automatikusan létrejön az adatbázis."
  remarks: "Automatikusan létrehozott tagok szinkronizálva van a megfelelő adatok sor beszúrása után azonnal. Helyezze be az eseményindító által létrehozott kulcs értékek használata nem támogatott."
  syntax:
    content: public abstract bool IsDbGenerated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a tag automatikusan generálja az adatbázisban. Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  id: IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDeclaredBy(MetaType)
  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Meghatározza, hogy ez a tag a megadott típus nem deklarál."
  syntax:
    content: public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);
    parameters:
    - id: type
      type: System.Data.Linq.Mapping.MetaType
      description: "Ellenőrizze a típus."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a tag deklarálja a megadott típus; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  id: IsDeferred
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy az alapértelmezett viselkedés betölteni ehhez a taghoz késleltetett alapon."
  syntax:
    content: public abstract bool IsDeferred { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a tag késleltetett alapon alapértelmezett; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  id: IsDiscriminator
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy ez a tag az öröklési Diszkriminátor jelöli."
  remarks: "Ez a tulajdonság lehet `true` legfeljebb egy tagja a legfelső a hierarchiában osztály leképezése."
  syntax:
    content: public abstract bool IsDiscriminator { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a tag öröklési Diszkriminátor; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  id: IsPersistent
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy ez a tag egy oszlop (vagy a korlátozás) van leképezve."
  remarks: "Egy osztály állandó, és nem állandó tagok kombinációja lehet. Állandó tagok van leképezve, míg nem állandó tagok nincsenek leképezve. Egy csatlakoztatott osztály rendelkeznie kell legalább egy állandó tag."
  syntax:
    content: public abstract bool IsPersistent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a tag le van képezve egy oszlopban vagy korlátozás; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy ez a tag a típus identitásának része."
  remarks: "Ha ez a tulajdonság `true`, az a tag jelenti. a tábla egyedi kulcs részét képező oszlop. Az osztály több tagja lehet e tulajdonsága `true` , amely a társított oszlopok összetett kulcsok. Egy entitás osztály legalább egy tagot a attribútummal kell rendelkeznie, és az elsődleges kulcs vagy a megfelelő tábla vagy nézet egy egyedi kulcsot kell hozzárendelni. Ellenkező esetben &quot;LINQ to SQL&quot; úgy ítéli meg, csak olvasásra történő elküldésekor a módosítások adatbázisba osztály példányai.       Egy IsPrimaryKey oszlopok csoportja nem szükséges az elsődleges kulcsként. Ezek egyszerűen jelöl, amely egyedileg azonosítja az entitást. Közös ilyen például a fürtszolgáltatás index vagy más egyedi kulcs oszlopainak."
  syntax:
    content: public abstract bool IsPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ezt a tagot a típus identitásának; része Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  id: IsVersion
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy ez a tag jelenti. a sor verzió vagy Timestamp típusú."
  remarks: "Verziószámok eggyel növeli, és mindig frissül, a társított sor frissülnek a Timestamp típusú oszlopokat."
  syntax:
    content: public abstract bool IsVersion { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a tag jelenti. a sor verzió vagy Timestamp típusú; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  id: LoadMethod
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> terhelés műveletek végrehajtásához használt módszer."
  syntax:
    content: public abstract System.Reflection.MethodInfo LoadMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "A load metódus, mint a <xref:System.Reflection.MethodInfo>.</xref:System.Reflection.MethodInfo>"
  overload: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName
  id: MappedName
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MappedName
  nameWithType: MetaDataMember.MappedName
  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Az oszlop (vagy korlátozás) neve lekérdezi az adatbázisban."
  syntax:
    content: public abstract string MappedName { get; }
    return:
      type: System.String
      description: "Az oszlop (vagy korlátozás) karakterlánc neve."
  overload: System.Data.Linq.Mapping.MetaDataMember.MappedName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Member
  id: Member
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Member
  nameWithType: MetaDataMember.Member
  fullName: System.Data.Linq.Mapping.MetaDataMember.Member
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Az alapul szolgáló <xref:System.Reflection.MemberInfo>.</xref:System.Reflection.MemberInfo> beolvasása"
  syntax:
    content: public abstract System.Reflection.MemberInfo Member { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "Attribútum és metaadat-információit."
  overload: System.Data.Linq.Mapping.MetaDataMember.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  id: MemberAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a elérő használt beolvasni vagy megadni a tag értékét."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "A elérővel."
  overload: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Name
  id: Name
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Name
  nameWithType: MetaDataMember.Name
  fullName: System.Data.Linq.Mapping.MetaDataMember.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a nevét, a tag, ugyanaz, mint a <xref:System.Reflection.MemberInfo>neve.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "A név, ugyanaz, mint a <xref:System.Reflection.MemberInfo>neve.</xref:System.Reflection.MemberInfo>"
  overload: System.Data.Linq.Mapping.MetaDataMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  id: Ordinal
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "A helyen a tag az alapértelmezett elrendezésben a lekérdezés eredményeinek lekérése."
  syntax:
    content: public abstract int Ordinal { get; }
    return:
      type: System.Int32
      description: "A helyen."
  overload: System.Data.Linq.Mapping.MetaDataMember.Ordinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  id: StorageAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Az elérő használt lekérése vagy beállítása ehhez a taghoz tárolási értékének beolvasása."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "Ez a tag tárolási értékének elérővel."
  overload: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  id: StorageMember
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a tagot, amely tárolja az adatokat ehhez a taghoz."
  syntax:
    content: public abstract System.Reflection.MemberInfo StorageMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "A tároló tag."
  overload: System.Data.Linq.Mapping.MetaDataMember.StorageMember*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Type
  id: Type
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Type
  nameWithType: MetaDataMember.Type
  fullName: System.Data.Linq.Mapping.MetaDataMember.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a tag típusával."
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "Az aktuális tagot típusa."
  overload: System.Data.Linq.Mapping.MetaDataMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  id: UpdateCheck
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Az optimista konkurencia ellenőrzése házirend lekérése ehhez a taghoz."
  remarks: "Ha az osztály nem rendelkezik egy verziószámot (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> beállítása `true`), észlelési adatbázis jelenlegi állapotával való eredeti tag értékek összehasonlításával történik.</xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A>       A UpdateCheck tulajdonság határozza meg, hogyan valósítja meg a &quot;LINQ to SQL&quot; az egyidejű hozzáférések optimista ütközésészlelés. Ezzel a tulajdonsággal rendelkező tagok beállítása <xref:System.Data.Linq.Mapping.UpdateCheck>vagy <xref:System.Data.Linq.Mapping.UpdateCheck>során előforduló ütközések észlelésére minősülnek.</xref:System.Data.Linq.Mapping.UpdateCheck> </xref:System.Data.Linq.Mapping.UpdateCheck>"
  syntax:
    content: public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }
    return:
      type: System.Data.Linq.Mapping.UpdateCheck
      description: "An <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;></xref> enum."
  overload: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MetaDataMember()
  nameWithType: MetaDataMember.MetaDataMember()
  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()
- uid: System.Data.Linq.Mapping.MetaDataMember.Association
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Association
  nameWithType: MetaDataMember.Association
  fullName: System.Data.Linq.Mapping.MetaDataMember.Association
- uid: System.Data.Linq.Mapping.MetaAssociation
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaAssociation
  nameWithType: MetaAssociation
  fullName: System.Data.Linq.Mapping.MetaAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync
- uid: System.Data.Linq.Mapping.AutoSync
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: AutoSync
  nameWithType: AutoSync
  fullName: System.Data.Linq.Mapping.AutoSync
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DbType
  nameWithType: MetaDataMember.DbType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
- uid: System.Data.Linq.Mapping.MetaType
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaType
  nameWithType: MetaType
  fullName: System.Data.Linq.Mapping.MetaType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
- uid: System.Data.Linq.Mapping.MetaAccessor
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaAccessor
  nameWithType: MetaAccessor
  fullName: System.Data.Linq.Mapping.MetaAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Expression
  nameWithType: MetaDataMember.Expression
  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeclaredBy(MetaType)
  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MappedName
  nameWithType: MetaDataMember.MappedName
  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName
- uid: System.Data.Linq.Mapping.MetaDataMember.Member
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Member
  nameWithType: MetaDataMember.Member
  fullName: System.Data.Linq.Mapping.MetaDataMember.Member
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Name
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Name
  nameWithType: MetaDataMember.Name
  fullName: System.Data.Linq.Mapping.MetaDataMember.Name
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Type
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Type
  nameWithType: MetaDataMember.Type
  fullName: System.Data.Linq.Mapping.MetaDataMember.Type
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
- uid: System.Data.Linq.Mapping.UpdateCheck
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: UpdateCheck
  nameWithType: UpdateCheck
  fullName: System.Data.Linq.Mapping.UpdateCheck
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MetaDataMember
  nameWithType: MetaDataMember.MetaDataMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Association*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Association
  nameWithType: MetaDataMember.Association
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DbType
  nameWithType: MetaDataMember.DbType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Expression
  nameWithType: MetaDataMember.Expression
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeclaredBy
  nameWithType: MetaDataMember.IsDeclaredBy
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MappedName
  nameWithType: MetaDataMember.MappedName
- uid: System.Data.Linq.Mapping.MetaDataMember.Member*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Member
  nameWithType: MetaDataMember.Member
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Name*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Name
  nameWithType: MetaDataMember.Name
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Type*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Type
  nameWithType: MetaDataMember.Type
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
