### YamlMime:ManagedReference
items:
- uid: System.Web.Security.AuthorizationStoreRoleProvider
  id: AuthorizationStoreRoleProvider
  children:
  - System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  - System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  - System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  - System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  - System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  - System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  langs:
  - csharp
  name: AuthorizationStoreRoleProvider
  nameWithType: AuthorizationStoreRoleProvider
  fullName: System.Web.Security.AuthorizationStoreRoleProvider
  type: Class
  summary: "Kezeli a szerepkör-csoporttagsági információkat az engedélyezési-tárolót, vagy egy XML-fájlban, az Active Directoryban, vagy az Active Directory Alkalmazásmódú-kiszolgáló egy ASP.NET-alkalmazás tárolására."
  remarks: "This class is used by the <xref:System.Web.Security.Roles> and <xref:System.Web.Security.RolePrincipal> classes to provide role-management services for an ASP.NET application using an authorization-manager store. You can use role management to specify different levels of authorization for your application. The authorization manager can be accessed using the Microsoft Management Console.  \n  \n The AuthorizationStoreRoleProvider object works with both Windows authentication and forms authentication modes.  \n  \n You can configure the AuthorizationStoreRoleProvider object to use either a local XML file or an Active Directory or Active Directory Application Mode (ADAM) server. When using a local file, the connection string should look like the following example.  \n  \n```  \nmsxml://<path to xml file>  \n```  \n  \n If the local file is stored in the directory tree of an ASP.NET Web application, you can use the tilde (\"~\") character to indicate the root directory. For example, to indicate that the local file is stored in the Web application's data directory, you would use a connection string similar to the following example.  \n  \n `msxml://~\\App_Data\\datafilename.xml`  \n  \n> [!IMPORTANT]\n>  Storing an XML data file in the Web application directory is a potential security threat. By default, IIS will serve XML data files to the Web. To improve security when using a local data file in an ASP.NET application, you should store the data file in the `App_Data` directory. Files stored in the `App_Data` directory will not be served to the Web.  \n  \n If you are using an Active Directory or ADAM server for the policy store, your connection string should be similar to the following example.  \n  \n `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  \n  \n The exceptions listed in the documentation for AuthorizationStoreRoleProvider object methods are the exceptions that are raised by the AuthorizationStoreRoleProvider object. Since the provider relies on the underlying Authentication Manager runtime, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown whenever the AuthorizationStoreRoleProvider object forwards a method call to the Authentication Manager runtime.  \n  \n> [!IMPORTANT]\n>  The AuthorizationStoreRoleProvider object has the following requirements for running in partial-trust environments:  \n>   \n>  When using a file-based policy store in an ASP.NET application, the file I/O permissions granted by the current trust level determine whether read and write actions are allowed by the provider. The ASP.NET application must have read permission on the file to read data from the policy store, and must have write permission to save new information or update existing information in the policy store. The default Medium-trust policy file gives an ASP.NET application read/write permissions in its application directory. The default Low-trust policy file only gives an ASP.NET application read permission in its application directory. In addition, the process identity under which the ASP.NET application runs must have file-system permissions to read and/or write the policy file.  \n>   \n>  When using an Active Directory or ADAM server, the ASP.NET application needs unmanaged-code permission because the internal AuthorizationStoreRoleProvider object code uses COM interop.  \n>   \n>  When using the AuthorizationStoreRoleProvider object outside of ASP.NET, the calling code needs unmanaged-code permission."
  example:
  - "The following code example shows a Web.config file set to use the AuthorizationStoreRoleProvider for role management.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"AuthorizationServices\" connectionString=\"msxml://~\\App_Data\\SampleStore.xml\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n  \n    <authentication mode=\"Windows\" />  \n    <identity impersonate=\"true\" />  \n  \n    <roleManager defaultProvider=\"AuthorizationStoreRoleProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"true\"  \n      cookieName=\".ASPROLES\"  \n      cookieTimeout=\"30\"  \n      cookiePath=\"/\"  \n      cookieRequireSSL=\"false\"  \n      cookieSlidingExpiration=\"true\"  \n      cookieProtection=\"All\" >  \n      <providers>  \n        <clear />  \n          <add  \n            name=\"AuthorizationStoreRoleProvider\"  \n            type=\"System.Web.Security.AuthorizationStoreRoleProvider\"  \n            connectionStringName=\"AuthorizationServices\"  \n            applicationName=\"SampleApplication\"   \n            cacheRefreshInterval=\"60\"  \n            scopeName=\"\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: AuthorizationStoreRoleProvider()
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> osztály."
  remarks: "A AuthorizationStoreRoleProvider konstruktor példányának létrehozásához az ASP.NET hívja a <xref:System.Web.Security.AuthorizationStoreRoleProvider>az alkalmazás konfigurációjában megadott osztály.</xref:System.Web.Security.AuthorizationStoreRoleProvider> Ez a konstruktor nem célja, hogy a felhasználói kódból használható."
  syntax:
    content: public AuthorizationStoreRoleProvider ();
    parameters: []
  overload: System.Web.Security.AuthorizationStoreRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A megadott felhasználóneveknek hozzáadja a megadott szerepkörök."
  remarks: "A AddUsersToRoles metódust a <xref:System.Web.Security.Roles>osztály társítson egy vagy több felhasználókat a Engedélyezéskezelő adattár, az ASP.NET-alkalmazás (Web.config) konfigurációs fájlban megadott egy vagy több szerepkört.</xref:System.Web.Security.Roles> Ezt a metódust a <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=fullName>, <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=fullName>, <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=fullName>, és <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=fullName>az <xref:System.Web.Security.Roles>osztály</xref:System.Web.Security.Roles> a</xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=fullName> </xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=fullName> </xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=fullName> </xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=fullName>"
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/51528ad0-2535-416a-b69f-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/51528ad0-2535-416a-b69f-_1.aspx)]"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "A megadott szerepkörök hozzáadandó felhasználónevek karakterlánc-tömbben."
    - id: roleNames
      type: System.String[]
      description: "A szerepkör nevét a megadott felhasználói név hozzáadása a karakterlánc-tömbben."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A megadott felhasználóneveknek egyik <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       – vagy – a megadott szerepkörneveket egyik <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       -or-       <code>usernames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott felhasználó neveinek egyike üres karakterlánc vagy vesszővel (,) tartalmaz.       – vagy – a megadott szerepkör neveinek egyike üres karakterlánc vagy vesszővel (,) tartalmaz.       – vagy – <code> usernames </code> egy duplikált elemet tartalmaz.       – vagy – <code> roleNames </code> egy duplikált elemet tartalmaz."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A megadott <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi vagy beállítja az engedélyezési tároló alkalmazás, amelynek tárolásához és lekéréséhez szerepköri információkat nevét."
  remarks: "Az ApplicationName használja a <xref:System.Web.Security.AuthorizationStoreRoleProvider>rendelje hozzá a felhasználók és szerepkörök különböző Engedélyezéskezelő alkalmazásokkal, amely lehetővé teszi több ASP.NET-alkalmazások ugyanazt az Engedélykezelő házirendet az tároló a tároló szerepköri információkat való futtatása nélkül ütközik közötti ismétlődő szerepkörneveket.</xref:System.Web.Security.AuthorizationStoreRoleProvider> Több ASP.NET-alkalmazások azonban használhat házirend ugyanarra a tároló ugyanazt az értéket az ApplicationName tulajdonság megadásával. Az ApplicationName tulajdonság programozott módon állítható be, vagy azt beállítható az alkalmazás Web.config fájljában használatával a `applicationName` attribútum.       Ha nincs megadva érték a `applicationName` attribútumot a Web.config fájlban, akkor a <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>tulajdonság értéke az aktuális <xref:System.Web.HttpContext.Request%2A?displayProperty=fullName>objektummal.</xref:System.Web.HttpContext.Request%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>      > [!NOTE] > Engedélyezéskezelő alkalmazás neve nem tartalmazhatja a &quot;/&quot; karaktert, amely megtalálható a <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>tulajdonság.</xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName> Ennek eredményeképpen az ApplicationName tulajdonság alapértelmezett értéke nem használható az Engedélykezelő alkalmazás nevét, és az alkalmazás Web.config fájljában, mindig meg kell adnia egy `applicationName` attribútumnak a `provider` elem konfigurálása a <xref:System.Web.Security.AuthorizationStoreRoleProvider>példány.</xref:System.Web.Security.AuthorizationStoreRoleProvider>      > [!CAUTION] > Oka egy egy alapértelmezett szerepkör-szolgáltató példánya, az összes által kiszolgált kérelmek egy <xref:System.Web.HttpApplication>objektum több kérelem végrehajtása egyidejűleg, és az ApplicationName tulajdonság értékének beállítására tett kísérlet lehet.</xref:System.Web.HttpApplication> Az ApplicationName tulajdonság nincs több írások szálbiztos, és nem várt viselkedést ApplicationName tulajdonság értékének megmódosítása okozhat, ha egy alkalmazás több felhasználó. Azt javasoljuk, amely lehetővé teszi a felhasználóknak az ApplicationName tulajdonság beállítása csak akkor kell programozás elkerüléséhez. Egy alkalmazás, ahol az ApplicationName tulajdonság beállítását lehet szükség például egy felügyeleti alkalmazás, amely a szerepkör több alkalmazás kezeli. Ilyen alkalmazás egy különálló alkalmazás, és nem egy webalkalmazás kell lennie."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.AuthorizationStoreRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"AuthorizationStoreProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.AuthorizationStoreRoleProvider\"  \n      connectionStringName=\"AuthorizationStoreServices\"   \n      scopeName=\"MyScope\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Az engedély neve alkalmazás, amelynek tárolásához és lekéréséhez szerepköradatok tárolására. Az alapértelmezett érték a &lt;xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName&gt; az aktuális tulajdonságértéket &lt;xref:System.Web.HttpContext.Request%2A?displayProperty=fullName&gt;."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Kísérlet történt az ApplicationName beállításához, amely legfeljebb 256 karakter hosszúságú karakterlánc."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  id: CacheRefreshInterval
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi a percet a gyorsítótár, a csoportházirend-tároló adatok frissítései között."
  syntax:
    content: public int CacheRefreshInterval { get; }
    return:
      type: System.Int32
      description: "A gyorsítótárazott házirendtárolót adatok frissítései között percek számát. Az alapértelmezett érték 60."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: AuthorizationStoreRoleProvider.CreateRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hozzáad egy új szerepkört a szerepkör engedélyezési-tárolóban."
  remarks: "A CreateRole metódust a <xref:System.Web.Security.Roles>osztály a Engedélyezéskezelő adattár, az ASP.NET-alkalmazás konfigurációs fájljában (Web.config) megadott szerepkör létrehozása.</xref:System.Web.Security.Roles>       Szerepkör nevében a rendszer nem kis-és nagybetűket."
  example:
  - "The following code example creates a new role in the authorization-manager policy store. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_0_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_0_1.aspx)]"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "A létrehozni kívánt szerepkör neve."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>az üres karakterlánc.       – vagy – <code>roleName</code> vesszőt tartalmaz."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A megadott <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A szerepkör eltávolítása az engedélyezési-tárolót."
  remarks: "A DeleteRole metódust a <xref:System.Web.Security.Roles>osztály szerepkör törlése a engedélyezési-tárolót az ASP.NET-alkalmazás (Web.config) konfigurációs fájlban megadott.</xref:System.Web.Security.Roles> A törölt egy szerepkör adott szerepkörhöz rendelt felhasználók listáját a házirendtárolót is törlődik. Ez nem befolyásolja a felhasználói adatokat az adatbázisban.       Ha `throwOnPopulatedRole` van `true`, majd kivétel lépett fel, és a szerepkör nem törlődik, ha a szerepkör azonosítja a `roleName` paraméter egy vagy több tagja van. Ha `throwOnPopulatedRole` van `false`, hogy-e üres vagy nem törli a szerepkört."
  example:
  - "The following example deletes a role from the authorization-manager policy store. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/csharp/f8238a62-ae02-4a3c-85f0-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/visualbasic/f8238a62-ae02-4a3c-85f0-_1.aspx)]"
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Törli a szerepkör neve."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Ha <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, kivételt jelez, ha `roleName` egy vagy több tagja van."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a szerepkör törölve lett; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>az üres karakterlánc.       – vagy – <code>roleName</code> vesszőt tartalmaz."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>egy vagy több tagja van, és <code>throwOnPopulatedRole</code> van <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       – vagy – a beállított <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ez a metódus nem támogatott az engedélyezési tároló szerepkör-szolgáltató."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "A szerepkör kereséséhez."
    - id: usernameToMatch
      type: System.String
      description: "A felhasználónév keresése."
    return:
      type: System.String[]
      description: "Az összes olyan felhasználó, amelynek a neve megegyezik a neveket tartalmazó karakterlánc-tömbben <code> usernameToMatch </code> és akik tagjai a megadott szerepkörhöz."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Egy nem támogatott metódus lett meghívva."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A szerepkörök listájának lekérése az alkalmazáshoz."
  remarks: "A GetAllRoles metódust a <xref:System.Web.Security.Roles>osztály kérdezheti le a engedélyezési-tárolót az ASP.NET-alkalmazás (Web.config) konfigurációs fájlban megadott összes olyan szerepkör.</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetAllRoles%2A> method to get the list of roles for an application and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_2_1.aspx)]"
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "A szerepkörök a Engedélyezéskezelő házirend tárolja egy adott alkalmazáshoz nevét tartalmazó karakterlánc-tömbben."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A megadott <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A szerepköröket, amelyek egy felhasználó listájának lekérése."
  remarks: "A GetRolesForUser metódust a <xref:System.Web.Security.Roles>osztály egy adott felhasználó szerepkörei listájának lekérése a engedélyezési-tárolót az ASP.NET-alkalmazás (Web.config) konfigurációs fájlban megadott.</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetRolesForUser%2A> method to retrieve a list of roles for a specified user and binds them to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/540a45cf-e182-4a47-b288-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/540a45cf-e182-4a47-b288-_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "A felhasználói szerepek listájához való visszatéréshez."
    return:
      type: System.String[]
      description: "A szerepkörök, hogy a megadott felhasználónak a nevét tartalmazó karakterlánc-tömbben."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>vesszőt tartalmaz."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A megadott <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A megadott szerepkör felhasználók listájának lekérése."
  remarks: "A GetUsersInRole metódust a <xref:System.Web.Security.Roles>osztály azoknak az engedélyezési-tárolót az ASP.NET-alkalmazás konfigurációs fájljában (Web.config) szerepel a megadott szerepkörhöz rendelt felhasználók listáját.</xref:System.Web.Security.Roles>       A GetUsersInRole metódus csak visszaadja a közvetlenül tárolt felhasználónevek által meghatározott engedélyezéskezelő szerepkör a `roleName` paraméter. Az alapul szolgáló-Engedélyezéskezelő API a metódus nem támogatja a csoport kiterjesztése, lévő beágyazott NT-csoportokat, így felhasználók GetUsersInRole által meghívott beágyazott Engedélyezéskezelő csoportok, és az LDAP-lekérdezés csoportok nem állítható vissza."
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetUsersInRole%2A> method to get a list of the users in a particular role and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/ebc3a7d6-e0bc-48f6-bf0f-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/ebc3a7d6-e0bc-48f6-bf0f-_1.aspx)]"
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "A felhasználók listájának lekérdezése a szerepkör neve."
    return:
      type: System.String[]
      description: "Az összes olyan felhasználó, akik tagjai a megadott szerepkör nevét tartalmazó karakterlánc-tömbben."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>az üres karakterlánc.       – vagy – <code>roleName</code> vesszőt tartalmaz."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A megadott <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializálja az Engedélykezelő szerepkör-szolgáltató az ASP.NET-alkalmazás-konfigurációs fájlban megadott tulajdonság értékekkel. Ez a módszer nem célja, hogy közvetlenül a kódból használni."
  remarks: "Inicializálási metódusa inicializálja a <xref:System.Web.Security.AuthorizationStoreRoleProvider>tulajdonsága az értékeket az ASP.NET alkalmazás konfigurációs fájljában (Web.config) megadott, és nem javasolt közvetlenül a kódból használni.</xref:System.Web.Security.AuthorizationStoreRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Neve a <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példány inicializálása."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> , amely tartalmazza a és a szerepkör-szolgáltató konfigurációs lehetőségeinek értékek."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum üres, vagy nem szerepel a [connectionStrings elem (ASP.NET beállítási séma)](http://msdn.microsoft.com/en-us/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) konfigurációs szakasz.       – vagy – a beállított <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> hosszabb 256 karakternél.       – vagy – ez a konfiguráció <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt ismeretlen attribútumot tartalmaz."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Az ASP.NET-alkalmazás nem fut, <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> megbízhatósági vagy újabb verzióját."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi egy érték, amely jelzi, hogy a megadott felhasználó szerepel-e a megadott szerepkörhöz."
  remarks: "A IsUserInRole metódust a <xref:System.Web.Security.Roles>osztály és a <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metódusában a <xref:System.Web.UI.Page.User%2A?displayProperty=fullName>meghatározásához. a felhasználó társítva van egy szerepkör esetén az Engedélykezelő adattár, az ASP.NET-alkalmazás konfigurációs fájljában (Web.config) megadott tulajdonság.</xref:System.Web.UI.Page.User%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example programmatically checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/90a9fe0c-acb8-442c-9ca1-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/90a9fe0c-acb8-442c-9ca1-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "A felhasználónév keresése."
    - id: roleName
      type: System.String
      description: "A szerepkör kereséséhez."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott felhasználónév a megadott szerepkör; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>az üres karakterlánc.       – vagy – <code>roleName</code> vesszőt tartalmaz.       – vagy – <code>username</code> vesszőt tartalmaz."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A megadott <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A megadott felhasználóneveknek eltávolítja a megadott szerepkörök."
  remarks: "A RemoveUsersFromRoles metódust a <xref:System.Web.Security.Roles>osztály egy vagy több felhasználó eltávolítása az Engedélykezelő házirend az ASP.NET-alkalmazás (Web.config) konfigurációs fájlban megadott egy vagy több szerepkört.</xref:System.Web.Security.Roles> Ezt a metódust a <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, és <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>az <xref:System.Web.Security.Roles>osztály</xref:System.Web.Security.Roles> a</xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> </xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> </xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> </xref:System.Web.Security.Roles.RemoveUserFromRole%2A>"
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/a89492ce-ed56-4c62-adf2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/a89492ce-ed56-4c62-adf2-_1.aspx)]"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);
    parameters:
    - id: userNames
      type: System.String[]
      description: "A felhasználónevek eltávolítsa őket a megadott szerepkörök karakterlánc-tömbben."
    - id: roleNames
      type: System.String[]
      description: "A szerepkör nevét a megadott felhasználónevek eltávolítása a karakterlánc-tömbben."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A megadott felhasználóneveknek egyik <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       – vagy – a megadott szerepkörneveket egyik <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       -or-       <code>userNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott felhasználó neveinek egyike üres karakterlánc vagy vesszővel tartalmaz.       – vagy – a megadott szerepkör neveinek egyike üres karakterlánc vagy vesszővel tartalmaz.       – vagy – <code> userNames </code> egy duplikált elemet tartalmaz.       – vagy – <code> roleNames </code> egy duplikált elemet tartalmaz."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A megadott <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: AuthorizationStoreRoleProvider.RoleExists(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi egy érték, amely jelzi, hogy a megadott szerepnév már szerepel az engedélyezési-tárolót."
  remarks: "A RoleExists metódust a <xref:System.Web.Security.Roles>osztályra, hogy ellenőrizze, hogy létezik-e a szerepkör nevét a Engedélyezéskezelő adattár, az ASP.NET-alkalmazás (Web.config) konfigurációs fájlban megadott.</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.RoleExists%2A> method to determine whether a role name already exists before creating the role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.au_1_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.au_1_1.aspx)]"
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Az engedélyezési-tárolót kereséséhez a szerepkör neve."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a szerepkör neve már szerepel az engedélyezési-tárolóban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>az üres karakterlánc.       – vagy – <code>roleName</code> vesszőt tartalmaz."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "A megadott <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – a beállított <xref uid=&quot;langword_csharp_scopeName&quot; name=&quot;scopeName&quot; href=&quot;&quot;> </xref> nem található.       – vagy – az Engedélykezelő runtime nincs telepítve a kiszolgálón."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A <xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> attribútum hivatkozik egy kapcsolati karakterláncot egy fájlt, amely nem létezik."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A <xref href=&quot;System.Web.Security.AuthorizationStoreRoleProvider&quot;> </xref> példányt konfiguráltak-e a fájl alapú házirendtárolót, és olvasási hozzáféréssel rendelkezik a fájlhoz nem engedélyezett az aktuális megbízhatósági szinten."
  platform:
  - net462
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  id: ScopeName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  langs:
  - csharp
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi vagy beállítja az engedélyezési tárolót a hatókör nevét."
  remarks: "A ScopeName tulajdonság beállításához a `scopeName` konfigurációs attribútum a szolgáltató-példány a `providers` a konfigurációs szakasz.      > [!CAUTION] > Oka egy egy alapértelmezett szerepkör-szolgáltató példánya, az összes által kiszolgált kérelmek egy <xref:System.Web.HttpApplication>objektum több kérelem végrehajtása egyidejűleg és ScopeName tulajdonság értékének beállítására tett kísérlet lehet.</xref:System.Web.HttpApplication> A ScopeName tulajdonság nem szálbiztos, több írási műveletek esetében, és nem várt viselkedést ScopeName tulajdonság értékének megmódosítása okozhat, ha egy alkalmazás több felhasználó. Azt javasoljuk, hogy elkerülheti a kódot, amely lehetővé teszi a felhasználóknak a ScopeName tulajdonsága, kivéve, ha meg kell. Egy alkalmazás, ahol a ScopeName tulajdonság beállítása lehet szükség például egy felügyeleti alkalmazás, amely a szerepkör több alkalmazás kezeli. Ilyen alkalmazás egy különálló alkalmazás, és nem egy webalkalmazás kell lennie."
  syntax:
    content: public string ScopeName { get; set; }
    return:
      type: System.String
      description: "Az engedélyezési tárolót a hatókör nevét."
  overload: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AuthorizationStoreRoleProvider()
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider()
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: AuthorizationStoreRoleProvider.CreateRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles()
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles()
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: AuthorizationStoreRoleProvider.RoleExists(String)
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(String)
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
  fullName: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName
- uid: System.Web.Security.AuthorizationStoreRoleProvider.#ctor*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AuthorizationStoreRoleProvider
  nameWithType: AuthorizationStoreRoleProvider.AuthorizationStoreRoleProvider
- uid: System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: AuthorizationStoreRoleProvider.AddUsersToRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: AuthorizationStoreRoleProvider.ApplicationName
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CacheRefreshInterval
  nameWithType: AuthorizationStoreRoleProvider.CacheRefreshInterval
- uid: System.Web.Security.AuthorizationStoreRoleProvider.CreateRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: AuthorizationStoreRoleProvider.CreateRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: AuthorizationStoreRoleProvider.DeleteRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: AuthorizationStoreRoleProvider.FindUsersInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: AuthorizationStoreRoleProvider.GetAllRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: AuthorizationStoreRoleProvider.GetRolesForUser
- uid: System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: AuthorizationStoreRoleProvider.GetUsersInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.Initialize*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: AuthorizationStoreRoleProvider.Initialize
- uid: System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: AuthorizationStoreRoleProvider.IsUserInRole
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: AuthorizationStoreRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.AuthorizationStoreRoleProvider.RoleExists*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: AuthorizationStoreRoleProvider.RoleExists
- uid: System.Web.Security.AuthorizationStoreRoleProvider.ScopeName*
  parent: System.Web.Security.AuthorizationStoreRoleProvider
  isExternal: false
  name: ScopeName
  nameWithType: AuthorizationStoreRoleProvider.ScopeName
