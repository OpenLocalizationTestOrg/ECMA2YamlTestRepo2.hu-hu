### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPart
  id: IWebPart
  children:
  - System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.IWebPart.Description
  - System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  - System.Web.UI.WebControls.WebParts.IWebPart.Title
  - System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  - System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  langs:
  - csharp
  name: IWebPart
  nameWithType: IWebPart
  fullName: System.Web.UI.WebControls.WebParts.IWebPart
  type: Interface
  summary: "Meghatározza az ASP.NET által használt közös felhasználói felület (UI) tulajdonságok <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> szabályozza."
  remarks: "A IWebPart felületet biztosít, amely az a felhasználói élmény javítása érdekében több felhasználói felület célú tulajdonságok <xref:System.Web.UI.WebControls.WebParts.WebPart>vezérlők.</xref:System.Web.UI.WebControls.WebParts.WebPart> Amikor hoz létre, amelyek a alapja a vezérlők <xref:System.Web.UI.WebControls.WebParts.WebPart>osztály, kap az összes tulajdonság megvalósítását a IWebPart felületén, mert a <xref:System.Web.UI.WebControls.WebParts.WebPart>alaposztály megvalósítja ezt a felületet.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Használhatja a meglévő felhasználói vezérlők, az ASP.NET-vezérlők vagy egyéni vezérlőket, amely nem örököl a <xref:System.Web.UI.WebControls.WebParts.WebPart>osztály a kijelzők alkalmazás részeként és szolgáltatást is alkalmazhatja a felhasználói felület célú tulajdonságok a IWebPart felület deklarál.</xref:System.Web.UI.WebControls.WebParts.WebPart> Ha a meglévő kiszolgálói vezérlő egy <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zóna, azok követően futásidőben egy <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>objektum.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Mivel a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>osztály örökli a <xref:System.Web.UI.WebControls.WebParts.WebPart>alaposztály, lehetővé teszi a meglévő kiszolgálói vezérlő való működésre igaz <xref:System.Web.UI.WebControls.WebParts.WebPart>szabályozza, és hozzáadja őket IWebPart interfész tulajdonságai.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Ha akkor léptessen életbe a kiszolgáló nem <xref:System.Web.UI.WebControls.WebParts.WebPart>vezérlők zónákban, használhatják a IWebPart tulajdonságok futási időben, és ezek a tulajdonságok értékeit is a kód a lap (a lap adatmegőrzési formátumban) a vezérlőket deklarálhatnak.</xref:System.Web.UI.WebControls.WebParts.WebPart> Azonban mivel ezek a tulajdonságok csak a kiszolgálói vezérlő számára elérhető futási időben, tervezési idejű kódolási szolgáltatásokkal, például az IntelliSense nem ismeri fel a IWebPart tulajdonságok deklarált server vezérlők. Ezek az intézkedések deklarált tulajdonságai továbbra is működni a lap betöltése, de a Microsoft Visual Studio nem ismeri fel a Tulajdonságok érvényesnek tervezési időben. Ha azt szeretné, a IWebPart tulajdonságok hozzáadása meglévő kiszolgáló és a tervezési idejű felhasználói élmény javítása érdekében a felhasználói vezérlők, a kiszolgáló vezérlőkben a IWebPart felület is létrehozható.       Lehet, hogy a fő oka a IWebPart felület megvalósítása expando (egyéni) tulajdonságok használatát nem támogató vezérlők van. Expando tulajdonságai, amelyek lehet hozzáadni egy osztály dinamikusan tulajdonságainál révén a <xref:System.Web.UI.IAttributeAccessor>felületet.</xref:System.Web.UI.IAttributeAccessor> Ezt a felületet megvalósító vezérlők többek között a <xref:System.Web.UI.WebControls.WebControl>osztály és a gyermekek, expando tulajdonságok.</xref:System.Web.UI.WebControls.WebControl> Ezért az összes ASP.NET vezérlőket, az egyéni vezérlők, amelyek származik őket, webes felhasználói vezérlőket, és <xref:System.Web.UI.WebControls.WebParts.WebPart>vezérlők expando tulajdonságok használatát támogatja.</xref:System.Web.UI.WebControls.WebParts.WebPart> De egyéni vezérlők, amelyek közvetlenül a következő öröklik <xref:System.Web.UI.Control>osztály nem támogatja a expando tulajdonságokat.</xref:System.Web.UI.Control> Így ha deklarálhatja ezen vezérlők belül egy <xref:System.Web.UI.WebControls.WebParts.WebPartZone>nem lehet tenni, hogy a vezérlők, például <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>és <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> </xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> tulajdonságok közös IWebPart tulajdonságok</xref:System.Web.UI.WebControls.WebParts.WebPartZone> Ha ilyen vezérlőkkel ezeket a tulajdonságokat használni kívánt, meg kell valósítani az IWebPart illesztőfelületet."
  example:
  - "The following code example demonstrates how to implement the IWebPart interface in a user control. This is a simple implementation that shows minimally how to implement the properties.  \n  \n The first part of the code example shows the user control. The user control implements all the properties of the IWebPart interface, plus two additional public properties tied to controls in the user interface. The two custom properties each use the `Personalizable` attribute, which enables the values in those properties to be saved across browser sessions. Note that in the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class implementation, all the properties of the IWebPart interface are implemented as personalizable as well, though they are not in this code example.  \n  \n [!code-cs[WebParts_IWebPart_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_1.ascx)]  \n  \n The second part of the code example shows the Web page that hosts the user control. The page has a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, within which the user control is referenced. Notice that several of the IWebPart interface's property values are set declaratively in the markup for the user control, which enables it to both behave and appear similar to a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at design time and run time. If you load the page in a browser, you can use the UI on the page to demonstrate the ability to programmatically change the values of the implemented IWebPart properties at run time. When you change some of the property values, the changes are not evident on the page, but are visible in the page source (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> property), or are stored in the application's state data (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_2.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_2.aspx)]"
  syntax:
    content: public interface IWebPart
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi vagy beállítja a jelölő kép URL-CÍMÉT egy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> vezérlő vezérlők katalógusba."
  remarks: "Webalkalmazások részei gyakran adja meg a felhasználókat adhat hozzá egy lap vezérlők katalógus (vagy lista). A vezérlőelem CatalogIconImageUrl tulajdonság katalógusba megjelenésekor a vezérlő jelképező kép URL-CÍMÉT tartalmazza."
  example:
  - "The following code example demonstrates declarative and programmatic use of the CatalogIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the CatalogIconImageUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#8](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#8](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the CatalogIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the CatalogIconImageUrl property is set declaratively on the control. Note that because there is no catalog of Web Parts controls provided with this example, you cannot see the actual effect of setting this property.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_3.aspx)]"
  syntax:
    content: public string CatalogIconImageUrl { get; set; }
    return:
      type: System.String
      description: "Az URL-címet a lemezképre jelenítik meg a vezérlő katalógusba jelölő karakterlánccá. Az alapértelmezett érték: üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Description
  nameWithType: IWebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi vagy beállítja a vezérlőelem mire alkalmas, a eszköztippek és a katalógusok összegzi rövid kifejezés <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> szabályozza."
  remarks: "A Leírás tulajdonság értéke általában használatos leíró karakterlánc vonatkozó katalógusok vezérlők <xref:System.Web.UI.WebControls.WebParts.WebPart>szabályozza, és egy vezérlő cím sáv a elemleírásként</xref:System.Web.UI.WebControls.WebParts.WebPart> A tartalom tulajdonságának megjelenik egy elemleírás, amikor egy felhasználó pozíciók az egérmutató a vezérlő címsor a cím szövegének keresztül."
  example:
  - "The following code example demonstrates declarative and programmatic use of the Description property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Description property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Description property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Description property is set declaratively on the control. Note that you can see the value of this property by positioning your mouse pointer over the title text in the control's title bar, after you have loaded the page in a browser. You can also experiment with changing the property value programmatically at run time by loading the Web page and using the provided user interface (UI) to change the property value.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_3.aspx)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Egy karakterlánc, amely röviden összegzi a vezérlő funkciót. Az alapértelmezett érték: üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  id: Subtitle
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Subtitle
  nameWithType: IWebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Egy karakterláncot, amelyet a rendszer összefűzéséhez lekérdezi a <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*>tulajdonság értéke kialakításához teljes címét egy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> vezérlő.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*>"
  remarks: "A felirat tulajdonságot használja <xref:System.Web.UI.WebControls.WebParts.WebPart>, a rendszer hozzáfűzi a cím sáv címének a vezérlő vezérlő</xref:System.Web.UI.WebControls.WebParts.WebPart> alapértelmezett alcíme karakterláncot       A felirat tulajdonság a vezérlőben, amely megvalósítja az alapértelmezett értéket kívánja megadni a <xref:System.Web.UI.WebControls.WebParts.IWebPart>csatoló, a vezérlő automatikusan hozzáfűzi értékének kijelzőket a <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>futási időben vezérlőelem.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.IWebPart>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the Subtitle property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Subtitle property. Note that the property is read-only and is meant to be used to provide a default subtitle that is appended to the main title of a control.  \n  \n [!code-cs[WebParts_IWebPart_Overview#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_1.ascx)]  \n  \n The second part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the writable properties from <xref:System.Web.UI.WebControls.WebParts.IWebPart> are set declaratively on the control. After you load the page in a browser, note that the default value of the Subtitle property, which was set in the user control's implementation code, is appended to the title in the control's title bar.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_2.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_2.aspx)]"
  syntax:
    content: public string Subtitle { get; }
    return:
      type: System.String
      description: "Egy karakterlánc, amely egy alcíme ellenőrzésére szolgál. Az alapértelmezett érték: üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Title
  nameWithType: IWebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi vagy beállítja a cím, egy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> vezérlő."
  remarks: "A vezérlőelem címsorában megjelenő címszöveg a cím tulajdonsággal állítható be.       Ha nem adja meg a vezérlő címét, a kijelzők ellenőrzési automatikusan kiszámítja címét használja alapértelmezett karakterláncot. További információkért lásd: <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Azt is lehet adni egy alapértelmezett alcíme, amelyek számára a cím karakterlánc. További információkért lásd: <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the Title property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Title property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Title property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Title property is set declaratively on the control.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_3.aspx)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "A vezérlő nevét tartalmazó karakterlánc. Az alapértelmezett érték: üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  id: TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi vagy beállítja az URL-cím jelenítik meg a vezérlő saját címsorában kijelzők vezérlő lemezképre."
  remarks: "A TitleIconImageUrl tulajdonság az ikont hozzárendelni módot biztosít egy <xref:System.Web.UI.WebControls.WebParts.WebPart>vezérlő.</xref:System.Web.UI.WebControls.WebParts.WebPart> Az ikon jelenik meg, a vezérlő saját címsorában. Kiemelt konzisztencia alkalmazásfejlesztők megfontolandó erre az ikonra a vezérlő kijelzők vezérlők katalógusba jelképező kép hasonló (a kép hivatkozik a <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>tulajdonság).</xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>       A kijelzők vezérlőben megvalósuló beállítása, a TitleIconImageUrl tulajdonság szabhatják a végfelhasználók számára, hogy módosítsa a lemezkép vagy egy vezérlő címsorában megjelenő ikonra."
  example:
  - "The following code example demonstrates declarative and programmatic use of the TitleIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the TitleIconImageUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleIconImageUrl property is set declaratively on the control. Note that if you do not provide the URL to a real image, a placeholder for the icon appears in the title bar.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_3.aspx)]"
  syntax:
    content: public string TitleIconImageUrl { get; set; }
    return:
      type: System.String
      description: "Egy képre mutató URL-CÍMÉT jelölő karakterlánccá. Az alapértelmezett érték: üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  id: TitleUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Lekérdezi vagy beállítja a kiegészítő információkat URL-CÍMÉT egy <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> vezérlő."
  remarks: "Ha URL-címet rendel a TitleUrl tulajdonság, a vezérlő lesz hivatkozást. Ez a tulajdonság célja biztosítson egy kényelmes módszert arra a végfelhasználók hozzáférhessenek a vezérlő további információt. További információ a szerzői jogi adatok kapcsolattartási, a vezérlő hozta létre, vagy a vezérlő célú összegzését részleteit biztosítani.      > [!NOTE] > Általában nem használhatja a TitleUrl tulajdonság súgótartalom csatolása. Adja meg a hivatkozást súgójában, a vezérlő használatára a legjobb módszer a <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>tulajdonság.</xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the TitleUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the TitleUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleUrl property is set declaratively on the control. Note that if you do not provide a URL to a real page, and then a user clicks the link in the title bar, an error message appears.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_3.aspx)]"
  syntax:
    content: public string TitleUrl { get; set; }
    return:
      type: System.String
      description: "Jelölő karakterlánccá adott URL esetén. további információkat arról a <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> vezérlő. Az alapértelmezett érték: üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Description
  nameWithType: IWebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Subtitle
  nameWithType: IWebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Title
  nameWithType: IWebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Description
  nameWithType: IWebPart.Description
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Subtitle
  nameWithType: IWebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Title
  nameWithType: IWebPart.Title
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
