### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SigningCredentials
  id: SigningCredentials
  children:
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  - System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  - System.IdentityModel.Tokens.SigningCredentials.SigningKey
  - System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
  type: Class
  summary: "A digitális aláírásának létrehozásához használt kriptográfiai kulcs és a biztonsági algoritmusok jelöli."
  remarks: "A SigningCredentials osztály használatával adja meg az aláírási kulcs, az aláírási kulcs azonosítója és a által használt algoritmusok [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] <xref:System.IdentityModel.Tokens.SamlAssertion>.</xref:System.IdentityModel.Tokens.SamlAssertion> digitális aláírásának létrehozásához A digitális aláírás részletek megadásához <xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> <xref:System.IdentityModel.Tokens.SamlAssertion>osztály</xref:System.IdentityModel.Tokens.SamlAssertion> tulajdonságának</xref:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials%2A> beállítása"
  syntax:
    content: public class SigningCredentials
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> osztály."
  remarks: "Használja a <xref:System.IdentityModel.Tokens.SecurityAlgorithms>adhatja meg az osztály a `signatureAlgorithm` és `digestAlgorithm` paraméterek.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> A <xref:System.IdentityModel.Tokens.SecurityAlgorithms>osztály tartalmaz, amelyek megfelelnek a titkosítási algoritmusok statikus, állandó karakterláncok.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> A tagok, amelyek rendelkeznek egy `Signature` utótag segítségével adja meg a `signatureAlgoritm` paraméter és a tagok, amelyek rendelkeznek egy `Digest` utótag segítségével adja meg a `digestAlgorithm` paraméter."
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> , amely tartalmazza a digitális aláírásának létrehozásához használt kriptográfiai kulcs."
    - id: signatureAlgorithm
      type: System.String
      description: "URI, amely a digitális aláírásának létrehozásához használt titkosítási algoritmus jelöli."
    - id: digestAlgorithm
      type: System.String
      description: "A kivonatolás a SOAP-üzenet, amely digitálisan aláírt részéhez használt titkosítási algoritmus jelölő URI."
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> osztály."
  remarks: "Használja a <xref:System.IdentityModel.Tokens.SecurityAlgorithms>adhatja meg az osztály a `signatureAlgorithm` és `digestAlgorithm` paraméterek.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> A <xref:System.IdentityModel.Tokens.SecurityAlgorithms>osztály tartalmaz, amelyek megfelelnek a titkosítási algoritmusok statikus állandó karakterláncok.</xref:System.IdentityModel.Tokens.SecurityAlgorithms> A tagok, amelyek rendelkeznek egy `Signature` utótag segítségével adja meg a `signatureAlgoritm` paraméter és a tagok, amelyek rendelkeznek egy `Digest` utótag segítségével adja meg a `digestAlgorithm` paraméter."
  syntax:
    content: public SigningCredentials (System.IdentityModel.Tokens.SecurityKey signingKey, string signatureAlgorithm, string digestAlgorithm, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: signingKey
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> , amely tartalmazza a digitális aláírásának létrehozásához használt kriptográfiai kulcs."
    - id: signatureAlgorithm
      type: System.String
      description: "URI, amely a digitális aláírásának létrehozásához használt titkosítási algoritmus jelöli."
    - id: digestAlgorithm
      type: System.String
      description: "A kivonatolás a SOAP-üzenet, amely digitálisan aláírt részéhez használt titkosítási algoritmus jelölő URI."
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> , amely megadja, hogy a digitális aláírás létrehozásához használt kulcs jelölő azonosító."
  overload: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lekérdezi a kivonatolás a SOAP-üzenet, amely digitálisan aláírt részéhez használt titkosítási algoritmus."
  remarks: "A DigestAlgorithm tulajdonság beállításához használja a konstruktorok használatát, amelyek közül egy `digestAlgorithm` paraméter."
  syntax:
    content: public string DigestAlgorithm { get; }
    return:
      type: System.String
      description: "A kivonatolás a SOAP-üzenet, amely digitálisan aláírt részéhez használt titkosítási algoritmus jelölő URI."
  overload: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lekérdezi a digitális aláírásának létrehozásához használt titkosítási algoritmus."
  remarks: "A signaturealgorithm algoritmust tulajdonság beállításához használja a konstruktorok használatát, amelyek közül egy `signatureAlgorithm` paraméter."
  syntax:
    content: public string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "URI, amely a digitális aláírásának létrehozásához használt titkosítási algoritmus jelöli."
  overload: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  id: SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A digitális aláírásának létrehozásához használt kriptográfiai kulcs lekérése."
  remarks: "A SigningKey tulajdonság beállításához használja a konstruktort a `signingKey` paraméter."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey SigningKey { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref> , amely tartalmazza a digitális aláírásának létrehozásához használt kriptográfiai kulcs."
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  id: SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  langs:
  - csharp
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "A digitális aláírás létrehozásához használt kulcs jelölő azonosító beolvasása."
  remarks: "A SigningKeyIdentifier tulajdonság beállításához használja a konstruktort a `signingKeyIdentifier` paraméter."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier SigningKeyIdentifier { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> , amely megadja, hogy a digitális aláírás létrehozásához használt kulcs jelölő azonosító."
  overload: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  nameWithType: SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningCredentials(SecurityKey,String,String,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
  fullName: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
  fullName: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier
- uid: System.IdentityModel.Tokens.SigningCredentials.#ctor*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials.SigningCredentials
- uid: System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SigningCredentials.DigestAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: SigningCredentials.SignatureAlgorithm
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKey*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKey
  nameWithType: SigningCredentials.SigningKey
- uid: System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier*
  parent: System.IdentityModel.Tokens.SigningCredentials
  isExternal: false
  name: SigningKeyIdentifier
  nameWithType: SigningCredentials.SigningKeyIdentifier
