### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement
  id: MemoryCacheElement
  children:
  - System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)
  - System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes
  - System.Runtime.Caching.Configuration.MemoryCacheElement.Name
  - System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage
  - System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval
  - System.Runtime.Caching.Configuration.MemoryCacheElement.Properties
  langs:
  - csharp
  name: MemoryCacheElement
  nameWithType: MemoryCacheElement
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement
  type: Class
  summary: "Határozza meg, amellyel konfigurálhatja a gyorsítótár, amely azon alapul elemet a <xref href=&quot;System.Runtime.Caching.MemoryCache&quot;> </xref> osztály. Ez az osztály nem örökölhető."
  remarks: "The MemoryCacheElement class defines a  element that you can use to configure the cache. Multiple instances of the <xref:System.Runtime.Caching.MemoryCache> class can be used in a single application. Each `memoryCache` element in the configuration file can contain settings for a named <xref:System.Runtime.Caching.MemoryCache> instance.  \n  \n The `memoryCache` element requires a `namedCaches` child element. To define named configurations of the cache in addition to the default configuration, you can add `namedCaches` elements. For more information about how to add named cache configurations, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\(Cache%20Settings\\).md)."
  syntax:
    content: 'public sealed class MemoryCacheElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  langs:
  - csharp
  name: MemoryCacheElement(String)
  nameWithType: MemoryCacheElement.MemoryCacheElement(String)
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.MemoryCacheElement(String)
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Configuration
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Runtime.Caching.Configuration.MemoryCacheElement&quot;> </xref> osztály."
  syntax:
    content: public MemoryCacheElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "Egy adott gyorsítótár-konfigurációját egyedi neve."
  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes
  id: CacheMemoryLimitMegabytes
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  langs:
  - csharp
  name: CacheMemoryLimitMegabytes
  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Configuration
  summary: "Lekérdezi vagy beállítja a maximális memóriaméret megabájtban, amely egy példányát a <xref href=&quot;System.Runtime.Caching.MemoryCache&quot;> </xref> objektum milyen mértékben növelhető a."
  remarks: "The CacheMemoryLimitMegabytes property value represents the `cacheMemoryLimitMegabytes` configuration attribute in the `namedCaches` configuration element.  \n  \n If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.  \n  \n This property can be set individually in `namedCaches` elements, with each `namedCaches` element corresponding to a unique cache configuration.  \n  \n The settings for the <xref:System.Runtime.Caching.MemoryCache.CacheMemoryLimit%2A> property can be read from the `cacheMemoryLimitMegabytes` configuration attribute in the configuration file. Alternatively, the settings can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \n  \n For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\(Cache%20Settings\\).md)."
  syntax:
    content: public int CacheMemoryLimitMegabytes { get; set; }
    return:
      type: System.Int32
      description: "Maximális memória mérete megabájtban mennyisége. Az alapértelmezett érték nulla, ami azt jelzi, hogy <xref href=&quot;System.Runtime.Caching.MemoryCache&quot;> </xref> példányok kezelése a saját memória azon a számítógépen telepített memória mennyisége alapján."
  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name
  id: Name
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  langs:
  - csharp
  name: Name
  nameWithType: MemoryCacheElement.Name
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.Name
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Configuration
  summary: "Lekérdezi vagy beállítja a nevét, egy adott gyorsítótár-konfigurációját."
  remarks: "The Name property value is the unique identifier for a particular named cache configuration. Each cache configuration must have a unique ID.  \n  \n In the `memoryCache` section of a configuration file, a unique cache configuration is defined by a `namedCaches` configuration collection. Each named cache entry requires a unique name in the configuration file. This value must be at least one character long.  \n  \n For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\(Cache%20Settings\\).md)."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A gyorsítótár-konfigurációját neve."
  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage
  id: PhysicalMemoryLimitPercentage
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  langs:
  - csharp
  name: PhysicalMemoryLimitPercentage
  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Configuration
  summary: "Lekérdezi vagy beállítja a használható kiszolgáló memóriájának hány százaléka a gyorsítótárból."
  remarks: "If the cache size exceeds the specified limit, the memory cache implementation removes cache entries.  \n  \n The setting for the <xref:System.Runtime.Caching.MemoryCache.PhysicalMemoryLimit%2A> property can be read from `physicalMemoryLimitPercentage` configuration attribute in the application configuration file. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \n  \n For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\(Cache%20Settings\\).md)."
  syntax:
    content: public int PhysicalMemoryLimitPercentage { get; set; }
    return:
      type: System.Int32
      description: "A fizikai memória, a gyorsítótár használhat, aránya kifejezett egész értéket 1 és 100. Az alapértelmezett érték nulla, ami azt jelzi, hogy <xref href=&quot;System.Runtime.Caching.MemoryCache&quot;> </xref> példányok kezelése a saját memória azon a számítógépen telepített memória mennyisége alapján."
  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval
  id: PollingInterval
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  langs:
  - csharp
  name: PollingInterval
  nameWithType: MemoryCacheElement.PollingInterval
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Configuration
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, amely után a gyorsítótár-megvalósítással összehasonlítja a jelenlegi memóriahasználatát, szemben a abszolút és százalékos-alapú memóriakorlátokat a gyorsítótárpéldány beállított időintervallumban."
  remarks: "The PollingInterval property corresponds to the `pollingInterval` configuration attribute of the `namedCaches` element. The settings for this configuration attribute are specified in the format `HH:MM:SS` and can be read from the `pollingInterval` configuration attribute in the application configuration. Alternatively, the value can be passed when the <xref:System.Runtime.Caching.MemoryCache> class is initialized.  \n  \n For more information about how to configure the cache, see [\\&lt;namedCaches\\&gt; Element (Cache Settings)](../Topic/%3CnamedCaches%3E%20Element%20\\(Cache%20Settings\\).md)."
  syntax:
    content: public TimeSpan PollingInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "A időtartam alatt, amely után a gyorsítótár-megvalósítással összehasonlítja a jelenlegi memóriahasználatát a abszolút és százalék alapú memóriakorlátokat a gyorsítótárpéldány beállított ellen. Az alapértelmezett érték a két perc."
  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties
  id: Properties
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  langs:
  - csharp
  name: Properties
  nameWithType: MemoryCacheElement.Properties
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor(System.String)
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: MemoryCacheElement(String)
  nameWithType: MemoryCacheElement.MemoryCacheElement(String)
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.MemoryCacheElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: CacheMemoryLimitMegabytes
  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: Name
  nameWithType: MemoryCacheElement.Name
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.Name
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: PhysicalMemoryLimitPercentage
  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: PollingInterval
  nameWithType: MemoryCacheElement.PollingInterval
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: Properties
  nameWithType: MemoryCacheElement.Properties
  fullName: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.#ctor*
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: MemoryCacheElement
  nameWithType: MemoryCacheElement.MemoryCacheElement
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.CacheMemoryLimitMegabytes*
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: CacheMemoryLimitMegabytes
  nameWithType: MemoryCacheElement.CacheMemoryLimitMegabytes
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Name*
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: Name
  nameWithType: MemoryCacheElement.Name
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PhysicalMemoryLimitPercentage*
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: PhysicalMemoryLimitPercentage
  nameWithType: MemoryCacheElement.PhysicalMemoryLimitPercentage
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.PollingInterval*
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: PollingInterval
  nameWithType: MemoryCacheElement.PollingInterval
- uid: System.Runtime.Caching.Configuration.MemoryCacheElement.Properties*
  parent: System.Runtime.Caching.Configuration.MemoryCacheElement
  isExternal: false
  name: Properties
  nameWithType: MemoryCacheElement.Properties
