### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ReliableSession
  id: ReliableSession
  children:
  - System.ServiceModel.ReliableSession.#ctor
  - System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  - System.ServiceModel.ReliableSession.InactivityTimeout
  - System.ServiceModel.ReliableSession.Ordered
  langs:
  - csharp
  name: ReliableSession
  nameWithType: ReliableSession
  fullName: System.ServiceModel.ReliableSession
  type: Class
  summary: "Tetszés szerinti érhetők el, ha a rendszer által biztosított kötések egyikének használatával a megbízható munkamenet kötéselem tulajdonságainak hozzáférést biztosít."
  remarks: "A ReliableSession osztály szereplő tulajdonságok a azoknak a részhalmazát képezik, a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, amelyek egy előre meghatározott kötés elérhető.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement> A részhalmaza áll a <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>és <xref:System.ServiceModel.ReliableSession.Ordered%2A>Tulajdonságok.</xref:System.ServiceModel.ReliableSession.Ordered%2A> </xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> A ReliableSession osztály hivatkozik, mint az azonos objektumokat a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, így megváltoztatja az értéket az egyik értékét módosítja, a másik túl.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement> Ez az osztály a két tulajdonság jobban felderíthetőség a megbízható munkamenet kötési elem összegyűjti."
  example:
  - "The following example shows how to create a new reliable session, and access and change the property values of that session. The ReliableSession class allows you to write:  \n  \n [!code-cs[UEReliableSession#1](~/add/codesnippet/csharp/t-system.servicemodel.re_0_1.cs)]\n [!code-vb[UEReliableSession#1](~/add/codesnippet/visualbasic/t-system.servicemodel.re_0_1.vb)]"
  syntax:
    content: public class ReliableSession
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: ReliableSession()
  nameWithType: ReliableSession.ReliableSession()
  fullName: System.ServiceModel.ReliableSession.ReliableSession()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> osztály."
  syntax:
    content: public ReliableSession ();
    parameters: []
  overload: System.ServiceModel.ReliableSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  id: '#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)'
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: ReliableSession(ReliableSessionBindingElement)
  nameWithType: ReliableSession.ReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.ReliableSession.ReliableSession(ReliableSessionBindingElement)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.ReliableSession&quot;> </xref> a megbízható munkamenet kötéselem osztályt."
  remarks: ''
  example:
  - >-
    [!code-cs[UEReliableSession#1](~/add/codesnippet/csharp/80f1598c-ddfc-4656-a81f-_1.cs)]
     [!code-vb[UEReliableSession#1](~/add/codesnippet/visualbasic/80f1598c-ddfc-4656-a81f-_1.vb)]
  syntax:
    content: public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);
    parameters:
    - id: reliableSessionBindingElement
      type: System.ServiceModel.Channels.ReliableSessionBindingElement
      description: "A <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> amelyek tulajdonság értékét a megbízható munkamenet inicializálása szolgálnak."
  overload: System.ServiceModel.ReliableSession.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reliableSessionBindingElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
  fullName: System.ServiceModel.ReliableSession.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Lekérdezi vagy beállítja az időtartam, amely egy szolgáltatás ennyi ideig inaktív Bezárás előtt."
  remarks: "A tulajdonság és az értékének beállítása a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>tulajdonság.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A>       Tevékenység csatornán történt egy alkalmazás vagy infrastruktúra-üzenet fogadásakor típusúként van definiálva. A tétlen időtúllépés a tulajdonság szabja meg a maximális időt egy inaktív munkamenet életben tartása. Ha több tevékenység nélküli továbbítja a InactivityTimeout megadott időtartam alatt, a munkamenet megszakadt az infrastruktúra és a csatorna hibák. A megbízható munkamenet egyoldalúan van bontva.       Ha a küldő alkalmazás rendelkezik majd a megbízható munkamenet küldendő üzenetek általában nem jelzett inaktivitási; Ehelyett egy életben tartási mechanizmus tartja a munkamenet aktív határozatlan ideig. Vegye figyelembe, hogy a kézbesítő sikerült egymástól függetlenül megszakítása a megbízható munkamenet, ha nincs alkalmazás üzenetek küldött és fogadott. Így az inaktivitási időkorlátját általában lejár hálózati feltételek mellett úgy, hogy a rendezés nem üzenetek fogadása, vagy ha a küldő hiba esetén.       Ez az időkorlát beállítása megakadályozza, hogy a kiszolgáló az ügyfél nem zárja be, ha a biztonsági munkamenet alakzatot okozó. Ha a biztonsági munkamenet az inaktivitási időtartam, nem kapott üzenetet, a kiszolgáló lezárták. Ez csökkenti a lehetséges szolgáltatásmegtagadási támadások.       A megbízható munkamenet használatakor nincsenek két különböző inaktivitási időzítő, amely a kapcsolat életben teljesülniük kell. Ha ezek inaktivitási időzítő valamelyikét visszatér, a kapcsolat megszakad.      -Az első inaktivitási időzítő a megbízható munkamenet és a InactivityTimeout nevezik. Az inaktivitási időzítő következik be, ha nincs üzenetek, alkalmazás vagy infrastruktúra, a határidőn belül. Az infrastruktúra üzenet egy üzenetet, amely akkor jön létre, a csatorna verem, például egy keep-alive protokollok egyikét vagy egy visszaigazoló ahelyett, hogy adatokat tartalmazó alkalmazás céljából.      – A második inaktivitási időzítő szolgáltatás, és használja a <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>beállítása a kötés.</xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> Az inaktivitási időzítő következik be, ha nincs alkalmazás üzenetek fogadása az időkorláton belül.       A kapcsolat megszakad, ha bármelyik inaktivitási időzítő következik be, mert növelése InactivityTimeout, amennyiben az értéke nagyobb, mint <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>nincs hatása.</xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> A mindkét ezek időtúllépések alapértelmezés 10 percig, így mindig azokat, hogy eltérés, a megbízható munkamenet használatakor mindkét növelése érdekében."
  example:
  - >-
    [!code-cs[UEReliableSession#2](~/add/codesnippet/csharp/p-system.servicemodel.re_0_1.cs)]
     [!code-vb[UEReliableSession#2](~/add/codesnippet/visualbasic/p-system.servicemodel.re_0_1.vb)]
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>, amely megadja, hogy a szolgáltatás inaktív Bezárás előtt időintervallum.</xref:System.TimeSpan> Az alapértelmezett érték 10 perc."
  overload: System.ServiceModel.ReliableSession.InactivityTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A beállított érték értéke kisebb vagy egyenlő, mint nulla."
  platform:
  - net462
- uid: System.ServiceModel.ReliableSession.Ordered
  id: Ordered
  parent: System.ServiceModel.ReliableSession
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSession.Ordered
  fullName: System.ServiceModel.ReliableSession.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy üzenetkézbesítést meg kell őriznie a sorrendet, amelyben üzenetek küldése történik."
  remarks: "A tulajdonság és az értékének beállítása a <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>tulajdonság.</xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A>"
  example:
  - >-
    [!code-cs[UEReliableSession#2](~/add/codesnippet/csharp/p-system.servicemodel.re_1_1.cs)]
     [!code-vb[UEReliableSession#2](~/add/codesnippet/visualbasic/p-system.servicemodel.re_1_1.vb)]
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha üzenetet kézbesíteni a sorrendben, amelyben elküldi őket; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ReliableSession.Ordered*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.ReliableSession.#ctor
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession()
  nameWithType: ReliableSession.ReliableSession()
  fullName: System.ServiceModel.ReliableSession.ReliableSession()
- uid: System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession(ReliableSessionBindingElement)
  nameWithType: ReliableSession.ReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.ReliableSession.ReliableSession(ReliableSessionBindingElement)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
- uid: System.ServiceModel.ReliableSession.InactivityTimeout
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
  fullName: System.ServiceModel.ReliableSession.InactivityTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ReliableSession.Ordered
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: Ordered
  nameWithType: ReliableSession.Ordered
  fullName: System.ServiceModel.ReliableSession.Ordered
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ReliableSession.#ctor*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: ReliableSession
  nameWithType: ReliableSession.ReliableSession
- uid: System.ServiceModel.ReliableSession.InactivityTimeout*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSession.InactivityTimeout
- uid: System.ServiceModel.ReliableSession.Ordered*
  parent: System.ServiceModel.ReliableSession
  isExternal: false
  name: Ordered
  nameWithType: ReliableSession.Ordered
