### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DSA
  id: DSA
  children:
  - System.Security.Cryptography.DSA.#ctor
  - System.Security.Cryptography.DSA.Create
  - System.Security.Cryptography.DSA.Create(System.String)
  - System.Security.Cryptography.DSA.CreateSignature(System.Byte[])
  - System.Security.Cryptography.DSA.ExportParameters(System.Boolean)
  - System.Security.Cryptography.DSA.FromXmlString(System.String)
  - System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)
  - System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])
  langs:
  - csharp
  name: DSA
  nameWithType: DSA
  fullName: System.Security.Cryptography.DSA
  type: Class
  summary: "Az absztrakt alaposztálya, ahol minden megvalósítások a digitális aláírási algoritmus (DSA) kell örökölnie jelöli."
  remarks: "A DSA osztály és származtatott osztályainak hozhat létre, amelyek segítenek megvédeni az adatok digitális aláírásokat.  <xref:System.Security.Cryptography.DSACryptoServiceProvider>Ezt az osztályt megvalósítása biztosít</xref:System.Security.Cryptography.DSACryptoServiceProvider>       A nyilvános kulcsú rendszert használ, egy üzenet digitális aláírására, a küldő először vonatkozik a kivonatoló függvényt, hogy a message digest létrehozása. A küldő a message digest majd titkosítja a feladó titkos kulcsot, a feladó személyes aláírást létrehozni. Az üzenet és az aláírási fogadását követően a fogadó visszafejti a feladó nyilvános kulcs helyreállítása a üzenetkivonatoló aláírását, és ugyanazt a küldő által használt kivonatoló algoritmus az üzenet csak. Ha a message digest, hogy a fogadó kiszámítja pontosan megegyezik a feladótól érkezett a message digest, a fogadó feltételezheti, hogy az üzenet nem lett-e módosítva az átvitel során. Vegye figyelembe, hogy egy aláírás ellenőrzésekor bárki, mert a feladó nyilvános kulcs közös Tudásbázis.       Újabb aszimmetrikus algoritmusok érhetők el. Fontolja meg az <xref:System.Security.Cryptography.RSA>osztály a <xref:System.Security.Cryptography.ECDsa>, vagy az <xref:System.Security.Cryptography.ECDiffieHellman>osztály helyett a DSA osztályhoz.</xref:System.Security.Cryptography.ECDiffieHellman> </xref:System.Security.Cryptography.ECDsa> </xref:System.Security.Cryptography.RSA> DSA használata csak a régebbi alkalmazásokat és adatokat is kompatibilisek.       Ehhez az algoritmushoz kulcshosszok 512 bites 1024 bit 64 bit lépésekben támogatja."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DSA : System.Security.Cryptography.AsymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: DSA()
  nameWithType: DSA.DSA()
  fullName: System.Security.Cryptography.DSA.DSA()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> osztály."
  syntax:
    content: protected DSA ();
    parameters: []
  overload: System.Security.Cryptography.DSA.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.Create
  id: Create
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: Create()
  nameWithType: DSA.Create()
  fullName: System.Security.Cryptography.DSA.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Az aszimmetrikus algoritmusokra végrehajtásához használt alapértelmezett titkosítási objektumot hoz létre."
  syntax:
    content: public static System.Security.Cryptography.DSA Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.DSA
      description: "Az aszimmetrikus algoritmusokra végrehajtásához használt kriptográfiai objektum."
  overload: System.Security.Cryptography.DSA.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: Create(String)
  nameWithType: DSA.Create(String)
  fullName: System.Security.Cryptography.DSA.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott, az aszimmetrikus algoritmusokra végrehajtásához használt kriptográfiai objektumot hoz létre."
  remarks: "A <xref:System.Security.Cryptography.DSA>, System.Security.Cryptography.DSA nevét használja.</xref:System.Security.Cryptography.DSA>"
  syntax:
    content: public static System.Security.Cryptography.DSA Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "A név az adott végrehajtásának <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> használatára."
    return:
      type: System.Security.Cryptography.DSA
      description: "Az aszimmetrikus algoritmusokra végrehajtásához használt kriptográfiai objektum."
  overload: System.Security.Cryptography.DSA.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.CreateSignature(System.Byte[])
  id: CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: CreateSignature(Byte[])
  nameWithType: DSA.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.DSA.CreateSignature(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Felülbírálja a származtatott osztály, amikor létrehozza a <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> aláírás a megadott adatok."
  syntax:
    content: public abstract byte[] CreateSignature (byte[] rgbHash);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Az adatok aláírását."
    return:
      type: System.Byte[]
      description: "A megadott adatok digitális aláírását."
  overload: System.Security.Cryptography.DSA.CreateSignature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: DSA.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.DSA.ExportParameters(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ha a származtatott osztály felülbírálva, exportálja a <xref href=&quot;System.Security.Cryptography.DSAParameters&quot;> </xref>."
  syntax:
    content: public abstract System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a titkos paraméterek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Security.Cryptography.DSAParameters
      description: "A paraméterek <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref>."
  overload: System.Security.Cryptography.DSA.ExportParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: DSA.FromXmlString(String)
  fullName: System.Security.Cryptography.DSA.FromXmlString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Rekonstruálja egy <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> objektum egy XML-karakterláncból."
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: "Az XML-karakterlánc segítségével hozza létre újból a <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> objektum."
  overload: System.Security.Cryptography.DSA.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>xmlString</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A formátum a <code> xmlString </code> paraméter érvénytelen."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: DSA.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ha a származtatott osztály felülbírálva, a megadott bináris adatfolyam kivonatoló értékét számítja ki a megadott kivonatoló algoritmus használatával."
  syntax:
    content: protected virtual byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "A kivonatoló bináris adatfolyam."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Segítségével az adatok kivonatoló algoritmus."
    return:
      type: System.Byte[]
      description: "A kivonatolt adatokat."
  overload: System.Security.Cryptography.DSA.HashData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Egy származtatott osztálynak felül kell bírálnia ezt a módszert."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: DSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ha felül van bírálva a származtatott osztály, egy bájttömböt megadott része kivonatoló értékét számítja ki a megadott kivonatoló algoritmus használatával."
  syntax:
    content: protected virtual byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "E tárolni az adatokat."
    - id: offset
      type: System.Int32
      description: "Az index az első bájt `data` kivonatolása funkció."
    - id: count
      type: System.Int32
      description: "A kivonatoló bájtok száma."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "Segítségével az adatok kivonatoló algoritmus."
    return:
      type: System.Byte[]
      description: "A kivonatolt adatokat."
  overload: System.Security.Cryptography.DSA.HashData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Egy származtatott osztálynak felül kell bírálnia ezt a módszert."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)
  id: ImportParameters(System.Security.Cryptography.DSAParameters)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: ImportParameters(DSAParameters)
  nameWithType: DSA.ImportParameters(DSAParameters)
  fullName: System.Security.Cryptography.DSA.ImportParameters(DSAParameters)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Felülbírálja a származtatott osztály, importálja a megadott <xref href=&quot;System.Security.Cryptography.DSAParameters&quot;> </xref>."
  syntax:
    content: public abstract void ImportParameters (System.Security.Cryptography.DSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.DSAParameters
      description: "A paraméterek <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref>."
  overload: System.Security.Cryptography.DSA.ImportParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  id: SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: SignData(Byte[],HashAlgorithmName)
  nameWithType: DSA.SignData(Byte[],HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.SignData(Byte[],HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott bájttömb a megadott kivonatoló algoritmus használatával ujjlenyomat értékét számítja ki, és aláírja az eredményül kapott kivonat értéke."
  syntax:
    content: public byte[] SignData (byte[] data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "A bemeneti adatok, amelyek esetében szeretne kiszámítása kivonatát."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmus használatával történő létrehozásáról a kivonat értéke."
    return:
      type: System.Byte[]
      description: "A megadott adatok DSA aláírás."
  overload: System.Security.Cryptography.DSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: SignData(Stream,HashAlgorithmName)
  nameWithType: DSA.SignData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.SignData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott adatfolyam a megadott kivonatoló algoritmus használatával ujjlenyomat értékét számítja ki, és aláírja az eredményül kapott kivonat értéke."
  syntax:
    content: public virtual byte[] SignData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "A bemeneti adatfolyam, amelynek a kivonat kiszámításához."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmus használatával történő létrehozásáról a kivonat értéke."
    return:
      type: System.Byte[]
      description: "A megadott adatok DSA aláírás."
  overload: System.Security.Cryptography.DSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: SignData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: DSA.SignData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.SignData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A megadott bájttömb a megadott kivonatoló algoritmus használatával része ujjlenyomat értékét számítja ki, és az eredményül kapott érték hash jelentkezik."
  syntax:
    content: public virtual byte[] SignData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "A bemeneti adatok, amelyek esetében szeretne kiszámítása kivonatát."
    - id: offset
      type: System.Int32
      description: "Az eltolás, amellyel adatok használatának megkezdéséhez a tömbbe."
    - id: count
      type: System.Int32
      description: "A tömb adatok használandó bájtok száma."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmus használatával történő létrehozásáról a kivonat értéke."
    return:
      type: System.Byte[]
      description: "A megadott adatok DSA aláírás."
  overload: System.Security.Cryptography.DSA.SignData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>kisebb, mint nulla.       – vagy – <code>count</code> nullánál kisebb.       – vagy – <code>offset</code>  + <code>count</code> – 1 eredményezi, amelyet a felső határa index <code>data</code>."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: DSA.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.DSA.ToXmlString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Hoz létre, és visszaadja az aktuális XML-karakterlánc ábrázolása <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> objektum."
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a titkos paraméterek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Az XML-karakterlánc kódolás aktuális <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> objektum."
  overload: System.Security.Cryptography.DSA.ToXmlString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  id: VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: VerifyData(Byte[],Byte[],HashAlgorithmName)
  nameWithType: DSA.VerifyData(Byte[],Byte[],HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.VerifyData(Byte[],Byte[],HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ellenőrzi, hogy a digitális aláírás érvényes mértékét, ha kiszámítja a kivonat értéke a megadott adatok használata a megadott kivonatoló algoritmust, és hasonlítsa össze a megadott aláírással."
  syntax:
    content: public bool VerifyData (byte[] data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Az aláírt adatokat."
    - id: signature
      type: System.Byte[]
      description: "Az aláírás adatok ellenőrzését."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonat értéke a létrehozásához használt kivonatoló algoritmus."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a digitális aláírás érvényes; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.DSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  id: VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: VerifyData(Stream,Byte[],HashAlgorithmName)
  nameWithType: DSA.VerifyData(Stream,Byte[],HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.VerifyData(Stream,Byte[],HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ellenőrzi, hogy a digitális aláírás érvényes mértékét, ha kiszámítja a kivonat értéke a megadott adatfolyam-a megadott kivonatoló algoritmus használatával, és hasonlítsa össze a megadott aláírással."
  syntax:
    content: public virtual bool VerifyData (System.IO.Stream data, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: "Az aláírt adatokat."
    - id: signature
      type: System.Byte[]
      description: "Az aláírás adatok ellenőrzését."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonat értéke a létrehozásához használt kivonatoló algoritmus."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a digitális aláírás érvényes; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.DSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName)
  nameWithType: DSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ellenőrzi, hogy a digitális aláírás érvényes mértékét, ha a kivonat értéke az adatok egy részét a bájtban kiszámítja a tömb a megadott kivonatoló algoritmus használatával, és hasonlítsa össze a megadott aláírással."
  syntax:
    content: public virtual bool VerifyData (byte[] data, int offset, int count, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Az aláírt adatokat."
    - id: offset
      type: System.Int32
      description: "A kezdő index, ahol a kivonat kiszámításához."
    - id: count
      type: System.Int32
      description: "A kivonatoló bájtok száma."
    - id: signature
      type: System.Byte[]
      description: "Az aláírás adatok ellenőrzését."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonat értéke a létrehozásához használt kivonatoló algoritmus."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a digitális aláírás érvényes; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.DSA.VerifyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>signature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>kisebb, mint nulla.       – vagy – <code>count</code> nullánál kisebb.       – vagy – <code>offset</code>  + <code>count</code> – 1 eredményezi, amelyet a felső határa index <code>data</code>."
  platform:
  - net462
- uid: System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])
  id: VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSA
  langs:
  - csharp
  name: VerifySignature(Byte[],Byte[])
  nameWithType: DSA.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.DSA.VerifySignature(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ha felül van bírálva a származtatott osztály, ellenőrzi a <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> aláírás a megadott adatok."
  syntax:
    content: public abstract bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "Az a üzenetkivonat aláírva `rgbSignature`."
    - id: rgbSignature
      type: System.Byte[]
      description: "Az aláírás ellenőrzése való `rgbData`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> rgbSignature </code> az aláírás kiszámítása a megadott kivonatoló algoritmus és a kulcsot a megfelelő <code> rgbHash </code>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.DSA.VerifySignature*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.DSA.#ctor
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: DSA()
  nameWithType: DSA.DSA()
  fullName: System.Security.Cryptography.DSA.DSA()
- uid: System.Security.Cryptography.DSA.Create
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: Create()
  nameWithType: DSA.Create()
  fullName: System.Security.Cryptography.DSA.Create()
- uid: System.Security.Cryptography.DSA
  parent: System.Security.Cryptography
  isExternal: false
  name: DSA
  nameWithType: DSA
  fullName: System.Security.Cryptography.DSA
- uid: System.Security.Cryptography.DSA.Create(System.String)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: Create(String)
  nameWithType: DSA.Create(String)
  fullName: System.Security.Cryptography.DSA.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.DSA.CreateSignature(System.Byte[])
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: CreateSignature(Byte[])
  nameWithType: DSA.CreateSignature(Byte[])
  fullName: System.Security.Cryptography.DSA.CreateSignature(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DSA.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: DSA.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.DSA.ExportParameters(Boolean)
- uid: System.Security.Cryptography.DSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: DSAParameters
  nameWithType: DSAParameters
  fullName: System.Security.Cryptography.DSAParameters
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.DSA.FromXmlString(System.String)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: FromXmlString(String)
  nameWithType: DSA.FromXmlString(String)
  fullName: System.Security.Cryptography.DSA.FromXmlString(String)
- uid: System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: DSA.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.HashData(Stream,HashAlgorithmName)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: DSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: ImportParameters(DSAParameters)
  nameWithType: DSA.ImportParameters(DSAParameters)
  fullName: System.Security.Cryptography.DSA.ImportParameters(DSAParameters)
- uid: System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: SignData(Byte[],HashAlgorithmName)
  nameWithType: DSA.SignData(Byte[],HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.SignData(Byte[],HashAlgorithmName)
- uid: System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: SignData(Stream,HashAlgorithmName)
  nameWithType: DSA.SignData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.SignData(Stream,HashAlgorithmName)
- uid: System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: SignData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: DSA.SignData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.SignData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Security.Cryptography.DSA.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: DSA.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.DSA.ToXmlString(Boolean)
- uid: System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: VerifyData(Byte[],Byte[],HashAlgorithmName)
  nameWithType: DSA.VerifyData(Byte[],Byte[],HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.VerifyData(Byte[],Byte[],HashAlgorithmName)
- uid: System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: VerifyData(Stream,Byte[],HashAlgorithmName)
  nameWithType: DSA.VerifyData(Stream,Byte[],HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.VerifyData(Stream,Byte[],HashAlgorithmName)
- uid: System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName)
  nameWithType: DSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName)
  fullName: System.Security.Cryptography.DSA.VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName)
- uid: System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: VerifySignature(Byte[],Byte[])
  nameWithType: DSA.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.DSA.VerifySignature(Byte[],Byte[])
- uid: System.Security.Cryptography.DSA.#ctor*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: DSA
  nameWithType: DSA.DSA
- uid: System.Security.Cryptography.DSA.Create*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: Create
  nameWithType: DSA.Create
- uid: System.Security.Cryptography.DSA.CreateSignature*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: CreateSignature
  nameWithType: DSA.CreateSignature
- uid: System.Security.Cryptography.DSA.ExportParameters*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: ExportParameters
  nameWithType: DSA.ExportParameters
- uid: System.Security.Cryptography.DSA.FromXmlString*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: FromXmlString
  nameWithType: DSA.FromXmlString
- uid: System.Security.Cryptography.DSA.HashData*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: HashData
  nameWithType: DSA.HashData
- uid: System.Security.Cryptography.DSA.ImportParameters*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: ImportParameters
  nameWithType: DSA.ImportParameters
- uid: System.Security.Cryptography.DSA.SignData*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: SignData
  nameWithType: DSA.SignData
- uid: System.Security.Cryptography.DSA.ToXmlString*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: ToXmlString
  nameWithType: DSA.ToXmlString
- uid: System.Security.Cryptography.DSA.VerifyData*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: VerifyData
  nameWithType: DSA.VerifyData
- uid: System.Security.Cryptography.DSA.VerifySignature*
  parent: System.Security.Cryptography.DSA
  isExternal: false
  name: VerifySignature
  nameWithType: DSA.VerifySignature
