### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.ISerializable
  id: ISerializable
  children:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
  type: Interface
  summary: "Lehetővé teszi, hogy a saját szerializálása és deszerializálása objektum."
  remarks: "Előfordulhat, hogy szerializálni lehessen osztály kell jelölni a <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> Ha egy osztály a szerializálási folyamatot szabályozhatja, hogy az ISerializable illesztőfelületet valósíthat meg. A <xref:System.Runtime.Serialization.Formatter>hívások a <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>szerializálási időpontban tölti fel a megadott <xref:System.Runtime.Serialization.SerializationInfo>képviselő objektum szükséges összes adatot tartalmazó.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> </xref:System.Runtime.Serialization.Formatter> A <xref:System.Runtime.Serialization.Formatter>létrehoz egy <xref:System.Runtime.Serialization.SerializationInfo>azzal a típussal, az objektum a grafikonon.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.Formatter> Objektumok kell küldeniük proxyk maguk is használható a <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>és <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>metódusai <xref:System.Runtime.Serialization.SerializationInfo>módosítása az átvitt adatokat.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> </xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>       Osztályöröklődést, ha egy osztály, amely egy olyan alaposztályból, amely megvalósítja az ISerializable származik szerializálni. Ebben az esetben a származtatott osztály meg kell hívnia az alaposztály végrehajtásának <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>belül <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> megvalósítása</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> Ellenkező esetben az alaposztály adatait fogja nem szerializálható.       Az ISerializable illesztőfelületet magában foglalja az aláírás konstruktorral rendelkező konstruktor (<xref:System.Runtime.Serialization.SerializationInfo> információ <xref:System.Runtime.Serialization.StreamingContext>környezet).</xref:System.Runtime.Serialization.StreamingContext> </xref:System.Runtime.Serialization.SerializationInfo> A deszerializálás során, az aktuális konstruktor neve csak után az adatokat a <xref:System.Runtime.Serialization.SerializationInfo>rendelkezik a formázó által lett deszerializálva.</xref:System.Runtime.Serialization.SerializationInfo> Ez a konstruktor általában védendő, ha az osztály nincs lezárva.       Nem lehet garantálni a sorrendet, amelyben a objektum deszerializálása. Például egy típus, amely még nem lett deszerializálva. még típusra hivatkozik, ha kivétel lép fel. Ilyen függőségekkel rendelkező típusok létrehozásakor, akkor a probléma megkerüléséhez alkalmazásával a `IDeserializationCallback` felület és a `OnDeserialization` metódust.       A szerializálási architektúra típusú objektumokat, amelyek <xref:System.MarshalByRefObject>azonos típusú <xref:System.Object>.</xref:System.Object> kiterjesztése, amely</xref:System.MarshalByRefObject> kezeli Ezek a típusok képes ellátni a <xref:System.SerializableAttribute>és valósítja meg az ISerializable illesztőfelületet, mint bármely más objektumtípus.</xref:System.SerializableAttribute> Az objektum állapotát a rendszer rögzített, majd maradnak, az adatfolyam.       Ha ezek a típusok használt keresztül <xref:System.Runtime.Remoting>, a távoli eljáráshívási infrastruktúrában biztosít egy helyettesítő, amely jellemző szerializálási várólistájának, és ehelyett rendezi sorba az <xref:System.MarshalByRefObject>.</xref:System.MarshalByRefObject> proxy</xref:System.Runtime.Remoting> A helyettesítő, hogy ismeri a szerializálása és deszerializálása egy adott típusú objektumokat segítő. A proxy, nem látható a legtöbb esetben a felhasználó számára lesz <xref:System.Runtime.Remoting.ObjRef>.</xref:System.Runtime.Remoting.ObjRef> típusú       Általános tervezési mintaként lenne szokatlan egy osztály egyaránt jelölhetők a serializable attribútummal és <xref:System.MarshalByRefObject>.</xref:System.MarshalByRefObject> kiterjesztése A fejlesztők kell fontolnunk, gondosan a szerializálás és a távelérés a következő eljárások e két jellemzők egyesítésekor. Egy példa, ahol ez előfordulhat, hogy alkalmazhatók a <xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream> van Miközben az alaposztály alaposztályát <xref:System.IO.MemoryStream>(<xref:System.IO.Stream>) fájlleképezés <xref:System.MarshalByRefObject>, lehetséges állapotának rögzítéséhez egy <xref:System.IO.MemoryStream>, majd visszaállítja azt, majd.</xref:System.IO.MemoryStream> </xref:System.MarshalByRefObject> </xref:System.IO.Stream> </xref:System.IO.MemoryStream> Ezért lehet, az adatfolyam állapotának szerializálni az adatbázisba, és visszaállíthatja a későbbi bármikor időben jelentéssel bíró. Azonban távoli eljáráshívás keresztül használatakor az ilyen típusú objektum lenne küldése a proxyn keresztül.       További információ a szerializálási osztályok <xref:System.MarshalByRefObject>, lásd: <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>.</xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector> </xref:System.MarshalByRefObject> kibővítő Történt ISerializable illesztőfelülettel kapcsolatos további információkért lásd: [egyéni szerializálási](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the ISerializable interface to define custom serialization behavior for a class.  \n  \n [!code-cpp[ISerializable Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_4_1.cpp)]\n [!code-cs[ISerializable Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_4_1.cs)]\n [!code-vb[ISerializable Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_4_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ISerializable
  implements: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Kitölti egy <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> szükség lehet, mert a célobjektum adatokkal."
  remarks: "Minden olyan objektumot, szerepel a <xref:System.Runtime.Serialization.SerializationInfo>automatikusan nyomon követheti és a formázó által szerializált.</xref:System.Runtime.Serialization.SerializationInfo>       GetObjectData eljárás behívó kód szükséges a <xref:System.Security.Permissions.SecurityPermission>szerializálási szolgáltatások.</xref:System.Security.Permissions.SecurityPermission> Kapcsolódó számbavételi: <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>      > [!NOTE] > Nem garantált, hogy ezt a módszert fog csak egyszer hívható objektum példányonként a szerializálás során. A metódus, ezért úgy, hogy annak viselkedését ugyanaz lesz, függetlenül a szám, ahányszor nevezik kell végrehajtani."
  example:
  - "The following example uses the GetObjectData method to set alternate values for a serialized object. The code uses the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> method of the <xref:System.Runtime.Serialization.SerializationInfo> class to store the alternate values when the object is serialized. Conversely, when the constructor of the `Person` class is called during deserialization, the alternatve values are retrieved using the <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> method and reassigned to the object's fields.  \n  \n [!code-cs[ISerializable_GetObjectData#0](~/add/codesnippet/csharp/8416df17-ca26-45ef-baab-_1.cs)]\n [!code-vb[ISerializable_GetObjectData#0](~/add/codesnippet/visualbasic/8416df17-ca26-45ef-baab-_1.vb)]"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> adatokkal feltölteni."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A célként megadott (lásd: <xref:System.Runtime.Serialization.StreamingContext>) a szerializáláshoz.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.Serialization.ISerializable.GetObjectData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.ISerializable.GetObjectData*
  parent: System.Runtime.Serialization.ISerializable
  isExternal: false
  name: GetObjectData
  nameWithType: ISerializable.GetObjectData
