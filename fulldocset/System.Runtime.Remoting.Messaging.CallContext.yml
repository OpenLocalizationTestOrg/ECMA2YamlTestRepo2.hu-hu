### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.CallContext
  id: CallContext
  children:
  - System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  - System.Runtime.Remoting.Messaging.CallContext.HostContext
  - System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  - System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  - System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  - System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  langs:
  - csharp
  name: CallContext
  nameWithType: CallContext
  fullName: System.Runtime.Remoting.Messaging.CallContext
  type: Class
  summary: "Itt tulajdonságait, a végrehajtási kód elérési úttal rendelkező tevékenységből áll. Ez az osztály nem örökölhető."
  remarks: "CallContext a speciális gyűjteményobjektum egy szál metódushívások helyi tárolóhoz hasonló, és minden egyes logikai végrehajtási szállal egyedi adatok tárhelyek biztosít. A tárolóhelyek nem megosztott az más logikai szálak hívás környezetek között. Objektumok is hozzáadhatók a CallContext, lefelé halad, és készítsen biztonsági másolatot a végrehajtási kód elérési útja, és megvizsgálta a különféle objektumok az útvonalon.       Ha egy távoli metódus kérés érkezett egy másik objektum <xref:System.AppDomain>, a CallContext osztály hoz létre egy <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>-példányt, és a távoli hívás választ.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> </xref:System.AppDomain> Csak az adott teszi közzé a objektumokat a <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative>felületet, és tárolja a CallContext kívül a <xref:System.AppDomain>a <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext> </xref:System.AppDomain> továbbítódnak</xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> Ez az interfész nem támogató objektumok nem továbbít a <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>példányok távoli metódushívások.</xref:System.Runtime.Remoting.Messaging.LogicalCallContext>      > [!NOTE] > CallContext módszer közül mindegyik statikusak, és a hívás a környezetben, az aktuális <xref:System.Threading.Thread>.</xref:System.Threading.Thread> működik      > [!NOTE] > Ez az osztály a hivatkozás lehetővé teszi. A `SecurityException` vált ki, ha a közvetlen hívónak nincs engedélye infrastruktúra. Lásd: [hivatkozás iránti igények kielégítése érdekében](~/add/includes/ajax-current-ext-md.md) további információt."
  example:
  - "The following code example demonstrates the use of the CallContext class to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the `HelloServiceClass` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> method. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#1](~/add/codesnippet/cpp/t-system.runtime.remotin_16_1.cpp)]\n [!code-cs[CallContext#1](~/add/codesnippet/csharp/t-system.runtime.remotin_16_1.cs)]\n [!code-vb[CallContext#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_16_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class CallContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  id: FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: FreeNamedDataSlot(String)
  nameWithType: CallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "A megadott nevű adatok tárhely kiüríti."
  remarks: ''
  example:
  - "The following code example shows a client creating a named data slot, calling a method on the remote object that displays the value of the named data slot that was returned from the logical thread, and frees that named data slot.  \n  \n [!code-cpp[CallContext_GetHeaders#1](~/add/codesnippet/cpp/m-system.runtime.remotin_115_1.cpp)]\n [!code-cs[CallContext_GetHeaders#1](~/add/codesnippet/csharp/m-system.runtime.remotin_115_1.cs)]\n [!code-vb[CallContext_GetHeaders#1](~/add/codesnippet/visualbasic/m-system.runtime.remotin_115_1.vb)]"
  syntax:
    content: public static void FreeNamedDataSlot (string name);
    parameters:
    - id: name
      type: System.String
      description: "Az adatok hellyel üres neve."
  overload: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye infrastruktúra."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  id: GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: GetData(String)
  nameWithType: CallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "A megadott névvel rendelkező objektum lekéri a <xref href=&quot;System.Runtime.Remoting.Messaging.CallContext&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetData method to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the client class used in the sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext> class. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#3](~/add/codesnippet/cpp/m-system.runtime.remotin_58_1.cpp)]\n [!code-cs[CallContext#3](~/add/codesnippet/csharp/m-system.runtime.remotin_58_1.cs)]\n [!code-vb[CallContext#3](~/add/codesnippet/visualbasic/m-system.runtime.remotin_58_1.vb)]"
  syntax:
    content: public static object GetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "A hívás a környezetben az elem nevét."
    return:
      type: System.Object
      description: "Az objektum a megadott névhez társított hívás környezetében."
  overload: System.Runtime.Remoting.Messaging.CallContext.GetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye infrastruktúra."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  id: GetHeaders
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: GetHeaders()
  nameWithType: CallContext.GetHeaders()
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetHeaders()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "A fejlécek, a metódushívás együtt küldött adja vissza."
  remarks: ''
  example:
  - "The following code example sends headers to a remote method and prints the content of those headers to the console when the remote method returns.  \n  \n [!code-cpp[CallContext_GetHeaders#2](~/add/codesnippet/cpp/m-system.runtime.remotin_44_1.cpp)]\n [!code-cs[CallContext_GetHeaders#2](~/add/codesnippet/csharp/m-system.runtime.remotin_44_1.cs)]\n [!code-vb[CallContext_GetHeaders#2](~/add/codesnippet/visualbasic/m-system.runtime.remotin_44_1.vb)]"
  syntax:
    content: public static System.Runtime.Remoting.Messaging.Header[] GetHeaders ();
    parameters: []
    return:
      type: System.Runtime.Remoting.Messaging.Header[]
      description: "A fejlécek, a metódushívás együtt küldött."
  overload: System.Runtime.Remoting.Messaging.CallContext.GetHeaders*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye infrastruktúra."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext
  id: HostContext
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: HostContext
  nameWithType: CallContext.HostContext
  fullName: System.Runtime.Remoting.Messaging.CallContext.HostContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Lekérdezi vagy beállítja a gazdagép-környezetben az aktuális szál társított."
  syntax:
    content: public static object HostContext { get; set; }
    return:
      type: System.Object
      description: "A gazdagép a környezetben, az aktuális szál társított."
  overload: System.Runtime.Remoting.Messaging.CallContext.HostContext*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye infrastruktúra."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  id: LogicalGetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: LogicalGetData(String)
  nameWithType: CallContext.LogicalGetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "A megadott névvel rendelkező objektum átveszi a logikai hívás a környezetben."
  syntax:
    content: public static object LogicalGetData (string name);
    parameters:
    - id: name
      type: System.String
      description: "A logikai hívás környezetben elem nevét."
    return:
      type: System.Object
      description: "Az objektum a megadott névhez társított logikai hívás környezetében."
  overload: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye infrastruktúra."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  id: LogicalSetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: LogicalSetData(String,Object)
  nameWithType: CallContext.LogicalSetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Egy adott objektum az adott logikai hívás környezetben tárolja, és azt hozzárendeli a megadott névvel."
  syntax:
    content: public static void LogicalSetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "Az új elem logikai hívás környezetében társítandó nevet."
    - id: data
      type: System.Object
      description: "Az objektumnak a logikai hívás a környezetben, ez az objektum tárolására szerializálhatónak kell lennie."
  overload: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye infrastruktúra."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: CallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetData(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Egy adott objektum tárolja, és azt hozzárendeli a megadott névvel."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the SetData method to transmit [Principal and Identity Objects](~/add/includes/ajax-current-ext-md.md) to a remote location for identification. To view the code for the `LogicalCallContextData` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.ILogicalThreadAffinative> interface. To view the code for the `HelloServiceClass` class used in this sample, see the example for the <xref:System.Runtime.Remoting.Messaging.CallContext.GetData%2A> method. To view the code for the server class used in this sample, see the example for the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> class.  \n  \n [!code-cpp[CallContext#1](~/add/codesnippet/cpp/79526df4-afd7-4495-8bab-_1.cpp)]\n [!code-cs[CallContext#1](~/add/codesnippet/csharp/79526df4-afd7-4495-8bab-_1.cs)]\n [!code-vb[CallContext#1](~/add/codesnippet/visualbasic/79526df4-afd7-4495-8bab-_1.vb)]"
  syntax:
    content: public static void SetData (string name, object data);
    parameters:
    - id: name
      type: System.String
      description: "Az új elem a hívás környezetben társítandó nevet."
    - id: data
      type: System.Object
      description: "Az objektum hívás környezetében tárolásához."
  overload: System.Runtime.Remoting.Messaging.CallContext.SetData*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye infrastruktúra."
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  id: SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  parent: System.Runtime.Remoting.Messaging.CallContext
  langs:
  - csharp
  name: SetHeaders(Header[])
  nameWithType: CallContext.SetHeaders(Header[])
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(Header[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Beállítja a fejlécek, a metódushívás együtt küldött."
  remarks: ''
  example:
  - "The following example code shows the ease with which a header is put on the logical thread.  \n  \n [!code-cpp[CallContext_GetHeaders#3](~/add/codesnippet/cpp/8c77ae3c-b36c-42f8-9ac6-_1.cpp)]\n [!code-cs[CallContext_GetHeaders#3](~/add/codesnippet/csharp/8c77ae3c-b36c-42f8-9ac6-_1.cs)]\n [!code-vb[CallContext_GetHeaders#3](~/add/codesnippet/visualbasic/8c77ae3c-b36c-42f8-9ac6-_1.vb)]"
  syntax:
    content: public static void SetHeaders (System.Runtime.Remoting.Messaging.Header[] headers);
    parameters:
    - id: headers
      type: System.Runtime.Remoting.Messaging.Header[]
      description: "A <xref href=&quot;System.Runtime.Remoting.Messaging.Header&quot;> </xref> együtt a metódushívás küldik a fejlécek tömbje."
  overload: System.Runtime.Remoting.Messaging.CallContext.SetHeaders*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A közvetlen hívónak nincs engedélye infrastruktúra."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: FreeNamedDataSlot(String)
  nameWithType: CallContext.FreeNamedDataSlot(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetData(String)
  nameWithType: CallContext.GetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetData(String)
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetHeaders()
  nameWithType: CallContext.GetHeaders()
  fullName: System.Runtime.Remoting.Messaging.CallContext.GetHeaders()
- uid: System.Runtime.Remoting.Messaging.Header[]
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: Header
  nameWithType: Header
  fullName: System.Runtime.Remoting.Messaging.Header[]
  spec.csharp:
  - uid: System.Runtime.Remoting.Messaging.Header
    name: Header
    nameWithType: Header
    fullName: Header[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: HostContext
  nameWithType: CallContext.HostContext
  fullName: System.Runtime.Remoting.Messaging.CallContext.HostContext
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(System.String)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalGetData(String)
  nameWithType: CallContext.LogicalGetData(String)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData(String)
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalSetData(String,Object)
  nameWithType: CallContext.LogicalSetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData(System.String,System.Object)
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetData(String,Object)
  nameWithType: CallContext.SetData(String,Object)
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetData(String,Object)
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(System.Runtime.Remoting.Messaging.Header[])
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetHeaders(Header[])
  nameWithType: CallContext.SetHeaders(Header[])
  fullName: System.Runtime.Remoting.Messaging.CallContext.SetHeaders(Header[])
- uid: System.Runtime.Remoting.Messaging.CallContext.FreeNamedDataSlot*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: FreeNamedDataSlot
  nameWithType: CallContext.FreeNamedDataSlot
- uid: System.Runtime.Remoting.Messaging.CallContext.GetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetData
  nameWithType: CallContext.GetData
- uid: System.Runtime.Remoting.Messaging.CallContext.GetHeaders*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: GetHeaders
  nameWithType: CallContext.GetHeaders
- uid: System.Runtime.Remoting.Messaging.CallContext.HostContext*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: HostContext
  nameWithType: CallContext.HostContext
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalGetData
  nameWithType: CallContext.LogicalGetData
- uid: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: LogicalSetData
  nameWithType: CallContext.LogicalSetData
- uid: System.Runtime.Remoting.Messaging.CallContext.SetData*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetData
  nameWithType: CallContext.SetData
- uid: System.Runtime.Remoting.Messaging.CallContext.SetHeaders*
  parent: System.Runtime.Remoting.Messaging.CallContext
  isExternal: false
  name: SetHeaders
  nameWithType: CallContext.SetHeaders
