### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Interaction
  id: Interaction
  children:
  - Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)
  - Microsoft.VisualBasic.Interaction.AppActivate(System.String)
  - Microsoft.VisualBasic.Interaction.Beep
  - Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])
  - Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])
  - Microsoft.VisualBasic.Interaction.Command
  - Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)
  - Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)
  - Microsoft.VisualBasic.Interaction.Environ(System.Int32)
  - Microsoft.VisualBasic.Interaction.Environ(System.String)
  - Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)
  - Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)
  - Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)
  - Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)
  - Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)
  - Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)
  - Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Interaction.Switch(System.Object[])
  langs:
  - csharp
  name: Interaction
  nameWithType: Interaction
  fullName: Microsoft.VisualBasic.Interaction
  type: Class
  summary: "A <xref uid=&quot;langword_csharp_Interaction&quot; name=&quot;Interaction&quot; href=&quot;&quot;> </xref> modul kommunikál az objektumok, alkalmazások és rendszerek használt eljárásokat tartalmaz."
  remarks: "Ez a modul támogatja a Visual Basic nyelvi kulcsszavak és más programok futtatását, metódus vagy tulajdonság hívása, arról a számítógépről egy hangjelzés hangkártya, adjon meg egy parancssori karakterláncot, COM-objektumok kezelése és szabályozhatja a párbeszédpanelek futásidejű kódtár tagokat."
  example:
  - "The following example uses the `Shell` function to run an application specified by the user. Specifying <xref:Microsoft.VisualBasic.AppWinStyle?displayProperty=fullName> as the second argument opens the application in normal size and gives it the focus.  \n  \n```  \nDim procID As Integer  \n' Run calculator.  \nprocID = Shell(\"C:\\Windows\\system32\\calc.exe\", AppWinStyle.NormalFocus)  \n' The preceding path is for Windows XP.  \n' The Windows 2000 path is C:\\WINNT\\system32\\calc.exe.  \n```"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Interaction
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)
  id: AppActivate(System.Int32)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: AppActivate(Int32)
  nameWithType: Interaction.AppActivate(Int32)
  fullName: Microsoft.VisualBasic.Interaction.AppActivate(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy alkalmazás már futó aktiválja."
  remarks: "Használhat `AppActivate` hogy egy alkalmazás aktív ablakának fókuszba. Akkor lehet, hogy nem leírót vagy az aktív ablak mutató hivatkozás, vagy még akkor is tudja, hogy melyik ablak aktív adott pillanatban. Ebben az esetben nem használhatja a <xref:System.Windows.Forms.Control.Focus%2A>metódus.</xref:System.Windows.Forms.Control.Focus%2A>       A `AppActivate` függvény elnevezett alkalmazásával vagy ablakban a fókusz megváltozik, de nincs hatással az teljes méretű, vagy kis méretű. Fókusz kerül aktivált alkalmazás el, amikor a felhasználó megkísérli a néhány jelölni vagy bezárja az ablakot. Használhatja a `Shell` függvény olyan alkalmazást, és az ablak stílus beállítása.       Ha használja a `Title` paraméter, `AppActivate` nem betűérzékeny összehasonlító használja, de egyébként szükséges terméknévnek pontosan egyeznie kell a címsor tartalmát. A legfelső szintű windows keresztül és a gyermek Windows először megkeresi. Ha az nem található egyezés, jelez-e egy <xref:System.ArgumentException>.</xref:System.ArgumentException>       Használhat `AppActivate` csak a windows saját folyamatokkal. A legtöbb konzol alkalmazások nem tulajdonosa a windows, ami azt jelenti, amelyek nem szerepelnek a listában a dolgozza fel, amelyek `AppActivate` kereséseket. A Konzolalkalmazás-ről fut, amikor a rendszer az alkalmazás futtatásához egy külön eljárással hoz létre, és a kimenetet visszaadja a konzol folyamat. Ezért amikor az aktuális folyamat Azonosítót kér le, kap a különálló folyamat Folyamatazonosítója, nem pedig a Konzolalkalmazás folyamat azonosítója.       Futási időben a `AppActivate` függvény aktiválja minden futó alkalmazás rendelkező megfelelő `Title` vagy a megfelelő Folyamatazonosító `ProcessId`. Ha nincs pontos egyezés, aktiválja-e bármely alkalmazás, amelynek cím karakterlánc végződik `Title`. Ha nevű egynél több alkalmazás van `Title`, a `AppActivate` függvény önkényesen választ egyet aktiválásához.      > [!NOTE] > A `AppActivate` függvény csak `UIPermission` , a <xref:System.Security.Permissions.UIPermissionWindow>szintje, amely hatással lehet a részlegesen megbízható helyzetekben végrehajtása.</xref:System.Security.Permissions.UIPermissionWindow> További információkért lásd: <xref:System.Security.Permissions.UIPermission>.</xref:System.Security.Permissions.UIPermission>"
  example:
  - "This example illustrates various uses of the `AppActivate` function to activate an application window. If a Notepad process is not running, the example throws an <xref:System.ArgumentException>. The `Shell` procedure assumes the applications are in the paths specified.  \n  \n [!code-vb[VbVbalrCatRef#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._135_1.vb)]"
  syntax:
    content: public static void AppActivate (int ProcessId);
    parameters:
    - id: ProcessId
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>Ez a folyamat rendelt Win32 folyamat azonosító szám megadásával. Az azonosító által visszaadott is használhatja a <xref:Microsoft.VisualBasic.Interaction.Shell*>, feltéve, hogy nem nulla.</xref:Microsoft.VisualBasic.Interaction.Shell*>"
  overload: Microsoft.VisualBasic.Interaction.AppActivate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.AppActivate(System.String)
  id: AppActivate(System.String)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: AppActivate(String)
  nameWithType: Interaction.AppActivate(String)
  fullName: Microsoft.VisualBasic.Interaction.AppActivate(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy alkalmazás már futó aktiválja."
  remarks: "Használhat `AppActivate` hogy egy alkalmazás aktív ablakának fókuszba. Akkor lehet, hogy nem leírót vagy az aktív ablak mutató hivatkozás, vagy még akkor is tudja, hogy melyik ablak aktív adott pillanatban. Ebben az esetben nem használhatja a <xref:System.Windows.Forms.Control.Focus%2A>metódus.</xref:System.Windows.Forms.Control.Focus%2A>       A `AppActivate` függvény elnevezett alkalmazásával vagy ablakban a fókusz megváltozik, de nincs hatással az teljes méretű, vagy kis méretű. Fókusz kerül aktivált alkalmazás el, amikor a felhasználó megkísérli a néhány jelölni vagy bezárja az ablakot. Használhatja a `Shell` függvény olyan alkalmazást, és az ablak stílus beállítása.       Ha használja a `Title` paraméter, `AppActivate` nem betűérzékeny összehasonlító használja, de egyébként szükséges terméknévnek pontosan egyeznie kell a címsor tartalmát. A legfelső szintű windows keresztül és a gyermek Windows először megkeresi. Ha az nem található egyezés, jelez-e egy <xref:System.ArgumentException>.</xref:System.ArgumentException>       Használhat `AppActivate` csak a windows saját folyamatokkal. A legtöbb konzol alkalmazások nem tulajdonosa a windows, ami azt jelenti, amelyek nem szerepelnek a listában a dolgozza fel, amelyek `AppActivate` kereséseket. A Konzolalkalmazás-ről fut, amikor a rendszer az alkalmazás futtatásához egy külön eljárással hoz létre, és a kimenetet visszaadja a konzol folyamat. Ezért amikor az aktuális folyamat Azonosítót kér le, kap a különálló folyamat Folyamatazonosítója, nem pedig a Konzolalkalmazás folyamat azonosítója.       Futási időben a `AppActivate` függvény aktiválja minden futó alkalmazás rendelkező megfelelő `Title` vagy a megfelelő Folyamatazonosító `ProcessId`. Ha nincs pontos egyezés, aktiválja-e bármely alkalmazás, amelynek cím karakterlánc végződik `Title`. Ha nevű egynél több alkalmazás van `Title`, a `AppActivate` függvény önkényesen választ egyet aktiválásához.      > [!NOTE] > A `AppActivate` függvény csak `UIPermission` , a <xref:System.Security.Permissions.UIPermissionWindow>szintje, amely hatással lehet a részlegesen megbízható helyzetekben végrehajtása.</xref:System.Security.Permissions.UIPermissionWindow> További információkért lásd: <xref:System.Security.Permissions.UIPermission>.</xref:System.Security.Permissions.UIPermission>"
  example:
  - "This example illustrates various uses of the `AppActivate` function to activate an application window. If a Notepad process is not running, the example throws an <xref:System.ArgumentException>. The `Shell` procedure assumes the applications are in the paths specified.  \n  \n [!code-vb[VbVbalrCatRef#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._229_1.vb)]"
  syntax:
    content: public static void AppActivate (string Title);
    parameters:
    - id: Title
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a cím az aktiválni kívánt alkalmazás címsorában megadó kifejezést. Használhatja a cím, az alkalmazás indításakor lett rendelve."
  overload: Microsoft.VisualBasic.Interaction.AppActivate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.Beep
  id: Beep
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: Beep()
  nameWithType: Interaction.Beep()
  fullName: Microsoft.VisualBasic.Interaction.Beep()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A számítógép hangalapú keresztül olyan hangnemet hangvételére."
  remarks: "A térközt és időtartama a hardvertől a hardver- és szoftver függ, és ezért változhat a számítógépek között.      > [!NOTE] > A `Beep` függvény csak `UIPermission` , a <xref:System.Security.Permissions.UIPermissionWindow>szintje, amely hatással lehet a részlegesen megbízható helyzetekben végrehajtása.</xref:System.Security.Permissions.UIPermissionWindow> További információkért lásd: <xref:System.Security.Permissions.UIPermission>.</xref:System.Security.Permissions.UIPermission>"
  example:
  - "This example uses the `Beep` function to sound a tone through the computer's speaker.  \n  \n [!code-vb[VbVbalrCatRef#59](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._129_1.vb)]"
  syntax:
    content: public static void Beep ();
    parameters: []
  overload: Microsoft.VisualBasic.Interaction.Beep*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])
  id: CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: CallByName(Object,String,CallType,Object[])
  nameWithType: Interaction.CallByName(Object,String,CallType,Object[])
  fullName: Microsoft.VisualBasic.Interaction.CallByName(Object,String,CallType,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Metódus végrehajtása egy olyan objektumon, vagy beállítja azt, vagy adja vissza egy tulajdonság."
  remarks: "A `CallByName` függvény futásidőben használja a tulajdonságot, állítsa be a tulajdonságot, vagy az kíván hívni egy metódust."
  example:
  - "In the following example, the first line uses `CallByName` to set the `Text` property of a text box, the second line retrieves the value of the `Text` property, and the third line invokes the `Move` method to move the text box.  \n  \n [!code-vb[VbVbalrFunctions#99](~/add/codesnippet/visualbasic/4d9384f0-535e-442c-920a-_1.vb)]  \n  \n [!code-vb[VbVbalrFunctions#20](~/add/codesnippet/visualbasic/4d9384f0-535e-442c-920a-_2.vb)]  \n  \n The next example uses the `CallByName` function to invoke the `Add` and `Item` methods of a collection object.  \n  \n [!code-vb[VbVbalrFunctions#21](~/add/codesnippet/visualbasic/4d9384f0-535e-442c-920a-_3.vb)]"
  syntax:
    content: public static object CallByName (object ObjectRef, string ProcName, Microsoft.VisualBasic.CallType UseCallType, object[] Args);
    parameters:
    - id: ObjectRef
      type: System.Object
      description: "Kötelező. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. Az objektum teszi ki a következő tulajdonság vagy metódus mutató hivatkozások."
    - id: ProcName
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. A következő tulajdonság vagy metódus olyan objektumon, nevét tartalmazó karakterlánc-kifejezés."
    - id: UseCallType
      type: Microsoft.VisualBasic.CallType
      description: "Kötelező. Egy számbavételi típusú tag <xref href=&quot;Microsoft.VisualBasic.CallType&quot;> </xref> meghívott eljárás típusára. The value of <xref uid=&quot;langword_csharp_CallType&quot; name=&quot;CallType&quot; href=&quot;&quot;></xref> can be <xref uid=&quot;langword_csharp_Method&quot; name=&quot;Method&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Get&quot; name=&quot;Get&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;></xref>."
    - id: Args
      type: System.Object[]
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_ParamArray&quot; name=&quot;ParamArray&quot; href=&quot;&quot;></xref>. A paramétertömb tartalmazó argumentumokat adhatók át a következő tulajdonság vagy metódus lett meghívva."
    return:
      type: System.Object
      description: "Metódus végrehajtása egy olyan objektumon, vagy beállítja azt, vagy adja vissza egy tulajdonság."
  overload: Microsoft.VisualBasic.Interaction.CallByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Invalid <code>UseCallType</code> value; must be <xref uid=&quot;langword_csharp_Method&quot; name=&quot;Method&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Get&quot; name=&quot;Get&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Set&quot; name=&quot;Set&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])
  id: Choose(System.Double,System.Object[])
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: Choose(Double,Object[])
  nameWithType: Interaction.Choose(Double,Object[])
  fullName: Microsoft.VisualBasic.Interaction.Choose(Double,Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Kiválasztja, és argumentumai értékét adja vissza."
  remarks: "A `Choose` függvény egy tagot a lista az átadott `Choice()`értéke alapján `Index`. A lista első tagja van kiválasztva amikor `Index` 1. A lista utolsó tagját kijelölt amikor `Index` van `UBound`(`Choice()`). Ha `Index` kívül ezek a korlátozások `Choose` adja vissza `Nothing`.       Ha `Index` nem egész szám, mielőtt kiértékelése megtörténik a legközelebbi egész számra lesz kerekítve.       Használhat `Choose` kereshet meg egy értéket a lehetőségek listájában.      > [!NOTE] > A kifejezések az argumentumlista függvényhívásokat is tartalmazzák. Az argumentumlista hívásának előkészítése során `Choose`, a Visual Basic fordítóprogram minden függvényt hívja minden kifejezésben. Ez azt jelenti, hogy nem használ, nem alatt meghívni, ha egy másik kifejezés egyben az adott funkciót `Index`."
  example:
  - "This example uses the `Choose` function to display a name in response to an index passed into the procedure in the `Ind` parameter.  \n  \n [!code-vb[VbVbalrFunctions#22](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._248_1.vb)]"
  syntax:
    content: public static object Choose (double Index, object[] Choice);
    parameters:
    - id: Index
      type: System.Double
      description: "Kötelező. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>. Az átadott numerikus kifejezés, amely egy 1 és az elemek száma közötti értéket eredményez a `Choice` argumentum."
    - id: Choice
      type: System.Object[]
      description: "Kötelező. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>a paramétertömb. Megadhat egy változó vagy a kiértékeli a kifejezést a <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> adattípus, bizonyos <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> változók vagy kifejezések szóközzel elválasztva, vagy egy egydimenziós tömbjének <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> elemek."
    return:
      type: System.Object
      description: "Kiválasztja, és argumentumai értékét adja vissza."
  overload: Microsoft.VisualBasic.Interaction.Choose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.Command
  id: Command
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: Command()
  nameWithType: Interaction.Command()
  fullName: Microsoft.VisualBasic.Interaction.Command()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A Visual Basic vagy végrehajtható program indításához használt parancssori argumentum része a Visual Basic-val fejlesztett beolvasása. A <xref uid=&quot;langword_csharp_My&quot; name=&quot;My&quot; href=&quot;&quot;> </xref> funkciójával nagyobb hatékonyságot és, mint a <xref uid=&quot;langword_csharp_Command &quot; name=&quot;Command &quot; href=&quot;&quot;> </xref>függvény. További információkért lásd: <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*>.</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*>"
  remarks: "Miután az argumentumok ad vissza, kereshet közös egyes elválasztó karakterek, például a tárolóhelyek, visszafelé vagy előre perjeleket, kötőjelet vagy idézőjelek között ossza fel, vagy végezzen keresést a karakterlánc egyedi paraméterek.       Az alkalmazások Visual Basic-val fejlesztett, mely egy .exe fájlhoz a `Command` függvény argumentumai, amely után a parancssorban, ezt az űrlapot az alkalmazás neve jelenik meg: `MyApp(cmdlineargs)`."
  example:
  - "This example uses the `Command` function to return the command-line arguments in an object that contains an array.  \n  \n [!code-vb[VbVbalrCatRef#58](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._185_1.vb)]"
  syntax:
    content: public static string Command ();
    parameters: []
    return:
      type: System.String
      description: "A Visual Basic vagy végrehajtható program indításához használt parancssori argumentum része a Visual Basic-val fejlesztett beolvasása.       A <xref uid=&quot;langword_csharp_My&quot; name=&quot;My&quot; href=&quot;&quot;> </xref> funkciójával nagyobb hatékonyságot és, mint a <xref uid=&quot;langword_csharp_Command &quot; name=&quot;Command &quot; href=&quot;&quot;> </xref>függvény. További információkért lásd: <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*>.</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs*>"
  overload: Microsoft.VisualBasic.Interaction.Command*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)
  id: CreateObject(System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: CreateObject(String,String)
  nameWithType: Interaction.CreateObject(String,String)
  fullName: Microsoft.VisualBasic.Interaction.CreateObject(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Hoz létre, és visszaad egy hivatkozást a COM-objektum. <xref uid=&quot;langword_csharp_CreateObject&quot; name=&quot;CreateObject&quot; href=&quot;&quot;></xref>nem hozhatók létre a Visual Basic osztályok példányai, kivéve, ha azon osztályok közzé lett téve, COM-összetevőket."
  remarks: "To create an instance of a COM component, assign the object returned by `CreateObject` to an object variable:  \n  \n```vb#  \nSub CreateADODB()  \n   Dim adoApp As Object  \n   adoApp = CreateObject(\"ADODB.Connection\")  \nEnd Sub  \n```  \n  \n The type of object variable you use to store the returned object can affect your application's performance. Declaring an object variable with the `As Object` clause creates a variable that can contain a reference to any type of object. However, access to the object through that variable is *late-bound*, that is, the binding occurs when your program runs. There are many reasons you should avoid late binding, including slower application performance.  \n  \n You can create an object variable that results in early binding—that is, binding when the program is compiled. To do so, add a reference to the type library for your object from the **COM** tab of the **Add Reference** dialog box on the **Project** menu. Then declare the object variable of the specific type of your object. In most cases, it is more efficient to use the `Dim` statement and a primary interop assembly to create objects than it is to use the `CreateObject` function.  \n  \n## Interacting with Unmanaged Code  \n Another issue is that COM objects use unmanaged code — code without the benefit of the common language runtime. There is a fair degree of complexity involved in mixing the managed code of Visual Basic with unmanaged code from COM. When you add a reference to a COM object, Visual Basic searches for a primary interop assembly (PIA) for that library; if it finds one, then it uses it. If it does not find a PIA, then it creates an interoperability assembly that contains local interoperability classes for each class in the COM library. For more information, see [COM Interoperability in .NET Framework Applications](~/add/includes/ajax-current-ext-md.md).  \n  \n You should generally use strongly bound objects and primary interop assemblies whenever possible. The examples below use the `CreateObject` function with Microsoft Office objects for demonstration purposes only. However, these objects are easier to use and more reliable when used with the appropriate primary interop assembly.  \n  \n## Creating an Object on a Remote Computer  \n You can create an object on a remote networked computer by passing the name of the computer to the `ServerName` argument of the `CreateObject` function. That name is the same as the Machine Name portion of a share name: for a share named \"\\\\\\MyServer\\Public,\" `ServerName` is \"MyServer.\"  \n  \n> [!NOTE]\n>  Refer to COM documentation (see Microsoft Developer Network) for additional information on making an application accessible on a remote networked computer. You may need to add a registry key for your application.  \n  \n The following code returns the version number of an instance of Excel running on a remote computer named `MyServer`:  \n  \n```vb#  \nSub CreateRemoteExcelObj()  \n    Dim xlApp As Object  \n    ' Replace string \"\\\\MyServer\" with name of the remote computer.  \n    xlApp = CreateObject(\"Excel.Application\", \"\\\\MyServer\")  \n    MsgBox(xlApp.Version)  \nEnd Sub  \n```  \n  \n If the remote server name is incorrect, or if it is unavailable, a run-time error occurs.  \n  \n> [!NOTE]\n>  Use `CreateObject` when there is no current instance of the object. If an instance of the object is already running, a new instance is started, and an object of the specified type is created. To use the current instance, or to start the application and have it load a file, use the `GetObject` function. If an object has registered itself as a single-instance object, only one instance of the object is created, no matter how many times `CreateObject` is executed.  \n  \n## Creating Framework Objects  \n You can use the `CreateObject` function only to create a COM object. While there is no exact equivalent mechanism for creating a .NET Framework object, the <xref:System.Activator> in the <xref:System> namespace contains methods to create local or remote objects. In particular, the <xref:System.Activator.CreateInstance%2A> method or the <xref:System.Activator.CreateInstanceFrom%2A> method might be useful.  \n  \n> [!IMPORTANT]\n>  The `CreateObject` function requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)."
  example:
  - "The following example uses the `CreateObject` function to create a Microsoft Excel worksheet and saves the worksheet to a file. To use this example, Excel must be installed on the computer where this program runs. Also, you must add a reference to the type library from the **COM** tab of the **Add Reference** dialog box on the **Project** menu. The name of the type library varies depending on the version of Excel installed on your computer. For example, the type library for Microsoft Excel 2002 is named **Microsoft Excel 10.0 Object Library**.  \n  \n [!code-vb[VbVbalrExcelObject#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._59_1.vb)]"
  syntax:
    content: public static object CreateObject (string ProgId, string ServerName = "");
    parameters:
    - id: ProgId
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. A program az objektum azonosítója létrehozásához."
    - id: ServerName
      type: System.String
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. A hálózati kiszolgálón, ahol létrejön az objektum neve. Ha `ServerName` egy üres karakterlánc (&quot;&quot;), a helyi számítógépet használja."
    return:
      type: System.Object
      description: "Hoz létre, és visszaad egy hivatkozást a COM-objektum. <xref uid=&quot;langword_csharp_CreateObject&quot; name=&quot;CreateObject&quot; href=&quot;&quot;></xref>nem hozhatók létre a Visual Basic osztályok példányai, kivéve, ha azon osztályok közzé lett téve, COM-összetevőket."
  overload: Microsoft.VisualBasic.Interaction.CreateObject*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Kiszolgáló nem érhető el"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A megadott típus nincs objektum"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)
  id: DeleteSetting(System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: DeleteSetting(String,String,String)
  nameWithType: Interaction.DeleteSetting(String,String,String)
  fullName: Microsoft.VisualBasic.Interaction.DeleteSetting(String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Szakaszhoz vagy kulcsbeállítás törli egy alkalmazás bejegyzést a Windows beállításjegyzékében. A <xref uid=&quot;langword_csharp_My&quot; name=&quot;My&quot; href=&quot;&quot;> </xref> szolgáltatás lehetővé teszi nagyobb hatékonyságot és teljesítményének a kapcsolatos műveletek, mint a <xref uid=&quot;langword_csharp_DeleteSetting &quot; name=&quot;DeleteSetting &quot; href=&quot;&quot;> </xref>függvény. További információkért lásd: <xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>.</xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>"
  remarks: "If all arguments are provided, the specified setting is deleted. A run-time error occurs if you attempt to use `DeleteSetting` on a nonexistent section or key setting.  \n  \n `DeleteSetting` requires that a user be logged on since it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively.  \n  \n Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\\Software\\` or the `HKEY_USER\\DEFAULT\\Software` registry keys."
  example:
  - "The following example first uses the `SaveSetting` procedure to make entries in the Windows registry for the `MyApp` application, and then uses the `DeleteSetting` function to remove them. Because no `Key` argument is specified, the whole `Startup` section is deleted, including the section name and all of its keys.  \n  \n [!code-vb[VbVbalrCatRef#45](~/add/codesnippet/visualbasic/e195f0a5-815a-4af5-b672-_1.vb)]"
  syntax:
    content: public static void DeleteSetting (string AppName, string Section = null, string Key = null);
    parameters:
    - id: AppName
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>az alkalmazás vagy a projekt, amelyhez a szakasz vagy kulcs beállítás érvényes nevét tartalmazó kifejezés."
    - id: Section
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés, amelyből a érték törlése folyamatban van a szakasz nevét tartalmazó. Ha csak `AppName` és `Section` állnak rendelkezésre, a megadott szakasz törlése minden kapcsolódó kulcsfontosságú beállításaival együtt."
    - id: Key
      type: System.String
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a törölni kívánt érték nevét tartalmazó kifejezés."
  overload: Microsoft.VisualBasic.Interaction.DeleteSetting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Felhasználó nem jelentkezett be."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.Environ(System.Int32)
  id: Environ(System.Int32)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: Environ(Int32)
  nameWithType: Interaction.Environ(Int32)
  fullName: Microsoft.VisualBasic.Interaction.Environ(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Az operációs rendszer környezeti változó társított karakterláncot ad vissza."
  remarks: "Ha `Expression` tartalmazza a karakterláncot a <xref:Microsoft.VisualBasic.Interaction.Environ%2A>függvény a megadott környezeti karakterlánc hozzárendelt szöveget – Ez azt jelenti, hogy az a szöveg, a következő környezeti változó a környezet-karakterlánc tábla egyenlőségjel (=).</xref:Microsoft.VisualBasic.Interaction.Environ%2A> Ha a karakterlánc a `Expression` nem található a környezetben-karakterlánc tábla, a nulla hosszúságú karakterlánc (&quot;&quot;) adja vissza.       Ha `Expression` egész elfoglaló, hogy a környezet-karakterlánc tábla numerikus pozícióját adja vissza a karakterláncot tartalmaz. Ebben az esetben <xref:Microsoft.VisualBasic.Interaction.Environ%2A>a teljes szöveg, beleértve a környezeti változó nevét adja vissza.</xref:Microsoft.VisualBasic.Interaction.Environ%2A> Ha nincs környezet karakterlánc szerepel a megadott pozíciónál <xref:Microsoft.VisualBasic.Interaction.Environ%2A>nulla hosszúságú karakterláncot ad vissza.</xref:Microsoft.VisualBasic.Interaction.Environ%2A>      > [!IMPORTANT] > A <xref:Microsoft.VisualBasic.Interaction.Environ%2A>függvény csak környezet engedéllyel, amely hatással lehet a részlegesen megbízható helyzetekben végrehajtása.</xref:Microsoft.VisualBasic.Interaction.Environ%2A> További információkért lásd: <xref:System.Security.Permissions.SecurityPermission>és [kódelérési engedélyeik](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the <xref:Microsoft.VisualBasic.Interaction.Environ%2A> function to supply the entry number and length of the `PATH` statement from the environment-string table.  \n  \n [!code-vb[VbVbalrCatRef#28](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._74_1.vb)]"
  syntax:
    content: public static string Environ (int Expression);
    parameters:
    - id: Expression
      type: System.Int32
      description: "Kötelező. Kiértékelhető kifejezéssel vagy egy környezeti változó, vagy a környezet-karakterlánc tábla környezet karakterláncra numerikus sorrendjének megfelelő egész nevét tartalmazó karakterlánc."
    return:
      type: System.String
      description: "Az operációs rendszer környezeti változó társított karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Interaction.Environ*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Expression</code>Nincs megadva."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.Environ(System.String)
  id: Environ(System.String)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: Environ(String)
  nameWithType: Interaction.Environ(String)
  fullName: Microsoft.VisualBasic.Interaction.Environ(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Az operációs rendszer környezeti változó társított karakterláncot ad vissza."
  remarks: "Ha `Expression` karakterláncot, a függvény a megadott környezeti karakterlánc hozzárendelt szöveget Environ tartalmazza – ez azt jelenti, hogy az a szöveg, a következő környezeti változó a környezet-karakterlánc tábla egyenlőségjel (=). Ha a karakterlánc a `Expression` nem található a környezetben-karakterlánc tábla, a nulla hosszúságú karakterlánc (&quot;&quot;) adja vissza.       Ha `Expression` egész elfoglaló, hogy a környezet-karakterlánc tábla numerikus pozícióját adja vissza a karakterláncot tartalmaz. Ebben az esetben Environ adja vissza a teljes szöveg, beleértve a környezeti változó nevét. Ha nincs környezet karakterlánc az adott helyre, Environ nulla hosszúságú karakterláncot ad vissza.      > [!IMPORTANT] > A Environ függvény csak környezet engedéllyel, amely hatással lehet a részlegesen megbízható helyzetekben végrehajtása során. További információkért lásd: <xref:System.Security.Permissions.SecurityPermission>és [kódelérési engedélyeik](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "This example uses the Environ function to supply the entry number and length of the `PATH` statement from the environment-string table.  \n  \n [!code-vb[VbVbalrCatRef#28](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._35_1.vb)]"
  syntax:
    content: public static string Environ (string Expression);
    parameters:
    - id: Expression
      type: System.String
      description: "Kötelező. Kiértékelhető kifejezéssel vagy egy környezeti változó, vagy a környezet-karakterlánc tábla környezet karakterláncra numerikus sorrendjének megfelelő egész nevét tartalmazó karakterlánc."
    return:
      type: System.String
      description: "Az operációs rendszer környezeti változó társított karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Interaction.Environ*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Expression</code>Nincs megadva."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)
  id: GetAllSettings(System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: GetAllSettings(String,String)
  nameWithType: Interaction.GetAllSettings(String,String)
  fullName: Microsoft.VisualBasic.Interaction.GetAllSettings(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Főbb beállításai és a megfelelő értékek listáját adja vissza (eredetileg létrehozott <xref uid=&quot;langword_csharp_SaveSetting&quot; name=&quot;SaveSetting&quot; href=&quot;&quot;> </xref>) a Windows beállításjegyzékében egy alkalmazás bejegyzésből. Használja a <xref uid=&quot;langword_csharp_My&quot; name=&quot;My&quot; href=&quot;&quot;> </xref> funkció lehetővé teszi nagyobb hatékonyságot és teljesítmény kapcsolatos műveletek, mint a <xref uid=&quot;langword_csharp_GetAllSettings&quot; name=&quot;GetAllSettings&quot; href=&quot;&quot;> </xref>. További információkért lásd: <xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>.</xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>"
  remarks: "`GetAllSettings` returns an uninitialized `Object` if either `AppName` or `Section` does not exist.  \n  \n Because it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively, `GetAllSettings` requires that a user be logged on.  \n  \n Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\\Software\\` or the `HKEY_USER\\DEFAULT\\Software` registry keys."
  example:
  - "This example first uses the `SaveSetting` function to make entries in the Windows registry for the application specified as `AppName`, then uses the `GetAllSettings` function to display the settings. Note that application names and `Section` names cannot be retrieved with `GetAllSettings`. Finally, the `DeleteSetting` function removes the application's entries.  \n  \n [!code-vb[VbVbalrCatRef#68](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._40_1.vb)]"
  syntax:
    content: public static string[,] GetAllSettings (string AppName, string Section);
    parameters:
    - id: AppName
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>az alkalmazás vagy a projekt, amelynek beállításait kért nevét tartalmazó kifejezés."
    - id: Section
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kért amelynek beállításait szakasz nevét tartalmazó kifejezés. <xref uid=&quot;langword_csharp_GetAllSettings&quot; name=&quot;GetAllSettings&quot; href=&quot;&quot;></xref>egy kétdimenziós tömbje karakterláncokat tartalmazó objektumot ad vissza. A karakterláncokat tartalmaznak a főbb beállítások az adott szakaszra, valamint a hozzájuk tartozó értékek."
    return:
      type: System.String[,]
      description: "Főbb beállításai és a megfelelő értékek listáját adja vissza (eredetileg létrehozott <xref uid=&quot;langword_csharp_SaveSetting&quot; name=&quot;SaveSetting&quot; href=&quot;&quot;> </xref>) a Windows beállításjegyzékében egy alkalmazás bejegyzésből.       Használja a <xref uid=&quot;langword_csharp_My&quot; name=&quot;My&quot; href=&quot;&quot;> </xref> funkció lehetővé teszi nagyobb hatékonyságot és teljesítmény kapcsolatos műveletek, mint a <xref uid=&quot;langword_csharp_GetAllSettings&quot; name=&quot;GetAllSettings&quot; href=&quot;&quot;> </xref>. További információkért lásd: <xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>.</xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>"
  overload: Microsoft.VisualBasic.Interaction.GetAllSettings*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Felhasználó nem jelentkezett be."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)
  id: GetObject(System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: GetObject(String,String)
  nameWithType: Interaction.GetObject(String,String)
  fullName: Microsoft.VisualBasic.Interaction.GetObject(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Visszaad egy hivatkozást a COM-összetevők által biztosított objektum."
  remarks: "Use the `GetObject` function to load an instance of a COM component from a file. The following example illustrates this.  \n  \n```vb#  \nDim CADObject As Object  \nCADObject = GetObject(\"C:\\CAD\\schema.cad\")  \n```  \n  \n When this code runs, the application associated with the specified `PathName` is started and the object in the specified file is activated.  \n  \n## Default Cases  \n If `PathName` is a zero-length string (`\"\"`), `GetObject` returns a new object instance of the specified class type. If the `PathName` argument is omitted, `GetObject` returns a currently active object of the class type specified in `Class`. If no object of the specified type exists, an error occurs.  \n  \n## Accessing a Subobject  \n Some applications allow you to activate a subobject associated with a file. To do this, add an exclamation point (`!`) to the end of the file name and follow it with a string that identifies the part of the file you want to activate. For information on how to create this string, see the documentation for the application that created the object.  \n  \n For example, in a drawing application you might have multiple layers to a drawing stored in a file. You could use the following code to activate a layer within a drawing called `schema.cad`.  \n  \n```vb#  \nlayerObject = GetObject(\"C:\\CAD\\schema.cad!Layer3\")  \n```  \n  \n## Specifying a Class  \n If you do not specify the object's `Class`, Automation determines the application to start and the object to activate, based on the file name you provide. Some files, however, can support more than one class of object. For example, a drawing might support three different types of objects: an `Application` object, a `Drawing` object, and a `Toolbar` object, all of which are part of the same file. To specify which object in a file you want to activate, use the optional `Class` argument. The following example illustrates this.  \n  \n```vb#  \nDim drawObj As Object  \ndrawObj = GetObject(\"C:\\Drawings\\sample.drw\", \"Figment.Drawing\")  \n```  \n  \n In the preceding example, `Figment` is the name of a drawing application and `Drawing` is one of the object types it supports.  \n  \n## Using the Object  \n Once an object is activated, you refer to it in code using the object variable you declared. In the preceding example, you access properties and methods of the new object using the object variable `drawObj`. The following example illustrates this.  \n  \n```vb#  \ndrawObj.Line(9, 90)  \ndrawObj.InsertText(9, 100, \"Hello, world.\")  \ndrawObj.SaveAs(\"C:\\Drawings\\sample.drw\")  \n```  \n  \n> [!NOTE]\n>  Use the `GetObject` function when there is a current instance of the object or if you want to create the object with a file loaded. If there is no current instance, and you do not want the object started with a file loaded, use the <xref:Microsoft.VisualBasic.Interaction.CreateObject%2A> function.  \n>   \n>  If an object has registered itself as an ActiveX single-instance object, only one instance of the object is created, no matter how many times `CreateObject` is called. With a single-instance object, `GetObject` always returns the same instance when called with the zero-length string (`\"\"`) syntax, and it causes an error if the `PathName` argument is omitted. You cannot use `GetObject` to obtain a reference to a class created with Visual Basic.  \n  \n> [!IMPORTANT]\n>  The `GetObject` function requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)."
  example:
  - "The following example uses the `GetObject` function to obtain a reference to a specific Microsoft Excel worksheet (`excelObj`). It uses the worksheet's `Application` property to make Excel visible, to close it, and to perform other actions. Using two API calls, the `detectExcel` procedure looks for Excel, and if it is running, enters it in the Running Object table. The first call to `GetObject` causes an error if Excel is not already running, which in this example causes the `excelWasNotRunning` flag to be set to `True`. The second call to `GetObject` specifies a file to open. If Excel is not already running, the second call starts it and returns a reference to the worksheet represented by the specified file, `test.xls`. The file must exist in the specified location; otherwise, Visual Basic throws a <xref:System.IO.FileNotFoundException>. Next, the example code makes both Excel and the window containing the specified worksheet visible.  \n  \n This example requires `Option Strict Off` because it uses late binding, where objects are assigned to variables of type `Object`. You can specify `Option Strict On` and declare objects of specific object types if you add a reference to the Excel type library from the **COM** tab of the **Add Reference** dialog box of the **Project** menu in Visual Studio.  \n  \n [!code-vb[VbVbalrExcelObject#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._196_1.vb)]  \n  \n [!code-vb[VbVbalrExcelObject#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._196_2.vb)]  \n  \n [!code-vb[VbVbalrExcelObject#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._196_3.vb)]  \n  \n When you call the `getExcel` function, a check is made to see if Excel is already running. If it is not, then an instance is created.  \n  \n> [!IMPORTANT]\n>  For simplicity, the preceding example assumes that any window called `XLMAIN` belongs to an instance of Microsoft Excel. If another object, possibly launched by illicit tampering, created a window with that name, it would receive all the messages you intended for Excel. In an application to be used for production, you should include some more rigorous testing to verify that `XLMAIN` really belongs to Excel."
  syntax:
    content: public static object GetObject (string PathName = null, string Class = null);
    parameters:
    - id: PathName
      type: System.String
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. A teljes elérési útja és neve beolvasása objektumot tartalmazó fájl. Ha `PathName` hiányzik, `Class` szükséges."
    - id: Class
      type: System.String
      description: "Kötelező, ha `PathName` nincs megadva. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Egy karakterlánc, amely az objektum osztálya. A `Class` argumentuma van, a következő szintaxist és részek: `appname` `.` `objecttype` [1 |}&1;] paraméter [1 |} Leírás&2;] [2 |}&1;] `appname` [2 |}&2;] szükséges. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Az alkalmazás biztosítása az objektum neve.       [3 |}&1;] `objecttype` [3 |}&2;] szükséges. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. A típus vagy osztály objektum létrehozásához."
    return:
      type: System.Object
      description: "Visszaad egy hivatkozást a COM-összetevők által biztosított objektum."
  overload: Microsoft.VisualBasic.Interaction.GetObject*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "Nincs a megadott osztály típusú objektum létezik."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Nincs a megadott elérési út és fájlnév névvel rendelkező objektum létezik."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)
  id: GetSetting(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: GetSetting(String,String,String,String)
  nameWithType: Interaction.GetSetting(String,String,String,String)
  fullName: Microsoft.VisualBasic.Interaction.GetSetting(String,String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy alkalmazás bejegyzést a Windows beállításjegyzékében kulcsbeállítás értékét adja vissza. A <xref uid=&quot;langword_csharp_My&quot; name=&quot;My&quot; href=&quot;&quot;> </xref> funkció lehetővé teszi nagyobb hatékonyságot és teljesítmény kapcsolatos műveletek, mint a <xref uid=&quot;langword_csharp_GetAllSettings&quot; name=&quot;GetAllSettings&quot; href=&quot;&quot;> </xref>. További információkért lásd: <xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>.</xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>"
  remarks: "If any of the items named in the `GetSetting` arguments do not exist, `GetSetting` returns a value of `Default`.  \n  \n Because it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively, `GetSetting` requires that a user be logged on.  \n  \n Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\\Software\\` or the `HKEY_USER\\DEFAULT\\Software` registry keys.  \n  \n `GetSetting` requires `Read`<xref:System.Security.Permissions.RegistryPermission> ."
  example:
  - "This example first uses the `SaveSetting` function to make entries in the Windows registry for the application specified as `AppName`, and then uses the `GetSetting` function to display one of the settings. Because the `Default` argument is specified, some value is guaranteed to be returned. Notice that `Section` names cannot be retrieved with `GetSetting`. Finally, the `DeleteSetting` function removes all the application's entries.  \n  \n [!code-vb[VbVbalrCatRef#61](~/add/codesnippet/visualbasic/1601a1b5-4317-44fc-9f01-_1.vb)]"
  syntax:
    content: public static string GetSetting (string AppName, string Section, string Key, string Default = "");
    parameters:
    - id: AppName
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>az alkalmazás vagy amelynek kulcsbeállítás van szükség a projekt nevét tartalmazó kifejezés."
    - id: Section
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kulcs beállítás található, amelyben a szakasz nevét tartalmazó kifejezés."
    - id: Key
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a visszaadandó érték nevét tartalmazó kifejezés."
    - id: Default
      type: System.String
      description: "Nem kötelező. A visszatérési érték, ha nincs megadva érték tartalmazó kifejezés a `Key` beállítást. Ha nincs megadva, `Default` érték nulla hosszúságú karakterlánc (&quot;&quot;)."
    return:
      type: System.String
      description: "Egy alkalmazás bejegyzést a Windows beállításjegyzékében kulcsbeállítás értékét adja vissza.       A <xref uid=&quot;langword_csharp_My&quot; name=&quot;My&quot; href=&quot;&quot;> </xref> funkció lehetővé teszi nagyobb hatékonyságot és teljesítmény kapcsolatos műveletek, mint a <xref uid=&quot;langword_csharp_GetAllSettings&quot; name=&quot;GetAllSettings&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Interaction.GetSetting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egy vagy több argumentum <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezésen, vagy a felhasználó nincs bejelentkezve."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)
  id: IIf(System.Boolean,System.Object,System.Object)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: IIf(Boolean,Object,Object)
  nameWithType: Interaction.IIf(Boolean,Object,Object)
  fullName: Microsoft.VisualBasic.Interaction.IIf(Boolean,Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy kifejezés kiértékelésétől függően két objektum egyikét adja vissza."
  remarks: 'A `IIf` funkciót biztosít a háromkomponensű a valami [feltételes operátort:?:](~/add/includes/ajax-current-ext-md.md) a Visual c++-ban.'
  example:
  - "This example uses the `IIf` function to evaluate the `testMe` parameter of the `checkIt` procedure and returns the word \"Large\" if the amount is greater than 1000; otherwise, it returns the word \"Small\".  \n  \n [!code-vb[VbVbalrFunctions#33](~/add/codesnippet/visualbasic/296aac5d-5997-4225-8ac0-_1.vb)]  \n  \n Note that if `Option Strict` is `On`, you must use the `CStr` keyword to explicitly convert the return from `Object` to `String`."
  syntax:
    content: public static object IIf (bool Expression, object TruePart, object FalsePart);
    parameters:
    - id: Expression
      type: System.Boolean
      description: "Kötelező. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. A kifejezés ki kell számítani."
    - id: TruePart
      type: System.Object
      description: "Kötelező. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. Visszaadott if `Expression` értékelődik ki <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: FalsePart
      type: System.Object
      description: "Kötelező. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>. Visszaadott if `Expression` értékelődik ki <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Egy kifejezés kiértékelésétől függően két objektum egyikét adja vissza."
  overload: Microsoft.VisualBasic.Interaction.IIf*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)
  id: InputBox(System.String,System.String,System.String,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: InputBox(String,String,String,Int32,Int32)
  nameWithType: Interaction.InputBox(String,String,String,Int32,Int32)
  fullName: Microsoft.VisualBasic.Interaction.InputBox(String,String,String,Int32,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Egy párbeszédpanelen megjelenik egy üzenet, ha a felhasználó adjon meg szöveget, vagy kattintson a gombra és majd a szövegmező tartalmát tartalmazó karakterláncot ad vissza."
  remarks: "Ha a felhasználó **Mégse**, egy nulla hosszúságú karakterláncot ad vissza.       Adjon meg több, mint az első argumentum, kell használnia a `InputBox` függvény a kifejezésben. Ha nincs megadva egyetlen pozicionális argumentumot, meg kell tartania a megfelelő vesszőt.      > [!NOTE] > A `InputBox` függvény csak `UIPermission` , a <xref:System.Security.Permissions.UIPermissionWindow>szintje, amely hatással lehet a részlegesen megbízható helyzetekben végrehajtása.</xref:System.Security.Permissions.UIPermissionWindow> További információt, tekintse át és <xref:System.Security.Permissions.UIPermission>.</xref:System.Security.Permissions.UIPermission>"
  example:
  - "This example shows various ways to use the `InputBox` function to prompt the user to enter a value. If the x and y positions are omitted, the dialog box is automatically centered for the respective axes. The variable `MyValue` contains the value entered by the user if the user clicks OK or presses the ENTER key.  \n  \n [!code-vb[VbVbalrCatRef#67](~/add/codesnippet/visualbasic/e8c4ff4e-3901-4354-99c7-_1.vb)]"
  syntax:
    content: public static string InputBox (string Prompt, string Title = "", string DefaultResponse = "", int XPos = -1, int YPos = -1);
    parameters:
    - id: Prompt
      type: System.String
      description: "Szükséges <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés a párbeszédpanelen az üzenet jelenik meg. A maximális hossza `Prompt` körülbelül 1024 karakternél rövidebb, attól függően, hogy a használt karakterek szélességét. Ha `Prompt` áll egynél több sor elkülönítheti a sorokat a kocsivissza karakternek (<xref uid=&quot;langword_csharp_Chr(&quot; name=&quot;Chr(&quot; href=&quot;&quot;></xref>13<xref uid=&quot;langword_csharp_)&quot; name=&quot;)&quot; href=&quot;&quot;></xref>), a soremelés karaktert (<xref uid=&quot;langword_csharp_Chr(&quot; name=&quot;Chr(&quot; href=&quot;&quot;></xref>10<xref uid=&quot;langword_csharp_)&quot; name=&quot;)&quot; href=&quot;&quot;></xref>), vagy a kocsivissza/üres sor hírcsatorna kombináció (<xref uid=&quot;langword_csharp_Chr(&quot; name=&quot;Chr(&quot; href=&quot;&quot;></xref>13<xref uid=&quot;langword_csharp_)&quot; name=&quot;)&quot; href=&quot;&quot;> </xref> &amp; <xref uid=&quot;langword_csharp_Chr(&quot; name=&quot;Chr(&quot; href=&quot;&quot;> </xref>10<xref uid=&quot;langword_csharp_)&quot; name=&quot;)&quot; href=&quot;&quot;></xref>) közötti minden egyes sorban."
    - id: Title
      type: System.String
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a párbeszédpanel címsorában megjelenített kifejezés. Ha nincs megadva `Title`, az alkalmazás neve címsorában helyezkedik el."
    - id: DefaultResponse
      type: System.String
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>megjelenik a szövegmezőben, az alapértelmezett válaszban Ha nincs más bemeneti kifejezés van megadva. Ha nincs megadva `DefaultResponse`, a megjelenített szöveg ne legyen üres."
    - id: XPos
      type: System.Int32
      description: "Nem kötelező. Adja meg, twip, a képernyő bal szélétől párbeszédpanel bal oldali szélének távolsága numerikus kifejezés. Ha nincs megadva `XPos`, a párbeszédpanel vízszintesen középre."
    - id: YPos
      type: System.Int32
      description: "Nem kötelező. Adja meg, twip, felső széle és a képernyő felső párbeszédpanelt távolsága numerikus kifejezés. Ha nincs megadva `YPos`, a párbeszédpanel lefelé a képernyő módon függőleges körülbelül harmada helyezkedik el."
    return:
      type: System.String
      description: "Egy párbeszédpanelen megjelenik egy üzenet, ha a felhasználó adjon meg szöveget, vagy kattintson a gombra és majd a szövegmező tartalmát tartalmazó karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Interaction.InputBox*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)
  id: MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: MsgBox(Object,MsgBoxStyle,Object)
  nameWithType: Interaction.MsgBox(Object,MsgBoxStyle,Object)
  fullName: Microsoft.VisualBasic.Interaction.MsgBox(Object,MsgBoxStyle,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A párbeszédpanel üzenetet jelenít meg, ha a felhasználó egy gombra, és majd a mely gombra kattintott a felhasználó jelző egész számot adja vissza."
  remarks: "Ha nincs megadva egyetlen pozicionális argumentumot, meg kell tartania a megfelelő vesszőt.       Ha a párbeszédpanelen megjelenik egy **szakítsa meg** gomb, az ESC billentyű lenyomásával hatása mint kattintva **szakítsa meg** Ha szerepel a párbeszédpanelen egy **súgó** gomb, környezetfüggő súgó áll rendelkezésre a párbeszédpanel. Azonban nincs értéket adja vissza addig, amíg az egyéb gombokra van kiválasztva. Windows űrlap alkalmazások esetén válassza a **súgó** gomb végrehajtja a <xref:System.Windows.Forms.Control.HelpRequested>az űrlap eseménye.</xref:System.Windows.Forms.Control.HelpRequested>      > [!NOTE] > A `MsgBox` függvény csak `UIPermission` , a <xref:System.Security.Permissions.UIPermissionWindow>szintje, amely hatással lehet a részlegesen megbízható helyzetekben végrehajtása.</xref:System.Security.Permissions.UIPermissionWindow> További információkért lásd: <xref:System.Security.Permissions.UIPermission>.</xref:System.Security.Permissions.UIPermission>       A `MsgBoxStyle` számbavételi érték a következő táblázatban láthatók.      ||||   |-|-|-|   | Tag |} Érték |} Leírás |}   | `OKOnly`|0| Csak a jeleníti meg az OK gombra. |}   | `OKCancel`|1| Megjeleníti a OK és a Mégse gomb. |}   | `AbortRetryIgnore`|2| Megjeleníti a megszakítást, próbálkozzon újra, és figyelmen kívül hagyása gombok. |}   | `YesNoCancel`|3| Megjeleníti az Igen, nincs, és a Mégse gomb. |}   | `YesNo`|4| Igen és nem gombokat jeleníti meg. |}   | `RetryCancel`|5| Megjeleníti az újra gombra, és a Mégse gomb. |}   | `Critical`|16| Kritikus üzenet ikon jelenik meg. |}   | `Question`|32| Figyelmeztetés lekérdezés ikon jelenik meg. |}   | `Exclamation`|48| Figyelmeztető üzenet ikon jelenik meg. |}   | `Information`|64| Tájékoztató üzenetet ikon jelenik meg. |}   | `DefaultButton1`|0| Első gomb nincs alapértelmezett. |}   | `DefaultButton2`|256| Második gomb nincs alapértelmezett. |}   | `DefaultButton3`|512| Harmadik gomb nincs alapértelmezett. |}   | `ApplicationModal`|0| Alkalmazás modális. A felhasználónak válaszolnia kell az üzenet mezőbe a jelenlegi alkalmazás munka folytatásához. |}   | `SystemModal`|4096| A rendszer modális. Minden alkalmazást fel vannak függesztve, amíg a felhasználó válaszol-e az üzenet mezőbe. |}   | `MsgBoxSetForeground`|}&65536; |} Az üzenetablakban mezőben adja meg az aktív ablak. |}   | `MsgBoxRight`|}&52428;8 |} A Text az jobbra igazított. |}   | `MsgBoxRtlReading`|}&10485;76 |} Megadja a szöveg megjelenjen-e ennek jobb jobbról balra héber és arab rendszereken olvasásakor. |}       Az első csoport (0 –&5;) értékek számát és típusát a párbeszédpanelen megjelenő gombok ismerteti. A második csoport (16, 32, 48, 64) ikonra stílusát ismerteti. A harmadik csoport (0, 256-ot, 512) határozza meg, melyik gombra az alapértelmezett beállítás. A negyedik csoport (0, 4096) meghatározza, hogy az alkalmazásra vonatkozó a üzenetablak szabályt, és az ötödik csoport határozza meg, hogy-e az üzenetablakban be előtérben ablakban igazítás és a szöveg. Végső értékének létrehozásához számok hozzáadásakor a `Buttons` argumentum, csak egy számot használja az egyes csoportokhoz."
  example:
  - "This example uses the `MsgBox` function to display a critical-error message in a dialog box with Yes and No buttons. The No button is specified as the default response. This is done by combining the `MsgBox` constant values into one numeric expression. In this case, adding 4 (the Yes/No button combination) and 16 (the **Critical Message** window) and 256 (the second button as default button) gives a total of 276. The value returned by the `MsgBox` function depends on the button chosen by the user: Yes returns a value of 6; No returns a value of 7.  \n  \n [!code-vb[VbVbalrCatRef#20](~/add/codesnippet/visualbasic/b9e37542-f81a-4692-86e1-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.MsgBoxResult MsgBox (object Prompt, Microsoft.VisualBasic.MsgBoxStyle Buttons = Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal, object Title = null);
    parameters:
    - id: Prompt
      type: System.Object
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a kifejezés a párbeszédpanelen az üzenet jelenik meg. A maximális hossza `Prompt` körülbelül 1024 karakternél rövidebb, attól függően, hogy a használt karakterek szélességét. Ha `Prompt` áll egynél több sor elkülönítheti a sorokat a kocsivissza karakternek (<xref uid=&quot;langword_csharp_Chr(&quot; name=&quot;Chr(&quot; href=&quot;&quot;></xref>13<xref uid=&quot;langword_csharp_)&quot; name=&quot;)&quot; href=&quot;&quot;></xref>), a soremelés karaktert (<xref uid=&quot;langword_csharp_Chr(&quot; name=&quot;Chr(&quot; href=&quot;&quot;></xref>10<xref uid=&quot;langword_csharp_)&quot; name=&quot;)&quot; href=&quot;&quot;></xref>), vagy a kocsivissza visszatérési/soremelés karakterek kombinációjából (<xref uid=&quot;langword_csharp_Chr(&quot; name=&quot;Chr(&quot; href=&quot;&quot;></xref>13<xref uid=&quot;langword_csharp_)&quot; name=&quot;)&quot; href=&quot;&quot;> </xref> &amp; <xref uid=&quot;langword_csharp_Chr(&quot; name=&quot;Chr(&quot; href=&quot;&quot;> </xref>10<xref uid=&quot;langword_csharp_)&quot; name=&quot;)&quot; href=&quot;&quot;></xref>) közötti minden egyes sorban."
    - id: Buttons
      type: Microsoft.VisualBasic.MsgBoxStyle
      description: "Nem kötelező. Numerikus kifejezés száma és egyéb típusú gomb megjelenítéséhez a ikon stílus használatára, az alapértelmezett gomb identitását, és az alkalmazásra vonatkozó a üzenetablak szabályt értékek összegét. Ha nincs megadva `Buttons`, az alapértelmezett értéke nulla."
    - id: Title
      type: System.Object
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a párbeszédpanel címsorában megjelenített kifejezés. Ha nincs megadva `Title`, az alkalmazás neve címsorában helyezkedik el."
    return:
      type: Microsoft.VisualBasic.MsgBoxResult
      description: "<table><tbody><tr><td> Állandó       </td><td> Érték       </td></tr><tr><td>           <xref uid=&quot;langword_csharp_OK&quot; name=&quot;OK&quot; href=&quot;&quot;></xref>         </td><td> 1       </td></tr><tr><td>           <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;></xref>         </td><td> 2       </td></tr><tr><td>           <xref uid=&quot;langword_csharp_Abort&quot; name=&quot;Abort&quot; href=&quot;&quot;></xref>         </td><td> 3       </td></tr><tr><td>           <xref uid=&quot;langword_csharp_Retry&quot; name=&quot;Retry&quot; href=&quot;&quot;></xref>         </td><td> 4       </td></tr><tr><td>           <xref uid=&quot;langword_csharp_Ignore&quot; name=&quot;Ignore&quot; href=&quot;&quot;></xref>         </td><td> 5       </td></tr><tr><td>           <xref uid=&quot;langword_csharp_Yes&quot; name=&quot;Yes&quot; href=&quot;&quot;></xref>         </td><td> 6       </td></tr><tr><td>           <xref uid=&quot;langword_csharp_No&quot; name=&quot;No&quot; href=&quot;&quot;></xref>         </td><td> 7       </td></tr></tbody></table>"
  overload: Microsoft.VisualBasic.Interaction.MsgBox*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Prompt</code>nem egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> kifejezés, vagy <code>Title</code> érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Folyamat nem interaktív felhasználói módban fut."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Egy vagy több paraméter nem tagja a <xref uid=&quot;langword_csharp_MsgBoxResult&quot; name=&quot;MsgBoxResult&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_MsgBoxStyle&quot; name=&quot;MsgBoxStyle&quot; href=&quot;&quot;> </xref> enumerálása."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)
  id: Partition(System.Int64,System.Int64,System.Int64,System.Int64)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: Partition(Int64,Int64,Int64,Int64)
  nameWithType: Interaction.Partition(Int64,Int64,Int64,Int64)
  fullName: Microsoft.VisualBasic.Interaction.Partition(Int64,Int64,Int64,Int64)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "A kiszámított számot tartalmazó tartományt képviselő karakterláncot ad vissza."
  remarks: "A `Partition` függvény kiszámítja numerikus tartományok egy készletét tartalmazó által megadott értékek száma `Interval`. Az első tartomány kezdete `Start`, és az utolsó tartomány vége `Stop`. A `Partition` függvény majd azonosítja mely tartalmaz `Number` és, hogy a tartomány leíró karakterláncot ad vissza. A tartomány jelennek meg a karakterláncot, mint a &quot;*lowervalue*:*uppervalue*&quot;, ahol a tartomány végéig alacsony (*lowervalue*) el van különítve a záró (*uppervalue*) egy kettőspontot (:).       Ha szükséges, a `Partition` függvény beszúrása előtt szóközök *lowervalue* és *uppervalue* úgy, hogy mind az értékének karakterlánc-ábrázolása azonos számú karakter (`Stop` + 1). Ez biztosítja, hogy ha kimenetét a `Partition` függvény több értékkel rendelkező `Number`, így a szöveg kezelése megfelelően bármely ezt követő rendezési művelet során.       Az alábbi táblázatban néhány példa karakterláncok számítja ki három különböző tartományokhoz `Start`, `Stop`, és `Interval`. A &quot;Először tartomány&quot; és &quot;A tartomány utolsó&quot; oszlopok megjelenítése a legkisebb és legnagyobb tartományok lehetséges értékei a `Start` és `Stop`. A &quot;előtt első tartomány&quot; és &quot;után utolsó tartomány&quot; oszlopok megjelenítése a karakterláncokat, az értékek visszaadott `Number` kisebb, mint `Start` -nál nagyobb `Stop`, illetve.      ||||||||   |-|-|-|-|-|-|-|   | `Start`|`Stop`|`Interval`| Mielőtt első tartomány |} Először tartomány |} Az utolsó tartomány |} Után utolsó tartomány |}   |} 0 |} 99 |} 5 |} &quot;: -1&quot; |} &quot;  0: 4&quot;|}&quot; 95: 99 &quot;|}&quot; 100: &quot;|}   |} 20 |} 199 |} 10 |} &quot;: 19&quot; |} &quot; 20:29 &quot;|}&quot; 190:199 &quot;|}&quot; 200: &quot;|}   |} 100 |} 1010 |} 20 |} &quot;: 99&quot; |} &quot; 100: 119 &quot;|}&quot; 1000:1010 &quot;|}&quot; 1011: &quot;|}       Az előző táblázatban, a harmadik sorban a eredmény jeleníti meg. Ha `Start` és `Stop` határozza meg, amely nem egyenlően osztható fel számok egy csoportjának `Interval`. Az utolsó tartomány vége `Stop`, így csak 11 számok hosszú, akkor is, ha `Interval` 20.       Ha `Interval` 1, a tartomány a következő: &quot;`Number`:`Number`&quot;, függetlenül attól, a `Start` és `Stop` argumentumokat. Például ha `Number` van 267, `Stop` 1000, és `Interval` 1, `Partition` &quot;267: 267&quot; adja vissza.       `Partition`akkor lehet hasznos, ha hozhat létre, az adatbázis-lekérdezések. A SELECT lekérdezés, amely rendelések 1001 és 2000 különböző értéket tartományba, például a számla értéke 1 és 1000, fordulhat elő, és így tovább is létrehozhat."
  example:
  - "The following example sets up a series of ranges for decades from 1950 through 2049. It locates the value of `year` within the appropriate range and returns a `String` value showing the range. If `year` has a value of 1984, for example, `Partition` returns \"1980:1989\".  \n  \n [!code-vb[VbVbalrFunctions#45](~/add/codesnippet/visualbasic/2056d306-036e-4f9b-954c-_1.vb)]"
  syntax:
    content: public static string Partition (long Number, long Start, long Stop, long Interval);
    parameters:
    - id: Number
      type: System.Int64
      description: "Kötelező. <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Keresse meg a számított tartományok egyikébe kívánt egész számot."
    - id: Start
      type: System.Int64
      description: "Kötelező. <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Számított tartományait készlet kezdetét jelző egész számot. `Start`nem lehet kisebb, mint 0."
    - id: Stop
      type: System.Int64
      description: "Kötelező. <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. A készlet számított tartományait végén jelző egész számot. `Stop`nem lehet kisebb vagy egyenlő, mint `Start`."
    - id: Interval
      type: System.Int64
      description: "Kötelező. <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>. Egész szám, amely az egyes tartományok méretét számított közötti `Start` és `Stop`. `Interval`nem lehet kisebb, mint 1."
    return:
      type: System.String
      description: "A kiszámított számot tartalmazó tartományt képviselő karakterláncot ad vissza."
  overload: Microsoft.VisualBasic.Interaction.Partition*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Start</code>&lt; 0, <code>Stop</code> &lt;= <code>Start</code>, or <code>Interval</code> &lt; 1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)
  id: SaveSetting(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: SaveSetting(String,String,String,String)
  nameWithType: Interaction.SaveSetting(String,String,String,String)
  fullName: Microsoft.VisualBasic.Interaction.SaveSetting(String,String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Menti, vagy létrehoz egy alkalmazás bejegyzést a Windows beállításjegyzékében. A <xref uid=&quot;langword_csharp_My&quot; name=&quot;My&quot; href=&quot;&quot;> </xref> funkció lehetővé teszi nagyobb hatékonyságot és teljesítmény kapcsolatos műveletek, mint a <xref uid=&quot;langword_csharp_SaveSetting&quot; name=&quot;SaveSetting&quot; href=&quot;&quot;> </xref>. További információkért lásd: <xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>.</xref:Microsoft.VisualBasic.Devices.ServerComputer.Registry*>"
  remarks: "The `SaveSetting` function adds the key to `HKEY_CURRENT_USER\\Software\\VB and VBA Program Settings`.  \n  \n If the key setting cannot be saved for any reason, an error occurs.  \n  \n `SaveSetting` requires that a user be logged on since it operates under the `HKEY_LOCAL_USER` registry key, which is not active until a user logs on interactively.  \n  \n Registry settings that are to be accessed from a non-interactive process (such as Mtx.exe) should be stored under either the `HKEY_LOCAL_MACHINE\\Software\\` or the `HKEY_USER\\DEFAULT\\Software` registry keys.  \n  \n `SaveSetting` requires `Write` and `Create`<xref:System.Security.Permissions.RegistryPermission> ."
  example:
  - "The following example first uses the `SaveSetting` function to make entries in the Windows registry for the `MyApp` application, and then uses the `DeleteSetting` function to remove them.  \n  \n [!code-vb[VbVbalrCatRef#56](~/add/codesnippet/visualbasic/771356b4-108a-4f31-9d7a-_1.vb)]"
  syntax:
    content: public static void SaveSetting (string AppName, string Section, string Key, string Setting);
    parameters:
    - id: AppName
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>az alkalmazás vagy a projekt, amelyhez a beállítás csak a nevét tartalmazó kifejezés."
    - id: Section
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>ahol a fő beállítás mentése folyamatban van a szakasz nevét tartalmazó kifejezés."
    - id: Key
      type: System.String
      description: "Kötelező. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>a mentendő kulcsbeállítás nevét tartalmazó kifejezés."
    - id: Setting
      type: System.String
      description: "Kötelező. Az érték, amelyhez tartalmazó kifejezés `Key` beállítása."
  overload: Microsoft.VisualBasic.Interaction.SaveSetting*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem hozható létre kulcs beállításjegyzék, vagy a felhasználó nem jelentkezett be."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)
  id: Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: Shell(String,AppWinStyle,Boolean,Int32)
  nameWithType: Interaction.Shell(String,AppWinStyle,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Interaction.Shell(String,AppWinStyle,Boolean,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Végrehajtható program fut, és ha továbbra is fut, amely tartalmazza a program Folyamatazonosító egész számot adja vissza."
  remarks: "The return value of the `Shell` function depends on whether the program named in `PathName` is still executing when `Shell` returns. If you set `Wait` to `True` and the program finishes before the timeout expires, `Shell` returns zero. If the timeout expires, or if you omit `Wait` or set it to `False`, `Shell` returns the process ID of the program. The process ID is a unique number that identifies the running program.  \n  \n## Failure to Start  \n If the `Shell` function cannot start the named program, a <xref:System.IO.FileNotFoundException> error occurs. This can happen, for example, when you attempt to run a 16-bit program, such as `command.com`, from an application using <xref:System.Windows.Forms?displayProperty=fullName>. For a workaround, you can run a 32-bit program that calls the desired 16-bit program. In the case of `command.com`, you can run `cmd.exe` as an alternative.  \n  \n## Waiting for Completion  \n By default, the `Shell` function runs the program asynchronously. This means that a program started with the `Shell` function might not finish executing before the statements following the `Shell` function are executed. If you want to wait for the program to finish before you continue, set `Wait` to `True`.  \n  \n## Determining the Exit Code  \n A process can return an *exit code* when it terminates. However, you cannot use `Shell` to retrieve this exit code, because `Shell` returns zero if it waits for termination, and also because the process runs in a different object from `Shell`.  \n  \n To retrieve the exit code from a process, you must write your own code to initiate the process and wait for termination. The following example shows how to initiate a process, wait for it to terminate, and retrieve its exit code.  \n  \n```vb#  \nDim procID As Integer  \nDim newProc As Diagnostics.Process  \nnewProc = Diagnostics.Process.Start(\"C:\\WINDOWS\\NOTEPAD.EXE\")  \nprocID = newProc.Id  \nnewProc.WaitForExit()  \nDim procEC As Integer = -1  \nIf newProc.HasExited Then  \n    procEC = newProc.ExitCode  \nEnd If  \nMsgBox(\"Process with ID \" & CStr(ProcID) & _  \n    \" terminated with exit code \" & CStr(procEC))  \n```  \n  \n## Protecting the File Specification  \n You should always enclose the entire path and file specification in quotation marks, as the following example shows.  \n  \n```vb#  \nID = Shell(\"\"\"C:\\Program Files\\display.exe\"\" -a -q\", , True, 100000)  \n```  \n  \n Each pair of adjacent double quotation marks (`\" \"`) within the string literal is interpreted as one double quotation character in the string. Therefore, the preceding example presents the following string to the `Shell` function:  \n  \n```  \n\"C:\\Program Files\\display.exe\" -a -q  \n```  \n  \n If you did not have the path enclosed in quotation marks, Windows would look for a file called `Program.exe` in the C:\\ directory, instead of `display.exe` in the C:\\Program Files directory.  \n  \n> [!IMPORTANT]\n>  If you do not enclose the path and file specification in quotation marks, there is a security risk if the file name or a path node contains spaces. In the preceding example, the path node `\\Program Files` includes a space. If the specification were not inside quotation marks and a program named `Program.exe` had been installed in C:\\\\, for example by illicit tampering, Windows would execute it instead of `display.exe`.  \n  \n> [!IMPORTANT]\n>  The `Shell` function requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675)."
  example:
  - "The following example uses the `Shell` function to run an application specified by the user. Specifying <xref:Microsoft.VisualBasic.AppWinStyle?displayProperty=fullName> as the second argument opens the application in normal size and gives it the focus.  \n  \n [!code-vb[VbVbalrFunctions#47](~/add/codesnippet/visualbasic/a0f7fa2d-96c5-4a1d-b721-_1.vb)]"
  syntax:
    content: public static int Shell (string PathName, Microsoft.VisualBasic.AppWinStyle Style = Microsoft.VisualBasic.AppWinStyle.MinimizedFocus, bool Wait = false, int Timeout = -1);
    parameters:
    - id: PathName
      type: System.String
      description: "Required. <xref uid=\"langword_csharp_String\" name=\"String\" href=\"\"></xref>. Name of the program to execute, together with any required arguments and command-line switches. `PathName` can also include the drive and the directory path or folder.  \n  \n If you do not know the path to the program, you can use the <xref:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*> to locate it. For example, you can call `My.Computer.FileSystem.GetFiles(\"C:\\\", True, \"testFile.txt\")`, which returns the full path of every file named `testFile.txt` anywhere on drive C:\\\\."
    - id: Style
      type: Microsoft.VisualBasic.AppWinStyle
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_AppWinStyle&quot; name=&quot;AppWinStyle&quot; href=&quot;&quot;></xref>. A kiválasztott értéket a <xref href=&quot;Microsoft.VisualBasic.AppWinStyle&quot;> </xref> megadása a ablakban, a program futtatásához stílusát. Ha `Style` hiányzik, <xref uid=&quot;langword_csharp_Shell&quot; name=&quot;Shell&quot; href=&quot;&quot;> </xref> használ <xref uid=&quot;langword_csharp_AppWinStyle.MinimizedFocus&quot; name=&quot;AppWinStyle.MinimizedFocus&quot; href=&quot;&quot;> </xref>, amely elindítja a program kis méretben és az aktuális."
    - id: Wait
      type: System.Boolean
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Egy érték, amely jelzi, hogy a <xref uid=&quot;langword_csharp_Shell&quot; name=&quot;Shell&quot; href=&quot;&quot;> </xref> függvény megvárja-e a program befejezésére. If `Wait` is omitted, <xref uid=&quot;langword_csharp_Shell&quot; name=&quot;Shell&quot; href=&quot;&quot;></xref> uses <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>."
    - id: Timeout
      type: System.Int32
      description: "Nem kötelező. <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Ha várakozási ideje (MS) `Wait` van <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>. Ha `Timeout` hiányzik, <xref uid=&quot;langword_csharp_Shell&quot; name=&quot;Shell&quot; href=&quot;&quot;> </xref> használja a -1, ami azt jelenti, hogy nincs időtúllépés és <xref uid=&quot;langword_csharp_Shell&quot; name=&quot;Shell&quot; href=&quot;&quot;> </xref> metódusa nem ad vissza, a program befejezéséig. Ezért ha nincs megadva `Timeout` , vagy állítsa át a-1, akkor előfordulhat, hogy <xref uid=&quot;langword_csharp_Shell&quot; name=&quot;Shell&quot; href=&quot;&quot;> </xref> a program soha nem vissza vezérlő."
    return:
      type: System.Int32
      description: "Végrehajtható program fut, és ha továbbra is fut, amely tartalmazza a program Folyamatazonosító egész számot adja vissza."
  overload: Microsoft.VisualBasic.Interaction.Shell*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Style</code>tartományon kívül esik 0-9, a határokat is beleértve."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<xref uid=&quot;langword_csharp_Shell&quot; name=&quot;Shell&quot; href=&quot;&quot;></xref>nem található a <code> PathName </code> fájlt."
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "<code>PathName</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Interaction.Switch(System.Object[])
  id: Switch(System.Object[])
  parent: Microsoft.VisualBasic.Interaction
  langs:
  - csharp
  name: Switch(Object[])
  nameWithType: Interaction.Switch(Object[])
  fullName: Microsoft.VisualBasic.Interaction.Switch(Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Kiértékel egy listán szereplő kifejezéseket és értéket ad vissza egy <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> a listában, amely az első kifejezésnek megfelelő értéket <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  remarks: "Az argumentum számára megadott `VarExpr` párosított kifejezések és értékeket tartalmaz. A `Switch` függvény kiértékeli a páratlan számú kifejezések a legalacsonyabb a legmagasabb indexe `VarExpr`, és visszaadja az első kifejezés társított páros számú értéket `True`. Például ha `VarExpr(0)` van `True`, `Switch` adja vissza `VarExpr(1)`, és ha `VarExpr(0)` van `False` , de `VarExpr(2)` van `True`, `Switch` adja vissza `VarExpr(3)`, és így tovább.       Ha nem adja meg a `VarExpr` argumentum, `Switch` adja vissza `Nothing`.      > [!NOTE] > A kifejezések az argumentumlista függvényhívásokat is tartalmazzák. Az argumentumlista hívásának előkészítése során `Switch`, a Visual Basic fordítóprogram minden függvényt hívja minden kifejezésben. Ez azt jelenti, hogy nem használ, egy adott függvény nem alatt meghívni, ha korábban az argumentumlista kifejezés `True`."
  example:
  - "The following example uses the `Switch` function to return the name of a language that matches the name of a city. It requires that `Option Strict` be `Off`.  \n  \n [!code-vb[VbVbalrFunctions#48](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._108_1.vb)]  \n  \n Because the <xref:System.Diagnostics> namespace also contains a class called <xref:System.Diagnostics.Switch>, a call to the `Switch` function must be qualified with the <xref:Microsoft.VisualBasic> namespace."
  syntax:
    content: public static object Switch (object[] VarExpr);
    parameters:
    - id: VarExpr
      type: System.Object[]
      description: "Kötelező. <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>a paramétertömb. Egy páros számú elemet kell rendelkeznie. Megadhat olyan listája <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> változók vagy kifejezések elválasztott vesszővel válassza el egymástól, illetve egy egydimenziós tömbjének <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> elemek."
    return:
      type: System.Object
      description: "Kiértékel egy listán szereplő kifejezéseket és értéket ad vissza egy <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> a listában, amely az első kifejezésnek megfelelő értéket <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Interaction.Switch*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az argumentumok száma páratlan."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: AppActivate(Int32)
  nameWithType: Interaction.AppActivate(Int32)
  fullName: Microsoft.VisualBasic.Interaction.AppActivate(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Interaction.AppActivate(System.String)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: AppActivate(String)
  nameWithType: Interaction.AppActivate(String)
  fullName: Microsoft.VisualBasic.Interaction.AppActivate(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Interaction.Beep
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Beep()
  nameWithType: Interaction.Beep()
  fullName: Microsoft.VisualBasic.Interaction.Beep()
- uid: Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: CallByName(Object,String,CallType,Object[])
  nameWithType: Interaction.CallByName(Object,String,CallType,Object[])
  fullName: Microsoft.VisualBasic.Interaction.CallByName(Object,String,CallType,Object[])
- uid: Microsoft.VisualBasic.CallType
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CallType
  nameWithType: CallType
  fullName: Microsoft.VisualBasic.CallType
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Choose(Double,Object[])
  nameWithType: Interaction.Choose(Double,Object[])
  fullName: Microsoft.VisualBasic.Interaction.Choose(Double,Object[])
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Interaction.Command
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Command()
  nameWithType: Interaction.Command()
  fullName: Microsoft.VisualBasic.Interaction.Command()
- uid: Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: CreateObject(String,String)
  nameWithType: Interaction.CreateObject(String,String)
  fullName: Microsoft.VisualBasic.Interaction.CreateObject(String,String)
- uid: Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: DeleteSetting(String,String,String)
  nameWithType: Interaction.DeleteSetting(String,String,String)
  fullName: Microsoft.VisualBasic.Interaction.DeleteSetting(String,String,String)
- uid: Microsoft.VisualBasic.Interaction.Environ(System.Int32)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Environ(Int32)
  nameWithType: Interaction.Environ(Int32)
  fullName: Microsoft.VisualBasic.Interaction.Environ(Int32)
- uid: Microsoft.VisualBasic.Interaction.Environ(System.String)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Environ(String)
  nameWithType: Interaction.Environ(String)
  fullName: Microsoft.VisualBasic.Interaction.Environ(String)
- uid: Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: GetAllSettings(String,String)
  nameWithType: Interaction.GetAllSettings(String,String)
  fullName: Microsoft.VisualBasic.Interaction.GetAllSettings(String,String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[,]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[,]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: GetObject(String,String)
  nameWithType: Interaction.GetObject(String,String)
  fullName: Microsoft.VisualBasic.Interaction.GetObject(String,String)
- uid: Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: GetSetting(String,String,String,String)
  nameWithType: Interaction.GetSetting(String,String,String,String)
  fullName: Microsoft.VisualBasic.Interaction.GetSetting(String,String,String,String)
- uid: Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: IIf(Boolean,Object,Object)
  nameWithType: Interaction.IIf(Boolean,Object,Object)
  fullName: Microsoft.VisualBasic.Interaction.IIf(Boolean,Object,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: InputBox(String,String,String,Int32,Int32)
  nameWithType: Interaction.InputBox(String,String,String,Int32,Int32)
  fullName: Microsoft.VisualBasic.Interaction.InputBox(String,String,String,Int32,Int32)
- uid: Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: MsgBox(Object,MsgBoxStyle,Object)
  nameWithType: Interaction.MsgBox(Object,MsgBoxStyle,Object)
  fullName: Microsoft.VisualBasic.Interaction.MsgBox(Object,MsgBoxStyle,Object)
- uid: Microsoft.VisualBasic.MsgBoxResult
  parent: Microsoft.VisualBasic
  isExternal: false
  name: MsgBoxResult
  nameWithType: MsgBoxResult
  fullName: Microsoft.VisualBasic.MsgBoxResult
- uid: Microsoft.VisualBasic.MsgBoxStyle
  parent: Microsoft.VisualBasic
  isExternal: false
  name: MsgBoxStyle
  nameWithType: MsgBoxStyle
  fullName: Microsoft.VisualBasic.MsgBoxStyle
- uid: Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Partition(Int64,Int64,Int64,Int64)
  nameWithType: Interaction.Partition(Int64,Int64,Int64,Int64)
  fullName: Microsoft.VisualBasic.Interaction.Partition(Int64,Int64,Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: SaveSetting(String,String,String,String)
  nameWithType: Interaction.SaveSetting(String,String,String,String)
  fullName: Microsoft.VisualBasic.Interaction.SaveSetting(String,String,String,String)
- uid: Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Shell(String,AppWinStyle,Boolean,Int32)
  nameWithType: Interaction.Shell(String,AppWinStyle,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Interaction.Shell(String,AppWinStyle,Boolean,Int32)
- uid: Microsoft.VisualBasic.AppWinStyle
  parent: Microsoft.VisualBasic
  isExternal: false
  name: AppWinStyle
  nameWithType: AppWinStyle
  fullName: Microsoft.VisualBasic.AppWinStyle
- uid: Microsoft.VisualBasic.Interaction.Switch(System.Object[])
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Switch(Object[])
  nameWithType: Interaction.Switch(Object[])
  fullName: Microsoft.VisualBasic.Interaction.Switch(Object[])
- uid: Microsoft.VisualBasic.Interaction.AppActivate*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: AppActivate
  nameWithType: Interaction.AppActivate
- uid: Microsoft.VisualBasic.Interaction.Beep*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Beep
  nameWithType: Interaction.Beep
- uid: Microsoft.VisualBasic.Interaction.CallByName*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: CallByName
  nameWithType: Interaction.CallByName
- uid: Microsoft.VisualBasic.Interaction.Choose*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Choose
  nameWithType: Interaction.Choose
- uid: Microsoft.VisualBasic.Interaction.Command*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Command
  nameWithType: Interaction.Command
- uid: Microsoft.VisualBasic.Interaction.CreateObject*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: CreateObject
  nameWithType: Interaction.CreateObject
- uid: Microsoft.VisualBasic.Interaction.DeleteSetting*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: DeleteSetting
  nameWithType: Interaction.DeleteSetting
- uid: Microsoft.VisualBasic.Interaction.Environ*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Environ
  nameWithType: Interaction.Environ
- uid: Microsoft.VisualBasic.Interaction.GetAllSettings*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: GetAllSettings
  nameWithType: Interaction.GetAllSettings
- uid: Microsoft.VisualBasic.Interaction.GetObject*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: GetObject
  nameWithType: Interaction.GetObject
- uid: Microsoft.VisualBasic.Interaction.GetSetting*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: GetSetting
  nameWithType: Interaction.GetSetting
- uid: Microsoft.VisualBasic.Interaction.IIf*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: IIf
  nameWithType: Interaction.IIf
- uid: Microsoft.VisualBasic.Interaction.InputBox*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: InputBox
  nameWithType: Interaction.InputBox
- uid: Microsoft.VisualBasic.Interaction.MsgBox*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: MsgBox
  nameWithType: Interaction.MsgBox
- uid: Microsoft.VisualBasic.Interaction.Partition*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Partition
  nameWithType: Interaction.Partition
- uid: Microsoft.VisualBasic.Interaction.SaveSetting*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: SaveSetting
  nameWithType: Interaction.SaveSetting
- uid: Microsoft.VisualBasic.Interaction.Shell*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Shell
  nameWithType: Interaction.Shell
- uid: Microsoft.VisualBasic.Interaction.Switch*
  parent: Microsoft.VisualBasic.Interaction
  isExternal: false
  name: Switch
  nameWithType: Interaction.Switch
