### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerResponse
  id: HttpListenerResponse
  children:
  - System.Net.HttpListenerResponse.Abort
  - System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  - System.Net.HttpListenerResponse.Close
  - System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  - System.Net.HttpListenerResponse.ContentEncoding
  - System.Net.HttpListenerResponse.ContentLength64
  - System.Net.HttpListenerResponse.ContentType
  - System.Net.HttpListenerResponse.Cookies
  - System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  - System.Net.HttpListenerResponse.Headers
  - System.Net.HttpListenerResponse.KeepAlive
  - System.Net.HttpListenerResponse.OutputStream
  - System.Net.HttpListenerResponse.ProtocolVersion
  - System.Net.HttpListenerResponse.Redirect(System.String)
  - System.Net.HttpListenerResponse.RedirectLocation
  - System.Net.HttpListenerResponse.SendChunked
  - System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  - System.Net.HttpListenerResponse.StatusCode
  - System.Net.HttpListenerResponse.StatusDescription
  - System.Net.HttpListenerResponse.System#IDisposable#Dispose
  langs:
  - csharp
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
  type: Class
  summary: "Kezeli a kérelmekre történő jelöli egy <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektum."
  remarks: "Amikor egy ügyfél egy kérést erőforrás által kezelt egy <xref:System.Net.HttpListener>objektum, a kérelem-válasz elérhetővé válnak az alkalmazást egy <xref:System.Net.HttpListenerContext>objektum.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> A kérelem által képviselt egy <xref:System.Net.HttpListenerRequest>objektumra, és érhető el a <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>tulajdonság.</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName> </xref:System.Net.HttpListenerRequest> A válasz egy HttpListenerResponse objektum által képviselt és érhető el a <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>tulajdonság.</xref:System.Net.HttpListenerContext.Response%2A?displayProperty=fullName>       A válasz tulajdonságainak, például a megadásával testre szabható <xref:System.Net.HttpListenerResponse.StatusCode%2A>, <xref:System.Net.HttpListenerResponse.StatusDescription%2A>, és <xref:System.Net.HttpListenerResponse.Cookies%2A>.</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpListenerResponse.StatusCode%2A> Használja a <xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName>tulajdonságnak egy <xref:System.IO.Stream>példány mely válaszhoz adatokat is beírhatók.</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.OutputStream%2A?displayProperty=fullName> Végezetül, a válasz adatokat küldeni az ügyfél meghívásával a <xref:System.Net.HttpListenerResponse.Close%2A>metódus.</xref:System.Net.HttpListenerResponse.Close%2A>"
  example:
  - "The following code example demonstrates responding to a client request.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_2_1.cs)]"
  syntax:
    content: 'public sealed class HttpListenerResponse : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Abort
  id: Abort
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Megszünteti a kapcsolatot, az ügyfélnek a válasz elküldése nélkül."
  remarks: "A metódus hívása olyan objektum, amely már be lett zárva nincs hatása. Ha a válasz már nincsenek bezárva, ez a módszer bezárja, és a társított <xref:System.Net.HttpListenerRequest>és <xref:System.Net.HttpListenerContext>objektumok.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListenerRequest> Az ügyfél a kapcsolat is a lezárt, függetlenül attól, a <xref:System.Net.HttpListenerRequest.KeepAlive%2A>tulajdonságérték: az ügyfélkérés.</xref:System.Net.HttpListenerRequest.KeepAlive%2A>"
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "A megadott fejléc és értéket ad hozzá a HTTP-fejléceket, a válaszhoz."
  remarks: "A metódus hívása megegyezik hívása a <xref:System.Net.WebHeaderCollection.Set%2A>metódus által visszaadott a gyűjteményen a <xref:System.Net.HttpListenerResponse.Headers%2A>tulajdonság.</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Set%2A>       Ha a fejlécben megadott `name` nem létezik, ez a módszer szúr be egy új fejlécbe a <xref:System.Net.HttpListenerResponse.Headers%2A>tulajdonság gyűjtemény.</xref:System.Net.HttpListenerResponse.Headers%2A> Ha `name` megtalálható a gyűjteményben, a módszer cseréli a meglévő értéket az `value`. Nem törli a meglévő értéket egy meglévő fejlécre értéket adhat hozzá, a <xref:System.Net.HttpListenerResponse.AppendHeader%2A>metódus.</xref:System.Net.HttpListenerResponse.AppendHeader%2A>"
  example:
  - "The following code example demonstrates adding a header using this property.  \n  \n [!code-cs[Net_Listener_Basic#26](~/add/codesnippet/csharp/m-system.net.httplistene_2_1.cs)]"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "A HTTP-fejlécet beállítani neve."
    - id: value
      type: System.String
      description: "Az érték a `name` fejléc."
  overload: System.Net.HttpListenerResponse.AddHeader*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott fejléc értékének nem engedélyezettek.       – vagy – <code> name </code> vagy <code> value </code> érvénytelen karaktereket tartalmaz."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A hossza <code> value </code> több mint 65 535 karakter."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  id: AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Hozzáadja a megadott <xref:System.Net.Cookie>ezt a választ a cookie-k a gyűjteményhez.</xref:System.Net.Cookie>"
  remarks: "A metódus hívása megegyezik hívása a <xref:System.Net.CookieCollection.Add%2A>metódus által visszaadott a gyűjteményen a <xref:System.Net.HttpListenerResponse.Cookies%2A>tulajdonság.</xref:System.Net.HttpListenerResponse.Cookies%2A> </xref:System.Net.CookieCollection.Add%2A>       Ha a megadott cookie-k nem szerepel a <xref:System.Net.HttpListenerResponse.Cookies%2A>tulajdonság gyűjtemény `cookie` kerül.</xref:System.Net.HttpListenerResponse.Cookies%2A> Ha a cookie-k létezik a gyűjteményben, `cookie` szöveggel cseréli le azt."
  example:
  - "The following code example demonstrates adding a cookie to a response  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/m-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public void AppendCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "A <xref:System.Net.Cookie>hozzáadására a gyűjteményhez, a válasz küldésének.</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.AppendCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "A megadott HTTP-fejlécnek a válasz küldésének fűzi hozzá érték."
  remarks: "A metódus hívása megegyezik hívása a <xref:System.Net.WebHeaderCollection.Add%2A>metódus által visszaadott a gyűjteményen a <xref:System.Net.HttpListenerResponse.Headers%2A>tulajdonság.</xref:System.Net.HttpListenerResponse.Headers%2A> </xref:System.Net.WebHeaderCollection.Add%2A>       Ha a fejlécben megadott `header` nem létezik, ez a módszer szúr be egy új fejlécbe a <xref:System.Net.HttpListenerResponse.Headers%2A>tulajdonság gyűjtemény.</xref:System.Net.HttpListenerResponse.Headers%2A> Ha `header` megtalálható-e a gyűjteményhez, ez a metódus ad `value` a meglévő értékre. Cserélje le a egy meglévő fejlécre, használja a <xref:System.Net.HttpListenerResponse.AddHeader%2A>metódus.</xref:System.Net.HttpListenerResponse.AddHeader%2A>"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "A HTTP-fejléc hozzáfűzendő neve `value` számára."
    - id: value
      type: System.String
      description: "Az érték lehet hozzáfűzni a `name` fejléc."
  overload: System.Net.HttpListenerResponse.AppendHeader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy üres karakterlánc (&quot;&quot;).       – vagy – a megadott fejléc értékének nem engedélyezettek.       – vagy – <code>name</code> vagy <code>value</code> érvénytelen karaktereket tartalmaz."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A hossza <code> value </code> több mint 65 535 karakter."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close
  id: Close
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Az ügyfél választ küld, és kiadja az erőforrásokat ennek birtokában <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> példány."
  remarks: "Ez a módszer a válaszfolyamnak bezárása és a <xref:System.Net.HttpListenerRequest>a válasz társított.</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method to send a <xref:System.Net.HttpStatusCode> (403) response to the client.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_0_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_0_1.cs)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Net.HttpListenerResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  id: Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "A megadott bájttömb visszaadja az ügyfélnek, és kiadja az erőforrásokat ennek birtokában <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> példány."
  remarks: "A válasz törzsében adatokat küld, ha ez a módszer elküldhető, használhatja a <xref:System.Byte>tömb a szervezet adatokat ahelyett a <xref:System.Net.HttpListenerResponse.OutputStream%2A>tulajdonság és hívása a <xref:System.Net.HttpListenerResponse.Close%2A>metódus.</xref:System.Net.HttpListenerResponse.Close%2A> </xref:System.Net.HttpListenerResponse.OutputStream%2A> </xref:System.Byte>       Ez a módszer a válaszfolyamnak bezárása és a <xref:System.Net.HttpListenerRequest>a válasz társított.</xref:System.Net.HttpListenerRequest>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#24](~/add/codesnippet/csharp/m-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public void Close (byte[] responseEntity, bool willBlock);
    parameters:
    - id: responseEntity
      type: System.Byte[]
      description: "A <xref:System.Byte>tömb, amely tartalmazza a választ küld az ügyfélnek.</xref:System.Byte>"
    - id: willBlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>letilthatja a végrehajtás során az adatfolyam kiürítése az ügyfélnek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.Close*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>responseEntity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja <xref:System.Text.Encoding>a válaszhoz <xref:System.Net.HttpListenerResponse.OutputStream*>.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  remarks: "Egy <xref:System.Text.Encoding>objektum bájt sorozatok alakítani karakterkészlet (kódlapok) és bájt sorozatok karakter használható.</xref:System.Text.Encoding>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_45_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_45_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Egy <xref:System.Text.Encoding>objektum alkalmas az adatokat a <xref:System.Net.HttpListenerResponse.OutputStream*>tulajdonság, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha kódolása nincs meghatározva.</xref:System.Net.HttpListenerResponse.OutputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerResponse.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a bájtok száma a szervezet adatokban belefoglalva a válaszba."
  remarks: "A `Content-Length` fejléc fejezi ki, bájtban megadva, a válasz törzsében adatok hossza. Amikor formátuma használatával adatokat küldeni a a darabolt vagy nyers, meg kell adni a ContentLength64 tulajdonság. Ha nem, a <xref:System.Net.HttpListener>nem küld a érkezett válasz adatait.</xref:System.Net.HttpListener>       Válaszfejlécek teljes listáját lásd: a <xref:System.Net.HttpResponseHeader>számbavételi.</xref:System.Net.HttpResponseHeader>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/p-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; set; }
    return:
      type: System.Int64
      description: "A válasz értékének <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;> </xref> fejléc."
  overload: System.Net.HttpListenerResponse.ContentLength64*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A beállítási művelet számára megadott érték kisebb, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A válasz már elküldte."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ContentType
  id: ContentType
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a MIME-típust adott vissza a tartalom."
  remarks: "Egy webböngészővel rendelkező ügyfélböngészőkkel kell explicit módon a tulajdonság értéke eltérő bármely tartalomtípus visszaadásakor `text/html`.       Válaszfejlécek teljes listáját lásd: a <xref:System.Net.HttpResponseHeader>számbavételi.</xref:System.Net.HttpResponseHeader>"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>példány, a válasz szövegét tartalmazó <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;> </xref> fejléc.</xref:System.String>"
  overload: System.Net.HttpListenerResponse.ContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Beállítási művelet megadott <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Beállítási művelet érték egy üres karakterlánc megadott érték (&quot;&quot;)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Cookies
  id: Cookies
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a válaszban visszaadott cookie-k gyűjteménye."
  remarks: 'A cookie-k az név-érték szöveg adatai a helyi (ügyfél) számítógépen tárolt webkiszolgálóról. A következő cookie-k formátum támogatott: Netscape RFC 2109 és RFC 2965. A Netscape cookie-meghatározás http://wp.netscape.com/newsref/std/cookie_spec.html; címen érhető el az RFC-dokumentumokat érhetők el [http://www.rfc-editor.org](http://www.rfc-editor.org).'
  example:
  - "The following code example checks a request for a cookie, and returns a new cookie with the response if the request did not have one.  \n  \n [!code-cs[Net_Listener_Basic#20](~/add/codesnippet/csharp/p-system.net.httplistene_23_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; set; }
    return:
      type: System.Net.CookieCollection
      description: "A <xref:System.Net.CookieCollection>, amely tartalmazza a cookie-k együtt kell szerepeltetni azokat a válaszban.</xref:System.Net.CookieCollection> A gyűjtemény üres, ha nem használ cookie-kerültek be a válasz."
  overload: System.Net.HttpListenerResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  id: CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Másolja át a megadott tulajdonságok <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> a válaszhoz."
  remarks: "Ha rendszeresen módosítjuk számos tulajdonság az alapértelmezett értékükön az új értékekkel készletét, célszerű a használatára egy <xref:System.Net.HttpListenerResponse>példány sablonként.</xref:System.Net.HttpListenerResponse> A sablon válasz egyszer és testreszabásához, minden egyes válasz külön konfigurálására, egy új választ, a sablon válasz tulajdonság értékei alapján konfigurálhatja a CopyFrom metódus meghívására.       Másolja át a következő tulajdonságok `templateResponse` a jelenlegi példányhoz.      -   <xref:System.Net.HttpListenerResponse.Headers%2A>      -   <xref:System.Net.HttpListenerResponse.ContentLength64%2A>      -   <xref:System.Net.HttpListenerResponse.StatusCode%2A>      -   <xref:System.Net.HttpListenerResponse.StatusDescription%2A>      -   <xref:System.Net.HttpListenerResponse.KeepAlive%2A>      -   <xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.ProtocolVersion%2A></xref:System.Net.HttpListenerResponse.KeepAlive%2A></xref:System.Net.HttpListenerResponse.StatusDescription%2A></xref:System.Net.HttpListenerResponse.StatusCode%2A></xref:System.Net.HttpListenerResponse.ContentLength64%2A></xref:System.Net.HttpListenerResponse.Headers%2A>"
  example:
  - "The following code example demonstrates creating a response by copying a template response.  \n  \n [!code-vb[NCLListener#5](~/add/codesnippet/visualbasic/m-system.net.httplistene_9_1.vb)]\n [!code-cs[NCLListener#5](~/add/codesnippet/csharp/m-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public void CopyFrom (System.Net.HttpListenerResponse templateResponse);
    parameters:
    - id: templateResponse
      type: System.Net.HttpListenerResponse
      description: "A <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> példány másolásához."
  overload: System.Net.HttpListenerResponse.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Headers
  id: Headers
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a kiszolgáló által visszaadott fejléc név/érték párok gyűjteménye."
  remarks: "Válaszfejlécek metaadat-információkat, például a dátum és idő a válasz, a válaszoló kiszolgáló és a MIME-típusát a választörzs szereplő adatokat tartalmaz.       Válaszfejlécek teljes listáját lásd: a <xref:System.Net.HttpResponseHeader>számbavételi.</xref:System.Net.HttpResponseHeader>      > [!NOTE] > Ha megpróbál beállítani egy Content-Length, életben tartási, Transfer-Encoding, vagy a WWW-Authenticate fejlécet a fejlécek tulajdonsággal, kivételt fog jelezni. Használja a <xref:System.Net.HttpListenerResponse.KeepAlive%2A>vagy <xref:System.Net.HttpListenerResponse.ContentLength64%2A>tulajdonságai lapon állítson be ezeket a fejléceket.</xref:System.Net.HttpListenerResponse.ContentLength64%2A> </xref:System.Net.HttpListenerResponse.KeepAlive%2A> A Transfer-Encoding vagy WWW-Authenticate fejléc nem állítható be kézzel."
  example:
  - "The following code example demonstrates displaying the headers in a <xref:System.Net.WebHeaderCollection>.  \n  \n [!code-cs[Net_Listener_Basic#23](~/add/codesnippet/csharp/p-system.net.httplistene_32_1.cs)]"
  syntax:
    content: public System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "A <xref:System.Net.WebHeaderCollection>, amely tartalmazza az összes példányát a beállítással, a válaszban szereplő HTTP-fejlécek.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerResponse.Headers*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref:System.Net.WebHeaderCollection>beállítási művelet érvénytelen választ megadott példánya.</xref:System.Net.WebHeaderCollection>"
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a kiszolgáló állandó kapcsolatot kér-e."
  remarks: "Ha az exchange-adatok rövid időn belül többször várható egy HTTP-ügyfél és kiszolgáló állandó kapcsolatot felgyorsítja a kommunikáció lehetővé teheti a járó többletterhelés megnyitására és bezárására mindegyik TCP-kapcsolat elkerülése érdekében. Állandó kapcsolat a modern böngészők és a webkiszolgálók közötti kommunikáció széles körű használatban van.       A HTTP 1.1 protokoll specifikációja (RFC 2616) a RTF Editor webhelyén elérhető részletesen ismerteti a állandó kapcsolat ([http://www.rfc-editor.org](http://www.rfc-editor.org))."
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_36_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_36_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kiszolgáló kéri állandó kapcsolatot; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.KeepAlive*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.OutputStream
  id: OutputStream
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref:System.IO.Stream>objektum választ írhatók.</xref:System.IO.Stream>"
  remarks: "A <xref:System.Net.HttpListenerResponse.ContentLength64%2A>tulajdonság explicit módon kell állítani a visszaadott írása előtt <xref:System.IO.Stream>objektum.</xref:System.IO.Stream> </xref:System.Net.HttpListenerResponse.ContentLength64%2A>      > [!NOTE] > Bezárása a kérelem nem zárja be az e tulajdonság által visszaadott adatfolyam. Ha már nincs szüksége a stream, zárja be a Close metódus meghívásával."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_44_1.cs)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream>objektum választ írhatók.</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerResponse.OutputStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a válasz használt HTTP-verzióját."
  remarks: "A különböző HTTP-verzió képességeit meg van adva a dokumentumok http://www.ietf.org érhető el."
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#5](~/add/codesnippet/visualbasic/p-system.net.httplistene_30_1.vb)]\n [!code-cs[NclListener#5](~/add/codesnippet/csharp/p-system.net.httplistene_30_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; set; }
    return:
      type: System.Version
      description: "A <xref:System.Version>használható, ha az ügyfél válaszol a HTTP verzióját jelző objektumra.</xref:System.Version> Vegye figyelembe, hogy ez a tulajdonság már elavult."
  overload: System.Net.HttpListenerResponse.ProtocolVersion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Beállítási művelet megadott <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A beállítási művelet nincs megadva érték a <> </> *> tulajdonság 1 értékre van állítva vagy nem rendelkezik a <> </> *> tulajdonság 0 vagy 1 értékre van állítva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Konfigurálja a válasz átirányítja az ügyfelet a megadott URL-címhez."
  remarks: "Az átirányítási módszert átirányítja egy ügyfelet az új helyre erőforrás. Ezt a módszert állítja be a válasz `Location` fejlécének `url`, a <xref:System.Net.HttpListenerResponse.StatusCode%2A>tulajdonságot <xref:System.Net.HttpStatusCode>, és a <xref:System.Net.HttpListenerResponse.StatusDescription%2A>&quot;Található&quot; tulajdonságot.</xref:System.Net.HttpListenerResponse.StatusDescription%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#27](~/add/codesnippet/csharp/m-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "Az URL-címet, az ügyfélnek használnia kell a kért erőforrás található."
  overload: System.Net.HttpListenerResponse.Redirect*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja a http <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> fejléc a következő a válasz."
  remarks: "A `Location` fejléc határozza meg, amelyhez az ügyfél irányul, keresse meg a kért erőforrás URL-CÍMÉT.      > [!NOTE] > Beállítást ehhez a tulajdonsághoz nem automatikusan meg a <xref:System.Net.HttpListenerResponse.StatusCode%2A>tulajdonság.</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting this property.  \n  \n [!code-cs[Net_Listener_Basic#25](~/add/codesnippet/csharp/p-system.net.httplistene_25_1.cs)]"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>, amely tartalmazza az ügyfél számára küldendő abszolút URL-cím a <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> fejléc.</xref:System.String>"
  overload: System.Net.HttpListenerResponse.RedirectLocation*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Beállítási művelet érték egy üres karakterlánc megadott érték (&quot;&quot;)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SendChunked
  id: SendChunked
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja, hogy a válasz darabolásos átviteli kódolás használja."
  remarks: "A darabolt üzenet törzsét adattömbök sorozatát épül fel. Egyes adattömbök két részből áll: az adatrészlet, és a tényleges adatok méretét. Ha értéke igaz, a válasz van küld a darabolásos átviteli kódolás."
  syntax:
    content: public bool SendChunked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a válasz darabolásos átviteli kódolás; használatára van beállítva Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerResponse.SendChunked*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  id: SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Ad hozzá vagy egy <xref:System.Net.Cookie>cookie-k ezt a választ küldi el a gyűjteményben.</xref:System.Net.Cookie>"
  remarks: "Két cookie-k között útmutatóul szolgálnak a azonos, ha az értékek a <xref:System.Net.Cookie.Name%2A>, <xref:System.Net.Cookie.Domain%2A>, és <xref:System.Net.Cookie.Path%2A>Tulajdonságok megegyeznek.</xref:System.Net.Cookie.Path%2A> </xref:System.Net.Cookie.Domain%2A> </xref:System.Net.Cookie.Name%2A> Ha ezek három adatra egyeznek, a módszer a cookie-k frissíteni próbálja. A névre és tartományra összehasonlítások nem kis-és nagybetűket, de az elérési út összehasonlítás kis-és nagybetűket."
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[Net_Listener_Basic#28](~/add/codesnippet/csharp/m-system.net.httplistene_15_1.cs)]"
  syntax:
    content: public void SetCookie (System.Net.Cookie cookie);
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "A <xref:System.Net.Cookie>a válaszhoz.</xref:System.Net.Cookie>"
  overload: System.Net.HttpListenerResponse.SetCookie*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cookie</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A cookie-k már létezik a gyűjteményben, és nem helyettesíthető."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusCode
  id: StatusCode
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja az ügyfél számára a HTTP-állapotkódot."
  remarks: "Ügyfelek használják a kiszolgáló által visszaadott állapotkód a döntésben. Érték <xref:System.Net.HttpStatusCode>azt jelzi, hogy a kiszolgáló sikeresen feldolgozta az ügyfél kérelmet a kért erőforrás szerepel az adott válasz törzsének.</xref:System.Net.HttpStatusCode> Más közös állapotkódok tartalmaznak <xref:System.Net.HttpStatusCode>, azt jelzi, hogy a kért erőforrás nem található a kiszolgálón, és <xref:System.Net.HttpStatusCode>, azt is szükséges az adott válasz törzsének térjen vissza a kért erőforrás, mert az ügyfél által gyorsítótárazott másolatának az erőforrás kerüljön.</xref:System.Net.HttpStatusCode> </xref:System.Net.HttpStatusCode>       Lehetséges állapotkódok teljes listáját lásd: a <xref:System.Net.HttpStatusCode>számbavételi.</xref:System.Net.HttpStatusCode>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/p-system.net.httplistene_46_1.cs)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>érték, amely meghatározza a HTTP-állapotkód: a kért erőforrás.</xref:System.Int32> Az alapértelmezett érték <xref:System.Net.HttpStatusCode>, amely azt jelzi, hogy a kiszolgáló sikeresen feldolgozta az ügyfél kérelmet és a kért erőforrás szerepel az adott válasz törzsének.</xref:System.Net.HttpStatusCode>"
  overload: System.Net.HttpListenerResponse.StatusCode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum le van zárva."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "Beállítási művelet a megadott értéke érvénytelen. Érvényes értékek a következők közötti 100 és 999 között lehet."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.StatusDescription
  id: StatusDescription
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi vagy beállítja az ügyfél számára a HTTP-állapotkód szöveges leírása."
  remarks: "Az állapot leírása általában részletesen ismerteti a <xref:System.Net.HttpListenerResponse.StatusCode%2A>érték.</xref:System.Net.HttpListenerResponse.StatusCode%2A>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-vb[NclListener#7](~/add/codesnippet/visualbasic/p-system.net.httplistene_13_1.vb)]\n [!code-cs[NclListener#7](~/add/codesnippet/csharp/p-system.net.httplistene_13_1.cs)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "Az ügyfél számára a HTTP-állapotkód szöveges leírása. Az alapértelmezett érték a következő RFC 2616 leírása a <xref:System.Net.HttpListenerResponse.StatusCode*>tulajdonság értékét, vagy üres karakterlánc (&quot;&quot;) nem található az RFC 2616 leírást.</xref:System.Net.HttpListenerResponse.StatusCode*>"
  overload: System.Net.HttpListenerResponse.StatusDescription*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Beállítási művelet megadott <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Beállítási művelet a megadott nem nyomtatható karaktereket tartalmaz."
  platform:
  - net462
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Net.HttpListenerResponse
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Feloldja a által használt erőforrások a <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref>."
  remarks: "A <xref:System.Net.HttpListenerResponse.Close%2A>Küldés és erőforrások <xref:System.Net.HttpListenerResponse>.</xref:System.Net.HttpListenerResponse> birtokában kiadási módszert</xref:System.Net.HttpListenerResponse.Close%2A> A válasz elvetéséhez, és ez a példány fenntartott erőforrások kiadási, használja a <xref:System.Net.HttpListenerResponse.Abort%2A>metódus.</xref:System.Net.HttpListenerResponse.Abort%2A>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.Net.HttpListenerResponse.Abort
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort()
  nameWithType: HttpListenerResponse.Abort()
  fullName: System.Net.HttpListenerResponse.Abort()
- uid: System.Net.HttpListenerResponse.AddHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpListenerResponse.AddHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AddHeader(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie(Cookie)
  nameWithType: HttpListenerResponse.AppendCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.AppendCookie(Cookie)
- uid: System.Net.Cookie
  parent: System.Net
  isExternal: true
  name: Cookie
  nameWithType: Cookie
  fullName: System.Net.Cookie
- uid: System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpListenerResponse.AppendHeader(String,String)
  fullName: System.Net.HttpListenerResponse.AppendHeader(String,String)
- uid: System.Net.HttpListenerResponse.Close
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close()
  nameWithType: HttpListenerResponse.Close()
  fullName: System.Net.HttpListenerResponse.Close()
- uid: System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close(Byte[],Boolean)
  nameWithType: HttpListenerResponse.Close(Byte[],Boolean)
  fullName: System.Net.HttpListenerResponse.Close(Byte[],Boolean)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerResponse.ContentEncoding
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
  fullName: System.Net.HttpListenerResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerResponse.ContentLength64
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
  fullName: System.Net.HttpListenerResponse.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerResponse.ContentType
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
  fullName: System.Net.HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
  fullName: System.Net.HttpListenerResponse.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom(HttpListenerResponse)
  nameWithType: HttpListenerResponse.CopyFrom(HttpListenerResponse)
  fullName: System.Net.HttpListenerResponse.CopyFrom(HttpListenerResponse)
- uid: System.Net.HttpListenerResponse
  parent: System.Net
  isExternal: false
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
- uid: System.Net.HttpListenerResponse.Headers
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
  fullName: System.Net.HttpListenerResponse.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.HttpListenerResponse.KeepAlive
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
  fullName: System.Net.HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
  fullName: System.Net.HttpListenerResponse.OutputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerResponse.ProtocolVersion
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
  fullName: System.Net.HttpListenerResponse.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerResponse.Redirect(System.String)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpListenerResponse.Redirect(String)
  fullName: System.Net.HttpListenerResponse.Redirect(String)
- uid: System.Net.HttpListenerResponse.RedirectLocation
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
  fullName: System.Net.HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
  fullName: System.Net.HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie(Cookie)
  nameWithType: HttpListenerResponse.SetCookie(Cookie)
  fullName: System.Net.HttpListenerResponse.SetCookie(Cookie)
- uid: System.Net.HttpListenerResponse.StatusCode
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
  fullName: System.Net.HttpListenerResponse.StatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerResponse.StatusDescription
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
  fullName: System.Net.HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose()
  fullName: System.Net.HttpListenerResponse.System.IDisposable.Dispose()
- uid: System.Net.HttpListenerResponse.Abort*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Abort
  nameWithType: HttpListenerResponse.Abort
- uid: System.Net.HttpListenerResponse.AddHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpListenerResponse.AddHeader
- uid: System.Net.HttpListenerResponse.AppendCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpListenerResponse.AppendCookie
- uid: System.Net.HttpListenerResponse.AppendHeader*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpListenerResponse.AppendHeader
- uid: System.Net.HttpListenerResponse.Close*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Close
  nameWithType: HttpListenerResponse.Close
- uid: System.Net.HttpListenerResponse.ContentEncoding*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerResponse.ContentEncoding
- uid: System.Net.HttpListenerResponse.ContentLength64*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerResponse.ContentLength64
- uid: System.Net.HttpListenerResponse.ContentType*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerResponse.ContentType
- uid: System.Net.HttpListenerResponse.Cookies*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerResponse.Cookies
- uid: System.Net.HttpListenerResponse.CopyFrom*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: CopyFrom
  nameWithType: HttpListenerResponse.CopyFrom
- uid: System.Net.HttpListenerResponse.Headers*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Headers
  nameWithType: HttpListenerResponse.Headers
- uid: System.Net.HttpListenerResponse.KeepAlive*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerResponse.KeepAlive
- uid: System.Net.HttpListenerResponse.OutputStream*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpListenerResponse.OutputStream
- uid: System.Net.HttpListenerResponse.ProtocolVersion*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerResponse.ProtocolVersion
- uid: System.Net.HttpListenerResponse.Redirect*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpListenerResponse.Redirect
- uid: System.Net.HttpListenerResponse.RedirectLocation*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpListenerResponse.RedirectLocation
- uid: System.Net.HttpListenerResponse.SendChunked*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SendChunked
  nameWithType: HttpListenerResponse.SendChunked
- uid: System.Net.HttpListenerResponse.SetCookie*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpListenerResponse.SetCookie
- uid: System.Net.HttpListenerResponse.StatusCode*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpListenerResponse.StatusCode
- uid: System.Net.HttpListenerResponse.StatusDescription*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpListenerResponse.StatusDescription
- uid: System.Net.HttpListenerResponse.System#IDisposable#Dispose*
  parent: System.Net.HttpListenerResponse
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: HttpListenerResponse.System.IDisposable.Dispose
