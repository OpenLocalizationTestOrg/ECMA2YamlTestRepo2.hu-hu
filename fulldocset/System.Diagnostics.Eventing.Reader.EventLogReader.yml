### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogReader
  id: EventLogReader
  children:
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  - System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  - System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  - System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  - System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  - System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  - System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  langs:
  - csharp
  name: EventLogReader
  nameWithType: EventLogReader
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader
  type: Class
  summary: "Lehetővé teszi a rendszer kiolvassa az eseményeket az Eseménynapló egy esemény-lekérdezés alapján. Az események az objektum által olvasható mezeje <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;> </xref> objektumok."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/en-us/14db3375-d305-49ae-aa24-aedbe906e76c).'
  syntax:
    content: 'public class EventLogReader : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(EventLogQuery)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> osztály egy eseményt lekérdezés megadásával."
  remarks: "Használja a <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>metódus események lekérése ehhez az objektumhoz.</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);
    parameters:
    - id: eventQuery
      type: System.Diagnostics.Eventing.Reader.EventLogQuery
      description: "Az esemény lekérdezés kiolvassa az eseményeket."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(String)
  nameWithType: EventLogReader.EventLogReader(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> osztály egy aktív Eseménynapló eseményeinek beolvasása megadásával."
  remarks: "Használja a <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>metódus események lekérése ehhez az objektumhoz.</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (string path);
    parameters:
    - id: path
      type: System.String
      description: "Az Eseménynapló eseményeinek beolvasása neve."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(EventLogQuery,EventBookmark)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> osztály az esemény lekérdezések és a kiindulási helyzet a lekérdezéshez használt könyvjelző megadásával."
  remarks: "Használja a <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>metódus események lekérése ehhez az objektumhoz.</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);
    parameters:
    - id: eventQuery
      type: System.Diagnostics.Eventing.Reader.EventLogQuery
      description: "Az esemény lekérdezés kiolvassa az eseményeket."
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "A könyvjelző (helyőrző), a kezdő helyzete, az Eseménynapló vagy az események streamjét. Csak naplózott eseményeket a lekérdezés által visszaadott a könyvjelző esemény után."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: EventLogReader(String,PathType)
  nameWithType: EventLogReader.EventLogReader(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogReader&quot;> </xref> osztály egy eseménynapló eseményeinek beolvasása és a naplófájl elérési útja egy eseményeinek beolvasása nevének megadásával."
  remarks: "Használja a <xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>metódus események lekérése ehhez az objektumhoz.</xref:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent%2A>"
  syntax:
    content: public EventLogReader (string path, System.Diagnostics.Eventing.Reader.PathType pathType);
    parameters:
    - id: path
      type: System.String
      description: "Az Eseménynapló eseményeinek beolvasása, vagy a fájl elérési útja az Eseménynapló eseményeinek beolvasása neve."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Határozza meg, hogy a path paraméterében használt karakterlánc az Eseménynapló, vagy a fájl elérési útja egy eseménynapló nevét adja meg."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  id: BatchSize
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Lekérdezi vagy beállítja a minden olvasási művelet eseményekről az adatfolyamból beolvasott események száma."
  syntax:
    content: public int BatchSize { get; set; }
    return:
      type: System.Int32
      description: "A visszatérési érték."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  id: CancelReading
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: CancelReading()
  nameWithType: EventLogReader.CancelReading()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Az aktuális lekérdezés művelet visszavonása."
  syntax:
    content: public void CancelReading ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventLogReader.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Az objektum által használt összes erőforrást kiadását."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogReader.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "A nem felügyelt, ez az objektum által használt erőforrások kiadja, és opcionálisan felszabadítja a felügyelt erőforrások."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  id: LogStatus
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Minden egyes Eseménynapló vagy az esemény lekérdezés ehhez az objektumhoz társított naplófájl állapotát olvassa be."
  syntax:
    content: public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus> LogStatus { get; }
    return:
      type: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}
      description: "Olyan listát ad vissza <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogStatus&quot;> </xref> objektumok, hogy minden egyes tartalmaznak-e az esemény lekérdezés ehhez az objektumhoz társított Eseménynapló vonatkozó állapotadatokat."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  id: ReadEvent
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: ReadEvent()
  nameWithType: EventLogReader.ReadEvent()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "A következő esemény az objektum az esemény a lekérdezésből visszaadott beolvasása."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069).'
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent ();
    parameters: []
    return:
      type: System.Diagnostics.Eventing.Reader.EventRecord
      description: "Értéket ad vissza egy <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;> </xref> objektum."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  id: ReadEvent(System.TimeSpan)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: ReadEvent(TimeSpan)
  nameWithType: EventLogReader.ReadEvent(TimeSpan)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "A következő esemény az objektum az esemény a lekérdezésből visszaadott beolvasása."
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventRecord ReadEvent (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A maximális idő lehetővé teszik az olvasási művelet futtatása előtt a művelet megszakítása."
    return:
      type: System.Diagnostics.Eventing.Reader.EventRecord
      description: "Értéket ad vissza egy <xref href=&quot;System.Diagnostics.Eventing.Reader.EventRecord&quot;> </xref> objektum."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(EventBookmark)
  nameWithType: EventLogReader.Seek(EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Módosítja az eseménystream, ahol a következő esemény, hogy van-e olvasási határozza meg a könyvjelző esemény megadásával pozícióját. Nem veszi a könyvjelző esemény előtt naplózott eseményeket."
  remarks: "Ez a függvény csak a eredményhalmazt rendszergazdaként vagy működési csatorna vagy a .evtx naplófájlokat is használhatja. Ez a funkció nem támogatott az elemzési és hibakeresési csatornák, vagy az ETL-fájlok."
  syntax:
    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark);
    parameters:
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "A könyvjelző (helyőrző), a kezdő helyzete, az Eseménynapló vagy az események streamjét. Csak eseményeket naplózott a lekérdezés által visszaadott a könyvjelző esemény után."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  id: Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(EventBookmark,Int64)
  nameWithType: EventLogReader.Seek(EventBookmark,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "A módosítások az adatfolyamként pozícióját, ahol a következő esemény, hogy van-e olvasási határozza meg a könyvjelző esemény és egy könyvjelzőt származó események eltolási száma megadásával. Nem naplózott előtt a könyvjelző és az eltolás veszi."
  remarks: "Ez a függvény csak a eredményhalmazt rendszergazdaként vagy működési csatorna vagy a .evtx naplófájlokat is használhatja. Ez a funkció nem támogatott az elemzési és hibakeresési csatornák, vagy az ETL-fájlok."
  syntax:
    content: public void Seek (System.Diagnostics.Eventing.Reader.EventBookmark bookmark, long offset);
    parameters:
    - id: bookmark
      type: System.Diagnostics.Eventing.Reader.EventBookmark
      description: "A könyvjelző (helyőrző), a kezdő helyzete, az Eseménynapló vagy az események streamjét. Csak eseményeket naplózott a lekérdezés által visszaadott a könyvjelző esemény után."
    - id: offset
      type: System.Int64
      description: "A könyvjelző pozíciójának módosítása események eltolási száma."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  id: Seek(System.IO.SeekOrigin,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  langs:
  - csharp
  name: Seek(SeekOrigin,Int64)
  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Módosítja az eseménystream, ahol a következő esemény, hogy van-e olvasási határozza meg egy kezdő pozíciót és a kezdő helyzete az eltolás megadásával pozícióját. Nincs a kezdő helyzete, valamint az eltolás veszi előtt naplózott eseményeket."
  remarks: "Ez a függvény csak a eredményhalmazt rendszergazdaként vagy működési csatorna vagy a .evtx naplófájlokat is használhatja. Ez a funkció nem támogatott az elemzési és hibakeresési csatornák, vagy az ETL-fájlok."
  syntax:
    content: public void Seek (System.IO.SeekOrigin origin, long offset);
    parameters:
    - id: origin
      type: System.IO.SeekOrigin
      description: "Egy értéket a <xref:System.IO.SeekOrigin>számbavételi határozza meg, ha az események elindításához lekérdezi az események streamjét a.</xref:System.IO.SeekOrigin>"
    - id: offset
      type: System.Int64
      description: "A forrás hozzáadása események eltolási száma."
  overload: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(EventLogQuery)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery)
- uid: System.Diagnostics.Eventing.Reader.EventLogQuery
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogQuery
  nameWithType: EventLogQuery
  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(String)
  nameWithType: EventLogReader.EventLogReader(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(EventLogQuery,EventBookmark)
  nameWithType: EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(EventLogQuery,EventBookmark)
- uid: System.Diagnostics.Eventing.Reader.EventBookmark
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventBookmark
  nameWithType: EventBookmark
  fullName: System.Diagnostics.Eventing.Reader.EventBookmark
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader(String,PathType)
  nameWithType: EventLogReader.EventLogReader(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.EventLogReader(String,PathType)
- uid: System.Diagnostics.Eventing.Reader.PathType
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: PathType
  nameWithType: PathType
  fullName: System.Diagnostics.Eventing.Reader.PathType
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: CancelReading()
  nameWithType: EventLogReader.CancelReading()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading()
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose()
  nameWithType: EventLogReader.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose()
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogReader.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus
- uid: System.Collections.Generic.IList{System.Diagnostics.Eventing.Reader.EventLogStatus}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<EventLogStatus>
  nameWithType: IList<EventLogStatus>
  fullName: System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogStatus>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Diagnostics.Eventing.Reader.EventLogStatus>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.Eventing.Reader.EventLogStatus
    name: EventLogStatus
    nameWithType: EventLogStatus
    fullName: EventLogStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent()
  nameWithType: EventLogReader.ReadEvent()
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent()
- uid: System.Diagnostics.Eventing.Reader.EventRecord
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventRecord
  nameWithType: EventRecord
  fullName: System.Diagnostics.Eventing.Reader.EventRecord
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent(TimeSpan)
  nameWithType: EventLogReader.ReadEvent(TimeSpan)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(EventBookmark)
  nameWithType: EventLogReader.Seek(EventBookmark)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark)
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(EventBookmark,Int64)
  nameWithType: EventLogReader.Seek(EventBookmark,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(EventBookmark,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek(SeekOrigin,Int64)
  nameWithType: EventLogReader.Seek(SeekOrigin,Int64)
  fullName: System.Diagnostics.Eventing.Reader.EventLogReader.Seek(SeekOrigin,Int64)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: EventLogReader
  nameWithType: EventLogReader.EventLogReader
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: BatchSize
  nameWithType: EventLogReader.BatchSize
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: CancelReading
  nameWithType: EventLogReader.CancelReading
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Dispose*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Dispose
  nameWithType: EventLogReader.Dispose
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: LogStatus
  nameWithType: EventLogReader.LogStatus
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: ReadEvent
  nameWithType: EventLogReader.ReadEvent
- uid: System.Diagnostics.Eventing.Reader.EventLogReader.Seek*
  parent: System.Diagnostics.Eventing.Reader.EventLogReader
  isExternal: false
  name: Seek
  nameWithType: EventLogReader.Seek
