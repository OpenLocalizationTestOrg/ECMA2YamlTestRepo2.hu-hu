### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbConnection
  id: DbConnection
  children:
  - System.Data.Common.DbConnection.#ctor
  - System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.BeginTransaction
  - System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.ChangeDatabase(System.String)
  - System.Data.Common.DbConnection.Close
  - System.Data.Common.DbConnection.ConnectionString
  - System.Data.Common.DbConnection.ConnectionTimeout
  - System.Data.Common.DbConnection.CreateCommand
  - System.Data.Common.DbConnection.CreateDbCommand
  - System.Data.Common.DbConnection.Database
  - System.Data.Common.DbConnection.DataSource
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.Common.DbConnection.GetSchema
  - System.Data.Common.DbConnection.GetSchema(System.String)
  - System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.Open
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.ServerVersion
  - System.Data.Common.DbConnection.State
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
  type: Class
  summary: "Egy adatbázis-kapcsolat jelöli."
  syntax:
    content: 'public abstract class DbConnection : System.ComponentModel.Component, IDisposable, System.Data.IDbConnection'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDbConnection
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbConnection.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DbConnection()
  nameWithType: DbConnection.DbConnection()
  fullName: System.Data.Common.DbConnection.DbConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> osztály."
  syntax:
    content: protected DbConnection ();
    parameters: []
  overload: System.Data.Common.DbConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Elindul az adatbázis-tranzakció."
  remarks: "A saját kapcsolattípus létrehozásakor, bírálja felül ezt a metódust valósítja meg a tranzakció indításához szükséges kódot."
  syntax:
    content: protected abstract System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "A tranzakció elkülönítési szintjét adja meg."
    return:
      type: System.Data.Common.DbTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.Common.DbConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: DbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Elindul az adatbázis-tranzakció."
  remarks: "Ha nem ad meg egy elkülönítési szintet, kapcsolat típusát a alapértelmezett elkülönítési szintet használja."
  syntax:
    content: public System.Data.Common.DbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.Common.DbTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.Common.DbConnection.BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adatbázis-tranzakció kezdődik-e a megadott elkülönítési szint."
  syntax:
    content: public System.Data.Common.DbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "A tranzakció elkülönítési szintjét adja meg."
    return:
      type: System.Data.Common.DbTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.Common.DbConnection.BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: DbConnection.ChangeDatabase(String)
  fullName: System.Data.Common.DbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Módosítja az aktuális adatbázisban a nyitott kapcsolat."
  remarks: "A megadott érték a `databaseName` paraméternek kell lennie az aktuális példány egy érvényes adatbázisnevet."
  syntax:
    content: public abstract void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: "Megadja a kapcsolat használjon, az adatbázis nevét."
  overload: System.Data.Common.DbConnection.ChangeDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.Close
  id: Close
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: DbConnection.Close()
  fullName: System.Data.Common.DbConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Megszünteti a kapcsolatot az adatbázisba. Ez az preferált bármely nyitott kapcsolat bezárása."
  remarks: "A Close metódus visszaállítja a folyamatban lévő tranzakciók. Majd kiadja a kapcsolatkészletbe csatlakozni, vagy bezárja a kapcsolatot, ha kapcsolatkészletezést le van tiltva.       Egy alkalmazás egyszer lehet meghívni a Close eljárást. Nincs kivétel jön létre.       Ha a <xref:System.Data.Common.DbConnection>kívüli is megnőnek hatókör, nem le van zárva.</xref:System.Data.Common.DbConnection> Ezért kifejezetten zárja be a kapcsolat meghívásával `Close` vagy `Dispose`, amelyek funkcionális szempontból egyenértékű. Ha az érték a kapcsolatkészletezést `Pooling` értékre van állítva `true` vagy `yes`, ez is kiadja a fizikai kapcsolat.      > [!CAUTION] > Ne hívja meg `Close` vagy `Dispose` a egy **kapcsolat**, egy **DataReader**, vagy bármely más felügyelt objektumot a `Finalize` az osztály. A véglegesítőt, a kiadás csak nem felügyelt erőforrást, amely a osztály birtokolja közvetlenül. Ha az osztály nem rendelkezik a nem felügyelt erőforrás nem tartalmaznak egy `Finalize` az osztálydefiníció metódust. További információkért lásd: [szemétgyűjtés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public abstract void Close ();
    parameters: []
  overload: System.Data.Common.DbConnection.Close*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "A kapcsolati szintű hiba történt a kapcsolat megnyitása közben."
  platform:
  - net462
- uid: System.Data.Common.DbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
  fullName: System.Data.Common.DbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a kapcsolat megnyitásához használt karakterlánc."
  remarks: "A kapcsolati karakterlánc pontos tartalmát függ az adott adatforrás ehhez a kapcsolathoz. Annak megállapításához, hogy melyik beállítások érvényesek, Ön által használt kapcsolat típusát a dokumentációban."
  syntax:
    content: public abstract string ConnectionString { get; set; }
    return:
      type: System.String
      description: "A kezdeti kapcsolat létrehozásához használt kapcsolati karakterlánc. A kapcsolati karakterlánc pontos tartalmát függ az adott adatforrás ehhez a kapcsolathoz. Az alapértelmezett érték: üres karakterlánc."
  overload: System.Data.Common.DbConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
  fullName: System.Data.Common.DbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a rendszer mennyi ideig vár a kísérlet megszakítása és hibaüzenet előtt kapcsolatának létrehozása közben."
  syntax:
    content: public virtual int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Az eltelt idő (másodpercben) történő várakozás a kapcsolat megnyitásához. Az alapértelmezett érték az Ön által használt kapcsolat típusát határozza meg."
  overload: System.Data.Common.DbConnection.ConnectionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: DbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hoz létre, és adja vissza egy <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objektum az aktuális kapcsolathoz rendelve."
  syntax:
    content: public System.Data.Common.DbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.Common.DbCommand&quot;></xref> object."
  overload: System.Data.Common.DbConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: DbConnection.CreateDbCommand()
  fullName: System.Data.Common.DbConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hoz létre, és adja vissza egy <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objektum az aktuális kapcsolathoz rendelve."
  remarks: "Ha saját kapcsolat készül olyanokat, bírálja felül ezt a metódust valósítja meg a szükséges hozza létre a kódot egy <xref:System.Data.Common.DbCommand>objektum.</xref:System.Data.Common.DbCommand>"
  syntax:
    content: protected abstract System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.Common.DbCommand&quot;></xref> object."
  overload: System.Data.Common.DbConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.Database
  id: Database
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Database
  nameWithType: DbConnection.Database
  fullName: System.Data.Common.DbConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a kapcsolat megnyitása után az aktuális adatbázis nevét, vagy az adatbázis neve a kapcsolati karakterláncban megadott előtt a kapcsolat meg van nyitva."
  remarks: "A kapcsolat általában frissíti Ez a tulajdonság dinamikusan módosítja az aktuális adatbázisban."
  syntax:
    content: public abstract string Database { get; }
    return:
      type: System.String
      description: "Az aktuális adatbázisban vagy használható egy kapcsolat megnyitása után az adatbázis nevét a neve. Az alapértelmezett érték: üres karakterlánc."
  overload: System.Data.Common.DbConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.DataSource
  id: DataSource
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: DbConnection.DataSource
  fullName: System.Data.Common.DbConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a nevét az adatbázis-kiszolgáló, amelyhez csatlakozni szeretne."
  remarks: "Ha a kapcsolat az adatbázissal le van zárva, az adatforrás adja vissza, függetlenül az szerepel a <xref:System.Data.Common.DbConnection.ConnectionString%2A>a a `DataSource` kulcsszót.</xref:System.Data.Common.DbConnection.ConnectionString%2A> Ha a kapcsolat meg nyitva, és a <xref:System.Data.Common.DbConnection.ConnectionString%2A>adatok forrás kulcsszó érték kezdődik &quot;|}`datadirectory`|}&quot;, a tulajdonság adja vissza, függetlenül az szerepel a <xref:System.Data.Common.DbConnection.ConnectionString%2A>a a `DataSource` kulcsszó csak.</xref:System.Data.Common.DbConnection.ConnectionString%2A> </xref:System.Data.Common.DbConnection.ConnectionString%2A> A kapcsolat az adatbázissal meg nyitva, ha a tulajdonság adja vissza, mi a natív szolgáltató adja vissza a `DBPROP_INIT_DATASOURCE`, és ha üres, ez a natív szolgáltató `DBPROP_DATASOURCENAME` adja vissza."
  syntax:
    content: public abstract string DataSource { get; }
    return:
      type: System.String
      description: "Az adatbázis-kiszolgáló, amelyhez csatlakozni szeretne a neve. Az alapértelmezett érték: üres karakterlánc."
  overload: System.Data.Common.DbConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
  fullName: System.Data.Common.DbConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Gets the <xref href=&quot;System.Data.Common.DbProviderFactory&quot;></xref> for this <xref href=&quot;System.Data.Common.DbConnection&quot;></xref>."
  syntax:
    content: protected virtual System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Módszereket biztosít a szolgáltató általi megvalósítása forrás adatosztályok példányai készlete."
  overload: System.Data.Common.DbConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: DbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Common.DbConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Felveszi a megadott tranzakció."
  remarks: "Új ADO.NET 2.0 van támogatási használatához a `EnlistTransaction` az elosztott tranzakciókba való metódus. Mivel az felveszi a kapcsolatot egy <xref:System.Transactions.Transaction>példány, `EnlistTransaction` funkcionalitást kihasználja a <xref:System.Transactions>névtér kezelésére szolgáló elosztott tranzakciók.</xref:System.Transactions> </xref:System.Transactions.Transaction> Ha a kapcsolat explicit módon szerepel egy tranzakcióban van bejegyezve, nem lehet unenlisted és egy másik tranzakció bejelentkezve, amíg az első tranzakció befejezését."
  syntax:
    content: public virtual void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Egy meglévő hivatkozás <xref href=&quot;System.Transactions.Transaction&quot;> </xref> , amelyben a besorolásra."
  overload: System.Data.Common.DbConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.GetSchema
  id: GetSchema
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: DbConnection.GetSchema()
  fullName: System.Data.Common.DbConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Erre az adatforrásra vonatkozóan séma adatait adja vissza <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref>."
  remarks: "Ha a kapcsolat a tranzakcióhoz társított, végrehajtása `GetSchema` hívások okozhat kivételt jelez az egyes szolgáltatók."
  syntax:
    content: public virtual System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyek séma információkat tartalmaznak."
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: DbConnection.GetSchema(String)
  fullName: System.Data.Common.DbConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Erre az adatforrásra vonatkozóan séma adatait adja vissza <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> a megadott karakterlánc használ a séma neve."
  remarks: "Ha a kapcsolat a tranzakcióhoz társított, végrehajtása `GetSchema` hívások okozhat kivételt jelez az egyes szolgáltatók."
  syntax:
    content: public virtual System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Vissza a séma neve."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyek séma információkat tartalmaznak."
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>nullként van megadva."
  platform:
  - net462
- uid: System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: DbConnection.GetSchema(String,String[])
  fullName: System.Data.Common.DbConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Erre az adatforrásra vonatkozóan séma adatait adja vissza <xref href=&quot;System.Data.Common.DbConnection&quot;> </xref> a megadott karakterlánc használata a sémanév és a korlátozás értékeket a megadott karakterlánc-tömbben."
  remarks: "A `restrictionValues` paraméter megadhatja *n* értékek, amelyeket a korlátozásgyűjtemény egy adott gyűjtemény által megadott mélységét. Ahhoz, hogy egy adott korlátozás kapacitásértékeinek beállítása, és nincs beállítva az egyéb korlátozások értékeit, be kell az előző korlátozások null, és majd írja be a megfelelő értéket a korlátozásokat, amelyeket szeretne, adjon meg egy értéket.       Például az &quot;Tábla&quot; gyűjteménye. Ha a &quot;Tábla&quot; gyűjtemény rendelkezik három korlátozások (a adatbázis, a tulajdonos és a tábla neve), és le szeretné kérdezni vissza csak a &quot;Carl&quot; tulajdonosa társított táblákat, át kell adnia az alábbi értékek legalább: null, a &quot;Carl&quot;. Egy korlátozási érték nem kerül át, a, ha az alapértelmezett értékeket használják, hogy korlátozásra vonatkozóan. Ez az azonosak maradjanak null, a sikeres, ami eltér a paraméter értéke üres karakterláncot a sikeres. Ebben az esetben, az üres karakterlánc (&quot;&quot;) a megadott paraméter értéke számít.       Ha a kapcsolat a tranzakcióhoz társított, végrehajtása `GetSchema` hívások okozhat kivételt jelez az egyes szolgáltatók."
  syntax:
    content: public virtual System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Vissza a séma neve."
    - id: restrictionValues
      type: System.String[]
      description: "Itt adhatja meg a kért séma korlátozás értékeit."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyek séma információkat tartalmaznak."
  overload: System.Data.Common.DbConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>nullként van megadva."
  platform:
  - net462
- uid: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  id: OnStateChange(System.Data.StateChangeEventArgs)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OnStateChange(StateChangeEventArgs)
  nameWithType: DbConnection.OnStateChange(StateChangeEventArgs)
  fullName: System.Data.Common.DbConnection.OnStateChange(StateChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Kiváltja a <xref href=&quot;System.Data.Common.DbConnection.StateChange&quot;> </xref> esemény."
  remarks: 'Az eseménykezelő keresztül egy delegált esemény indítása hív meg. Megtudhatja, [NIB: esemény indítása](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnStateChange (System.Data.StateChangeEventArgs stateChange);
    parameters:
    - id: stateChange
      type: System.Data.StateChangeEventArgs
      description: "A <xref href=&quot;System.Data.StateChangeEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Data.Common.DbConnection.OnStateChange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.Open
  id: Open
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: DbConnection.Open()
  fullName: System.Data.Common.DbConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A <xref:System.Data.Common.DbConnection.ConnectionString*>.</xref:System.Data.Common.DbConnection.ConnectionString*> által megadott beállításokat tartalmazó adatbázis-kapcsolat megnyitása"
  remarks: "Ez a metódus felül kell bírálni a felhasználó által definiált viselkedése. <xref:System.Data.SqlClient.SqlConnection.Open%2A?displayProperty=fullName>rendszer kivételt jelez, ha hívása nélkül újra először lezárult.</xref:System.Data.SqlClient.SqlConnection.Open%2A?displayProperty=fullName>"
  syntax:
    content: public abstract void Open ();
    parameters: []
  overload: System.Data.Common.DbConnection.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.OpenAsync
  id: OpenAsync
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OpenAsync()
  nameWithType: DbConnection.OpenAsync()
  fullName: System.Data.Common.DbConnection.OpenAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy aszinkron verzióját <> </> *>, amely megnyitja az adatbázis-kapcsolat által megadott beállításokkal a <> </> *>. Ez a metódus meghívja a virtuális metódus <xref:System.Data.Common.DbConnection.OpenAsync*>rendelkező CancellationToken.None.</xref:System.Data.Common.DbConnection.OpenAsync*>"
  remarks: "Hívása után <xref:System.Data.Common.DbConnection.OpenAsync%2A>, <xref:System.Data.Common.DbConnection.State%2A>kell visszaadnia <xref:System.Data.ConnectionState>csak a visszaadott <xref:System.Threading.Tasks.Task>befejeződött.</xref:System.Threading.Tasks.Task> </xref:System.Data.ConnectionState> </xref:System.Data.Common.DbConnection.State%2A> </xref:System.Data.Common.DbConnection.OpenAsync%2A> Ezután, ha a kapcsolat nem volt sikeres, <xref:System.Data.Common.DbConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> kell visszaadnia.</xref:System.Data.Common.DbConnection.State%2A> Ha a kapcsolódás sikertelen, <xref:System.Data.Common.DbConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> kell visszaadnia.</xref:System.Data.Common.DbConnection.State%2A>       Hívása <xref:System.Data.Common.DbConnection.Close%2A>állítsa le vagy zárja be a megfelelő megkísérli <xref:System.Data.Common.DbConnection.OpenAsync%2A>hívása.</xref:System.Data.Common.DbConnection.OpenAsync%2A> </xref:System.Data.Common.DbConnection.Close%2A>       Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task OpenAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.Common.DbConnection.OpenAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: OpenAsync(CancellationToken)
  nameWithType: DbConnection.OpenAsync(CancellationToken)
  fullName: System.Data.Common.DbConnection.OpenAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ez az aszinkron verzióját <> </> *>. Szolgáltatók felül kell bírálniuk a megfelelő megvalósítását. A megszakítási token szükség lesz érvényes.       Az alapértelmezett implementációja hív meg, a szinkron <> </> *> hívja, és a befejezett tevékenység adja vissza. Az alapértelmezett implementációja vissza a megszakított feladatok, ha egy már megszakított cancellationToken átadott. Nyissa meg által okozott kivételeket kommunikálja visszaadott kivétel feladat tulajdonságon keresztül.       Ne hívja meg egyéb módszerek és tulajdonságait a <xref uid=&quot;langword_csharp_DbConnection&quot; name=&quot;DbConnection&quot; href=&quot;&quot;> </xref> objektum, amíg a visszaadott feladat be nem fejeződik."
  remarks: "Hívása után <xref:System.Data.Common.DbConnection.OpenAsync%2A>, <xref:System.Data.Common.DbConnection.State%2A>kell visszaadnia <xref:System.Data.ConnectionState>csak a visszaadott <xref:System.Threading.Tasks.Task>befejeződött.</xref:System.Threading.Tasks.Task> </xref:System.Data.ConnectionState> </xref:System.Data.Common.DbConnection.State%2A> </xref:System.Data.Common.DbConnection.OpenAsync%2A> Ezután, ha a kapcsolat nem volt sikeres, <xref:System.Data.Common.DbConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> kell visszaadnia.</xref:System.Data.Common.DbConnection.State%2A> Ha a kapcsolódás sikertelen, <xref:System.Data.Common.DbConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> kell visszaadnia.</xref:System.Data.Common.DbConnection.State%2A>       Hívása <xref:System.Data.Common.DbConnection.Close%2A>állítsa le vagy zárja be a megfelelő megkísérli <xref:System.Data.Common.DbConnection.OpenAsync%2A>hívása.</xref:System.Data.Common.DbConnection.OpenAsync%2A> </xref:System.Data.Common.DbConnection.Close%2A>       Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.Common.DbConnection.OpenAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
  fullName: System.Data.Common.DbConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a kiszolgálót, amelyhez az objektum csatlakozik verziója jelölő karakterlánccá."
  syntax:
    content: public abstract string ServerVersion { get; }
    return:
      type: System.String
      description: "Az adatbázis verziója. A visszaadott karakterlánc formátuma attól függ, hogy használ a kapcsolat típusát."
  overload: System.Data.Common.DbConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "OWA lett meghívva, amikor a visszaadott feladat nem fejeződött be, és a kapcsolat nem nyitható meg a <xref:System.Data.Common.DbConnection.OpenAsync*>.</xref:System.Data.Common.DbConnection.OpenAsync*> hívása után"
  platform:
  - net462
- uid: System.Data.Common.DbConnection.State
  id: State
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: State
  nameWithType: DbConnection.State
  fullName: System.Data.Common.DbConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy karakterlánc, amely a kapcsolat állapotának lekérése."
  syntax:
    content: public abstract System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "A kapcsolat állapotát. A visszaadott karakterlánc formátuma attól függ, hogy használ a kapcsolat típusát."
  overload: System.Data.Common.DbConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.StateChange
  id: StateChange
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: StateChange
  nameWithType: DbConnection.StateChange
  fullName: System.Data.Common.DbConnection.StateChange
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Az esemény állapotának megváltozásakor következik be."
  remarks: "A StateChange esemény lezárt megnyitni, vagy a megnyitott bezárására az esemény állapotának megváltozásakor következik be."
  syntax:
    content: public virtual event System.Data.StateChangeEventHandler StateChange;
    return:
      type: System.Data.StateChangeEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  id: System#Data#IDbConnection#BeginTransaction
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: System.Data.IDbConnection.BeginTransaction()
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adatbázis-tranzakció kezdődik."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DbConnection>példány típusúvá egy <xref:System.Data.IDbConnection>felületet.</xref:System.Data.IDbConnection> </xref:System.Data.Common.DbConnection>       További információkért lásd: <xref:System.Data.IDbConnection.BeginTransaction%2A>.</xref:System.Data.IDbConnection.BeginTransaction%2A>"
  syntax:
    content: System.Data.IDbTransaction IDbConnection.BeginTransaction ();
    parameters: []
    return:
      type: System.Data.IDbTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  id: System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A megadott adatbázis-tranzakció kezdete <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> érték."
  remarks: "További információkért lásd: <xref:System.Data.IDbConnection.BeginTransaction%2A>.</xref:System.Data.IDbConnection.BeginTransaction%2A>"
  syntax:
    content: System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Egy a <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> értékeket."
    return:
      type: System.Data.IDbTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  id: System#Data#IDbConnection#CreateCommand
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  name: System.Data.IDbConnection.CreateCommand()
  nameWithType: DbConnection.System.Data.IDbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hoz létre, és adja vissza egy <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objektum, amely az aktuális kapcsolathoz társítva."
  remarks: "További információkért lásd: [parancsok és a paraméterek](~/add/includes/ajax-current-ext-md.md) és <xref:System.Data.IDbConnection.CreateCommand%2A>.</xref:System.Data.IDbConnection.CreateCommand%2A>"
  syntax:
    content: System.Data.IDbCommand IDbConnection.CreateCommand ();
    parameters: []
    return:
      type: System.Data.IDbCommand
      description: "A <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> a kapcsolathoz társított objektumot."
  overload: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbConnection.#ctor
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbConnection()
  nameWithType: DbConnection.DbConnection()
  fullName: System.Data.Common.DbConnection.DbConnection()
- uid: System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Common.DbConnection.BeginTransaction
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: DbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.BeginTransaction()
- uid: System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Common.DbConnection.ChangeDatabase(System.String)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: DbConnection.ChangeDatabase(String)
  fullName: System.Data.Common.DbConnection.ChangeDatabase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbConnection.Close
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Close()
  nameWithType: DbConnection.Close()
  fullName: System.Data.Common.DbConnection.Close()
- uid: System.Data.Common.DbConnection.ConnectionString
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
  fullName: System.Data.Common.DbConnection.ConnectionString
- uid: System.Data.Common.DbConnection.ConnectionTimeout
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
  fullName: System.Data.Common.DbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbConnection.CreateCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: DbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.CreateCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbConnection.CreateDbCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: DbConnection.CreateDbCommand()
  fullName: System.Data.Common.DbConnection.CreateDbCommand()
- uid: System.Data.Common.DbConnection.Database
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Database
  nameWithType: DbConnection.Database
  fullName: System.Data.Common.DbConnection.Database
- uid: System.Data.Common.DbConnection.DataSource
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DataSource
  nameWithType: DbConnection.DataSource
  fullName: System.Data.Common.DbConnection.DataSource
- uid: System.Data.Common.DbConnection.DbProviderFactory
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
  fullName: System.Data.Common.DbConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.Common.DbConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: DbConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Common.DbConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.Common.DbConnection.GetSchema
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema()
  nameWithType: DbConnection.GetSchema()
  fullName: System.Data.Common.DbConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbConnection.GetSchema(System.String)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: DbConnection.GetSchema(String)
  fullName: System.Data.Common.DbConnection.GetSchema(String)
- uid: System.Data.Common.DbConnection.GetSchema(System.String,System.String[])
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: DbConnection.GetSchema(String,String[])
  fullName: System.Data.Common.DbConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OnStateChange(StateChangeEventArgs)
  nameWithType: DbConnection.OnStateChange(StateChangeEventArgs)
  fullName: System.Data.Common.DbConnection.OnStateChange(StateChangeEventArgs)
- uid: System.Data.StateChangeEventArgs
  parent: System.Data
  isExternal: false
  name: StateChangeEventArgs
  nameWithType: StateChangeEventArgs
  fullName: System.Data.StateChangeEventArgs
- uid: System.Data.Common.DbConnection.Open
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Open()
  nameWithType: DbConnection.Open()
  fullName: System.Data.Common.DbConnection.Open()
- uid: System.Data.Common.DbConnection.OpenAsync
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync()
  nameWithType: DbConnection.OpenAsync()
  fullName: System.Data.Common.DbConnection.OpenAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync(CancellationToken)
  nameWithType: DbConnection.OpenAsync(CancellationToken)
  fullName: System.Data.Common.DbConnection.OpenAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbConnection.ServerVersion
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
  fullName: System.Data.Common.DbConnection.ServerVersion
- uid: System.Data.Common.DbConnection.State
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: State
  nameWithType: DbConnection.State
  fullName: System.Data.Common.DbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.Common.DbConnection.StateChange
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: StateChange
  nameWithType: DbConnection.StateChange
  fullName: System.Data.Common.DbConnection.StateChange
- uid: System.Data.StateChangeEventHandler
  parent: System.Data
  isExternal: false
  name: StateChangeEventHandler
  nameWithType: StateChangeEventHandler
  fullName: System.Data.StateChangeEventHandler
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.BeginTransaction()
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction()
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.CreateCommand()
  nameWithType: DbConnection.System.Data.IDbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.CreateCommand()
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.Common.DbConnection.#ctor*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection.DbConnection
- uid: System.Data.Common.DbConnection.BeginDbTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: DbConnection.BeginDbTransaction
- uid: System.Data.Common.DbConnection.BeginTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: DbConnection.BeginTransaction
- uid: System.Data.Common.DbConnection.ChangeDatabase*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: DbConnection.ChangeDatabase
- uid: System.Data.Common.DbConnection.Close*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Close
  nameWithType: DbConnection.Close
- uid: System.Data.Common.DbConnection.ConnectionString*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: DbConnection.ConnectionString
- uid: System.Data.Common.DbConnection.ConnectionTimeout*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: DbConnection.ConnectionTimeout
- uid: System.Data.Common.DbConnection.CreateCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: DbConnection.CreateCommand
- uid: System.Data.Common.DbConnection.CreateDbCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: DbConnection.CreateDbCommand
- uid: System.Data.Common.DbConnection.Database*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Database
  nameWithType: DbConnection.Database
- uid: System.Data.Common.DbConnection.DataSource*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DataSource
  nameWithType: DbConnection.DataSource
- uid: System.Data.Common.DbConnection.DbProviderFactory*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbConnection.DbProviderFactory
- uid: System.Data.Common.DbConnection.EnlistTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: DbConnection.EnlistTransaction
- uid: System.Data.Common.DbConnection.GetSchema*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: GetSchema
  nameWithType: DbConnection.GetSchema
- uid: System.Data.Common.DbConnection.OnStateChange*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OnStateChange
  nameWithType: DbConnection.OnStateChange
- uid: System.Data.Common.DbConnection.Open*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: Open
  nameWithType: DbConnection.Open
- uid: System.Data.Common.DbConnection.OpenAsync*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: OpenAsync
  nameWithType: DbConnection.OpenAsync
- uid: System.Data.Common.DbConnection.ServerVersion*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: ServerVersion
  nameWithType: DbConnection.ServerVersion
- uid: System.Data.Common.DbConnection.State*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: State
  nameWithType: DbConnection.State
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.BeginTransaction
  nameWithType: DbConnection.System.Data.IDbConnection.BeginTransaction
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand*
  parent: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.IDbConnection.CreateCommand
  nameWithType: DbConnection.System.Data.IDbConnection.CreateCommand
