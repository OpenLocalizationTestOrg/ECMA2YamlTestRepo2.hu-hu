### YamlMime:ManagedReference
items:
- uid: System.Configuration.Install.InstallContext
  id: InstallContext
  children:
  - System.Configuration.Install.InstallContext.#ctor
  - System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  - System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  - System.Configuration.Install.InstallContext.LogMessage(System.String)
  - System.Configuration.Install.InstallContext.Parameters
  - System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  langs:
  - csharp
  name: InstallContext
  nameWithType: InstallContext
  fullName: System.Configuration.Install.InstallContext
  type: Class
  summary: "Az aktuális telepítésre vonatkozó információkat tartalmazza."
  remarks: "Általában egy InstallContext létrejön egy telepítése végrehajtható, például az InstallUtil.exe, amely telepíti szerelvényeket. A telepítőprogram meghívja az InstallContext konstruktort, átadja azt az alapértelmezett naplófájl elérési útja és a parancssori paramétereket.       Hívása előtt a <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, vagy <xref:System.Configuration.Install.Installer.Uninstall%2A>módszerek, a telepítőprogram beállítja a <xref:System.Configuration.Install.Installer.Context%2A>tulajdonsága egy <xref:System.Configuration.Install.Installer>InstallContext példányához.</xref:System.Configuration.Install.Installer> </xref:System.Configuration.Install.Installer.Context%2A> </xref:System.Configuration.Install.Installer.Uninstall%2A> </xref:System.Configuration.Install.Installer.Rollback%2A> </xref:System.Configuration.Install.Installer.Commit%2A> </xref:System.Configuration.Install.Installer.Install%2A> Ezek a metódusok meghívása előtt egy <xref:System.Configuration.Install.Installer>, amely tartalmazza egy telepítő gyűjtemény a <xref:System.Configuration.Install.Installer.Installers%2A>tulajdonság beállítása a <xref:System.Configuration.Install.Installer.Context%2A>minden benne lévő telepítő tulajdonsága.</xref:System.Configuration.Install.Installer.Context%2A> </xref:System.Configuration.Install.Installer.Installers%2A> </xref:System.Configuration.Install.Installer>       A <xref:System.Configuration.Install.InstallContext.Parameters%2A>tulajdonság a parancssorban megadott végrehajtható telepítésének futtatásával elemzett verzióját tartalmazza.</xref:System.Configuration.Install.InstallContext.Parameters%2A> A tulajdonság elérési útját egy naplófájl, hogy naplózási adatok a konzolon megjelenjenek-e, és legyen felhasználói felülete látható a telepítés során például információkat tartalmaz. Hívja a <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>metódust, ha szeretné tudni, hogy van-e a parancssori paraméter `true`.</xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>       Használja a <xref:System.Configuration.Install.InstallContext.LogMessage%2A>állapotüzenetek írni a telepítési naplófájlban, és a konzol metódus.</xref:System.Configuration.Install.InstallContext.LogMessage%2A>"
  example:
  - "The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the InstallContext class.  \n  \n When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line. Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.  \n  \n When the program is invoked without any arguments, an empty InstallContext is created. When \"/LogFile\" and \"/LogtoConsole\" are specified, the InstallContext is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \n  \n [!code-cs[InstallContext_InstallContext#1](~/add/codesnippet/csharp/t-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#1](~/add/codesnippet/cpp/t-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#1](~/add/codesnippet/visualbasic/t-system.configuration.i_10_1.vb)]"
  syntax:
    content: public class InstallContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.#ctor
  id: '#ctor'
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: InstallContext()
  nameWithType: InstallContext.InstallContext()
  fullName: System.Configuration.Install.InstallContext.InstallContext()
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Configuration.Install.InstallContext&quot;> </xref> osztály."
  remarks: "Ez a túlterhelés nem hoz létre a telepítési naplófájlt."
  example:
  - "> [!NOTE]\n>  This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor. For other examples that might be available, see the individual overload topics.  \n  \n When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.  \n  \n [!code-cs[InstallContext_InstallContext#2](~/add/codesnippet/csharp/m-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#2](~/add/codesnippet/cpp/m-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#2](~/add/codesnippet/visualbasic/m-system.configuration.i_10_1.vb)]"
  syntax:
    content: public InstallContext ();
    parameters: []
  overload: System.Configuration.Install.InstallContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: InstallContext(String,String[])
  nameWithType: InstallContext.InstallContext(String,String[])
  fullName: System.Configuration.Install.InstallContext.InstallContext(String,String[])
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Configuration.Install.InstallContext&quot;> </xref> osztály, és naplófájlt hoz létre a telepítéshez."
  remarks: "Ha a telepítés használja [Installutil.exe (Installer eszköz)](~/add/includes/ajax-current-ext-md.md), ez a konstruktor naplófájlt hoz létre a megadott elérési úton, és a parancssori paraméterek tömbje elemzi a <xref:System.Configuration.Install.InstallContext.Parameters%2A>tulajdonság.</xref:System.Configuration.Install.InstallContext.Parameters%2A> Ha a naplófájl elérési útja van megadva a parancssori paraméterek, a fájl létrehozására szolgál. Ha a napló fájl argumentumhoz nincs megadva a parancssorban, értékét a `logFilePath` paraméterrel. Ne jelenjen meg többé a naplófájl létrehozásának, adja át a &quot;/ logfile =&quot; parancssori paraméter."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n When \"/LogFile\" and \"/LogtoConsole\" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.  \n  \n [!code-cs[InstallContext_InstallContext#3](~/add/codesnippet/csharp/542763dc-b606-44ec-b9bd-_1.cs)]\n [!code-cpp[InstallContext_InstallContext#3](~/add/codesnippet/cpp/542763dc-b606-44ec-b9bd-_1.cpp)]\n [!code-vb[InstallContext_InstallContext#3](~/add/codesnippet/visualbasic/542763dc-b606-44ec-b9bd-_1.vb)]"
  syntax:
    content: public InstallContext (string logFilePath, string[] commandLine);
    parameters:
    - id: logFilePath
      type: System.String
      description: "A naplófájl elérési útja az ehhez a telepítéshez, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha egyetlen naplófájlt kell létrehozni."
    - id: commandLine
      type: System.String[]
      description: "A telepítőprogram futtatása során megadott parancssori paraméterek vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs vannak megadva."
  overload: System.Configuration.Install.InstallContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  id: IsParameterTrue(System.String)
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: IsParameterTrue(String)
  nameWithType: InstallContext.IsParameterTrue(String)
  fullName: System.Configuration.Install.InstallContext.IsParameterTrue(String)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Meghatározza, hogy a megadott parancssori paraméter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: "Ez a módszer fér hozzá a <xref:System.Configuration.Install.InstallContext.Parameters%2A>tulajdonság, amely tartalmazza annak megállapításához, hogy a megadott paraméter a parancssori paraméterek elemzett verziója `true`.</xref:System.Configuration.Install.InstallContext.Parameters%2A>"
  example:
  - "This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.  \n  \n It uses the IsParameterTrue method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#4](~/add/codesnippet/csharp/m-system.configuration.i_5_1.cs)]\n [!code-cpp[InstallContext_InstallContext#4](~/add/codesnippet/cpp/m-system.configuration.i_5_1.cpp)]\n [!code-vb[InstallContext_InstallContext#4](~/add/codesnippet/visualbasic/m-system.configuration.i_5_1.vb)]"
  syntax:
    content: public bool IsParameterTrue (string paramName);
    parameters:
    - id: paramName
      type: System.String
      description: "Ellenőrizze, hogy a parancssori paraméter neve."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott paraméter értéke &quot;yes&quot;, &quot;true&quot;, &quot;1&quot; vagy üres karakterlánc (&quot;&quot;); Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.Install.InstallContext.IsParameterTrue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)
  id: LogMessage(System.String)
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: LogMessage(String)
  nameWithType: InstallContext.LogMessage(String)
  fullName: System.Configuration.Install.InstallContext.LogMessage(String)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Beír egy üzenetet, a konzol és az a telepítési naplófájlt."
  remarks: "Telepítő hívhatják ezt a metódust a folyamatban lévő vagy egyéb állapotinformáció ír a naplófájlba. Ha a parancssori paramétereket ad meg, hogy megjelenjen-e a felhasználói felület, a telepítő jelenjen meg üzenet mezőbe vagy lekérdezések mellett a LogMessage metódust. A naplófájlba szöveg nem látható a felhasználó által kivéve, ha az InstallUtil.exe segítségével futtatja a telepítést és a &quot;/ LogToConsole = true&quot; van megadva a parancssorban."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the LogMessage method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#4](~/add/codesnippet/csharp/m-system.configuration.i_7_1.cs)]\n [!code-cpp[InstallContext_InstallContext#4](~/add/codesnippet/cpp/m-system.configuration.i_7_1.cpp)]\n [!code-vb[InstallContext_InstallContext#4](~/add/codesnippet/visualbasic/m-system.configuration.i_7_1.vb)]"
  syntax:
    content: public void LogMessage (string message);
    parameters:
    - id: message
      type: System.String
      description: "Az üzenet írni."
  overload: System.Configuration.Install.InstallContext.LogMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.Parameters
  id: Parameters
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: Parameters
  nameWithType: InstallContext.Parameters
  fullName: System.Configuration.Install.InstallContext.Parameters
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Lekérdezi az InstallUtil.exe futtatásakor a megadott parancssori paraméterek."
  remarks: "Ha egy új <xref:System.Configuration.Install.InstallContext>jön létre, a parancssori paraméterek Parameters tulajdonsága van értelmezni.</xref:System.Configuration.Install.InstallContext> A kulcsok és a paraméterek olyan karakterláncok."
  example:
  - "This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.  \n  \n The sample retrieves the Parameters property to see if any command line argument has been entered by the user. It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set. If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.  \n  \n [!code-cs[InstallContext_InstallContext#6](~/add/codesnippet/csharp/p-system.configuration.i_10_1.cs)]\n [!code-cpp[InstallContext_InstallContext#6](~/add/codesnippet/cpp/p-system.configuration.i_10_1.cpp)]\n [!code-vb[InstallContext_InstallContext#6](~/add/codesnippet/visualbasic/p-system.configuration.i_10_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Parameters { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> , amely a telepítési program futtatásakor a megadott parancssori paraméterek jelöli."
  overload: System.Configuration.Install.InstallContext.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  id: ParseCommandLine(System.String[])
  parent: System.Configuration.Install.InstallContext
  langs:
  - csharp
  name: ParseCommandLine(String[])
  nameWithType: InstallContext.ParseCommandLine(String[])
  fullName: System.Configuration.Install.InstallContext.ParseCommandLine(String[])
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: "Elemzi a parancssori paramétereket szótárba történő karakterlánc."
  syntax:
    content: protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);
    parameters:
    - id: args
      type: System.String[]
      description: "A parancssori paramétereket tartalmazó tömb."
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> tartalmazó az elemzett parancssori paraméterek."
  overload: System.Configuration.Install.InstallContext.ParseCommandLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Install.InstallContext.#ctor
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext()
  nameWithType: InstallContext.InstallContext()
  fullName: System.Configuration.Install.InstallContext.InstallContext()
- uid: System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext(String,String[])
  nameWithType: InstallContext.InstallContext(String,String[])
  fullName: System.Configuration.Install.InstallContext.InstallContext(String,String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.Install.InstallContext.IsParameterTrue(System.String)
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: IsParameterTrue(String)
  nameWithType: InstallContext.IsParameterTrue(String)
  fullName: System.Configuration.Install.InstallContext.IsParameterTrue(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Install.InstallContext.LogMessage(System.String)
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: LogMessage(String)
  nameWithType: InstallContext.LogMessage(String)
  fullName: System.Configuration.Install.InstallContext.LogMessage(String)
- uid: System.Configuration.Install.InstallContext.Parameters
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: Parameters
  nameWithType: InstallContext.Parameters
  fullName: System.Configuration.Install.InstallContext.Parameters
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: ParseCommandLine(String[])
  nameWithType: InstallContext.ParseCommandLine(String[])
  fullName: System.Configuration.Install.InstallContext.ParseCommandLine(String[])
- uid: System.Configuration.Install.InstallContext.#ctor*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: InstallContext
  nameWithType: InstallContext.InstallContext
- uid: System.Configuration.Install.InstallContext.IsParameterTrue*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: IsParameterTrue
  nameWithType: InstallContext.IsParameterTrue
- uid: System.Configuration.Install.InstallContext.LogMessage*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: LogMessage
  nameWithType: InstallContext.LogMessage
- uid: System.Configuration.Install.InstallContext.Parameters*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: Parameters
  nameWithType: InstallContext.Parameters
- uid: System.Configuration.Install.InstallContext.ParseCommandLine*
  parent: System.Configuration.Install.InstallContext
  isExternal: false
  name: ParseCommandLine
  nameWithType: InstallContext.ParseCommandLine
