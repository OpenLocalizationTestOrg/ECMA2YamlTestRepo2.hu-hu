### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellman
  id: ECDiffieHellman
  children:
  - System.Security.Cryptography.ECDiffieHellman.#ctor
  - System.Security.Cryptography.ECDiffieHellman.Create
  - System.Security.Cryptography.ECDiffieHellman.Create(System.String)
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm
  - System.Security.Cryptography.ECDiffieHellman.PublicKey
  - System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm
  langs:
  - csharp
  name: ECDiffieHellman
  nameWithType: ECDiffieHellman
  fullName: System.Security.Cryptography.ECDiffieHellman
  type: Class
  summary: "Egy absztrakt alaposztály biztosítja, hogy elliptikus görbe Diffie-Hellman (ECDH) algoritmus megvalósítások is származik. Ez az osztály a alapvető támogatnia kell az összes ECDH megvalósítások műveleteket tartalmaz."
  remarks: "Ez az osztály ECDH megvalósítások absztrakt alaposztálya funkcionál."
  syntax:
    content: 'public abstract class ECDiffieHellman : System.Security.Cryptography.AsymmetricAlgorithm'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: ECDiffieHellman()
  nameWithType: ECDiffieHellman.ECDiffieHellman()
  fullName: System.Security.Cryptography.ECDiffieHellman.ECDiffieHellman()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.ECDiffieHellman&quot;> </xref> osztály."
  remarks: "Ez a konstruktor hívja osztállyal, amelynek a <xref:System.Security.Cryptography.ECDiffieHellman>osztályból</xref:System.Security.Cryptography.ECDiffieHellman> származik A <xref:System.Security.Cryptography.ECDiffieHellmanCng>osztálya: az egyetlen megvalósítása, amely jelenleg megtalálható a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].</xref:System.Security.Cryptography.ECDiffieHellmanCng> Az elliptikus görbe Diffie-Hellman (ECDH) algoritmus új végrehajtásának létrehozásával kapcsolatos további információkért lásd: a <xref:System.Security.Cryptography.ECDiffieHellman.Create%2A>metódus.</xref:System.Security.Cryptography.ECDiffieHellman.Create%2A>"
  syntax:
    content: protected ECDiffieHellman ();
    parameters: []
  overload: System.Security.Cryptography.ECDiffieHellman.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.Create
  id: Create
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: Create()
  nameWithType: ECDiffieHellman.Create()
  fullName: System.Security.Cryptography.ECDiffieHellman.Create()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Létrehoz egy új példányt az elliptikus görbe Diffie-Hellman (ECDH) algoritmus alapértelmezett megvalósított."
  syntax:
    content: public static System.Security.Cryptography.ECDiffieHellman Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.ECDiffieHellman
      description: "Ez az osztály az alapértelmezett implementációja új példányát."
  overload: System.Security.Cryptography.ECDiffieHellman.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: Create(String)
  nameWithType: ECDiffieHellman.Create(String)
  fullName: System.Security.Cryptography.ECDiffieHellman.Create(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Létrehoz egy új példányt az elliptikus görbe Diffie-Hellman (ECDH) algoritmus megadott végrehajtásának."
  remarks: "Ha a saját végrehajtásának fejleszt egy <xref:System.Security.Cryptography.ECDiffieHellman>objektum a létrehozás metódus túlterhelési hozhat létre egy egyéni `algorithm` karakterlánc, amely meghatározza a megvalósítás.</xref:System.Security.Cryptography.ECDiffieHellman>       A `algorithm` paraméter határozza meg a ECDH algoritmus megvalósítása nevét. Támogatja a következő karakterláncok összes azonos megvalósítása, amely jelenleg csak végrehajtása tekintse meg a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]: - &quot;ECDH&quot; - &quot;ECDiffieHellman&quot; - &quot;ECDiffieHellmanCng&quot; - &quot;System.Security.Cryptography.ECDiffieHellmanCng&quot; egyéni ECDH implementációja nevét is megadhatja a `algorithm` paraméter. Ha így tesz, amely a <xref:System.Security.Cryptography.CryptoConfig>objektum segítségével határozza meg, hogy egy ECDH objektum is létrehozható.</xref:System.Security.Cryptography.CryptoConfig>"
  syntax:
    content: public static System.Security.Cryptography.ECDiffieHellman Create (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Egy megvalósítási ECDH algoritmus neve."
    return:
      type: System.Security.Cryptography.ECDiffieHellman
      description: "Ez az osztály megadott végrehajtásának új példányát. Ha a megadott algoritmus neve nem felel meg az ECDH megvalósítása, ez a metódus visszaadja <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDiffieHellman.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>algorithm</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)
  id: DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)
  nameWithType: ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Osztályból származik, amely használatával a kivonatoló függvényt, egy másik fél nyilvános kulcs és a kivonatoló algoritmus meg a nevet kulcsként használható bájt."
  remarks: "A túlterhelési meghívja a <xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A>metódus sikeres `null` a prepend, és a hozzáfűző értékek.</xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A>"
  syntax:
    content: public byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmust a kulcsokat tárol létrehozására."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  id: DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  nameWithType: ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy származtatott osztályban megadásuk osztályból származik, amely használatával a kivonatoló függvényt, egy másik fél nyilvános kulcsot, kivonatoló algoritmus neve, a prepend és hozzáfűző értékkel megadott kulcsként használható bájt."
  syntax:
    content: public virtual byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmust a kulcsokat tárol létrehozására."
    - id: secretPrepend
      type: System.Byte[]
      description: "A származtatott titkos kulcsot a kivonatolás előtt illesztenie érték."
    - id: secretAppend
      type: System.Byte[]
      description: "A származtatott titkos hozzáfűzése előtt kivonatoláshoz érték."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Egy származtatott osztálynak felül kell bírálnia ezt a módszert."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])
  id: DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])
  nameWithType: ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "A kivonat-alapú üzenethitelesítési kód (HMAC) használatával kulcsként használt bájt osztályból származik."
  remarks: "A túlterhelési meghívja a <xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A>metódus sikeres `null` a prepend, és a hozzáfűző értékek.</xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A>"
  syntax:
    content: public byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmust a kulcsokat tárol létrehozására."
    - id: hmacKey
      type: System.Byte[]
      description: "A kulcs a HMAC."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  id: DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  nameWithType: ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy származtatott osztályban megadásuk osztályból származik, amely használható a kivonat-alapú üzenethitelesítési kód (HMAC) használatával kulcsként bájt."
  syntax:
    content: public virtual byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmust a kulcsokat tárol létrehozására."
    - id: hmacKey
      type: System.Byte[]
      description: "A kulcs a HMAC."
    - id: secretPrepend
      type: System.Byte[]
      description: "A származtatott titkos kulcsot a kivonatolás előtt illesztenie érték."
    - id: secretAppend
      type: System.Byte[]
      description: "A származtatott titkos hozzáfűzése előtt kivonatoláshoz érték."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Egy származtatott osztálynak felül kell bírálnia ezt a módszert."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  id: DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy másik fél nyilvános kulcs megadott kulcsként használt bájt osztályból származik."
  remarks: "Nyilvános kulcsok kapcsolatos további információkért tekintse meg az <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey>osztályhoz.</xref:System.Security.Cryptography.ECDiffieHellmanPublicKey>"
  syntax:
    content: public virtual byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  id: DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  nameWithType: ECDiffieHellman.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy származtatott osztályban megadásuk osztályból származik, amely használható a Transport Layer Security (TLS) Pseudo-Random függvény (PRF) kért kulcsderiválási algoritmust használja kulcsként bájt."
  syntax:
    content: public virtual byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    - id: prfLabel
      type: System.Byte[]
      description: "ASCII-kódolású PRF címke."
    - id: prfSeed
      type: System.Byte[]
      description: "A 64 bájtos PRF leképezésben."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Egy származtatott osztálynak felül kell bírálnia ezt a módszert."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: ECDiffieHellman.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a kulcscsere-algoritmus neve."
  remarks: "Ennek a tulajdonságnak az alapértelmezett (felül nem bírált) végrehajtása &quot;ECDiffieHellman&quot; karakterláncot adja vissza.       Ez a tulajdonság <xref:System.Security.Cryptography.AsymmetricAlgorithm>Alap osztályból</xref:System.Security.Cryptography.AsymmetricAlgorithm> öröklődik"
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: "A kulcscsere-algoritmus neve."
  overload: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: PublicKey
  nameWithType: ECDiffieHellman.PublicKey
  fullName: System.Security.Cryptography.ECDiffieHellman.PublicKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi az aktuális elliptikus görbe Diffie-Hellman (ECDH) példány által használt nyilvános kulcsot."
  syntax:
    content: public abstract System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }
    return:
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A ECDH kulcspár, amelyet éppen használja ezt a nyilvános részét <xref href=&quot;System.Security.Cryptography.ECDiffieHellman&quot;> </xref> példány."
  overload: System.Security.Cryptography.ECDiffieHellman.PublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.ECDiffieHellman
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: ECDiffieHellman.SignatureAlgorithm
  fullName: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi az aláírási algoritmus neve."
  remarks: "Ez a tulajdonság <xref:System.Security.Cryptography.AsymmetricAlgorithm>Alap osztályból</xref:System.Security.Cryptography.AsymmetricAlgorithm> öröklődik       Az elliptikus görbe Diffie-Hellman (ECDH) algoritmus használt kulcs származtatását nem digitális aláírások generálása. Ezért ezt a tulajdonságot ad `null`."
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Security.Cryptography.ECDiffieHellman.#ctor
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: ECDiffieHellman()
  nameWithType: ECDiffieHellman.ECDiffieHellman()
  fullName: System.Security.Cryptography.ECDiffieHellman.ECDiffieHellman()
- uid: System.Security.Cryptography.ECDiffieHellman.Create
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: Create()
  nameWithType: ECDiffieHellman.Create()
  fullName: System.Security.Cryptography.ECDiffieHellman.Create()
- uid: System.Security.Cryptography.ECDiffieHellman
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellman
  nameWithType: ECDiffieHellman
  fullName: System.Security.Cryptography.ECDiffieHellman
- uid: System.Security.Cryptography.ECDiffieHellman.Create(System.String)
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: Create(String)
  nameWithType: ECDiffieHellman.Create(String)
  fullName: System.Security.Cryptography.ECDiffieHellman.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)
  nameWithType: ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanPublicKey
  nameWithType: ECDiffieHellmanPublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  nameWithType: ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])
  nameWithType: ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[])
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  nameWithType: ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  nameWithType: ECDiffieHellman.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
- uid: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: ECDiffieHellman.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.ECDiffieHellman.PublicKey
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: PublicKey
  nameWithType: ECDiffieHellman.PublicKey
  fullName: System.Security.Cryptography.ECDiffieHellman.PublicKey
- uid: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: ECDiffieHellman.SignatureAlgorithm
  fullName: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm
- uid: System.Security.Cryptography.ECDiffieHellman.#ctor*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: ECDiffieHellman
  nameWithType: ECDiffieHellman.ECDiffieHellman
- uid: System.Security.Cryptography.ECDiffieHellman.Create*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: Create
  nameWithType: ECDiffieHellman.Create
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyFromHash
  nameWithType: ECDiffieHellman.DeriveKeyFromHash
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyFromHmac
  nameWithType: ECDiffieHellman.DeriveKeyFromHmac
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyMaterial
  nameWithType: ECDiffieHellman.DeriveKeyMaterial
- uid: System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: DeriveKeyTls
  nameWithType: ECDiffieHellman.DeriveKeyTls
- uid: System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: ECDiffieHellman.KeyExchangeAlgorithm
- uid: System.Security.Cryptography.ECDiffieHellman.PublicKey*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: PublicKey
  nameWithType: ECDiffieHellman.PublicKey
- uid: System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm*
  parent: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: ECDiffieHellman.SignatureAlgorithm
