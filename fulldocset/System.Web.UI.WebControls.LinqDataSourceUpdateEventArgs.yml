### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  id: LinqDataSourceUpdateEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  - System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)
  - System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject
  - System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject
  langs:
  - csharp
  name: LinqDataSourceUpdateEventArgs
  nameWithType: LinqDataSourceUpdateEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  type: Class
  summary: "Adja meg az adatait a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Updating&quot;> </xref> esemény."
  remarks: "A LinqDataSourceUpdateEventArgs objektum bármely eseménykezelője továbbítódik a <xref:System.Web.UI.WebControls.LinqDataSource.Updating>esemény.</xref:System.Web.UI.WebControls.LinqDataSource.Updating> A LinqDataSourceUpdateEventArgs objektum segítségével az adatok vizsgálatát, az adatforrás a frissítési művelet végrehajtása előtt. Ezután érvényesíteni az adatokat, vizsgálja meg az adatok osztály által kiváltott kivételekre is érvényesítési, vagy módosítsa egy értéket a frissítése előtt. A frissítési művelet is megszakítható.       A <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A>objektum tartalmazza az adatokat eredetileg beolvasott az adatforrásból.</xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> A <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A>objektumhoz az update művelet során az adatforrás mentett adatokat tartalmazza.</xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A>       Ha az adatforrást képviselő objektum az adatokat, a <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A>tulajdonsága tartalmazza az <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>osztály</xref:System.Web.UI.WebControls.LinqDataSourceValidationException> példányának</xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> frissítése előtt érvényesítési kivételt okoz Keresztül érvényesítési kivételek kérheti le a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> Ha nincs érvényesítési kivételt vált ki, a <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A>tulajdonsága tartalmazza `null`.</xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> Az érvényesítési kivételek kezelése, és nem szeretné újra okozhat kivételt, akkor a <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A>tulajdonságot `true`.</xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A>       Alapértelmezés szerint a <xref:System.Web.UI.WebControls.LinqDataSource>állapot vezérlő tárolókat az eredeti értékeket az adatforrásból megtekintési weblapon, kivéve azokat, amelynek <xref:System.Data.Linq.Mapping.ColumnAttribute>attribútummal van megjelölve, `UpdateCheck.Never`.</xref:System.Data.Linq.Mapping.ColumnAttribute> </xref:System.Web.UI.WebControls.LinqDataSource> &quot;LINQ to SQL&quot; az adatok integritásának automatikusan ellenőrzi az adatok frissítése előtt. Ennek érdekében a nézetállapot tulajdonságban tárolt eredeti értékekben az adatforrás az aktuális értékek összehasonlítása. &quot;LINQ to SQL&quot; kivétel riasztást, ha az adatforrás értékek megváltoztak. Hozzon létre egy hibakezelőt hajthat végre a további adatok érvényesítése a <xref:System.Web.UI.WebControls.LinqDataSource.Updating>esemény.</xref:System.Web.UI.WebControls.LinqDataSource.Updating>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed. If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_352_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_352_1.cs)]  \n  \n The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: 'public class LinqDataSourceUpdateEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  langs:
  - csharp
  name: LinqDataSourceUpdateEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs(LinqDataSourceValidationException)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&quot;> </xref> osztály a megadott kivétel miatt."
  syntax:
    content: public LinqDataSourceUpdateEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);
    parameters:
    - id: exception
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "A kivétel történt az adatok frissítéséhez."
  overload: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)
  id: '#ctor(System.Object,System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  langs:
  - csharp
  name: LinqDataSourceUpdateEventArgs(Object,Object)
  nameWithType: LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs(Object,Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&quot;> </xref> osztály."
  syntax:
    content: public LinqDataSourceUpdateEventArgs (object originalObject, object newObject);
    parameters:
    - id: originalObject
      type: System.Object
      description: "A megadott típusú objektum a <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>tulajdonság, amely a kezdeti értékeket tartalmaz, amelyek az adatforrásból lettek Beszerezve.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
    - id: newObject
      type: System.Object
      description: "A megadott típusú objektum a <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>tulajdonság, amely tartalmazza az értékeket, amelyeket a rendszer menti az adatforrás.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceUpdateEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi a kivétel lépett fel, amíg az adatok a frissítési művelet előtt ellenőrzésekor."
  remarks: "Ha egy érvényesítési kivétel a frissítési művelet végrehajtása előtt következik be, a kivétel az Exception tulajdonság tárolódik. Az eseménykezelő a <xref:System.Web.UI.WebControls.LinqDataSource.Updating>esemény, kérheti le a kivétel a kivétel tulajdonságon keresztül.</xref:System.Web.UI.WebControls.LinqDataSource.Updating>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }
    return:
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: "A kivétel, ha hiba történt; Ellenkező esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceUpdateEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a kivétel kezelése történt meg, és, hogy azt nem okozhat újra."
  remarks: "Az eseménykezelő hozhat létre a <xref:System.Web.UI.WebControls.LinqDataSource.Updating>esemény a frissítési művelet előtt történt érvényesítés kivételek vizsgálata.</xref:System.Web.UI.WebControls.LinqDataSource.Updating> A kivétel kezeléséhez, és nem szeretné, hogy újra kell-e fel, ha a tulajdonsága ExceptionHandled `true`. Ha nem állít a ExceptionHandled tulajdonság `true`, a kivétel a következő eseménykezelő a hívási veremben propagálódik."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kivétel látta; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject
  id: NewObject
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  langs:
  - csharp
  name: NewObject
  nameWithType: LinqDataSourceUpdateEventArgs.NewObject
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az objektum, amely tartalmazza az értékeket, amelyeket az adatforrás a rendszer menti."
  remarks: "Az eseménykezelő létrehozása a <xref:System.Web.UI.WebControls.LinqDataSource.Updating>esemény és az adatok érvényesítéséhez a NewObject tulajdonság lekérése.</xref:System.Web.UI.WebControls.LinqDataSource.Updating> Is változtatja meg az adatokat, vagy szakítsa meg a frissítési műveletet."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the NewObject property to determine whether the value in the `Category` property has changed. If so, the `CategoryChanged` property of the object in the NewObject property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1298_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1298_1.cs)]"
  syntax:
    content: public object NewObject { get; }
    return:
      type: System.Object
      description: "A megadott típusú objektum a <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>tulajdonság, amely tartalmazza az adatok mentése.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject
  id: OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  langs:
  - csharp
  name: OriginalObject
  nameWithType: LinqDataSourceUpdateEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az objektum, amely tartalmazza az értékeket, amelyek eredetileg lekérése az adatforrásból."
  remarks: "A OriginalObject tulajdonsággal ellenőrizze az eredeti értékeket az aktuális értékekkel, az adatforrás és a szakítsa meg a frissítési műveletet, vagy más beavatkozást.       A tulajdonság csak a tulajdonságokhoz értékeket tartalmaz OriginalObject állandó megtekintési állapota a weblapon. Ilyen körülmények megőrződjenek tulajdonság: – Ha az adathoz kötött vezérlő megjelenik.      – Amikor a <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=fullName>tulajdonsága a <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=fullName>attribútum értéke `Always` vagy `WhenChanged`.</xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=fullName> </xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=fullName>       Ha a <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A>tulajdonsága `Never` és adathoz kötött vezérlő nem jelenik meg az értéket, az érték nem tárolja a weblapon.</xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> Ebben az esetben azt nem lehet hozzárendelni a OriginalObject tulajdonság."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. The example shows how to compare properties from the OriginalObject property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed. If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_761_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_761_1.cs)]"
  syntax:
    content: public object OriginalObject { get; }
    return:
      type: System.Object
      description: "A megadott típusú objektum a <xref:System.Web.UI.WebControls.LinqDataSource.TableName*>tulajdonság, amely tartalmazza az adatokat az adatforrásból beolvasott.</xref:System.Web.UI.WebControls.LinqDataSource.TableName*>"
  overload: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: LinqDataSourceUpdateEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs(LinqDataSourceValidationException)
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs(LinqDataSourceValidationException)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: LinqDataSourceUpdateEventArgs(Object,Object)
  nameWithType: LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs(Object,Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs(Object,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceUpdateEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceUpdateEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: NewObject
  nameWithType: LinqDataSourceUpdateEventArgs.NewObject
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceUpdateEventArgs.OriginalObject
  fullName: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: LinqDataSourceUpdateEventArgs
  nameWithType: LinqDataSourceUpdateEventArgs.LinqDataSourceUpdateEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceUpdateEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceUpdateEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject*
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: NewObject
  nameWithType: LinqDataSourceUpdateEventArgs.NewObject
- uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject*
  parent: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
  isExternal: false
  name: OriginalObject
  nameWithType: LinqDataSourceUpdateEventArgs.OriginalObject
