### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  id: SrgsOneOf
  children:
  - System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor
  - System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])
  - System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])
  - System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)
  - System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items
  langs:
  - csharp
  name: SrgsOneOf
  nameWithType: SrgsOneOf
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  type: Class
  summary: "Alternatív szavakat vagy kifejezéseket, bármelyik, amelyek bemeneti kereséséhez használható listáját jelöli."
  remarks: "Egy SrgsOneOf objektum alternatív szavakat vagy kifejezéseket, amikor szóbeli felismerhető, amelyek közül listáját tartalmazza. A tömbök alternatívák listák hozhat létre <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>objektumok vagy tömbök <xref:System.String>objektumok.</xref:System.String> </xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> Használja a <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items%2A>tulajdonság eléréséhez a helyettesítő elem a listán.</xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items%2A>       A SrgsOneOf osztály pedig a `one-of` a World Wide Web Consortium (W3C) elem [Beszéd felismerés nyelvtan Specification (SRGS) 1.0-s verziója](http://go.microsoft.com/fwlink/?LinkId=201761). További információ az SRGS `one-of` elem és System.Speech, amelyet a támogatással kapcsolatos részleteket lásd: [egy-elem](http://msdn.microsoft.com/en-us/643cee6b-5082-46ea-9fc1-9f3646a95801)."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsOneOf/OneOfDebugDisplay))]

      public class SrgsOneOf : System.Speech.Recognition.SrgsGrammar.SrgsElement
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Speech.Recognition.SrgsGrammar.SrgsElement
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  langs:
  - csharp
  name: SrgsOneOf()
  nameWithType: SrgsOneOf.SrgsOneOf()
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.SrgsOneOf()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsOneOf&quot;> </xref> osztály."
  remarks: ''
  example:
  - "The following example uses the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> element to build lists of <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> elements containing country names, any one of which may be used to recognize the containing phrase. The example then adds one of the resulting <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> objects to their respective rules for European countries and South American countries. Further on, the example uses the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object to group rule references to `ruleEurope` and `ruleSAmerica` into a list of two alternatives, either one of which may be used to recognize spoken input.  \n  \n```  \npublic void WorldSoccerWinners ()  \n{  \n  \n  // Create an SrgsDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument document = new SrgsDocument();  \n  SrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"),   \n    new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"),   \n    new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the document and make winnerRule   \n  // the root rule of the document.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  document.Root = winnerRule;  \n}  \n  \n```"
  syntax:
    content: public SrgsOneOf ();
    parameters: []
  overload: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  langs:
  - csharp
  name: SrgsOneOf(SrgsItem[])
  nameWithType: SrgsOneOf.SrgsOneOf(SrgsItem[])
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.SrgsOneOf(SrgsItem[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsOneOf&quot;> </xref> tömbje osztály <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsItem&quot;> </xref> objektumok."
  remarks: ''
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. It creates a public rule named `WorldCupWinner`. It then creates two <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> objects using <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> objects that contain arrays of new <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objects. To see the grammar that this example generates, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A>.  \n  \n```c#  \n public void WorldSoccerWinners ()  \n{  \n  \n  // Create an SrgsDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument document = new SrgsDocument();  \n  SrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"), new SrgsItem(\"France\"), new SrgsItem(\"Germany\"), new SrgsItem(\"Italy\")});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"), new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the document and make winnerRule   \n  // the root rule of the document.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  document.Root = winnerRule;  \n}  \n```"
  syntax:
    content: public SrgsOneOf (System.Speech.Recognition.SrgsGrammar.SrgsItem[] items);
    parameters:
    - id: items
      type: System.Speech.Recognition.SrgsGrammar.SrgsItem[]
      description: "Az alternatív elemek hozzáadásához."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>items</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       Bármely elem a <code>items</code> tömb <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  langs:
  - csharp
  name: SrgsOneOf(String[])
  nameWithType: SrgsOneOf.SrgsOneOf(String[])
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.SrgsOneOf(String[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsOneOf&quot;> </xref> tömbje osztály <xref:System.String>objektumok.</xref:System.String>"
  remarks: ''
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. The example uses the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> element to build lists of acceptable country names from an array of <xref:System.String> objects. The example then adds one of the resulting <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> objects to their respective rules for European countries and South American countries.  \n  \n```  \npublic void WorldSoccerWinners ()  \n{  \n    // Create a grammar from an SRGSDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument srgsGrammar = new SrgsDocument ();  \n  SrgsRule winnerRule = new SrgsRule (\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add (new SrgsItem (\"A nation that has won the world cup is\"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf (new string[] {\"England\",\"France\",\"Germany\",\"Italy\"});  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf (new string[] {\"Argentina\",\"Brazil\",\"Uruguay\"});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the grammar and make winnerRule  \n  // the root rule of the grammar.  \n  srgsGrammar.Rules.Add (new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  srgsGrammar.Root = winnerRule;  \n}  \n```"
  syntax:
    content: public SrgsOneOf (string[] items);
    parameters:
    - id: items
      type: System.String[]
      description: "Az alternatív elemek hozzáadásához."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>items</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       Bármely elem a <code>items</code> tömb <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)
  id: Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  langs:
  - csharp
  name: Add(SrgsItem)
  nameWithType: SrgsOneOf.Add(SrgsItem)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(SrgsItem)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Hozzáad egy <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsItem&quot;> </xref> tartalmazó egy szót vagy kifejezést az alternatív listájához."
  remarks: ''
  example:
  - "The following example creates a grammar that recognizes the phrase \"A nation that has won the World Cup is\" followed by the name of a country that has won the World Cup. The example uses the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object to build lists of acceptable country names from an array of <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> objects. Using the Add method, the example appends an <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> that contains the string \"Italy\" to the <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> object `oneOfEurope`.  \n  \n```  \npublic void WorldSoccerWinners ()  \n{  \n  \n  // Create an SrgsDocument, create a new rule  \n  // and set its scope to public.  \n  SrgsDocument document = new SrgsDocument();  \n  SrgsRule winnerRule = new SrgsRule(\"WorldCupWinner\");  \n  winnerRule.Scope = SrgsRuleScope.Public;  \n  \n  // Add the introduction.  \n  winnerRule.Elements.Add(new SrgsItem(\"A nation that has won the world cup is: \"));  \n  \n  // Create the rule for the European nations.  \n  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"England\"),   \n    new SrgsItem(\"France\"), new SrgsItem(\"Germany\")});  \n  oneOfEurope.Add(new SrgsItem(\"Italy\"));  \n  SrgsRule ruleEurope = (new SrgsRule(\"EuropeanNations\", new SrgsElement[] {oneOfEurope}));  \n  \n  // Create the rule for the South American nations.  \n  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem(\"Argentina\"),   \n    new SrgsItem(\"Brazil\"), new SrgsItem(\"Uruguay\")});  \n  SrgsRule ruleSAmerica = (new SrgsRule(\"SouthAmericanNations\", new SrgsElement[] {oneOfSAmerica}));  \n  \n  // Add references to winnerRule for ruleEurope and ruleSAmerica.  \n  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   \n    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  \n  \n  // Add all the rules to the document and make winnerRule   \n  // the root rule of the document.  \n  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  \n  document.Root = winnerRule;  \n}  \n```"
  syntax:
    content: public void Add (System.Speech.Recognition.SrgsGrammar.SrgsItem item);
    parameters:
    - id: item
      type: System.Speech.Recognition.SrgsGrammar.SrgsItem
      description: "Az elem hozzáadása a listához alternatívák."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items
  id: Items
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  langs:
  - csharp
  name: Items
  nameWithType: SrgsOneOf.Items
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "A listában szereplő összes alternatívák lekérdezi a <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsOneOf&quot;> </xref> elemet."
  remarks: "Az alternatív szavak és kifejezések tulajdonság lehetséges, hogy nincsenek hozzáadva a <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>vagy <xref:System.String>objektumok.</xref:System.String> </xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> </xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.SrgsGrammar.SrgsItem> Items { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.SrgsGrammar.SrgsItem}
      description: "Alternatívák listáját adja vissza."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
  isExternal: false
  name: System.Speech.Recognition.SrgsGrammar.SrgsElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  isExternal: false
  name: SrgsOneOf()
  nameWithType: SrgsOneOf.SrgsOneOf()
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.SrgsOneOf()
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  isExternal: false
  name: SrgsOneOf(SrgsItem[])
  nameWithType: SrgsOneOf.SrgsOneOf(SrgsItem[])
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.SrgsOneOf(SrgsItem[])
- uid: System.Speech.Recognition.SrgsGrammar.SrgsItem[]
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsItem
  nameWithType: SrgsItem
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsItem[]
  spec.csharp:
  - uid: System.Speech.Recognition.SrgsGrammar.SrgsItem
    name: SrgsItem
    nameWithType: SrgsItem
    fullName: SrgsItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  isExternal: false
  name: SrgsOneOf(String[])
  nameWithType: SrgsOneOf.SrgsOneOf(String[])
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.SrgsOneOf(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  isExternal: false
  name: Add(SrgsItem)
  nameWithType: SrgsOneOf.Add(SrgsItem)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(SrgsItem)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsItem
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsItem
  nameWithType: SrgsItem
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsItem
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  isExternal: false
  name: Items
  nameWithType: SrgsOneOf.Items
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.SrgsGrammar.SrgsItem}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<SrgsItem>
  nameWithType: Collection<SrgsItem>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.SrgsGrammar.SrgsItem>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.SrgsGrammar.SrgsItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SrgsGrammar.SrgsItem
    name: SrgsItem
    nameWithType: SrgsItem
    fullName: SrgsItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  isExternal: false
  name: SrgsOneOf
  nameWithType: SrgsOneOf.SrgsOneOf
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  isExternal: false
  name: Add
  nameWithType: SrgsOneOf.Add
- uid: System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsOneOf
  isExternal: false
  name: Items
  nameWithType: SrgsOneOf.Items
