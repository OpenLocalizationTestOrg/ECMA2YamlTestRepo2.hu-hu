### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelationCollection
  id: DataRelationCollection
  children:
  - System.Data.DataRelationCollection.#ctor
  - System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  - System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  - System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Clear
  - System.Data.DataRelationCollection.CollectionChanged
  - System.Data.DataRelationCollection.Contains(System.String)
  - System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  - System.Data.DataRelationCollection.GetDataSet
  - System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  - System.Data.DataRelationCollection.IndexOf(System.String)
  - System.Data.DataRelationCollection.Item(System.Int32)
  - System.Data.DataRelationCollection.Item(System.String)
  - System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Remove(System.String)
  - System.Data.DataRelationCollection.RemoveAt(System.Int32)
  - System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  langs:
  - csharp
  name: DataRelationCollection
  nameWithType: DataRelationCollection
  fullName: System.Data.DataRelationCollection
  type: Class
  summary: "A gyűjteményét képviseli <xref href=&quot;System.Data.DataRelation&quot;> </xref> ezen objektumok <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: "Egy DataRelationCollection objektum lehetővé teszi, hogy a kapcsolódó szülő-gyermek közötti <xref:System.Data.DataTable>objektumok.</xref:System.Data.DataTable>       A következők tulajdonság megadásával DataRelationCollection objektumot hoz létre a <xref:System.Data.DataSet>vagy a <xref:System.Data.DataTable>, ahelyett, hogy egy konstruktor közvetlen használatával.</xref:System.Data.DataTable> </xref:System.Data.DataSet> (Használja a <xref:System.Data.DataSet.Relations%2A>tulajdonsága a <xref:System.Data.DataSet>, vagy a <xref:System.Data.DataTable.ParentRelations%2A>tulajdonsága a <xref:System.Data.DataTable>.)</xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>       A gyűjtemény eléréséhez használja a <xref:System.Data.DataSet.Relations%2A>tulajdonsága a <xref:System.Data.DataSet>objektum.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>       Amint a gyűjtemény létezik kezelheti a metódusok, mint a benne lévő objektumokat <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>, és <xref:System.Data.DataRelationCollection.Remove%2A>.</xref:System.Data.DataRelationCollection.Remove%2A> </xref:System.Data.DataRelationCollection.Clear%2A> </xref:System.Data.DataRelationCollection.Add%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.DefaultProperty("Table")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class DataRelationCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.List
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataRelationCollection.#ctor
  id: '#ctor'
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> osztály."
  syntax:
    content: protected DataRelationCollection ();
    parameters: []
  overload: System.Data.DataRelationCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  id: Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adds a <xref href=&quot;System.Data.DataRelation&quot;></xref> to the <xref href=&quot;System.Data.DataRelationCollection&quot;></xref>."
  remarks: "Ha a kapcsolat sikeresen hozzáadta a gyűjteményhez, a <xref:System.Data.DataRelationCollection.CollectionChanged>esemény akkor következik be.</xref:System.Data.DataRelationCollection.CollectionChanged>       Ha egy <xref:System.Data.DataRelation>objektum hozzáadódik a gyűjtemény <xref:System.Data.ForeignKeyConstraint>és <xref:System.Data.UniqueConstraint>objektum alapértelmezés szerint jön létre, ha még nem léteznek.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public void Add (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "A <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> hozzáadására a gyűjteményhez."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> relation </code> paramétere null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A reláció már szerepel ebben a gyűjteményben, vagy egy másik gyűjteményhez tartozik."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A gyűjtemény már tartalmaz egy kapcsolat a megadott névvel. (A eredményű összehasonlítás esetén nem nagybetűk különbözőnek számítanak.)"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A kapcsolat létrehozása óta került állapota érvénytelen."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Létrehoz egy <xref href=&quot;System.Data.DataRelation&quot;> </xref> a megadott szülő és gyermek oszlop, és hozzáadja azt a gyűjteményt."
  remarks: "Ha egy <xref:System.Data.DataRelation>objektum hozzáadódik a gyűjtemény <xref:System.Data.ForeignKeyConstraint>és <xref:System.Data.UniqueConstraint>objektum alapértelmezés szerint jön létre, ha még nem léteznek.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: parentColumn
      type: System.Data.DataColumn
      description: "A kapcsolat a szülő oszlopában."
    - id: childColumn
      type: System.Data.DataColumn
      description: "A kapcsolat gyermekoszlop."
    return:
      type: System.Data.DataRelation
      description: "A létrehozott kapcsolat."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Létrehoz egy <xref href=&quot;System.Data.DataRelation&quot;> </xref> a megadott szülő és gyermek oszlopok, és hozzáadja azt a gyűjteményt."
  remarks: "Ha egy <xref:System.Data.DataRelation>objektum hozzáadódik a gyűjtemény <xref:System.Data.ForeignKeyConstraint>és <xref:System.Data.UniqueConstraint>objektum alapértelmezés szerint jön létre, ha még nem léteznek.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "A kapcsolat a szülő oszlopokat."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "A reláció gyermekoszlopait."
    return:
      type: System.Data.DataRelation
      description: "A létrehozott kapcsolat."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> relation </code> argumentum null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A reláció már szerepel ebben a gyűjteményben, vagy egy másik gyűjteményhez tartozik."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A gyűjtemény már tartalmaz egy azonos nevű kapcsolat. (A eredményű összehasonlítás esetén nem nagybetűk különbözőnek számítanak.)"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A kapcsolat létrehozása óta került állapota érvénytelen."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Létrehoz egy <xref href=&quot;System.Data.DataRelation&quot;> </xref> a megadott névvel, és a szülő és gyermek oszlopok, és hozzáadja azt a gyűjteményt."
  remarks: "Ha egy <xref:System.Data.DataRelation>objektum hozzáadódik a gyűjtemény <xref:System.Data.ForeignKeyConstraint>és <xref:System.Data.UniqueConstraint>objektum alapértelmezés szerint jön létre, ha még nem léteznek.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: name
      type: System.String
      description: "A kapcsolat neve."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "A kapcsolat a szülő oszlopában."
    - id: childColumn
      type: System.Data.DataColumn
      description: "A kapcsolat gyermekoszlop."
    return:
      type: System.Data.DataRelation
      description: "A létrehozott kapcsolat."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Létrehoz egy <xref href=&quot;System.Data.DataRelation&quot;> </xref> a megadott névvel és a szülő és gyermek oszlopok, tömbök és hozzáadja azt a gyűjteményt."
  remarks: "Ha a kapcsolat sikeresen hozzáadta a gyűjteményhez, a <xref:System.Data.DataRelationCollection.CollectionChanged>esemény akkor következik be.</xref:System.Data.DataRelationCollection.CollectionChanged>       Ha egy <xref:System.Data.DataRelation>objektum hozzáadódik a gyűjtemény <xref:System.Data.ForeignKeyConstraint>és <xref:System.Data.UniqueConstraint>objektum alapértelmezés szerint jön létre, ha még nem léteznek.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  example:
  - >-
    [!code-vb[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/visualbasic/6b73537f-f1c2-4f94-8352-_1.vb)]
     [!code-cs[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/csharp/6b73537f-f1c2-4f94-8352-_1.cs)]
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: name
      type: System.String
      description: "Neve a <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> létrehozásához."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "A szülő tömbjét <xref href=&quot;System.Data.DataColumn&quot;> </xref> objektumok."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "A gyermek tömbjét <xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;> </xref> objektumok."
    return:
      type: System.Data.DataRelation
      description: "A létrehozott <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kapcsolat neve null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A reláció már szerepel ebben a gyűjteményben, vagy egy másik gyűjteményhez tartozik."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A gyűjtemény már tartalmaz egy azonos nevű kapcsolat. (A eredményű összehasonlítás esetén nem nagybetűk különbözőnek számítanak.)"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A kapcsolat létrehozása óta került állapota érvénytelen."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Létrehoz egy <xref href=&quot;System.Data.DataRelation&quot;> </xref> oszlopokkal a megadott név szülő-gyermek, az érték nem kötelező korlátozásokkal a <code> createConstraints </code> paramétert, és hozzáadja azt a gyűjteményt."
  remarks: "Ha egy <xref:System.Data.DataRelation>objektum hozzáadódik a gyűjtemény <xref:System.Data.ForeignKeyConstraint>és <xref:System.Data.UniqueConstraint>objektum alapértelmezés szerint jön létre, ha még nem léteznek.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation> Ennek megelőzése érdekében beállíthatja `createConstraints` false értékre."
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "A kapcsolat neve."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "A kapcsolat a szülő oszlopában."
    - id: childColumn
      type: System.Data.DataColumn
      description: "A kapcsolat gyermekoszlop."
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>megkötést; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. (Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
    return:
      type: System.Data.DataRelation
      description: "A létrehozott kapcsolat."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Létrehoz egy <xref href=&quot;System.Data.DataRelation&quot;> </xref> a megadott név, a szülő és gyermek oszlopok és érték megadásával létrehozásának egy megkötést, tömbök és hozzáadja azt a gyűjteményt."
  remarks: "Ha egy <xref:System.Data.DataRelation>objektum hozzáadódik a gyűjtemény <xref:System.Data.ForeignKeyConstraint>és <xref:System.Data.UniqueConstraint>objektum alapértelmezés szerint jön létre, ha még nem léteznek.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "Neve a <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> létrehozásához."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "A szülő tömbjét <xref href=&quot;System.Data.DataColumn&quot;> </xref> objektumok."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "A gyermek tömbjét <xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;> </xref> objektumok."
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a korlátozás; létrehozása Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Data.DataRelation
      description: "A létrehozott kapcsolat."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kapcsolat neve null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A reláció már szerepel ebben a gyűjteményben, vagy egy másik gyűjteményhez tartozik."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A gyűjtemény már tartalmaz egy azonos nevű kapcsolat. (A eredményű összehasonlítás esetén nem nagybetűk különbözőnek számítanak.)"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "A kapcsolat létrehozása óta került állapota érvénytelen."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  id: AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A tábla ellenőrzést végez."
  syntax:
    content: protected virtual void AddCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "A kapcsolat ellenőrzéséhez."
  overload: System.Data.DataRelationCollection.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kapcsolat értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A reláció már szerepel ebben a gyűjteményben, vagy egy másik gyűjteményhez tartozik."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A gyűjtemény már tartalmaz egy azonos nevű kapcsolat. (A eredményű összehasonlítás esetén nem nagybetűk különbözőnek számítanak.)"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  id: AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Másolja át a megadott elemeinek <xref href=&quot;System.Data.DataRelation&quot;> </xref> tömbben a gyűjtemény végéig."
  remarks: "Ha <xref:System.Data.DataSet.BeginInit%2A>hívása történt, `AddRange` objektumokat nem adja hozzá a gyűjtésének <xref:System.Data.DataSet.EndInit%2A>nevezik.</xref:System.Data.DataSet.EndInit%2A> </xref:System.Data.DataSet.BeginInit%2A> A időpontban, amely `EndInit` van neve, a gyűjtemény tölti fel a cikkeket, a legutóbbi hívásában megadott `AddRange`. Ha `AddRange` belül több alkalommal nevezik egy `BeginInit`  /  `EndInit` feladatütemezési, csak a legutóbbi hívásában megadott elemeinek `AddRange` kerülnek."
  example:
  - >-
    [!code-cs[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_0_1.cs)]
     [!code-vb[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_0_1.vb)]
  syntax:
    content: public virtual void AddRange (System.Data.DataRelation[] relations);
    parameters:
    - id: relations
      type: System.Data.DataRelation[]
      description: "A tömb <xref href=&quot;System.Data.DataRelation&quot;> </xref> objektumok hozzáadására a gyűjteményhez."
  overload: System.Data.DataRelationCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  id: CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ellenőrzi, hogy a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref> távolíthatja el a gyűjteményből."
  syntax:
    content: public virtual bool CanRemove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "A kapcsolat végrehajtani az ellenőrzést ellen."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.DataRelation&quot;> </xref> eltávolított; ellenkező esetben lehet <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Clear
  id: Clear
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Törli a gyűjtemény kapcsolatokra."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Data.DataRelationCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A gyűjtemény megváltozásakor következik be."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ellenőrzi, hogy egy <xref href=&quot;System.Data.DataRelation&quot;> </xref> a megadott névvel (kis-és nagybetűket) szerepel a gyűjteményben."
  syntax:
    content: public virtual bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "Található kapcsolat neve."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, ha a kapcsolat a megadott névvel már létezik; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  id: CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Másolja át a gyűjteménye <xref href=&quot;System.Data.DataRelation&quot;> </xref> a megadott indextől kezdődő objektumok."
  syntax:
    content: public void CopyTo (System.Data.DataRelation[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataRelation[]
      description: "A tömb <xref href=&quot;System.Data.DataRelation&quot;> </xref> objektumok másolása a gyűjteményben."
    - id: index
      type: System.Int32
      description: "Az index indítását."
  overload: System.Data.DataRelationCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.GetDataSet
  id: GetDataSet
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ez a metódus támogatja a .NET-keretrendszer infrastruktúráját, és nem javasolt közvetlenül a kódból használni."
  syntax:
    content: protected abstract System.Data.DataSet GetDataSet ();
    parameters: []
    return:
      type: System.Data.DataSet
      description: "A hivatkozott adatkészlet."
  overload: System.Data.DataRelationCollection.GetDataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  id: IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a megadott indexét <xref href=&quot;System.Data.DataRelation&quot;> </xref> objektum."
  syntax:
    content: public virtual int IndexOf (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "A kapcsolat kereséséhez."
    return:
      type: System.Int32
      description: "A 0-alapú index az kapcsolat vagy 1 értéket, ha a kapcsolat nem található a gyűjteményben."
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a indexe a <xref href=&quot;System.Data.DataRelation&quot;> </xref> megadott."
  syntax:
    content: public virtual int IndexOf (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "Található kapcsolat neve."
    return:
      type: System.Int32
      description: "A kapcsolat a megadott névvel vagy&1; értéket, ha a kapcsolat nem létezik a gyűjteményben lévő nulla alapú indexét."
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a <xref href=&quot;System.Data.DataRelation&quot;> </xref> objektum a megadott indexnél."
  syntax:
    content: public abstract System.Data.DataRelation this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét kereséséhez."
    return:
      type: System.Data.DataRelation
      description: "A <xref href=&quot;System.Data.DataRelation&quot;> </xref>, vagy a rendszer null értéket, ha a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref> nem létezik."
  overload: System.Data.DataRelationCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Az index értéke nagyobb, mint a gyűjteményben lévő elemek száma."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Lekérdezi a <xref href=&quot;System.Data.DataRelation&quot;> </xref> megadott objektumot."
  syntax:
    content: public abstract System.Data.DataRelation this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Található kapcsolat neve."
    return:
      type: System.Data.DataRelation
      description: "A nevesített <xref href=&quot;System.Data.DataRelation&quot;> </xref>, vagy a rendszer null értéket, ha a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref> nem létezik."
  overload: System.Data.DataRelationCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kiváltja a <xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;> </xref> esemény."
  remarks: 'Az eseménykezelő keresztül egy delegált esemény indítása hív meg. Megtudhatja, [NIB: esemény indítása](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Data.DataRelationCollection.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Kiváltja a <xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;> </xref> esemény."
  remarks: 'Az eseménykezelő keresztül egy delegált esemény indítása hív meg. Megtudhatja, [NIB: esemény indítása](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Data.DataRelationCollection.OnCollectionChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  id: Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A megadott kapcsolat eltávolítása a gyűjteményben."
  remarks: "A <xref:System.Data.DataRelationCollection.CollectionChanged>esemény lép működésbe, ha az eltávolítási művelet sikeres.</xref:System.Data.DataRelationCollection.CollectionChanged> Vegye figyelembe, hogy a kapcsolat eltávolítása nem távolítja el minden társított megkötést objektumok."
  syntax:
    content: public void Remove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "A kapcsolat eltávolítása."
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kapcsolat értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A reláció nem tartozik a gyűjteményben."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A megadott nevű kapcsolat eltávolítása a gyűjteményben."
  remarks: "A <xref:System.Data.DataRelationCollection.CollectionChanged>esemény lép működésbe, ha az eltávolítási művelet sikeres.</xref:System.Data.DataRelationCollection.CollectionChanged>"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "A kapcsolat eltávolítása a neve."
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A gyűjteményhez nem tartozik egy kapcsolat a megadott névvel."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "A kapcsolat a megadott indexpozíciónál eltávolítja a gyűjteményből."
  remarks: "A <xref:System.Data.DataRelationCollection.CollectionChanged>esemény lép működésbe, ha az eltávolítási művelet sikeres.</xref:System.Data.DataRelationCollection.CollectionChanged>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A kapcsolat eltávolítása az index."
  overload: System.Data.DataRelationCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A gyűjteményhez nem tartozik egy kapcsolat a megadott indexnél."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  id: RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ellenőrzést végez a megadott <xref href=&quot;System.Data.DataRelation&quot;> </xref> objektum."
  syntax:
    content: protected virtual void RemoveCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "A <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> objektum ellenőrzése."
  overload: System.Data.DataRelationCollection.RemoveCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A gyűjteményhez nem tartozik egy kapcsolat a megadott indexnél."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott reláció nem tartozik ehhez a gyűjteményhez, vagy egy másik gyűjteményhez tartozik."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataRelationCollection.#ctor
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
- uid: System.Data.DataRelation[]
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation[]
  spec.csharp:
  - uid: System.Data.DataRelation
    name: DataRelation
    nameWithType: DataRelation
    fullName: DataRelation[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
- uid: System.Data.DataRelationCollection.Clear
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
- uid: System.Data.DataRelationCollection.CollectionChanged
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataRelationCollection.Contains(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRelationCollection.GetDataSet
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
- uid: System.Data.DataRelationCollection.Item(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
- uid: System.Data.DataRelationCollection.Remove(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
- uid: System.Data.DataRelationCollection.#ctor*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection
  nameWithType: DataRelationCollection.DataRelationCollection
- uid: System.Data.DataRelationCollection.Add*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add
  nameWithType: DataRelationCollection.Add
- uid: System.Data.DataRelationCollection.AddCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore
  nameWithType: DataRelationCollection.AddCore
- uid: System.Data.DataRelationCollection.AddRange*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange
  nameWithType: DataRelationCollection.AddRange
- uid: System.Data.DataRelationCollection.CanRemove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataRelationCollection.CanRemove
- uid: System.Data.DataRelationCollection.Clear*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear
  nameWithType: DataRelationCollection.Clear
- uid: System.Data.DataRelationCollection.Contains*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains
  nameWithType: DataRelationCollection.Contains
- uid: System.Data.DataRelationCollection.CopyTo*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataRelationCollection.CopyTo
- uid: System.Data.DataRelationCollection.GetDataSet*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet
  nameWithType: DataRelationCollection.GetDataSet
- uid: System.Data.DataRelationCollection.IndexOf*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataRelationCollection.IndexOf
- uid: System.Data.DataRelationCollection.Item*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item
  nameWithType: DataRelationCollection.Item
- uid: System.Data.DataRelationCollection.OnCollectionChanged*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged
  nameWithType: DataRelationCollection.OnCollectionChanged
- uid: System.Data.DataRelationCollection.OnCollectionChanging*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging
  nameWithType: DataRelationCollection.OnCollectionChanging
- uid: System.Data.DataRelationCollection.Remove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove
  nameWithType: DataRelationCollection.Remove
- uid: System.Data.DataRelationCollection.RemoveAt*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataRelationCollection.RemoveAt
- uid: System.Data.DataRelationCollection.RemoveCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore
  nameWithType: DataRelationCollection.RemoveCore
