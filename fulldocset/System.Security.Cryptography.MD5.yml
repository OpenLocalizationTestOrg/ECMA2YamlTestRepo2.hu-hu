### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.MD5
  id: MD5
  children:
  - System.Security.Cryptography.MD5.#ctor
  - System.Security.Cryptography.MD5.Create
  - System.Security.Cryptography.MD5.Create(System.String)
  langs:
  - csharp
  name: MD5
  nameWithType: MD5
  fullName: System.Security.Cryptography.MD5
  type: Class
  summary: "Az absztrakt osztály, amelyből az MD5 kivonatoló algoritmus az összes implementációja öröklése jelöli."
  remarks: "Kivonatoló függvényeket térkép bináris karakterláncok egy tetszőleges hosszúságú kis rögzített hosszúságú bináris sorba. Egy titkosítási kivonatot függvénynek a tulajdonságot, hogy a rendszer számításilag lehessen hozni, hogy a kivonat ugyanarra az értékre; két különböző bemeneti kereséséhez. Ez azt jelenti, hogy az adatok két készlet kivonatok meg kell felelnie a megfelelő adatok is megfelel. Ha. Az adatok kis változtatások a kivonat nagy, előre nem látható módosítását eredményezi.       Az MD5 algoritmust kivonatoló mérete 128 bit.       A <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>módszerek MD5 osztály 16 bájt tömbként kivonatát adja vissza.</xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>  Vegye figyelembe, hogy egyes MD5 megvalósítások előállít egy 32 karakterből álló, hexadecimális formátumú kivonatot.  Ilyen megvalósítások együttműködni, az eredményül kapott értéket a formátumot a <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>módszerek hexadecimális értékként.</xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>      > [!NOTE] > Újabb kivonatoló függvényeket, például a biztonságos kivonatoló algoritmusok SHA-256 algoritmust és az SHA-512, érhetők el. Fontolja meg az <xref:System.Security.Cryptography.SHA256>osztály vagy a <xref:System.Security.Cryptography.SHA512>osztály helyett az MD5-osztály</xref:System.Security.Cryptography.SHA512> </xref:System.Security.Cryptography.SHA256> MD5 használata csak a régebbi alkalmazásokat és adatokat is kompatibilisek."
  example:
  - "The following code example computes the MD5 hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.  \n  \n [!code-vb[Security.Cryptography.MD5#1](~/add/codesnippet/visualbasic/t-system.security.crypto_105_1.vb)]\n [!code-cs[Security.Cryptography.MD5#1](~/add/codesnippet/csharp/t-system.security.crypto_105_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MD5 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: MD5()
  nameWithType: MD5.MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref>."
  remarks: "Egy példányának létrehozása a <xref:System.Security.Cryptography.MD5>osztály, használja a <xref:System.Security.Cryptography.MD5.Create%2A>metódus.</xref:System.Security.Cryptography.MD5.Create%2A> </xref:System.Security.Cryptography.MD5>"
  syntax:
    content: protected MD5 ();
    parameters: []
  overload: System.Security.Cryptography.MD5.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.Create
  id: Create
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: Create()
  nameWithType: MD5.Create()
  fullName: System.Security.Cryptography.MD5.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Az alapértelmezett végrehajtásának példányát a <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> kivonatoló algoritmus."
  syntax:
    content: public static System.Security.Cryptography.MD5 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.MD5
      description: "Egy új példányt a <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> kivonatoló algoritmus."
  overload: System.Security.Cryptography.MD5.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "Az algoritmus lett megadva a Federal Information Processing szabványok (FIPS) mód engedélyezve van, de nem FIPS-kompatibilis."
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: Create(String)
  nameWithType: MD5.Create(String)
  fullName: System.Security.Cryptography.MD5.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Létrehoz egy új megadott megvalósítása a <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> kivonatoló algoritmus."
  remarks: 'Lehetséges értékei `algName` vannak: `System.Security.Cryptography.MD5`, `MD5`, `System.Security.Cryptography.MD5CryptoServiceProvider`, és `System.Security.Cryptography.MD5Managed`.'
  syntax:
    content: public static System.Security.Cryptography.MD5 Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "A név az adott végrehajtásának <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> használatára."
    return:
      type: System.Security.Cryptography.MD5
      description: "A megadott végrehajtása egy új példányát <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref>."
  overload: System.Security.Cryptography.MD5.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "Az algoritmus által ismertetett a <code> algName </code> paraméter lett megadva a Federal Information Processing szabványok (FIPS) mód engedélyezve van, de nem FIPS-kompatibilis."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.MD5.#ctor
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: MD5()
  nameWithType: MD5.MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
- uid: System.Security.Cryptography.MD5.Create
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create()
  nameWithType: MD5.Create()
  fullName: System.Security.Cryptography.MD5.Create()
- uid: System.Security.Cryptography.MD5
  parent: System.Security.Cryptography
  isExternal: false
  name: MD5
  nameWithType: MD5
  fullName: System.Security.Cryptography.MD5
- uid: System.Security.Cryptography.MD5.Create(System.String)
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create(String)
  nameWithType: MD5.Create(String)
  fullName: System.Security.Cryptography.MD5.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.MD5.#ctor*
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: MD5
  nameWithType: MD5.MD5
- uid: System.Security.Cryptography.MD5.Create*
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create
  nameWithType: MD5.Create
