### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.CryptoProvider
  id: CryptoProvider
  children:
  - System.Security.RightsManagement.CryptoProvider.BlockSize
  - System.Security.RightsManagement.CryptoProvider.BoundGrants
  - System.Security.RightsManagement.CryptoProvider.CanDecrypt
  - System.Security.RightsManagement.CryptoProvider.CanEncrypt
  - System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  - System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  - System.Security.RightsManagement.CryptoProvider.Dispose
  - System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  - System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  - System.Security.RightsManagement.CryptoProvider.Finalize
  langs:
  - csharp
  name: CryptoProvider
  nameWithType: CryptoProvider
  fullName: System.Security.RightsManagement.CryptoProvider
  type: Class
  summary: "Tartalomvédelemmel védett tartalmak titkosításához és visszafejtéséhez felügyeleti szolgáltatásokat biztosít."
  remarks: "A <xref:System.Security.RightsManagement.UseLicense.Bind%2A>metódus egy felügyelt jogok kötés <xref:System.Security.RightsManagement.UseLicense> <xref:System.Security.RightsManagement.SecureEnvironment>.</xref:System.Security.RightsManagement.SecureEnvironment> </xref:System.Security.RightsManagement.UseLicense> </xref:System.Security.RightsManagement.UseLicense.Bind%2A> CryptoProvider létrehozásakor       Mint más <xref:System.Security.RightsManagement>típusok, a CryptoProvider csak teljesen megbízható alkalmazásban használható.</xref:System.Security.RightsManagement>"
  example:
  - "The following example shows how to use the CryptoProvider class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class CryptoProvider : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize
  id: BlockSize
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
  fullName: System.Security.RightsManagement.CryptoProvider.BlockSize
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekérdezi a cipher block mérete bájtban."
  remarks: "A `clearText` és `cipherText` átadott puffer <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>és <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>kell n * blokkméret bájt hosszúságú, ahol &quot;n&quot; értéke egész szám nagyobb vagy egyenlő 1.</xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>       Ha <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>van `false`, <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>kell lennie, mint <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> átadott puffer hosszának</xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> átadott puffer</xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>       Ha <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>van `true`, átadott puffer <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>lehet egy másik átadott puffer hossza <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>(összes pufferméret még mindig többszörösének kell lennie az blokkméret bájt hosszúságú).</xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>       A blokkméret 1 azt jelzi, hogy a titkosítás adatfolyam-titkosítás; a 2 vagy a nagyobb blokkméret azt jelzi, hogy a blokktitkosításon."
  example:
  - "The following example shows how to use the BlockSize property in converting clear-text data to encrypted-text data.  \n  \n [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/add/codesnippet/visualbasic/rmcontentpublish/window1.xaml.vb#rmcontpubencrypt)]\n [!code-cs[RightsManagedContentPublish#RmContPubEncrypt](~/add/codesnippet/csharp/RmContentPublish/Window1.xaml.cs#rmcontpubencrypt)]"
  syntax:
    content: public int BlockSize { get; }
    return:
      type: System.Int32
      description: "A titkosító blokk méretét, bájtban.  Az alapértelmezett blokkméretének [!INCLUDE[TLA#tla_aes](~/add/includes/tlasharptla-aes-md.md)] 8."
  overload: System.Security.RightsManagement.CryptoProvider.BlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants
  id: BoundGrants
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
  fullName: System.Security.RightsManagement.CryptoProvider.BoundGrants
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekérdezi a jogosultságokat, melyeknél sikeres az ellenőrzést, és, hogy a felhasználó számára biztosított listázása gyűjtemény."
  remarks: ''
  example:
  - "The following example shows how to use the BoundGrants property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.  \n  \n [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/add/codesnippet/visualbasic/rmcontentviewer/window1.xaml.vb#rmcontviewuselicense)]\n [!code-cs[RightsManagedContentViewer#RmContViewUseLicense](~/add/codesnippet/csharp/RmContentViewer/Window1.xaml.cs#rmcontviewuselicense)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentGrant> BoundGrants { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentGrant}
      description: "Egy gyűjtemény számbavétele a jogosultságokat, melyeknél sikeres az ellenőrzést, és hogy a felhasználó számára biztosított."
  overload: System.Security.RightsManagement.CryptoProvider.BoundGrants*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  id: CanDecrypt
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a felhasználó rendelkezik-e jogosultságokkal visszafejtéséhez."
  remarks: "CanDecrypt adja vissza **igaz** Ha a <xref:System.Security.RightsManagement.UseLicense>Ez kötött <xref:System.Security.RightsManagement.CryptoProvider>biztosít a felhasználó olvasási hozzáférési jogosultsággal, például a megtekintése, szerkesztése, nyomtatás vagy tulajdonos.</xref:System.Security.RightsManagement.CryptoProvider> </xref:System.Security.RightsManagement.UseLicense>"
  example:
  - "The following example shows how to use the CanDecrypt property to determine if decryption is allowed.  \n  \n [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/add/codesnippet/visualbasic/rmcontentviewer/window1.xaml.vb#rmcontviewuselicense)]\n [!code-cs[RightsManagedContentViewer#RmContViewUseLicense](~/add/codesnippet/csharp/RmContentViewer/Window1.xaml.cs#rmcontviewuselicense)]"
  syntax:
    content: public bool CanDecrypt { get; }
    return:
      type: System.Boolean
      description: '**Igaz** Ha a <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> megadja a felhasználó jogosultságot visszafejtéséhez; ellenkező esetben **hamis**.'
  overload: System.Security.RightsManagement.CryptoProvider.CanDecrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  id: CanEncrypt
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a felhasználó rendelkezik-e jogosultsága ahhoz, hogy titkosítani."
  remarks: "<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A>adja vissza **igaz** Ha a <xref:System.Security.RightsManagement.UseLicense>Ez kötött <xref:System.Security.RightsManagement.CryptoProvider>Megadja a felhasználói írási jogosultságot például szerkesztése vagy a tulajdonos.</xref:System.Security.RightsManagement.CryptoProvider> </xref:System.Security.RightsManagement.UseLicense></xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A>"
  syntax:
    content: public bool CanEncrypt { get; }
    return:
      type: System.Boolean
      description: '**Igaz** Ha a <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref> megadja a felhasználó jogosultságot titkosítása; ellenkező esetben **hamis**.'
  overload: System.Security.RightsManagement.CryptoProvider.CanEncrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  id: CanMergeBlocks
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
  fullName: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy <> </> *> és <> </> *> fogadhat különböző pufferek mérete hosszabb letiltása."
  remarks: "A `clearText` és `cipherText` átadott puffer <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>és <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>kell n* <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bájt hosszúságú, ahol &quot;n&quot; értéke egész szám nagyobb vagy egyenlő 1.</xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> </xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>       Ha CanMergeBlocks * *hamis**, <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>kell lennie, mint <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> átadott puffer hosszának</xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> átadott puffer       Ha CanMergeBlocks * *igaz**, átadott puffer <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>lehet egy másik átadott puffer hossza <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>(összes pufferméret még mindig meg kell többszöröse <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>bájt hosszúságú).</xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> </xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> </xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>"
  syntax:
    content: public bool CanMergeBlocks { get; }
    return:
      type: System.Boolean
      description: '**Igaz** Ha átadott puffer <> </> *> lehet egy másik az átadott puffer hossza <> </> *>; ellenkező esetben **hamis** Ha átadott puffer <> </> *> és <> </> *> pontos azonos hosszúságúnak kell lennie.  A [!INCLUDE[TLA#tla_aes](~/add/includes/tlasharptla-aes-md.md)] az alapértelmezett érték **igaz**.'
  overload: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  id: Decrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Decrypt(Byte[])
  nameWithType: CryptoProvider.Decrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Decrypt(Byte[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Visszafejtése cipher törölje a szöveget a szöveget."
  remarks: ''
  example:
  - "The following example shows how to use the Decrypt method to convert encrypted data to unencrypted data.  \n  \n [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/add/codesnippet/visualbasic/rmcontentviewer/window1.xaml.vb#rmcontviewdecrypt)]\n [!code-cs[RightsManagedContentViewer#RmContViewDecrypt](~/add/codesnippet/csharp/RmContentViewer/Window1.xaml.cs#rmcontviewdecrypt)]"
  syntax:
    content: public byte[] Decrypt (byte[] cryptoText);
    parameters:
    - id: cryptoText
      type: System.Byte[]
      description: "A titkosító szöveg visszafejtéséhez."
    return:
      type: System.Byte[]
      description: "A visszafejtett törölje a szöveget <code> cryptoText </code>."
  overload: System.Security.RightsManagement.CryptoProvider.Decrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cipherText</code>értéke null."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "A visszafejtési közvetlenül nem kap."
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Dispose
  id: Dispose
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: CryptoProvider.Dispose()
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Feloldja a által használt erőforrások a <xref href=&quot;System.Security.RightsManagement.CryptoProvider&quot;> </xref>."
  remarks: "Dispose végez <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(~ / add/includes/ajax-current-ext-md.md).</xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>       Dispose hívható, amikor végzett a <xref:System.Security.RightsManagement.CryptoProvider>.</xref:System.Security.RightsManagement.CryptoProvider> használatával A Dispose metódus elhagyja a <xref:System.Security.RightsManagement.CryptoProvider>használhatatlan állapotban.</xref:System.Security.RightsManagement.CryptoProvider> Hívása Dispose, után fel kell szabadítania mutató összes hivatkozást az <xref:System.Security.RightsManagement.CryptoProvider>, a szemétgyűjtő is visszaszerezni a memória, amely a <xref:System.Security.RightsManagement.CryptoProvider>lett elfoglaló.</xref:System.Security.RightsManagement.CryptoProvider> </xref:System.Security.RightsManagement.CryptoProvider> További információkért lásd: [nem felügyelt erőforrások tisztítás](~/add/includes/ajax-current-ext-md.md) és [eldobásakor metódusának](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Mindig hívás eldobásakor az <xref:System.Security.RightsManagement.CryptoProvider>.</xref:System.Security.RightsManagement.CryptoProvider> utolsó referenciaként a engedélyezés előtt Ellenkező esetben az erőforrásoknak nem szabadul szemétgyűjtő hívást csak a <xref:System.Security.RightsManagement.CryptoProvider>objektum `Finalize` metódus.</xref:System.Security.RightsManagement.CryptoProvider>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.RightsManagement.CryptoProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CryptoProvider.Dispose(Boolean)
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Security.RightsManagement.CryptoProvider&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()`metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter értéke igaz, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja a <xref:System.Security.RightsManagement.CryptoProvider>hivatkozik.</xref:System.Security.RightsManagement.CryptoProvider> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Security.RightsManagement.CryptoProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  id: Encrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Encrypt(Byte[])
  nameWithType: CryptoProvider.Encrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Encrypt(Byte[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "A szöveg cipher titkosítatlan titkosítja."
  remarks: "A byte hossza a `clearText` puffer a titkosítás többszörösének kell lennie <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>tulajdonság.</xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>       A digitális tartalomvédelmi felügyeleti rendszerek által használt [!INCLUDE[TLA#tla_aes](~/add/includes/tlasharptla-aes-md.md)] titkosítási blokkolása.  A [!INCLUDE[TLA2#tla_aes](~/add/includes/tla2sharptla-aes-md.md)], blokkok titkosított egymástól függetlenül, hogy az azonos titkosítatlan két blokk azonos titkosítási szöveges eredményt.  Lehetséges visszafejtési fenyegetésekkel szemben független blokk titkosítási minimalizálása érdekében alkalmazások módszerek tartalmak, például tömörítést, azonos titkosítatlan blokkok titkosított elkerülése érdekében módosítani kell alkalmazniuk."
  example:
  - "The following example shows how to use the Encrypt method to convert clear-text data to encrypted-text data.  \n  \n [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/add/codesnippet/visualbasic/rmcontentpublish/window1.xaml.vb#rmcontpubencrypt)]\n [!code-cs[RightsManagedContentPublish#RmContPubEncrypt](~/add/codesnippet/csharp/RmContentPublish/Window1.xaml.cs#rmcontpubencrypt)]"
  syntax:
    content: public byte[] Encrypt (byte[] clearText);
    parameters:
    - id: clearText
      type: System.Byte[]
      description: "A tiszta szöveges tartalom titkosításához."
    return:
      type: System.Byte[]
      description: "Titkosítási szövege titkosítva az adott <code> clearText </code>."
  overload: System.Security.RightsManagement.CryptoProvider.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clearText</code>értéke null."
  - type: System.Security.RightsManagement.RightsManagementException
    commentId: T:System.Security.RightsManagement.RightsManagementException
    description: "Titkosítás nem engedélyezett."
  platform:
  - net462
- uid: System.Security.RightsManagement.CryptoProvider.Finalize
  id: Finalize
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Finalize()
  nameWithType: CryptoProvider.Finalize()
  fullName: System.Security.RightsManagement.CryptoProvider.Finalize()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "Erőforrások felszabadítja, és elvégzi a belső tisztítás ahhoz a példányhoz felszabadul szemétgyűjtés által."
  remarks: "Véglegesítése végez <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(~ / add/includes/ajax-current-ext-md.md).</xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>       Ezt a módszert felülbírálja <xref:System.Object.Finalize%2A>.</xref:System.Object.Finalize%2A> Alkalmazás kódja nem teheti ezt a módszert; az objektum `Finalize` metódus automatikusan megnyílik, során szemétgyűjtés, kivéve, ha a szemétgyűjtő véglegesítés hívásával le van tiltva a <xref:System.GC.SuppressFinalize%2A>metódus.</xref:System.GC.SuppressFinalize%2A>       További információkért lásd: [Finalize metódusok és destruktorok](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [nem felügyelt erőforrások tisztítás](~/add/includes/ajax-current-ext-md.md), és [véglegesítése metódus felülbírálása](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~CryptoProvider ();
    parameters: []
  overload: System.Security.RightsManagement.CryptoProvider.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.RightsManagement.RightsManagementException
  parent: System.Security.RightsManagement
  isExternal: false
  name: RightsManagementException
  nameWithType: RightsManagementException
  fullName: System.Security.RightsManagement.RightsManagementException
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
  fullName: System.Security.RightsManagement.CryptoProvider.BlockSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
  fullName: System.Security.RightsManagement.CryptoProvider.BoundGrants
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentGrant}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ContentGrant>
  nameWithType: ReadOnlyCollection<ContentGrant>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentGrant>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.RightsManagement.ContentGrant>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.RightsManagement.ContentGrant
    name: ContentGrant
    nameWithType: ContentGrant
    fullName: ContentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanDecrypt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanEncrypt
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
  fullName: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Decrypt(Byte[])
  nameWithType: CryptoProvider.Decrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Decrypt(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.RightsManagement.CryptoProvider.Dispose
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose()
  nameWithType: CryptoProvider.Dispose()
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose()
- uid: System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CryptoProvider.Dispose(Boolean)
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose(Boolean)
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Encrypt(Byte[])
  nameWithType: CryptoProvider.Encrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Encrypt(Byte[])
- uid: System.Security.RightsManagement.CryptoProvider.Finalize
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Finalize()
  nameWithType: CryptoProvider.Finalize()
  fullName: System.Security.RightsManagement.CryptoProvider.Finalize()
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Decrypt
  nameWithType: CryptoProvider.Decrypt
- uid: System.Security.RightsManagement.CryptoProvider.Dispose*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose
  nameWithType: CryptoProvider.Dispose
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Encrypt
  nameWithType: CryptoProvider.Encrypt
- uid: System.Security.RightsManagement.CryptoProvider.Finalize*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Finalize
  nameWithType: CryptoProvider.Finalize
