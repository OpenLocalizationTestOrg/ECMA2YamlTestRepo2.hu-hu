### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityManager
  id: SecurityManager
  children:
  - System.Security.SecurityManager.CheckExecutionRights
  - System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  - System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  - System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  - System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  - System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  - System.Security.SecurityManager.PolicyHierarchy
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  - System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.SavePolicy
  - System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  - System.Security.SecurityManager.SecurityEnabled
  langs:
  - csharp
  name: SecurityManager
  nameWithType: SecurityManager
  fullName: System.Security.SecurityManager
  type: Class
  summary: "A fő hozzáférési pontot biztosít a biztonsági rendszerrel való kommunikáció osztályok. Ez az osztály nem örökölhető."
  remarks: "Biztonsági hozzáférést, és kezelheti a biztonsági házirend beállításai metódusokat biztosít. SecurityManager példánya nem hozható létre."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class SecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityManager.CheckExecutionRights
  id: CheckExecutionRights
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
  fullName: System.Security.SecurityManager.CheckExecutionRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy kell-e kód <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> végrehajtásához."
  remarks: "Ha ez a tulajdonság `false`, akkor is igaz, a kód nélkül <xref:System.Security.Permissions.SecurityPermissionFlag>végrehajtható legyen.</xref:System.Security.Permissions.SecurityPermissionFlag> Végrehajtási ellenőrzése drága, és megszüntetheti a Lusta házirend megoldás előnyeit. Ez a tulajdonság megadott ellenőrzése, szükség esetén végrehajtás letiltja.       Ez a tulajdonság módosítása nem maradnak meg amíg <xref:System.Security.SecurityManager.SavePolicy%2A>nevezik.</xref:System.Security.SecurityManager.SavePolicy%2A> Új folyamatok nem érinti a változás, amíg a beállításjegyzékben megőrződjenek."
  syntax:
    content: public static bool CheckExecutionRights { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kódot kell <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> végrehajtásához; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.CheckExecutionRights*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  id: CurrentThreadRequiresSecurityContextCapture
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: CurrentThreadRequiresSecurityContextCapture()
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  fullName: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Meghatározza, hogy az aktuális szál szükség van-e a biztonsági környezet rögzítési biztonsági állapotában van időben később újra létre kell-e."
  remarks: "A CurrentThreadRequiresSecurityContextCapture módszert ahhoz a sikeres biztonsági követelményeinek után bizalmas adatok gyorsítótárba helyezi.       Ha a <xref:System.Security.CodeAccessPermission.Assert%2A>metódus meghívása magasabb a veremben, anélkül, hogy a megfelelő biztonsági környezet rögzítése nem gyorsítótárazza az adatokat.</xref:System.Security.CodeAccessPermission.Assert%2A> Az egyéb, a bizalmas adatok egy <xref:System.Security.CodeAccessPermission.Assert%2A>válhat rendelkezésére áll a kód, amely már nem fut, amely a <xref:System.Security.CodeAccessPermission.Assert%2A>helyen.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Assert%2A>      > [!IMPORTANT] > Visszatérési értéke megbízható csak `false`, ami azt jelenti, hogy a szál biztosan nem szükséges biztonsági környezet rögzítés. A metódus igaz eredményezhet, ha a biztonsági környezet rögzítési nincs szükség esetén a biztonsági rések elkerülése érdekében.       CurrentThreadRequiresSecurityContextCapture biztonsági szempontból kritikus fontosságú, mivel elsősorban elkerülése érdekében a szükségtelen biztonsági környezetet írja le, ami azt jelenti, hogy a kódot használja biztonsági szempontból kényes és kell-e."
  syntax:
    content: public static bool CurrentThreadRequiresSecurityContextCapture ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Ha a verem tartalmazza a részlegesen megbízható alkalmazások tartomány nem teljesen megbízható szerelvények és nem a jelenleg aktív <> </> *> vagy <> </> *> módosítók; <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Ha a közös nyelvi futtatókörnyezet nem garantálja, hogy a verem ezek egyike sem tartalmazza."
  overload: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  id: GetStandardSandbox(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: GetStandardSandbox(Evidence)
  nameWithType: SecurityManager.GetStandardSandbox(Evidence)
  fullName: System.Security.SecurityManager.GetStandardSandbox(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Lekérdezi a engedélyek beállítása, amely biztonságos egy alkalmazás, amely rendelkezik a megadott bizonyító adatok megadását."
  remarks: "> [!NOTE]> A a [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], a gazdagép bizonyíték a `evidence` tartalmaznia kell <xref:System.Security.Policy.Zone?displayProperty=fullName>tanúsítás.</xref:System.Security.Policy.Zone?displayProperty=fullName>   >> Az alábbi táblázat a engedélycsoportok, amely az egyes zónák adja vissza.      | Zóna |} Az engedélycsoport |}   |----------|--------------------|   | <xref:System.Security.SecurityZone>| `FullTrust`|   | <xref:System.Security.SecurityZone>| `LocalIntranet`|   | <xref:System.Security.SecurityZone>| `Internet`|   | <xref:System.Security.SecurityZone>| `Internet`|   | <xref:System.Security.SecurityZone>| None |}   | <xref:System.Security.SecurityZone>| None |}       Egyéb bizonyíték, például a <xref:System.Security.Policy.Url>vagy <xref:System.Security.Policy.Site>, tekinthetők.</xref:System.Security.Policy.Site> </xref:System.Security.Policy.Url> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone>       A visszaadott engedélycsoport segítségével a védőfal által az alkalmazás futtatásához. Vegye figyelembe, hogy ez a metódus nem adja meg a házirend, de annak megállapításához, hogy az alkalmazás által kért engedélycsoport ésszerű segítségével. Ez a módszer egy zóna hozzárendelése védőfalat használható."
  example:
  - "The following example shows how to use the GetStandardSandbox method to obtain the permission set for a sandboxed application. For more information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[sandboxingApis#1](~/add/codesnippet/visualbasic/2aad9996-0182-4c3d-a405-_1.vb)]\n [!code-cs[sandboxingApis#1](~/add/codesnippet/csharp/2aad9996-0182-4c3d-a405-_1.cs)]"
  syntax:
    content: public static System.Security.PermissionSet GetStandardSandbox (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A gazdagép bizonyíték egyeznie kell a engedélycsoport."
    return:
      type: System.Security.PermissionSet
      description: "Az alkalmazás, amely rendelkezik a megadott bizonyító adatok engedélycsoportot használható engedélycsoport."
  overload: System.Security.SecurityManager.GetStandardSandbox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  id: GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: GetZoneAndOrigin(ArrayList,ArrayList)
  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  fullName: System.Security.SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "A megadott zónában identitás- és URL-cím identitás engedélycsoportok lekérdezi az aktuális szerelvény."
  remarks: "Ezt a módszert a javasolt megoldás, hogy az URL-cím és a zóna bizonyíték a végrehajtott szerelvény használja hívására <xref:System.Security.SecurityManager.ResolvePolicy%2A>az egyes tanúsítás.</xref:System.Security.SecurityManager.ResolvePolicy%2A> Az engedély beállítása adott vissza a <xref:System.Security.SecurityManager.ResolvePolicy%2A>hívások azonosíthatja a zóna és a forrás URL-címe alapján a végrehajtott szerelvény számára megadott engedélyeket.</xref:System.Security.SecurityManager.ResolvePolicy%2A>      > [!NOTE] > Ezt a tagot a ECMA nyilvános kulcsot, amely nem egy érvényes titkosítási kulccsal, de a pszeudo kulcs igény szerinti kapcsolat lehetővé teszi. A .NET-keretrendszer belül a hivatkozás igény szerint a ECMA pszeudo kulcs automatikusan alakítja át egy hivatkozás igény szerint a Microsoft a nyilvános kulcsot. A biztonsági kivételt a Microsoft nyilvános kulcsot, nem az ECMA pszeudo alapul."
  syntax:
    content: public static void GetZoneAndOrigin (out System.Collections.ArrayList zone, out System.Collections.ArrayList origin);
    parameters:
    - id: zone
      type: System.Collections.ArrayList
      description: "Kimeneti paramétert, amely tartalmaz egy <xref href=&quot;System.Collections.ArrayList&quot;> </xref> a megadott <xref:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone*>objektumok.</xref:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone*>"
    - id: origin
      type: System.Collections.ArrayList
      description: "Kimeneti paramétert, amely tartalmaz egy <xref href=&quot;System.Collections.ArrayList&quot;> </xref> a megadott <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> objektumok."
  overload: System.Security.SecurityManager.GetZoneAndOrigin*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A kérelem <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> nem sikerült."
  platform:
  - net462
- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  id: IsGranted(System.Security.IPermission)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: IsGranted(IPermission)
  nameWithType: SecurityManager.IsGranted(IPermission)
  fullName: System.Security.SecurityManager.IsGranted(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Meghatározza, hogy egy engedélyt a hívó."
  remarks: "Engedélyek megadása házirend határozza meg, és eltér a felülbírálások, például egy assert függvényében igény szerinti. IsGranted is, csak teszteli a támogatás a hívó kód szerelvény független más hívók a veremben."
  syntax:
    content: public static bool IsGranted (System.Security.IPermission perm);
    parameters:
    - id: perm
      type: System.Security.IPermission
      description: "A második megvizsgál a hívó grant engedéllyel."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hívó számára megadott engedélyeket tartalmazza-e a engedélyt <code> perm </code>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.IsGranted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  id: LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: LoadPolicyLevelFromFile(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Betölti a <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> a megadott fájlból."
  syntax:
    content: public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile (string path, System.Security.PolicyLevelType type);
    parameters:
    - id: path
      type: System.String
      description: "A fizikai fájl elérési útját a biztonsági házirend adatait tartalmazó fájlt."
    - id: type
      type: System.Security.PolicyLevelType
      description: "Határozza meg a házirendszint betöltését a számbavételi értékek egyikét."
    return:
      type: System.Security.Policy.PolicyLevel
      description: "A betöltött házirendszint."
  overload: System.Security.SecurityManager.LoadPolicyLevelFromFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A fájl azt a <code> path </code> paraméter nem létezik."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>.       – vagy – ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       – vagy – ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       – vagy – ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  id: LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: LoadPolicyLevelFromString(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Betölti a <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> a megadott karakterláncban."
  syntax:
    content: public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromString (string str, System.Security.PolicyLevelType type);
    parameters:
    - id: str
      type: System.String
      description: "Az XML-ábrázolása egy biztonsági házirend szint kerülnek, ugyanolyan formában, amelyen megjelenik a konfigurációs fájlban."
    - id: type
      type: System.Security.PolicyLevelType
      description: "Határozza meg a házirendszint betöltését a számbavételi értékek egyikét."
    return:
      type: System.Security.Policy.PolicyLevel
      description: "A betöltött házirendszint."
  overload: System.Security.SecurityManager.LoadPolicyLevelFromString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> str </code> paraméter érvénytelen."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.PolicyHierarchy
  id: PolicyHierarchy
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: PolicyHierarchy()
  nameWithType: SecurityManager.PolicyHierarchy()
  fullName: System.Security.SecurityManager.PolicyHierarchy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "A biztonsági házirend hierarchia szintek, például a számítógép-házirend és a felhasználói házirend eléréséhez enumerátor biztosít."
  remarks: "A visszaadott számbavevő biztosít egymást követő <xref:System.Security.Policy.PolicyLevel>objektumok, amelyek megfelelnek a megfelelő házirendje (gép, felhasználó, nagyvállalati, az alkalmazástartomány) a hierarchia szintű.</xref:System.Security.Policy.PolicyLevel> Ezek az objektumok az élő csoportházirend-objektumok; Ezek az objektumok módosítása is következményekkel járhat.       Minimális házirend hierarchia egy számítógép, vállalati szinten, és egy felhasználó áll. A hierarchia azonban további szintek is tartalmazhatnak."
  syntax:
    content: public static System.Collections.IEnumerator PolicyHierarchy ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A számbavevő <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> a biztonsági házirend hierarchia alkotó objektumok."
  overload: System.Security.SecurityManager.PolicyHierarchy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  id: ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence)
  nameWithType: SecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Azt határozza meg, milyen engedélyeket az kód a megadott eredmények alapján."
  remarks: "Ezt a módszert hívja meg a házirend-motor megadják a tanúsítás a hívó kód identitását. Az eredmény a biztonsági házirend határozza meg."
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A tanúsítás használt házirend kiértékelése."
    return:
      type: System.Security.PermissionSet
      description: "A biztonsági rendszer által biztosított engedélyek készletét."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  id: ResolvePolicy(System.Security.Policy.Evidence[])
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence[])
  nameWithType: SecurityManager.ResolvePolicy(Evidence[])
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Azt határozza meg, milyen engedélyeket az kód a megadott eredmények alapján."
  remarks: "Ez a metódus meghívja a házirend-motor megadják a tömbje <xref:System.Security.Policy.Evidence>objektumok.</xref:System.Security.Policy.Evidence> A visszaadott engedélycsoport csak ezeket az engedélyeket, amelyek érvényesek a tömb minden tanúsítás jelöli. Ezek az engedélyek egyenértékű, vagy az engedélyeket, akkor rendelkezik megadott házirend minden egyes bizonyító adatok egy részét is. Ezzel a módszerrel úgy viselkedik, mintha a házirend egyes megoldásának eredmények metszetét volt hajt végre a <xref:System.Security.Policy.Evidence>objektumok a tömbben.</xref:System.Security.Policy.Evidence>"
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence[] evidences);
    parameters:
    - id: evidences
      type: System.Security.Policy.Evidence[]
      description: "Egy házirend értékeléséhez használt bizonyító adatok objektumokból álló tömb."
    return:
      type: System.Security.PermissionSet
      description: "Az engedélyek csoportja, amely megfelel a megadott bizonyíték összes."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  id: ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Azt határozza meg, milyen engedélyeket az kód a megadott tanúsítás és kérések alapján."
  remarks: "Ez a metódus meghívja a házirend-motor megadják a tanúsítás a hívó kód identitás és az engedélyek a kód kérelmeket. Az eredmény a biztonsági házirend határozza meg. Ez a módszer biztosítja, a biztonsági rendszer engedélykészletüket, és megtagadná a output paraméterként rendszer engedélykészletüket beolvasása. A hatályos engedélyek található a program a megadott vannak beállítva, nem az elutasított készlet."
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence, System.Security.PermissionSet reqdPset, System.Security.PermissionSet optPset, System.Security.PermissionSet denyPset, out System.Security.PermissionSet denied);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A tanúsítás használt házirend kiértékelése."
    - id: reqdPset
      type: System.Security.PermissionSet
      description: "A szükséges engedélyekkel, a kódot kell futtatni."
    - id: optPset
      type: System.Security.PermissionSet
      description: "A választható engedélyek, amelyek alkalmazva lesznek, ha kap, de nem szükséges a futtatásához szükséges kódot."
    - id: denyPset
      type: System.Security.PermissionSet
      description: "A megtagadott engedélyek soha nem kell rendelkezni a kóddal akkor is, ha más módon házirendje lehetővé teszi, hogy."
    - id: denied
      type: System.Security.PermissionSet
      description: "Nem adott engedélyek készletét tartalmazó kimeneti paramétert."
    return:
      type: System.Security.PermissionSet
      description: "Engedélyek csoportja, amelyet a biztonsági rendszer által."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Házirend nem sikerül a által megadott minimálisan szükséges engedélyeket adja meg a <code> reqdPset </code> paraméter."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  id: ResolvePolicyGroups(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicyGroups(Evidence)
  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicyGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Lekérdezi a megadott bizonyító adatok megfelelő kód csoportok gyűjteménye."
  remarks: "Ez a módszer akkor hasznos, egy adott házirend-konfigurációt működése bizonyító adatok adott típusú elemzésekor.       Kód csoportok a megfelelő házirend-hierarchia minden esetben szintről adja vissza a `evidence` paraméter."
  syntax:
    content: public static System.Collections.IEnumerator ResolvePolicyGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A tanúsítás szemben, amelyek a házirend ki lesz értékelve beállítása."
    return:
      type: System.Collections.IEnumerator
      description: "A tanúsítás megfelelő kód csoportok készletét felsorolása."
  overload: System.Security.SecurityManager.ResolvePolicyGroups*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  id: ResolveSystemPolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolveSystemPolicy(Evidence)
  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolveSystemPolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Meghatározza, milyen engedélyeket az kód alapján a megadott tanúsítás, kivéve a házirend a <xref href=&quot;System.AppDomain&quot;> </xref> szintjét."
  remarks: "Ez a módszer hív meg, a biztonsági házirend motor és a tanúsítás a hívó kód identitás. Az eredmény határozza meg a biztonsági házirend kölcsönöz bármely <xref:System.AppDomain>házirend.</xref:System.AppDomain>"
  syntax:
    content: public static System.Security.PermissionSet ResolveSystemPolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A tanúsítás használt házirend kiértékelése."
    return:
      type: System.Security.PermissionSet
      description: "A biztonsági rendszer által biztosított engedélyek készletét."
  overload: System.Security.SecurityManager.ResolveSystemPolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.SavePolicy
  id: SavePolicy
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SavePolicy()
  nameWithType: SecurityManager.SavePolicy()
  fullName: System.Security.SecurityManager.SavePolicy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Menti a módosított biztonsági házirend állapotát."
  remarks: "Ez a metódus a házirend menti a által elérhetővé tett <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, és más osztályokat, hogy a biztonsági házirendek jelentik konfigurációs.</xref:System.Security.Policy.PolicyLevel> </xref:System.Security.SecurityManager.PolicyHierarchy%2A> Kivéve, ha ezt a módszert nevezik, a csoportházirend-objektumok végzett módosítások nem lesznek mentve, és nem lesz hatással a következő alkalmazások futtatása."
  syntax:
    content: public static void SavePolicy ();
    parameters: []
  overload: System.Security.SecurityManager.SavePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  id: SavePolicyLevel(System.Security.Policy.PolicyLevel)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SavePolicyLevel(PolicyLevel)
  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)
  fullName: System.Security.SecurityManager.SavePolicyLevel(PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Menti a módosított biztonsági házirendszint <xref:System.Security.SecurityManager.LoadPolicyLevelFromFile*>.</xref:System.Security.SecurityManager.LoadPolicyLevelFromFile*> betöltését"
  remarks: "A <xref:System.Security.Policy.PolicyLevel>lesznek mentve ugyanarra a helyre, ahonnan betöltve.</xref:System.Security.Policy.PolicyLevel>"
  syntax:
    content: public static void SavePolicyLevel (System.Security.Policy.PolicyLevel level);
    parameters:
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "A házirend szintű objektumhoz menteni."
  overload: System.Security.SecurityManager.SavePolicyLevel*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ezt a módszert használja a kódhozzáférés-biztonsági (CAS) házirend, amely elavult az [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Ahhoz, hogy a .NET-keretrendszer korábbi verzióival is kompatibilisek a Kódműködési biztonsági szabályzatot, használja a [ &lt;legacyCasPolicy&gt; elem](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.SecurityEnabled
  id: SecurityEnabled
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
  fullName: System.Security.SecurityManager.SecurityEnabled
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy engedélyezve van-e biztonsági."
  remarks: "Ez a tulajdonság által használható a [Caspol.exe (Code Access biztonsági házirend eszközzel)](~/add/includes/ajax-current-ext-md.md) `-security` (`-s`) kódalapú védelem kikapcsolása lehetőséget.              SecurityEnabled rendszergazdái letilthatják a kódelérés-biztonsági megoldást kínál. Amikor a kódelérés-biztonsági le van tiltva, minden code access igényt sikertelen lesz. Hatékony, ez engedélyezi az összes kód `FullTrust`. Kódelérés-biztonsági letiltása nincs hatással a biztonsági rendszer, így a kód lehet végre némileg jobb, mint a megfelelő biztonsági házirend megadása `FullTrust` összes kód. Ez a tulajdonság nem tiltja le a szerepkör alapú biztonsági; ezért <xref:System.Security.Permissions.PrincipalPermission>iránti igények kielégítése érdekében, nem érintettek.</xref:System.Security.Permissions.PrincipalPermission>      > [!CAUTION] > Kódelérés-biztonsági letiltása teszi ki a rendszer a támadásokkal szemben el rosszindulatú kód, például vírusok vagy férgek okozta. Kódelérés-biztonsági letiltása automatikusan blokkolja az bármely módon felügyelt kódot. Informatikai csak okok felügyelt kód futtatásához a kód hozzáférés biztonsági rendszer által, korlátozás nélkül, és a legtöbb körültekintően kell történik. Ahhoz, hogy további teljesítmény biztonsági kikapcsolása kell csak történik, amikor további biztonsági intézkedéseket rendszer biztonsága érdekében került sor. Egyéb biztonsági óvintézkedéseket példái közé tartoznak a nyilvános hálózatok, számítógépek, fizikailag biztonságossá tétele a kapcsolat bontása, és így tovább.       Ez a tulajdonság módosítása nem őrzi meg a beállításjegyzéket, amíg <xref:System.Security.SecurityManager.SavePolicy%2A>nevezik.</xref:System.Security.SecurityManager.SavePolicy%2A> Új folyamatok nem érinti a változás, amíg a beállításjegyzékben megőrződjenek. Egy futó folyamatban Ez a tulajdonság értékének módosítása nem feltétlenül módosíthatja az elvárásoknak megfelelően. Módosítások léptek érvénybe érdekében meg kell hívnia <xref:System.Security.SecurityManager.SavePolicy%2A>és egy új folyamat elindításához.</xref:System.Security.SecurityManager.SavePolicy%2A>"
  syntax:
    content: public static bool SecurityEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a biztonság; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.SecurityEnabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Ez a módszer behívó kód nincs <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.SecurityManager.CheckExecutionRights
  parent: System.Security.SecurityManager
  isExternal: false
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
  fullName: System.Security.SecurityManager.CheckExecutionRights
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  parent: System.Security.SecurityManager
  isExternal: false
  name: CurrentThreadRequiresSecurityContextCapture()
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  fullName: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture()
- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetStandardSandbox(Evidence)
  nameWithType: SecurityManager.GetStandardSandbox(Evidence)
  fullName: System.Security.SecurityManager.GetStandardSandbox(Evidence)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetZoneAndOrigin(ArrayList,ArrayList)
  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  fullName: System.Security.SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  parent: System.Security.SecurityManager
  isExternal: false
  name: IsGranted(IPermission)
  nameWithType: SecurityManager.IsGranted(IPermission)
  fullName: System.Security.SecurityManager.IsGranted(IPermission)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromFile(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.PolicyLevelType
  parent: System.Security
  isExternal: false
  name: PolicyLevelType
  nameWithType: PolicyLevelType
  fullName: System.Security.PolicyLevelType
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromString(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
- uid: System.Security.SecurityManager.PolicyHierarchy
  parent: System.Security.SecurityManager
  isExternal: false
  name: PolicyHierarchy()
  nameWithType: SecurityManager.PolicyHierarchy()
  fullName: System.Security.SecurityManager.PolicyHierarchy()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence)
  nameWithType: SecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence)
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence[])
  nameWithType: SecurityManager.ResolvePolicy(Evidence[])
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence[])
- uid: System.Security.Policy.Evidence[]
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence[]
  spec.csharp:
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: Evidence[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicyGroups(Evidence)
  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicyGroups(Evidence)
- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolveSystemPolicy(Evidence)
  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolveSystemPolicy(Evidence)
- uid: System.Security.SecurityManager.SavePolicy
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicy()
  nameWithType: SecurityManager.SavePolicy()
  fullName: System.Security.SecurityManager.SavePolicy()
- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicyLevel(PolicyLevel)
  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)
  fullName: System.Security.SecurityManager.SavePolicyLevel(PolicyLevel)
- uid: System.Security.SecurityManager.SecurityEnabled
  parent: System.Security.SecurityManager
  isExternal: false
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
  fullName: System.Security.SecurityManager.SecurityEnabled
- uid: System.Security.SecurityManager.CheckExecutionRights*
  parent: System.Security.SecurityManager
  isExternal: false
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture*
  parent: System.Security.SecurityManager
  isExternal: false
  name: CurrentThreadRequiresSecurityContextCapture
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture
- uid: System.Security.SecurityManager.GetStandardSandbox*
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetStandardSandbox
  nameWithType: SecurityManager.GetStandardSandbox
- uid: System.Security.SecurityManager.GetZoneAndOrigin*
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetZoneAndOrigin
  nameWithType: SecurityManager.GetZoneAndOrigin
- uid: System.Security.SecurityManager.IsGranted*
  parent: System.Security.SecurityManager
  isExternal: false
  name: IsGranted
  nameWithType: SecurityManager.IsGranted
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile*
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromFile
  nameWithType: SecurityManager.LoadPolicyLevelFromFile
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString*
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromString
  nameWithType: SecurityManager.LoadPolicyLevelFromString
- uid: System.Security.SecurityManager.PolicyHierarchy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: PolicyHierarchy
  nameWithType: SecurityManager.PolicyHierarchy
- uid: System.Security.SecurityManager.ResolvePolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy
  nameWithType: SecurityManager.ResolvePolicy
- uid: System.Security.SecurityManager.ResolvePolicyGroups*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicyGroups
  nameWithType: SecurityManager.ResolvePolicyGroups
- uid: System.Security.SecurityManager.ResolveSystemPolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolveSystemPolicy
  nameWithType: SecurityManager.ResolveSystemPolicy
- uid: System.Security.SecurityManager.SavePolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicy
  nameWithType: SecurityManager.SavePolicy
- uid: System.Security.SecurityManager.SavePolicyLevel*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicyLevel
  nameWithType: SecurityManager.SavePolicyLevel
- uid: System.Security.SecurityManager.SecurityEnabled*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
