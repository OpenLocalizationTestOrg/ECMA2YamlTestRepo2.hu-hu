### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectorySecurity
  id: ActiveDirectorySecurity
  children:
  - System.DirectoryServices.ActiveDirectorySecurity.#ctor
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  - System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  - System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  - System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  - System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  - System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  langs:
  - csharp
  name: ActiveDirectorySecurity
  nameWithType: ActiveDirectorySecurity
  fullName: System.DirectoryServices.ActiveDirectorySecurity
  type: Class
  summary: "Az objektum biztonsági réteg a felügyelt ACL-könyvtár használatával access control szolgáltatásait directory-objektumok burkolja."
  syntax:
    content: 'public class ActiveDirectorySecurity : System.Security.AccessControl.DirectoryObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.DirectoryObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ActiveDirectorySecurity()
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ActiveDirectorySecurity()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> osztály."
  syntax:
    content: public ActiveDirectorySecurity ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectorySecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  id: AccessRightType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a <xref:System.Type>egy hozzáférési jogot az objektum képviselő objektum.</xref:System.Type>"
  remarks: "Ez a tulajdonság mindig adja meg a <xref:System.Type>, a <xref:System.DirectoryServices.ActiveDirectoryRights>számbavételi.</xref:System.DirectoryServices.ActiveDirectoryRights> </xref:System.Type>"
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>megfelelő hozzáférési.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Létrehoz egy <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> objektum a megadott értékekkel."
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Egy <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objektum például NTAccount objektum, amely egy biztonsági azonosítóval (SID)."
    - id: accessMask
      type: System.Int32
      description: "Egy <xref:System.Int32>bitmaszk, amely bemutatja a hozzáférési jogosultságokkal.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>objektum, amely azt jelzi, hogy ACE-k öröklődnek.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ACE-k örökölt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Egy <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> Öröklődési jelzők on a Deleted object tartalmazó objektum."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> objektum, amely on a Deleted object öröklési propagációs jelzőt tartalmaz."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Egy <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> objektum, amely tartalmazza a ACE-típust."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> , amely megfelel a <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objektum."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Létrehoz egy <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> objektum a megadott értékekkel."
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Egy <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objektumot, például egy NTAccount objektum, amely egy biztonsági azonosítóval (SID)."
    - id: accessMask
      type: System.Int32
      description: "Egy <xref:System.Int32>bitmaszk, amely bemutatja a hozzáférési jogosultságokkal.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>objektum, amely azt jelzi, ha ACE-k öröklődnek.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>Ha ACE-k örökölt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Egy <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> objektum, amely tartalmazza a Deleted object öröklési jelzők."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> objektum, amely egy directory objektum öröklési propagációs jelzőt tartalmaz."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Egy <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> objektum, amely tartalmazza a ACE-típust."
    - id: objectGuid
      type: System.Guid
      description: "A <xref:System.Guid>objektum, amely tartalmazza a objektum a GUID.</xref:System.Guid>"
    - id: inheritedObjectGuid
      type: System.Guid
      description: "A <xref:System.Guid>objektum, amely tartalmazza a örökölt objektum a GUID.</xref:System.Guid>"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> , amely megfelel a <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objektum."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  id: AccessRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a <xref:System.Type>, amely jelzi, hogy ehhez az objektumhoz hozzáférési szabályt.</xref:System.Type>"
  remarks: "Ez a tulajdonság mindig adja meg a <xref:System.Type>az <xref:System.DirectoryServices.ActiveDirectoryAccessRule>osztályhoz.</xref:System.DirectoryServices.ActiveDirectoryAccessRule> </xref:System.Type>"
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>a hozzáférési szabály.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AddAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A hozzáférés-vezérlési lista objektum ad hozzá egy hozzáférési szabály."
  syntax:
    content: public void AddAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "A <xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*>objektum, amelyre ez a művelet vonatkozik.</xref:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule*>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AddAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Egy naplózási szabály hozzáadása a Rendszerszintű objektum."
  syntax:
    content: public void AddAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectoryAuditRule&quot;> </xref> objektum, amelyre ez a művelet vonatkozik."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Létrehoz egy <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> objektum a megadott értékekkel."
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Egy <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objektum, például egy NTAccount objektum, amely egy biztonsági azonosítóval (SID)."
    - id: accessMask
      type: System.Int32
      description: "Egy <xref:System.Int32>bitmaszk, amely bemutatja a hozzáférési jogosultságokkal.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>objektum, amely azt jelzi, ha ACE-k öröklődnek.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ACE-k örökölt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Egy <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> Öröklődési jelzők on a Deleted object tartalmazó objektum."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> objektum, amely on a Deleted object öröklési propagációs jelzőt tartalmaz."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Egy <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> objektum, amely tartalmazza a naplózási jelzők ehhez <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objektum."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> , amely megfelel a <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objektum."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Létrehoz egy <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> objektum a megadott értékekkel."
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Egy <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objektum például NTAccount objektum, amely egy biztonsági azonosítóval (SID)."
    - id: accessMask
      type: System.Int32
      description: "Egy <xref:System.Int32>bitmaszk, amely bemutatja a hozzáférési jogosultságokkal.</xref:System.Int32>"
    - id: isInherited
      type: System.Boolean
      description: "A <xref:System.Boolean>objektum, amely azt jelzi, hogy ACE-k öröklődnek.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ACE-k örökölt; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Egy <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> Öröklődési jelzők on a Deleted object tartalmazó objektum."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "A <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> objektum, amely on a Deleted object öröklési propagációs jelzőt tartalmaz."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Egy <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> objektum, amely tartalmazza a naplózási jelzők ehhez <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objektum."
    - id: objectGuid
      type: System.Guid
      description: "A <xref:System.Guid>objektum, amely tartalmazza a objektum Béla.</xref:System.Guid>"
    - id: inheritedObjectGuid
      type: System.Guid
      description: "A <xref:System.Guid>objektum, amely tartalmazza a örökölt objektum Béla.</xref:System.Guid>"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> , amely megfelel a <xref href=&quot;System.DirectoryServices.ActiveDirectorySecurity&quot;> </xref> objektum."
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  id: AuditRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lekérdezi a <xref:System.Type>, amely jelzi, hogy egy naplózási szabály ehhez az objektumhoz.</xref:System.Type>"
  remarks: "Ez a tulajdonság mindig adja meg a <xref:System.Type>az <xref:System.DirectoryServices.ActiveDirectoryAuditRule>osztályhoz.</xref:System.DirectoryServices.ActiveDirectoryAuditRule> </xref:System.Type>"
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>a naplózási szabály.</xref:System.Type>"
  overload: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A megadott módosítása a megadott vonatkozik <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref>."
  syntax:
    content: public override bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "A hozzáférés vezérlő módosítás végrehajtásához típusa."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A hozzáférési szabály módosítása."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha sikeresen módosította a; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha sikeresen módosította a; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "A megadott módosítása a megadott vonatkozik <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref>."
  syntax:
    content: public override bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "A módosítás alkalmazásához."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A naplózási szabály módosítása."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha sikeresen módosította a; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha sikeresen módosította a; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  id: PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Eltávolítja a megadott társított összes hozzáférési szabályok <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
  syntax:
    content: public override void PurgeAccessRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "A <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> , amelyek esetében szeretne eltávolítani az összes hozzáférési szabályok."
  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Minden hozzáférési szabályok nincsenek kanonikus sorrendje."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  id: PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Eltávolítja a megadott társított szabályok naplózása összes <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
  syntax:
    content: public override void PurgeAuditRules (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "A <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> , amelynek eltávolítja az összes ellenőrzési szabályok."
  overload: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Összes naplózási szabály nem kanonikus sorrendben vannak."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  id: RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccess(IdentityReference,AccessControlType)
  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Eltávolítja az összes olyan hozzáférési szabályok, amelyek rendelkeznek a megadott <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objektum és <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> objektumhoz a hozzáférés-vezérlési lista egy objektum a."
  syntax:
    content: public void RemoveAccess (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "Egy <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objektum, például egy NTAccount objektum, amely egy biztonsági azonosítóval (SID)."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Egy <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> objektum, amely tartalmazza a ACE-típust."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Eltávolítja az összes olyan hozzáférési szabályok, amelyek tartalmazzák a hozzáférés-vezérlési lista egy objektum a megadott hozzáférési szabály megegyező biztonsági azonosítója és a hozzáférési maszkkal."
  syntax:
    content: public bool RemoveAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objektum, amelyre ez a művelet vonatkozik."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a művelet sikeres; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Eltávolítja az összes olyan hozzáférési szabályok, amelyek egyeznek pontosan a hozzáférés-vezérlési lista egy objektum a megadott hozzáférési szabály."
  syntax:
    content: public void RemoveAccessRuleSpecific (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objektum, amelyre ez a művelet vonatkozik."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  id: RemoveAudit(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAudit(IdentityReference)
  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Eltávolítja az összes ellenőrzési szabályok, amelyek rendelkeznek a megadott <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objektum Rendszerszintű objektumot."
  syntax:
    content: public void RemoveAudit (System.Security.Principal.IdentityReference identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "Egy <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objektum, például egy NTAccount objektum, amely egy biztonsági azonosítóval (SID)."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Eltávolítja az összes naplózási szabály, amely tartalmazza a megadott naplózási szabály az a rendszer hozzáférést vezérlő lista Rendszerhozzáférés objektum megegyező biztonsági azonosítója és a hozzáférési maszkkal."
  syntax:
    content: public bool RemoveAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objektum, amelyre ez a művelet vonatkozik."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a művelet sikeres; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Eltávolítja az összes ellenőrzési szabályok, amelyek egyeznek pontosan a megadott naplózási objektum Rendszerszintű szabály."
  syntax:
    content: public void RemoveAuditRuleSpecific (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objektum, amelyre ez a művelet vonatkozik."
  overload: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: ResetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Az objektum hozzáférés-vezérlési lista keres minden hozzáférési szabályt, amely tartalmazza egy biztonsági azonosítóval (SID), hogy megfelel a biztonsági azonosító szerepel a <code> rule </code> objektumot, és ezek mindegyikének hozzáférési szabályokat, amelyek szerepelnek a hozzáférési szabályok kicseréli a <code> rule </code> objektum."
  remarks: "ResetAccessRule lecseréli az összes hozzáférési szabályok egy adott csoportjának biztonsági AZONOSÍTÓJÁT. az objektum hozzáférés-vezérlési lista használata esetén az engedélyezési és megtagadási típus szabályokat is helyett.  Cserélje le a csak az engedélyezési szabályok nem befolyásolja a megtagadási szabályokat, vagy cserélje le a Megtagadás szabály nem befolyásolja az engedélyezési szabályok <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A>helyette.</xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A>"
  syntax:
    content: public void ResetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objektum, amelyre ez a művelet vonatkozik."
  overload: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  id: SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: SetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Az objektum hozzáférés-vezérlési lista keres minden hozzáférési szabályt, amely tartalmazza egy biztonsági azonosítóval (SID), hogy megfelel a biztonsági azonosító szerepel a <code> rule </code> objektumot, és az access vezérlő típusa (engedélyezés vagy Megtagadás), amely megfelel a megadott a <code> rule </code> objektum és azok összes hozzáférési szabályokat, amelyek szerepelnek a hozzáférési szabályok cserél a <code> rule </code> objektum."
  remarks: "SetAccessRule való cserélje le a hozzáférési szabályok felel meg az adott SID-azonosító, és hozzáférési vezérlőtípus (engedélyezés vagy Megtagadás) az adott objektum hozzáférés-vezérlési lista használata esetén az összes szabályok abban a hozzáférés-vezérlési lista egy SID és típusa, amelyek megfelelnek a biztonsági AZONOSÍTÓT és a hozzáférés-ellenőrzés lévő típusa a `rule` objektum helyett.  Ezzel a módszerrel a fejlesztői is csere engedélyezési szabályok az adott SID az adott objektumhoz nem befolyásolja a meglévő megtagadási szabályokat vagy cserélje le a összes Megtagadás szabály az adott SID objektumon nem befolyásolja a meglévő engedélyezési szabályokat is.  Cserélje le az összes szabály az adott objektum típusa, függetlenül a megadott SID vethetők használja <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A>helyette.</xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A>"
  syntax:
    content: public void SetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAccessRule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objektum, amelyre ez a művelet vonatkozik."
  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  id: SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  langs:
  - csharp
  name: SetAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Lecseréli az összes naplózási szabály, amely tartalmazza a megadott naplózási szabály, az objektum Társítása a megadott naplózási szabály ugyanazt biztonsági azonosítója."
  syntax:
    content: public void SetAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);
    parameters:
    - id: rule
      type: System.DirectoryServices.ActiveDirectoryAuditRule
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectoryAccessRule&quot;> </xref> objektum, amelyre ez a művelet vonatkozik."
  overload: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.DirectoryObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.DirectoryObjectSecurity
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ActiveDirectorySecurity()
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity()
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ActiveDirectorySecurity()
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectoryAccessRule
  parent: System.DirectoryServices
  isExternal: false
  name: ActiveDirectoryAccessRule
  nameWithType: ActiveDirectoryAccessRule
  fullName: System.DirectoryServices.ActiveDirectoryAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectoryAuditRule
  parent: System.DirectoryServices
  isExternal: false
  name: ActiveDirectoryAuditRule
  nameWithType: ActiveDirectoryAuditRule
  fullName: System.DirectoryServices.ActiveDirectoryAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
  fullName: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(AccessControlModification,AuditRule,Boolean)
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccess(IdentityReference,AccessControlType)
  nameWithType: ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(IdentityReference,AccessControlType)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAudit(IdentityReference)
  nameWithType: ActiveDirectorySecurity.RemoveAudit(IdentityReference)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(IdentityReference)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ResetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAccessRule(ActiveDirectoryAccessRule)
  nameWithType: ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(ActiveDirectoryAccessRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAuditRule(ActiveDirectoryAuditRule)
  nameWithType: ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
  fullName: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(ActiveDirectoryAuditRule)
- uid: System.DirectoryServices.ActiveDirectorySecurity.#ctor*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ActiveDirectorySecurity
  nameWithType: ActiveDirectorySecurity.ActiveDirectorySecurity
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRightType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ActiveDirectorySecurity.AccessRightType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: ActiveDirectorySecurity.AccessRuleFactory
- uid: System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ActiveDirectorySecurity.AccessRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: ActiveDirectorySecurity.AddAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: ActiveDirectorySecurity.AddAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: ActiveDirectorySecurity.AuditRuleFactory
- uid: System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ActiveDirectorySecurity.AuditRuleType
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAccessRule
  nameWithType: ActiveDirectorySecurity.ModifyAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ModifyAuditRule
  nameWithType: ActiveDirectorySecurity.ModifyAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAccessRules
  nameWithType: ActiveDirectorySecurity.PurgeAccessRules
- uid: System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: PurgeAuditRules
  nameWithType: ActiveDirectorySecurity.PurgeAuditRules
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccess
  nameWithType: ActiveDirectorySecurity.RemoveAccess
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: ActiveDirectorySecurity.RemoveAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: ActiveDirectorySecurity.RemoveAccessRuleSpecific
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAudit
  nameWithType: ActiveDirectorySecurity.RemoveAudit
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: ActiveDirectorySecurity.RemoveAuditRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: ActiveDirectorySecurity.RemoveAuditRuleSpecific
- uid: System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: ActiveDirectorySecurity.ResetAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: ActiveDirectorySecurity.SetAccessRule
- uid: System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule*
  parent: System.DirectoryServices.ActiveDirectorySecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: ActiveDirectorySecurity.SetAuditRule
