### YamlMime:ManagedReference
items:
- uid: System.Collections.DictionaryBase
  id: DictionaryBase
  children:
  - System.Collections.DictionaryBase.#ctor
  - System.Collections.DictionaryBase.Clear
  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  - System.Collections.DictionaryBase.Count
  - System.Collections.DictionaryBase.Dictionary
  - System.Collections.DictionaryBase.GetEnumerator
  - System.Collections.DictionaryBase.InnerHashtable
  - System.Collections.DictionaryBase.OnClear
  - System.Collections.DictionaryBase.OnClearComplete
  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: DictionaryBase
  nameWithType: DictionaryBase
  fullName: System.Collections.DictionaryBase
  type: Class
  summary: "Biztosítja a <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> alaposztályban a kulcs/érték párok szigorú típusmegadású gyűjteménye."
  remarks: "A foreach utasítás a C# nyelv (az egyes, a Visual Basic nyelvben) a gyűjtemény elem típusú objektum beolvasása. A DictionaryBase minden eleme egy kulcs/érték pár, mert az elem típusa nincs a kulcs vagy érték típusú. Ehelyett a elemtípusa <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry>       A `foreach` a számbavevő, olvasása, nem írása, a gyűjtemény csak így csomagolásának utasítás.      > [!NOTE] > Mert kulcsok öröklődjenek és azok viselkedését megváltozott, a abszolút egyediségi nem garantálható összehasonlításával használatával a <xref:System.Type.Equals%2A>metódus.</xref:System.Type.Equals%2A>"
  example:
  - "The following code example implements the DictionaryBase class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/t-system.collections.dic_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/t-system.collections.dic_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/t-system.collections.dic_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DictionaryBase : System.Collections.IDictionary
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.#ctor
  id: '#ctor'
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: DictionaryBase()
  nameWithType: DictionaryBase.DictionaryBase()
  fullName: System.Collections.DictionaryBase.DictionaryBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> osztály."
  remarks: "Ez a konstruktor O(1) során."
  syntax:
    content: protected DictionaryBase ();
    parameters: []
  overload: System.Collections.DictionaryBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Clear
  id: Clear
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Clear()
  nameWithType: DictionaryBase.Clear()
  fullName: System.Collections.DictionaryBase.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Törli a tartalmát a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "<xref:System.Collections.DictionaryBase.Count%2A>van nullára van állítva, és a gyűjtemény elemeinek más objektumokra mutató hivatkozásokat is kiadásakor.</xref:System.Collections.DictionaryBase.Count%2A>       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.DictionaryBase.Count%2A>.</xref:System.Collections.DictionaryBase.Count%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.DictionaryBase.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DictionaryBase.CopyTo(Array,Int32)
  fullName: System.Collections.DictionaryBase.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Másolja a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> elemek egy egydimenziós <xref:System.Array>a megadott indexpozíciónál.</xref:System.Array>"
  remarks: "Az elemek másolja az <xref:System.Array>ugyanabban a sorrendben, amelyben a számbavevő a <xref:System.Collections.DictionaryBase>.</xref:System.Collections.DictionaryBase> telepítéseket</xref:System.Array>       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.DictionaryBase.Count%2A>.</xref:System.Collections.DictionaryBase.Count%2A>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Az egydimenziós <xref:System.Array>célját, amely a <xref:System.Collections.DictionaryEntry>objektumok átmásolva a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány.</xref:System.Collections.DictionaryEntry> </xref:System.Array> A <xref:System.Array>kell rendelkeznie a nulla alapú indexelést.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét `array` mely másolása megkezdődik."
  overload: System.Collections.DictionaryBase.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>többdimenziós.       – vagy – a forrás elemeinek száma <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> nagyobb, mint a rendelkezésre álló terület <code>index</code> a cél végére <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A forrás típusa <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> nem konvertálható automatikusan a cél típusa <code> array </code>."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Count
  id: Count
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Count
  nameWithType: DictionaryBase.Count
  fullName: System.Collections.DictionaryBase.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi a levő elemek száma a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Levő elemek száma a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  overload: System.Collections.DictionaryBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Dictionary
  id: Dictionary
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
  fullName: System.Collections.DictionaryBase.Dictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "A listában található elemek beolvasása a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Az On * módszerek hívják, csak a példányon a szótár tulajdonsága által visszaadott, de nem a példány által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A>       Ez a tulajdonság értékének beolvasása során O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/p-system.collections.dic_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/p-system.collections.dic_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/p-system.collections.dic_1.vb)]"
  syntax:
    content: protected System.Collections.IDictionary Dictionary { get; }
    return:
      type: System.Collections.IDictionary
      description: "Egy <xref:System.Collections.IDictionary>képviselő a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány magát.</xref:System.Collections.IDictionary>"
  overload: System.Collections.DictionaryBase.Dictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DictionaryBase.GetEnumerator()
  fullName: System.Collections.DictionaryBase.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Értéket ad vissza egy <xref:System.Collections.IDictionaryEnumerator>keresztül, amely megismétli a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége.  Ezért használatával `foreach` ajánlott, az adatbázis közvetlen módosítása az enumerátor helyett.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.IEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.IEnumerator.Reset%2A>  Ennél a pozíciónál <xref:System.Collections.IEnumerator.Current%2A>nincs definiálva.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.IEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.IEnumerator.Current%2A>átállítása.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Ha <xref:System.Collections.IEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.IEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.IEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.IEnumerator.MoveNext%2A>visszaadott `false`, <xref:System.Collections.IEnumerator.Current%2A>nincs definiálva.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> követ</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenített és annak viselkedését nincs definiálva.       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem szálbiztos eljárást.  Szál biztonsági felsorolásakor biztosításához zárolhatja a teljes számbavételi művelet során a gyűjteményben.  A gyűjteményt, amelyben több szál olvasására vagy írására érhető el, hogy meg kell valósítani a saját szinkronizálási.       Ez a módszer O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_3_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_3_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_3_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Egy <xref:System.Collections.IDictionaryEnumerator>a a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.DictionaryBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.InnerHashtable
  id: InnerHashtable
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
  fullName: System.Collections.DictionaryBase.InnerHashtable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "A listában található elemek beolvasása a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonságot, de nem a példányon a InnerHashtable tulajdonsága által visszaadott.</xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: protected System.Collections.Hashtable InnerHashtable { get; }
    return:
      type: System.Collections.Hashtable
      description: "A <xref href=&quot;System.Collections.Hashtable&quot;> </xref> képviselő a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány magát."
  overload: System.Collections.DictionaryBase.InnerHashtable*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnClear
  id: OnClear
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnClear()
  nameWithType: DictionaryBase.OnClear()
  fullName: System.Collections.DictionaryBase.OnClear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "További egyéni folyamatok tartalmának törlése előtt elvégzi a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi egy származtatott osztályt valamilyen művelet végrehajtása előtt a gyűjtemény üres.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Collections.DictionaryBase.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnClearComplete
  id: OnClearComplete
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: DictionaryBase.OnClearComplete()
  fullName: System.Collections.DictionaryBase.OnClearComplete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hajt végre további egyéni folyamatok tartalmának törlése után a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi egy származtatott osztályt valamilyen művelet végrehajtása után a gyűjtemény üres.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Collections.DictionaryBase.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  id: OnGet(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnGet(Object,Object)
  nameWithType: DictionaryBase.OnGet(Object,Object)
  fullName: System.Collections.DictionaryBase.OnGet(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "A megadott kulcs és az érték elem lekérdezi a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja adja vissza `currentValue`. További művelet végrehajtására, amikor a rendszer lekéri a megadott elem származtatott osztálya általi szolgál.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual object OnGet (object key, object currentValue);
    parameters:
    - id: key
      type: System.Object
      description: "Az első elem kulcsa."
    - id: currentValue
      type: System.Object
      description: "A társított elem aktuális értékét `key`."
    return:
      type: System.Object
      description: "Egy <xref:System.Object>a megadott adatcserekulcs és az elemet tartalmazó.</xref:System.Object>"
  overload: System.Collections.DictionaryBase.OnGet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  id: OnInsert(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnInsert(Object,Object)
  nameWithType: DictionaryBase.OnInsert(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsert(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "További egyéni folyamatok elvégzi az új elem beszúrása előtt a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja általi valamilyen művelet végrehajtása előtt a megadott elem szerepel a származtatott osztály célja.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_0_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_0_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_0_1.vb)]"
  syntax:
    content: protected virtual void OnInsert (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Az elem beszúrása a kulcs."
    - id: value
      type: System.Object
      description: "Az elem beszúrása a értéke."
  overload: System.Collections.DictionaryBase.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  id: OnInsertComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnInsertComplete(Object,Object)
  nameWithType: DictionaryBase.OnInsertComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsertComplete(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Hajt végre további egyéni folyamatok után az új elem beszúrása a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan bírálható felül egy származtatott osztály a megadott elem beszúrása után néhány művelet végrehajtásához.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnInsertComplete (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Az elem beszúrása a kulcs."
    - id: value
      type: System.Object
      description: "Az elem beszúrása a értéke."
  overload: System.Collections.DictionaryBase.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  id: OnRemove(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnRemove(Object,Object)
  nameWithType: DictionaryBase.OnRemove(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemove(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Egy elem eltávolítása előtt további egyéni folyamatok végez a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi valamilyen művelet végrehajtása előtt a rendszer eltávolítja a megadott elem egy származtatott osztályt.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_1_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_1_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_1_1.vb)]"
  syntax:
    content: protected virtual void OnRemove (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Az eltávolítandó elem kulcsa."
    - id: value
      type: System.Object
      description: "Az eltávolítandó elem értéke."
  overload: System.Collections.DictionaryBase.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  id: OnRemoveComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnRemoveComplete(Object,Object)
  nameWithType: DictionaryBase.OnRemoveComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemoveComplete(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Egy elemnek az eltávolítása után további egyéni folyamatok végez a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan bírálható felül egy származtatott osztály a megadott elem eltávolítása után néhány művelet végrehajtásához.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnRemoveComplete (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Az eltávolítandó elem kulcsa."
    - id: value
      type: System.Object
      description: "Az eltávolítandó elem értéke."
  overload: System.Collections.DictionaryBase.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  id: OnSet(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnSet(Object,Object,Object)
  nameWithType: DictionaryBase.OnSet(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSet(Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Érték beállítása előtt további egyéni folyamatok végez a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi származtatott osztály valamilyen művelet végrehajtása előtt a megadott elem értéke legyen.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/576c3070-5898-49fc-92c2-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/576c3070-5898-49fc-92c2-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/576c3070-5898-49fc-92c2-_1.vb)]"
  syntax:
    content: protected virtual void OnSet (object key, object oldValue, object newValue);
    parameters:
    - id: key
      type: System.Object
      description: "Keresse meg az elem kulcsa."
    - id: oldValue
      type: System.Object
      description: "A régi érték a társított elem `key`."
    - id: newValue
      type: System.Object
      description: "Az új érték a társított elem `key`."
  overload: System.Collections.DictionaryBase.OnSet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  id: OnSetComplete(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnSetComplete(Object,Object,Object)
  nameWithType: DictionaryBase.OnSetComplete(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSetComplete(Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Érték beállítása után további egyéni folyamatok elvégzi a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> példány."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan általi származtatott osztály valamilyen művelet végrehajtása után a megadott elem értéke legyen.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  syntax:
    content: protected virtual void OnSetComplete (object key, object oldValue, object newValue);
    parameters:
    - id: key
      type: System.Object
      description: "Keresse meg az elem kulcsa."
    - id: oldValue
      type: System.Object
      description: "A régi érték a társított elem `key`."
    - id: newValue
      type: System.Object
      description: "Az új érték a társított elem `key`."
  overload: System.Collections.DictionaryBase.OnSetComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  id: OnValidate(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnValidate(Object,Object)
  nameWithType: DictionaryBase.OnValidate(Object,Object)
  fullName: System.Collections.DictionaryBase.OnValidate(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "További egyéni folyamatok hajt végre, az elemet a megadott adatcserekulcs és érvényesítése során."
  remarks: "Ez a módszer az alapértelmezett implementációja olyan bírálható felül egy származtatott osztály néhány művelet végrehajtásához a megadott elem ellenőrzését.       On * módszerek által visszaadott példányon kerül meghívásra a <xref:System.Collections.DictionaryBase.Dictionary%2A>tulajdonság, de nem a példányon által visszaadott a <xref:System.Collections.DictionaryBase.InnerHashtable%2A>tulajdonság.</xref:System.Collections.DictionaryBase.InnerHashtable%2A> </xref:System.Collections.DictionaryBase.Dictionary%2A>       Ez a módszer az alapértelmezett implementációja O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_2_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_2_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_2_1.vb)]"
  syntax:
    content: protected virtual void OnValidate (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Ellenőrizze az elem kulcsa."
    - id: value
      type: System.Object
      description: "Az elem ellenőrzése értéke."
  overload: System.Collections.DictionaryBase.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Egy érték, amely jelzi, hogy hozzáférést lekérdezi egy <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum szinkronizálása (többszálú futtatásra)."
  remarks: "A <xref:System.Collections.DictionaryBase>objektum nincs szinkronizálva.</xref:System.Collections.DictionaryBase> Származtatott osztályok is adja meg a szinkronizált verzióját a <xref:System.Collections.DictionaryBase>osztály használata a <xref:System.Collections.ICollection.SyncRoot%2A>tulajdonság.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.DictionaryBase>       Egy gyűjtemény számbavétele alapvetően nem szálbiztos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cs[System.Collections.DictionaryBase#3](~/add/codesnippet/csharp/f850b608-c07e-40f9-af58-_1.cs)]\n [!code-cpp[System.Collections.DictionaryBase#3](~/add/codesnippet/cpp/f850b608-c07e-40f9-af58-_1.cpp)]\n [!code-vb[System.Collections.DictionaryBase#3](~/add/codesnippet/visualbasic/f850b608-c07e-40f9-af58-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférést a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum szinkronizálása (többszálú futtatásra); egyéb esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása lekérdezi egy <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum."
  remarks: "Származtatott osztályok is adja meg a saját szinkronizált verzióját a <xref:System.Collections.DictionaryBase>osztály használata a <xref:System.Collections.ICollection.SyncRoot%2A>tulajdonság.</xref:System.Collections.ICollection.SyncRoot%2A> </xref:System.Collections.DictionaryBase> A szinkronizálási kódot kell műveleteket végezhet a <xref:System.Collections.ICollection.SyncRoot%2A>tulajdonsága a <xref:System.Collections.DictionaryBase>objektum, nem közvetlenül a a <xref:System.Collections.DictionaryBase>objektum.</xref:System.Collections.DictionaryBase> </xref:System.Collections.DictionaryBase> </xref:System.Collections.ICollection.SyncRoot%2A> Ez biztosítja, hogy a gyűjtemények más objektumok származó megfelelő működését. Pontosabban, tart fenn a megfelelő szinkronizálási más szállal, amely előfordulhat, hogy egyidejűleg módosítása a <xref:System.Collections.DictionaryBase>objektum.</xref:System.Collections.DictionaryBase>       Egy gyűjtemény számbavétele alapvetően nem szálbiztos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cs[System.Collections.DictionaryBase#3](~/add/codesnippet/csharp/86708232-6546-45cc-abc0-_1.cs)]\n [!code-cpp[System.Collections.DictionaryBase#3](~/add/codesnippet/cpp/86708232-6546-45cc-abc0-_1.cpp)]\n [!code-vb[System.Collections.DictionaryBase#3](~/add/codesnippet/visualbasic/86708232-6546-45cc-abc0-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum."
  overload: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "A megadott kulcs és az érték egy elem hozzáadása a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>."
  remarks: "Olyan objektum, amely nincs összefüggésben állapotát és a kivonatot kód között általában nem használandó az kulcsként. Például <xref:System.String>objektumok jobb, mint amelyek <xref:System.Text.StringBuilder>objektumok számára adható meg kulcsként.</xref:System.Text.StringBuilder> </xref:System.String>       Használhatja a <xref:System.Collections.IDictionary.Item%2A>tulajdonság új elemek hozzáadásához úgy, hogy a kulcs értékét, amely nem szerepel a <xref:System.Collections.DictionaryBase>, például `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.DictionaryBase> </xref:System.Collections.IDictionary.Item%2A> Azonban ha a megadott kulcs már létezik a <xref:System.Collections.DictionaryBase>beállításánál a <xref:System.Collections.IDictionary.Item%2A>tulajdonság felülírja a régi értéket.</xref:System.Collections.IDictionary.Item%2A> </xref:System.Collections.DictionaryBase> Ezzel szemben a <xref:System.Collections.IDictionary.Add%2A>metódus nem módosítja a meglévő elemeket.</xref:System.Collections.IDictionary.Add%2A>       Ez a módszer O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/c65f1d46-c6ba-40bd-bf67-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/c65f1d46-c6ba-40bd-bf67-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/c65f1d46-c6ba-40bd-bf67-_1.vb)]"
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "Adja hozzá az elem kulcsa."
    - id: value
      type: System.Object
      description: "Az elem hozzáadása a értékét."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Már létezik ilyen kulccsal rendelkező elemet a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> csak olvasható.       – vagy – a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Meghatározza, hogy a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> egy adott kulcs tartalmazza."
  remarks: "Ez a módszer O(1) során.       A .NET-keretrendszer 2.0-s verziótól kezdődően ez a módszer a gyűjtemény-objektumokat használ <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>metódusai `key` meghatározásához e `item` létezik.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> A .NET-keretrendszer korábbi verzióiban ez a döntés használatával történt a <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>módszerek a `key` paraméter a gyűjtemény objektumokon.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/c59cd535-1a58-4e00-98b8-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/c59cd535-1a58-4e00-98b8-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/c59cd535-1a58-4e00-98b8-_1.vb)]"
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "A kulcsot, keresse meg a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> rendelkezik a megadott kulcs; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy egy <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektumnak egy rögzített méretű."
  remarks: "Rögzített méretű gyűjtemény nem teszi lehetővé hozzáadását és eltávolítását, az elem után a gyűjtemény létrejött, de lehetővé teszi, hogy a meglévő elemeket módosítása.       A gyűjtemény rögzített méretű egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a hozzáadása és eltávolítása elemek; Ezért ha módosítás történik az alapul szolgáló gyűjtemény, hozzáadását és eltávolítását, az elem, beleértve a rögzített méretű gyűjtemény tükrözi ezeket a módosításokat.       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum rendelkezik egy rögzített méretű; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy egy <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum csak olvasható."
  remarks: "A csak olvasható gyűjtemény nem teszi lehetővé a hozzáadása, eltávolítása vagy módosítása az elem a gyűjtemény létrehozása után.       A gyűjtemény csak olvasható egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a módosítását a gyűjtemény; Ezért ha az alapul szolgáló gyűjtemény módosításai, a csak olvasható gyűjtemény tükrözi ezeket a módosításokat.       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum csak olvasható; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi vagy beállítja az adott kulcshoz hozzárendelt értéket."
  remarks: "Ez a tulajdonság lehetővé teszi a hozzáférést egy adott elem a gyűjteményben a következő szintaxissal: `myCollection[key]`.       Használhatja a <xref:System.Collections.IDictionary.Item%2A>tulajdonság új elemek hozzáadásához úgy, hogy a kulcs értékét, amely nem szerepel a <xref:System.Collections.DictionaryBase>, például `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.DictionaryBase> </xref:System.Collections.IDictionary.Item%2A> Azonban ha a megadott kulcs már létezik a <xref:System.Collections.DictionaryBase>beállításánál a <xref:System.Collections.IDictionary.Item%2A>tulajdonság felülírja a régi értéket.</xref:System.Collections.IDictionary.Item%2A> </xref:System.Collections.DictionaryBase> Ezzel szemben a <xref:System.Collections.IDictionary.Add%2A>metódus nem módosítja a meglévő elemeket.</xref:System.Collections.IDictionary.Add%2A>       Ez a tulajdonság értékének beolvasása során O(1); a következő tulajdonság beállítása során is O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/24404b11-3020-40f8-8aa1-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/24404b11-3020-40f8-8aa1-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/24404b11-3020-40f8-8aa1-_1.vb)]"
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "A kulcs értéke beolvasni vagy megadni."
    return:
      type: System.Object
      description: "A megadott kulcshoz hozzárendelt értéket. Ha a megadott kulcs nem található, próbál szerezni az értéket ad vissza <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, és állítsa be úgy próbál hoz létre egy új elem a megadott kulcs használatával."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A tulajdonság értéke és az <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> csak olvasható.       – vagy – a tulajdonság értéke, <code> key </code> nem létezik a gyűjteményben, és a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi egy <xref:System.Collections.ICollection>a kulcsokat a tartalmazó objektum a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum.</xref:System.Collections.ICollection>"
  remarks: "A kulcsok sorrendje a <xref:System.Collections.ICollection>objektum nincs megadva, de nem ugyanabban a sorrendben, mint a hozzájuk társított értékeket a <xref:System.Collections.ICollection>által visszaadott objektum a <xref:System.Collections.IDictionary.Values%2A>tulajdonság.</xref:System.Collections.IDictionary.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       A visszaadott <xref:System.Collections.ICollection>Nincs statikus másolatát; ehelyett a <xref:System.Collections.ICollection>hivatkozik vissza az eredeti kulcsok <xref:System.Collections.DictionaryBase>objektum.</xref:System.Collections.DictionaryBase> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Ezért megváltozik a <xref:System.Collections.DictionaryBase>továbbra is megjelennek a visszaadott <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.DictionaryBase>       Ez a tulajdonság értékének beolvasása során O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/55fc7d60-7b22-451a-9b28-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/55fc7d60-7b22-451a-9b28-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/55fc7d60-7b22-451a-9b28-_1.vb)]"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "Egy <xref:System.Collections.ICollection>a kulcsokat a tartalmazó objektum a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum.</xref:System.Collections.ICollection>"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Az elem eltávolítja a megadott kulccsal a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>."
  remarks: "Ha a <xref:System.Collections.DictionaryBase>nem tartalmaz egy elemet a megadott kulccsal, a <xref:System.Collections.DictionaryBase>változatlan marad.</xref:System.Collections.DictionaryBase> </xref:System.Collections.DictionaryBase> Nincs kivétel történt.       Ez a módszer O(1) során."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/ce3b6ffc-125d-4340-aa5a-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/ce3b6ffc-125d-4340-aa5a-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/ce3b6ffc-125d-4340-aa5a-_1.vb)]"
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "Az eltávolítandó elem kulcsa."
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> csak olvasható.       – vagy – a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> rögzített méretű rendelkezik."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Lekérdezi egy <xref:System.Collections.ICollection>az értékeket tartalmazó objektum a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum.</xref:System.Collections.ICollection>"
  remarks: "Az értékek sorrendjét a <xref:System.Collections.ICollection>objektum nincs megadva, de nem ugyanabban a sorrendben, mint a hozzá tartozó kulcsok a <xref:System.Collections.ICollection>által visszaadott objektum a <xref:System.Collections.IDictionary.Keys%2A>tulajdonság.</xref:System.Collections.IDictionary.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       A visszaadott <xref:System.Collections.ICollection>Nincs statikus másolatát; ehelyett a <xref:System.Collections.ICollection>hivatkozik vissza az eredeti értékek <xref:System.Collections.DictionaryBase>objektum.</xref:System.Collections.DictionaryBase> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Ezért megváltozik a <xref:System.Collections.DictionaryBase>továbbra is megjelennek a visszaadott <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.DictionaryBase>       Ez a tulajdonság értékének beolvasása során O(1)."
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/48c1eb68-69bc-40ec-afd8-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/48c1eb68-69bc-40ec-afd8-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/48c1eb68-69bc-40ec-afd8-_1.vb)]"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Egy <xref:System.Collections.ICollection>az értékeket tartalmazó objektum a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> objektum.</xref:System.Collections.ICollection>"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Values*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Értéket ad vissza egy <xref:System.Collections.IEnumerator>keresztül, amely megismétli a <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége. Ezért használatával `foreach` ajánlott, az adatbázis közvetlen módosítása az enumerátor helyett.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.IEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.IEnumerator.Reset%2A> At ez elhelyezése, hívja <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.IEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.IEnumerator.Current%2A>átállítása.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Ha <xref:System.Collections.IEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.IEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.IEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.IEnumerator.MoveNext%2A>visszaadott `false`, hívó <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> követ</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenné válik, és <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>egy <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> jelez</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> , vagy hívja a következő Ha a gyűjtemény módosítás közötti <xref:System.Collections.IEnumerator.MoveNext%2A>és <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>adja vissza az elem, értékűre van állítva, akkor is, ha a számláló már érvénytelenné válik.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem szálbiztos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Ez a módszer O(1) során."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.DictionaryBase&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.DictionaryBase.#ctor
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: DictionaryBase()
  nameWithType: DictionaryBase.DictionaryBase()
  fullName: System.Collections.DictionaryBase.DictionaryBase()
- uid: System.Collections.DictionaryBase.Clear
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Clear()
  nameWithType: DictionaryBase.Clear()
  fullName: System.Collections.DictionaryBase.Clear()
- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DictionaryBase.CopyTo(Array,Int32)
  fullName: System.Collections.DictionaryBase.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.DictionaryBase.Count
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Count
  nameWithType: DictionaryBase.Count
  fullName: System.Collections.DictionaryBase.Count
- uid: System.Collections.DictionaryBase.Dictionary
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
  fullName: System.Collections.DictionaryBase.Dictionary
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.DictionaryBase.GetEnumerator
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: DictionaryBase.GetEnumerator()
  fullName: System.Collections.DictionaryBase.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.DictionaryBase.InnerHashtable
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
  fullName: System.Collections.DictionaryBase.InnerHashtable
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections.DictionaryBase.OnClear
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClear()
  nameWithType: DictionaryBase.OnClear()
  fullName: System.Collections.DictionaryBase.OnClear()
- uid: System.Collections.DictionaryBase.OnClearComplete
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClearComplete()
  nameWithType: DictionaryBase.OnClearComplete()
  fullName: System.Collections.DictionaryBase.OnClearComplete()
- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnGet(Object,Object)
  nameWithType: DictionaryBase.OnGet(Object,Object)
  fullName: System.Collections.DictionaryBase.OnGet(Object,Object)
- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsert(Object,Object)
  nameWithType: DictionaryBase.OnInsert(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsert(Object,Object)
- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsertComplete(Object,Object)
  nameWithType: DictionaryBase.OnInsertComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsertComplete(Object,Object)
- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemove(Object,Object)
  nameWithType: DictionaryBase.OnRemove(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemove(Object,Object)
- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemoveComplete(Object,Object)
  nameWithType: DictionaryBase.OnRemoveComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemoveComplete(Object,Object)
- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSet(Object,Object,Object)
  nameWithType: DictionaryBase.OnSet(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSet(Object,Object,Object)
- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSetComplete(Object,Object,Object)
  nameWithType: DictionaryBase.OnSetComplete(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSetComplete(Object,Object,Object)
- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnValidate(Object,Object)
  nameWithType: DictionaryBase.OnValidate(Object,Object)
  fullName: System.Collections.DictionaryBase.OnValidate(Object,Object)
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.DictionaryBase.#ctor*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: DictionaryBase
  nameWithType: DictionaryBase.DictionaryBase
- uid: System.Collections.DictionaryBase.Clear*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Clear
  nameWithType: DictionaryBase.Clear
- uid: System.Collections.DictionaryBase.CopyTo*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: CopyTo
  nameWithType: DictionaryBase.CopyTo
- uid: System.Collections.DictionaryBase.Count*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Count
  nameWithType: DictionaryBase.Count
- uid: System.Collections.DictionaryBase.Dictionary*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
- uid: System.Collections.DictionaryBase.GetEnumerator*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: GetEnumerator
  nameWithType: DictionaryBase.GetEnumerator
- uid: System.Collections.DictionaryBase.InnerHashtable*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
- uid: System.Collections.DictionaryBase.OnClear*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClear
  nameWithType: DictionaryBase.OnClear
- uid: System.Collections.DictionaryBase.OnClearComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClearComplete
  nameWithType: DictionaryBase.OnClearComplete
- uid: System.Collections.DictionaryBase.OnGet*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnGet
  nameWithType: DictionaryBase.OnGet
- uid: System.Collections.DictionaryBase.OnInsert*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsert
  nameWithType: DictionaryBase.OnInsert
- uid: System.Collections.DictionaryBase.OnInsertComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsertComplete
  nameWithType: DictionaryBase.OnInsertComplete
- uid: System.Collections.DictionaryBase.OnRemove*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemove
  nameWithType: DictionaryBase.OnRemove
- uid: System.Collections.DictionaryBase.OnRemoveComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemoveComplete
  nameWithType: DictionaryBase.OnRemoveComplete
- uid: System.Collections.DictionaryBase.OnSet*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSet
  nameWithType: DictionaryBase.OnSet
- uid: System.Collections.DictionaryBase.OnSetComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSetComplete
  nameWithType: DictionaryBase.OnSetComplete
- uid: System.Collections.DictionaryBase.OnValidate*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnValidate
  nameWithType: DictionaryBase.OnValidate
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator
