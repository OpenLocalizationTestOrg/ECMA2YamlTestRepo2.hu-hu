### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerName
  id: PeerName
  children:
  - System.Net.PeerToPeer.PeerName.#ctor(System.String)
  - System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  - System.Net.PeerToPeer.PeerName.Authority
  - System.Net.PeerToPeer.PeerName.Classifier
  - System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  - System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  - System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerName.Equals(System.Object)
  - System.Net.PeerToPeer.PeerName.GetHashCode
  - System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.IsSecured
  - System.Net.PeerToPeer.PeerName.PeerHostName
  - System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerName.ToString
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
  type: Class
  summary: "Megadja az értékeket, amelyek meghatározzák a társ-társ PeerName objektum. A partner neve: általában egy társ erőforrás azonosításához használt karakterlánc."
  syntax:
    content: 'public class PeerName : IEquatable<System.Net.PeerToPeer.PeerName>, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Net.PeerToPeer.PeerName>
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicializál egy új objektumtípus <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> a megadott nevű teljesen minősített társ <xref:System.String>érték.</xref:System.String>"
  syntax:
    content: public PeerName (string remotePeerName);
    parameters:
    - id: remotePeerName
      type: System.String
      description: "A partner neve, mint kódolni tartalmaz egy <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> példány."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.String>megadott érvénytelen <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>remotePeerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Kitölti egy <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objektum szerializálása szükséges adatokat a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "Ez a konstruktor van szükség az ilyen típusú deszerializálása."
  syntax:
    content: protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Amely tárolja az adatokat, ez a példány deszerializálásához szükséges objektum hivatkozását."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Az a környezetben, amely lehetővé teszi a számára az adatok deszerializálása során. Más néven a szerializált adatok forrását."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egy vagy több paraméter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  id: '#ctor(System.String,System.Net.PeerToPeer.PeerNameType)'
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> osztály."
  remarks: "Ez a konstruktor típusú objektum beállítása/beolvasása <xref:System.Net.PeerToPeer.PeerName>, amely tartalmazza a teljes nevet, a társ.</xref:System.Net.PeerToPeer.PeerName> Azt is, hogy a partner neve védett, vagy nem biztonságos.       Ez a példány alapértelmezett társ identitást használja az aktuális felhasználó és a megadott <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, milyen típusú létrehozása a megadott osztályozó és írja be a partner neve mellett.</xref:System.Net.PeerToPeer.PeerName.Classifier%2A>"
  syntax:
    content: public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);
    parameters:
    - id: classifier
      type: System.String
      description: "<xref:System.String>amely tartalmazza a partner neve, mint kódolni egy <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.String>"
    - id: peerNameType
      type: System.Net.PeerToPeer.PeerNameType
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameType&quot;></xref>számbavételi érték, amely határozza meg a partner neve létrehozásához."
  overload: System.Net.PeerToPeer.PeerName.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.Net.PeerToPeer.PeerName.Classifier*>egy vagy több érvénytelen karaktereket tartalmaz.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egy vagy több paraméter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-Alapjául szolgáló használt alapértelmezett identitást a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> nem olvasható be.      -A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> nem hozható létre."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Authority
  id: Authority
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "A szolgáltató által használt megadó karakterláncot ad vissza <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum."
  remarks: "Csak a tulajdonosa, vagy társ állomás regisztrálhatja a biztonságos partner neve. A partner neve tekintendő, ha önaláírt tanúsítványt biztonsági mentéskor védett.       Társ nevek kis-és nagybetűket, és a partner nevének formátuma: *Authority.Classifier*. Például a &quot;0.MyPeerName&quot; egy megfelelően formázott partner neve."
  syntax:
    content: public string Authority { get; }
    return:
      type: System.String
      description: "A karakterlánc, amely tartalmazza a megadott hitelesítési része <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>. Védett társ nevek Ez a tulajdonság a karakterláncként negyven-hexadecimális nyilvános kulcsot tartalmazza. Nem biztonságos társ nevek Ez a tulajdonság értéke nulla (0)."
  overload: System.Net.PeerToPeer.PeerName.Authority*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Classifier
  id: Classifier
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "A társ-társ osztályozó tartalmazó karakterláncot ad vissza <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "The format of a peer name is: *Authority.Classifier*. The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` (\"\\0\") terminator. Peer name strings are case-sensitive.  \n  \n For secured peer names, the classifier and the dot (period) after the authority are optional. For unsecured peer names, the classifier is not optional."
  syntax:
    content: public string Classifier { get; }
    return:
      type: System.String
      description: "A karakterlánc, amely a osztályozó része alapján határozza meg a partner neve, a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> vagy belül a PNRP-feloldás <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.       Ha explicit módon megadott, alapértelmezett összes tulajdonságának értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referencia típusok és típusú tulajdonságok nulla (0) <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Classifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  id: CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Létrehoz egy új példányt a megadott <xref:System.Net.PeerToPeer.PeerName.PeerHostName*>objektum a megadott társ állomásnévvel.</xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  remarks: "A társ-társ állomás a &quot;seed&quot;csomópont felelős a társ-társ hálózati munkamenet kezdeményezése, meghívása állomásokhoz, amelynek ez a hálózati kapcsolat típus kommunikáció például játék munkamenetből vagy annak Csevegés csoportok számára leginkább megfelelő alkalmazások részt.       Ez a módszer segítségével hozzon létre egy <xref:System.Net.PeerToPeer.PeerName>objektum alapján a <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A>tulajdonság.</xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> </xref:System.Net.PeerToPeer.PeerName> A partner neve nincs beállítva a hívó csomópont és azonosítóját."
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);
    parameters:
    - id: peerHostName
      type: System.String
      description: "A DNS-minősített állomásnév tartalmazó karakterlánc."
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum, amely a megadott társ állomás nevét jelöli."
  overload: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.String>megadott van nem egy érvényes társ állomás név karakterláncát.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Net.PeerToPeer.PeerName.PeerHostName&quot;></xref>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> nem hozható létre a megadott a<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  id: CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Létrehoz egy új <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> tartományvezérlőkkel történő lecserélésével a <xref:System.Net.PeerToPeer.PeerName.Classifier*>mezőben megadva a megadott <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> a megadott osztályozó karakterlánc-értékkel rendelkező objektum.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
  remarks: "A <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>rendszer hozzáfűzi a meglévő <xref:System.Net.PeerToPeer.PeerName.Authority%2A>a <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> része</xref:System.Net.PeerToPeer.PeerName.Authority%2A> </xref:System.Net.PeerToPeer.PeerName.Classifier%2A> Ez a karakterlánc értéke ne legyen nagyobb 149 karakter hosszú, beleértve a `null` lezáró. Adja meg `null` vissza az identitás a partner neve."
  syntax:
    content: public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektumot, amelyről az új osztályozó karakterlánc-érték beállítása."
    - id: classifier
      type: System.String
      description: "A <xref:System.Net.PeerToPeer.PeerName.Classifier*>beállítása a visszaadott <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerName.Classifier*>"
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "Az új <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum, amely tartalmazza a frissített osztályozó."
  overload: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.String>biztosított nincs olyan érvényes partner neve osztályozó.</xref:System.String>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Egy vagy több paraméter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> nem hozható létre a megadott a<xref:System.Net.PeerToPeer.PeerName.PeerHostName*></xref:System.Net.PeerToPeer.PeerName.PeerHostName*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  id: Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Hajtja végre az aktuális kis-és nagybetűket összehasonlítása <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> és a megadott partner neve."
  remarks: "Két partner neve megegyezik, ha az azonos karakter szerepel bennük minősülnek azok <xref:System.Net.PeerToPeer.PeerName.Authority%2A>és <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>összetevők.</xref:System.Net.PeerToPeer.PeerName.Classifier%2A> </xref:System.Net.PeerToPeer.PeerName.Authority%2A>       A karakterláncok előtti összehasonlító nem normalizations elvégzett.  Minden normalizálási befejezésének a peer name objektumok létrehozása előtt vagy közben."
  syntax:
    content: public bool Equals (System.Net.PeerToPeer.PeerName other);
    parameters:
    - id: other
      type: System.Net.PeerToPeer.PeerName
      description: "A partner neve való összehasonlításra ez <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
    return:
      type: System.Boolean
      description: "Adja vissza <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> Ha a megadott <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> azonosítja ugyanaz az erőforrás aktuális peer name objektumot; ellenkező esetben adja vissza ezt a módszert <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.       Ez a módszer emellett adja vissza <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> Ha <code> other </code> értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Meghatározza, hogy a tartalom <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> megegyezik a tartalmat egy másik objektum."
  remarks: "Ez a módszer örökli az alapértelmezett aláírás és a <xref:System.Object>.</xref:System.Object> viselkedése"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "A <xref:System.Object>való összehasonlításra az aktuális <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> és az összehasonlítási objektum ugyanazokat az információkat tartalmazza; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  id: GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Felülbírálja a <xref:System.Object.GetHashCode*>metódus.</xref:System.Object.GetHashCode*>"
  remarks: "Két objektum minősülnek egyenlő, ha ez a módszer az azonos hashcode helyezni őket."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Az aktuális <xref:System.Object>.</xref:System.Object> kivonatkódját"
  overload: System.Net.PeerToPeer.PeerName.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "A szerializálási adatokat objektum szerializálása szükséges adatok tölti fel a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>."
  remarks: "Származtatott típusnak meg kell hívnia az alaptípus tartalomtípusa <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>metódus.</xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A szerializált adatok társított tárolja a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A szerializált folyamban társított célját tartalmazza a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum."
  overload: System.Net.PeerToPeer.PeerName.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  id: IsSecured
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Logikai érték, amely megadja, hogy ez egy védett partner nevének beolvasása."
  remarks: "A partner neve tekintendő, ha önaláírt tanúsítványt biztonsági mentéskor védett.       Csak a tulajdonos egy védett partner neve regisztrálhatja a PNRP Protokollal."
  syntax:
    content: public bool IsSecured { get; }
    return:
      type: System.Boolean
      description: "Ha <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a partner neve védi. a titkos kulcs / nyilvános kulcsból álló kulcspárt. A neve tartalmazza a biztonságos kivonatoló algoritmus (SHA) kivonatát, hogy társ gép tanúsítványának nyilvános kulcsa. Egyébként, ha <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a partner neve nincs társított identitása.       Ha explicit módon megadott, alapértelmezett összes tulajdonságának értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referencia típusok és típusú tulajdonságok nulla (0) <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerName.IsSecured*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  id: PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdezi a társ-társ állomás nevét. A DNS-kódolású verziója, amelyet a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> amely megegyezik egy PeerHostName, hogy mindkét azonosítókat.  A kettő közötti különbség vizuális ábrázolását."
  remarks: "A társ-társ állomás a &quot;seed&quot;csomópont felelős a társ-társ hálózati munkamenet kezdeményezése, meghívása állomásokhoz, amelynek ez a hálózati kapcsolat típus kommunikáció például játék munkamenetből vagy annak Csevegés csoportok számára leginkább megfelelő alkalmazások részt.       A PeerHostName tulajdonság határozza meg, amely a társ-társ hálózati munkamenet létrehozása, és amely a gazdagép a munkamenet tekinthető társ nevét.  A gazdagép a társ-társ hálózati munkamenetek gyűjthet társak be egynél több <xref:System.Net.PeerToPeer.Cloud>.</xref:System.Net.PeerToPeer.Cloud> Is egy társ előfordulhat, hogy egyidejűleg futhat egynél több társ állomás."
  syntax:
    content: public string PeerHostName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>érték, amely a társ-társ állomás neve.</xref:System.String> Kivéve, ha explicit módon megadott, alapértelmezett összes tulajdonságának értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referencia típusok."
  overload: System.Net.PeerToPeer.PeerName.PeerHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Megvalósítja a <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> felületet, és visszaadja az adatokat szükség lehet, mert a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> példány."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A szerializált adatok társított tárolja a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A szerializált folyamban társított célját tartalmazza a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum."
  overload: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerName.ToString
  id: ToString
  parent: System.Net.PeerToPeer.PeerName
  langs:
  - csharp
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Az aktuális karakterlánc alakot adja vissza <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum."
  remarks: "Ez a módszer örökli az alapértelmezett aláírás és a <xref:System.Object>.</xref:System.Object> viselkedése"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: 'Az aktuális jelölő karakterlánccá <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>, és a megadott, a következő formátumban: *Authority.Classifier*. Például &quot;0.MyInternetPeer.&quot;'
  overload: System.Net.PeerToPeer.PeerName.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String)
  nameWithType: PeerName.PeerName(String)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(SerializationInfo,StreamingContext)
  nameWithType: PeerName.PeerName(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName(String,PeerNameType)
  nameWithType: PeerName.PeerName(String,PeerNameType)
  fullName: System.Net.PeerToPeer.PeerName.PeerName(String,PeerNameType)
- uid: System.Net.PeerToPeer.PeerNameType
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameType
  nameWithType: PeerNameType
  fullName: System.Net.PeerToPeer.PeerNameType
- uid: System.Net.PeerToPeer.PeerName.Authority
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
  fullName: System.Net.PeerToPeer.PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
  fullName: System.Net.PeerToPeer.PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName(String)
  nameWithType: PeerName.CreateFromPeerHostName(String)
  fullName: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(String)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName(PeerName,String)
  nameWithType: PeerName.CreateRelativePeerName(PeerName,String)
  fullName: System.Net.PeerToPeer.PeerName.CreateRelativePeerName(PeerName,String)
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(PeerName)
  nameWithType: PeerName.Equals(PeerName)
  fullName: System.Net.PeerToPeer.PeerName.Equals(PeerName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerName.Equals(System.Object)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals(Object)
  nameWithType: PeerName.Equals(Object)
  fullName: System.Net.PeerToPeer.PeerName.Equals(Object)
- uid: System.Net.PeerToPeer.PeerName.GetHashCode
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode()
  nameWithType: PeerName.GetHashCode()
  fullName: System.Net.PeerToPeer.PeerName.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.IsSecured
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
  fullName: System.Net.PeerToPeer.PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
  fullName: System.Net.PeerToPeer.PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerName.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerName.ToString
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString()
  nameWithType: PeerName.ToString()
  fullName: System.Net.PeerToPeer.PeerName.ToString()
- uid: System.Net.PeerToPeer.PeerName.#ctor*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerName
  nameWithType: PeerName.PeerName
- uid: System.Net.PeerToPeer.PeerName.Authority*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Authority
  nameWithType: PeerName.Authority
- uid: System.Net.PeerToPeer.PeerName.Classifier*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Classifier
  nameWithType: PeerName.Classifier
- uid: System.Net.PeerToPeer.PeerName.CreateFromPeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateFromPeerHostName
  nameWithType: PeerName.CreateFromPeerHostName
- uid: System.Net.PeerToPeer.PeerName.CreateRelativePeerName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: CreateRelativePeerName
  nameWithType: PeerName.CreateRelativePeerName
- uid: System.Net.PeerToPeer.PeerName.Equals*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: Equals
  nameWithType: PeerName.Equals
- uid: System.Net.PeerToPeer.PeerName.GetHashCode*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetHashCode
  nameWithType: PeerName.GetHashCode
- uid: System.Net.PeerToPeer.PeerName.GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: GetObjectData
  nameWithType: PeerName.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.IsSecured*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: IsSecured
  nameWithType: PeerName.IsSecured
- uid: System.Net.PeerToPeer.PeerName.PeerHostName*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: PeerHostName
  nameWithType: PeerName.PeerHostName
- uid: System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerName.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerName.ToString*
  parent: System.Net.PeerToPeer.PeerName
  isExternal: false
  name: ToString
  nameWithType: PeerName.ToString
