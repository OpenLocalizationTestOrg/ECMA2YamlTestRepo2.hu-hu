### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  id: KeyedHashAlgorithm
  children:
  - System.Security.Cryptography.KeyedHashAlgorithm.#ctor
  - System.Security.Cryptography.KeyedHashAlgorithm.Create
  - System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)
  - System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.KeyedHashAlgorithm.Key
  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  langs:
  - csharp
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
  type: Class
  summary: "Az absztrakt osztály, a mely összes implementációja létre kivonatoló algoritmusok kell származnia jelöli."
  remarks: "Kivonatoló függvényeket térkép bináris karakterláncok egy tetszőleges hosszúságú kis rögzített hosszúságú bináris sorba. Kriptográfiai kivonatoló függvényt, hogy a rendszer számításilag lehessen hozni található két különböző bemeneti ugyanarra az értékre, hogy kivonatoló tulajdonsága. Az adatok kis változtatások a kivonat nagy, előre nem látható módosítását eredményezi.       Egy létre kivonatoló kulcsalgoritmus, akkor a kulcs-függő, egyirányú kivonat függvény üzenethitelesítő kódot használja. Csak személy, aki ismeri a kulcs ellenőrizheti a kivonatot. Létre kivonatoló algoritmusok eredetiséget titoktartási nélkül adja meg.       Kivonatoló függvényeket gyakran használják a digitális aláírással megőrzött és az adatok sértetlenségét. A <xref:System.Security.Cryptography.HMACSHA1>osztály egyik példája egy létre kivonatoló kulcsalgoritmus.</xref:System.Security.Cryptography.HMACSHA1>"
  example:
  - "The following code example demonstrates how to derive from the KeyedHashAlgorithm class.  \n  \n [!code-cs[KeyedHashAlgorithm#1](~/add/codesnippet/csharp/t-system.security.crypto_129_1.cs)]\n [!code-vb[KeyedHashAlgorithm#1](~/add/codesnippet/visualbasic/t-system.security.crypto_129_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class KeyedHashAlgorithm : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: KeyedHashAlgorithm()
  nameWithType: KeyedHashAlgorithm.KeyedHashAlgorithm()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyedHashAlgorithm()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> osztály."
  remarks: "Absztrakt osztály példánya nem hozható létre. Alkalmazás kód létrehoz egy új példányt származtatott osztály."
  syntax:
    content: protected KeyedHashAlgorithm ();
    parameters: []
  overload: System.Security.Cryptography.KeyedHashAlgorithm.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: Create()
  nameWithType: KeyedHashAlgorithm.Create()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Létrehoz egy új alapértelmezett végrehajtása egy létre kivonatoló kulcsalgoritmus."
  remarks: "Alapértelmezés szerint ez a túlterhelés használja a <xref:System.Security.Cryptography.HMACSHA1>végrehajtása egy létre kivonatoló kulcsalgoritmus.</xref:System.Security.Cryptography.HMACSHA1> Ha szeretne megadni egy másik megvalósításában, használja a <xref:System.Security.Cryptography.KeyedHashAlgorithm.Create%28System.String%29>túlterhelést, amely lehetővé teszi egy algoritmus név megadása.</xref:System.Security.Cryptography.KeyedHashAlgorithm.Create%28System.String%29> A titkosítás a konfigurációs rendszer határozza meg az <xref:System.Security.Cryptography.KeyedHashAlgorithm>osztály</xref:System.Security.Cryptography.KeyedHashAlgorithm> alapértelmezett végrehajtása"
  syntax:
    content: public static System.Security.Cryptography.KeyedHashAlgorithm Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "Egy új <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref> példány, kivéve, ha az alapértelmezett beállítások módosítása."
  overload: System.Security.Cryptography.KeyedHashAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: Create(String)
  nameWithType: KeyedHashAlgorithm.Create(String)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Létrehoz egy létre kivonatoló kulcsalgoritmus megadott végrehajtásának példánya."
  remarks: "Ez a módszer számos olyan algoritmusok, például az MD5, SHA-1, SHA-256 algoritmust és RIPEMD160 támogat. Teljes listájáért lásd: a támogatott értékek a `algName` paraméter."
  syntax:
    content: public static System.Security.Cryptography.KeyedHashAlgorithm Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "A használandó létre kivonatoló algoritmus megvalósítása. Az alábbi táblázat a érvényes értékei a `algName` paraméter és a algoritmusok rendeli.       <table><thead><tr><th> Paraméterérték       </th><th> Valósít meg       </th></tr></thead><tbody><tr><td> System.Security.Cryptography.HMAC       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> System.Security.Cryptography.KeyedHashAlgorithm       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> HMACMD5       </td><td><xref href=&quot;System.Security.Cryptography.HMACMD5&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACMD5       </td><td><xref href=&quot;System.Security.Cryptography.HMACMD5&quot;></xref></td></tr><tr><td> HMACRIPEMD160       </td><td><xref href=&quot;System.Security.Cryptography.HMACRIPEMD160&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACRIPEMD160       </td><td><xref href=&quot;System.Security.Cryptography.HMACRIPEMD160&quot;></xref></td></tr><tr><td> HMACSHA1       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA1       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;></xref></td></tr><tr><td> HMACSHA256       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA256&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA256       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA256&quot;></xref></td></tr><tr><td> HMACSHA384       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA384       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA384&quot;></xref></td></tr><tr><td> HMACSHA512       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref></td></tr><tr><td> System.Security.Cryptography.HMACSHA512       </td><td><xref href=&quot;System.Security.Cryptography.HMACSHA512&quot;></xref></td></tr><tr><td> MACTripleDES       </td><td><xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;></xref></td></tr><tr><td> System.Security.Cryptography.MACTripleDES       </td><td><xref href=&quot;System.Security.Cryptography.MACTripleDES&quot;></xref></td></tr></tbody></table>"
    return:
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "A megadott létre kivonatoló kulcsalgoritmus új példányát."
  overload: System.Security.Cryptography.KeyedHashAlgorithm.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: KeyedHashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()` metódus és a `Finalize` metódust. `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. `Finalize`Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.       Ha a `disposing` paraméter `true`, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja, amelyhez a <xref:System.Security.Cryptography.KeyedHashAlgorithm>hivatkozik.</xref:System.Security.Cryptography.KeyedHashAlgorithm> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Security.Cryptography.KeyedHashAlgorithm.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key
  id: Key
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: Key
  nameWithType: KeyedHashAlgorithm.Key
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a kivonatoló algoritmus használandó kulcs."
  remarks: "Ez a tulajdonság akkor tartozó nyilvános elérő a <xref:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue>mező.</xref:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue>"
  example:
  - "The following code example demonstrates how to override the Key property to retrieve the key used in the current <xref:System.Security.Cryptography.KeyedHashAlgorithm> object. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.KeyedHashAlgorithm> class.  \n  \n [!code-cs[System.Security.Cryptography.KeyedHashAlgorithm#22](~/add/codesnippet/csharp/p-system.security.crypto_121_1.cs)]\n [!code-vb[System.Security.Cryptography.KeyedHashAlgorithm#22](~/add/codesnippet/visualbasic/p-system.security.crypto_121_1.vb)]\n [!code-cpp[System.Security.Cryptography.KeyedHashAlgorithm#22](~/add/codesnippet/cpp/p-system.security.crypto_121_1.cpp)]"
  syntax:
    content: public virtual byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "A kivonatoló algoritmus használandó kulcs."
  overload: System.Security.Cryptography.KeyedHashAlgorithm.Key*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Kísérlet történt a kulcs-tulajdonság módosításához a kivonatolás megkezdése után."
  platform:
  - net462
- uid: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  id: KeyValue
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  langs:
  - csharp
  name: KeyValue
  nameWithType: KeyedHashAlgorithm.KeyValue
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "A kivonatoló algoritmus használandó kulcs."
  remarks: "Ez a mező keresztül érhető el a <xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A>tulajdonság.</xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A>"
  syntax:
    content: protected byte[] KeyValue;
    return:
      type: System.Byte[]
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: KeyedHashAlgorithm()
  nameWithType: KeyedHashAlgorithm.KeyedHashAlgorithm()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyedHashAlgorithm()
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Create()
  nameWithType: KeyedHashAlgorithm.Create()
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create()
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Create(String)
  nameWithType: KeyedHashAlgorithm.Create(String)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: KeyedHashAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Key
  nameWithType: KeyedHashAlgorithm.Key
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Key
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: KeyValue
  nameWithType: KeyedHashAlgorithm.KeyValue
  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue
- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor*
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm.KeyedHashAlgorithm
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create*
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Create
  nameWithType: KeyedHashAlgorithm.Create
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose*
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: KeyedHashAlgorithm.Dispose
- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key*
  parent: System.Security.Cryptography.KeyedHashAlgorithm
  isExternal: false
  name: Key
  nameWithType: KeyedHashAlgorithm.Key
