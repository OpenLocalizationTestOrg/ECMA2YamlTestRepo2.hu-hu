### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.SecurityTokenService
  id: SecurityTokenService
  children:
  - System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  - System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  - System.IdentityModel.SecurityTokenService.GetIssuerName
  - System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  - System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  - System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  - System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.Principal
  - System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.Request
  - System.IdentityModel.SecurityTokenService.Scope
  - System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  - System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  - System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  - System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  langs:
  - csharp
  name: SecurityTokenService
  nameWithType: SecurityTokenService
  fullName: System.IdentityModel.SecurityTokenService
  type: Class
  summary: "Az absztrakt alaposztálya, amely meghatározza a tulajdonságai és metódusai biztonságijogkivonat-szolgáltatás (STS)."
  remarks: "Biztonságijogkivonat-szolgáltatás létrehozásához a SecurityTokenService osztályból kell származnia. Az egyéni osztály Ha kell, legalább a felülírja a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>és <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>módszerek.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Ezeket a felülbírálásokat az STS-osztály minden más módszerekkel alapértelmezett végrehajtásának használatával létrehozott nem képes a kiállító biztonsági jogkivonatokat válaszul biztonsági jogkivonat-kérelmeket (RST). Ez azt jelenti, hogy a WS-Trust definiált probléma kötés van megvalósítva. A kötés meg van valósítva a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> A más WS-Trust kötések (megújítási, megszakítás és ellenőrzése) egyike valósíthatók meg alapértelmezés szerint, és ha az egyik ilyen kötést megfelelő RST észleli visszaérkezik a hívóhoz egy megfelelő hiba van. Természetesen, felülbírálhatja a megfelelő módszereket (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, és <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) az ilyen kötést valósít meg a biztonságijogkivonat</xref:System.IdentityModel.SecurityTokenService.Validate%2A> </xref:System.IdentityModel.SecurityTokenService.Cancel%2A> </xref:System.IdentityModel.SecurityTokenService.Renew%2A>      > [!IMPORTANT] > Egy éles használatra kész végrehajtási STS terjed ki gondos tervezéssel és a potenciális biztonsági kockázatok ilyen szolgáltatás kitettségének mérséklése jelentős erőforrásokat. Legtöbb fejlesztő Windows Identity Foundation (WIF) használatával lesz kell fejleszt alkalmazásokat, amelyek az STS szolgáltatással történő Identitáskezelés erőforrás kihelyezése helyett fejlesztése az STS szolgáltatással magát. WIF biztosít a Visual Studio bővítmény az identitás- és hozzáférés eszköz a Visual Studio 2012 segítségével a fejlesztők tesztelheti a megoldások fejlesztői környezetben. Ez az eszköz magában foglalja az STS szolgáltatással `LocalSTS`, az alkalmazás kifejlesztett egyedi jogcímeket kiszolgálására konfigurálható. Az identitás- és hozzáférés eszközzel kapcsolatos további információkért lásd: [identitás- és hozzáférés eszköz a Visual Studio 2012](~/add/includes/ajax-current-ext-md.md). Bizonyos esetekben `LocalSTS` is biztosít az alkalmazás megfelelően teszteléséhez szükséges funkciókat; például olyan forgatókönyvekben, amelyek magában foglalja a fejlesztés egy egyéni biztonságijogkivonat-kezelő számára az alkalmazások. Ebben az esetben egy vagy több egyszerű STSs, amelyek a fejlesztési környezet is telepíthető, és ezek a funkciók ellenőrzéséhez az alkalmazás, amely használható létrehozni SecurityTokenService is származik. Ez a szakasz a többi a SecurityTokenService osztály által elérhetővé tett a módszereket, amelyek lehetővé teszik egy egyszerű STS megvalósításához és kiterjesztéséhez a token kiállítási folyamatának összpontosít.       Az alábbi lista a fejlesztők kiemelkedően módszerek rövid áttekintést nyújt a teszt- vagy környezetben való használathoz.      -A <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Ez a módszer adja vissza egy <xref:System.IdentityModel.Scope>objektum, amely a függő Entitás adatait tartalmazza.</xref:System.IdentityModel.Scope> Ez az objektum a token kiállítási folyamatának többi használatban van, és az aláírási és a hitelesítő adatok titkosítása a válaszban használandó kapcsolatos adatokat tartalmaz, valamint a `AppliesTo` és `ReplyTo` (ha szükséges) címek. Ez a metódus felül kell bírálnia.      -A <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Ez a módszer adja vissza egy <xref:System.Security.Claims.ClaimsIdentity>objektum, amely tartalmazza a jogcímeket a függő Entitás való visszatéréshez.</xref:System.Security.Claims.ClaimsIdentity> Ez a metódus felül kell bírálnia.      -A <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Ez a metódus valósítja meg a token kérelemfeldolgozási sorban, amely feldolgozza a bejövő biztonsági jogkivonat kérelmet (RST) és (RSTR) választ ad a hívónak, amely egy jogkivonatot tartalmaz, amely segítségével a hitelesítést egy függő Entitás. A többi módszer SecurityTokenService osztály számos nevezzük, ezzel a módszerrel a többek között a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>és <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>módszerek.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Nem kell bírálja felül ezt a módszert, de hasznos lehet a token kérelemfeldolgozási sorban, végrehajtja az ismeretét.       Az STS szolgáltatással <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>osztály</xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> konfigurálva"
  example:
  - "The code examples that are used in the SecurityTokenService topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the implementation of a passive STS using the SecurityTokenService class.  \n  \n [!code-cs[WIFCustomTokenSTS#3](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#3)]  \n  \n The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=fullName> method from the code behind in the `default.aspx.cs` file.  \n  \n [!code-cs[WIFCustomTokenSTS#1](~/add/codesnippet/csharp/passivests/default.aspx.cs#1)]"
  syntax:
    content: public abstract class SecurityTokenService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  id: '#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)'
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenService(SecurityTokenServiceConfiguration)
  nameWithType: SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Származtatott osztályok inicializálása hívása a <xref href=&quot;System.IdentityModel.SecurityTokenService&quot;> </xref> osztály a megadott konfigurációs beállításokkal."
  remarks: "Ez a konstruktor segítségével hatókör szolgáltató és a token kibocsátói tanúsítvány inicializálása."
  syntax:
    content: protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);
    parameters:
    - id: securityTokenServiceConfiguration
      type: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
      description: "A <xref href=&quot;System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&quot;> </xref> , amely tartalmazza az STS beállításait."
  overload: System.IdentityModel.SecurityTokenService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityTokenServiceConfiguration</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Amikor felül van bírálva a származtatott osztály, elkezdi az aszinkron szakítsa meg a WS-Trust kérelmet."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    - id: callback
      type: System.AsyncCallback
      description: "A <xref:System.AsyncCallback>delegált esetén, amely a aszinkron visszavonási művelet befejeződéséről értesítést kap.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Egy objektum, amely tartalmazza az állapot információk is társítva vannak az aszinkron művelet megszakításához."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>, amely hivatkozik a aszinkron visszavonási művelet.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginCancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  id: BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Amikor felül van bírálva a származtatott osztály, elkezdi a egy aszinkron hívás a <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*>metódus.</xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*>"
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    - id: scope
      type: System.IdentityModel.Scope
      description: "A <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> , amely tartalmazza a kéréshez társított függő entitással kapcsolatos információkat."
    - id: callback
      type: System.AsyncCallback
      description: "A <xref:System.AsyncCallback>delegált esetén, amely az aszinkron művelet befejeződéséről értesítést kap.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Az aszinkron művelethez társított állapotadatait tartalmazó objektum."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>az aszinkron művelet hivatkozik, amely.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Amikor felül van bírálva a származtatott osztály, elkezdi a egy aszinkron hívás a <xref:System.IdentityModel.SecurityTokenService.GetScope*>metódus.</xref:System.IdentityModel.SecurityTokenService.GetScope*>"
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    - id: callback
      type: System.AsyncCallback
      description: "A <xref:System.AsyncCallback>delegált esetén, amely az aszinkron művelet befejeződéséről értesítést kap.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Az aszinkron művelethez társított állapotadatait tartalmazó objektum."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>, amely hivatkozik a aszinkron visszavonási művelet.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginGetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Amikor felül van bírálva a származtatott osztály, elkezdi a WS-Trust probléma hibaválasz."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    - id: callback
      type: System.AsyncCallback
      description: "A <xref:System.AsyncCallback>delegált esetén, amely a hiba aszinkron művelet befejeződéséről értesítést kap.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Egy objektum, amely tartalmazza a hiba aszinkron művelethez társított állapotadatokat."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>, amely hivatkozik a probléma aszinkron művelet.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginIssue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Amikor felül van bírálva a származtatott osztály, elkezdi az aszinkron újítsa meg a WS-Trust kérelmet."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    - id: callback
      type: System.AsyncCallback
      description: "A <xref:System.AsyncCallback>delegált esetén, amely az aszinkron befejeződéséről értesítést kap újítsa meg a műveletet.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Az aszinkron társított állapotadatait tartalmazó objektum újítsa meg a műveletet."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>, hogy a hivatkozások az aszinkron művelet megújítani.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginRenew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  id: BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Amikor felül van bírálva a származtatott osztály, elkezdi az aszinkron érvényesítése WS-Trust kérelmet."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    - id: callback
      type: System.AsyncCallback
      description: "A <xref:System.AsyncCallback>delegált esetén, amely az aszinkron befejeződéséről értesítést kap a művelet érvényesítése.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Egy objektum, amely tartalmazza az állapot információk is társítva vannak az aszinkron művelet érvényesítése."
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>hivatkozásokat az aszinkron művelet érvényesítése.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.SecurityTokenService.BeginValidate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Cancel(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ha felül van bírálva a származtatott osztály, WS-Trust megszakítja a kérést dolgoz fel."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> , amely a hívó visszatérni Kulcsalgoritmus jelöli."
  overload: System.IdentityModel.SecurityTokenService.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Létrehoz egy új <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>"
  remarks: "Közben jogkivonat kibocsátási <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A> után elindul"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A bejövő jogkivonatkérelem."
    - id: scope
      type: System.IdentityModel.Scope
      description: "A <> </> *> által visszaadott objektum <> </> *>."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "A <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*>"
  overload: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>scope</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  id: EndCancel(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndCancel(IAsyncResult)
  nameWithType: SecurityTokenService.EndCancel(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndCancel(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Felülbírálja a származtatott osztály, amikor befejeződik az aszinkron szakítsa meg a WS-Trust kérelmet."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>hívásakor adja vissza, amely a <xref:System.IdentityModel.SecurityTokenService.BeginCancel*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginCancel*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> , amely a hívó visszatérni Kulcsalgoritmus jelöli."
  overload: System.IdentityModel.SecurityTokenService.EndCancel*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  id: EndGetOutputClaimsIdentity(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndGetOutputClaimsIdentity(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Felülbírálja a származtatott osztály, amikor befejeződik az aszinkron hívás a <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>"
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>hívásakor adja vissza, amely a <xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*> </xref:System.IAsyncResult>"
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "A <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> , kerül a biztonsági jogkivonatában lévő jogcímeket gyűjteményét tartalmazza."
  overload: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  id: EndGetScope(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndGetScope(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetScope(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetScope(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Felülbírálja a származtatott osztály, amikor befejeződik az aszinkron hívás a <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>"
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.NotImplementedException>.</xref:System.NotImplementedException>"
  syntax:
    content: protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>hívásakor adja vissza, amely a <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Scope
      description: "A <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> , amely magában foglalja a függő entitásonkénti (RP) információk is társítva vannak a hívásban megadott kérés (RST) a <xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginGetScope*>"
  overload: System.IdentityModel.SecurityTokenService.EndGetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  id: EndIssue(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndIssue(IAsyncResult)
  nameWithType: SecurityTokenService.EndIssue(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndIssue(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Felülbírálja a származtatott osztály, amikor befejeződik az aszinkron WS-Trust probléma kérelem."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>hívásakor adja vissza, amely a <xref:System.IdentityModel.SecurityTokenService.BeginIssue*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginIssue*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> , amely a hívó visszatérni Kulcsalgoritmus jelöli."
  overload: System.IdentityModel.SecurityTokenService.EndIssue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  id: EndRenew(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndRenew(IAsyncResult)
  nameWithType: SecurityTokenService.EndRenew(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndRenew(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Felülbírálja a származtatott osztály, amikor befejeződik az aszinkron újítsa meg a WS-Trust kérelmet."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>hívásakor adja vissza, amely a <xref:System.IdentityModel.SecurityTokenService.BeginRenew*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginRenew*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> , amely a hívó visszatérni Kulcsalgoritmus jelöli."
  overload: System.IdentityModel.SecurityTokenService.EndRenew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  id: EndValidate(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: EndValidate(IAsyncResult)
  nameWithType: SecurityTokenService.EndValidate(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndValidate(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Felülbírálja a származtatott osztály, amikor befejeződik a aszinkron érvényesítése WS-Trust kérelmet."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult>hívásakor adja vissza, amely a <xref:System.IdentityModel.SecurityTokenService.BeginValidate*>metódus.</xref:System.IdentityModel.SecurityTokenService.BeginValidate*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> , amely a hívó visszatérni Kulcsalgoritmus jelöli."
  overload: System.IdentityModel.SecurityTokenService.EndValidate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName
  id: GetIssuerName
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetIssuerName()
  nameWithType: SecurityTokenService.GetIssuerName()
  fullName: System.IdentityModel.SecurityTokenService.GetIssuerName()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi a biztonságijogkivonat-szolgáltatás (STS) nevét."
  remarks: "Ez a módszer az alapértelmezett hitelesítési karakterlánc-kiállítási feldolgozási sor megvalósított elnevezése a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>       Az alapértelmezett implementációja adja vissza a <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>konfigurációs keresztül érhetők el a tulajdonságot a <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>tulajdonság.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>"
  syntax:
    content: protected virtual string GetIssuerName ();
    parameters: []
    return:
      type: System.String
      description: "A kibocsátó neve."
  overload: System.IdentityModel.SecurityTokenService.GetIssuerName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Felül van bírálva a származtatott osztály, ha ezt a módszert a kibocsátott jogkivonat szereplő kimeneti témák gyűjteményének beolvasása."
  remarks: "A GetOutputClaimsIdentity metódus lehívásra kerül a hitelesítési karakterláncok kiállításához láncból, amelyet a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Adja vissza egy <xref:System.Security.Claims.ClaimsIdentity>ahhoz, hogy a kiadott biztonsági jogkivonat alapján a jogkivonat a kérelmező szerepeljen a jogcímeket tartalmazó (a `principal` paraméter), a bejövő RST (a `request` paraméter), és a függő fél részére a lexikális elem célja (a `scope` paraméter).</xref:System.Security.Claims.ClaimsIdentity> Ez a módszer lévő logika elsősorban aggasztanak a következő kérdések megválaszolásával:- **amely jogcímtípusok szerepelnie kell az erőforrás-Szolgáltatónál, amelynek célja a választ?** Általában ez, amelyekről a lapon lévő minden egyes RP szükséges jogcímtípusok-RP alapján, vagy egy kérelem alapon vizsgálata folyamatban van a <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A>tulajdonság a kérelem.</xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> Azonban a logikai és a részletek a jogcímeket, a válasz foglalandó meghatározásához esetén a teljes mértékben a megvalósítás.      - **Amely jogcímértékek hozzá kell rendelni a válaszban szereplő jogcímek?** Az egyik identitásszolgáltatónak (IP-STS) Ez általában azt jelenti, hogy segítségével egy vagy több jogcímeket a kérelmező <xref:System.Security.Claims.ClaimsPrincipal>(által biztosított a `principal` paraméter) áruházbeli (vagy más entitás) vissza a szükséges jogcímtípusok értékeinek eléréséhez.</xref:System.Security.Claims.ClaimsPrincipal> Az összevonás-szolgáltatóként (R-STS) Ez általában azt jelenti feldolgozási valamilyen végrehajtja a bejövő jogcímeket a kérelmező kérés; Szűrés vagy átalakítási lehet, hogy néhány jogcímeket a kérelmező adja meg, miközben keresztül változatlan bemutatott végrehajtására. Természetesen gazdabuszadaptereken dönt, hogy milyen jogcímeket kell szerepeltetni a válasz, a részletek és a jogcímek, az értékek meghatározásáról logika esetén a megvalósítás."
  example:
  - "The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows how to override the GetOutputClaimsIdentity method to return claims for your STS. In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.  \n  \n [!code-cs[WIFCustomTokenSTS#6](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#6)]"
  syntax:
    content: protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    - id: scope
      type: System.IdentityModel.Scope
      description: "A <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> , amely tartalmazza a kéréshez társított függő entitással kapcsolatos információkat. Ez a <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> által visszaadott objektum a <xref:System.IdentityModel.SecurityTokenService.GetScope*>metódus.</xref:System.IdentityModel.SecurityTokenService.GetScope*>"
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "A <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> , kerül a biztonsági jogkivonatában lévő jogcímeket gyűjteményét tartalmazza."
  overload: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  id: GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetProofToken(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi a válasz (RSTR) szereplő igazoló jogkivonatot."
  remarks: "Ez a módszer az alapértelmezett hitelesítési karakterlánc-kiállítási feldolgozási sor megvalósított elnevezése a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>       Az alapértelmezett implementációja igazoló leíróját adja vissza, vagy megfelelő kivételt jelez."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a bejövő jogkivonatkérelem (RST)."
    - id: scope
      type: System.IdentityModel.Scope
      description: "A <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> példánya, amely magában foglalja a függő entitással kapcsolatos információkat."
    return:
      type: System.IdentityModel.Tokens.ProofDescriptor
      description: "A <xref href=&quot;System.IdentityModel.Tokens.ProofDescriptor&quot;> </xref> , amely az újonnan létrehozott igazoló leíró jelöli. Az ellenőrző leíró lehet aszimmetrikus igazoló leíró, egy szimmetrikus igazoló leíró vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> a tulajdonosi jogkivonat esetében."
  overload: System.IdentityModel.SecurityTokenService.GetProofToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>scope</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi a hitelesítő adatok titkosítása a kérelmező igazolására."
  remarks: "Ez a módszer meghívott a <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>       A következőket hajtja végre az alapértelmezett implementációja. Beolvasása `null` van-e nélkül a kérelemben megadott titkosítási jogkivonattal (a <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName>tulajdonság `null`).</xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=fullName> Egyébként pedig, ha az előbbi beszerezheti a jogkivonatot, mint egy <xref:System.IdentityModel.Tokens.X509SecurityToken>, hitelesítő adatokat, hogy a jogkivonat alapján adja vissza.</xref:System.IdentityModel.Tokens.X509SecurityToken> Ha nem képes feloldani a jogkivonatot, mint egy <xref:System.IdentityModel.Tokens.X509SecurityToken>, egy <xref:System.IdentityModel.RequestFailedException>vált ki.</xref:System.IdentityModel.RequestFailedException> </xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a bejövő jogkivonatkérelem (RST)."
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Egy <xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> a kérelmező képviselő objektum által titkosított hitelesítő adatokat."
  overload: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  nameWithType: SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  fullName: System.IdentityModel.SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "A válasz (RSTR), amely a kibocsátott jogkivonat tartalmazza a megadott kérelem (RST) és a biztonsági jogkivonat-leíró használatával hoz létre."
  remarks: "A GetResponse metódus lehívásra kerül utolsó lépése a hitelesítési karakterláncok kiállításához láncból, amelyet a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> Hoz létre, és visszaadja a választ (RSTR) használatával, az eredeti bejövő kérelem (RST) és a token leíró, amelyek a hitelesítési karakterlánc-kiállítási feldolgozási előző lépések során lett létrehozva.       Az alapértelmezett implementációja Kulcsalgoritmus úgy, hogy a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName>metódus lévő a jogkivonat leíró lett átadva a Tulajdonságok alkalmazása az újonnan létrehozott RSTR, Kulcsalgoritmus <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A>tulajdonság beállítása a token leíró <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>tulajdonsággal, és végül a <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>tulajdonság beállítása az alábbi táblázat szerint Kulcsalgoritmus GetResponse hívása a <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName>konstruktornak, kérelmet paraméterben megadott RST hoz létre. :      | `RST.ReplyTo` tulajdonság |} <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>tulajdonság. |} `RSTR.ReplyTo` tulajdonság |}   |----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|   | Állítsa be |} Nincs beállítva |} Nincs beállítva |}   | Állítsa be |} Állítsa be |} <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName>|   | Nincs beállítva |} Állítsa be |} Nincs beállítva |}   | Nincs beállítva |} Nincs beállítva |} Not Set|</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=fullName></xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=fullName></xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A></xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A></xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A RST, amely a token kérelmet tartalmaz."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "A token leíró, amely a kibocsátott jogkivonat használandó információkat tartalmaz."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A válasz (RSTR) vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a válasz nem hozható létre a megadott kérelem és a token leíró. Az alapértelmezett implementációja adja vissza <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a <code> tokenDescriptor </code> paraméter <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.SecurityTokenService.GetResponse*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetScope(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi a <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> objektum, amely a megadott kérelem (RST) társított függő entitásonkénti (RP) kapcsolatos információt tartalmazza. Felül kell bírálnia a végrehajtása során ez a módszer a <xref href=&quot;System.IdentityModel.SecurityTokenService&quot;> </xref> osztály."
  remarks: "A GetScope metódus lehívásra kerül a hitelesítési karakterláncok kiállításához láncból után a <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>metódus visszaadja-e, és egy <xref:System.IdentityModel.Scope>konfigurálni a bejövő kérelem objektum.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> (A token kiállítási folyamatának meg van valósítva a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódust.)</xref:System.IdentityModel.SecurityTokenService.Issue%2A> A <xref:System.IdentityModel.Scope>objektum magában foglalja a biztonsági jogkivonat kérelem (RST) társított RP kapcsolatos információkat.</xref:System.IdentityModel.Scope> Ez magában foglalja a függő Entitás és-e a kiállított jogkivonatokat és/vagy a válaszban szereplő szimmetrikus kulcsok titkosítására használt titkosítási és aláírási hitelesítő adatokkal kapcsolatos információkat. Néhány általános feladat GetScope metódus végre: – Ellenőrizze, hogy az erőforrás-Szolgáltatónál, amelynek célja, a jogkivonat felismert RP. Hogyan mindez attól függ, hogy a megvalósítás. Ha az adott függő Entitás nem egy érvényes függő Entitás ezt STS, majd a módszer kell előidéznie <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>      -Meghatározni a az aláíró hitelesítő adatokat a válaszban (RSTR) használja, és állítsa be a <xref:System.IdentityModel.Scope.SigningCredentials%2A>tulajdonság ennek megfelelően.</xref:System.IdentityModel.Scope.SigningCredentials%2A>      -Határozza meg, hogy a válasz és/vagy bármely részét szimmetrikus kulcsok titkosítottak és a titkosításhoz használandó hitelesítő adatokat. Állítsa be a <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, és <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>Tulajdonságok ennek megfelelően.</xref:System.IdentityModel.Scope.EncryptingCredentials%2A> </xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>          > [!IMPORTANT] > Alapértelmezés szerint a <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>és <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>a Tulajdonságok `true` megakadályozhatja, hogy az STS a kiállító jogkivonatokat, amelyek nem biztonságosak.</xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> Javasoljuk, hogy ezek a Tulajdonságok soha nem állítható be `false` éles környezetben.      -Határozza meg a címet, amelyre a választ adott vissza. Állítsa be, vagy a <xref:System.IdentityModel.Scope.AppliesToAddress%2A>vagy <xref:System.IdentityModel.Scope.ReplyToAddress%2A>tulajdonság ennek megfelelően.</xref:System.IdentityModel.Scope.ReplyToAddress%2A> </xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  example:
  - "The code example that is used in this topic is taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token. For an example of how to implement an active STS, you can see the `Federation Metadata` sample. For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows an implementation of the GetScope method. This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=fullName> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.  \n  \n [!code-cs[WIFCustomTokenSTS#4](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#4)]  \n[!code-cs[WIFCustomTokenSTS#5](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#5)]  \n[!code-cs[WIFCustomTokenSTS#7](~/add/codesnippet/csharp/passivests/customsecuritytokenservice.cs#7)]"
  syntax:
    content: protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely jelzi, hogy az ügyfél a kérést."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a bejövő kérelem (RST)."
    return:
      type: System.IdentityModel.Scope
      description: "A <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> , amely magában foglalja a függő Entitás információk is társítva vannak a kérelmet."
  overload: System.IdentityModel.SecurityTokenService.GetScope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  id: GetSecurityTokenHandler(System.String)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetSecurityTokenHandler(String)
  nameWithType: SecurityTokenService.GetSecurityTokenHandler(String)
  fullName: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekéri a megfelelő biztonságijogkivonat-kezelő egy adott típusú biztonsági jogkivonatot kibocsátó."
  remarks: "Az alapértelmezett megvalósításában Ha `requestedTokenType` van `null` vagy üres karakterlánc, az alapértelmezett használt konfigurációból lexikális elem típusa. Ez megadja a <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>tulajdonság az STS konfigurációs objektum keresztül érhetők el a <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>tulajdonság.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>       Ez a módszer az alapértelmezett hitelesítési karakterlánc-kiállítási feldolgozási sor megvalósított elnevezése a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.Issue%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);
    parameters:
    - id: requestedTokenType
      type: System.String
      description: "A kért URI lexikális elemtípusnak tartalmazó karakterlánc."
    return:
      type: System.IdentityModel.Tokens.SecurityTokenHandler
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;> </xref> , amely a token kezelő kiadott biztonsági jogkivonat létrehozásához használt jelöli. Beolvasása <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a kért a jogkivonat típusa nem támogatott (nincs beállítva a megadott lexikális elemtípusnak kezelő)."
  overload: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  id: GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: GetTokenLifetime(Lifetime)
  nameWithType: SecurityTokenService.GetTokenLifetime(Lifetime)
  fullName: System.IdentityModel.SecurityTokenService.GetTokenLifetime(Lifetime)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi a kibocsátott jogkivonat élettartamát."
  remarks: "Ez a módszer a RST érkező élettartama általában hívása. Az alapértelmezett megvalósításában a jogkivonatok élettartama kiszámítása az alábbi táblázat szerint.      | (A) létrehozott |} (A) lejár |} (A) létrehozott |} (Ki) lejár |}   |--------------------|--------------------|--------------------|---------------------|   | `null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=fullName>| <xref:System.DateTime.UtcNow%2A?displayProperty=fullName> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   | C |} `null`| C |} C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName>|   | `null`| E |} <xref:System.DateTime.UtcNow%2A?displayProperty=fullName>| E |}   | C |} E |} C |} E |}       Ez a módszer az alapértelmezett hitelesítési karakterlánc-kiállítási feldolgozási sor megvalósított elnevezése a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);
    parameters:
    - id: requestLifetime
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Lifetime&quot;> </xref> , amely a kért élettartamát jelöli."
    return:
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.Lifetime&quot;> </xref> , amely a megadott élettartamát jelöli."
  overload: System.IdentityModel.SecurityTokenService.GetTokenLifetime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Issue(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Kibocsát egy biztonsági jogkivonatot."
  remarks: "Ez a metódus valósítja meg a probléma kötés a WS-Trust definiált. Az alapértelmezett probléma metódus megvalósítása dolgozza fel a bejövő kérelem (RST) jogkivonat kibocsátási (jogcím-kiállítási)-feldolgozási folyamaton keresztül, és a megfelelő jogcímeket a kérelmező az erőforrás-szolgáltatónál hitelesítésére a biztonsági jogkivonatot tartalmazó választ (RSTR) vagy egy megfelelő kivételt adja vissza. A token kiállítási folyamatának alapértelmezett végrehajtása a következő metódusok áll (az a <xref:System.IdentityModel.SecurityTokenService>osztály).</xref:System.IdentityModel.SecurityTokenService>      1.  A <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>érvényesíteni a kérést (RST) metódus.</xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>      2.  A <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metódus használatával kérje le a <xref:System.IdentityModel.Scope>objektum, amely tartalmazza a kéréshez társított függő entitásonkénti (RP) kapcsolatos információk.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> Ez a metódus felül kell bírálnia. Ha <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>adja vissza `null`, egy <xref:System.InvalidOperationException>vált ki.</xref:System.InvalidOperationException> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A>      3.  A <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A>a RST alapuló módszer egy biztonsági jogkivonat leíró vissza és a <xref:System.IdentityModel.Scope>objektumot adott vissza az előző lépésben.</xref:System.IdentityModel.Scope> </xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> A biztonsági jogkivonat leíró (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) a kérelem oly módon, hogy a jogkivonat-kezelő használatával kapcsolatos információt tartalmazza.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor> A <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName>a leíró a hívás által visszaadott tulajdonság értéke.</xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=fullName> Ha `null` ad vissza, vagy ha a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>tulajdonság a leíró `null`, egy <xref:System.InvalidOperationException>vált ki.</xref:System.InvalidOperationException> </xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> A kivétel is vált ki, ha a <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName>tulajdonság `true` , de a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>a visszaadott leíró tulajdonsága `null`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> </xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=fullName>      4.  A <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A>metódus használatával kérje le a megfelelő biztonságijogkivonat-kezelő kért jogkivonat típusa alapján.</xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> Ha `null` lett visszaadva, akkor egy <xref:System.NotImplementedException>vált ki.</xref:System.NotImplementedException>      5.  A <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A>metódus használatával kérje le a jogkivonatot kibocsátó neve.</xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> Jelez egy <xref:System.InvalidOperationException>a megadása esetén `null` vagy üres; ellenkező esetben beállítja a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>a leíró tulajdonságának.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> </xref:System.InvalidOperationException>      6.  A <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>metódus használatával kérje le a jogkivonatot, és beállítása a élettartama a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>a leíró tulajdonságának.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> </xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>      7.  A <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>metódus használatával kérje le az ellenőrző jogkivonat tartalmazza a kibocsátott jogkivonat és a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A>a leíró tulajdonságának.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> </xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>      8.  A <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>metódus használatával kérje le a jogcímeket a kibocsátott jogkivonat és tartalmazza a <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A>a leíró tulajdonságának.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> </xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Ez a metódus felül kell bírálnia.      9. A <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>metódus, amely tartalmazza a kibocsátott jogkivonat válasz (RSTR) létrehozása.</xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>       Ha szeretné felülbírálni az a probléma módja egy egyéni hitelesítési karakterlánc-kiállítási folyamat; azonban ez az általában nem szükséges, mely legfeljebb egyéni implementációja fejlesztési és tesztelési környezetben a <xref:System.IdentityModel.SecurityTokenService>osztály szolgálnak.</xref:System.IdentityModel.SecurityTokenService> Sok esetben bírálja felül a <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>és <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>módszerek, és opcionálisan felülírja a <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>módszer használható STS biztosít a környezetben.</xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> </xref:System.IdentityModel.SecurityTokenService.GetScope%2A> </xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> Ha további testreszabási szükséges gyakran megadhatja azt a módszereket, minden szakasza a fent felsorolt token kiállítási folyamatának alapértelmezett megvalósító felülbírálható."
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> , amely a biztonsági jogkivonatot tartalmaz."
  overload: System.IdentityModel.SecurityTokenService.Issue*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Principal
  id: Principal
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Principal
  nameWithType: SecurityTokenService.Principal
  fullName: System.IdentityModel.SecurityTokenService.Principal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi vagy beállítja az aktuális példány hozzárendelt rendszerbiztonsági tag."
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal Principal { get; set; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely jelzi, hogy az aktuális rendszerbiztonsági tag."
  overload: System.IdentityModel.SecurityTokenService.Principal*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Renew(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ha felül van bírálva a származtatott osztály, WS-Trust megújítása kérést dolgoz fel."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> , amely a hívó visszatérni Kulcsalgoritmus jelöli."
  overload: System.IdentityModel.SecurityTokenService.Renew*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Request
  id: Request
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Request
  nameWithType: SecurityTokenService.Request
  fullName: System.IdentityModel.SecurityTokenService.Request
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi vagy beállítja a biztonsági jogkivonat (RST) vonatkozó kérelem a jelenlegi példány."
  syntax:
    content: public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely tartalmazza a kérelmet."
  overload: System.IdentityModel.SecurityTokenService.Request*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Scope
  id: Scope
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Scope
  nameWithType: SecurityTokenService.Scope
  fullName: System.IdentityModel.SecurityTokenService.Scope
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi vagy beállítja a jelenlegi példányhoz társított hatókörét."
  syntax:
    content: public System.IdentityModel.Scope Scope { get; set; }
    return:
      type: System.IdentityModel.Scope
      description: "A <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> , amely jelöli, hogy a jogkivonat kibocsátási kérelmet konfigurációját."
  overload: System.IdentityModel.SecurityTokenService.Scope*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  id: SecurityTokenDescriptor
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenDescriptor&quot;> </xref> a jelenlegi példányhoz társított."
  syntax:
    content: protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }
    return:
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "A biztonsági jogkivonat leíró társított az aktuális példány."
  overload: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A tulajdonság beállítása <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> következik be."
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  id: SecurityTokenServiceConfiguration
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Lekérdezi a tulajdonos konfigurációs példánnyal."
  syntax:
    content: public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }
    return:
      type: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
      description: "A <xref href=&quot;System.IdentityModel.Configuration.SecurityTokenServiceConfiguration&quot;> </xref> , amely az aktuális példány konfigurációját tartalmazza."
  overload: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: Validate(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ha a származtatott osztály felülbírálva, WS-Trust érvényesítése kérést dolgoz fel."
  remarks: "Ez a módszer az alapértelmezett implementációja jelez <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>"
  syntax:
    content: public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: principal
      type: System.Security.Claims.ClaimsPrincipal
      description: "A <xref href=&quot;System.Security.Claims.ClaimsPrincipal&quot;> </xref> , amely a token azonosságát jelöli."
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a biztonsági jogkivonatra vonatkozó kérést. Ez magában foglalja a kérelem üzenet, valamint az egyéb ügyfél kapcsolatos információkat, például az engedélyezési környezetet."
    return:
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&quot;> </xref> , amely a hívó visszatérni Kulcsalgoritmus jelöli."
  overload: System.IdentityModel.SecurityTokenService.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  id: ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  langs:
  - csharp
  name: ValidateRequest(RequestSecurityToken)
  nameWithType: SecurityTokenService.ValidateRequest(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.ValidateRequest(RequestSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "A biztonsági jogkivonat kérelem (RST) Ez a példány encapsulated ellenőrzi."
  remarks: "A ValidateRequest metódus lehívásra kerül a hitelesítési karakterláncok kiállításához láncból (a <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metódus) a bejövő RST érvényesítéséhez.</xref:System.IdentityModel.SecurityTokenService.Issue%2A> A RST van összevetni a STS követelményeinek (házirend), és megfelelő kivételt vált ki, ha nem érvényes.       Az alapértelmezett implementációja a <xref:System.IdentityModel.SecurityTokenService>osztály csak a RST-RSTR mintát, és csak a WS-Trust megadását probléma kötése támogatja (a <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>értékre kell állítani a kérelem tulajdonság <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName>).</xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=fullName> </xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> </xref:System.IdentityModel.SecurityTokenService> Ez a módszer az alapértelmezett implementációja érvényesíti ezeket a követelményeket (és mások a kivételek szakaszban leírtaknak). Ez a módszer felülírhatja, ha ki kell kényszerítenie a egyéni STS különböző érvényesítési követelményének."
  syntax:
    content: protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);
    parameters:
    - id: request
      type: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;> </xref> , amely jelzi, hogy a kérelmet."
  overload: System.IdentityModel.SecurityTokenService.ValidateRequest*
  exceptions:
  - type: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
    commentId: T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException
    description: "<code>request</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – a <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType*> a kérelem nem tulajdonsága <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue&quot;> </xref>.       – vagy – a <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> a kérelem tulajdonság értéke nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy egy meghatározott állandók a <xref href=&quot;System.IdentityModel.Protocols.WSTrust.KeyTypes&quot;> </xref> osztály.       – vagy – a <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType*> , a kérelmek pedig <xref href=&quot;System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer&quot;> </xref> és a <xref uid=&quot;langword_csharp_KeySize&quot; name=&quot;KeySize&quot; href=&quot;&quot;> </xref> elem, de az érték nem nulla."
  - type: System.IdentityModel.UnsupportedTokenTypeBadRequestException
    commentId: T:System.IdentityModel.UnsupportedTokenTypeBadRequestException
    description: "Az STS nem támogatja a kérelem jogkivonat típusa (értéke alapján a <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*>a kérelem tulajdonság).</xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType*>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: InvalidRequestException
  nameWithType: InvalidRequestException
  fullName: System.IdentityModel.Protocols.WSTrust.InvalidRequestException
- uid: System.IdentityModel.UnsupportedTokenTypeBadRequestException
  parent: System.IdentityModel
  isExternal: false
  name: UnsupportedTokenTypeBadRequestException
  nameWithType: UnsupportedTokenTypeBadRequestException
  fullName: System.IdentityModel.UnsupportedTokenTypeBadRequestException
- uid: System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenService(SecurityTokenServiceConfiguration)
  nameWithType: SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenService(SecurityTokenServiceConfiguration)
- uid: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
  parent: System.IdentityModel.Configuration
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.Configuration.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginCancel(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityToken
  nameWithType: RequestSecurityToken
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope,AsyncCallback,Object)
- uid: System.IdentityModel.Scope
  parent: System.IdentityModel
  isExternal: false
  name: Scope
  nameWithType: Scope
  fullName: System.IdentityModel.Scope
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginGetScope(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginIssue(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginRenew(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.SecurityTokenService.BeginValidate(ClaimsPrincipal,RequestSecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Cancel(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Cancel(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: RequestSecurityTokenResponse
  nameWithType: RequestSecurityTokenResponse
  fullName: System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(RequestSecurityToken,Scope)
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndCancel(IAsyncResult)
  nameWithType: SecurityTokenService.EndCancel(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndCancel(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetOutputClaimsIdentity(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(IAsyncResult)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetScope(IAsyncResult)
  nameWithType: SecurityTokenService.EndGetScope(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndGetScope(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndIssue(IAsyncResult)
  nameWithType: SecurityTokenService.EndIssue(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndIssue(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndRenew(IAsyncResult)
  nameWithType: SecurityTokenService.EndRenew(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndRenew(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndValidate(IAsyncResult)
  nameWithType: SecurityTokenService.EndValidate(IAsyncResult)
  fullName: System.IdentityModel.SecurityTokenService.EndValidate(IAsyncResult)
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetIssuerName()
  nameWithType: SecurityTokenService.GetIssuerName()
  fullName: System.IdentityModel.SecurityTokenService.GetIssuerName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(ClaimsPrincipal,RequestSecurityToken,Scope)
- uid: System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetProofToken(RequestSecurityToken,Scope)
  nameWithType: SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
  fullName: System.IdentityModel.SecurityTokenService.GetProofToken(RequestSecurityToken,Scope)
- uid: System.IdentityModel.Tokens.ProofDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: ProofDescriptor
  nameWithType: ProofDescriptor
  fullName: System.IdentityModel.Tokens.ProofDescriptor
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(RequestSecurityToken)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  nameWithType: SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
  fullName: System.IdentityModel.SecurityTokenService.GetResponse(RequestSecurityToken,SecurityTokenDescriptor)
- uid: System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetScope(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.GetScope(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetSecurityTokenHandler(String)
  nameWithType: SecurityTokenService.GetSecurityTokenHandler(String)
  fullName: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(String)
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandler
  nameWithType: SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetTokenLifetime(Lifetime)
  nameWithType: SecurityTokenService.GetTokenLifetime(Lifetime)
  fullName: System.IdentityModel.SecurityTokenService.GetTokenLifetime(Lifetime)
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Issue(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Issue(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.Principal
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Principal
  nameWithType: SecurityTokenService.Principal
  fullName: System.IdentityModel.SecurityTokenService.Principal
- uid: System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Renew(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Renew(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.Request
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Request
  nameWithType: SecurityTokenService.Request
  fullName: System.IdentityModel.SecurityTokenService.Request
- uid: System.IdentityModel.SecurityTokenService.Scope
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Scope
  nameWithType: SecurityTokenService.Scope
  fullName: System.IdentityModel.SecurityTokenService.Scope
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
  fullName: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Validate(ClaimsPrincipal,RequestSecurityToken)
  nameWithType: SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.Validate(ClaimsPrincipal,RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: ValidateRequest(RequestSecurityToken)
  nameWithType: SecurityTokenService.ValidateRequest(RequestSecurityToken)
  fullName: System.IdentityModel.SecurityTokenService.ValidateRequest(RequestSecurityToken)
- uid: System.IdentityModel.SecurityTokenService.#ctor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenService
  nameWithType: SecurityTokenService.SecurityTokenService
- uid: System.IdentityModel.SecurityTokenService.BeginCancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginCancel
  nameWithType: SecurityTokenService.BeginCancel
- uid: System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetOutputClaimsIdentity
  nameWithType: SecurityTokenService.BeginGetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.BeginGetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginGetScope
  nameWithType: SecurityTokenService.BeginGetScope
- uid: System.IdentityModel.SecurityTokenService.BeginIssue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginIssue
  nameWithType: SecurityTokenService.BeginIssue
- uid: System.IdentityModel.SecurityTokenService.BeginRenew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginRenew
  nameWithType: SecurityTokenService.BeginRenew
- uid: System.IdentityModel.SecurityTokenService.BeginValidate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: BeginValidate
  nameWithType: SecurityTokenService.BeginValidate
- uid: System.IdentityModel.SecurityTokenService.Cancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Cancel
  nameWithType: SecurityTokenService.Cancel
- uid: System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: CreateSecurityTokenDescriptor
  nameWithType: SecurityTokenService.CreateSecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.EndCancel*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndCancel
  nameWithType: SecurityTokenService.EndCancel
- uid: System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetOutputClaimsIdentity
  nameWithType: SecurityTokenService.EndGetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.EndGetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndGetScope
  nameWithType: SecurityTokenService.EndGetScope
- uid: System.IdentityModel.SecurityTokenService.EndIssue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndIssue
  nameWithType: SecurityTokenService.EndIssue
- uid: System.IdentityModel.SecurityTokenService.EndRenew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndRenew
  nameWithType: SecurityTokenService.EndRenew
- uid: System.IdentityModel.SecurityTokenService.EndValidate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: EndValidate
  nameWithType: SecurityTokenService.EndValidate
- uid: System.IdentityModel.SecurityTokenService.GetIssuerName*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetIssuerName
  nameWithType: SecurityTokenService.GetIssuerName
- uid: System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetOutputClaimsIdentity
  nameWithType: SecurityTokenService.GetOutputClaimsIdentity
- uid: System.IdentityModel.SecurityTokenService.GetProofToken*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetProofToken
  nameWithType: SecurityTokenService.GetProofToken
- uid: System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetRequestorProofEncryptingCredentials
  nameWithType: SecurityTokenService.GetRequestorProofEncryptingCredentials
- uid: System.IdentityModel.SecurityTokenService.GetResponse*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetResponse
  nameWithType: SecurityTokenService.GetResponse
- uid: System.IdentityModel.SecurityTokenService.GetScope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetScope
  nameWithType: SecurityTokenService.GetScope
- uid: System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetSecurityTokenHandler
  nameWithType: SecurityTokenService.GetSecurityTokenHandler
- uid: System.IdentityModel.SecurityTokenService.GetTokenLifetime*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: GetTokenLifetime
  nameWithType: SecurityTokenService.GetTokenLifetime
- uid: System.IdentityModel.SecurityTokenService.Issue*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Issue
  nameWithType: SecurityTokenService.Issue
- uid: System.IdentityModel.SecurityTokenService.Principal*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Principal
  nameWithType: SecurityTokenService.Principal
- uid: System.IdentityModel.SecurityTokenService.Renew*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Renew
  nameWithType: SecurityTokenService.Renew
- uid: System.IdentityModel.SecurityTokenService.Request*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Request
  nameWithType: SecurityTokenService.Request
- uid: System.IdentityModel.SecurityTokenService.Scope*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Scope
  nameWithType: SecurityTokenService.Scope
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenService.SecurityTokenDescriptor
- uid: System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: SecurityTokenServiceConfiguration
  nameWithType: SecurityTokenService.SecurityTokenServiceConfiguration
- uid: System.IdentityModel.SecurityTokenService.Validate*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: Validate
  nameWithType: SecurityTokenService.Validate
- uid: System.IdentityModel.SecurityTokenService.ValidateRequest*
  parent: System.IdentityModel.SecurityTokenService
  isExternal: false
  name: ValidateRequest
  nameWithType: SecurityTokenService.ValidateRequest
