### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.FunctionPrototype
  id: FunctionPrototype
  children:
  - Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)
  - Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])
  - Microsoft.JScript.FunctionPrototype.constructor
  - Microsoft.JScript.FunctionPrototype.toString(System.Object)
  langs:
  - csharp
  name: FunctionPrototype
  nameWithType: FunctionPrototype
  fullName: Microsoft.JScript.FunctionPrototype
  type: Class
  summary: "Statikus metódusok és a Tulajdonságok <xref href=&quot;Microsoft.JScript.FunctionObject&quot;> </xref> objektumok. Ez az osztály összes metódusát egy hivatkozást az objektum, amely a metódus hozzáférést kér a történő nevezzük. Ez az osztály a beépített objektum modell kategóriába tartozik."
  syntax:
    content: 'public class FunctionPrototype : Microsoft.JScript.ScriptFunction'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  - Microsoft.JScript.ScriptFunction
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.ScriptFunction.CreateInstance(System.Object[])
  - Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject
  - Microsoft.JScript.ScriptFunction.ilength
  - Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])
  - Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptFunction.length
  - Microsoft.JScript.ScriptFunction.prototype
  - Microsoft.JScript.ScriptFunction.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)
  id: apply(System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.FunctionPrototype
  langs:
  - csharp
  name: apply(Object,Object,Object)
  nameWithType: FunctionPrototype.apply(Object,Object,Object)
  fullName: Microsoft.JScript.FunctionPrototype.apply(Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Meghívja a függvény, amely ezt az objektumot jelöli, a megadott argumentum objektum konvertálása az argumentumok tömb, hogy van-e."
  syntax:
    content: public static object apply (object thisob, object thisarg, object argArray);
    parameters:
    - id: thisob
      type: System.Object
      description: "Az objektum, amely ezt a módszert akkor jár el."
    - id: thisarg
      type: System.Object
      description: "A jelenlegi alapértelmezett hatókörben. Vagy a benne foglalt objektumhoz, egy <xref uid=&quot;langword_csharp_with&quot; name=&quot;with&quot; href=&quot;&quot;> </xref> utasítás hatókör, vagy a globális hatókörben."
    - id: argArray
      type: System.Object
      description: "A argumentumokat a függvény, mint egy <xref href=&quot;Microsoft.JScript.ArgumentsObject&quot;> </xref> vagy egy <xref href=&quot;Microsoft.JScript.ArrayObject&quot;> </xref>."
    return:
      type: System.Object
      description: "A hívás az objektum által jelképezett függvény visszatérési értéke."
  overload: Microsoft.JScript.FunctionPrototype.apply*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])
  id: call(System.Object,System.Object,System.Object[])
  parent: Microsoft.JScript.FunctionPrototype
  langs:
  - csharp
  name: call(Object,Object,Object[])
  nameWithType: FunctionPrototype.call(Object,Object,Object[])
  fullName: Microsoft.JScript.FunctionPrototype.call(Object,Object,Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Meghívja a függvény, amely ezt az objektumot jelöli."
  syntax:
    content: public static object call (object thisob, object thisarg, object[] args);
    parameters:
    - id: thisob
      type: System.Object
      description: "Az objektum, amely ezt a módszert akkor jár el."
    - id: thisarg
      type: System.Object
      description: "A jelenlegi alapértelmezett hatókörben. Vagy a benne foglalt objektumhoz, egy <xref uid=&quot;langword_csharp_with&quot; name=&quot;with&quot; href=&quot;&quot;> </xref> utasítás hatókör, vagy a globális hatókörben."
    - id: args
      type: System.Object[]
      description: "A argumentumokat tömb a funkciót."
    return:
      type: System.Object
      description: "A hívás az objektum által jelképezett függvény visszatérési értéke."
  overload: Microsoft.JScript.FunctionPrototype.call*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.FunctionPrototype.constructor
  id: constructor
  parent: Microsoft.JScript.FunctionPrototype
  langs:
  - csharp
  name: constructor
  nameWithType: FunctionPrototype.constructor
  fullName: Microsoft.JScript.FunctionPrototype.constructor
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Lekér egy hivatkozást egy prototípus-alapú objektumot, amely a prototípus."
  syntax:
    content: public static Microsoft.JScript.FunctionConstructor constructor { get; }
    return:
      type: Microsoft.JScript.FunctionConstructor
      description: "Egy olyan prototípus-alapú objektum hivatkozását."
  overload: Microsoft.JScript.FunctionPrototype.constructor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.FunctionPrototype.toString(System.Object)
  id: toString(System.Object)
  parent: Microsoft.JScript.FunctionPrototype
  langs:
  - csharp
  name: toString(Object)
  nameWithType: FunctionPrototype.toString(Object)
  fullName: Microsoft.JScript.FunctionPrototype.toString(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "A megadott objektum karakterlánc-ábrázolása hoz létre."
  syntax:
    content: public static string toString (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "Az objektum, amely ezt a módszert akkor jár el."
    return:
      type: System.String
      description: "Karakteres <code> thisob </code> , amely tartalmazza a függvény nevét."
  overload: Microsoft.JScript.FunctionPrototype.toString*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: Microsoft.JScript.ScriptFunction
- uid: Microsoft.JScript.FunctionPrototype.apply(System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: apply(Object,Object,Object)
  nameWithType: FunctionPrototype.apply(Object,Object,Object)
  fullName: Microsoft.JScript.FunctionPrototype.apply(Object,Object,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.FunctionPrototype.call(System.Object,System.Object,System.Object[])
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: call(Object,Object,Object[])
  nameWithType: FunctionPrototype.call(Object,Object,Object[])
  fullName: Microsoft.JScript.FunctionPrototype.call(Object,Object,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.FunctionPrototype.constructor
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: constructor
  nameWithType: FunctionPrototype.constructor
  fullName: Microsoft.JScript.FunctionPrototype.constructor
- uid: Microsoft.JScript.FunctionConstructor
  parent: Microsoft.JScript
  isExternal: false
  name: FunctionConstructor
  nameWithType: FunctionConstructor
  fullName: Microsoft.JScript.FunctionConstructor
- uid: Microsoft.JScript.FunctionPrototype.toString(System.Object)
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: toString(Object)
  nameWithType: FunctionPrototype.toString(Object)
  fullName: Microsoft.JScript.FunctionPrototype.toString(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.FunctionPrototype.apply*
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: apply
  nameWithType: FunctionPrototype.apply
- uid: Microsoft.JScript.FunctionPrototype.call*
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: call
  nameWithType: FunctionPrototype.call
- uid: Microsoft.JScript.FunctionPrototype.constructor*
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: constructor
  nameWithType: FunctionPrototype.constructor
- uid: Microsoft.JScript.FunctionPrototype.toString*
  parent: Microsoft.JScript.FunctionPrototype
  isExternal: false
  name: toString
  nameWithType: FunctionPrototype.toString
