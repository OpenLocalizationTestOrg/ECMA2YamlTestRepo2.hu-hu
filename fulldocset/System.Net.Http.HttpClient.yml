### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpClient
  id: HttpClient
  children:
  - System.Net.Http.HttpClient.#ctor
  - System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)
  - System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  - System.Net.Http.HttpClient.BaseAddress
  - System.Net.Http.HttpClient.CancelPendingRequests
  - System.Net.Http.HttpClient.DefaultRequestHeaders
  - System.Net.Http.HttpClient.DeleteAsync(System.String)
  - System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  - System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.Dispose(System.Boolean)
  - System.Net.Http.HttpClient.GetAsync(System.String)
  - System.Net.Http.HttpClient.GetAsync(System.Uri)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  - System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  - System.Net.Http.HttpClient.GetStreamAsync(System.String)
  - System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  - System.Net.Http.HttpClient.GetStringAsync(System.String)
  - System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  - System.Net.Http.HttpClient.MaxResponseContentBufferSize
  - System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  - System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  - System.Net.Http.HttpClient.Timeout
  langs:
  - csharp
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
  type: Class
  summary: "Egy olyan alaposztályból biztosít a HTTP-kérések küldése és fogadása a HTTP-válaszokat az erőforrás URI azonosít."
  remarks: "HttpClient osztálypéldány úgy működik, mint a HTTP-kérelmek küldéséhez munkamenet. HttpClient példány gyűjteménye, hogy a példány által végrehajtott összes kérelmek alkalmazott beállításokat. Emellett minden HttpClient példányt használ a saját kapcsolatkészlet lévő többi HttpClient példány által végrehajtott kérelmek kérések elkülönítése.       A HttpClient is funkcionál egy olyan alaposztályból, pontosabban meghatározott HTTP-ügyfelek számára. Erre példa lehet egy Facebook webszolgáltatásnak további metódusok biztosító FacebookHttpClient (GetFriends metódus, például).       Alapértelmezés szerint <xref:System.Net.HttpWebRequest>használatával kérelmeket küldeni a kiszolgálónak.</xref:System.Net.HttpWebRequest> Ez a viselkedés valamelyik a konstruktor túlterhelések véve egy másik csatorna megadásával módosítható egy <xref:System.Net.Http.HttpMessageHandler>példányt paraméterként.</xref:System.Net.Http.HttpMessageHandler> Ha például a hitelesítést és a gyorsítótár szolgáltatások is szükségesek, <xref:System.Net.Http.WebRequestHandler>is használható a beállítások és a példány is lehet a konstruktornak átadott.</xref:System.Net.Http.WebRequestHandler> A visszaadott kezelő átadhatók egyet a konstruktornak túlterhelések véve egy <xref:System.Net.Http.HttpMessageHandler>paraméter.</xref:System.Net.Http.HttpMessageHandler>       Ha egy alkalmazás HttpClient és a kapcsolódó osztályok a <xref:System.Net.Http>névtér szándékozik töltse le a nagy mennyiségű adat (50 MB vagy több), majd az alkalmazás kell adatfolyam-e letöltések, és használja az alapértelmezett pufferelés.</xref:System.Net.Http> Az alapértelmezett beállítások használata kap, hogy az ügyfél memóriahasználat nagyon nagy, ami jelentősen szűk.       Az alábbi módszerek szálbiztos: 1.  <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>2.</xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>  <xref:System.Net.Http.HttpClient.DeleteAsync%2A>3.</xref:System.Net.Http.HttpClient.DeleteAsync%2A>  <xref:System.Net.Http.HttpClient.GetAsync%2A>4.</xref:System.Net.Http.HttpClient.GetAsync%2A>  <xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>5.</xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>  <xref:System.Net.Http.HttpClient.GetStreamAsync%2A>6.</xref:System.Net.Http.HttpClient.GetStreamAsync%2A>  <xref:System.Net.Http.HttpClient.GetStringAsync%2A>7.</xref:System.Net.Http.HttpClient.GetStringAsync%2A>  <xref:System.Net.Http.HttpClient.PostAsync%2A>8.</xref:System.Net.Http.HttpClient.PostAsync%2A>  <xref:System.Net.Http.HttpClient.PutAsync%2A>9.</xref:System.Net.Http.HttpClient.PutAsync%2A> <xref:System.Net.Http.HttpClient.SendAsync%2A>HttpClient tervezett egyszer, és egy alkalmazás élettartama során újra felhasználni.</xref:System.Net.Http.HttpClient.SendAsync%2A> Minden kérelem esetén egy HttpClient osztály példányának fog lefoglalhat elérhető túlterhelt szoftvercsatornák számát. Ennek eredményeképpen az SocketException hibák. Alább látható egy példa, HttpClient megfelelően használatával.      ```c#   public class GoodController : ApiController   {       // OK       private static readonly HttpClient HttpClient;          static GoodController()       {           HttpClient = new HttpClient();       }   }      ```"
  example:
  - '[!code-cs[System.Net.Http.HttpClient#1](~/add/codesnippet/csharp/t-system.net.http.httpcl_1_1.cs)]'
  syntax:
    content: 'public class HttpClient : System.Net.Http.HttpMessageInvoker'
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageInvoker
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpMessageInvoker.Dispose
  platform:
  - net462
- uid: System.Net.Http.HttpClient.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: HttpClient()
  nameWithType: HttpClient.HttpClient()
  fullName: System.Net.Http.HttpClient.HttpClient()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> osztály."
  syntax:
    content: public HttpClient ();
    parameters: []
  overload: System.Net.Http.HttpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: HttpClient(HttpMessageHandler)
  nameWithType: HttpClient.HttpClient(HttpMessageHandler)
  fullName: System.Net.Http.HttpClient.HttpClient(HttpMessageHandler)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> osztály egy adott kezelővel rendelkező."
  remarks: "Ha `null` megadott `handler` paraméter, a <xref:System.Net.Http.WebRequestHandler>szállítási kezelő vettük.</xref:System.Net.Http.WebRequestHandler>"
  syntax:
    content: public HttpClient (System.Net.Http.HttpMessageHandler handler);
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: "A HTTP kezelő verem kérelmek küldéséhez használt."
  overload: System.Net.Http.HttpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: HttpClient(HttpMessageHandler,Boolean)
  nameWithType: HttpClient.HttpClient(HttpMessageHandler,Boolean)
  fullName: System.Net.Http.HttpClient.HttpClient(HttpMessageHandler,Boolean)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> osztály egy adott kezelővel rendelkező."
  syntax:
    content: public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: "A <xref href=&quot;System.Net.Http.HttpMessageHandler&quot;> </xref> felelős a HTTP-válasz üzenetek feldolgozása."
    - id: disposeHandler
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a belső kezelő kell lennie ártalmatlanítani Dispose(), <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha azt tervezi, a belső kezelő újból."
  overload: System.Net.Http.HttpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.BaseAddress
  id: BaseAddress
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: BaseAddress
  nameWithType: HttpClient.BaseAddress
  fullName: System.Net.Http.HttpClient.BaseAddress
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja az egységes erőforrás-azonosító (URI) az Internet erőforrás küldött kérelmek használt alapszintű címéhez."
  remarks: "Küldés során egy <xref:System.Net.Http.HttpRequestMessage>egy relatív URI-azonosítóhoz, az üzenet Uri nem kerülnek be a BaseAddress tulajdonságot abszolút Uri létrehozásához.</xref:System.Net.Http.HttpRequestMessage>"
  syntax:
    content: public Uri BaseAddress { get; set; }
    return:
      type: System.Uri
      description: "Alapszintű címéből az egységes erőforrás-azonosító (URI) a küldött kérelmek használt Internet erőforrás."
  overload: System.Net.Http.HttpClient.BaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.CancelPendingRequests
  id: CancelPendingRequests
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: CancelPendingRequests()
  nameWithType: HttpClient.CancelPendingRequests()
  fullName: System.Net.Http.HttpClient.CancelPendingRequests()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Megszakítja az összes függőben lévő kérelmek ezen a példányon."
  remarks: "Ez a metódus hívása után a <xref:System.Net.Http.HttpClient>példány továbbra is használható további kérések végrehajtásához.</xref:System.Net.Http.HttpClient>"
  syntax:
    content: public void CancelPendingRequests ();
    parameters: []
  overload: System.Net.Http.HttpClient.CancelPendingRequests*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DefaultRequestHeaders
  id: DefaultRequestHeaders
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DefaultRequestHeaders
  nameWithType: HttpClient.DefaultRequestHeaders
  fullName: System.Net.Http.HttpClient.DefaultRequestHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi a fejlécek, amely küldjön minden egyes kérelemmel."
  remarks: "Ez a tulajdonság beállítása fejlécek nem kell be kell állítania kérelemüzenetek újra."
  syntax:
    content: public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }
    return:
      type: System.Net.Http.Headers.HttpRequestHeaders
      description: "A fejlécek, amely minden egyes kérelemmel kell küldeni."
  overload: System.Net.Http.HttpClient.DefaultRequestHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String)
  id: DeleteAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DeleteAsync(String)
  nameWithType: HttpClient.DeleteAsync(String)
  fullName: System.Net.Http.HttpClient.DeleteAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "A törlési kérelem küldése a megadott URI egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kérelemüzenetet már elküldte a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> példány."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  id: DeleteAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DeleteAsync(Uri)
  nameWithType: HttpClient.DeleteAsync(Uri)
  fullName: System.Net.Http.HttpClient.DeleteAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "A törlési kérelem küldése a megadott URI egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kérelemüzenetet már elküldte a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> példány."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DeleteAsync(String,CancellationToken)
  nameWithType: HttpClient.DeleteAsync(String,CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(String,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "TÖRLÉSI kérelmet küld a megadott URI azonosító cancellation jogkivonatok egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kérelemüzenetet már elküldte a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> példány."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  id: DeleteAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: DeleteAsync(Uri,CancellationToken)
  nameWithType: HttpClient.DeleteAsync(Uri,CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(Uri,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "TÖRLÉSI kérelmet küld a megadott URI azonosító cancellation jogkivonatok egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kérelemüzenetet már elküldte a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> példány."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HttpClient.Dispose(Boolean)
  fullName: System.Net.Http.HttpClient.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> és a felügyelt erőforrások opcionálisan értékesít."
  remarks: "Ezt a módszert nevezik nyilvános `Dispose()` metódus és a <xref:System.Object.Finalize%2A>metódus.</xref:System.Object.Finalize%2A> `Dispose()`meghívja a védett `Dispose(Boolean)` metódust a `disposing` paraméter `true`. <xref:System.Object.Finalize%2A>Elindítja a `Dispose` rendelkező `disposing` beállítása `false`.</xref:System.Object.Finalize%2A>       Ha a `disposing` paraméter `true`, ez a módszer minden felügyelt objektum által tárolt összes erőforrás kiadja, amelyhez a <xref:System.Net.Http.HttpClient>hivatkozik.</xref:System.Net.Http.HttpClient> Ez a metódus meghívja a `Dispose()` minden hivatkozott metódusa.       Ez a metódus hívásakor a <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>metódus lehívásra kerül az összes függőben lévő kérelmek megszakítható.</xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> kiadásokban csak a nem felügyelt erőforrások."
  overload: System.Net.Http.HttpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.String)
  id: GetAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(String)
  nameWithType: HttpClient.GetAsync(String)
  fullName: System.Net.Http.HttpClient.GetAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérést küld a megadott URI azonosító, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri)
  id: GetAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(Uri)
  nameWithType: HttpClient.GetAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérést küld a megadott URI azonosító, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  id: GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(String,HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(String,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(String,HttpCompletionOption)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérés küldése egy HTTP befejezési lehetőséghez, mint egy aszinkron művelet a megadott URI azonosító."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum, befejezi a alapján a `completionOption` paraméter után a egy részét vagy egészét, a válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "HTTP befejezési beállítási értéket, amely jelzi, hogy mikor érdemes figyelembe venni a művelet befejeződött."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  id: GetAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(String,CancellationToken)
  nameWithType: HttpClient.GetAsync(String,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(String,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérelmet küld a megadott URI azonosító cancellation jogkivonatok, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  id: GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(Uri,HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(Uri,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,HttpCompletionOption)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérés küldése egy HTTP befejezési lehetőséghez, mint egy aszinkron művelet a megadott URI azonosító."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum, befejezi a alapján a `completionOption` paraméter után a egy részét vagy egészét, a válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "HTTP befejezési beállítási értéket, amely jelzi, hogy mikor érdemes figyelembe venni a művelet befejeződött."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  id: GetAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(Uri,CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérelmet küld a megadott URI azonosító cancellation jogkivonatok, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  id: GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(String,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.GetAsync(String,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(String,HttpCompletionOption,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérés küldése a megadott URI azonosító a HTTP befejezési használható, és a megszakítási jogkivonat, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum, befejezi a alapján a `completionOption` paraméter után a egy részét vagy egészét, a válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "HTTP befejezési beállítási értéket, amely jelzi, hogy mikor érdemes figyelembe venni a művelet befejeződött."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  id: GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetAsync(Uri,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,HttpCompletionOption,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérés küldése a megadott URI azonosító a HTTP befejezési használható, és a megszakítási jogkivonat, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum, befejezi a alapján a `completionOption` paraméter után a egy részét vagy egészét, a válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "HTTP befejezési beállítási értéket, amely jelzi, hogy mikor érdemes figyelembe venni a művelet befejeződött."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  id: GetByteArrayAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetByteArrayAsync(String)
  nameWithType: HttpClient.GetByteArrayAsync(String)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérést küld a megadott URI-hoz, és térjen vissza az adott válasz törzsének, egy bájttömböt aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes választörzset olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<byte[]> GetByteArrayAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetByteArrayAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  id: GetByteArrayAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetByteArrayAsync(Uri)
  nameWithType: HttpClient.GetByteArrayAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérést küld a megadott URI-hoz, és térjen vissza az adott válasz törzsének, egy bájttömböt aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes választörzset olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<byte[]> GetByteArrayAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetByteArrayAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.String)
  id: GetStreamAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetStreamAsync(String)
  nameWithType: HttpClient.GetStreamAsync(String)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérést küld a megadott URI-hoz, és térjen vissza az adott válasz törzsének egy aszinkron művelet adatfolyamként."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes választörzset olvasható.</xref:System.Threading.Tasks.Task%601> Ez a módszer nem puffereli az adatfolyam."
  syntax:
    content: public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetStreamAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  id: GetStreamAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetStreamAsync(Uri)
  nameWithType: HttpClient.GetStreamAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérést küld a megadott URI-hoz, és térjen vissza az adott válasz törzsének egy aszinkron művelet adatfolyamként."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes választörzset olvasható.</xref:System.Threading.Tasks.Task%601> Ez a módszer nem puffereli az adatfolyam."
  syntax:
    content: public System.Threading.Tasks.Task<System.IO.Stream> GetStreamAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetStreamAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetStringAsync(System.String)
  id: GetStringAsync(System.String)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetStringAsync(String)
  nameWithType: HttpClient.GetStringAsync(String)
  fullName: System.Net.Http.HttpClient.GetStringAsync(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérést küld a megadott URI-hoz, és térjen vissza az adott válasz törzsének egy aszinkron művelet karakterláncként."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes választörzset olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<string> GetStringAsync (string requestUri);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetStringAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  id: GetStringAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: GetStringAsync(Uri)
  nameWithType: HttpClient.GetStringAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStringAsync(Uri)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "GET kérést küld a megadott URI-hoz, és térjen vissza az adott válasz törzsének egy aszinkron művelet karakterláncként."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes választörzset olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<string> GetStringAsync (Uri requestUri);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.GetStringAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.MaxResponseContentBufferSize
  id: MaxResponseContentBufferSize
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: MaxResponseContentBufferSize
  nameWithType: HttpClient.MaxResponseContentBufferSize
  fullName: System.Net.Http.HttpClient.MaxResponseContentBufferSize
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a válasz tartalom olvasásakor puffereléséhez bájtok maximális száma."
  remarks: "Egy alkalmazás MaxResponseContentBufferSize tulajdonság állíthat be értéket a válasz a válasz olvasásakor puffereléséhez méretének korlátozására. Ha a válasz tartalom mérete nagyobb, mint a MaxResponseContentBufferSize tulajdonság, akkor a rendszer kivételt hoz létre."
  syntax:
    content: public long MaxResponseContentBufferSize { get; set; }
    return:
      type: System.Int64
      description: "A válasz tartalom olvasásakor puffereléséhez bájtok maximális száma. Ez a tulajdonság alapértelmezett értéke 2 gigabájt."
  overload: System.Net.Http.HttpClient.MaxResponseContentBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott mérete kisebb vagy egyenlő, mint nulla."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egy műveletet az aktuális példányon már el van indítva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az aktuális példány el lett távolítva."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  id: PostAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PostAsync(String,HttpContent)
  nameWithType: HttpClient.PostAsync(String,HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(String,HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy POST kérést küld a megadott URI azonosító, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync (string requestUri, System.Net.Http.HttpContent content);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    - id: content
      type: System.Net.Http.HttpContent
      description: "A HTTP kérelem tartalmat küldi el a kiszolgálónak."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  id: PostAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PostAsync(Uri,HttpContent)
  nameWithType: HttpClient.PostAsync(Uri,HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(Uri,HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy POST kérést küld a megadott URI azonosító, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync (Uri requestUri, System.Net.Http.HttpContent content);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    - id: content
      type: System.Net.Http.HttpContent
      description: "A HTTP kérelem tartalmat küldi el a kiszolgálónak."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PostAsync(String,HttpContent,CancellationToken)
  nameWithType: HttpClient.PostAsync(String,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(String,HttpContent,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy aszinkron művelet megszakítását jogkivonatok POST kérelem küldése."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    - id: content
      type: System.Net.Http.HttpContent
      description: "A HTTP kérelem tartalmat küldi el a kiszolgálónak."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PostAsync(Uri,HttpContent,CancellationToken)
  nameWithType: HttpClient.PostAsync(Uri,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(Uri,HttpContent,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy aszinkron művelet megszakítását jogkivonatok POST kérelem küldése."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    - id: content
      type: System.Net.Http.HttpContent
      description: "A HTTP kérelem tartalmat küldi el a kiszolgálónak."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  id: PutAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PutAsync(String,HttpContent)
  nameWithType: HttpClient.PutAsync(String,HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(String,HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "PUT kérelmet küld a megadott URI-hoz, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync (string requestUri, System.Net.Http.HttpContent content);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    - id: content
      type: System.Net.Http.HttpContent
      description: "A HTTP kérelem tartalmat küldi el a kiszolgálónak."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  id: PutAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PutAsync(Uri,HttpContent)
  nameWithType: HttpClient.PutAsync(Uri,HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(Uri,HttpContent)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "PUT kérelmet küld a megadott URI-hoz, egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync (Uri requestUri, System.Net.Http.HttpContent content);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    - id: content
      type: System.Net.Http.HttpContent
      description: "A HTTP kérelem tartalmat küldi el a kiszolgálónak."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PutAsync(String,HttpContent,CancellationToken)
  nameWithType: HttpClient.PutAsync(String,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(String,HttpContent,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy aszinkron művelet megszakítását jogkivonatok PUT kérelmet küldeni."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.String
      description: "Az Uri a kérelmet küld."
    - id: content
      type: System.Net.Http.HttpContent
      description: "A HTTP kérelem tartalmat küldi el a kiszolgálónak."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: PutAsync(Uri,HttpContent,CancellationToken)
  nameWithType: HttpClient.PutAsync(Uri,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(Uri,HttpContent,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy aszinkron művelet megszakítását jogkivonatok PUT kérelmet küldeni."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, miután a teljes válasz (tartalom) olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: requestUri
      type: System.Uri
      description: "Az Uri a kérelmet küld."
    - id: content
      type: System.Net.Http.HttpContent
      description: "A HTTP kérelem tartalmat küldi el a kiszolgálónak."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Megszakítási jogkivonat, amely segítségével más objektumok, vagy a szál nem kap értesítést törlését."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>requestUri</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  id: SendAsync(System.Net.Http.HttpRequestMessage)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy aszinkron művelet HTTP-kérelem küldése."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejezi, miután a teljes válasz tartalom olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "A HTTP felderítéskérelmi üzenetet küldeni."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kérelemüzenetet már elküldte a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> példány."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,HttpCompletionOption)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy aszinkron művelet HTTP-kérelem küldése."
  remarks: "Ez a művelet nem fogja tiltani. Attól függően, hogy az értékét a `completionOption` paraméter, a visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, amint a válasz érhető el, vagy a teljes válasz tartalom olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "A HTTP felderítéskérelmi üzenetet küldeni."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "Ha a kell művelet (amint választ érhető el vagy a teljes válasz tartalom elolvasása után)."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kérelemüzenetet már elküldte a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> példány."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy aszinkron művelet HTTP-kérelem küldése."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejezi, miután a teljes válasz tartalom olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public override System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "A HTTP felderítéskérelmi üzenetet küldeni."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási token megszakítja a műveletet."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kérelemüzenetet már elküldte a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> példány."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Egy aszinkron művelet HTTP-kérelem küldése."
  remarks: "Ez a művelet nem fogja tiltani. Attól függően, hogy az értékét a `completionOption` paraméter, a visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejeződik, amint a válasz érhető el, vagy a teljes válasz tartalom olvasható.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: "A HTTP felderítéskérelmi üzenetet küldeni."
    - id: completionOption
      type: System.Net.Http.HttpCompletionOption
      description: "Ha a kell művelet (amint választ érhető el vagy a teljes válasz tartalom elolvasása után)."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási token megszakítja a műveletet."
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: "Az aszinkron művelet képviselő feladat objektum."
  overload: System.Net.Http.HttpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>request</code> was <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kérelemüzenetet már elküldte a <xref href=&quot;System.Net.Http.HttpClient&quot;> </xref> példány."
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: "A kérelem egy alapul szolgáló problémát, például a hálózati kapcsolatot, a DNS-hiba, a kiszolgálói tanúsítvány hitelesítése vagy időtúllépés miatt sikertelen volt."
  platform:
  - net462
- uid: System.Net.Http.HttpClient.Timeout
  id: Timeout
  parent: System.Net.Http.HttpClient
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpClient.Timeout
  fullName: System.Net.Http.HttpClient.Timeout
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "Lekérdezi vagy beállítja a timespan eltelte után a kérelem időkorlátja lejár."
  remarks: "Az alapértelmezett érték 100 000 ezredmásodperc (100 másodperc).       Az időtúllépés beállítása, a <xref:System.Threading.Timeout.InfiniteTimeSpan>.</xref:System.Threading.Timeout.InfiniteTimeSpan> tulajdonság értékének beállítása       A tartománynévrendszer (DNS) lekérdezés is igénybe vehet, legfeljebb 15 másodperc vissza vagy túllépi az időkorlátot. Ha a kérelem tartalmaz egy állomásnevet, amely feloldását követeli meg, és a megadott időkorlát egy értéket 15 másodperc, szükség lehet a 15 másodperces vagy több, mielőtt egy <xref:System.Net.WebException>jelzi a kérésre időtúllépés történt.</xref:System.Net.WebException>       Az azonos időtúllépés használatát az összes kérelem érvényes <xref:System.Net.Http.HttpClient>példány.</xref:System.Net.Http.HttpClient>  Különböző időtúllépések az egyes kérelmeket a használatával állíthatók egy <xref:System.Threading.CancellationTokenSource>meg olyan feladatra.</xref:System.Threading.CancellationTokenSource> Vegye figyelembe, hogy csak a rövidebb a két időtúllépése alkalmazza."
  syntax:
    content: public TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A timespan, amíg várni kell a kérelem időtúllépés miatt megszakadt."
  overload: System.Net.Http.HttpClient.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott időkorlát kisebb vagy egyenlő, mint nulla, és nem <xref:System.Threading.Timeout.InfiniteTimeSpan>.</xref:System.Threading.Timeout.InfiniteTimeSpan>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egy műveletet az aktuális példányon már el van indítva."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Az aktuális példány el lett távolítva."
  platform:
  - net462
references:
- uid: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: System.Net.Http.HttpMessageInvoker
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.Http.HttpRequestException
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestException
  nameWithType: HttpRequestException
  fullName: System.Net.Http.HttpRequestException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Http.HttpClient.#ctor
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: HttpClient()
  nameWithType: HttpClient.HttpClient()
  fullName: System.Net.Http.HttpClient.HttpClient()
- uid: System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: HttpClient(HttpMessageHandler)
  nameWithType: HttpClient.HttpClient(HttpMessageHandler)
  fullName: System.Net.Http.HttpClient.HttpClient(HttpMessageHandler)
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: HttpClient(HttpMessageHandler,Boolean)
  nameWithType: HttpClient.HttpClient(HttpMessageHandler,Boolean)
  fullName: System.Net.Http.HttpClient.HttpClient(HttpMessageHandler,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpClient.BaseAddress
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: BaseAddress
  nameWithType: HttpClient.BaseAddress
  fullName: System.Net.Http.HttpClient.BaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.Http.HttpClient.CancelPendingRequests
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: CancelPendingRequests()
  nameWithType: HttpClient.CancelPendingRequests()
  fullName: System.Net.Http.HttpClient.CancelPendingRequests()
- uid: System.Net.Http.HttpClient.DefaultRequestHeaders
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DefaultRequestHeaders
  nameWithType: HttpClient.DefaultRequestHeaders
  fullName: System.Net.Http.HttpClient.DefaultRequestHeaders
- uid: System.Net.Http.Headers.HttpRequestHeaders
  parent: System.Net.Http.Headers
  isExternal: false
  name: HttpRequestHeaders
  nameWithType: HttpRequestHeaders
  fullName: System.Net.Http.Headers.HttpRequestHeaders
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync(String)
  nameWithType: HttpClient.DeleteAsync(String)
  fullName: System.Net.Http.HttpClient.DeleteAsync(String)
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.Http.HttpResponseMessage>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: HttpResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync(Uri)
  nameWithType: HttpClient.DeleteAsync(Uri)
  fullName: System.Net.Http.HttpClient.DeleteAsync(Uri)
- uid: System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync(String,CancellationToken)
  nameWithType: HttpClient.DeleteAsync(String,CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(String,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync(Uri,CancellationToken)
  nameWithType: HttpClient.DeleteAsync(Uri,CancellationToken)
  fullName: System.Net.Http.HttpClient.DeleteAsync(Uri,CancellationToken)
- uid: System.Net.Http.HttpClient.Dispose(System.Boolean)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpClient.Dispose(Boolean)
  fullName: System.Net.Http.HttpClient.Dispose(Boolean)
- uid: System.Net.Http.HttpClient.GetAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(String)
  nameWithType: HttpClient.GetAsync(String)
  fullName: System.Net.Http.HttpClient.GetAsync(String)
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(Uri)
  nameWithType: HttpClient.GetAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri)
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(String,HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(String,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(String,HttpCompletionOption)
- uid: System.Net.Http.HttpCompletionOption
  parent: System.Net.Http
  isExternal: false
  name: HttpCompletionOption
  nameWithType: HttpCompletionOption
  fullName: System.Net.Http.HttpCompletionOption
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(String,CancellationToken)
  nameWithType: HttpClient.GetAsync(String,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(String,CancellationToken)
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(Uri,HttpCompletionOption)
  nameWithType: HttpClient.GetAsync(Uri,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,HttpCompletionOption)
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(Uri,CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,CancellationToken)
- uid: System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(String,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.GetAsync(String,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(String,HttpCompletionOption,CancellationToken)
- uid: System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync(Uri,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.GetAsync(Uri,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.GetAsync(Uri,HttpCompletionOption,CancellationToken)
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetByteArrayAsync(String)
  nameWithType: HttpClient.GetByteArrayAsync(String)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(String)
- uid: System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Byte>
  nameWithType: Task<Byte>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Byte[]>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetByteArrayAsync(Uri)
  nameWithType: HttpClient.GetByteArrayAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetByteArrayAsync(Uri)
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStreamAsync(String)
  nameWithType: HttpClient.GetStreamAsync(String)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(String)
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.IO.Stream>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpClient.GetStreamAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStreamAsync(Uri)
  nameWithType: HttpClient.GetStreamAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStreamAsync(Uri)
- uid: System.Net.Http.HttpClient.GetStringAsync(System.String)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStringAsync(String)
  nameWithType: HttpClient.GetStringAsync(String)
  fullName: System.Net.Http.HttpClient.GetStringAsync(String)
- uid: System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpClient.GetStringAsync(System.Uri)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStringAsync(Uri)
  nameWithType: HttpClient.GetStringAsync(Uri)
  fullName: System.Net.Http.HttpClient.GetStringAsync(Uri)
- uid: System.Net.Http.HttpClient.MaxResponseContentBufferSize
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: MaxResponseContentBufferSize
  nameWithType: HttpClient.MaxResponseContentBufferSize
  fullName: System.Net.Http.HttpClient.MaxResponseContentBufferSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync(String,HttpContent)
  nameWithType: HttpClient.PostAsync(String,HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(String,HttpContent)
- uid: System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: false
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync(Uri,HttpContent)
  nameWithType: HttpClient.PostAsync(Uri,HttpContent)
  fullName: System.Net.Http.HttpClient.PostAsync(Uri,HttpContent)
- uid: System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync(String,HttpContent,CancellationToken)
  nameWithType: HttpClient.PostAsync(String,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(String,HttpContent,CancellationToken)
- uid: System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync(Uri,HttpContent,CancellationToken)
  nameWithType: HttpClient.PostAsync(Uri,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PostAsync(Uri,HttpContent,CancellationToken)
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync(String,HttpContent)
  nameWithType: HttpClient.PutAsync(String,HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(String,HttpContent)
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync(Uri,HttpContent)
  nameWithType: HttpClient.PutAsync(Uri,HttpContent)
  fullName: System.Net.Http.HttpClient.PutAsync(Uri,HttpContent)
- uid: System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync(String,HttpContent,CancellationToken)
  nameWithType: HttpClient.PutAsync(String,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(String,HttpContent,CancellationToken)
- uid: System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync(Uri,HttpContent,CancellationToken)
  nameWithType: HttpClient.PutAsync(Uri,HttpContent,CancellationToken)
  fullName: System.Net.Http.HttpClient.PutAsync(Uri,HttpContent,CancellationToken)
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync(HttpRequestMessage)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage)
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync(HttpRequestMessage,HttpCompletionOption)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption)
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync(HttpRequestMessage,CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,CancellationToken)
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
  fullName: System.Net.Http.HttpClient.SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
- uid: System.Net.Http.HttpClient.Timeout
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: Timeout
  nameWithType: HttpClient.Timeout
  fullName: System.Net.Http.HttpClient.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.Http.HttpClient.#ctor*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: HttpClient
  nameWithType: HttpClient.HttpClient
- uid: System.Net.Http.HttpClient.BaseAddress*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: BaseAddress
  nameWithType: HttpClient.BaseAddress
- uid: System.Net.Http.HttpClient.CancelPendingRequests*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: CancelPendingRequests
  nameWithType: HttpClient.CancelPendingRequests
- uid: System.Net.Http.HttpClient.DefaultRequestHeaders*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DefaultRequestHeaders
  nameWithType: HttpClient.DefaultRequestHeaders
- uid: System.Net.Http.HttpClient.DeleteAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: DeleteAsync
  nameWithType: HttpClient.DeleteAsync
- uid: System.Net.Http.HttpClient.Dispose*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: Dispose
  nameWithType: HttpClient.Dispose
- uid: System.Net.Http.HttpClient.GetAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetAsync
  nameWithType: HttpClient.GetAsync
- uid: System.Net.Http.HttpClient.GetByteArrayAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetByteArrayAsync
  nameWithType: HttpClient.GetByteArrayAsync
- uid: System.Net.Http.HttpClient.GetStreamAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStreamAsync
  nameWithType: HttpClient.GetStreamAsync
- uid: System.Net.Http.HttpClient.GetStringAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: GetStringAsync
  nameWithType: HttpClient.GetStringAsync
- uid: System.Net.Http.HttpClient.MaxResponseContentBufferSize*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: MaxResponseContentBufferSize
  nameWithType: HttpClient.MaxResponseContentBufferSize
- uid: System.Net.Http.HttpClient.PostAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PostAsync
  nameWithType: HttpClient.PostAsync
- uid: System.Net.Http.HttpClient.PutAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: PutAsync
  nameWithType: HttpClient.PutAsync
- uid: System.Net.Http.HttpClient.SendAsync*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: SendAsync
  nameWithType: HttpClient.SendAsync
- uid: System.Net.Http.HttpClient.Timeout*
  parent: System.Net.Http.HttpClient
  isExternal: false
  name: Timeout
  nameWithType: HttpClient.Timeout
