### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameRegistration
  id: PeerNameRegistration
  children:
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameRegistration.Cloud
  - System.Net.PeerToPeer.PeerNameRegistration.Comment
  - System.Net.PeerToPeer.PeerNameRegistration.Data
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose
  - System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  - System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  - System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  - System.Net.PeerToPeer.PeerNameRegistration.PeerName
  - System.Net.PeerToPeer.PeerNameRegistration.Port
  - System.Net.PeerToPeer.PeerNameRegistration.Start
  - System.Net.PeerToPeer.PeerNameRegistration.Stop
  - System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Net.PeerToPeer.PeerNameRegistration.Update
  - System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  langs:
  - csharp
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration
  fullName: System.Net.PeerToPeer.PeerNameRegistration
  type: Class
  summary: "Regisztrálja a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>a egy <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> vagy felhők.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Regisztrációs létrehozása (vagy frissítése) társított összes információt egy <xref:System.Net.PeerToPeer.PeerName>társ felhő vagy felhők.</xref:System.Net.PeerToPeer.PeerName>       Lehetséges, hogy a társ névvel több PeerNameRegistration objektumokat is. Ebben az esetben ha a partner neve védett, minden példány jelenti. egy másik felhőben PeerNameRegistration. Azonban ha a partner neve nem védett, azt is regisztrálni kell az azonos felhőben többször, biztosítása, hogy az egyes regisztrációs származik-e egy másik folyamat."
  syntax:
    content: 'public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Egy új alapértelmezett példányát inicializálja a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> osztály."
  remarks: "Típus <xref:System.Net.PeerToPeer.PeerNameRegistration>.</xref:System.Net.PeerToPeer.PeerNameRegistration> új alapértelmezett példányát adja vissza Azt nem végez társ névregisztráció konstrukció során.       Ezzel a konstruktorral az objektum példányának, miután a hívó fel kell töltenie a példány <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>vagy <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> hívása előtt megfelelő mezőire"
  syntax:
    content: public PeerNameRegistration ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> osztály a megadott névvel és portszámot."
  remarks: "Ez a konstruktor hívása létrehoz egy példányát minden forrás címek (IPv6and IPv4) regisztrálásához használt és a megadott port, amelyben a társ jelenleg résztvevő összes felhő.  Ha az objektum, sikeresen összeállított a megadott <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>és <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>fel van töltve.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>       Ha a partner neve védett, és a korábban regisztrált egy <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>a társ jelenleg részt, egy <xref:System.Net.PeerToPeer.PeerToPeerException>vált ki.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Ez a konstruktor csak létrehoz egy <xref:System.Net.PeerToPeer.PeerNameRegistration>példány; nem végzi el a regisztrációs.</xref:System.Net.PeerToPeer.PeerNameRegistration> Ezzel a konstruktorral az regisztrációs-objektum példányának, és a program kitölti a mezőket, után hívja meg az alkalmazás <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>a tényleges regisztrálására.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum regisztrálni."
    - id: port
      type: System.Int32
      description: "Egész szám, amely megadja a port számát regisztrálja."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> name </code> paraméter értéke nem lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott portszám kisebb nullánál.  Portszámok nagyobb vagy egyenlő nulla és kisebb, mint 65 535 (0xFFFF) kell lennie."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> megadott már regisztrálva van az adott állomásról.      -A távoli gép nem tulajdonosa a <xref:System.Net.PeerToPeer.PeerName.Authority*>a megadott <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicializál egy új szerializálható <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum."
  syntax:
    content: protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Amely tárolja az adatokat, ez a példány deszerializálásához szükséges objektum hivatkozását."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Az a környezetben, amely lehetővé teszi a számára az adatok deszerializálása során. Más néven a szerializált adatok forrását."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  id: '#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)'
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> a megadott partner neve, a portszámot, osztályra és <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Ez a konstruktor hívása létrehoz egy példányát minden forrás-címek (az IPv6 és IPv4-alapú), a megadott port és a megadott <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> használandó  Ha az objektum sikeresen összeállított, a tulajdonságok a megadott <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>és <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> feltöltött       Ha a felhő paraméter `null`, regisztrálva van a neve, használja a <xref:System.Net.PeerToPeer.Cloud.Available>helyi, amely inicializálja az alapértelmezett értékeit a <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, és <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available>       Példánylétrehozás <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>metódust kell hívni a <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> regisztrálása</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> után"
  syntax:
    content: public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: name
      type: System.Net.PeerToPeer.PeerName
      description: "A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum regisztrálni."
    - id: port
      type: System.Int32
      description: "Egész szám, amely megadja a port számát regisztrálja."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "<xref href=&quot;System.Net.PeerToPeer.Cloud&quot;></xref>ahol a partner neve regisztrálni."
  overload: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> name </code> paraméter értéke nem lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott portszám kisebb nullánál.  Portszámok nagyobb vagy egyenlő nulla és kisebb, mint 65 535 (0xFFFF) kell lennie."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> megadott már regisztrálva van az adott állomásról.      -A távoli gép nem tulajdonosa a <xref:System.Net.PeerToPeer.PeerName.Authority*>a megadott <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum.</xref:System.Net.PeerToPeer.PeerName.Authority*>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  id: Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdezi vagy beállítja az információk be, amelyhez a felhőben működő <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>objektum regisztrálva lesz.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  syntax:
    content: public System.Net.PeerToPeer.Cloud Cloud { get; set; }
    return:
      type: System.Net.PeerToPeer.Cloud
      description: "Típusú objektum <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> , amely megadja, hogy a társ-felhő, amelynek ez a regisztráció van definiálva. Ez a tulajdonság értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> alapértelmezés szerint."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  id: Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdezi vagy beállítja azt a további információkat a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> objektum, amely a regisztrálva lesz a <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  syntax:
    content: public string Comment { get; set; }
    return:
      type: System.String
      description: "A Megjegyzés, amely kapcsolatos további információkat tartalmaz a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> társítja a <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Ez a tulajdonság értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> alapértelmezés szerint."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  exceptions:
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A megadott karakterlánc értéke nagyobb, mint 39 Unicode-karaktereket."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  id: Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdezi vagy beállítja az alkalmazás által meghatározott bináris adatait a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum."
  remarks: "A maximális adatmennyiség lehet megadni: 4096 bájt."
  syntax:
    content: public byte[] Data { get; set; }
    return:
      type: System.Byte[]
      description: "Bájttömb, amely tárolja a bejegyzéshez tartozó bináris adat. Ez a tulajdonság értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> alapértelmezés szerint."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Data*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott adatokat értéke nagyobb, mint 4096 bájt."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  id: Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Feloldja a által használt erőforrások a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "A nem felügyelt erőforrások kiadja, és opcionálisan feloldja a által használt felügyelt erőforrások a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  id: EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdezi a hálózati végpontot, amelynek a kapcsolódó-partner nevének regisztrálva a gyűjteményben."
  remarks: "Az a <xref:System.Net>névtér, egy <xref:System.Net.IPEndPoint>IP-címet és egy portszámot, a hálózati végpontot jelenti.</xref:System.Net.IPEndPoint> </xref:System.Net>  A PNRP egy IP-cím és port értéket kell megadni végpontok.  A végpontok, amelyek megadható maximális száma:&10;. Ez a paraméter automatikus cím kijelölés használatos `null`.       A regisztrációs módszert használ, amely automatikusan kiválasztja a címek regisztrálni, ha nincs meghatározni, amelynek a partner neve regisztrálták theaddresses módszer.  Ez azt jelenti, hogy a EndPointCollection tulajdonság nem frissül megfelelően a kiválasztott címek.       Amikor regisztrál egy partner neve egynél több csomópont, minden egyes <xref:System.Net.PeerToPeer.PeerNameRegistration>egyediek és a megadott regisztrációs feltünteti a EndPointCollection tulajdonság eltérőek lesznek.</xref:System.Net.PeerToPeer.PeerNameRegistration> Is, ha egy <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>regisztrálva van-e be egynél több <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, minden egyes tanúsítványregisztrációs különböző, és a végpontok gyűjteménye általában az összes olyan példány eltérőek lesznek.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>"
  syntax:
    content: public System.Net.IPEndPointCollection EndPointCollection { get; }
    return:
      type: System.Net.IPEndPointCollection
      description: "Egy <xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*>objektum, amely tartalmazza a hálózati végpontot, amelynek a kapcsolódó-partner nevének regisztrálva van.</xref:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection*> Ha explicit módon megadott, alapértelmezett összes tulajdonságának értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referencia típusok."
  overload: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "A szerializálási adatokat objektum szerializálása szükséges adatok tölti fel a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> példány."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A szerializált adatok társított tárolja a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A szerializált folyamban társított céljának tartalmazza a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum."
  overload: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  id: IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdezi vagy beállítja, hogy a partner neve szerepel-e a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>tulajdonság regisztrálva van egy adott <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> egy gazdagépen.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  syntax:
    content: public bool IsRegistered ();
    parameters: []
    return:
      type: System.Boolean
      description: "Ha <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a partner neve regisztrálva van egy <> </> *> a társ-állomás. Ha <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, majd a regisztrációs folyamat során a indítható <> </> *>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Nem lehet regisztrálni egy objektumot, amely már el lett távolítva."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  id: PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdezi vagy beállítja a partner neve társ felhő regisztrálására."
  remarks: "A partner neve regisztrálható egynél több csomópont; minden egyes <xref:System.Net.PeerToPeer.PeerNameRegistration>példány eltér.</xref:System.Net.PeerToPeer.PeerNameRegistration> A <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>társított minden egyes megfelelő tulajdonság <xref:System.Net.PeerToPeer.PeerName>példány eltér.</xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Azt is lehet regisztrálni a partner neve, amely a csomópont csatlakozik; egynél több felhőalapú a regisztráció egy különálló. A partner neve <xref:System.Net.IPEndPointCollection>minden esetben eltérő lesz.</xref:System.Net.IPEndPointCollection>"
  syntax:
    content: public System.Net.PeerToPeer.PeerName PeerName { get; set; }
    return:
      type: System.Net.PeerToPeer.PeerName
      description: "Típusú objektum <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> , amely tartalmazza a társított értékek <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum. Ha explicit módon megadott, alapértelmezett összes tulajdonságának értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referencia típusok."
  overload: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  id: Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdezi vagy beállítja a [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) alatt regisztrálni a társ által használt portszámot a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum."
  remarks: "Az alapértelmezett portot használja a <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>metódus csak akkor, ha nincsenek végpontok meg van adva.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "A TCP-portszámot, amely a <xref:System.Net.IPEndPoint>.</xref:System.Net.IPEndPoint> jelző egész szám Ha explicit módon adja meg, az alapértelmezett érték a tulajdonság értéke nulla (0)."
  overload: System.Net.PeerToPeer.PeerNameRegistration.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott érték kisebb, mint nulla.  Portszámok nagyobb vagy egyenlő nulla és kisebb, mint 65 535 (0xFFFF) kell lennie."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  id: Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Regisztrálja a <> </> *> azokat a <> </> *>. Ha nincs <> </> *> van megadva, a megadott port értékének automatikus cím kijelölés használt a <> </> *> tulajdonság."
  remarks: "A metódus regisztrálja a megadott partner neve a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>tulajdonságot, amelyben minden forrás címek és a <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>konstruktorában megadott.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> Az alapértelmezett port szolgál a metódus csak akkor, ha nincsenek végpontok meg van adva.       Ha a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>tulajdonság `null`, ez a módszer regisztrálja a partner neve szerepel a <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>tulajdonság használatával a <xref:System.Net.PeerToPeer.Cloud.Available>mező, amely inicializálja az alapértelmezett értékeit a <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, és <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>       Miután egy <xref:System.Net.PeerToPeer.PeerNameRegistration>objektum elindult, a <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>metódus használatával állítsa le azt.</xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> </xref:System.Net.PeerToPeer.PeerNameRegistration>       A regisztráció frissítése a <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>módszert kell használni.</xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>"
  example:
  - "The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.  \n  \n [!code-cs[NCLPNRPRegisterPeerName#1](~/add/codesnippet/csharp/m-system.net.peertopeer._1_1.cs)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>tulajdonsága <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum Dispose() hívása korábban rendelkezett."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "-A <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> megadott már regisztrálva van. A <> </> *> frissítse a regisztrációs módszert kell használni.      -A távoli gép nem tulajdonosa a <> </> *> a a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> megadott.      -Vagy a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> vagy a <> </> *> nincs megadva; legalább egyet meg kell adni.      -A üzenet vagy adatok elemek érvénytelenek. Vagy, <> </> *> nincs beállítva és nem adatblobja vagy <xref:System.Net.IPEndPoint>van megadva.</xref:System.Net.IPEndPoint>"
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  id: Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Megszünteti a partner neve szerepel a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>azt regisztrált összes felhő-tulajdonságot.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "A regisztrációs folyamat leállítása után a regisztrációs objektum állapota megegyezik az állapot után közvetlenül alatt állít elő az alapértelmezett konstruktort. Ebben az állapotban lévő összes tulajdonságát feltételezhető, hogy az érték nélküli. A <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>módszer használható, hogy újraindítsa.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>       Lehetséges, hogy a társ névvel több regisztrációs objektumokat is.  Ebben az esetben ha a partner neve védett, minden példány jelöli egy másik PNRP-felhővel való regisztráció.  Azonban ha a partner neve nem védett, azt is regisztrálni kell az azonos felhőben több alkalommal.       Ez a példány már le van állítva, ha a metódus hívása nincs hatása."
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <> </> *> tulajdonság még nincs regisztrálva. Ez akkor fordul elő, amikor egy <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> objektum üres konstruktorral segítségével jön létre. A <> </> *> tulajdonság ebben az esetben <xref:System.Net.PeerToPeer.PeerNameRegistration.Start*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Start*> hívása előtt kell szerepelniük"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Ez az objektum Dispose() hívása korábban rendelkezett."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Megvalósítja a <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> felületet, és visszaadja az adatokat szükség lehet, mert a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> példány."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A szerializált adatok társított tárolja a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> példány."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A szerializált folyamban társított célját tartalmazza a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> példány."
  overload: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  id: Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Frissítések a <xref href=&quot;System.Net.PeerToPeer.PeerNameRegistration&quot;> </xref> egy regisztrált egy adott csomópont <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>. Frissítés végrehajtása tulajdonságai között megadott információk segítségével."
  remarks: "A felhő regisztrált összes információ <xref:System.Net.PeerToPeer.PeerName>a hívás előtt teljesen vetve.</xref:System.Net.PeerToPeer.PeerName>  Az új adatok nem a meglévő regisztrációs együtt.  Frissíteni egy <xref:System.Net.PeerToPeer.PeerNameRegistration>, először frissítse az ezen a példányon a tulajdonságait, és majd hívja meg ezt a módszert.</xref:System.Net.PeerToPeer.PeerNameRegistration>       Miután egy <xref:System.Net.PeerToPeer.PeerNameRecord>regisztrálva van, a <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>tulajdonság nem lehet frissíteni.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord>  Lehetséges, hogy a rekordban levő összes többi mező frissítve."
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameRegistration.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>tulajdonsága <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "-A <> </> *> tulajdonság még nincs regisztrálva. Az Update metódus nem hívható meg, amíg a partner neve szerepel a <> </> *> tulajdonság regisztrálva van egy vagy több felhőt.      -A megadott partner neve a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>tulajdonság megváltozott, a megfelelő óta <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> lett regisztrálva.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Nem lehet regisztrálni egy objektumot, amely el lett távolítva."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> tulajdonsága <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  id: UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  langs:
  - csharp
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Lekérdez vagy beállít egy értéket, amely megadja, hogy automatikus végpont választás, ha egy társ háló vagy <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud*> áthaladó"
  remarks: "Automatikus végpont kijelölés használatakor (Ez a tulajdonság értéke `true`) végpont információk nélkül megkezdése előtt egy <xref:System.Net.PeerToPeer.PeerNameRegistration>, a rendszer az egyes végpontok választ, és az összes elérhető felhő társított társ nevű közzéteszi őket.</xref:System.Net.PeerToPeer.PeerNameRegistration>  Ha a port nincs megadva, Automatikus kijelölés úgy dönt, mint a <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> nulla       Ha beállítása `false`, nem történik automatikus kiválasztása a fent leírt módon.  Ez lehetővé teszi a regisztrációt a partner neve együtt adatok blob közzététele (által meghatározott a <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A>tulajdonság).</xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Nincsenek végpontok társított nevét.       A regisztrációs módszert használ, amely automatikusan kiválasztja a címek regisztrálni, ha nincs módszer annak meghatározásához, hogy milyen címet, amelynek a <xref:System.Net.PeerToPeer.PeerName>objektum lett regisztrálva.</xref:System.Net.PeerToPeer.PeerName>  Ez azt jelenti, hogy a <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>tulajdonság nem frissül, hogy tükrözze a kiválasztott címek.</xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>       Ez a tulajdonság frissítése társ névregisztráció megkezdése után nincs hatása."
  syntax:
    content: public bool UseAutoEndPointSelection { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Ha automatikus végpont kijelölés használni; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha más módon határozza meg a végpont használatával. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration()
  nameWithType: PeerNameRegistration.PeerNameRegistration()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration()
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32)
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration(PeerName,Int32,Cloud)
  nameWithType: PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerNameRegistration(PeerName,Int32,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Comment
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Data
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose()
  nameWithType: PeerNameRegistration.Dispose()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PeerNameRegistration.Dispose(Boolean)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection
- uid: System.Net.IPEndPointCollection
  parent: System.Net
  isExternal: false
  name: IPEndPointCollection
  nameWithType: IPEndPointCollection
  fullName: System.Net.IPEndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered()
  nameWithType: PeerNameRegistration.IsRegistered()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered()
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
  fullName: System.Net.PeerToPeer.PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start()
  nameWithType: PeerNameRegistration.Start()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Start()
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop()
  nameWithType: PeerNameRegistration.Stop()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Stop()
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Net.PeerToPeer.PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update()
  nameWithType: PeerNameRegistration.Update()
  fullName: System.Net.PeerToPeer.PeerNameRegistration.Update()
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
  fullName: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection
- uid: System.Net.PeerToPeer.PeerNameRegistration.#ctor*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerNameRegistration
  nameWithType: PeerNameRegistration.PeerNameRegistration
- uid: System.Net.PeerToPeer.PeerNameRegistration.Cloud*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Cloud
  nameWithType: PeerNameRegistration.Cloud
- uid: System.Net.PeerToPeer.PeerNameRegistration.Comment*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Comment
  nameWithType: PeerNameRegistration.Comment
- uid: System.Net.PeerToPeer.PeerNameRegistration.Data*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Data
  nameWithType: PeerNameRegistration.Data
- uid: System.Net.PeerToPeer.PeerNameRegistration.Dispose*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Dispose
  nameWithType: PeerNameRegistration.Dispose
- uid: System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: EndPointCollection
  nameWithType: PeerNameRegistration.EndPointCollection
- uid: System.Net.PeerToPeer.PeerNameRegistration.GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: GetObjectData
  nameWithType: PeerNameRegistration.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.IsRegistered*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: IsRegistered
  nameWithType: PeerNameRegistration.IsRegistered
- uid: System.Net.PeerToPeer.PeerNameRegistration.PeerName*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: PeerName
  nameWithType: PeerNameRegistration.PeerName
- uid: System.Net.PeerToPeer.PeerNameRegistration.Port*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Port
  nameWithType: PeerNameRegistration.Port
- uid: System.Net.PeerToPeer.PeerNameRegistration.Start*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Start
  nameWithType: PeerNameRegistration.Start
- uid: System.Net.PeerToPeer.PeerNameRegistration.Stop*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Stop
  nameWithType: PeerNameRegistration.Stop
- uid: System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: PeerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Net.PeerToPeer.PeerNameRegistration.Update*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: Update
  nameWithType: PeerNameRegistration.Update
- uid: System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection*
  parent: System.Net.PeerToPeer.PeerNameRegistration
  isExternal: false
  name: UseAutoEndPointSelection
  nameWithType: PeerNameRegistration.UseAutoEndPointSelection
