### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ExpressionContext
  id: ExpressionContext
  children:
  - System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)
  - System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)
  - System.ComponentModel.Design.Serialization.ExpressionContext.Expression
  - System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType
  - System.ComponentModel.Design.Serialization.ExpressionContext.Owner
  - System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue
  langs:
  - csharp
  name: ExpressionContext
  nameWithType: ExpressionContext
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext
  type: Class
  summary: "Lehetővé teszi az áthaladó környezet állapota objektumszerializáló között. Ez az osztály nem örökölhető."
  remarks: "Egy ExpressionContext helyezkedik el a környezeti verem és a szerializálás során legfontosabb kifejezést tartalmaz. A következő C#-kódban hozzárendelés mutatja be.      ```   button1.Text = &quot;Hello&quot;;   ```A szerializálás során több objektumszerializáló felelősek az egyetlen utasítás létrehozásához. Egy adott objektumszerializáló létrehozásáért felelős &quot;Hello szövegrészt&quot;. Vannak olyan helyzetek, amikor, hogy a szerializáló előfordulhat, hogy ismernie kell a környezetben, amelyben azt hoz létre a kifejezésében. Az előző példában szereplő ebben a környezetben nem szükséges. A következő C# kód bemutatja a helyzetet, amelyben a környezet ismerete szükség.      ```   button1.Text = rm.GetString(&quot;button1_Text&quot;);   ```Ebben az esetben a szerializáló az erőforrás-kifejezés létrehozásáért felelős tájékoztatni kell, a célobjektumokhoz nevei. Ez a ExpressionContext osztály használható. Minden szerializáló hoz létre egy kifejezést, és kezelni egy teljes utasítás kisebb részét szerializálót hív, a szerializáló a környezeti verem a leküldéses értesítések egy kifejezés környezetben. Minden egyes kifejezés környezet magában hordozza a szülő tulajdonságot, amely a következő kifejezés környezetben a veremben. Ez lehetővé teszi egy kényelmes könyvtármegkerülési."
  syntax:
    content: public sealed class ExpressionContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)
  id: '#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)'
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  langs:
  - csharp
  name: ExpressionContext(CodeExpression,Type,Object)
  nameWithType: ExpressionContext.ExpressionContext(CodeExpression,Type,Object)
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionContext(CodeExpression,Type,Object)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ComponentModel.Design.Serialization.ExpressionContext&quot;> </xref> osztály a megadott kifejezésnek és a tulajdonos."
  syntax:
    content: public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);
    parameters:
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "A megadott kód kifejezés."
    - id: expressionType
      type: System.Type
      description: "A megadott kifejezés típusa."
    - id: owner
      type: System.Object
      description: "A megadott kód kifejezés tulajdonosa."
  overload: System.ComponentModel.Design.Serialization.ExpressionContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expression</code>, <code>expressionType</code>, or <code>owner</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)
  id: '#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)'
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  langs:
  - csharp
  name: ExpressionContext(CodeExpression,Type,Object,Object)
  nameWithType: ExpressionContext.ExpressionContext(CodeExpression,Type,Object,Object)
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionContext(CodeExpression,Type,Object,Object)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ComponentModel.Design.Serialization.ExpressionContext&quot;> </xref> osztály aktuális értékkel."
  syntax:
    content: public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);
    parameters:
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "A megadott kód kifejezés."
    - id: expressionType
      type: System.Type
      description: "A megadott kifejezés típusa."
    - id: owner
      type: System.Object
      description: "A megadott kód kifejezés tulajdonosa."
    - id: presetValue
      type: System.Object
      description: "A megadott kód kifejezés beállított értéket."
  overload: System.ComponentModel.Design.Serialization.ExpressionContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expression</code>, <code>expressionType</code>, or <code>owner</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.Expression
  id: Expression
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  langs:
  - csharp
  name: Expression
  nameWithType: ExpressionContext.Expression
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.Expression
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Lekérdezi a kifejezés ebben a környezetben jelöli."
  syntax:
    content: public System.CodeDom.CodeExpression Expression { get; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A kifejezés ebben a környezetben jelöli."
  overload: System.ComponentModel.Design.Serialization.ExpressionContext.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType
  id: ExpressionType
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  langs:
  - csharp
  name: ExpressionType
  nameWithType: ExpressionContext.ExpressionType
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Lekérdezi a <xref:System.Type>a kifejezésben.</xref:System.Type>"
  remarks: "Használhat <xref:System.ComponentModel.Design.Serialization.ExpressionContext>annak meghatározásához, hogy szükséges-e egy típuskonverzió, kifejezésre hozzárendelésekor.</xref:System.ComponentModel.Design.Serialization.ExpressionContext>"
  syntax:
    content: public Type ExpressionType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>a kifejezésben.</xref:System.Type>"
  overload: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.Owner
  id: Owner
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  langs:
  - csharp
  name: Owner
  nameWithType: ExpressionContext.Owner
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.Owner
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Lekérdezi az objektumot a tulajdonos ebben a kifejezésben."
  remarks: "Ha a kifejezés tulajdonság hivatkozni kell a <xref:System.Windows.Forms.Control.Text%2A>tulajdonság egy példányának <xref:System.Windows.Forms.Button>nevű `button1`, tulajdonosa adja vissza `button1`.</xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Control.Text%2A>"
  syntax:
    content: public object Owner { get; }
    return:
      type: System.Object
      description: "Az objektumot a tulajdonos ebben a kifejezésben."
  overload: System.ComponentModel.Design.Serialization.ExpressionContext.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue
  id: PresetValue
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  langs:
  - csharp
  name: PresetValue
  nameWithType: ExpressionContext.PresetValue
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Lekérdezi az előre definiált-kifejezés értékét."
  remarks: "Egy léteznie kell egy kifejezés, előre definiált értéket tartalmazza. Például, ha a kifejezés egy tulajdonság hivatkozó kifejezés hivatkozik a <xref:System.Windows.Forms.Control.Controls%2A>tulajdonsága egy <xref:System.Windows.Forms.Button>, a PresetValue tulajdonsága tartalmazza az példányát a <xref:System.Windows.Forms.Control.Controls%2A>tulajdonság.</xref:System.Windows.Forms.Control.Controls%2A> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Control.Controls%2A> Ez azért, mert a tulajdonság csak olvasható, és előre definiált értéket tartalmazó objektum. Másrészről, például egy tulajdonság <xref:System.Windows.Forms.Control.Text%2A>vagy <xref:System.Windows.Forms.Control.Visible%2A>nincs előre definiált értéket, és ezért a PresetValue tulajdonság visszaadja `null`.</xref:System.Windows.Forms.Control.Visible%2A> </xref:System.Windows.Forms.Control.Text%2A>       A következő C# kód bemutatja, hogyan objektumszerializáló segítségével ezt az információt szerializálási útmutató.       [C#]      ```   Padding p = new Padding();   p.Left = 5;   button1.Padding = p;      button1.Padding.Left = 5;   ``` a szerializáló példánya a <xref:System.Windows.Forms.Padding>struktúra kell értesíti, ha azt az első és második űrlap kell létrehozni.</xref:System.Windows.Forms.Padding> Az első képernyőn alapértelmezés szerint létrejön. A második űrlap csak akkor állít elő, ha egy <xref:System.ComponentModel.Design.Serialization.ExpressionContext>értékének a környezeti verem, amely tartalmaz egy PresetValue egyenlő a <xref:System.Windows.Forms.Padding>éppen szerializált.</xref:System.Windows.Forms.Padding> </xref:System.ComponentModel.Design.Serialization.ExpressionContext>"
  syntax:
    content: public object PresetValue { get; }
    return:
      type: System.Object
      description: "Az előre beállított értéke ebben a kifejezésben vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs hozzárendelve."
  overload: System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: ExpressionContext(CodeExpression,Type,Object)
  nameWithType: ExpressionContext.ExpressionContext(CodeExpression,Type,Object)
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionContext(CodeExpression,Type,Object)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: ExpressionContext(CodeExpression,Type,Object,Object)
  nameWithType: ExpressionContext.ExpressionContext(CodeExpression,Type,Object,Object)
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionContext(CodeExpression,Type,Object,Object)
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.Expression
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: Expression
  nameWithType: ExpressionContext.Expression
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.Expression
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionContext.ExpressionType
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.Owner
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: Owner
  nameWithType: ExpressionContext.Owner
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.Owner
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: PresetValue
  nameWithType: ExpressionContext.PresetValue
  fullName: System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.#ctor*
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: ExpressionContext
  nameWithType: ExpressionContext.ExpressionContext
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.Expression*
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: Expression
  nameWithType: ExpressionContext.Expression
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType*
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionContext.ExpressionType
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.Owner*
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: Owner
  nameWithType: ExpressionContext.Owner
- uid: System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue*
  parent: System.ComponentModel.Design.Serialization.ExpressionContext
  isExternal: false
  name: PresetValue
  nameWithType: ExpressionContext.PresetValue
