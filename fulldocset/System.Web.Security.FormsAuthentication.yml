### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "Kezeli az űrlap-hitelesítési szolgáltatások webes alkalmazásokhoz. Ez az osztály nem örökölhető."
  remarks: "Az űrlapos hitelesítés lehetővé teszi a felhasználó és a jelszó érvényesítése Windows-hitelesítést nem igénylő webes alkalmazásokhoz. Az űrlapos hitelesítéshez, felhasználói adatai egy külső adatforrásból, például egy <xref:System.Web.Security.Membership>adatbázis, vagy az alkalmazás a konfigurációs fájlban.</xref:System.Web.Security.Membership> A felhasználó hitelesítését követően a az űrlapos hitelesítés egy hitelesítési jegyet cookie-ban vagy az URL-címben tart fenn, hogy a hitelesített felhasználónak nem kell minden egyes kérelemmel hitelesítő adatok megadását.       Az űrlapos hitelesítés engedélyezve van, úgy, hogy a `mode` attribútumot a konfigurációs elem `Forms`. Megkövetelheti, hogy tartalmaznak-e az összes kérelmet egy alkalmazáshoz egy érvényes felhasználói hitelesítési jegyet segítségével a konfigurációs elem a visszautasítja a kérelmet bármely ismeretlen felhasználó, az alábbi példában látható módon.      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```Az előző példában egy ASP.NET-lap, az alkalmazás részét képező összes kérelem megköveteli az űrlapos hitelesítés által biztosított érvényes felhasználónevet. Ha a felhasználónév nem létezik, majd a kérést a rendszer átirányítja a konfigurált <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       A FormsAuthentication osztály metódusok és hitelesíti a felhasználókat alkalmazásban használható tulajdonságok hozzáférést biztosít. A <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>metódus átirányítja egy böngészőben a beállított <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>a felhasználók számára az alkalmazás be tudjon jelentkezni.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> A <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metódus átirányítja a hitelesített felhasználók vissza az eredeti védett URL-címet, amely a kért vagy a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Módon is, amelyek lehetővé teszik, hogy az űrlap-hitelesítési jegyek kezelése szükség esetén."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> osztály."
  remarks: "Ez a konstruktor nem célja, hogy a felhasználói kódból használható."
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ellenőrzi a felhasználónevet és jelszót egy alkalmazás a konfigurációs fájlban tárolt hitelesítő adatok alapján."
  remarks: "A metódus ellenőrzi a szakaszában az alkalmazás konfigurációs fájljában tárolt felhasználói hitelesítő adatok. Azt is megteheti, használhatja az ASP.NET tagság tárolják a felhasználói hitelesítő adatok és a hívás a <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>a hitelesítő adatok ellenőrzéséhez.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> További információkért lásd: [felhasználók kezelése használatával tagsága](~/add/includes/ajax-current-ext-md.md).       A nagyobb biztonság érdekében a az alkalmazás a konfigurációs fájlban tárolt jelszavak titkosíthatja a <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>metódus.</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "A felhasználó felhasználóneve."
    - id: password
      type: System.String
      description: "A felhasználó jelszavát."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a felhasználónév és jelszó érvényes; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A tartomány az űrlap-hitelesítési cookie értékének beolvasása."
  remarks: "A CookieDomain tulajdonság értéke a konfigurációs fájlban, az ASP.NET-alkalmazás használatával az `domain` a konfigurációs elem attribútuma. Az CookieDomain tulajdonság határozza meg <xref:System.Web.HttpCookie.Domain%2A>, hogy a cookie-t kell-e a használt tartalmát.</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "A <xref:System.Web.HttpCookie.Domain*>az űrlap-hitelesítési cookie.</xref:System.Web.HttpCookie.Domain*> Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy cookie nélküli űrlapos hitelesítés beállítása az alkalmazáshoz."
  remarks: "A CookieMode tulajdonság értéke tükrözi a `cookieless` a konfigurációs elem attribútuma. A CookieMode tulajdonság határozza meg, hogy a <xref:System.Web.Security.FormsAuthenticationTicket>érték lesz a böngészőben egy munkamenet-cookie-ban tárolt vagy tárolja a <xref:System.Web.HttpRequest.QueryString%2A>tulajdonság.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      > [!NOTE] > Amikor a <xref:System.Web.Security.FormsAuthenticationTicket>értéket tárolja az URI, előfordulhat, hogy a létrehozott URI hossza hosszabb, mint a megengedett maximális hosszúságot.</xref:System.Web.Security.FormsAuthenticationTicket> Ez akkor fordulhat elő, amikor a <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>tulajdonsága az alkalmazás nevét, és az alkalmazás neve nem hosszú (legalább&40; karaktert), amikor a felhasználó nevét, az alkalmazás hosszúak vagy ha hosszú <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>karakterláncok tárolódnak a <xref:System.Web.Security.FormsAuthenticationTicket>érték.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Ha a létrehozott URI túl hosszú, a webkiszolgáló visszatér a `400 - Bad Request` hiba."
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Egy a <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> értékek, amelyek azt jelzi, hogy az alkalmazás cookieless űrlapos hitelesítés van beállítva. Az alapértelmezett érték <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy az alkalmazás cookie nélküli űrlapos hitelesítés támogatására van konfigurálva."
  remarks: "A CookiesSupported tulajdonság alapján értéket ad vissza a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>érték és a böngészője lehetőségeit.</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Ha a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>tulajdonsága <xref:System.Web.HttpCookieMode>, visszatér a CookiesSupported tulajdonság `true`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Ha a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>tulajdonsága <xref:System.Web.HttpCookieMode>, visszatér a CookiesSupported tulajdonság `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      Ha a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>tulajdonsága <xref:System.Web.HttpCookieMode>, a CookiesSupported tulajdonság visszaadható `true` , ha a böngésző támogatja azokat, és engedélyezve vannak a cookie-kat; ellenkező esetben a CookiesSupported tulajdonság visszatér `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      Ha a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>tulajdonsága <xref:System.Web.HttpCookieMode>, a CookiesSupported tulajdonság visszaadható `true` Ha a <xref:System.Web.HttpRequest.Browser%2A>az aktuális <xref:System.Web.HttpContext.Request%2A>támogatja a cookie-k és az átirányítás a cookie-kat; ellenkező esetben a CookiesSupported tulajdonság visszaadható `false`.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Ha az alkalmazás cookie nélküli űrlapos hitelesítés; támogatására van konfigurálva. Ellenkező esetben <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Létrehoz egy <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> objektum a titkosított űrlap-hitelesítési jegy, a metódusnak átadott alapján."
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "A titkosított hitelesítési jegy."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. Ha a <code> encryptedTicket </code> paraméter nem érvényes jegyet, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> adja vissza."
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Az URL-címet, amely lekérdezi a <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> osztály webhelyre fogja átirányítani Önt, ha nincs átirányítási URL-cím van megadva."
  remarks: "A DefaultUrl tulajdonság értéke a konfigurációs fájlban, az ASP.NET-alkalmazás használatával az `defaultUrl` a konfigurációs elem attribútuma. A tulajdonságát használják a <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>módszert, ha nincs visszatérési URL-cím szerepel a kérelemben.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Hasonlóképpen a <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>metódus a DefaultUrl vissza, ha nincs visszatérési URL-cím szerepel a kérelemben.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "Az URL-címet, amely a <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> osztály webhelyre fogja átirányítani Önt, ha nincs átirányítási URL-cím van megadva. Az alapértelmezett érték &quot;default.aspx.&quot;"
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Egy érték, amely jelzi, hogy hitelesített felhasználók átirányíthatók URL-címek más webalkalmazások lekérdezi."
  remarks: "A EnableCrossAppRedirects tulajdonságának értéke használatával a `enableCrossAppRedirects` a konfigurációs elem attribútuma.       A EnableCrossAppRedirects tulajdonság be van jelölve, belül a <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metódusban, amikor az átirányítási URL-cím nem mutat egy oldal, a jelenlegi alkalmazás.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Ha EnableCrossAppRedirects `true`, akkor az átirányítási történik; Ha EnableCrossAppRedirects `false`, a böngésző átirányítja az oldalon meghatározott a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      > [!NOTE] > Lapok átirányítja a különböző alkalmazások, amikor meg kell győződnie arról, hogy a konfigurációs elem az adott attribútumok ismétlődik a hitelesített alkalmazásra. További információt és példa: [űrlapos hitelesítéssel a különböző alkalmazásoknál](~/add/includes/ajax-current-ext-md.md).      > [!IMPORTANT] > Alkalmazások közötti átirányítások engedélyezettek, ha a helykiszolgáló ki téve a rosszindulatú webhelyre irányítja, de a bejelentkezési oldalt használja a hely kihasználása. Győződjön meg arról, hogy az átirányítási URL-cím által visszaadott a <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>metódus egy URL-címet, így biztosíthatja, hogy engedélyezze a csak az engedélyezett webhelyek átirányítások várt.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Ellenőriznie kell, hogy az átirányítási URL-címet használ-e a megfelelő protokollt (HTTP vagy HTTPS). Ezen ellenőrzések elvégzéséhez a visszaküldési esemény kezelő hozzáadhatja a bejelentkezési oldalt, vagy hozzáadhat egy hibakezelőt a <xref:System.Web.UI.WebControls.Login.LoggedIn>az esemény a <xref:System.Web.UI.WebControls.Login>vezérlő.</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hitelesített felhasználók URL-címek átirányíthatók más webalkalmazások; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lehetővé teszi, hogy a az űrlapos hitelesítés."
  remarks: "Ha a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>tulajdonság `null`, hogy az alapértelmezett URL-cím a tulajdonság értéke a `configurationData` paraméter.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Ha a <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>tulajdonság `null`, hogy a bejelentkezési URL-érték a tulajdonság értéke a `configurationData` paraméter.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "A név-értékgyűjtemény, amely &quot;defaultUrl&quot; és/vagy &quot;loginUrl&quot; értéket tartalmaz. A paraméter null értékű, ha az alapértelmezett URL-cím vagy a bejelentkezési URL-cím érték lehet."
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Az alkalmazás nem szerepel az indítás előtti inicializálási fázisában."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Létrehoz egy HTTP cookie-ban használható titkosított űrlap-hitelesítési jegyre tartalmazó karakterláncot."
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> az objektumhoz, amihez létre kívánja hozni a titkosított űrlap-hitelesítési jegy."
    return:
      type: System.String
      description: "Titkosított űrlap-hitelesítési jegyre tartalmazó karakterlánc."
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi az űrlap-hitelesítés jegyének tárolására szolgáló használt cookie nevét."
  remarks: "A FormsCookieName tulajdonság értéke a konfigurációs fájlban, az ASP.NET-alkalmazás használatával az `name` a konfigurációs elem attribútuma. A FormsCookieName a cookie tárolja, hivatkozni a <xref:System.Web.Security.FormsAuthenticationTicket>adatokat.</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "Az űrlap-hitelesítés jegyének tárolására szolgáló használt cookie nevét. Az alapértelmezett érték &quot;. ASPXAUTH&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Az elérési út lekéri az űrlap-hitelesítési cookie-t."
  remarks: "A FormsCookiePath tulajdonság értéke egy ASP.NET alkalmazást, amely a konfigurációs fájlban a `path` a konfigurációs elem attribútuma. A FormsCookiePath határozza meg a <xref:System.Web.HttpCookie.Path%2A>a cookie tárolja a <xref:System.Web.Security.FormsAuthenticationTicket>adatokat.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "A cookie-k az űrlap-hitelesítési jegyet adatokat tároló elérési útját. Az alapértelmezett érték a &quot;/&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Létrehoz egy hitelesítési cookie megadott felhasználónévvel rendelkező. Ez nem állítja be a cookie-k a kimenő válasz részeként, hogy egy alkalmazás rendelkezhet hogyan jelenik meg a cookie-k teljesebb körű vezérlése."
  remarks: "A cookie-k elérési útját határozza meg a <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "A hitelesített felhasználó neve."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>létrehozni egy tartós cookie-t (egy böngésző-munkamenetek között mentett); Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.HttpCookie
      description: "Egy <xref href=&quot;System.Web.HttpCookie&quot;> </xref> titkosított űrlap-hitelesítési jegy adatait tartalmazó. Az alapértelmezett érték a <xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>tulajdonsággal.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Létrehoz egy hitelesítési cookie megadott felhasználónévvel rendelkező. A cookie-k nincs beállítva a kimenő válasz részeként."
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "A hitelesített felhasználó neve."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>létrehozni egy tartós cookie-t (egy böngésző-munkamenetek között mentett); Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "A <xref:System.Web.HttpCookie.Path*>a hitelesítési cookie.</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "Egy <xref href=&quot;System.Web.HttpCookie&quot;> </xref> titkosított űrlap-hitelesítési jegy adatait tartalmazó."
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Az átirányítási az eredeti kérést, ami miatt a bejelentkezési oldalt az átirányítási URL-címet adja vissza."
  remarks: "Ha azt szeretné, az alkalmazás kódjában használata helyett az átirányítási végrehajtásához használhatja ezt a módszert a <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>metódus.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       A GetRedirectUrl metódus visszaadja a lekérdezési karakterlánc használata a megadott URL-címet a `ReturnURL` változó neve. Az URL-címben például `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, a GetRedirectUrl metódus visszaadja a visszatérési URL-cím `caller.aspx`. Ha a `ReturnURL` változó nem létezik, a GetRedirectUrl módszer az URL-címet adja vissza a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       Az ASP.NET automatikusan hozzáadja a visszatérési URL-cím, amikor a rendszer átirányítja a böngészőben a bejelentkezési oldalt.       Alapértelmezés szerint a `ReturnUrl` változó az aktuális alkalmazás lapon kell hivatkoznia. Ha `ReturnUrl` hivatkozik egy lap egy másik alkalmazás vagy a másik kiszolgálót, a GetRedirectUrl módszerek az URL-címet adja vissza a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Ha egy lap az aktuális alkalmazáson kívül tekintse meg a visszatérési URL-címet, meg kell adni a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonságot `true` használatával a `enableCrossAppRedirects` a konfigurációs elem attribútuma.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Beállítás a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonságot `true` engedélyezi az alkalmazások közötti átirányítja a rendszer potenciális biztonsági kockázatot jelentenek.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> További információkért lásd: a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "A hitelesített felhasználó neve."
    - id: createPersistentCookie
      type: System.Boolean
      description: "Ez a paraméter a rendszer figyelmen kívül hagyja."
    return:
      type: System.String
      description: "Az átirányítási URL-címet tartalmazó karakterlánc."
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hozza létre a konfigurációs fájlban megadott jelszóval és kivonatoló algoritmus alapján tárolására alkalmas kivonatoló jelszót."
  remarks: "A HashPasswordForStoringInConfigFile űrlap-hitelesítés hitelesítő adatait a konfigurációs fájlban, az alkalmazás tárolására szolgáló jelszó kivonatolt értéket hoz létre.       Által használt hitelesítő adatok az alkalmazás a konfigurációs fájlban tárolja a <xref:System.Web.Security.FormsAuthentication.Authenticate%2A>metódus ellenőrzése az alkalmazás felhasználó jelszavát.</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> Az ASP.NET tagság segítségével azt is megteheti, felhasználói hitelesítő adatok tárolását. További információkért lásd: [felhasználók kezelése használatával tagsága](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "A jelszó kivonatát."
    - id: passwordFormat
      type: System.String
      description: "A kivonatoló algoritmust. `passwordFormat`van egy <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> , amelyek egyike az <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> számbavételi értékek."
    return:
      type: System.String
      description: "A kivonatolt jelszót."
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>Érvénytelen <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> érték."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializálja a <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> objektum alapján az alkalmazás konfigurációs beállításait."
  remarks: "Az Initialize metódus lesz meghívva <xref:System.Web.Security.FormsAuthenticationModule> <xref:System.Web.Security.FormsAuthentication>osztály</xref:System.Web.Security.FormsAuthentication> példányának létrehozása</xref:System.Web.Security.FormsAuthenticationModule> Ez a módszer nem célja, hogy a felhasználói kódból hívható."
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy engedélyezve van-e az űrlapos hitelesítés."
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve az űrlapos hitelesítés; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi az URL-címet a bejelentkezési lapon, hogy a <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> osztály webhelyre fogja átirányítani Önt."
  remarks: "A LoginUrl tulajdonság értéke a konfigurációs fájlban, az ASP.NET-alkalmazás használatával az `loginUrl` a konfigurációs elem attribútuma. A LoginUrl használják a <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>metódus.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "Az URL-címet a bejelentkezési lapon, hogy a <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> osztály webhelyre fogja átirányítani Önt. Alapértelmezés szerint a login.aspx &quot;.&quot;"
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hitelesített felhasználók átirányítja az eredetileg kért URL-cím vagy az alapértelmezett URL-cím."
  remarks: "A RedirectFromLoginPage metódus átirányítja a lekérdezési karakterlánc használata a megadott URL-cím a `ReturnURL` változó neve. Az URL-címben például `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, a visszatérési URL-cím átirányítja a RedirectFromLoginPage metódus `caller.aspx`. Ha a `ReturnURL` változó nem létezik, a RedirectFromLoginPage módszer az URL-címet átirányítja a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       Az ASP.NET automatikusan hozzáadja a visszatérési URL-cím, amikor a rendszer átirányítja a böngészőben a bejelentkezési oldalt.       Alapértelmezés szerint a `ReturnUrl` változó az aktuális alkalmazás lapon kell hivatkoznia. Ha `ReturnUrl` hivatkozik egy másik alkalmazás vagy egy másik kiszolgálón, a RedirectFromLoginPage módszerek oldal átirányítja az URL-címet a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Ha szeretné engedélyezni az aktuális alkalmazáson kívül oldal átirányítja, meg kell adnia a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonságot `true` használatával a `enableCrossAppRedirects` a konfigurációs elem attribútuma.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Beállítás a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonságot `true` engedélyezi az alkalmazások közötti átirányítja a rendszer potenciális biztonsági kockázatot jelentenek.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> További információkért lásd: a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Ha a <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>tulajdonság `true`, és vagy a `ReturnUrl` változó az aktuális alkalmazásban vagy a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonság `true`, akkor a RedirectFromLoginPage metódus kiad egy hitelesítési jegyet, és elhelyezi az alapértelmezett cookie-k használata a <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>metódus.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Ha <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>van `false` és az átirányítási elérési út az aktuális alkalmazás URL-címre, a jegyet adja ki az átirányítási URL-cím részeként.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Ha <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>van `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>van `true`, és az átirányítási URL-cím nem hivatkozik a jelenlegi alkalmazás lapon, a RedirectFromLoginPage metódus hitelesítési jegyre állít ki, és elhelyezi a a <xref:System.Web.HttpRequest.QueryString%2A>tulajdonság.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "A hitelesített felhasználó felhasználóneve."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>létrehozni egy tartós cookie-t (egy böngésző-munkamenetek között mentett); Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'A lekérdezési karakterláncban megadott visszatérési URL-cím tartalmaz egy protokollt eltérő HTTP: vagy HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hitelesített felhasználók átirányítja az eredetileg kért URL-cím vagy az alapértelmezett URL-cím a megadott cookie-k elérési út használatával az űrlap-hitelesítési cookie-nak."
  remarks: "A lekérdezési karakterlánc használatával megadott visszatérési URL-cím átirányítja a RedirectFromLoginPage metódus a `ReturnURL` változó neve. Az URL-címben például `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, a visszatérési URL-cím átirányítja a RedirectFromLoginPage metódus `caller.aspx`. Ha a `ReturnURL` változó nem létezik, a RedirectFromLoginPage módszer az URL-címet átirányítja a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       Az ASP.NET automatikusan hozzáadja a visszatérési URL-cím, amikor a rendszer átirányítja a böngészőben a bejelentkezési oldalt.       Alapértelmezés szerint a `ReturnUrl` változó az aktuális alkalmazás lapon kell hivatkoznia. Ha `ReturnUrl` egy másik alkalmazás vagy egy másik kiszolgálón, a módszer az URL-címet átirányítja a RedirectFromLoginPage lapra a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Ha szeretné engedélyezni az aktuális alkalmazáson kívül oldal átirányítja, meg kell adnia a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonságot `true` használatával a `enableCrossAppRedirects` a konfigurációs elem attribútuma.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Beállítás a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonságot `true` engedélyezi az alkalmazások közötti átirányítja a rendszer potenciális biztonsági kockázatot jelentenek.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> További információkért lásd: a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonság.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Ha a <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>tulajdonság `true`, és vagy a `ReturnUrl` változó az aktuális alkalmazásban vagy a <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>tulajdonság `true`, akkor a RedirectFromLoginPage metódus kiad egy hitelesítési jegyet, és a cookie-k által megadott rákerül a `strCookiePath` paraméter használatával a <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>metódus.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Ha <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>van `false` és az átirányítási elérési út az aktuális alkalmazás URL-címre, a jegyet adja ki az átirányítási URL-cím részeként.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Ha <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>van `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>van `true`, és az átirányítási URL-cím nem hivatkozik a jelenlegi alkalmazás lapon, a RedirectFromLoginPage metódus hitelesítési jegyre állít ki, és elhelyezi a a <xref:System.Web.HttpRequest.QueryString%2A>tulajdonság.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "A hitelesített felhasználó felhasználóneve."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>létrehozni egy tartós cookie-t (egy böngésző-munkamenetek között mentett); Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Az űrlap-hitelesítési jegyet cookie-k elérési útját."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'A lekérdezési karakterláncban megadott visszatérési URL-cím tartalmaz egy protokollt eltérő HTTP: vagy HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A böngésző átirányítja a bejelentkezési URL-címet."
  remarks: "A RedirectToLoginPage metódus a böngésző átirányítja az <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       A RedirectToLoginPage metódus nem törli az űrlap-hitelesítési cookie-t. A RedirectToLoginPage módszer használható együtt a <xref:System.Web.Security.FormsAuthentication.SignOut%2A>módszert, jelentkezzen ki egy felhasználót, és egy másik felhasználó bejelentkezést.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A böngésző átirányítja a bejelentkezési URL-cím a megadott lekérdezési karakterláncot."
  remarks: "A böngésző átirányítja a felhasználókat a RedirectToLoginPage metódus a <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>, és tartalmazza a `extraQueryString` érték a <xref:System.Management.ManagementQuery.QueryString%2A>az átirányított URL-címhez.</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       A RedirectToLoginPage metódus nem törli az űrlap-hitelesítési cookie-t. A RedirectToLoginPage módszer használható együtt a <xref:System.Web.Security.FormsAuthentication.SignOut%2A>módszert, jelentkezzen ki egy felhasználót, és egy másik felhasználó bejelentkezést.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "A lekérdezési karakterláncot a átirányítási URL-címet tartalmazza."
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A kiadási dátum és és a lejárati dátumát és idejét feltételesen frissíti egy <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  remarks: "A RenewTicketIfOld metódus frissíti a lejárati dátum és idő, a megadott <xref:System.Web.Security.FormsAuthenticationTicket>Ha az aktuális dátum és idő a <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>értéke nagyobb, mint a <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>érték az aktuális dátum és idő csökkentve.</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       A jegy frissült a <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>tulajdonságának beállítása a jelenlegi dátum és idő és a <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>tulajdonsága az aktuális dátum és idő hozzáadva az eredeti <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>érték csökkentve az eredeti <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>érték.</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Az űrlap-hitelesítési jegy frissítéséhez."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A frissített <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi egy érték, amely jelzi, hogy az űrlap-hitelesítési cookie-k ahhoz, hogy a kiszolgáló vissza SSL megkövetelése."
  remarks: "A RequireSSL tulajdonság értéke a konfigurációs fájlban, az ASP.NET-alkalmazás használatával az `requireSSL` a konfigurációs elem attribútuma. Megadhatja a Web.config fájlban az ASP.NET alkalmazás hogy SSL (Secure Sockets Layer) szükséges a kiszolgáló úgy, hogy az űrlap-hitelesítési cookie-k visszatérhet a `requireSSL` attribútum. További információkért lásd: <xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>       Ajánlott, ha konfigurál `requireSSL` , `false`, konfigurálnia `slidingExpiration` , `false`, amelynek a jegy érvénytelen idő csökkentése érdekében."
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha SSL szükség az űrlap-hitelesítési cookie-k visszatérhet a kiszolgáló; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Hoz létre a megadott felhasználónévhez tartozó hitelesítési jegyre, és hozzáadja azt a cookie-kat a válasz, vagy az URL-cím cookieless hitelesítés használata."
  remarks: "A SetAuthCookie metódus, ad egy űrlap-hitelesítési jegyet cookie-kat a gyűjteménybe, vagy az URL-címhez Ha <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>van `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Az űrlap-hitelesítési jegyet megadja az űrlap-hitelesítési információk a következő kérelmet a böngésző. Az űrlapos hitelesítéshez Ha meg szeretné hitelesíteni a felhasználót, de továbbra is kezében marad, a navigációs átirányítással használhatja SetAuthCookie metódus."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Egy hitelesített felhasználó nevét. Ez nem rendelkezik egy Windows-fiókhoz."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>(egy böngésző-munkamenetek között mentett); állandó cookie-k létrehozása Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "A megadott felhasználónév hitelesítési jegyre hoz létre, és hozzáadja azt a választ, a cookie-k a megadott elérési út használatával, vagy az URL-cím használatával, ha a cookie nélküli hitelesítést használ cookie-k gyűjteménye."
  remarks: "A SetAuthCookie metódus a cookie-k gyűjtemény vagy az URL-címet ad egy űrlap-hitelesítési jegyet, ha <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>van `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Az űrlap-hitelesítési jegyet megadja az űrlap-hitelesítési információk a következő kérelmet a böngésző. Az űrlapos hitelesítéshez Ha meg szeretné hitelesíteni a felhasználót, de továbbra is kezében marad, a navigációs átirányítással használhatja SetAuthCookie metódus."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Egy hitelesített felhasználó nevét."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>létrehozni egy tartós cookie-t (egy böngésző-munkamenetek között mentett); Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Az űrlap-hitelesítési jegyet cookie-k elérési útját."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Az űrlap-hitelesítési jegyet eltávolítja a böngészőben."
  remarks: "A SignOut metódus eltávolítja az űrlap-hitelesítési jegyet információkat a cookie-k vagy az URL-cím Ha <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>van `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> A SignOut módszer használható együtt a <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>módszert, jelentkezzen ki egy felhasználót, és egy másik felhasználó bejelentkezést.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       Ha kizárólag cookie nélküli módban, vagy ha támogatja a hitelesített, és a névtelen felhasználók számára, hogy explicit módon kell ellenőrzéséhez az átirányítás, a bejelentkezési oldalt, ha a Speciális üzleti logika miatt eltávolítását névtelen azonosító végrehajtásához szükséges.       SignOut metódus hívásakor a meghívásával történik az alkalmazás bejelentkezési oldalára irányítja át a felhasználókat a <xref:System.Web.HttpResponse.Redirect%2A>metódust a `endResponse` paraméter `false`.</xref:System.Web.HttpResponse.Redirect%2A> Az átirányítási nem kerül sor, amíg a jelenlegi lap végrehajtása, befejeződött, további kódot is futtatható. A kód nem tartalmaz egy explicit átirányítási egy másik lapra, ha a felhasználót a rendszer átirányítja a bejelentkezési oldalt, az alkalmazás konfigurációs fájljában konfigurált.       A SignOut metódus hívása csak a az űrlapos hitelesítési cookie távolítja el. A webkiszolgáló nem tárol érvényes és lejárt hitelesítési jegyek a későbbi összehasonlítás céljából. Ez teszi ki a webhely ismétlési szemben ha egy rosszindulatú felhasználó jut hozzá a egy érvényes űrlapos hitelesítési cookie. Űrlapos hitelesítési cookie használata esetén a biztonság növelése érdekében a következőket kell tennie:-abszolút lejárati használja az űrlapos hitelesítési cookie-kat úgy, hogy a <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>tulajdonságot `false`.</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Ez korlátozza az időszak, amelyben a megtámadott cookie-t is bejegyzéseit meg kell ismételni.      -Csak ki és el kell fogadnia a hitelesítési cookie-k keresztül Secure Sockets Layer (SSL), úgy, hogy a <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>tulajdonságot `true` és a teljes webhelyet SSL alatt futó.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Beállítás a <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>tulajdonságot `true` biztosítja, hogy az ASP.NET sosem küld egy hitelesítési cookie-t a böngészőnek-SSL kapcsolaton keresztül; azonban az ügyfél esetleg nem fogadják el a cookie-k a biztonságos beállítás.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Ez azt jelenti, hogy az ügyfél el tudja küldeni az űrlapos hitelesítési cookie egy-SSL kapcsolaton keresztül, így hagyja ki van téve a eltérítheti. Megakadályozhatja, hogy a ügyfél küld a az űrlapos hitelesítési cookie szövegként a teljes webhely SSL futtatásával.      -Segítségével állandó tároló a kiszolgálón rögzíti, amikor a felhasználók bejelentkeznek a webhely kívül, és majd használjon például egy esemény <xref:System.Web.HttpApplication.PostAuthenticateRequest>eseményt annak meghatározásához, hogy az aktuális felhasználó hitelesítésének megtörténtét az űrlapos hitelesítés.</xref:System.Web.HttpApplication.PostAuthenticateRequest> Ha a felhasználó hitelesítési az űrlapos hitelesítés, és állandó tároló található információk azt jelzi, ha a felhasználó kijelentkezése, azonnal a hitelesítési cookie törölje, és visszairányítja a böngészőben a bejelentkezési oldalt. Egy sikeres bejelentkezés után frissítse a tárolási megfelelően, hogy a felhasználó be van-e bejelentkezve. Ha ezt a módszert használja, az alkalmazás a felhasználó bejelentkezett állapotát kell nyomon és a tétlen felhasználók jelentkezzen ki kell kényszerítenie."
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Egy érték, amely jelzi, hogy engedélyezve van-e a késleltetett lejárat lekérdezi."
  remarks: "A SlidingExpiration tulajdonságának értéke használatával a `slidingExpiration` a konfigurációs elem attribútuma.       Egy érvényes hitelesítési cookie lejárati idejének késleltetett lejárat állítja vissza, ha a kérelem és több mint fele az időkorlát letelt. Ha a cookie lejár, a felhasználónak újra hitelesítenie kell magát. A SlidingExpiration tulajdonság `false` is biztonságosabbá teheti az alkalmazások, ha korlátozza az az időpont, amelynek egy hitelesítési cookie érvényes, a konfigurált alapján `timeout` érték.       Javasoljuk, hogy ha konfigurálja `requireSSL` , `false`, konfigurálnia `slidingExpiration` , `false`, amelynek a jegy érvénytelen idő csökkentése érdekében."
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a késleltetett lejárat engedélyezve van; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy az egyezményes világidő (UTC) vagy a helyi idő használata a jegy lejárati dátuma."
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "Egy érték, amely azt jelzi, hogy az egyezményes világidő (UTC) vagy a helyi idő használata a jegy lejárati dátuma."
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Lekérdezi a időn hitelesítési jegyre lejárta előtt."
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "Lejárati idő előtt hitelesítési jegyre."
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
