### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.AlternationConverter
  id: AlternationConverter
  children:
  - System.Windows.Controls.AlternationConverter.#ctor
  - System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.AlternationConverter.Values
  langs:
  - csharp
  name: AlternationConverter
  nameWithType: AlternationConverter
  fullName: System.Windows.Controls.AlternationConverter
  type: Class
  summary: "Konvertálása egész objektum index alkalmazásával az egész objektumok listája."
  remarks: "A AlternationConverter segítségével egy tulajdonság kötése váltakozó értékeket. Például, ha a kívánt elemek egy <xref:System.Windows.Controls.ListBox>ahhoz, hogy a kék és könnyű kék hátterek váltakozó, tegye a következőket: - hozzon létre egy AlternationConverter, és adja hozzá a kék <xref:System.Windows.Media.SolidColorBrush>és könnyű kék <xref:System.Windows.Media.SolidColorBrush>számára a <xref:System.Windows.Controls.AlternationConverter.Values%2A>tulajdonság.</xref:System.Windows.Controls.AlternationConverter.Values%2A> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Controls.ListBox>      -A egy <xref:System.Windows.Style>a <xref:System.Windows.Controls.ListBoxItem>, kötni a <xref:System.Windows.Controls.Control.Background%2A>tulajdonságot <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>, és rendelje hozzá a létrehozott konverter a <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName>tulajdonság.</xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName> </xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> </xref:System.Windows.Controls.Control.Background%2A> </xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Style>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.ListBox> and uses two AlternationConverter objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \n  \n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Values")]

      public class AlternationConverter : System.Windows.Data.IValueConverter
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: AlternationConverter()
  nameWithType: AlternationConverter.AlternationConverter()
  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;> </xref> osztály."
  syntax:
    content: public AlternationConverter ();
    parameters: []
  overload: System.Windows.Controls.AlternationConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Egy egész számot konvertálja az objektumok a <xref:System.Windows.Controls.AlternationConverter.Values*>lista.</xref:System.Windows.Controls.AlternationConverter.Values*>"
  syntax:
    content: public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: o
      type: System.Object
      description: "Egész szám, amely az objektumok kereséséhez a <xref:System.Windows.Controls.AlternationConverter.Values*>tulajdonság.</xref:System.Windows.Controls.AlternationConverter.Values*>"
    - id: targetType
      type: System.Type
      description: "A kötés target tulajdonság típusával."
    - id: parameter
      type: System.Object
      description: "A használni kívánt konverter paramétert."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A konverter használandó kulturális környezetet."
    return:
      type: System.Object
      description: "Az objektum, amely a helyen az <code> o </code> moduló a <xref:System.Windows.Controls.AlternationConverter.Values*>.</xref:System.Windows.Controls.AlternationConverter.Values*> elemek száma."
  overload: System.Windows.Controls.AlternationConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Az objektumok alakítja át a <xref:System.Windows.Controls.AlternationConverter.Values*>egész listát.</xref:System.Windows.Controls.AlternationConverter.Values*>"
  syntax:
    content: public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: o
      type: System.Object
      description: "Az objektum található a <xref:System.Windows.Controls.AlternationConverter.Values*>tulajdonság.</xref:System.Windows.Controls.AlternationConverter.Values*>"
    - id: targetType
      type: System.Type
      description: "A kötés target tulajdonság típusával."
    - id: parameter
      type: System.Object
      description: "A használni kívánt konverter paramétert."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A konverter használandó kulturális környezetet."
    return:
      type: System.Object
      description: "Az index <code> o </code> amennyiben az <> </> *>, vagy ha o nem létezik a –&1; <> </> *>."
  overload: System.Windows.Controls.AlternationConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.Values
  id: Values
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: Values
  nameWithType: AlternationConverter.Values
  fullName: System.Windows.Controls.AlternationConverter.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Objektumok listájának lekérése a <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;> </xref> adja vissza, ha egy egész számot számára a <xref:System.Windows.Controls.AlternationConverter.Convert*>metódus.</xref:System.Windows.Controls.AlternationConverter.Convert*>"
  remarks: "Ha a <xref:System.Windows.Controls.AlternationConverter>tulajdonság kötése váltakozó értékek, a Values tulajdonság a tulajdonsághoz rendelt objektumokat tartalmaz.</xref:System.Windows.Controls.AlternationConverter>  Például, ha a kívánt elemek egy <xref:System.Windows.Controls.ListBox>rendelkezik a kék és könnyű kék hátterek váltakozó, vegye fel a kék <xref:System.Windows.Media.SolidColorBrush>és könnyű kék <xref:System.Windows.Media.SolidColorBrush>értékekre.</xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Media.SolidColorBrush> </xref:System.Windows.Controls.ListBox>"
  example:
  - "The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \n  \n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]"
  syntax:
    content: public System.Collections.IList Values { get; }
    return:
      type: System.Collections.IList
      description: "Listájának objektumokat, amelyek a <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;> </xref> adja vissza, ha egy egész számot számára a <xref:System.Windows.Controls.AlternationConverter.Convert*>metódus.</xref:System.Windows.Controls.AlternationConverter.Convert*>"
  overload: System.Windows.Controls.AlternationConverter.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.AlternationConverter.#ctor
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: AlternationConverter()
  nameWithType: AlternationConverter.AlternationConverter()
  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()
- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
- uid: System.Windows.Controls.AlternationConverter.Values
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Values
  nameWithType: AlternationConverter.Values
  fullName: System.Windows.Controls.AlternationConverter.Values
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Controls.AlternationConverter.#ctor*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: AlternationConverter
  nameWithType: AlternationConverter.AlternationConverter
- uid: System.Windows.Controls.AlternationConverter.Convert*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Convert
  nameWithType: AlternationConverter.Convert
- uid: System.Windows.Controls.AlternationConverter.ConvertBack*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: ConvertBack
  nameWithType: AlternationConverter.ConvertBack
- uid: System.Windows.Controls.AlternationConverter.Values*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Values
  nameWithType: AlternationConverter.Values
