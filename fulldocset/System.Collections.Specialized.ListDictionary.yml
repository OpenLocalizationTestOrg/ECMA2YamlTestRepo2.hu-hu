### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.ListDictionary
  id: ListDictionary
  children:
  - System.Collections.Specialized.ListDictionary.#ctor
  - System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)
  - System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)
  - System.Collections.Specialized.ListDictionary.Clear
  - System.Collections.Specialized.ListDictionary.Contains(System.Object)
  - System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.ListDictionary.Count
  - System.Collections.Specialized.ListDictionary.GetEnumerator
  - System.Collections.Specialized.ListDictionary.IsFixedSize
  - System.Collections.Specialized.ListDictionary.IsReadOnly
  - System.Collections.Specialized.ListDictionary.IsSynchronized
  - System.Collections.Specialized.ListDictionary.Item(System.Object)
  - System.Collections.Specialized.ListDictionary.Keys
  - System.Collections.Specialized.ListDictionary.Remove(System.Object)
  - System.Collections.Specialized.ListDictionary.SyncRoot
  - System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.ListDictionary.Values
  langs:
  - csharp
  name: ListDictionary
  nameWithType: ListDictionary
  fullName: System.Collections.Specialized.ListDictionary
  type: Class
  summary: "Megvalósítja <xref uid=&quot;langword_csharp_IDictionary&quot; name=&quot;IDictionary&quot; href=&quot;&quot;> </xref> önállóan csatolt lista használatával. Ajánlott a gyűjteményeket, amelyek általában a kevesebb mint 10 elemet tartalmaznak."
  remarks: "Ez az egyszerű végrehajtásának <xref:System.Collections.IDictionary>önállóan csatolt lista használatával.</xref:System.Collections.IDictionary> Kisebb és gyorsabb, mint egy <xref:System.Collections.Hashtable>Ha elemeinek száma 10 vagy kevesebb.</xref:System.Collections.Hashtable> Ez kell nem használható, ha a teljesítmény fontos a nagy számú elemet.       Egy ListDictionary elemeinek sorrendje nem minden garantált; kód nem függ az aktuális rendeléséhez tartozik. A ListDictionary valósul meg a gyors kulccsal beolvasásához; a tényleges belső elemek sorrendjének megvalósítási-függő, és későbbi termékverziók lehetett módosítani.       Tagok, például a <xref:System.Collections.Specialized.ListDictionary.Item%2A>, <xref:System.Collections.Specialized.ListDictionary.Add%2A>, <xref:System.Collections.Specialized.ListDictionary.Remove%2A>, és <xref:System.Collections.Specialized.ListDictionary.Contains%2A>O vannak (`n`) operations, ahol `n` <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</xref:System.Collections.Specialized.ListDictionary.Count%2A> </xref:System.Collections.Specialized.ListDictionary.Contains%2A> </xref:System.Collections.Specialized.ListDictionary.Remove%2A> </xref:System.Collections.Specialized.ListDictionary.Add%2A> </xref:System.Collections.Specialized.ListDictionary.Item%2A>       A kulcs nem lehet `null`, de értéket is.       A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) a gyűjtemény elemeinek típusú objektum beolvasása. A ListDictionary minden eleme egy kulcs/érték pár, mert az elem típusa nincs a kulcs vagy érték típusú. Ehelyett a elemtípusa <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry> Például: [!code-cs [System.Collections.Specialized.ListDictionary2#3](~/add/codesnippet/csharp/t-system.collections.spe_9_1.cs)][!code-cpp[System.Collections.Specialized.ListDictionary2#3](~/add/codesnippet/cpp/t-system.collections.spe_9_1.cpp)][!code-vb[System.Collections.Specialized.ListDictionary2#3](~/add/codesnippet/visualbasic/t-system.collections.spe_9_1.vb) ] a `foreach` a számbavevő, olvasása, nem írása, a gyűjtemény csak így csomagolásának utasítás.    "
  example:
  - "The following code example demonstrates several of the properties and methods of ListDictionary.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary2#1](~/add/codesnippet/cpp/t-system.collections.spe_9_2.cpp)]\n [!code-cs[System.Collections.Specialized.ListDictionary2#1](~/add/codesnippet/csharp/t-system.collections.spe_9_2.cs)]\n [!code-vb[System.Collections.Specialized.ListDictionary2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_9_2.vb)]"
  syntax:
    content: 'public class ListDictionary : System.Collections.IDictionary'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: ListDictionary()
  nameWithType: ListDictionary.ListDictionary()
  fullName: System.Collections.Specialized.ListDictionary.ListDictionary()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Létrehoz egy üres <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> az alapértelmezett összehasonlítót használja."
  remarks: "A összehasonlító meghatározza, hogy két kulccsal egyenlő. Minden kulcs egy <xref:System.Collections.Specialized.ListDictionary>egyedinek kell lennie.</xref:System.Collections.Specialized.ListDictionary> Az alapértelmezett összehasonlítót a kulcs végrehajtásának <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Ez a konstruktor O(1) során."
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary2#1](~/add/codesnippet/cpp/m-system.collections.spe_8_1.cpp)]\n [!code-cs[System.Collections.Specialized.ListDictionary2#1](~/add/codesnippet/csharp/m-system.collections.spe_8_1.cs)]\n [!code-vb[System.Collections.Specialized.ListDictionary2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_8_1.vb)]"
  syntax:
    content: public ListDictionary ();
    parameters: []
  overload: System.Collections.Specialized.ListDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)
  id: '#ctor(System.Collections.IComparer)'
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: ListDictionary(IComparer)
  nameWithType: ListDictionary.ListDictionary(IComparer)
  fullName: System.Collections.Specialized.ListDictionary.ListDictionary(IComparer)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Létrehoz egy üres <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> a megadott összehasonlító használatával."
  remarks: "A összehasonlító meghatározza, hogy két kulccsal egyenlő. Minden kulcs egy <xref:System.Collections.Specialized.ListDictionary>egyedinek kell lennie.</xref:System.Collections.Specialized.ListDictionary> Az alapértelmezett összehasonlítót a kulcs végrehajtásának <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Az egyéni összehasonlító lehetővé teszi, hogy az ilyen célú végzett keresések nem betűérzékeny karakterláncok történt.       Ez a konstruktor O(1) során."
  syntax:
    content: public ListDictionary (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "A <xref:System.Collections.IComparer>segítségével állapítsa meg, hogy két kulccsal mint.</xref:System.Collections.IComparer>       – vagy – <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> használhatja az alapértelmezett összehasonlítót, hogy ez az egyes kulcsok végrehajtásának &lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;."
  overload: System.Collections.Specialized.ListDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: ListDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.ListDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "A megadott kulcs és az érték bejegyzést ad a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
  remarks: "Olyan objektum, amely nincs összefüggésben állapotát és a kivonatot kód között általában nem használandó az kulcsként. Például karakterlánc objektum jobb, mint a StringBuilder objektum számára adható meg kulcsként.       Használhatja a <xref:System.Collections.Specialized.ListDictionary.Item%2A>tulajdonság új elemek hozzáadásához úgy, hogy a kulcs értékét, amely nem szerepel a <xref:System.Collections.Specialized.ListDictionary>, például `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Specialized.ListDictionary.Item%2A> Azonban ha a megadott kulcs már létezik a <xref:System.Collections.Specialized.ListDictionary>beállításánál a <xref:System.Collections.Specialized.ListDictionary.Item%2A>tulajdonság felülírja a régi értéket.</xref:System.Collections.Specialized.ListDictionary.Item%2A> </xref:System.Collections.Specialized.ListDictionary> Az Add metódus ellentétben nem módosítja a meglévő elemeket.       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</xref:System.Collections.Specialized.ListDictionary.Count%2A>"
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_26_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_26_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_26_1.cs)]"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "A hozzáadandó bejegyzés kulcsa."
    - id: value
      type: System.Object
      description: "A bejegyzés hozzáadása értékét. Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.ListDictionary.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Már létezik azonos kulcsú bejegyzés a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.Clear
  id: Clear
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: ListDictionary.Clear()
  fullName: System.Collections.Specialized.ListDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Eltávolítja az összes bejegyzés a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.ListDictionary.Count%2A>van nullára van állítva, és a gyűjtemény elemeinek más objektumokra mutató hivatkozásokat is kiadásakor.</xref:System.Collections.Specialized.ListDictionary.Count%2A>       Ez a módszer O(1) során."
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_43_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_43_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_43_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.ListDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ListDictionary.Contains(Object)
  fullName: System.Collections.Specialized.ListDictionary.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Meghatározza, hogy a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> egy adott kulcs tartalmazza."
  remarks: "Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</xref:System.Collections.Specialized.ListDictionary.Count%2A>       A .NET-keretrendszer 2.0-s verziótól kezdődően ez a módszer a gyűjtemény-objektumokat használ <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>metódusai `key` meghatározásához e `item` létezik.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> A .NET-keretrendszer korábbi verzióiban ez a döntés használatával történt a <xref:System.Object.Equals%2A>és <xref:System.IComparable.CompareTo%2A>módszerek a `item` paraméter a gyűjtemény objektumokon.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches for an element in a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_22_1.cpp)]\n [!code-cs[System.Collections.Specialized.ListDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_22_1.cs)]\n [!code-vb[System.Collections.Specialized.ListDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_22_1.vb)]"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "A kulcsot, keresse meg a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> tartalmaz a megadott kulcs; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.ListDictionary.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ListDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.ListDictionary.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Másolja a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> egy egydimenziós bejegyzések <xref:System.Array>példány a megadott indexpozíciónál.</xref:System.Array>"
  remarks: "Az elemek másolja az <xref:System.Array>ugyanabban a sorrendben, amelyben a számbavevő a <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> telepítéseket</xref:System.Array>       Csak a kulcsok másolása a <xref:System.Collections.Specialized.ListDictionary>, használjon `ListDictionary.Keys.CopyTo`.</xref:System.Collections.Specialized.ListDictionary>       A csak azok az értékek másolásához a <xref:System.Collections.Specialized.ListDictionary>, használjon `ListDictionary.Values.CopyTo`.</xref:System.Collections.Specialized.ListDictionary>       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</xref:System.Collections.Specialized.ListDictionary.Count%2A>"
  example:
  - "The following code example copies the elements of a <xref:System.Collections.Specialized.ListDictionary> to an array.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_CopyTo#1](~/add/codesnippet/cpp/9aabfe2b-669c-468b-9ada-_1.cpp)]\n [!code-cs[System.Collections.Specialized.ListDictionary_CopyTo#1](~/add/codesnippet/csharp/9aabfe2b-669c-468b-9ada-_1.cs)]\n [!code-vb[System.Collections.Specialized.ListDictionary_CopyTo#1](~/add/codesnippet/visualbasic/9aabfe2b-669c-468b-9ada-_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Az egydimenziós <xref:System.Array>célját, amely a <xref:System.Collections.DictionaryEntry>átmásolva objektumok <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>.</xref:System.Collections.DictionaryEntry> </xref:System.Array> A <xref:System.Array>kell rendelkeznie a nulla alapú indexelést.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét `array` mely másolása megkezdődik."
  overload: System.Collections.Specialized.ListDictionary.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>többdimenziós.       – vagy – a forrás elemeinek száma <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> nagyobb, mint a rendelkezésre álló terület <code>index</code> a cél végére <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A forrás típusa <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> nem konvertálható automatikusan a cél típusa <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.Count
  id: Count
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: Count
  nameWithType: ListDictionary.Count
  fullName: System.Collections.Specialized.ListDictionary.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "A tárolt kulcs/érték párok száma lekérdezi a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
  remarks: "Ez a tulajdonság értékének beolvasása során O(1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_2_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_2_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_2_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "A tárolt kulcs/érték párok száma a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
  overload: System.Collections.Specialized.ListDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ListDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.ListDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Értéket ad vissza egy <xref:System.Collections.IDictionaryEnumerator>keresztül, amely megismétli a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége.  Ezért használatával `foreach` ajánlott, az adatbázis közvetlen módosítása az enumerátor helyett.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.IEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.IEnumerator.Reset%2A>  Ennél a pozíciónál <xref:System.Collections.IEnumerator.Current%2A>nincs definiálva.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.IEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.IEnumerator.Current%2A>átállítása.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Ha <xref:System.Collections.IEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.IEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.IEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.IEnumerator.MoveNext%2A>visszaadott `false`, <xref:System.Collections.IEnumerator.Current%2A>nincs definiálva.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> követ</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenített és annak viselkedését nincs definiálva.       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem szálbiztos eljárást.  Szál biztonsági felsorolásakor biztosításához zárolhatja a teljes számbavételi művelet során a gyűjteményben.  A gyűjteményt, amelyben több szál olvasására vagy írására érhető el, hogy meg kell valósítani a saját szinkronizálási.       Ez a módszer O(1) során."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/cpp/m-system.collections.spe_6_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/visualbasic/m-system.collections.spe_6_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/csharp/m-system.collections.spe_6_1.cs)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for the <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Specialized.ListDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ListDictionary.IsFixedSize
  fullName: System.Collections.Specialized.ListDictionary.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> rögzített méretű rendelkezik."
  remarks: "<xref:System.Collections.Specialized.ListDictionary>megvalósítja a IsFixedSize tulajdonság, mert miatt szükséges a <xref:System.Collections.IDictionary?displayProperty=fullName>felületet.</xref:System.Collections.IDictionary?displayProperty=fullName></xref:System.Collections.Specialized.ListDictionary>       Rögzített méretű gyűjtemény nem teszi lehetővé hozzáadását és eltávolítását, az elem után a gyűjtemény létrejött, de lehetővé teszi a meglévő elemeket módosítása.       A gyűjtemény rögzített méretű egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a hozzáadása és eltávolítása elemek; Ezért ha módosítás történik az alapul szolgáló gyűjtemény, hozzáadását és eltávolítását, az elem, beleértve a rögzített méretű gyűjtemény tükrözi ezeket a módosításokat.       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.ListDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ListDictionary.IsReadOnly
  fullName: System.Collections.Specialized.ListDictionary.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> csak olvasható."
  remarks: "<xref:System.Collections.Specialized.ListDictionary>a típus IsReadOnly tulajdonságának valósítja meg, mert a által a <xref:System.Collections.IDictionary?displayProperty=fullName>felületet.</xref:System.Collections.IDictionary?displayProperty=fullName></xref:System.Collections.Specialized.ListDictionary>       A csak olvasható gyűjtemény nem teszi lehetővé a hozzáadása, eltávolítása vagy módosítása az elem a gyűjtemény létrehozása után.       A gyűjtemény csak olvasható egyszerűen egy gyűjteménybe, és egy burkoló, amely megakadályozza a módosítását a gyűjtemény; Ezért ha az alapul szolgáló gyűjtemény módosításai, a csak olvasható gyűjtemény tükrözi ezeket a módosításokat.       Ez a tulajdonság értékének beolvasása során O(1)."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.ListDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ListDictionary.IsSynchronized
  fullName: System.Collections.Specialized.ListDictionary.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> van (a többszálú futtatásra) szinkronizálva."
  remarks: "<xref:System.Collections.Specialized.ListDictionary>megvalósítja a IsSynchronized tulajdonság, mert miatt szükséges a <xref:System.Collections.ICollection?displayProperty=fullName>felületet.</xref:System.Collections.ICollection?displayProperty=fullName></xref:System.Collections.Specialized.ListDictionary>       Származtatott osztályok is adja meg a szinkronizált verzióját a <xref:System.Collections.Specialized.ListDictionary>használatával a <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A>tulajdonság.</xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> </xref:System.Collections.Specialized.ListDictionary>       Egy gyűjtemény számbavétele alapvetően nem szálbiztos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> during the entire enumeration.  \n  \n [!code-cs[System.Collections.Specialized.ListDictionary2#2](~/add/codesnippet/csharp/p-system.collections.spe_6_1.cs)]\n [!code-cpp[System.Collections.Specialized.ListDictionary2#2](~/add/codesnippet/cpp/p-system.collections.spe_6_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_6_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.ListDictionary.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: ListDictionary.Item(Object)
  fullName: System.Collections.Specialized.ListDictionary.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi vagy beállítja az adott kulcshoz hozzárendelt értéket."
  remarks: "Ez a tulajdonság lehetővé teszi a hozzáférést egy adott elem a gyűjteményben a következő szintaxissal: `myCollection[key]`.       Az elemtulajdonság is használhatja új elemek hozzáadásához állítsa az értéket, amely nem létezik a kulcs a <xref:System.Collections.Specialized.ListDictionary>, például `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Specialized.ListDictionary> Azonban ha a megadott kulcs már létezik a <xref:System.Collections.Specialized.ListDictionary>, a cikk tulajdonság beállítása felülírja a régi értéket.</xref:System.Collections.Specialized.ListDictionary> Ezzel szemben a <xref:System.Collections.Specialized.ListDictionary.Add%2A>metódus nem módosítja a meglévő elemeket.</xref:System.Collections.Specialized.ListDictionary.Add%2A>       A kulcs nem lehet `null`, de értéket is. Megkülönböztetésére `null` , amely ad vissza, mert a megadott kulcs nem található és `null` , amely ad vissza, mert a megadott kulcs értéke `null`, használja a <xref:System.Collections.Specialized.ListDictionary.Contains%2A>módszer annak meghatározásához, hogy a kulcs létezik-e a listában.</xref:System.Collections.Specialized.ListDictionary.Contains%2A>       A C# nyelv használ a kulcsszó helyett az Item tulajdonság végrehajtási indexelők meghatározására. Visual Basic elem megvalósítja az alapértelmezett tulajdonság, amely indexelési ugyanezt a funkcionalitást biztosítja.       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</xref:System.Collections.Specialized.ListDictionary.Count%2A>"
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_11_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_11_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_11_1.cs)]"
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "A kulcs értéke beolvasni vagy megadni."
    return:
      type: System.Object
      description: "A megadott kulcshoz hozzárendelt értéket. Ha a megadott kulcs nem található, próbál szerezni az értéket ad vissza <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, és állítsa be úgy próbál hoz létre egy új bejegyzést a megadott kulcs használatával."
  overload: System.Collections.Specialized.ListDictionary.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.Keys
  id: Keys
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: ListDictionary.Keys
  fullName: System.Collections.Specialized.ListDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi egy <xref:System.Collections.ICollection>tartalmazó a kulcsokat a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Az értékek sorrendjét a <xref:System.Collections.ICollection>nincs megadva, de ugyanabban a sorrendben, mint a hozzájuk társított értékeket a <xref:System.Collections.ICollection>által visszaadott a <xref:System.Collections.Specialized.ListDictionary.Values%2A>metódus.</xref:System.Collections.Specialized.ListDictionary.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       A visszaadott <xref:System.Collections.ICollection>Nincs statikus másolatát; ehelyett a <xref:System.Collections.ICollection>hivatkozik vissza az eredeti <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> kulcsok</xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Ezért megváltozik a <xref:System.Collections.Specialized.ListDictionary>továbbra is megjelennek a <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Specialized.ListDictionary>       Ez a tulajdonság értékének beolvasása során O(1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_28_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_28_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_28_1.cs)]"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "Egy <xref:System.Collections.ICollection>tartalmazó a kulcsokat a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.ListDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ListDictionary.Remove(Object)
  fullName: System.Collections.Specialized.ListDictionary.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "A megadott kulccsal történő eltávolítja a bejegyzést a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
  remarks: "Ha a <xref:System.Collections.Specialized.ListDictionary>nem tartalmaz egy elemet a megadott kulccsal, a <xref:System.Collections.Specialized.ListDictionary>változatlan marad.</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Specialized.ListDictionary> Nincs kivétel történt.       Ez a módszer egy O (`n`) műveletet, ahol `n` <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</xref:System.Collections.Specialized.ListDictionary.Count%2A>"
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_21_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_21_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_21_1.cs)]"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "A kulcs a bejegyzés eltávolításához."
  overload: System.Collections.Specialized.ListDictionary.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ListDictionary.SyncRoot
  fullName: System.Collections.Specialized.ListDictionary.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása lekérdezi a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
  remarks: "Származtatott osztályok is adja meg a saját szinkronizált verzióját a <xref:System.Collections.Specialized.ListDictionary>a SyncRoot tulajdonság használatával.</xref:System.Collections.Specialized.ListDictionary> A szinkronizálási kódot kell műveleteket a SyncRoot a <xref:System.Collections.Specialized.ListDictionary>, nem közvetlenül a <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> a</xref:System.Collections.Specialized.ListDictionary> Ez biztosítja, hogy a gyűjtemények más objektumok származó megfelelő működését. Pontosabban, tart fenn a megfelelő szinkronizálási más szállal, amely előfordulhat, hogy egyidejűleg módosítása a <xref:System.Collections.Specialized.ListDictionary>objektum.</xref:System.Collections.Specialized.ListDictionary>       Egy gyűjtemény számbavétele alapvetően nem szálbiztos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket."
  example:
  - "The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.  \n  \n [!code-cs[System.Collections.Specialized.ListDictionary2#2](~/add/codesnippet/csharp/p-system.collections.spe_1_1.cs)]\n [!code-cpp[System.Collections.Specialized.ListDictionary2#2](~/add/codesnippet/cpp/p-system.collections.spe_1_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_1_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>."
  overload: System.Collections.Specialized.ListDictionary.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ListDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.ListDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Értéket ad vissza egy <xref:System.Collections.IEnumerator>keresztül, amely megismétli a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége.  Ezért használatával `foreach` ajánlott, az adatbázis közvetlen módosítása az enumerátor helyett.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.IEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.IEnumerator.Reset%2A> At ez elhelyezése, hívja <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.IEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.IEnumerator.Current%2A>átállítása.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Ha <xref:System.Collections.IEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.IEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.IEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.IEnumerator.MoveNext%2A>visszaadott `false`, hívó <xref:System.Collections.IEnumerator.Current%2A>kivételt jelez.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> követ</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenné válik, és <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>egy <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> jelez</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> , vagy hívja a következő Ha a gyűjtemény módosítás közötti <xref:System.Collections.IEnumerator.MoveNext%2A>és <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>adja vissza az elem, értékűre van állítva, akkor is, ha a számláló már érvénytelenné válik.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem szálbiztos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások eredő kivételeket.       Ez a módszer O(1) során."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/cpp/98b866c7-b98f-4af5-b9e4-_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/visualbasic/98b866c7-b98f-4af5-b9e4-_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/csharp/98b866c7-b98f-4af5-b9e4-_1.cs)]"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.ListDictionary.Values
  id: Values
  parent: System.Collections.Specialized.ListDictionary
  langs:
  - csharp
  name: Values
  nameWithType: ListDictionary.Values
  fullName: System.Collections.Specialized.ListDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi egy <xref:System.Collections.ICollection>az értékeket tartalmazó a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "Az értékek sorrendjét a <xref:System.Collections.ICollection>nincs megadva, de ugyanabban a sorrendben, mint a hozzá tartozó kulcsok a <xref:System.Collections.ICollection>által visszaadott a <xref:System.Collections.Specialized.ListDictionary.Keys%2A>metódus.</xref:System.Collections.Specialized.ListDictionary.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       A visszaadott <xref:System.Collections.ICollection>Nincs statikus másolatát; ehelyett a <xref:System.Collections.ICollection>hivatkozik vissza az eredeti <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> értékek</xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Ezért megváltozik a <xref:System.Collections.Specialized.ListDictionary>továbbra is megjelennek a <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Specialized.ListDictionary>       Ez a tulajdonság értékének beolvasása során O(1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_26_1.cpp)]\n [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_26_1.vb)]\n [!code-cs[System.Collections.Specialized.ListDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_26_1.cs)]"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Egy <xref:System.Collections.ICollection>az értékeket tartalmazó a <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.ListDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.ListDictionary.#ctor
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: ListDictionary()
  nameWithType: ListDictionary.ListDictionary()
  fullName: System.Collections.Specialized.ListDictionary.ListDictionary()
- uid: System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: ListDictionary(IComparer)
  nameWithType: ListDictionary.ListDictionary(IComparer)
  fullName: System.Collections.Specialized.ListDictionary.ListDictionary(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: ListDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.ListDictionary.Add(Object,Object)
- uid: System.Collections.Specialized.ListDictionary.Clear
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Clear()
  nameWithType: ListDictionary.Clear()
  fullName: System.Collections.Specialized.ListDictionary.Clear()
- uid: System.Collections.Specialized.ListDictionary.Contains(System.Object)
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: ListDictionary.Contains(Object)
  fullName: System.Collections.Specialized.ListDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ListDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.ListDictionary.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.ListDictionary.Count
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Count
  nameWithType: ListDictionary.Count
  fullName: System.Collections.Specialized.ListDictionary.Count
- uid: System.Collections.Specialized.ListDictionary.GetEnumerator
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: ListDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.ListDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Specialized.ListDictionary.IsFixedSize
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ListDictionary.IsFixedSize
  fullName: System.Collections.Specialized.ListDictionary.IsFixedSize
- uid: System.Collections.Specialized.ListDictionary.IsReadOnly
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ListDictionary.IsReadOnly
  fullName: System.Collections.Specialized.ListDictionary.IsReadOnly
- uid: System.Collections.Specialized.ListDictionary.IsSynchronized
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: ListDictionary.IsSynchronized
  fullName: System.Collections.Specialized.ListDictionary.IsSynchronized
- uid: System.Collections.Specialized.ListDictionary.Item(System.Object)
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: ListDictionary.Item(Object)
  fullName: System.Collections.Specialized.ListDictionary.Item(Object)
- uid: System.Collections.Specialized.ListDictionary.Keys
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Keys
  nameWithType: ListDictionary.Keys
  fullName: System.Collections.Specialized.ListDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Specialized.ListDictionary.Remove(System.Object)
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: ListDictionary.Remove(Object)
  fullName: System.Collections.Specialized.ListDictionary.Remove(Object)
- uid: System.Collections.Specialized.ListDictionary.SyncRoot
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: ListDictionary.SyncRoot
  fullName: System.Collections.Specialized.ListDictionary.SyncRoot
- uid: System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ListDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.ListDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.ListDictionary.Values
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Values
  nameWithType: ListDictionary.Values
  fullName: System.Collections.Specialized.ListDictionary.Values
- uid: System.Collections.Specialized.ListDictionary.#ctor*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: ListDictionary
  nameWithType: ListDictionary.ListDictionary
- uid: System.Collections.Specialized.ListDictionary.Add*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Add
  nameWithType: ListDictionary.Add
- uid: System.Collections.Specialized.ListDictionary.Clear*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Clear
  nameWithType: ListDictionary.Clear
- uid: System.Collections.Specialized.ListDictionary.Contains*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Contains
  nameWithType: ListDictionary.Contains
- uid: System.Collections.Specialized.ListDictionary.CopyTo*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: CopyTo
  nameWithType: ListDictionary.CopyTo
- uid: System.Collections.Specialized.ListDictionary.Count*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Count
  nameWithType: ListDictionary.Count
- uid: System.Collections.Specialized.ListDictionary.GetEnumerator*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: ListDictionary.GetEnumerator
- uid: System.Collections.Specialized.ListDictionary.IsFixedSize*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ListDictionary.IsFixedSize
- uid: System.Collections.Specialized.ListDictionary.IsReadOnly*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ListDictionary.IsReadOnly
- uid: System.Collections.Specialized.ListDictionary.IsSynchronized*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: ListDictionary.IsSynchronized
- uid: System.Collections.Specialized.ListDictionary.Item*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Item
  nameWithType: ListDictionary.Item
- uid: System.Collections.Specialized.ListDictionary.Keys*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Keys
  nameWithType: ListDictionary.Keys
- uid: System.Collections.Specialized.ListDictionary.Remove*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Remove
  nameWithType: ListDictionary.Remove
- uid: System.Collections.Specialized.ListDictionary.SyncRoot*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: ListDictionary.SyncRoot
- uid: System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ListDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.ListDictionary.Values*
  parent: System.Collections.Specialized.ListDictionary
  isExternal: false
  name: Values
  nameWithType: ListDictionary.Values
