### YamlMime:ManagedReference
items:
- uid: System.Data.EntityKey
  id: EntityKey
  children:
  - System.Data.EntityKey.#ctor
  - System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  - System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  - System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  - System.Data.EntityKey.EntityContainerName
  - System.Data.EntityKey.EntityKeyValues
  - System.Data.EntityKey.EntityNotValidKey
  - System.Data.EntityKey.EntitySetName
  - System.Data.EntityKey.Equals(System.Data.EntityKey)
  - System.Data.EntityKey.Equals(System.Object)
  - System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  - System.Data.EntityKey.GetHashCode
  - System.Data.EntityKey.IsTemporary
  - System.Data.EntityKey.NoEntitySetKey
  - System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  - System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  - System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  langs:
  - csharp
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
  type: Class
  summary: "Itt egy tartós, amely egy entitás típusú objektumra hivatkozik."
  remarks: "Az EntityKey objektumok nem módosíthatók; Ez azt jelenti miután azok össze ezeket nem lehet módosítani.       További információkért lásd: [entitás kulcsoknál](http://msdn.microsoft.com/en-us/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)."
  example:
  - "These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The examples show you how to create and use an EntityKey.  \n  \n [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#entitykeyclass_trygetobjectbykey)]\n [!code-cs[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#entitykeyclass_trygetobjectbykey)]  \n  \n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#addobjectusingkey)]\n [!code-cs[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#addobjectusingkey)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")]

      [System.Runtime.Serialization.DataContract(IsReference=true)]

      public sealed class EntityKey : IEquatable<System.Data.EntityKey>
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Data.EntityKey>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.EntityKey.#ctor
  id: '#ctor'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey()
  nameWithType: EntityKey.EntityKey()
  fullName: System.Data.EntityKey.EntityKey()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.EntityKey&quot;> </xref> osztály."
  syntax:
    content: public EntityKey ();
    parameters: []
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  nameWithType: EntityKey.EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  fullName: System.Data.EntityKey.EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.EntityKey&quot;> </xref> az entitáskészlet neve és egy általános osztály <xref:System.Collections.Generic.KeyValuePair>gyűjtemény.</xref:System.Collections.Generic.KeyValuePair>"
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example shows you how to create and use an <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#addobjectusingkey)]\n [!code-cs[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#addobjectusingkey)]"
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>> entityKeyValues);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: "A <xref:System.String>, hogy-e az entitáskészlet neve az entitás tároló minősíteni.</xref:System.String>"
    - id: entityKeyValues
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "Egy általános <xref:System.Collections.Generic.KeyValuePair>gyűjtemény.</xref:System.Collections.Generic.KeyValuePair>       Minden kulcs-érték párt a kulcs és a tulajdonság értékeként tulajdonság neve van. Egy pár részét képező minden tulajdonságnak kell lennie a <xref href=&quot;System.Data.EntityKey&quot;> </xref>. A kulcs/érték párok sorrendje nem fontos, de minden kulcstulajdonság tartalmaznia kell. A tulajdonságnevek megkülönböztetik egyszerű egy entitás neve vagy a sémanév nem minősített nevek."
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String,IEnumerable<EntityKeyMember>)
  nameWithType: EntityKey.EntityKey(String,IEnumerable<EntityKeyMember>)
  fullName: System.Data.EntityKey.EntityKey(String,IEnumerable<EntityKeyMember>)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.EntityKey&quot;> </xref> az entitáskészlet neve az osztály és egy &lt;xref:System.Collections.Generic.IEnumerable%601&gt; gyűjteménye <xref href=&quot;System.Data.EntityKeyMember&quot;> </xref> objektumok."
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable<System.Data.EntityKeyMember> entityKeyValues);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: "A <xref:System.String>, hogy-e az entitáskészlet neve az entitás tároló minősíteni.</xref:System.String>"
    - id: entityKeyValues
      type: System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember}
      description: "Egy &lt;xref:System.Collections.Generic.IEnumerable%601&gt; gyűjteménye <xref href=&quot;System.Data.EntityKeyMember&quot;> </xref> objektumok, amellyel a kulcs inicializálása."
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  id: '#ctor(System.String,System.String,System.Object)'
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKey(String,String,Object)
  nameWithType: EntityKey.EntityKey(String,String,Object)
  fullName: System.Data.EntityKey.EntityKey(String,String,Object)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.EntityKey&quot;> </xref> osztály entitáskészlet neve és egy adott entitás kulcsból álló kulcspárt."
  remarks: ''
  example:
  - "This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example shows you how to create and use an <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#addobjectusingkey)]\n [!code-cs[DP ObjectServices Concepts#AddObjectUsingKey](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#addobjectusingkey)]"
  syntax:
    content: public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);
    parameters:
    - id: qualifiedEntitySetName
      type: System.String
      description: "A <xref:System.String>, hogy-e az entitáskészlet neve az entitás tároló minősíteni.</xref:System.String>"
    - id: keyName
      type: System.String
      description: "A <xref:System.String>, amely a kulcs neve.</xref:System.String>"
    - id: keyValue
      type: System.Object
      description: "Egy <xref:System.Object>, amely a kulcs értékét.</xref:System.Object>"
  overload: System.Data.EntityKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.EntityContainerName
  id: EntityContainerName
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
  fullName: System.Data.EntityKey.EntityContainerName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Lekérdezi vagy beállítja az entitás tároló nevét."
  syntax:
    content: public string EntityContainerName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>érték, amely entitástároló, amelyhez az entitás neve a <xref href=&quot;System.Data.EntityKey&quot;> </xref> tartozik.</xref:System.String>"
  overload: System.Data.EntityKey.EntityContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.EntityKeyValues
  id: EntityKeyValues
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
  fullName: System.Data.EntityKey.EntityKeyValues
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Lekérdezi vagy beállítja a társított értékek <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "A <xref:System.Data.EntityKey>osztály a logikai megadott kulcs az ilyen típusú entitás alkotó értékek másolatát tartalmazza.</xref:System.Data.EntityKey>       A tagjai a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>rendelkező tulajdonság nevét és az értéket egy <xref:System.Collections.Generic.KeyValuePair%602>, ahol a kulcsot a tulajdonság neve és a tényleges érték az objektum tulajdonság értéke.</xref:System.Collections.Generic.KeyValuePair%602> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>"
  syntax:
    content: public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }
    return:
      type: System.Data.EntityKeyMember[]
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; a kulcs értékének <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  overload: System.Data.EntityKey.EntityKeyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.EntityNotValidKey
  id: EntityNotValidKey
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntityNotValidKey
  nameWithType: EntityKey.EntityNotValidKey
  fullName: System.Data.EntityKey.EntityNotValidKey
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Egy egyszerű <xref href=&quot;System.Data.EntityKey&quot;> </xref> azonosító olyan entitás, amely egy sikertelen összehasonlításának [KEZELNI](~/add/includes/ajax-current-ext-md.md) műveletet."
  remarks: "Érvénytelen entitást lekérdezni különböző módja van. A leggyakoribb eset kell, ha egy [!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)] lekérdezéséhez használja a [KEZELNI](../Topic/TREAT%20\\(Entity%20SQL\\).md) operátor egy adott típusú polimorf típusú példány és az adott példány értelmezése nem felel meg. ([KEZELNI](../Topic/TREAT%20\\(Entity%20SQL\\).md) hasonló a C# `as` operátor). Ebben az esetben a lekérdezés visszaadja az entitás, amely nem érvényes, és az eredményül kapott entitás entitás kulcsának értéke noentitysetkey értékre."
  syntax:
    content: public static readonly System.Data.EntityKey EntityNotValidKey;
    return:
      type: System.Data.EntityKey
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.EntitySetName
  id: EntitySetName
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
  fullName: System.Data.EntityKey.EntitySetName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Lekérdezi vagy beállítja a következő entitáskészlet neve."
  syntax:
    content: public string EntitySetName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>érték, amely az entitás neve, amelyhez az entitás beállítása. a <xref href=&quot;System.Data.EntityKey&quot;> </xref> tartozik.</xref:System.String>"
  overload: System.Data.EntityKey.EntitySetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.Equals(System.Data.EntityKey)
  id: Equals(System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: Equals(EntityKey)
  nameWithType: EntityKey.Equals(EntityKey)
  fullName: System.Data.EntityKey.Equals(EntityKey)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Jelzi, hogy ez a példány egyenlőnek egy meghatározott értéket ad vissza <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "Átmeneti kulcsok rendelkezik mint állandó kulcsok különböző összehasonlítás szemantikája:-ideiglenes kulcs hivatkozási egyenlőség használja. Ez azt jelenti, hogy két hivatkozik a pontos az ideiglenes <xref:System.Data.EntityKey>példány, annál, de nem más <xref:System.Data.EntityKey>példányok megegyeznek.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Állandó kulcsok egyenlőség a benne lévő tulajdonságok és a <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> értékei alapján határozza meg Ez azt jelenti, hogy két külön lehet <xref:System.Data.EntityKey>-példányok egyenlő, ha az entitáskészletekben azonosak, és a kulcsértékei megegyeznek.</xref:System.Data.EntityKey>       Ezenkívül átmeneti kulcsok nem rendelkező <xref:System.Data.Metadata.Edm.EntitySet>vagy -értéket, de állandó kulcsok tenni.</xref:System.Data.Metadata.Edm.EntitySet>"
  syntax:
    content: public bool Equals (System.Data.EntityKey other);
    parameters:
    - id: other
      type: System.Data.EntityKey
      description: "Egy <xref href=&quot;System.Data.EntityKey&quot;> </xref> objektum való összehasonlításra ezt a példányt."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a példány és <code> other </code> azonos értékeket; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.EntityKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EntityKey.Equals(Object)
  fullName: System.Data.EntityKey.Equals(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Egy érték, amely azt jelzi, hogy ez a példány egyenlő a megadott objektumot ad vissza."
  remarks: "Átmeneti kulcsok rendelkezik mint állandó kulcsok különböző összehasonlítás szemantikája:-ideiglenes kulcs hivatkozási egyenlőség használja. Ez azt jelenti, hogy két hivatkozik a pontos az ideiglenes <xref:System.Data.EntityKey>példány, annál, de nem más <xref:System.Data.EntityKey>példányok megegyeznek.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Állandó kulcsok egyenlőség a benne lévő tulajdonságok és a <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> értékei alapján határozza meg Ez azt jelenti, hogy két külön lehet <xref:System.Data.EntityKey>-példányok egyenlő, ha azok <xref:System.Data.Metadata.Edm.EntitySet>objektumok azonosak, és a kulcsértékei megegyeznek.</xref:System.Data.Metadata.Edm.EntitySet> </xref:System.Data.EntityKey>       Ezenkívül átmeneti kulcsok nem rendelkező <xref:System.Data.Metadata.Edm.EntitySet>vagy -értéket, de állandó kulcsok tenni.</xref:System.Data.Metadata.Edm.EntitySet>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Egy <xref:System.Object>való összehasonlításra ezt a példányt.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a példány és <code> obj </code> azonos értékeket; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.EntityKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  id: GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: GetEntitySet(MetadataWorkspace)
  nameWithType: EntityKey.GetEntitySet(MetadataWorkspace)
  fullName: System.Data.EntityKey.GetEntitySet(MetadataWorkspace)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Lekérdezi a megadott metaadat-munkaterület ez entity kulcs az entitáskészlet."
  remarks: "A következő entitáskészlet érhető el az entitás tároló neve alapján, és entitáskészlet kulcs neve."
  syntax:
    content: public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);
    parameters:
    - id: metadataWorkspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "A metaadat-munkaterület entitást tartalmazó."
    return:
      type: System.Data.Metadata.Edm.EntitySet
      description: "A <xref href=&quot;System.Data.Metadata.Edm.EntitySet&quot;> </xref> entitás kulcshoz."
  overload: System.Data.EntityKey.GetEntitySet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A következő entitáskészlet nem található a megadott metaadatok munkaterületen."
  platform:
  - net462
- uid: System.Data.EntityKey.GetHashCode
  id: GetHashCode
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EntityKey.GetHashCode()
  fullName: System.Data.EntityKey.GetHashCode()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "A kivonatoló függvényt az aktuális funkcionál <xref href=&quot;System.Data.EntityKey&quot;> </xref> objektum. GetHashCode kivonatoló algoritmusok és adatszerkezetek, például egy kivonattáblát alkalmas."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Az aktuális kivonatoló kódot <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  overload: System.Data.EntityKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.IsTemporary
  id: IsTemporary
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
  fullName: System.Data.EntityKey.IsTemporary
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Data.EntityKey&quot;> </xref> ideiglenes."
  remarks: "Ha egy új entitás létrehozása a [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)] ideiglenes kulcs határozza meg, és beállítja a IsTemporary tulajdonság `true`. A hívás esetén a <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>metódus, a [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)] hozzárendel egy állandó kulcsot, és beállítja a IsTemporary tulajdonság `false`.</xref:System.Data.Objects.ObjectContext.SaveChanges%2A>      > [!NOTE] > Átmeneti kulcsok automatikusan állít elő a keretrendszer; azokat közvetlenül a felhasználó által nem állítható össze.       Átmeneti kulcsok rendelkezik mint állandó kulcsok különböző összehasonlítás szemantikája:-ideiglenes kulcs hivatkozási egyenlőség használja. Ez azt jelenti, hogy két hivatkozik a pontos az ideiglenes <xref:System.Data.EntityKey>példány, annál, de nem más <xref:System.Data.EntityKey>példányok megegyeznek.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Állandó kulcsok egyenlőség a benne lévő tulajdonságok és a <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> értékei alapján határozza meg Ez azt jelenti, hogy két külön lehet <xref:System.Data.EntityKey>-példányok egyenlő, ha az entitáskészletekben azonosak, és a kulcsértékei megegyeznek.</xref:System.Data.EntityKey>       Ezenkívül átmeneti kulcsok nem rendelkező <xref:System.Data.Metadata.Edm.EntitySet>vagy -értéket, de állandó kulcsok tenni.</xref:System.Data.Metadata.Edm.EntitySet>       Ha a <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A>metódus lehívásra kerül egy entitás <xref:System.Data.Objects.ObjectStateEntry>és az entitás Váltás a <xref:System.Data.EntityState>állapotra <xref:System.Data.EntityState>állapot, a [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)] automatikusan kiszámítja az entitás egy új állandó kulcsot, és minden ideiglenes hivatkozások szinkronizálja.</xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A>"
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.EntityKey&quot;> </xref> ideiglenes; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.EntityKey.IsTemporary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.NoEntitySetKey
  id: NoEntitySetKey
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: NoEntitySetKey
  nameWithType: EntityKey.NoEntitySetKey
  fullName: System.Data.EntityKey.NoEntitySetKey
  type: Field
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Egypéldányos <xref href=&quot;System.Data.EntityKey&quot;> </xref> által egy csak olvasható entitás azonosított."
  remarks: "A csak olvasható entitás, amely érvényes minden módon azzal a különbséggel, hogy nincs társítva egy tényleges entitáskészletet entitás azonosítja. Ez akkor fordulhat elő eredményét részeként egy [!INCLUDE[esql](~/add/includes/ajax-current-ext-md.md)] lekérdezést, amely hoz létre, illetve egy entitás példányát, a lekérdezés (nem álló entitás számára egy adatbázis tábláinak lett beolvasva) szöveges értéket ad vissza. Olyan entitás, amely nem rendelkezik az entitáskészlet nem őrizhető meg az adatbázis mindaddig, amíg az egyes entitáskészlet társítva. Az objektum materializer kezeli, ezért az ilyen entitás, mintha a <xref:System.Data.Objects.MergeOption>egyesítési beállítással lett megadva, függetlenül a tényleges egyesítési beállítással megadott.</xref:System.Data.Objects.MergeOption> Entitásobjektumra jön létre, de identitása nem sikerült feloldani, és az fog nem vehető fel az állapotkezelő a materialization folyamat részeként."
  syntax:
    content: public static readonly System.Data.EntityKey NoEntitySetKey;
    return:
      type: System.Data.EntityKey
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  id: OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: OnDeserialized(StreamingContext)
  nameWithType: EntityKey.OnDeserialized(StreamingContext)
  fullName: System.Data.EntityKey.OnDeserialized(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Deszerializálása használt segédmetódus egy <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "OnDeserialized objektum szolgáltatások használják, amikor egy <xref:System.Data.EntityKey>.</xref:System.Data.EntityKey> deszerializálása További információkért lásd: [objektum szerializálása során](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)."
  syntax:
    content: public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Ismerteti a forrás- és egy adott szerializált folyam és egy további, a hívó által megadott környezetben."
  overload: System.Data.EntityKey.OnDeserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  id: OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: OnDeserializing(StreamingContext)
  nameWithType: EntityKey.OnDeserializing(StreamingContext)
  fullName: System.Data.EntityKey.OnDeserializing(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Deszerializálása használt segédmetódus egy <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "OnDeserialized objektum szolgáltatások használják, amikor egy <xref:System.Data.EntityKey>.</xref:System.Data.EntityKey> deszerializálása További információkért lásd: [objektum szerializálása során](http://msdn.microsoft.com/en-us/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)."
  syntax:
    content: public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A forrás- és egy adott szerializált folyam ismerteti, és egy további, a hívó által megadott környezetben."
  overload: System.Data.EntityKey.OnDeserializing*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  id: op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: op_Equality(EntityKey,EntityKey)
  nameWithType: EntityKey.op_Equality(EntityKey,EntityKey)
  fullName: System.Data.EntityKey.op_Equality(EntityKey,EntityKey)
  type: Operator
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Összehasonlít két <xref href=&quot;System.Data.EntityKey&quot;> </xref> objektumok."
  remarks: "Átmeneti kulcsok rendelkezik mint állandó kulcsok különböző összehasonlítás szemantikája:-ideiglenes kulcs hivatkozási egyenlőség használja. Ez azt jelenti, hogy két hivatkozik a pontos az ideiglenes <xref:System.Data.EntityKey>példány, annál, de nem más <xref:System.Data.EntityKey>példányok megegyeznek.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Állandó kulcsok egyenlőség a benne lévő tulajdonságok és a <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> értékei alapján határozza meg Ez azt jelenti, hogy két külön lehet <xref:System.Data.EntityKey>-példányok egyenlő, ha az entitáskészletekben azonosak, és a kulcsértékei megegyeznek.</xref:System.Data.EntityKey>       Ezenkívül átmeneti kulcsok nem rendelkező <xref:System.Data.Metadata.Edm.EntitySet>vagy -értéket, de állandó kulcsok tenni.</xref:System.Data.Metadata.Edm.EntitySet>"
  syntax:
    content: public static bool op_Equality (System.Data.EntityKey key1, System.Data.EntityKey key2);
    parameters:
    - id: key1
      type: System.Data.EntityKey
      description: "A <xref href=&quot;System.Data.EntityKey&quot;> </xref> összehasonlítani."
    - id: key2
      type: System.Data.EntityKey
      description: "A <xref href=&quot;System.Data.EntityKey&quot;> </xref> összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>key1</code> and <code>key2</code> values are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.EntityKey.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  id: op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  langs:
  - csharp
  name: op_Inequality(EntityKey,EntityKey)
  nameWithType: EntityKey.op_Inequality(EntityKey,EntityKey)
  fullName: System.Data.EntityKey.op_Inequality(EntityKey,EntityKey)
  type: Operator
  assemblies:
  - System.Data.Entity
  namespace: System.Data
  summary: "Összehasonlít két <xref href=&quot;System.Data.EntityKey&quot;> </xref> objektumok."
  remarks: "Átmeneti kulcsok rendelkezik mint állandó kulcsok különböző összehasonlítás szemantikája:-ideiglenes kulcs hivatkozási egyenlőség használja. Ez azt jelenti, hogy két hivatkozik a pontos az ideiglenes <xref:System.Data.EntityKey>példány, annál, de nem más <xref:System.Data.EntityKey>példányok megegyeznek.</xref:System.Data.EntityKey> </xref:System.Data.EntityKey>      -Állandó kulcsok egyenlőség a benne lévő tulajdonságok és a <xref:System.Data.Metadata.Edm.EntitySet>.</xref:System.Data.Metadata.Edm.EntitySet> értékei alapján határozza meg Ez azt jelenti, hogy két külön lehet <xref:System.Data.EntityKey>-példányok egyenlő, ha az entitáskészletekben azonosak, és a kulcsértékei megegyeznek.</xref:System.Data.EntityKey>       Ezenkívül átmeneti kulcsok nem rendelkező <xref:System.Data.Metadata.Edm.EntitySet>vagy -értéket, de rendszeres kulcsok tenni.</xref:System.Data.Metadata.Edm.EntitySet>"
  syntax:
    content: public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);
    parameters:
    - id: key1
      type: System.Data.EntityKey
      description: "A <xref href=&quot;System.Data.EntityKey&quot;> </xref> összehasonlítani."
    - id: key2
      type: System.Data.EntityKey
      description: "A <xref href=&quot;System.Data.EntityKey&quot;> </xref> összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>key1</code> and <code>key2</code> values are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.EntityKey.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.EntityKey.#ctor
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey()
  nameWithType: EntityKey.EntityKey()
  fullName: System.Data.EntityKey.EntityKey()
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  nameWithType: EntityKey.EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
  fullName: System.Data.EntityKey.EntityKey(String,IEnumerable<KeyValuePair<String,Object>>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,Object>>
  nameWithType: IEnumerable<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String,IEnumerable<EntityKeyMember>)
  nameWithType: EntityKey.EntityKey(String,IEnumerable<EntityKeyMember>)
  fullName: System.Data.EntityKey.EntityKey(String,IEnumerable<EntityKeyMember>)
- uid: System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<EntityKeyMember>
  nameWithType: IEnumerable<EntityKeyMember>
  fullName: System.Collections.Generic.IEnumerable<System.Data.EntityKeyMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.EntityKeyMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.EntityKeyMember
    name: EntityKeyMember
    nameWithType: EntityKeyMember
    fullName: EntityKeyMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EntityKey.#ctor(System.String,System.String,System.Object)
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey(String,String,Object)
  nameWithType: EntityKey.EntityKey(String,String,Object)
  fullName: System.Data.EntityKey.EntityKey(String,String,Object)
- uid: System.Data.EntityKey.EntityContainerName
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
  fullName: System.Data.EntityKey.EntityContainerName
- uid: System.Data.EntityKey.EntityKeyValues
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
  fullName: System.Data.EntityKey.EntityKeyValues
- uid: System.Data.EntityKeyMember[]
  parent: System.Data
  isExternal: false
  name: EntityKeyMember
  nameWithType: EntityKeyMember
  fullName: System.Data.EntityKeyMember[]
  spec.csharp:
  - uid: System.Data.EntityKeyMember
    name: EntityKeyMember
    nameWithType: EntityKeyMember
    fullName: EntityKeyMember[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.EntityKey.EntityNotValidKey
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityNotValidKey
  nameWithType: EntityKey.EntityNotValidKey
  fullName: System.Data.EntityKey.EntityNotValidKey
- uid: System.Data.EntityKey
  parent: System.Data
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
- uid: System.Data.EntityKey.EntitySetName
  parent: System.Data.EntityKey
  isExternal: false
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
  fullName: System.Data.EntityKey.EntitySetName
- uid: System.Data.EntityKey.Equals(System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals(EntityKey)
  nameWithType: EntityKey.Equals(EntityKey)
  fullName: System.Data.EntityKey.Equals(EntityKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.EntityKey.Equals(System.Object)
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals(Object)
  nameWithType: EntityKey.Equals(Object)
  fullName: System.Data.EntityKey.Equals(Object)
- uid: System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.EntityKey
  isExternal: false
  name: GetEntitySet(MetadataWorkspace)
  nameWithType: EntityKey.GetEntitySet(MetadataWorkspace)
  fullName: System.Data.EntityKey.GetEntitySet(MetadataWorkspace)
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.EntityKey.GetHashCode
  parent: System.Data.EntityKey
  isExternal: false
  name: GetHashCode()
  nameWithType: EntityKey.GetHashCode()
  fullName: System.Data.EntityKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.EntityKey.IsTemporary
  parent: System.Data.EntityKey
  isExternal: false
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
  fullName: System.Data.EntityKey.IsTemporary
- uid: System.Data.EntityKey.NoEntitySetKey
  parent: System.Data.EntityKey
  isExternal: false
  name: NoEntitySetKey
  nameWithType: EntityKey.NoEntitySetKey
  fullName: System.Data.EntityKey.NoEntitySetKey
- uid: System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserialized(StreamingContext)
  nameWithType: EntityKey.OnDeserialized(StreamingContext)
  fullName: System.Data.EntityKey.OnDeserialized(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserializing(StreamingContext)
  nameWithType: EntityKey.OnDeserializing(StreamingContext)
  fullName: System.Data.EntityKey.OnDeserializing(StreamingContext)
- uid: System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Equality(EntityKey,EntityKey)
  nameWithType: EntityKey.op_Equality(EntityKey,EntityKey)
  fullName: System.Data.EntityKey.op_Equality(EntityKey,EntityKey)
- uid: System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Inequality(EntityKey,EntityKey)
  nameWithType: EntityKey.op_Inequality(EntityKey,EntityKey)
  fullName: System.Data.EntityKey.op_Inequality(EntityKey,EntityKey)
- uid: System.Data.EntityKey.#ctor*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey.EntityKey
- uid: System.Data.EntityKey.EntityContainerName*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityContainerName
  nameWithType: EntityKey.EntityContainerName
- uid: System.Data.EntityKey.EntityKeyValues*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntityKeyValues
  nameWithType: EntityKey.EntityKeyValues
- uid: System.Data.EntityKey.EntitySetName*
  parent: System.Data.EntityKey
  isExternal: false
  name: EntitySetName
  nameWithType: EntityKey.EntitySetName
- uid: System.Data.EntityKey.Equals*
  parent: System.Data.EntityKey
  isExternal: false
  name: Equals
  nameWithType: EntityKey.Equals
- uid: System.Data.EntityKey.GetEntitySet*
  parent: System.Data.EntityKey
  isExternal: false
  name: GetEntitySet
  nameWithType: EntityKey.GetEntitySet
- uid: System.Data.EntityKey.GetHashCode*
  parent: System.Data.EntityKey
  isExternal: false
  name: GetHashCode
  nameWithType: EntityKey.GetHashCode
- uid: System.Data.EntityKey.IsTemporary*
  parent: System.Data.EntityKey
  isExternal: false
  name: IsTemporary
  nameWithType: EntityKey.IsTemporary
- uid: System.Data.EntityKey.OnDeserialized*
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserialized
  nameWithType: EntityKey.OnDeserialized
- uid: System.Data.EntityKey.OnDeserializing*
  parent: System.Data.EntityKey
  isExternal: false
  name: OnDeserializing
  nameWithType: EntityKey.OnDeserializing
- uid: System.Data.EntityKey.op_Equality*
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Equality
  nameWithType: EntityKey.op_Equality
- uid: System.Data.EntityKey.op_Inequality*
  parent: System.Data.EntityKey
  isExternal: false
  name: op_Inequality
  nameWithType: EntityKey.op_Inequality
