### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  id: ObjectDataSourceDisposingEventArgs
  children:
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  type: Class
  summary: "Adja meg az adatait a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing&quot;> </xref> az esemény a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő."
  remarks: "A ObjectDataSourceDisposingEventArgs osztály a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>metódust az üzleti objektumhoz példányhoz való hozzáférés bármely által használt adatok műveletek után a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő és az üzleti objektumhoz hajtja végre, de az üzleti mielőtt objektum megsemmisül.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Az üzleti objektumhoz használatával érhető el a <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> Adja hozzá a delegált kezelésére, az <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>esemény, van-e hozzáférési nyilvánosan elérhetővé tagokat az üzleti objektumhoz bármely végső munkavégzésre vagy törlése megtörtént.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>       A <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A>metódus nem hívja a <xref:System.Web.UI.WebControls.ObjectDataSource>szabályozhatja, ha az adatok műveletet hajtanak végre a módszer egy `static` metódus.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Egyetlen üzleti objektum példánya jön létre, ha a metódus statikus.       A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő kezelni tud dolgozni az alapul szolgáló üzleti objektumhoz, az életciklus különböző időpontokban sok események közzététele.</xref:System.Web.UI.WebControls.ObjectDataSource> Az alábbi táblázat az események és a társított <xref:System.EventArgs>osztályok és az esemény kezelő delegáltak.</xref:System.EventArgs>      | Esemény |} EventArgs |} EventHandler |}   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating><br /><br /> Azonnal az üzleti objektumhoz példányának létrehozása előtt következik be. |} <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> Akkor következik be, az üzleti objektumhoz példányának létrehozása után azonnal. |} <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs><br /><br /> Akkor következik be, mielőtt az adatok lekérésére. |} <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs><br /><br /> Előzheti insert, update vagy delete műveletet végrehajtani. |} <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs><br /><br /> Akkor következik be, miután az adatok lekérésére. |} <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, and <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Után fordulhat elő, az insert, update vagy delete műveletet végrehajtani. |} <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|   | <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs><br /><br /> Akkor következik be, mielőtt olyan üzleti objektumot megsemmisül. |} ObjectDataSourceDisposingEventArgs |} <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|</xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. The second code example provides the example middle-tier business object that the first code example uses.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the ObjectDataSourceDisposingEventArgs object is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call the <xref:System.IDisposable.Dispose%2A> method on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_1.aspx)]  \n  \n The following code example provides an example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a class that maintains state and encapsulates business logic. For a complete working example, you must compile this code as a library, and then use these classes from an ASP page.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_349_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_349_2.vb)]"
  syntax:
    content: 'public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> osztály a megadott objektum használatával."
  syntax:
    content: public ObjectDataSourceDisposingEventArgs (object objectInstance);
    parameters:
    - id: objectInstance
      type: System.Object
      description: "Az üzleti objektumhoz, amellyel a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> együttműködő adatok műveletek végrehajtásához."
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Amellyel az üzleti objektumot képviselő objektumot lekérdezi a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő adatok műveleteket hajtja végre."
  remarks: "Ha az adatok művelet módszerek (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, és <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) metódusok, az üzleti példányának vannak objektum, létrejön a metódus végrehajtása előtt.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Az üzleti objektumhoz megakadályozása által az objektum mentésekor objectinstance példányt használ tulajdonságában szereplő minden egyes létrehozott a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>eseménykezelő.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> A következő <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>események, kérheti le az üzleti objektumot a <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive (in terms of time or resources) to create for every data operation that your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and then create an instance, only if one is not already cached. Then, handle the  <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> class is set to `true`, to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> on the instance.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_252_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_252_1.aspx)]"
  syntax:
    content: public object ObjectInstance { get; }
    return:
      type: System.Object
      description: "Az üzleti objektumhoz az <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> használja az műveleteket; ellenkező esetben <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ha <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> számára a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs(Object)
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: ObjectDataSourceDisposingEventArgs.ObjectInstance
