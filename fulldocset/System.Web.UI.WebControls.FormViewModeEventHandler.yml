### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewModeEventHandler
  id: FormViewModeEventHandler
  langs:
  - csharp
  name: FormViewModeEventHandler
  nameWithType: FormViewModeEventHandler
  fullName: System.Web.UI.WebControls.FormViewModeEventHandler
  type: Delegate
  summary: "A mód, amely kezeli a <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> az esemény egy <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> vezérlő."
  remarks: "A <xref:System.Web.UI.WebControls.FormView.ModeChanging>esemény jelenik meg, amikor egy <xref:System.Web.UI.WebControls.FormView>vezérlő megpróbálja Szerkesztés, az insert és a csak olvasható módban között, de még mielőtt ténylegesen módosítja a mód váltás.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> Ez lehetővé teszi, hogy egy egyéni rutin, például konfigurálását végző esemény-kezelési lehetőséget nyújt a <xref:System.Web.UI.WebControls.FormView>szabályozzák az adott módot vagy a módváltás megszakítása, ha ez az esemény akkor következik be.</xref:System.Web.UI.WebControls.FormView>       Egy FormViewModeEventHandler delegált létrehozásakor meg kell adnia a módszert, amelyet az esemény fogja kezelni. Az esemény társítja a eseménykezelő, vegye fel a küldött példányának az esemény. Az eseménykezelő nevezzük az esemény akkor következik be, amikor, ha nem távolítja el a delegált. Eseménykezelő meghatalmazottak kapcsolatos további információkért lásd: [NIB: események és -Delegáltaknak](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  example:
  - "The following example demonstrates how to programmatically add a FormViewModeEventHandler delegate to the <xref:System.Web.UI.WebControls.FormView.ModeChanging> event of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewModeEventHandler#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_89_1.aspx)]\n [!code-vb[FormViewModeEventHandler#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_89_1.aspx)]  \n  \n The following example demonstrates how to declaratively add a FormViewModeEventHandler delegate to the <xref:System.Web.UI.WebControls.FormView.ModeChanging> event of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_89_2.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_89_2.aspx)]"
  syntax:
    content: public delegate void FormViewModeEventHandler(object sender, FormViewModeEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
