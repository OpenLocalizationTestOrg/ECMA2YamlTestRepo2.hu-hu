### YamlMime:ManagedReference
items:
- uid: System.IO.Log.SequenceNumber
  id: SequenceNumber
  children:
  - System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  - System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.Equals(System.Object)
  - System.IO.Log.SequenceNumber.GetBytes
  - System.IO.Log.SequenceNumber.GetHashCode
  - System.IO.Log.SequenceNumber.Invalid
  - System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  - System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  langs:
  - csharp
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
  type: Struct
  summary: "Egy naplóbejegyzést képviselnek rekord sorrendben rendelt sorszámot jelöli."
  remarks: "Minden naplóbejegyzés sorrendben hozzá van rendelve egy sorszám nagyobb, mint a sorozatszámok előtte hozzáfűzi a rekordok. Egy megfelelő sorszám képest, de egyébként nem nem kezelhetők."
  syntax:
    content: 'public struct SequenceNumber : IComparable<System.IO.Log.SequenceNumber>'
  inheritance:
  - System.ValueType
  implements:
  - System.IComparable<System.IO.Log.SequenceNumber>
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: SequenceNumber(Byte[])
  nameWithType: SequenceNumber.SequenceNumber(Byte[])
  fullName: System.IO.Log.SequenceNumber.SequenceNumber(Byte[])
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> osztály."
  syntax:
    content: public SequenceNumber (byte[] sequenceNumber);
    parameters:
    - id: sequenceNumber
      type: System.Byte[]
      description: "A sorszám alkotó bájt."
  overload: System.IO.Log.SequenceNumber.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sequenceNumber</code>a nem megfelelő hosszúságú, vagy nem határoz meg érvényes sorszámot."
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  id: CompareTo(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: CompareTo(SequenceNumber)
  nameWithType: SequenceNumber.CompareTo(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.CompareTo(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "A megadott objektum sorszám hasonlítja össze."
  syntax:
    content: public int CompareTo (System.IO.Log.SequenceNumber other);
    parameters:
    - id: other
      type: System.IO.Log.SequenceNumber
      description: "Egy objektum, amely a jelenlegi sorszám értékelődik ki."
    return:
      type: System.Int32
      description: "Egy 32 bites előjeles egész szám, amely jelzi, a két comparands lexikális kapcsolatát.       <table><tbody><tr><td> Érték       </td><td> Állapot       </td></tr><tr><td> Nullánál kisebb       </td><td> Ez a példány kisebb, mint <code> other </code>.       </td></tr><tr><td> Nulla       </td><td> Ez a példány megegyezik <code> other </code>.       </td></tr><tr><td> Nullánál nem kisebb       </td><td> Ez a példány érték nagyobb, mint <code> other </code>.       </td></tr></tbody></table>"
  overload: System.IO.Log.SequenceNumber.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  id: Equals(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Equals(SequenceNumber)
  nameWithType: SequenceNumber.Equals(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.Equals(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Azt jelzi, hogy ez a példány, a megadott sorszám egyenlő."
  syntax:
    content: public bool Equals (System.IO.Log.SequenceNumber other);
    parameters:
    - id: other
      type: System.IO.Log.SequenceNumber
      description: "Egy másik <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> összehasonlítandó."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> other </code> és ez a példány ugyanazt az értéket jelzi; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.SequenceNumber.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SequenceNumber.Equals(Object)
  fullName: System.IO.Log.SequenceNumber.Equals(Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Azt jelzi, hogy ez a példány és egy adott objektum egyenlő."
  syntax:
    content: public override bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "Hasonlítsa össze egy másik objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> other </code> , és ez a példány azonos típusú, és ugyanazt az értéket jelzi; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.SequenceNumber.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.GetBytes
  id: GetBytes
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: GetBytes()
  nameWithType: SequenceNumber.GetBytes()
  fullName: System.IO.Log.SequenceNumber.GetBytes()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "A jelenlegi sorszám része vagy egésze kódolja a bájttömböt."
  syntax:
    content: public byte[] GetBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A jelenlegi sorszám része vagy egésze tartalmazó bájttömb."
  overload: System.IO.Log.SequenceNumber.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.GetHashCode
  id: GetHashCode
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SequenceNumber.GetHashCode()
  fullName: System.IO.Log.SequenceNumber.GetHashCode()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Az adott példány kivonatkódját adja vissza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy 32 bites előjeles egész számokat kivonatoló kódot."
  overload: System.IO.Log.SequenceNumber.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.Invalid
  id: Invalid
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: Invalid
  nameWithType: SequenceNumber.Invalid
  fullName: System.IO.Log.SequenceNumber.Invalid
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Lekérdezi a sorszámot, amely egy érvénytelen sorozatszám lapblobok alapértelmezés szerint szolgál."
  syntax:
    content: public static System.IO.Log.SequenceNumber Invalid { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> UInt64 inicializálva<xref:System.UInt64.MaxValue> alaplemezként alapértelmezett értékét képviselő egy érvénytelen sorozatszám.</xref:System.UInt64.MaxValue>"
  overload: System.IO.Log.SequenceNumber.Invalid*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_Equality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Összehasonlít két <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> határozza meg, hogy azok egyenlő-példányokat."
  syntax:
    content: public static bool op_Equality (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> a következő operátor bal oldalán."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> operátor jobb oldalán."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha mindkét <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> példányai is egyenlő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.SequenceNumber.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_GreaterThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Végez két logikai összehasonlítása <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> annak megállapításához, hogy az első nagyobb, mint a második példány."
  syntax:
    content: public static bool op_GreaterThan (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> a következő operátor bal oldalán."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> operátor jobb oldalán."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az első példánynál érték nagyobb, mint a második példány, ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.SequenceNumber.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Végez két logikai összehasonlítása <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> annak megállapításához, hogy az első nagyobb vagy egyenlő a második példány."
  syntax:
    content: public static bool op_GreaterThanOrEqual (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> a következő operátor bal oldalán."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> operátor jobb oldalán."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az első példánynál nagyobb vagy egyenlő a második példány, ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_Inequality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Összehasonlít két <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> példányok annak meghatározásához, hogy azok nem egyenlő."
  syntax:
    content: public static bool op_Inequality (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> a következő operátor bal oldalán."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> operátor jobb oldalán."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha mindkét <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> az elemei nem egyenlő, ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.SequenceNumber.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_LessThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> paramétereit, és ellenőrizze, hogy az első kisebb, mint a második."
  syntax:
    content: public static bool op_LessThan (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> a következő operátor bal oldalán."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> operátor jobb oldalán."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az első példánynál értéke kisebb, mint a második példány, ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.SequenceNumber.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  id: op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  langs:
  - csharp
  name: op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  type: Operator
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "A két logikai összehasonlítást végez <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> annak megállapításához, hogy az első kisebb vagy egyenlő, mint a második paraméter."
  syntax:
    content: public static bool op_LessThanOrEqual (System.IO.Log.SequenceNumber c1, System.IO.Log.SequenceNumber c2);
    parameters:
    - id: c1
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> a következő operátor bal oldalán."
    - id: c2
      type: System.IO.Log.SequenceNumber
      description: "A <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> operátor jobb oldalán."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az első példánynál kisebb vagy egyenlő, mint a második példány, ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.SequenceNumber.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Log.SequenceNumber.#ctor(System.Byte[])
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: SequenceNumber(Byte[])
  nameWithType: SequenceNumber.SequenceNumber(Byte[])
  fullName: System.IO.Log.SequenceNumber.SequenceNumber(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Log.SequenceNumber.CompareTo(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: CompareTo(SequenceNumber)
  nameWithType: SequenceNumber.CompareTo(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.CompareTo(SequenceNumber)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.SequenceNumber
  parent: System.IO.Log
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
- uid: System.IO.Log.SequenceNumber.Equals(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals(SequenceNumber)
  nameWithType: SequenceNumber.Equals(SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.Equals(SequenceNumber)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.SequenceNumber.Equals(System.Object)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals(Object)
  nameWithType: SequenceNumber.Equals(Object)
  fullName: System.IO.Log.SequenceNumber.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Log.SequenceNumber.GetBytes
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetBytes()
  nameWithType: SequenceNumber.GetBytes()
  fullName: System.IO.Log.SequenceNumber.GetBytes()
- uid: System.IO.Log.SequenceNumber.GetHashCode
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetHashCode()
  nameWithType: SequenceNumber.GetHashCode()
  fullName: System.IO.Log.SequenceNumber.GetHashCode()
- uid: System.IO.Log.SequenceNumber.Invalid
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Invalid
  nameWithType: SequenceNumber.Invalid
  fullName: System.IO.Log.SequenceNumber.Invalid
- uid: System.IO.Log.SequenceNumber.op_Equality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Equality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Equality(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_GreaterThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThan(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_Inequality(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Inequality(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_Inequality(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_LessThan(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThan(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThan(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  nameWithType: SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
  fullName: System.IO.Log.SequenceNumber.op_LessThanOrEqual(SequenceNumber,SequenceNumber)
- uid: System.IO.Log.SequenceNumber.#ctor*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber.SequenceNumber
- uid: System.IO.Log.SequenceNumber.CompareTo*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: CompareTo
  nameWithType: SequenceNumber.CompareTo
- uid: System.IO.Log.SequenceNumber.Equals*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Equals
  nameWithType: SequenceNumber.Equals
- uid: System.IO.Log.SequenceNumber.GetBytes*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetBytes
  nameWithType: SequenceNumber.GetBytes
- uid: System.IO.Log.SequenceNumber.GetHashCode*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: GetHashCode
  nameWithType: SequenceNumber.GetHashCode
- uid: System.IO.Log.SequenceNumber.Invalid*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: Invalid
  nameWithType: SequenceNumber.Invalid
- uid: System.IO.Log.SequenceNumber.op_Equality*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Equality
  nameWithType: SequenceNumber.op_Equality
- uid: System.IO.Log.SequenceNumber.op_GreaterThan*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThan
  nameWithType: SequenceNumber.op_GreaterThan
- uid: System.IO.Log.SequenceNumber.op_GreaterThanOrEqual*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SequenceNumber.op_GreaterThanOrEqual
- uid: System.IO.Log.SequenceNumber.op_Inequality*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_Inequality
  nameWithType: SequenceNumber.op_Inequality
- uid: System.IO.Log.SequenceNumber.op_LessThan*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThan
  nameWithType: SequenceNumber.op_LessThan
- uid: System.IO.Log.SequenceNumber.op_LessThanOrEqual*
  parent: System.IO.Log.SequenceNumber
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SequenceNumber.op_LessThanOrEqual
