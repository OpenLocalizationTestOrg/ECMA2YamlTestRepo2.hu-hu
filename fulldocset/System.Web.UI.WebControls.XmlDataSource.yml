### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.XmlDataSource
  id: XmlDataSource
  children:
  - System.Web.UI.WebControls.XmlDataSource.#ctor
  - System.Web.UI.WebControls.XmlDataSource.CacheDuration
  - System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  - System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  - System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  - System.Web.UI.WebControls.XmlDataSource.Data
  - System.Web.UI.WebControls.XmlDataSource.DataFile
  - System.Web.UI.WebControls.XmlDataSource.EnableCaching
  - System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  - System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  - System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  - System.Web.UI.WebControls.XmlDataSource.Save
  - System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  - System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.WebControls.XmlDataSource.Transform
  - System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  - System.Web.UI.WebControls.XmlDataSource.TransformFile
  - System.Web.UI.WebControls.XmlDataSource.Transforming
  - System.Web.UI.WebControls.XmlDataSource.XPath
  langs:
  - csharp
  name: XmlDataSource
  nameWithType: XmlDataSource
  fullName: System.Web.UI.WebControls.XmlDataSource
  type: Class
  summary: "Adathoz kötött vezérlők egy XML-adatforrás képviseli."
  remarks: "Ebben a témakörben:- [bemutatása](#introduction)      -   [XML-adatok források](#source_of_xml_data)      -   [XML-adatok frissítése](#updating_xml_data)      -   [XSL átalakító megadó](#specifying_an_xsl_transformation)      -   [szűrés XPath kifejezés segítségével](#filtering_using_an_xpath_expression)      -   [gyorsítótárazását](#caching)      -   [további funkciók](#additional_features)      -   [nézet adatobjektum](#data_view_object)      -   [deklaratív Szintaxisán](#declarative_syntax) <a name=&quot;introduction&quot;> </a> ## bemutatása a XmlDataSource vezérlő adathoz kötött vezérlők XML-adatokat megjelenítő adatforrás-vezérlőelem.       A XmlDataSource vezérlő adathoz kötött vezérlők által használható hierarchikus és a táblázatos adatok megjelenítéséhez. A XmlDataSource vezérlő hierarchikus XML-adatok megjelennek a csak olvasható forgatókönyvek általában szolgál. Mivel a XmlDataSource vezérlő a <xref:System.Web.UI.HierarchicalDataSourceControl>osztály, működik együtt a hierarchikus adatokhoz.</xref:System.Web.UI.HierarchicalDataSourceControl> A XmlDataSource vezérlő megvalósít továbbá a <xref:System.Web.UI.IDataSource>felületet, és együttműködik táblázatos, vagy -stílus, az adatokat.</xref:System.Web.UI.IDataSource>      > [!NOTE] > Biztonsági okokból a XmlDataSource vezérlő tulajdonságok egyike tárolt megtekintési állapotát. Mivel ez technikailag lehetséges dekódolni a nézetállapotot, az ügyfél tartalmát, a adatszerkezet vagy a tartalma bizalmas információt sikerült tegye elérhetővé, az információk felfedése fenyegetést. Vegye figyelembe, hogy ha például az adatok tárolására van szüksége <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>tulajdonság megtekintési állapotba kerül, engedélyezheti a tartalom védelme úgy, hogy a titkosítás <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>a a `@ Page` irányelv.</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Lap fejlesztők XmlDataSource vezérlő adathoz kötött vezérlők használatával XML-adatok megjelenítéséhez használja.      <a name=&quot;source_of_xml_data&quot;></a>## XML-adatok a XmlDataSource források általában betölti XML-adatok XML-fájl, amely megadja a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> XML-adatok is tárolhatja az adatforrás vezérlőjének karakterlánc űrlap használatával által közvetlenül a <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> Ha azt szeretné, az XML-adatok átalakítására, mielőtt megjelenítésre kerül egy adathoz kötött vezérlő, az átalakításhoz biztosíthat egy bővíthető stíluslap Language (XSL) stíluslap. XML-adatokat, akkor általában a terhelés a stíluslap fájlból, melyet a <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>tulajdonságot, de is tárolhatja az karakterlánc képernyőn, közvetlenül a <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>      <a name=&quot;updating_xml_data&quot;></a>## XML-adatok a XmlDataSource vezérlő frissítése gyakran használják a csak olvasható adatok forgatókönyvek ahol megjelenik az adathoz kötött vezérlő a XML-adataiban. XML-adatok szerkesztését azonban XmlDataSource vezérlő is használhatja. Az XML-adatok szerkesztéséhez hívja meg a <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A>metódusának segítéségével lekérheti egy <xref:System.Xml.XmlDataDocument>objektum, amely az XML-adatok a memóriában másolatát.</xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> Csak akkor használhatja az objektum által elérhetővé tett a <xref:System.Xml.XmlDataDocument>és <xref:System.Xml.XmlNode>objektumokat tartalmaz, vagy egy szűrési kifejezés XPath segítségével kezelheti a dokumentumban szereplő adatokat.</xref:System.Xml.XmlNode> </xref:System.Xml.XmlDataDocument> Ha módosította az XML-adatok ábrázolása a memóriában, mentheti meghívásával lemezre a <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>metódus.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>       Bizonyos korlátozások vonatkoznak a szerkesztési képességeket XmlDataSource vezérlő:-XML-adatok ezt az XML-fájlba kell betölteni a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>tulajdonság beágyazott XML megadott helyett a <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>      -XSLT-átalakítás nélkül is megadhatók a <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>vagy <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>      -A <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>metódus nem kezeli a párhuzamos mentési műveletek a másik kérelem.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Ha egynél több felhasználó szerkeszti a XmlDataSource keresztül XML-fájl, nincs nem biztos, hogy minden felhasználó az azonos adatokhoz működnek. A lehetőség arra is egy <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>művelet azonos egyidejűségi problémák miatt nem sikerült.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>      <a name=&quot;specifying_an_xsl_transformation&quot;></a>## Megadása egy XML-adatokkal végrehajtott XSL-átalakítás A közös művelet van átalakítása azt egy XML-adatkészlet a másikba. A XmlDataSource vezérlő támogatja az XML-átalakítások a <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>és <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>tulajdonságait, amely egy XSL-stíluslap alkalmazandó XML-adatok, mielőtt az adathoz kötött vezérlő megadásához és a <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>tulajdonság, amely lehetővé teszi egy XSL-stíluslap által használható, az átalakítás során a dinamikus XSLT stílus lap argumentumokat.</xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Ha megad egy XPath kifejezés használatával szűrése a <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>tulajdonság, az átalakítás bekövetkezte után alkalmazásának.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>      > [!NOTE] > A XmlDataSource osztály használja az elavult <xref:System.Xml.Xsl.XslTransform>osztályt XSL átalakításokat hajthattak végre.</xref:System.Xml.Xsl.XslTransform> Ha szeretné használni az <xref:System.Xml.Xsl.XslTransform>osztály elavulttá vált, az <xref:System.Xml.Xsl.XslCompiledTransform>osztály</xref:System.Xml.Xsl.XslCompiledTransform> használatával manuálisan átalakítások alkalmazása</xref:System.Xml.Xsl.XslTransform> után bevezetett stílus lap funkciók      <a name=&quot;filtering_using_an_xpath_expression&quot;></a>## Szűrése a használatával egy XPath kifejezés alapértelmezés szerint a XmlDataSource vezérlő által azonosított XML-fájl az XML-adatokat tölt be a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>tulajdonság vagy található beágyazva a <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>tulajdonságot, de szűrheti az adatokat egy XPath kifejezés.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> A <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>a tulajdonság támogatja, ami után XML-adatok betöltése, és át legyenek-e érvényes XPath-szintaxis szűrőjének.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>      <a name=&quot;caching&quot;></a>## Gyorsítótárazása a teljesítmény céljából, gyorsítótárazás XmlDataSource vezérlő alapértelmezés szerint engedélyezve van. Megnyitása és olvasása XML-fájl a kiszolgálón, minden alkalommal, amikor a kért oldal csökkentheti az alkalmazás teljesítményét. Gyorsítótárazás lehetővé csökkenti az adatfeldolgozás okozta terhelést a webkiszolgálón; memória csökkenti a kiszolgálón a legtöbb esetben ez a helyes kompromisszum. A XmlDataSource automatikusan gyorsítótárazza az adatokat amikor a <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>tulajdonsága `true`, és a <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>tulajdonsága, amely a gyorsítótárban tárolja az adatokat, mielőtt a gyorsítótárat érvénytelenítik másodpercben.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> Használhatja a <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>Tovább szűkítheti az adatforrás-vezérlő a gyorsítótárazási viselkedésének.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>      <a name=&quot;additional_features&quot;></a>## További szolgáltatások az alábbi táblázat a XmlDataSource vezérlő által támogatott további szolgáltatásokat.      | Képesség |} Leírás |}   |----------------|-----------------|   | Rendezés |} Nem támogatja a XmlDataSource vezérlő. |}   | Szűrés |} A megfelelő XPath kifejezés segítségével XML-adatok szűrése a <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>tulajdonság használható. |}   | Lapozás |} Nem támogatja a XmlDataSource vezérlő. |}   | Frissítése |} Támogatja a <xref:System.Xml.XmlDataDocument>közvetlenül kezelésére, és majd a metódus hívása a <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |}   | Törlése |} Támogatja a <xref:System.Xml.XmlDataDocument>közvetlenül kezelésére, és majd a metódus hívása a <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |}   | Beszúrása |} Támogatja a <xref:System.Xml.XmlDataDocument>közvetlenül kezelésére, és majd a metódus hívása a <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>. |}   | Gyorsítótárazás |} Alapértelmezés szerint engedélyezve van, a <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>tulajdonság értéke 0 (végtelen) és a <xref:System.Web.UI.DataSourceCacheExpiry> <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>tulajdonsága. |}      <a name=&quot;data_view_object&quot;> </a> ## Adatok nézet objektum mivel XmlDataSource vezérlő adathoz kötött vezérlők hierarchikus adatokat megjelenítő, valamint a vezérlők táblázatos adatokat megjelenítő támogatja, az adatforrás-vezérlő támogatja többféle típusú adatforrás-objektumok megtekintése az alapul szolgáló XML-adataiban. </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A></xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> A XmlDataSource vezérlő lekéri nevű egyetlen <xref:System.Web.UI.WebControls.XmlDataSourceView>objektum táblázatos adatokat megjelenítő adathoz kötött vezérlő való használatkor.</xref:System.Web.UI.WebControls.XmlDataSourceView> A <xref:System.Web.UI.IDataSource.GetViewNames%2A>módszer azonosítja a single view nevű.</xref:System.Web.UI.IDataSource.GetViewNames%2A> Hierarchikus adatokat megjelenítő adathoz kötött vezérlő használatakor a XmlDataSource vezérlő lekéri az <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>számára átadott bármilyen egyedi hierarchikus elérési utat a <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>metódus.</xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>      <a name=&quot;declarative_syntax&quot;></a>## Deklaratív Szintaxisán```   <asp:XmlDataSource       CacheDuration=&quot;string|Infinite&quot;       CacheExpirationPolicy=&quot;Absolute|Sliding&quot;       CacheKeyDependency=&quot;string&quot;       DataFile=&quot;string&quot;       EnableCaching=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnTransforming=&quot;Transforming event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       TransformArgumentList=&quot;string&quot;       TransformFile=&quot;string&quot;       Visible=&quot;True|False&quot;       XPath=&quot;string&quot;   >       <Data>string</Data>       <Transform>string</Transform>   </asp:XmlDataSource>   ```"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an XmlDataSource control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data from the sample XML file. The second example demonstrates how to use an XmlDataSource control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data.  \n  \n The following code example demonstrates how to use an XmlDataSource control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data. The XmlDataSource loads XML data from the XML file identified by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_22_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_22_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```  \n  \n The following code example demonstrates how to use an XmlDataSource control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data. The <xref:System.Web.UI.WebControls.Repeater> control uses an XPath data-binding expression to bind to data items within the XML document that the XmlDataSource represents. For more information about `XPath` and `XPathSelect` data-binding syntax, see the <xref:System.Web.UI.XPathBinder> class.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_22_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_14#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_22_2.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>  \n <orders>  \n   <order>  \n     <customer id=\"12345\" />  \n     <customername>  \n         <firstn>John</firstn>  \n         <lastn>Smith</lastn>  \n     </customername>  \n     <transaction id=\"12345\" />  \n     <shipaddress>  \n         <address1>1234 Tenth Avenue</address1>  \n         <city>Bellevue</city>  \n         <state>Washington</state>  \n         <zip>98001</zip>  \n     </shipaddress>  \n     <summary>  \n         <item dept=\"tools\">screwdriver</item>  \n         <item dept=\"tools\">hammer</item>  \n         <item dept=\"plumbing\">fixture</item>  \n     </summary>  \n   </order>  \n</orders>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Transforming")]

      [System.ComponentModel.DefaultProperty("DataFile")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.HierarchicalDataSourceControl
  implements:
  - System.ComponentModel.IListSource
  - System.Web.UI.IDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.HierarchicalDataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.HierarchicalDataSourceControl.ClientID
  - System.Web.UI.HierarchicalDataSourceControl.ClientIDMode
  - System.Web.UI.HierarchicalDataSourceControl.Controls
  - System.Web.UI.HierarchicalDataSourceControl.CreateControlCollection
  - System.Web.UI.HierarchicalDataSourceControl.EnableTheming
  - System.Web.UI.HierarchicalDataSourceControl.FindControl(System.String)
  - System.Web.UI.HierarchicalDataSourceControl.Focus
  - System.Web.UI.HierarchicalDataSourceControl.HasControls
  - System.Web.UI.HierarchicalDataSourceControl.OnDataSourceChanged(System.EventArgs)
  - System.Web.UI.HierarchicalDataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HierarchicalDataSourceControl.SkinID
  - System.Web.UI.HierarchicalDataSourceControl.System#Web#UI#IHierarchicalDataSource#GetHierarchicalView(System.String)
  - System.Web.UI.HierarchicalDataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: XmlDataSource()
  nameWithType: XmlDataSource.XmlDataSource()
  fullName: System.Web.UI.WebControls.XmlDataSource.XmlDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> osztály."
  syntax:
    content: public XmlDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.XmlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  id: CacheDuration
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja azt az időtartamot (másodpercben), hogy az adatforrás-vezérlő gyorsítótárazza-e az adatokat fogadta."
  remarks: "A <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő automatikusan gyorsítótárazza az adatokat, ha a következő érvényes: - a <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>tulajdonsága `true`.</xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.XmlDataSource>      -A CacheDuration tulajdonsága érték nagyobb, mint 0, amely azt jelzi, hogy a gyorsítótárban tárolja az adatokat, mielőtt a gyorsítótárat érvénytelenítik másodpercben.       Módosítását a <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>tulajdonság vagy az XML-adatokat tartalmazó fájl tartalmát hatására a gyorsítótár érvényteleníti.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>       Alapértelmezés szerint a CacheDuration tulajdonság értéke 0, amely megadja, hogy egy határozatlan gyorsítótár, és az adatforrás gyorsítótárazni fog adatokat, amíg nem módosul az XML-fájl, amelyektől függ.       A gyorsítótár viselkedését szabályozza a duration kombinációja és a <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>beállítás.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Ha <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>értéke <xref:System.Web.UI.DataSourceCacheExpiry>, a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő gyorsítótárazza az adatokat az első adatok lekérését műveletnek, tárolja a memóriában CacheDuration által meghatározott időtartamra és érvénytelenné válik, miután a idő lejárt.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> A gyorsítótár majd frissítése a következő művelet során. Ha <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>értéke <xref:System.Web.UI.DataSourceCacheExpiry>, az adatforrás-vezérlő gyorsítótárazza az adatokat az első adatok lekérését műveletnek, de az időszak, amely magánál tartja a gyorsítótárba után minden ezt követő művelet visszaállítja.</xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> A gyorsítótár csak lejár, ha nincs tevékenység ideje a CacheDuration egyenlő óta az utolsó adatok beolvasása."
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the CacheDuration is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_928_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_928_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual int CacheDuration { get; set; }
    return:
      type: System.Int32
      description: "Hány másodpercig, amely a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő gyorsítótárazza a adatok lekérését művelet eredménye. Az alapértelmezett érték a 0."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  id: CacheExpirationPolicy
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a gyorsítótár lejárati házirendet, és a gyorsítótárazás időtartama megadásával írhatja le a gyorsítótár-viselkedést a gyorsítótár, amely az adatforrás-vezérlő használja."
  remarks: "A gyorsítótár viselkedését szabályozza kombinációja a <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>és CacheExpirationPolicy beállításait.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Ha a CacheExpirationPolicy <xref:System.Web.UI.DataSourceCacheExpiry>, a <xref:System.Web.UI.WebControls.XmlDataSource>gyorsítótárazza az adatokat az első adatok lekérését műveletnek, tárolja a memória mennyiségeként megadott időtartam <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, és érvényteleníti azt követően a idő lejárt.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> A gyorsítótár majd frissítése a következő művelet során. Ha a CacheExpirationPolicy <xref:System.Web.UI.DataSourceCacheExpiry>, az adatforrás-vezérlő gyorsítótárazza az adatokat az első adatok lekérését műveletnek, de az időszak, amely magánál tartja a gyorsítótárba után minden ezt követő művelet visszaállítja.</xref:System.Web.UI.DataSourceCacheExpiry> A gyorsítótár lejárnak, csak ha nincs tevékenység ideje egyenlő a <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>az utolsó adatok beolvasása óta.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>"
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_427_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_427_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }
    return:
      type: System.Web.UI.DataSourceCacheExpiry
      description: "Egy a <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> értékeket. Az alapértelmezett gyorsítótár lejárati házirend-beállítás <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  id: CacheKeyContext
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja az értéket, az adatforrás-vezérlő gyorsítótár kulcsának nézet állapotból, vagy hozzáad a gyorsítótárkulcshoz állapot megtekintése."
  remarks: "A CacheKeyContext tulajdonság lehetővé teszi a gyorsítótár kulcs manuális létrehozásához a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő.</xref:System.Web.UI.WebControls.XmlDataSource> Ez azért szükséges, csak ha az adatokat tartalmazó fájl megadása helyett a vezérlő XML vagy XSLT adatokat tartalmazó objektum. Ha adatok rendel a vezérlő, az adatok nem használatos a gyorsítótár-kulcs létrehozása. Ehelyett meg kell manuálisan hozzon létre egy egyedi gyorsítótár kulcsot, ha azt tervezi, hogy az objektum frissítése."
  syntax:
    content: public virtual string CacheKeyContext { get; set; }
    return:
      type: System.String
      description: "A gyorsítótár kulcsa, vagy egy üres karakterlánc, ha a gyorsítótár kulcsa nincs állapotának megtekintése a értéke."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  id: CacheKeyDependency
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a felhasználó által definiált kulcs függőség, amely minden, az adatforrás-vezérlő által létrehozott adatok gyorsítótár objektumok csatolva van. Minden gyorsítótár objektumok explicit módon hatálya lejár, ha a kulcs."
  remarks: "A <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő támogatja az adatok gyorsítótárazása.</xref:System.Web.UI.WebControls.XmlDataSource> Adatok gyorsítótárazása történik, amíg a <xref:System.Web.UI.WebControls.XmlDataSource>lekéri az adatokat, a gyorsítótárból, nem pedig az alapul szolgáló adatfájlból.</xref:System.Web.UI.WebControls.XmlDataSource> A gyorsítótár lejártakor olvassa be a fájl, és újra gyorsítótárazza az adatokat.       Beállíthatja a CacheKeyDependency tulajdonságát a függőséget által létrehozott összes gyorsítótár-bejegyzéseket létrehozni a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő és a kulcsot.</xref:System.Web.UI.WebControls.XmlDataSource> A gyorsítótár-bejegyzéseket bármikor ehhez lejártként kell megjelölni a kulcs programozott módon érvénytelenítéséhez.       Miatt a CacheKeyDependency létrehozásához használt tulajdonságok, akkor előfordulhat, hogy több <xref:System.Web.UI.WebControls.XmlDataSource>vezérlők forgatókönyvekben, ahol adatok betöltése az ugyanazon az azonos XML-fájl és a fájl átalakítása és az azonos gyorsítótárakat használjanak <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>és <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>beállítása.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: public virtual string CacheKeyDependency { get; set; }
    return:
      type: System.String
      description: "Egy kulcs, amely azonosítja az összes objektumok hozta létre a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Data
  id: Data
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Data
  nameWithType: XmlDataSource.Data
  fullName: System.Web.UI.WebControls.XmlDataSource.Data
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a adatblokk XML, amelyhez az adatforrás-vezérlőelem van kötve."
  remarks: "A deklaratív esetben az adatok tulajdonság a többsoros belső tulajdonságként legyen meghatározva a <xref:System.Web.UI.WebControls.XmlDataSource>objektum.</xref:System.Web.UI.WebControls.XmlDataSource> Egy belső tulajdonság kompatibilis XML-adatok, mert lehetővé teszi az bármely módon az XML-adatok formázása, és figyelmen kívül karakter kitöltési problémák, például az idézőjel karakterek kitöltési.       Ha mindkét a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>és adatok vannak beállítva, a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>tulajdonság lép érvénybe, és az XML-fájlt használja a rendszer az XML-adatok, az adatok tulajdonságban megadott helyett.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>       Ha módosítja az adatok tulajdonság értékének a <xref:System.Web.UI.IDataSource.DataSourceChanged>egy esemény jelenik meg.</xref:System.Web.UI.IDataSource.DataSourceChanged> Ha a gyorsítótár engedélyezve van, és módosítja az adatok értékét, a gyorsítótár érvénytelenné válik."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display inline XML data contained by the Data property with a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_378_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_378_1.aspx)]"
  syntax:
    content: public virtual string Data { get; set; }
    return:
      type: System.String
      description: "Beágyazott XML-adatok karakterlánc, amely a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő kötve van. Az alapértelmezett érték &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.Data*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A dokumentum betöltése."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile
  id: DataFile
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: DataFile
  nameWithType: XmlDataSource.DataFile
  fullName: System.Web.UI.WebControls.XmlDataSource.DataFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A fájl neve egy XML-fájl, amelyhez az adatforrás van kötve."
  remarks: "Ha a DataFile mindkét és <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>vannak beállítva, a DataFile tulajdonság lép érvénybe, és az XML-fájlt használja a rendszer a megadott XML-adatok helyett a <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>       Ha a DataFile tulajdonság értékének módosítása a <xref:System.Web.UI.IDataSource.DataSourceChanged>egy esemény jelenik meg.</xref:System.Web.UI.IDataSource.DataSourceChanged> Ha a gyorsítótár engedélyezve van, és DataFile értékének módosítása, a gyorsítótár érvénytelenné válik."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display XML data contained in a file with a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_472_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_472_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual string DataFile { get; set; }
    return:
      type: System.String
      description: "Az abszolút fizikai elérési út vagy relatív elérési út az XML-fájl, amely adatokat tartalmaz, amely a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> szabályozása jelöli. Az alapértelmezett érték &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.DataFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A dokumentum betöltése."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő engedélyezve van az adatok gyorsítótárazás."
  remarks: "A <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő automatikusan gyorsítótárazza az adatokat, amikor a EnableCaching tulajdonság értéke `true`.</xref:System.Web.UI.WebControls.XmlDataSource> Alapértelmezés szerint a <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>tulajdonság értéke 0, amely megadja, hogy egy határozatlan gyorsítótár, és az adatforrás gyorsítótárazni fog adatokat, amíg nem módosul az XML-fájl, amelyektől függ.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Ha a <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>tulajdonság 0-nál nagyobb értéket, a gyorsítótár eltárolja ennyi másodpercig egy új Útvonalfrissítés-készletet beolvasása előtt.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>       Ha a EnableCaching tulajdonsága `true` és a <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>tulajdonság értéke, a gyorsítótár-bejegyzéseket érvénytelenítve nem automatikusan, amikor a paraméterek módosítása a átalakítások argumentumlista.</xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> Ebben az esetben a gyorsítótárat érvénytelenítik úgy, hogy kódot kell írnia a <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>"
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the EnableCaching property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_365_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_365_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatok gyorsítótárazás engedélyezve van az adatforrás-vezérlő; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  id: GetHierarchicalView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: GetHierarchicalView(String)
  nameWithType: XmlDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A forrás megtekintése adatobjektumot az lekérdezi a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő. A <code> viewPath </code> paraméter lehet XPath kifejezés."
  remarks: "A beolvasandó GetHierarchicalView metódus hívása a <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>rendelt objektumot a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> Ha megad `viewPath` érték, a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő adja vissza egy forrás megtekintése objektumot a nézet által azonosított csomóponton jelölő `viewPath`, minden gyermek csomópont együtt.</xref:System.Web.UI.WebControls.XmlDataSource> Ha `viewPath` való <xref:System.String.Empty?displayProperty=fullName>, a <xref:System.Web.UI.WebControls.XmlDataSource>ellenőrzések szabályozhatja a <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>tulajdonság határozza meg, amelyből az adatforrásnézet létrehozása a gyökércsomópont.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.String.Empty?displayProperty=fullName> Ha a <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>tulajdonság értéke, a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő használ visszaadandó adatforrásnézet ugyanazon módon a `viewPath` kifejezés van megadva.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Ha a <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>tulajdonság nincs beállítva, a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő adja vissza az összes adat csomópontjának nézet az XML-adataiban.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>"
  syntax:
    content: protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);
    parameters:
    - id: viewPath
      type: System.String
      description: "Az XPath-kifejezés, amely azonosítja az egy csomóponton, amelyből az aktuális hierarchikus nézet épül."
    return:
      type: System.Web.UI.HierarchicalDataSourceView
      description: "Értéket ad vissza egy <xref href=&quot;System.Web.UI.WebControls.XmlHierarchicalDataSourceView&quot;> </xref> az adatok kezdődő, és az adatok csomópont által azonosított egyetlen nézetben képviselő objektum <code> viewPath </code>."
  overload: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  id: GetXmlDocument
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: GetXmlDocument()
  nameWithType: XmlDataSource.GetXmlDocument()
  fullName: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Az XML-adatok betölti a memóriába, a mögöttes adatokat tároló-ről vagy a gyorsítótárból, és visszaadja formájában egy <xref href=&quot;System.Xml.XmlDataDocument&quot;> </xref> objektum."
  remarks: "Közvetlen hozzáférés az alapul szolgáló XML-adatok egy memórián belüli megjelenítésre GetXmlDocument módszert használni.       A visszaadott állíthatók be <xref:System.Xml.XmlDataDocument>objektumra, és hívhatja <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>az XML-fájlba, amelyet a változtatások megőrzéséhez a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> Több követelményeket kell teljesíteni, mielőtt a <xref:System.Xml.XmlDataDocument>objektum mentése sikeresen megtörtént.</xref:System.Xml.XmlDataDocument> További információkért lásd: a <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>metódus.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>"
  example:
  - "This section contains two code examples. The first example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The second example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The data is manipulated in memory using the GetXmlDocument method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_196_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_196_1.aspx)]  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file. As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> retrieved by the GetXmlDocument method. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_196_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_196_2.aspx)]  \n  \n The XML file in the code examples has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n <bookstore xmlns:bk=\"urn:samples\">  \n   <book genre=\"novel\" publicationdate=\"1999\" bk:ISBN=\"0000000000\">  \n     <title>Secrets of Silicon Valley</title>  \n     <author>  \n       <first-name>Sheryl</first-name>  \n       <last-name>Hunter</last-name>  \n     </author>  \n     <price>24.95</price>\"   \n     </book>  \n   <book genre=\"novel\" publicationdate=\"1985\" bk:ISBN=\"1111111111\">  \n     <title>Straight Talk About Computers</title>  \n     <author>  \n       <first-name>Dean</first-name>  \n       <last-name>Straight</last-name>  \n     </author>  \n     <price>29.95</price>  \n   </book>  \n</bookstore>  \n```"
  syntax:
    content: public System.Xml.XmlDocument GetXmlDocument ();
    parameters: []
    return:
      type: System.Xml.XmlDocument
      description: "Egy <xref href=&quot;System.Xml.XmlDataDocument&quot;> </xref> az XML-kód képviselő objektum a <> </> *> tulajdonság vagy az azonosított fájl a <> </> *> tulajdonság, átalakításokat és <xref:System.Web.UI.WebControls.XmlDataSource.XPath*>alkalmazott lekérdezések.</xref:System.Web.UI.WebControls.XmlDataSource.XPath*>"
  overload: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Egy URL-cím van megadva a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>tulajdonság, azonban a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő nem rendelkezik megfelelő engedélyekkel a webes erőforrás.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, it is not an HTTP-based URL.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control does not support caching when client impersonation is enabled."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A megadott elérési út a hozzáférés megtagadva a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  id: OnTransforming(System.EventArgs)
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: OnTransforming(EventArgs)
  nameWithType: XmlDataSource.OnTransforming(EventArgs)
  fullName: System.Web.UI.WebControls.XmlDataSource.OnTransforming(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Kiváltja a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource.Transforming&quot;> </xref> esemény előtt a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő XSLT-átalakítás végez az XML-adataiban."
  remarks: "Az eseménykezelő keresztül egy delegált esemény indítása hív meg. További információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       A OnTransforming módszert is lehetővé teszi az események kezelésére anélkül egy delegált származtatott osztályok. Ez az ajánlott módszere az esemény egy származtatott osztályban kezelésére."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at runtime. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler, which is identified by name of the method set for the OnTransforming method.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_60_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_60_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The XML transformation is performed using the following style sheet.  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: protected virtual void OnTransforming (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Egy <xref:System.EventArgs>, amely tartalmazza az eseményadatok.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.XmlDataSource.OnTransforming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Save
  id: Save
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Save()
  nameWithType: XmlDataSource.Save()
  fullName: System.Web.UI.WebControls.XmlDataSource.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Menti a memória által jelenleg tárolt XML-adatok a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő lemezre, ha a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>tulajdonság értéke.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  remarks: "Amíg a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő általában olyan csak olvasható adatkötési esetekben használható, használja a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlőt szerkesztheti az XML-adatokat a mögöttes XML-adatfájl.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource> Ezekben az esetekben XML-adatok betöltődnek az XML-fájl által a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlő.</xref:System.Web.UI.WebControls.XmlDataSource> Ha módosítja a <xref:System.Xml.XmlDataDocument>memória használata a <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A>metódust, és ezután Mentés gombra az XML-adatfájl mentése metódus meghívásával.</xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> </xref:System.Xml.XmlDataDocument> A szerkeszthető XML-forgatókönyv esetén lehetséges az alábbi feltételek teljesülnek:-által jelzett XML-fájl XML-adatok betöltődnek a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>tulajdonság beágyazott XML-adataiban megadott helyett a <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>      -XSLT-átalakítás nélkül van megadva a <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>vagy <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>       A mentési módszer nem kezeli a párhuzamos mentési műveletek a másik kérelem. Ha egynél több felhasználó XML-fájl használatával szerkeszti a <xref:System.Web.UI.WebControls.XmlDataSource>kontrolljához nincs garancia működő összes felhasználó tartozik ugyanazokhoz az adatokhoz.</xref:System.Web.UI.WebControls.XmlDataSource> Lehetőség arra is azonos egyidejűségi problémák miatt sikertelen mentés művelet."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The second code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The data is manipulated in memory using the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_117_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_117_1.aspx)]  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file. As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> object retrieved by the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_117_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_117_2.aspx)]  \n  \n The XML file in the code examples has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n <bookstore xmlns:bk=\"urn:samples\">  \n   <book genre=\"novel\" publicationdate=\"1999\" bk:ISBN=\"0000000000\">  \n     <title>Secrets of Silicon Valley</title>  \n     <author>  \n       <first-name>Sheryl</first-name>  \n       <last-name>Hunter</last-name>  \n     </author>  \n     <price>24.95</price>\"   \n     </book>  \n   <book genre=\"novel\" publicationdate=\"1985\" bk:ISBN=\"1111111111\">  \n     <title>Straight Talk About Computers</title>  \n     <author>  \n       <first-name>Dean</first-name>  \n       <last-name>Straight</last-name>  \n     </author>  \n     <price>29.95</price>  \n   </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.Web.UI.WebControls.XmlDataSource.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XML data was loaded using the <xref:System.Web.UI.WebControls.XmlDataSource.Data*> property instead of the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property.  \n  \n \\- or -  \n  \n A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control does not have the correct permissions for the Web resource."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, it is not an HTTP-based URL.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A megadott elérési út a hozzáférés megtagadva a <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ez a tag leírását lásd: <xref:System.ComponentModel.IListSource.ContainsListCollection*>.</xref:System.ComponentModel.IListSource.ContainsListCollection*>"
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Web.UI.WebControls.XmlDataSource>példány típusúvá a <xref:System.ComponentModel.IListSource>felületet.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyűjtemény gyűjteménye <xref:System.Collections.IList>objektumok; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ez a tag leírását lásd: <xref:System.ComponentModel.IListSource.GetList*>.</xref:System.ComponentModel.IListSource.GetList*>"
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Web.UI.WebControls.XmlDataSource>példány típusúvá a <xref:System.ComponentModel.IListSource>felületet.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "Egy objektum végrehajtási <xref:System.Collections.IList>is köthető, hogy az adatforrás.</xref:System.Collections.IList>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  id: System#Web#UI#IDataSource#GetView(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Az elnevezett adatforrásnézetben az adatforrás-vezérlő társított lekérdezi."
  syntax:
    content: System.Web.UI.DataSourceView IDataSource.GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "A beolvasandó nézet nevét. Ha &lt;xref:System.String?displayProperty=fullName&gt; meg van adva, az alapértelmezett nézete a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> beolvasott vezérlőelem."
    return:
      type: System.Web.UI.DataSourceView
      description: "Visszaadja a megnevezett <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref> rendelt objektumot a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő."
  overload: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  id: System#Web#UI#IDataSource#GetViewNames
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ez a tag leírását lásd: <xref:System.Web.UI.IDataSource.GetViewNames*>.</xref:System.Web.UI.IDataSource.GetViewNames*>"
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Web.UI.WebControls.XmlDataSource>példány típusúvá a <xref:System.Web.UI.IDataSource>felületet.</xref:System.Web.UI.IDataSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: System.Collections.ICollection IDataSource.GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Egy objektum végrehajtási <xref:System.Collections.ICollection>képviselő nézet objektum-lista nevét tartalmazó társított a <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> objektum.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Transform
  id: Transform
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Transform
  nameWithType: XmlDataSource.Transform
  fullName: System.Web.UI.WebControls.XmlDataSource.Transform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a adatblokk stíluslap XSL (Extensible Language), amely meghatározza az XML-adatok által kezelt végrehajtandó XSLT-átalakítás a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő."
  remarks: "A deklaratív esetben az átalakítás tulajdonság a többsoros belső tulajdonságként legyen meghatározva a <xref:System.Web.UI.WebControls.XmlDataSource>objektum.</xref:System.Web.UI.WebControls.XmlDataSource> Egy belső tulajdonság kompatibilis XSL stílus munkalap adatainak, mivel lehetővé teszi az bármely módon stíluslap formázása, és figyelmen kívül karakter kitöltési problémákat például kitöltési idézőjel karakterek.       Ha mindkét a <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>és átalakítás vannak beállítva, a <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>tulajdonság lép érvénybe, és a XSL stílus lap-fájlt (.xsl) használja a rendszer a lap stíluselemet átalakító tulajdonságában megadott helyett.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> Ha az XPath kifejezések használata a <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>tulajdonság, alkalmazása után az XML-adatok átalakítására kerül.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Az átalakítási tulajdonság értékének módosítása a <xref:System.Web.UI.IDataSource.DataSourceChanged>egy esemény jelenik meg.</xref:System.Web.UI.IDataSource.DataSourceChanged> Ha a gyorsítótár engedélyezve van, és átalakítás értékének módosítása, a gyorsítótár érvénytelenné válik.      > [!NOTE] > A <xref:System.Web.UI.WebControls.XmlDataSource>osztály használja az elavult <xref:System.Xml.Xsl.XslTransform>osztályt XSL átalakításokat hajthattak végre.</xref:System.Xml.Xsl.XslTransform> </xref:System.Web.UI.WebControls.XmlDataSource> Ha szeretné használni az <xref:System.Xml.Xsl.XslTransform>osztály elavulttá vált, az <xref:System.Xml.Xsl.XslCompiledTransform>osztály</xref:System.Xml.Xsl.XslCompiledTransform> használatával manuálisan átalakítások alkalmazása</xref:System.Xml.Xsl.XslTransform> után bevezetett stílus lap funkciók"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display transformed XML data. The style sheet that performs the transformation is defined inline by the Transform property of the data source control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>  \n <orders>  \n   <order>  \n     <customer id=\"12345\" />  \n     <customername>  \n         <firstn>Todd</firstn>  \n         <lastn>Rowe</lastn>  \n     </customername>  \n     <transaction id=\"12345\" />  \n     <shipaddress>  \n         <address1>1234 Tenth Avenue</address1>  \n         <city>Bellevue</city>  \n         <state>Washington</state>  \n         <zip>98001</zip>  \n     </shipaddress>  \n     <summary>  \n         <item dept=\"tools\">screwdriver</item>  \n         <item dept=\"tools\">hammer</item>  \n         <item dept=\"plumbing\">fixture</item>  \n     </summary>  \n   </order>  \n</orders>  \n```"
  syntax:
    content: public virtual string Transform { get; set; }
    return:
      type: System.String
      description: "Egy karakterlánc beágyazott XSL, amely meghatározza egy XML-transzformáció szereplő adatokat kell elvégezni a <> </> *> vagy <> </> *> tulajdonságait. Az alapértelmezett érték &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A dokumentum betöltése."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  id: TransformArgumentList
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Felsorolja a stíluslap határozzák meg a használt XSLT argumentumokat a <> </> *> vagy <> </> *> tulajdonságok átalakítás végrehajtásához az XML-adatokon."
  remarks: "TransformArgumentList tulajdonságának beállítása során a <xref:System.Web.UI.WebControls.XmlDataSource.Transforming>esemény jelenik meg, annak érdekében, hogy a XSLT paraméterek érhetők el az XSLT-átalakítás az XML-adatokon alkalmazott időpontjában.</xref:System.Web.UI.WebControls.XmlDataSource.Transforming>       Ha a <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>tulajdonsága `true` és a TransformArgumentList tulajdonság értéke, a gyorsítótár-bejegyzéseket érvénytelenítve nem automatikusan, amikor a paraméterek módosítása a átalakítások argumentumlista.</xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> Ebben az esetben a gyorsítótárat érvénytelenítik úgy, hogy kódot kell írnia a <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at run time. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_437_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_437_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The transformation of the XML data is performed with the following style sheet.  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }
    return:
      type: System.Xml.Xsl.XsltArgumentList
      description: "Egy <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> objektum, amely tartalmazza az XSLT-paraméterek és objektumokra alkalmazandó XML-adatok által betöltésekor a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile
  id: TransformFile
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "XSLT-átalakítás kell elvégezni az XML-adatok által kezelt definiáló bővíthető stíluslap nyelvi (XSL) fájl (.xsl) fájl nevét adja meg a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> vezérlő."
  remarks: "Ha a TransformFile mindkét és <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>vannak beállítva, a TransformFile tulajdonság lép érvénybe, és XSL stílus lap fájlt (.xsl) használja a rendszer a lap stíluselemet megadott helyett a <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>tulajdonság.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Ha az XPath kifejezések használata a <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>tulajdonság, alkalmazása után az XML-adatok átalakítására kerül.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Ha a értékének módosítása a <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>tulajdonság, a <xref:System.Web.UI.IDataSource.DataSourceChanged>egy esemény jelenik meg.</xref:System.Web.UI.IDataSource.DataSourceChanged> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Ha a gyorsítótár engedélyezve van, és az értékének módosítása <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, a gyorsítótárat érvénytelenítik.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>      > [!NOTE] > A <xref:System.Web.UI.WebControls.XmlDataSource>osztály használja az elavult <xref:System.Xml.Xsl.XslTransform>osztályt XSL átalakításokat hajthattak végre.</xref:System.Xml.Xsl.XslTransform> </xref:System.Web.UI.WebControls.XmlDataSource> Ha szeretné használni az <xref:System.Xml.Xsl.XslTransform>osztály elavulttá vált, az <xref:System.Xml.Xsl.XslCompiledTransform>osztály</xref:System.Xml.Xsl.XslCompiledTransform> használatával manuálisan átalakítások alkalmazása</xref:System.Xml.Xsl.XslTransform> után bevezetett stílus lap funkciók"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control and a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data on a Web form. The transformation is performed using the style sheet indicated by the TransformFile property. You can optionally supply transformation arguments for the style sheet using an <xref:System.Xml.Xsl.XsltArgumentList>. For more information, see the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_625_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_625_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The XSL style sheet that performs the XML transformation has the following structure:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"price\">  \n       <xsl:value-of select=\"price\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public virtual string TransformFile { get; set; }
    return:
      type: System.String
      description: "Az abszolút fizikai elérési út vagy relatív elérési útját a XSL stílus lap, amely meghatározza egy XML-transzformáció szereplő adatokat kell elvégezni a <> </> *> vagy <> </> *> tulajdonságait. Az alapértelmezett érték &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.TransformFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A dokumentum betöltése."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Transforming
  id: Transforming
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Transforming
  nameWithType: XmlDataSource.Transforming
  fullName: System.Web.UI.WebControls.XmlDataSource.Transforming
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A stíluslap által meghatározott előtt következik be a <> </> *> tulajdonság által azonosított vagy a <> </> *> tulajdonság vonatkozik, az XML-adataiban."
  remarks: "Kezeli az Transforming eseményt beállítani a <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>tulajdonság egy <xref:System.Xml.Xsl.XsltArgumentList>mielőtt objektum a <xref:System.Web.UI.WebControls.XmlDataSource>vezérlőn egy XML-transzformáció.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Xml.Xsl.XsltArgumentList> </xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> at run time. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the Transforming event with a custom event handler.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_49_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_49_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The transformation of the XML data is performed with the following style sheet:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public event EventHandler Transforming;
    return:
      type: System.EventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.XPath
  id: XPath
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: XPath
  nameWithType: XmlDataSource.XPath
  fullName: System.Web.UI.WebControls.XmlDataSource.XPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Az XML-adatok által tartalmazott alkalmazandó XPath kifejezés határozza meg a <> </> *> tulajdonság, vagy az XML-fájl által jelzett a <> </> *> tulajdonság."
  remarks: "Az XPath adatkötési kifejezések további információkért lásd: [táblázatos vezérlő kötése XmlDataSource vezérlő](http://msdn.microsoft.com/en-us/d6bf202f-6454-45fd-9424-e17f6c7eafe8)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data that has been filtered using an XPath expression. In this example, XPath syntax is used to filter the XML data when the XPath property of the data source control is set, and also binds elements of the <xref:System.Web.UI.WebControls.Repeater> control template to the XML data.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_422_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_422_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```"
  syntax:
    content: public virtual string XPath { get; set; }
    return:
      type: System.String
      description: "Az XPath-kifejezés által tárolt adatok szűrésére használható jelölő karakterlánccá a <> </> *> tulajdonság, vagy az XML-fájl által jelzett a <> </> *> tulajdonság. Az alapértelmezett érték &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.XPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A dokumentum betöltése."
  platform:
  - net462
references:
- uid: System.Web.UI.HierarchicalDataSourceControl
  isExternal: false
  name: System.Web.UI.HierarchicalDataSourceControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XmlDataSource()
  nameWithType: XmlDataSource.XmlDataSource()
  fullName: System.Web.UI.WebControls.XmlDataSource.XmlDataSource()
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheDuration
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.DataSourceCacheExpiry
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCacheExpiry
  nameWithType: DataSourceCacheExpiry
  fullName: System.Web.UI.DataSourceCacheExpiry
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.XmlDataSource.Data
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Data
  nameWithType: XmlDataSource.Data
  fullName: System.Web.UI.WebControls.XmlDataSource.Data
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: DataFile
  nameWithType: XmlDataSource.DataFile
  fullName: System.Web.UI.WebControls.XmlDataSource.DataFile
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.XmlDataSource.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetHierarchicalView(String)
  nameWithType: XmlDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(String)
- uid: System.Web.UI.HierarchicalDataSourceView
  parent: System.Web.UI
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetXmlDocument()
  nameWithType: XmlDataSource.GetXmlDocument()
  fullName: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument()
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: OnTransforming(EventArgs)
  nameWithType: XmlDataSource.OnTransforming(EventArgs)
  fullName: System.Web.UI.WebControls.XmlDataSource.OnTransforming(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.XmlDataSource.Save
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Save()
  nameWithType: XmlDataSource.Save()
  fullName: System.Web.UI.WebControls.XmlDataSource.Save()
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.XmlDataSource.Transform
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transform
  nameWithType: XmlDataSource.Transform
  fullName: System.Web.UI.WebControls.XmlDataSource.Transform
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformFile
- uid: System.Web.UI.WebControls.XmlDataSource.Transforming
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transforming
  nameWithType: XmlDataSource.Transforming
  fullName: System.Web.UI.WebControls.XmlDataSource.Transforming
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.XmlDataSource.XPath
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XPath
  nameWithType: XmlDataSource.XPath
  fullName: System.Web.UI.WebControls.XmlDataSource.XPath
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XmlDataSource
  nameWithType: XmlDataSource.XmlDataSource
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.XmlDataSource.Data*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Data
  nameWithType: XmlDataSource.Data
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: DataFile
  nameWithType: XmlDataSource.DataFile
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetHierarchicalView
  nameWithType: XmlDataSource.GetHierarchicalView
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetXmlDocument
  nameWithType: XmlDataSource.GetXmlDocument
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: OnTransforming
  nameWithType: XmlDataSource.OnTransforming
- uid: System.Web.UI.WebControls.XmlDataSource.Save*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Save
  nameWithType: XmlDataSource.Save
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetView
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames
- uid: System.Web.UI.WebControls.XmlDataSource.Transform*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transform
  nameWithType: XmlDataSource.Transform
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
- uid: System.Web.UI.WebControls.XmlDataSource.XPath*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XPath
  nameWithType: XmlDataSource.XPath
