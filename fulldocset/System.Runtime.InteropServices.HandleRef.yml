### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.HandleRef
  id: HandleRef
  children:
  - System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.Handle
  - System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  - System.Runtime.InteropServices.HandleRef.Wrapper
  langs:
  - csharp
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
  type: Struct
  summary: "A nem felügyelt kód használatával platform átadott erőforráshoz leírót okozó felügyelt objektum meghívása burkolja."
  remarks: "> [!IMPORTANT]> Kezdve a .NET-keretrendszer 2.0, a HandleRef osztály funkcióinak felváltotta a <xref:System.Runtime.InteropServices.SafeHandle>osztály és a származtatott osztályok, valamint az <xref:System.Runtime.InteropServices.CriticalHandle>osztály</xref:System.Runtime.InteropServices.CriticalHandle> által regisztrációja, mivel</xref:System.Runtime.InteropServices.SafeHandle>       Ha használ platform meghívni egy felügyelt objektum hívása és az objektum nem hivatkozott máshol, a platform hívás meghívása után, lehetséges, hogy a szemétgyűjtő a felügyelt objektum véglegesítéséhez. Ezt a műveletet az erőforrás kiadja, és érvényteleníti a leíró meghívása a platform, amely a hívás sikertelen lesz. Alkalmazásburkoló HandleRef rendelkező leírót biztosítja, hogy a felügyelt objektum nem szemétgyűjtő, amíg a platform meghívása hívás befejeződött. Platform leírását meghívása szolgáltatások című [fel nem felügyelt DLL funkciók](~/add/includes/ajax-current-ext-md.md).       A HandleRef érték típusa, például <xref:System.Runtime.InteropServices.GCHandle>, egy speciális típusa ismeri fel az együttműködési átadás-előkészítő.</xref:System.Runtime.InteropServices.GCHandle> Egy normál, nonpinned <xref:System.Runtime.InteropServices.GCHandle>megakadályozza, hogy a korai szemétgyűjtés, még a HandleRef jobb teljesítményt nyújt.</xref:System.Runtime.InteropServices.GCHandle> Bár egy objektumot a platform időtartama életben HandleRef használatával meghívni hívás részesíti előnyben, használhatja a <xref:System.GC.KeepAlive%2A?displayProperty=fullName>módszer ugyanazt a célt.</xref:System.GC.KeepAlive%2A?displayProperty=fullName>       Az HandleRef konstruktor két paramétert fogad: egy <xref:System.Object>a burkoló képviselő és egy <xref:System.IntPtr>a nem felügyelt leíró képviselő.</xref:System.IntPtr> </xref:System.Object> Az együttműködési átadás-előkészítő csak a leíró nem felügyelt kód továbbítja, és biztosítja azt, hogy a burkoló (az első paraméterként konstruktorának átadott a `HandleRef`) a hívás időtartama életben maradjon."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct HandleRef
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> osztály sortörés következik a objektum és a nem felügyelt kód által használt erőforrások leírót."
  syntax:
    content: public HandleRef (object wrapper, IntPtr handle);
    parameters:
    - id: wrapper
      type: System.Object
      description: "A felügyelt objektumok, amelyek nem csak a platform meghívása hívás véglegesítésre adja vissza."
    - id: handle
      type: System.IntPtr
      description: "Egy <xref:System.IntPtr>azt jelzi, hogy egy erőforrás leírót.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Handle
  id: Handle
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Egy erőforrás leírójának lekérése."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "A leíró erőforráshoz."
  overload: System.Runtime.InteropServices.HandleRef.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  id: op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static IntPtr op_Explicit (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.IntPtr
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Runtime.InteropServices.HandleRef.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  id: ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "A belső egész alakot adja vissza egy <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> objektum."
  syntax:
    content: public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "A <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> beolvasni egy belső egész ábrázolását, az objektum."
    return:
      type: System.IntPtr
      description: "Egy <xref:System.IntPtr>képviselő objektum egy <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> objektum.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  id: Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Az erőforráshoz a leíró okozó objektum beolvasása."
  syntax:
    content: public object Wrapper { get; }
    return:
      type: System.Object
      description: "Az objektum a leíró okozó erőforráshoz."
  overload: System.Runtime.InteropServices.HandleRef.Wrapper*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.HandleRef.Handle
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef
  parent: System.Runtime.InteropServices
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
- uid: System.Runtime.InteropServices.HandleRef.#ctor*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.Handle*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit
  nameWithType: HandleRef.op_Explicit
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr
  nameWithType: HandleRef.ToIntPtr
- uid: System.Runtime.InteropServices.HandleRef.Wrapper*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
