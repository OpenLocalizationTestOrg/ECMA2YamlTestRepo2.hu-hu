### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingGroup
  id: BindingGroup
  children:
  - System.Windows.Data.BindingGroup.#ctor
  - System.Windows.Data.BindingGroup.BeginEdit
  - System.Windows.Data.BindingGroup.BindingExpressions
  - System.Windows.Data.BindingGroup.CancelEdit
  - System.Windows.Data.BindingGroup.CanRestoreValues
  - System.Windows.Data.BindingGroup.CommitEdit
  - System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  - System.Windows.Data.BindingGroup.HasValidationError
  - System.Windows.Data.BindingGroup.IsDirty
  - System.Windows.Data.BindingGroup.Items
  - System.Windows.Data.BindingGroup.Name
  - System.Windows.Data.BindingGroup.NotifyOnValidationError
  - System.Windows.Data.BindingGroup.Owner
  - System.Windows.Data.BindingGroup.SharesProposedValues
  - System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  - System.Windows.Data.BindingGroup.UpdateSources
  - System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  - System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  - System.Windows.Data.BindingGroup.ValidationErrors
  - System.Windows.Data.BindingGroup.ValidationRules
  langs:
  - csharp
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
  type: Class
  summary: "Kötések gyűjteményét tartalmazza, és <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objektum érvényesítéséhez használt objektumok."
  remarks: "Egy BindingGroup több kötése, amely érvényesítve, és együtt frissítése közötti kapcsolatot hoz létre. Tegyük fel például, hogy az alkalmazás kéri a felhasználó számára adjon meg egy címet. Az alkalmazás ezután tölti fel típusú objektum `Address`, amely tulajdonságai a, `Street`, `City`, `ZipCode`, és `Country`, a felhasználó által megadott értékekkel. Az alkalmazás rendelkezik egy panel, négy <xref:System.Windows.Controls.TextBox>vezérlők, amelyek egy-egy, az objektum tulajdonságainak adatkötés.</xref:System.Windows.Controls.TextBox> Használhatja a <xref:System.Windows.Controls.ValidationRule>a egy BindingGroup érvényesítéséhez a `Address` objektum.</xref:System.Windows.Controls.ValidationRule> A kötéseket a azonos bindinggroup Kötéscsoporthoz részt, ha gondoskodjon arról, hogy a zip-kódot az ország, a cím érvénytelen.       A <xref:System.Windows.FrameworkElement.BindingGroup%2A>tulajdonság vagy <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement.BindingGroup%2A> Gyermekelemek ugyanúgy, mint bármely más örökölhető tulajdonság a bindinggroup Kötéscsoporthoz öröklik a szülő elemekbe. Egy kötés egyik leszármazott elem kerül egy BindingGroup esetén az alábbi esetekben:-a kötés forrás és a <xref:System.Windows.FrameworkElement.DataContext%2A>az elem, amelynek a bindinggroup Kötéscsoporthoz vannak ugyanarra az objektumra és a <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>tulajdonság nincs beállítva.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.FrameworkElement.DataContext%2A>      -A <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>kötés tulajdonság értéke a <xref:System.Windows.Data.BindingGroup.Name%2A>, a <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>, és azok nem kifejezetten `null`.</xref:System.Windows.FrameworkContentElement.BindingGroup%2A> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       Tegyük fel, hogy a cím példában a <xref:System.Windows.FrameworkElement.DataContext%2A>, a <xref:System.Windows.Controls.Panel>típusú objektum értéke `Address`.</xref:System.Windows.Controls.Panel> </xref:System.Windows.FrameworkElement.DataContext%2A> A kötés minden <xref:System.Windows.Controls.TextBox>egészül paneljének BindingGroup.</xref:System.Windows.Controls.TextBox>       Hozzáadhat <xref:System.Windows.Controls.ValidationRule>objektumok egy bindinggroup.</xref:System.Windows.Controls.ValidationRule> Az első paraméterként átadott a bindinggroup Kötéscsoporthoz a <xref:System.Windows.Controls.ValidationRule.Validate%2A>metódus során a <xref:System.Windows.Controls.ValidationRule>futtatja.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> Használhatja a <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>vagy <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>, hogy a javasolt értékek az objektum eléréséhez bindinggroup Kötéscsoporthoz metódust és a <xref:System.Windows.Data.BindingGroup.Items%2A>tulajdonság használatával beolvassa a kötések forrásai.</xref:System.Windows.Data.BindingGroup.Items%2A> </xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A>       Egy BindingGroup frissíti az adatforrások a kötés minden kötésnek külön frissítése helyett egy időben. Ha meghívja a módszer az adatok érvényesítéséhez (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, vagy <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), a kötés minden <xref:System.Windows.Controls.TextBox>a a példa érvényesítése és potenciálisan frissítése.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A> </xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A> Egy kötés egy BindingGroup része, ha a kötés a forrás nem frissül, amíg meghívja a <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>vagy <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>a a bindinggroup Kötéscsoporthoz, kivéve, ha explicit módon beállítva a <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>tulajdonság.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A>"
  example:
  - "The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires. The application displays the current information for the item below the form. The user can submit or cancel the changes.  \n  \n The application does the following to achieve this behavior.  \n  \n-   Creates a BindingGroup and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.  \n  \n The following example creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application. The root <xref:System.Windows.Controls.StackPanel> has a BindingGroup that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously. The binding objects on the `Price` property and the `OfferExpires` property become part of the BindingGroup and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values. The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the BindingGroup.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#windowlayout)]  \n  \n The following example shows the event handlers for the application. When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the BindingGroup. If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction. If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction. When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the BindingGroup (in the previous example). `ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event and displays information about the validation error to the user. The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.  \n  \n [!code-cs[BindingGroupSnippets#WindowLogic](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#windowlogic)]\n [!code-vb[BindingGroupSnippets#WindowLogic](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#windowlogic)]  \n  \n The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the BindingGroup in the first example. The <xref:System.Windows.Controls.ValidationRule> uses the BindingGroup in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: 'public class BindingGroup : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> osztály."
  syntax:
    content: public BindingGroup ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BeginEdit
  id: BeginEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Az adatforrások egy Szerkesztés tranzakció kezdődik a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Ha a források a <xref:System.Windows.Data.BindingGroup>függőben lévő módosítások elvetése támogatja, a Szerkesztés tranzakció megkezdéséhez BeginEdit hívása hívás <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>a függőben lévő módosításainak mentése, hívja meg a <xref:System.Windows.Data.BindingGroup.CancelEdit%2A>elveti a függőben lévő módosításokat.</xref:System.Windows.Data.BindingGroup.CancelEdit%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup>       Az egyes objektumok <xref:System.Windows.Data.BindingGroup.Items%2A>, amely megvalósítja <xref:System.ComponentModel.IEditableObject>, BeginEdit hívások <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls BeginEdit when a window loads to begin the edit transaction.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi a gyűjteménye <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> objektumok, hogy a kötésben információkat tartalmaznak a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "A <xref:System.Windows.Data.BindingExpression>tartozik egy <xref:System.Windows.Data.BindingGroup>esetén a következő esetben:-a kötés forrás és a <xref:System.Windows.FrameworkElement.DataContext%2A>az elem, amelynek a <xref:System.Windows.Data.BindingGroup>vannak ugyanarra az objektumra és a <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>nincs beállítva.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingExpression>      -A <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>tulajdonság kötésének és a <xref:System.Windows.Data.BindingGroup.Name%2A>a a <xref:System.Windows.Data.BindingGroup>a ugyanazon nem nullázható értékre van beállítva, és a <xref:System.Windows.Data.BindingGroup>a kötés célelem egy szülőelemére tartozik.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>      -Ad hozzá egy <xref:System.Windows.Data.BindingExpression>való BindingExpressions.</xref:System.Windows.Data.BindingExpression>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase> BindingExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
      description: "A gyűjtemény <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> objektumok, hogy a kötésben információkat tartalmaznak a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.BindingExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CancelEdit
  id: CancelEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "A Szerkesztés tranzakció véget ér, és elveti a függőben lévő módosításokat."
  remarks: "Ez a módszer eredményezi, a források elveti a függőben lévő, ha egy adatforrás-objektum így képes, és a Szerkesztés tranzakció befejezése. A metódus frissíti a célkiszolgáló tulajdonságait a mentett forrás értékekkel.       Az egyes objektumok <xref:System.Windows.Data.BindingGroup.Items%2A>, amely megvalósítja <xref:System.ComponentModel.IEditableObject>, CancelEdit hívások <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CancelEdit to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#CancelEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[BindingGroupSnippets#CancelEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  id: CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi, hogy a kötés minden forrás függőben lévő módosítások elvetheti és visszaállítás az eredeti értékeket."
  remarks: "Ha <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject> valósítja meg a forrás elvetheti függőben lévő módosítások"
  syntax:
    content: public bool CanRestoreValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kötés minden forrás függőben lévő módosítások elvetéséhez, és állítsa vissza az eredeti értékeket; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CanRestoreValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CommitEdit
  id: CommitEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Összes futtatja a <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objektumokat, és frissíti a kötés adatforrások, ha az összes érvényesítési szabály sikeres."
  remarks: "Ha minden <xref:System.Windows.Controls.ValidationRule>sikeres, a módszer okait, a függőben lévő módosítások és a befejező Szerkesztés tranzakció, ha a forrás források objektum alkalmas erre.</xref:System.Windows.Controls.ValidationRule>       Az egyes objektumok <xref:System.Windows.Data.BindingGroup.Items%2A>, amely megvalósítja <xref:System.ComponentModel.IEditableObject>, CommitEdit hívások <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CommitEdit to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public bool CommitEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha minden <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> sikeres, az értékek pedig a források véglegesítése; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "A megadott tulajdonság és az elem javasolt értékét adja vissza."
  remarks: "Ezt a módszert a a <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>módszer segítségével hajtható végre, a forrás-értéket.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> A visszatérési érték típusa attól függ, amelynek a <xref:System.Windows.Controls.ValidationRule>következik be.</xref:System.Windows.Controls.ValidationRule> Például ha egy <xref:System.Windows.Controls.TextBox>adatok kötött egész szám típusú tulajdonság és a <xref:System.Windows.Controls.ValidationRule>hívások GetValue rendelkeznek a <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>beállítása <xref:System.Windows.Controls.ValidationStep>, a módszer egy karakterláncot ad vissza.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Ha a <xref:System.Windows.Controls.ValidationRule>rendelkezik a <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>beállítása <xref:System.Windows.Controls.ValidationStep>, a metódus visszaadja bármilyen típusú, amely a kötés konverter ad vissza.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> Ebben a példában GetValue általában egy egész számot adja vissza."
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the GetValue method to get values that the customer entered.  \n  \n [!code-cs[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#itembindgroupvalidationrule)]\n [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#itembindgroupvalidationrule)]"
  syntax:
    content: public object GetValue (object item, string propertyName);
    parameters:
    - id: item
      type: System.Object
      description: "Az objektum, amely tartalmazza a megadott tulajdonságot."
    - id: propertyName
      type: System.String
      description: "A tulajdonság eléréséhez javasolt értéke."
    return:
      type: System.Object
      description: "A javasolt tulajdonság értéke."
  overload: System.Windows.Data.BindingGroup.GetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nincs a megadott elem és a tulajdonság egy kötés."
  - type: System.Windows.Data.ValueUnavailableException
    commentId: T:System.Windows.Data.ValueUnavailableException
    description: "A megadott tulajdonság értéke nem érhető el, egy átalakítási hiba miatt, vagy mert egy korábbi érvényesítési szabály nem sikerült."
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.HasValidationError
  id: HasValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> egy érvényesítés szabályt tartalmaz."
  syntax:
    content: public bool HasValidationError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> érvényesítés szabály rendelkezik; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.HasValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.IsDirty
  id: IsDirty
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> a forrás nem írt javasolt értéket tartalmaz."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> a javasolt értéket tartalmaz, amely nem lett írva a forrás; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Items
  id: Items
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Az adatkötési objektumát által használt forrás lekérdezi a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Minden egyes forrásként használt objektum szerepel-e a cikkek tulajdonság egyszer, még akkor is, ha az objektum több kötése szolgál a forrásként. Az elemek csak egy elemet, az objektum az <xref:System.Windows.FrameworkElement.DataContext%2A>az elem, amely a <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> használ</xref:System.Windows.FrameworkElement.DataContext%2A> , amely nincs gyakran, Lehetséges, hogy egy <xref:System.Windows.Data.BindingGroup>azonban több forrásból, hogy.</xref:System.Windows.Data.BindingGroup> Például, ha a kötés objektumok megosztása azonos <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>, de különböző adatforrás-objektumok használatára, az egyes forrásként használt objektumok elemeket.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       Is lehet több objektum elemek, ha egy beágyazott tulajdonság a forrás elérési útja egy kötés oldja fel. Tegyük fel például, hogy egy <xref:System.Windows.Controls.TextBox>kötését egy része egy <xref:System.Windows.Data.BindingGroup>és annak <xref:System.Windows.FrameworkElement.DataContext%2A>van egy `Customer` objektum, amelynek típusú tulajdonság `Address`.</xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.TextBox> Ha a <xref:System.Windows.Data.Binding.Path%2A>, a <xref:System.Windows.Data.Binding>van a `Address.ZipCode` tulajdonság, a `Address` hozzáadódik a cikkek tulajdonság.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.Path%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>). On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`. The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public System.Collections.IList Items { get; }
    return:
      type: System.Collections.IList
      description: "Az adatkötési objektumát által használt forrás a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Name
  id: Name
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja azt a nevet, amely azonosítja a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>, amelyek segítségével tartalmazhat vagy zárhat ki adatkötési objektumát a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Ha a név `null`, kötéseket, amely ugyanazt az objektumot, az <xref:System.Windows.FrameworkElement.DataContext%2A>az elem, amely rendelkezik <xref:System.Windows.Data.BindingGroup>a <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> részt</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> forrása       Megadhat eltérő forrása kötéseket a <xref:System.Windows.FrameworkElement.DataContext%2A>a szülőelem, amely rendelkezik a <xref:System.Windows.Data.BindingGroup>úgy, hogy nevét a <xref:System.Windows.Data.BindingGroup>és a <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>tulajdonság egy kötés ugyanarra az értékre.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> Kizárhat, amelyek azonos forrásaként kötések <xref:System.Windows.FrameworkElement.DataContext%2A>a szülőelem, amely rendelkezik a <xref:System.Windows.Data.BindingGroup>úgy, hogy nevét a <xref:System.Windows.Data.BindingGroup>és a <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>tulajdonság egy kötés különböző értékekre.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the Name of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A nevet, amely azonosítja a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja a hogy a &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; az esemény akkor következik be, amikor állapotának egy <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> módosításokat."
  remarks: "A <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>csatolt esemény történik, amely rendelkezik a <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> elem</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Windows.Data.BindingGroup> and sets NotifyOnValidationError to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event when a <xref:System.Windows.Controls.ValidationRule> fails.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event.  \n  \n [!code-cs[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#errorhandler)]\n [!code-vb[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#errorhandler)]"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; az esemény akkor következik be, amikor állapotát egy <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> változik; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Owner
  id: Owner
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Az objektum, amely lekérdezi a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> hozzá van rendelve."
  syntax:
    content: public System.Windows.DependencyObject Owner { get; }
    return:
      type: System.Windows.DependencyObject
      description: "Az objektum, amelyhez a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> hozzá van rendelve."
  overload: System.Windows.Data.BindingGroup.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  id: SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> felhasználások célértéket még nem lettek végrehajtva a forrás."
  remarks: "Javasolt érték egy érték, amely a kötés célját módosult, de a forrás nem véglegesített. Tegyük fel például, hogy nincs-e <xref:System.Windows.Controls.TextBox>, és a <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>tulajdonság értéke <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Controls.TextBox> egy kétirányú kötés Ha a felhasználó megváltoztatja a értékének a <xref:System.Windows.Controls.TextBox>, a javasolt érték: az érték, amely a <xref:System.Windows.Controls.TextBox>előtt véglegesítése forráshoz.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       Ha SharesProposedValues van `true`, a <xref:System.Windows.Data.BindingGroup>javasolt értéket használja, ha egy kötés a bindinggroup Kötéscsoporthoz kilép, és egy másik kötés azonos forrásból csatlakozik a bindinggroup Kötéscsoporthoz.</xref:System.Windows.Data.BindingGroup>  Tegyük fel például, hogy az alkalmazás lehetővé teszi, hogy egy felhasználó több mező szerkesztése, és az adatforrás-objektum frissítése gombra kattintva. Amikor egy mező nem szerkeszti, az alkalmazás megjelenik a <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> Elkezdésekor mező szerkesztéséhez, az alkalmazás a cseréli <xref:System.Windows.Controls.TextBlock>a <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBlock> A felhasználó befejezése után ezt a mezőt szerkesztése az alkalmazás a cseréli <xref:System.Windows.Controls.TextBox>a <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Controls.TextBox> A forrás nem frissül, amíg a felhasználó a gombra kattint, mert az így az lehet az <xref:System.Windows.Controls.TextBlock>megjelenítheti a javasolt értéket.</xref:System.Windows.Controls.TextBlock> SharesProposedValues értékre állításával `true`, az alkalmazás fog megjelenni a felhasználók módosításai mező, akkor is, ha a forrás nem lett frissítve."
  syntax:
    content: public bool SharesProposedValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> felhasználások célértéket, amelyek még nincsenek véglegesítve a forrás-; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.SharesProposedValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  id: TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Próbálja meg a javasolt érték lekérése a megadott tulajdonság és az elemet."
  remarks: "TryGetValue adja vissza `false` Ha nincs kötés a megadott elem és a tulajdonság, vagy ha a megadott tulajdonság nem érhető el, egy átalakítási hiba miatt, vagy mert egy korábbi érvényesítési szabály nem sikerült.       Ezt a módszert a a <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>módszer segítségével hajtható végre, a forrás-értéket.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> A típus `value` attól függ, amelynek a <xref:System.Windows.Controls.ValidationRule>következik be.</xref:System.Windows.Controls.ValidationRule> Például ha egy <xref:System.Windows.Controls.TextBox>egy egész típusú tulajdonságához kötött adat `value` : karakterlánc, ha az <xref:System.Windows.Controls.ValidationRule>, hogy rendelkezik-e a <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>készlet <xref:System.Windows.Controls.ValidationStep>.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> hívások TryGetValue</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Ha a <xref:System.Windows.Controls.ValidationRule>rendelkezik a <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>beállítása <xref:System.Windows.Controls.ValidationStep>, milyen típusú `value` függetlenül a kötés konverter által visszaadott típus.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> Ebben a példában `value` van általában egy egész számot."
  example:
  - "The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the TryGetValue method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form. Then the example checks that if an item is over 100 dollars, it will be available for at least seven days. This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public bool TryGetValue (object item, string propertyName, out object value);
    parameters:
    - id: item
      type: System.Object
      description: "Az objektum, amely tartalmazza a megadott tulajdonságot."
    - id: propertyName
      type: System.String
      description: "A tulajdonság eléréséhez javasolt értéke."
    - id: value
      type: System.Object
      description: "Ha ez a módszer ad vissza, tartalmazza a javasolt tulajdonság értékét képviselő objektum. Ez a paraméter lett átadva nem inicializált."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a megadott tulajdonság; javasolt érték Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.UpdateSources
  id: UpdateSources
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "A kötés a konverter fut és a <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> rendelkező objektumok a <xref:System.Windows.Controls.ValidationRule.ValidationStep*>tulajdonsága <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, vagy <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> , és menti a célok értékeit az adatforrás-objektumok, ha az ellenőrzési szabályok sikertelen.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "Ez a módszer a forrás frissíti, ha minden <xref:System.Windows.Controls.ValidationRule>sikeres, de nem okoz a forrásokat a függőben lévő módosítások véglegesítéséhez, és a Szerkesztés tranzakció befejezése.</xref:System.Windows.Controls.ValidationRule> Ez azt jelenti, hogy ha az adatforrás-objektum megvalósítja <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject> Ez a módszer nem okoz hívása <xref:System.ComponentModel.IEditableObject.EndEdit%2A>hívása.</xref:System.ComponentModel.IEditableObject.EndEdit%2A> Használja a <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>metódust kell rendelkeznie a forrásokat a függőben lévő módosítások.</xref:System.Windows.Data.BindingGroup.CommitEdit%2A>"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example calls UpdateSources to validate the bindings and save the values to the source if all the validation rules succeed.  \n  \n [!code-cs[BindingGroupSnippets#UpdateSources](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#updatesources)]\n [!code-vb[BindingGroupSnippets#UpdateSources](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#updatesources)]"
  syntax:
    content: public bool UpdateSources ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az összes érvényesítési szabály sikeres; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.UpdateSources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  id: ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy tartalmaznak-e a <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Ha ValidatesOnNotifyDataError van `true`, a kötés keres, és egy adatforrás, amely megvalósítja az <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo> értesítő hibákról"
  syntax:
    content: public bool ValidatesOnNotifyDataError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  id: ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "A kötés a konverter fut, és a <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> rendelkező objektumok a <xref:System.Windows.Controls.ValidationRule.ValidationStep*>tulajdonsága <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> vagy <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "A források nem frissülnek, amikor ez a metódus meghívható."
  syntax:
    content: public bool ValidateWithoutUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az ellenőrzési szabályok sikertelen; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  id: ValidationErrors
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi a gyűjteménye <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> objektumokat, ami miatt a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> érvénytelen."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError> ValidationErrors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
      description: "A gyűjtemény <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> okozó objektumok <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> érvénytelen.  Az érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincsenek hibák."
  overload: System.Windows.Data.BindingGroup.ValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi a gyűjteménye <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objektumok az adatforrás-objektumokat, amely a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Ha egy <xref:System.Windows.Controls.ValidationRule>hozzáadódik a <xref:System.Windows.Data.BindingGroup>, a <xref:System.Windows.Data.BindingGroup>az első paraméterként kerül átadásra a <xref:System.Windows.Controls.ValidationRule.Validate%2A>metódus.</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.ValidationRule> Az objektum a javasolt értékek használatával beszerezheti az <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>vagy <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>metódus.</xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A> Az objektumok, amelyek a kötéseket forrásai kaphat a <xref:System.Windows.Data.BindingGroup.Items%2A>tulajdonság.</xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example shows the `ValidateDateAndPrice` class. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "A gyűjtemény <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objektumok az adatforrás-objektumokat, amely a <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ValueUnavailableException
  parent: System.Windows.Data
  isExternal: false
  name: ValueUnavailableException
  nameWithType: ValueUnavailableException
  fullName: System.Windows.Data.ValueUnavailableException
- uid: System.Windows.Data.BindingGroup.#ctor
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
- uid: System.Windows.Data.BindingGroup.BeginEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingExpressionBase>
  nameWithType: Collection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.CancelEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingGroup.CommitEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingGroup.HasValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.BindingGroup.Name
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
- uid: System.Windows.Data.BindingGroup.UpdateSources
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ValidationError>
  nameWithType: ReadOnlyCollection<ValidationError>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Controls.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.ValidationRules
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.#ctor*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup.BindingGroup
- uid: System.Windows.Data.BindingGroup.BeginEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit
  nameWithType: BindingGroup.BeginEdit
- uid: System.Windows.Data.BindingGroup.BindingExpressions*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
- uid: System.Windows.Data.BindingGroup.CancelEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit
  nameWithType: BindingGroup.CancelEdit
- uid: System.Windows.Data.BindingGroup.CanRestoreValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
- uid: System.Windows.Data.BindingGroup.CommitEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit
  nameWithType: BindingGroup.CommitEdit
- uid: System.Windows.Data.BindingGroup.GetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue
  nameWithType: BindingGroup.GetValue
- uid: System.Windows.Data.BindingGroup.HasValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
- uid: System.Windows.Data.BindingGroup.Name*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue
  nameWithType: BindingGroup.TryGetValue
- uid: System.Windows.Data.BindingGroup.UpdateSources*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources
  nameWithType: BindingGroup.UpdateSources
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate
  nameWithType: BindingGroup.ValidateWithoutUpdate
- uid: System.Windows.Data.BindingGroup.ValidationErrors*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
- uid: System.Windows.Data.BindingGroup.ValidationRules*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
