### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  id: SafeNCryptSecretHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor
  - Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle
  langs:
  - csharp
  name: SafeNCryptSecretHandle
  nameWithType: SafeNCryptSecretHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  type: Class
  summary: "Itt a biztonságos leíró, amely egy titkos megállapodás (NCRYPT_SECRET_HANDLE) értékét jelöli."
  remarks: "Ez az osztály kell használni, amikor egy NCRYPT_SECRET_HANDLE vár natív kóddal működik.      > [!IMPORTANT] > Ez a típus megvalósítja az <xref:System.IDisposable>felületet.</xref:System.IDisposable> Ha befejezte a típussal, ezért fel kell azt közvetlenül vagy közvetve. Arra, hogy a típus közvetlenül, hívja az <xref:System.IDisposable.Dispose%2A>metódust egy `try` / `catch` blokk.</xref:System.IDisposable.Dispose%2A> Eltávolítása után közvetve, használjon egy nyelvi szerkezet például `using` (a C#) vagy `Using` (a Visual Basic nyelvben). A &quot;Használatával az objektum, amely megvalósítja IDisposable&quot; szakaszában talál további információt a <xref:System.IDisposable>felületet a témakörben.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public sealed class SafeNCryptSecretHandle : Microsoft.Win32.SafeHandles.SafeNCryptHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  langs:
  - csharp
  name: SafeNCryptSecretHandle()
  nameWithType: SafeNCryptSecretHandle.SafeNCryptSecretHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.SafeNCryptSecretHandle()
  type: Constructor
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  summary: "Egy új példányát inicializálja a <xref href=&quot;Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle&quot;> </xref> osztály."
  syntax:
    content: public SafeNCryptSecretHandle ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle
  id: ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  langs:
  - csharp
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptSecretHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseNativeHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeNCryptHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  isExternal: false
  name: SafeNCryptSecretHandle()
  nameWithType: SafeNCryptSecretHandle.SafeNCryptSecretHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.SafeNCryptSecretHandle()
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  isExternal: false
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptSecretHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  isExternal: false
  name: SafeNCryptSecretHandle
  nameWithType: SafeNCryptSecretHandle.SafeNCryptSecretHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  isExternal: false
  name: ReleaseNativeHandle
  nameWithType: SafeNCryptSecretHandle.ReleaseNativeHandle
