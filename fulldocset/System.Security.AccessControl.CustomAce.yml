### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CustomAce
  id: CustomAce
  children:
  - System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  - System.Security.AccessControl.CustomAce.BinaryLength
  - System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CustomAce.GetOpaque
  - System.Security.AccessControl.CustomAce.MaxOpaqueLength
  - System.Security.AccessControl.CustomAce.OpaqueLength
  - System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  langs:
  - csharp
  name: CustomAce
  nameWithType: CustomAce
  fullName: System.Security.AccessControl.CustomAce
  type: Class
  summary: "Egy hozzáférés-szabályozási bejegyzés (ACE) nem definiált tagjai egyikével jelöli a <xref href=&quot;System.Security.AccessControl.AceType&quot;> </xref> enumerálása."
  remarks: "Egy CustomAce objektum tartalmaz egy hozzáférés-vezérlő bejegyzések és az adatok nem átlátszó blob."
  syntax:
    content: 'public sealed class CustomAce : System.Security.AccessControl.GenericAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  id: '#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])'
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: CustomAce(AceType,AceFlags,Byte[])
  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])
  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> osztály."
  remarks: "A `opaque` adatok nem klónozták. Ez a konstruktor hívása, ha a hívó nem tekinti megbízhatónak a forrás nem módosíthatja az adatokat az adatok előtt kell klónozható, az adatokat."
  syntax:
    content: public CustomAce (System.Security.AccessControl.AceType type, System.Security.AccessControl.AceFlags flags, byte[] opaque);
    parameters:
    - id: type
      type: System.Security.AccessControl.AceType
      description: "Az az új hozzáférés-szabályozási bejegyzés (ACE) típus. Ennek az értéknek nagyobbnak kell lennie <xref href=&quot;System.Security.AccessControl.AceType&quot;> </xref>."
    - id: flags
      type: System.Security.AccessControl.AceFlags
      description: "Hogy az öröklési öröklési propagálás kapcsolatos információkat és az új hozzáférés-vezérlő bejegyzések feltételei naplózását."
    - id: opaque
      type: System.Byte[]
      description: "Egy tömböt bájt, amely tartalmazza az adatokat az új hozzáférés-vezérlő bejegyzések. Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. A hossz a tömb nem lehet nagyobb, mint az érték a <xref href=&quot;System.Security.AccessControl.CustomAce.MaxOpaqueLength&quot;> </xref> mezőben, és négy többszörösének kell lennie."
  overload: System.Security.AccessControl.CustomAce.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Értékét a <code> type </code> paraméter nem nagyobb, mint <xref href=&quot;System.Security.AccessControl.AceType&quot;> </xref> vagy a hossza a <code> opaque </code> vagy a tömb értéke nagyobb a <xref href=&quot;System.Security.AccessControl.CustomAce.MaxOpaqueLength&quot;> </xref> mező vagy nem többszöröse négy."
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
  fullName: System.Security.AccessControl.CustomAce.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi a hosszát, a bináris megjelenítése az aktuális száma <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektum. A hossz a hozzáférés-vezérlési lista a bináris tömbbe előtt kell használni a <xref:System.Security.AccessControl.CustomAce.GetBinaryForm*>metódus.</xref:System.Security.AccessControl.CustomAce.GetBinaryForm*>"
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "A bináris megjelenítése az aktuális hosszát bájtban <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CustomAce.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Marshals tartalmát a <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektumot be a megadott bájtnál tömb megadott eltolástól kezdődően."
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "A bájttömb, amelybe a tartalmát a <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> van átadásra."
    - id: offset
      type: System.Int32
      description: "Az eltolás átadás-előkészítési elindításához."
  overload: System.Security.AccessControl.CustomAce.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>negatív, vagy túl nagy, ahhoz, hogy a teljes <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> másolását <code>array</code>."
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.GetOpaque
  id: GetOpaque
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: GetOpaque()
  nameWithType: CustomAce.GetOpaque()
  fullName: System.Security.AccessControl.CustomAce.GetOpaque()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ez társított nem átlátszó adatait <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektum."
  syntax:
    content: public byte[] GetOpaque ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Egy tömböt bájt az átlátszatlan személyes adatokat jelképező <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CustomAce.GetOpaque*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  id: MaxOpaqueLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: MaxOpaqueLength
  nameWithType: CustomAce.MaxOpaqueLength
  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Visszaadja a maximálisan megengedett egy nem átlátszó adatblobja a <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektum."
  syntax:
    content: public static readonly int MaxOpaqueLength;
    return:
      type: System.Int32
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.OpaqueLength
  id: OpaqueLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
  fullName: System.Security.AccessControl.CustomAce.OpaqueLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi a társított ez nem átlátszó adatok hossza <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektum."
  syntax:
    content: public int OpaqueLength { get; }
    return:
      type: System.Int32
      description: "A nem átlátszó visszahívási adatok hossza."
  overload: System.Security.AccessControl.CustomAce.OpaqueLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  id: SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: SetOpaque(Byte[])
  nameWithType: CustomAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Beállítja a társított nem átlátszó visszahívási adatokat <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektum."
  syntax:
    content: public void SetOpaque (byte[] opaque);
    parameters:
    - id: opaque
      type: System.Byte[]
      description: "Egy tömböt bájt ehhez az átlátszatlan visszahívási adatokat jelképező <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CustomAce.SetOpaque*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAce
  isExternal: false
  name: System.Security.AccessControl.GenericAce
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: CustomAce(AceType,AceFlags,Byte[])
  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])
  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])
- uid: System.Security.AccessControl.AceType
  parent: System.Security.AccessControl
  isExternal: false
  name: AceType
  nameWithType: AceType
  fullName: System.Security.AccessControl.AceType
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CustomAce.BinaryLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
  fullName: System.Security.AccessControl.CustomAce.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)
- uid: System.Security.AccessControl.CustomAce.GetOpaque
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetOpaque()
  nameWithType: CustomAce.GetOpaque()
  fullName: System.Security.AccessControl.CustomAce.GetOpaque()
- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: MaxOpaqueLength
  nameWithType: CustomAce.MaxOpaqueLength
  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength
- uid: System.Security.AccessControl.CustomAce.OpaqueLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
  fullName: System.Security.AccessControl.CustomAce.OpaqueLength
- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: SetOpaque(Byte[])
  nameWithType: CustomAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])
- uid: System.Security.AccessControl.CustomAce.#ctor*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: CustomAce
  nameWithType: CustomAce.CustomAce
- uid: System.Security.AccessControl.CustomAce.BinaryLength*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetBinaryForm
  nameWithType: CustomAce.GetBinaryForm
- uid: System.Security.AccessControl.CustomAce.GetOpaque*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetOpaque
  nameWithType: CustomAce.GetOpaque
- uid: System.Security.AccessControl.CustomAce.OpaqueLength*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
- uid: System.Security.AccessControl.CustomAce.SetOpaque*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: SetOpaque
  nameWithType: CustomAce.SetOpaque
