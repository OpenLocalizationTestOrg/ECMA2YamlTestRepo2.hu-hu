### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  id: KeyContainerPermissionAccessEntryCollection
  children:
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntryCollection
  nameWithType: KeyContainerPermissionAccessEntryCollection
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  type: Class
  summary: "Számoknak <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektumok. Ez az osztály nem örökölhető."
  remarks: "<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>objektumok adja meg az adott nyilvánoskulcs-tárolókra vonatkozóan hozzáférési jogosultsága.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAccessEntryCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Add(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Hozzáad egy <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektum a gyűjteményhez."
  remarks: "A <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>objektum hozzáadódik a gyűjtemény végéig.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public int Add (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektumot hozzáadni."
    return:
      type: System.Int32
      description: "Az index, ahol az új elem lett beszúrva."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessEntry</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  id: Clear
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Eltávolítja az összes a <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektumok a gyűjteményből."
  remarks: "Ezt a módszert használja a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection> kiürítése"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  id: CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "A gyűjtemény elemeinek másolja a céltömb megadott indextől kezdődő kompatibilis egydimenziós tömb."
  syntax:
    content: public void CopyTo (System.Security.Permissions.KeyContainerPermissionAccessEntry[] array, int index);
    parameters:
    - id: array
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
      description: "Az egydimenziós <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> tömb, amely az a hely az elemeket az aktuális gyűjtemény átmásolva."
    - id: index
      type: System.Int32
      description: "Az indexet a `array` mely másolása megkezdődik."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint az alsó határa <code>array</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>többdimenziós.       – vagy – a gyűjtemény elemeinek száma nagyobb, mint a rendelkezésre álló terület nem <code>index</code> a cél végére <code>array</code>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  id: Count
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Lekérdezi az elemek száma a gyűjteményben."
  remarks: "A Count tulajdonság használatával számának meghatározásához <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>objektumokat a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>gyűjtemény.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> A Count tulajdonság gyakran használatos a gyűjtemény iteráció meghatározásához a gyűjtemény felső határa."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Hány <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektumok a gyűjteményben."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Értéket ad vissza egy <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref> objektum, amely segítségével iterációt az objektumok a gyűjteményben."
  remarks: "Ez a metódus használatával hozzon létre egy <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>objektum, amely segítségével a gyűjtemény minden elem beolvasása iterációt.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>       Használja a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>gyűjtemény hivatkozott tulajdonság jelenleg beolvasni az elem enumerátor.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>       Használja a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>metódus a következő elem a gyűjteményben lévő áthelyezése enumerátor.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>       Használja a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>metódus az eredeti helyre történő enumerátor.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>      > [!NOTE] > Létrehozása után egy <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator>objektum a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>Helyezze át a számbavevő a gyűjtemény első eleme metódust meg kell hívnia a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>metódus.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator> Ellenkező esetben az elem által képviselt a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>tulajdonság nincs definiálva.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref> objektum, amely a gyűjtemény iterációt használható."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: IndexOf(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Az index lekérdezi a megadott gyűjteményének <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektumot, ha az megtalálható a gyűjteményben."
  remarks: "Ezt a módszert a megadott index számának meghatározásához <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>objektum a gyűjteményben.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> Ha a megadott <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>objektum nem található, az a –&1; értéket adja vissza.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public int IndexOf (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektum található."
    return:
      type: System.Int32
      description: "A megadott indexét <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektum a gyűjteményt, vagy –&1;, ha nincs megfelelő."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Egy érték, amely jelzi, hogy a gyűjtemény szinkronizálva van-e (többszálú futtatásra) lekérése."
  remarks: "Ez a tulajdonság valósítja meg a <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>tulajdonság, és mindig adja vissza `false`.</xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>minden esetben."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item(Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Az elem beolvasása a megadott index a gyűjteményben."
  remarks: "Az indexelő történő beolvasásához használja a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>objektum a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>tömb jelölésével, a megadott indexnél.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection> </xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntry this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Az elem elérésére nulla alapú indexét."
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektum a megadott index a gyűjteményben."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>nagyobb vagy egyenlő a gyűjtemény count."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>index</code>a rendszer negatív."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  id: Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: Remove(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Eltávolítja a megadott <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> thecollection objektumot."
  remarks: "Elem eltávolítása a gyűjteményből, ha a gyűjtemény elemeinek későbbi módosítása a indexértékekkel. Az eltávolított elemre vonatkozó összes adat törlődik. Ezt a módszert használja, ha szeretné eltávolítani egy cikket az eltávolítandó tényleges elem megadásával. Az összes elem eltávolítása a listából, használja a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear%2A>metódus.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear%2A>"
  syntax:
    content: public void Remove (System.Security.Permissions.KeyContainerPermissionAccessEntry accessEntry);
    parameters:
    - id: accessEntry
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref> objektum eltávolítása."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessEntry</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  id: SyncRoot
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Lekérdezi egy objektumot, amely segítségével szinkronizálása hozzáférése a gyűjteményhez."
  remarks: "Az ebben a megvalósításban visszaadott objektum a <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>objektum.</xref:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection>       A SyncRoot tulajdonság további információkért tekintse meg a <xref:System.Collections.ICollection.SyncRoot%2A>tulajdonsága a <xref:System.Collections.ICollection?displayProperty=fullName>felületet.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Egy objektum, amely segítségével szinkronizálása hozzáférése a gyűjteményhez."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "A gyűjtemény elemeinek másolja a céltömb megadott indextől kezdődő kompatibilis egydimenziós tömb."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Az egydimenziós tömb, amely az a hely az elemeket az aktuális gyűjtemény átmásolva."
    - id: index
      type: System.Int32
      description: "Az indexet a `array` mely másolása megkezdődik."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint az alsó határa <code>array</code>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>többdimenziós.       – vagy – a gyűjtemény elemeinek száma nagyobb, mint a rendelkezésre álló terület nem <code>index</code> a cél végére <code>array</code>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Értéket ad vissza egy <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref> objektum, amely segítségével iterációt az objektumok a gyűjteményben."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator&quot;> </xref> objektum, amely a gyűjtemény iterációt használható."
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Add(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(KeyContainerPermissionAccessEntry)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Clear()
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(KeyContainerPermissionAccessEntry[],Int32)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  spec.csharp:
  - uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
    name: KeyContainerPermissionAccessEntry
    nameWithType: KeyContainerPermissionAccessEntry
    fullName: KeyContainerPermissionAccessEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntryEnumerator
  nameWithType: KeyContainerPermissionAccessEntryEnumerator
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IndexOf(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(KeyContainerPermissionAccessEntry)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item(Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(Int32)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Remove(KeyContainerPermissionAccessEntry)
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(KeyContainerPermissionAccessEntry)
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Add
  nameWithType: KeyContainerPermissionAccessEntryCollection.Add
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Clear
  nameWithType: KeyContainerPermissionAccessEntryCollection.Clear
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: CopyTo
  nameWithType: KeyContainerPermissionAccessEntryCollection.CopyTo
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Count
  nameWithType: KeyContainerPermissionAccessEntryCollection.Count
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: KeyContainerPermissionAccessEntryCollection.GetEnumerator
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IndexOf
  nameWithType: KeyContainerPermissionAccessEntryCollection.IndexOf
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: KeyContainerPermissionAccessEntryCollection.IsSynchronized
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Item
  nameWithType: KeyContainerPermissionAccessEntryCollection.Item
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: Remove
  nameWithType: KeyContainerPermissionAccessEntryCollection.Remove
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: SyncRoot
  nameWithType: KeyContainerPermissionAccessEntryCollection.SyncRoot
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#ICollection#CopyTo*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.ICollection.CopyTo
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: KeyContainerPermissionAccessEntryCollection.System.Collections.IEnumerable.GetEnumerator
