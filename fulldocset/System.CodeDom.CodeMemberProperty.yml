### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeMemberProperty
  id: CodeMemberProperty
  children:
  - System.CodeDom.CodeMemberProperty.#ctor
  - System.CodeDom.CodeMemberProperty.GetStatements
  - System.CodeDom.CodeMemberProperty.HasGet
  - System.CodeDom.CodeMemberProperty.HasSet
  - System.CodeDom.CodeMemberProperty.ImplementationTypes
  - System.CodeDom.CodeMemberProperty.Parameters
  - System.CodeDom.CodeMemberProperty.PrivateImplementationType
  - System.CodeDom.CodeMemberProperty.SetStatements
  - System.CodeDom.CodeMemberProperty.Type
  langs:
  - csharp
  name: CodeMemberProperty
  nameWithType: CodeMemberProperty
  fullName: System.CodeDom.CodeMemberProperty
  type: Class
  summary: "A deklaráció a következő típusú tulajdonság jelöli."
  remarks: "CodeMemberProperty képviselő típusú tulajdonság deklarációjában használható.       A <xref:System.CodeDom.CodeMemberProperty.Type%2A>tulajdonság határozza meg a tulajdonság adattípusát.</xref:System.CodeDom.CodeMemberProperty.Type%2A> A <xref:System.CodeDom.CodeMemberProperty.GetStatements%2A>tulajdonság semmilyen get utasítás metódus, tulajdonság tartalmazza.</xref:System.CodeDom.CodeMemberProperty.GetStatements%2A> A <xref:System.CodeDom.CodeMemberProperty.SetStatements%2A>tulajdonság semmilyen set utasítás metódus, tulajdonság tartalmazza.</xref:System.CodeDom.CodeMemberProperty.SetStatements%2A> A <xref:System.CodeDom.CodeMemberProperty.Parameters%2A>tulajdonság határozza meg a tulajdonság, mint például az indexelési tulajdonság szükséges paramétereket.</xref:System.CodeDom.CodeMemberProperty.Parameters%2A>"
  example:
  - "The following example code demonstrates use of a CodeMemberProperty to define a `string` property with `get` and `set` accessors.  \n  \n [!code-cpp[CodeMemberPropertyExample#3](~/add/codesnippet/cpp/t-system.codedom.codemem_1_1.cpp)]\n [!code-vb[CodeMemberPropertyExample#3](~/add/codesnippet/visualbasic/t-system.codedom.codemem_1_1.vb)]\n [!code-cs[CodeMemberPropertyExample#3](~/add/codesnippet/csharp/t-system.codedom.codemem_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeMemberProperty : System.CodeDom.CodeTypeMember
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeTypeMember
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeTypeMember.Attributes
  - System.CodeDom.CodeTypeMember.Comments
  - System.CodeDom.CodeTypeMember.CustomAttributes
  - System.CodeDom.CodeTypeMember.EndDirectives
  - System.CodeDom.CodeTypeMember.LinePragma
  - System.CodeDom.CodeTypeMember.Name
  - System.CodeDom.CodeTypeMember.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: CodeMemberProperty()
  nameWithType: CodeMemberProperty.CodeMemberProperty()
  fullName: System.CodeDom.CodeMemberProperty.CodeMemberProperty()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.CodeDom.CodeMemberProperty&quot;> </xref> osztály."
  syntax:
    content: public CodeMemberProperty ();
    parameters: []
  overload: System.CodeDom.CodeMemberProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.GetStatements
  id: GetStatements
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: GetStatements
  nameWithType: CodeMemberProperty.GetStatements
  fullName: System.CodeDom.CodeMemberProperty.GetStatements
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi a gyűjteménye <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> utasítások a tulajdonsághoz."
  remarks: "Ezen utasítás egyik <xref:System.CodeDom.CodeStatementCollection>visszaadja-e a tag tulajdonság értéke.</xref:System.CodeDom.CodeStatementCollection> Használja a <xref:System.CodeDom.CodeMethodReturnStatement>vissza értéket a tulajdonság adattípusát.</xref:System.CodeDom.CodeMethodReturnStatement>"
  syntax:
    content: public System.CodeDom.CodeStatementCollection GetStatements { get; }
    return:
      type: System.CodeDom.CodeStatementCollection
      description: "A <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> , amely tartalmazza a <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> utasítások a tag tulajdonság."
  overload: System.CodeDom.CodeMemberProperty.GetStatements*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.HasGet
  id: HasGet
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: HasGet
  nameWithType: CodeMemberProperty.HasGet
  fullName: System.CodeDom.CodeMemberProperty.HasGet
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy rendelkezik-e a tulajdonság egy <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> metódus elérővel."
  remarks: >-
    > [!NOTE]

    >  Setting this property to `false` clears the <xref:System.CodeDom.CodeMemberProperty.GetStatements%2A> collection.
  syntax:
    content: public bool HasGet { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref uid=&quot;langword_csharp_Count&quot; name=&quot;Count&quot; href=&quot;&quot;> </xref> tulajdonsága a <xref:System.CodeDom.CodeMemberProperty.GetStatements*>gyűjteménye nem nulla, vagy ha a tulajdonság értékének állították be <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.CodeDom.CodeMemberProperty.GetStatements*>"
  overload: System.CodeDom.CodeMemberProperty.HasGet*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.HasSet
  id: HasSet
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: HasSet
  nameWithType: CodeMemberProperty.HasSet
  fullName: System.CodeDom.CodeMemberProperty.HasSet
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy rendelkezik-e a tulajdonság egy <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> metódus elérővel."
  remarks: "HasSet visszaadható `false` Ha a tulajdonság csak olvasható.      > [!NOTE] > E tulajdonság `false` törölni fogja a <xref:System.CodeDom.CodeMemberProperty.SetStatements%2A>gyűjtemény.</xref:System.CodeDom.CodeMemberProperty.SetStatements%2A>"
  syntax:
    content: public bool HasSet { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <> </> *> tulajdonsága a <> </> *> gyűjteménye nem nulla, ha sikertelen, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeMemberProperty.HasSet*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.ImplementationTypes
  id: ImplementationTypes
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: ImplementationTypes
  nameWithType: CodeMemberProperty.ImplementationTypes
  fullName: System.CodeDom.CodeMemberProperty.ImplementationTypes
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi a olyan kapcsolatot, amely megvalósítja a tulajdonság adattípusát."
  remarks: "A gyűjtemény által hivatkozott típusok felületek kell állnia."
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection ImplementationTypes { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref> azt jelzi, hogy a tulajdonság valósít meg adattípust."
  overload: System.CodeDom.CodeMemberProperty.ImplementationTypes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.Parameters
  id: Parameters
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: Parameters
  nameWithType: CodeMemberProperty.Parameters
  fullName: System.CodeDom.CodeMemberProperty.Parameters
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi a tulajdonság deklarációjában kifejezések gyűjteménye."
  remarks: >-
    > [!NOTE]

    >  In general, properties do not have parameters. CodeDom supports an exception to this. For any property that has the special name "Item" and one or more parameters, it will declare an indexer property for the class. However, not all languages support the declaration of indexers.
  syntax:
    content: public System.CodeDom.CodeParameterDeclarationExpressionCollection Parameters { get; }
    return:
      type: System.CodeDom.CodeParameterDeclarationExpressionCollection
      description: "A <xref href=&quot;System.CodeDom.CodeParameterDeclarationExpressionCollection&quot;> </xref> azt jelzi, hogy a tulajdonság deklarációjában kifejezések."
  overload: System.CodeDom.CodeMemberProperty.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.PrivateImplementationType
  id: PrivateImplementationType
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: PrivateImplementationType
  nameWithType: CodeMemberProperty.PrivateImplementationType
  fullName: System.CodeDom.CodeMemberProperty.PrivateImplementationType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja a illesztőfelület típusú adatokat, ha vannak ilyenek, ezt a tulajdonságot, ha személyes, megvalósítja."
  remarks: "Ez a tulajdonság által hivatkozott típus illesztőfelületnek kell lennie."
  syntax:
    content: public System.CodeDom.CodeTypeReference PrivateImplementationType { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> , hogy az illesztő adattípusát jelöli, ha bármely, a tulajdonságot, ha személyes, megvalósítja."
  overload: System.CodeDom.CodeMemberProperty.PrivateImplementationType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.SetStatements
  id: SetStatements
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: SetStatements
  nameWithType: CodeMemberProperty.SetStatements
  fullName: System.CodeDom.CodeMemberProperty.SetStatements
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi a gyűjteménye <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> utasítások a tulajdonsághoz."
  remarks: "Ebben a gyűjteményben lévő utasítások valamelyikét általában meghatározza a tulajdonság értékét. Egy metódus &quot;set&quot; elérő a utasítási gyakran, hajtsa végre, ellenőrzi, hogy szükség van-e, és azok lefordítani a megadott tulajdonság értéke. A <xref:System.CodeDom.CodePropertySetValueReferenceExpression>egy objektum hivatkozását a készlet metódusnak átadott jelöli.</xref:System.CodeDom.CodePropertySetValueReferenceExpression>"
  syntax:
    content: public System.CodeDom.CodeStatementCollection SetStatements { get; }
    return:
      type: System.CodeDom.CodeStatementCollection
      description: "A <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> , amely tartalmazza a <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> utasítások a tag tulajdonság."
  overload: System.CodeDom.CodeMemberProperty.SetStatements*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeMemberProperty.Type
  id: Type
  parent: System.CodeDom.CodeMemberProperty
  langs:
  - csharp
  name: Type
  nameWithType: CodeMemberProperty.Type
  fullName: System.CodeDom.CodeMemberProperty.Type
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja a tulajdonság adattípusát."
  syntax:
    content: public System.CodeDom.CodeTypeReference Type { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> azt jelzi, hogy a tulajdonság adattípusát."
  overload: System.CodeDom.CodeMemberProperty.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeTypeMember
  isExternal: false
  name: System.CodeDom.CodeTypeMember
- uid: System.CodeDom.CodeMemberProperty.#ctor
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: CodeMemberProperty()
  nameWithType: CodeMemberProperty.CodeMemberProperty()
  fullName: System.CodeDom.CodeMemberProperty.CodeMemberProperty()
- uid: System.CodeDom.CodeMemberProperty.GetStatements
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: GetStatements
  nameWithType: CodeMemberProperty.GetStatements
  fullName: System.CodeDom.CodeMemberProperty.GetStatements
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.CodeDom.CodeMemberProperty.HasGet
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: HasGet
  nameWithType: CodeMemberProperty.HasGet
  fullName: System.CodeDom.CodeMemberProperty.HasGet
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.CodeMemberProperty.HasSet
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: HasSet
  nameWithType: CodeMemberProperty.HasSet
  fullName: System.CodeDom.CodeMemberProperty.HasSet
- uid: System.CodeDom.CodeMemberProperty.ImplementationTypes
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: ImplementationTypes
  nameWithType: CodeMemberProperty.ImplementationTypes
  fullName: System.CodeDom.CodeMemberProperty.ImplementationTypes
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeMemberProperty.Parameters
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: Parameters
  nameWithType: CodeMemberProperty.Parameters
  fullName: System.CodeDom.CodeMemberProperty.Parameters
- uid: System.CodeDom.CodeParameterDeclarationExpressionCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeParameterDeclarationExpressionCollection
  nameWithType: CodeParameterDeclarationExpressionCollection
  fullName: System.CodeDom.CodeParameterDeclarationExpressionCollection
- uid: System.CodeDom.CodeMemberProperty.PrivateImplementationType
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: PrivateImplementationType
  nameWithType: CodeMemberProperty.PrivateImplementationType
  fullName: System.CodeDom.CodeMemberProperty.PrivateImplementationType
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.CodeMemberProperty.SetStatements
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: SetStatements
  nameWithType: CodeMemberProperty.SetStatements
  fullName: System.CodeDom.CodeMemberProperty.SetStatements
- uid: System.CodeDom.CodeMemberProperty.Type
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: Type
  nameWithType: CodeMemberProperty.Type
  fullName: System.CodeDom.CodeMemberProperty.Type
- uid: System.CodeDom.CodeMemberProperty.#ctor*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: CodeMemberProperty
  nameWithType: CodeMemberProperty.CodeMemberProperty
- uid: System.CodeDom.CodeMemberProperty.GetStatements*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: GetStatements
  nameWithType: CodeMemberProperty.GetStatements
- uid: System.CodeDom.CodeMemberProperty.HasGet*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: HasGet
  nameWithType: CodeMemberProperty.HasGet
- uid: System.CodeDom.CodeMemberProperty.HasSet*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: HasSet
  nameWithType: CodeMemberProperty.HasSet
- uid: System.CodeDom.CodeMemberProperty.ImplementationTypes*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: ImplementationTypes
  nameWithType: CodeMemberProperty.ImplementationTypes
- uid: System.CodeDom.CodeMemberProperty.Parameters*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: Parameters
  nameWithType: CodeMemberProperty.Parameters
- uid: System.CodeDom.CodeMemberProperty.PrivateImplementationType*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: PrivateImplementationType
  nameWithType: CodeMemberProperty.PrivateImplementationType
- uid: System.CodeDom.CodeMemberProperty.SetStatements*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: SetStatements
  nameWithType: CodeMemberProperty.SetStatements
- uid: System.CodeDom.CodeMemberProperty.Type*
  parent: System.CodeDom.CodeMemberProperty
  isExternal: false
  name: Type
  nameWithType: CodeMemberProperty.Type
