### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSource
  id: ObjectDataSource
  children:
  - System.Web.UI.WebControls.ObjectDataSource.#ctor
  - System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.ObjectDataSource.CacheDuration
  - System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy
  - System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency
  - System.Web.UI.WebControls.ObjectDataSource.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSource.Delete
  - System.Web.UI.WebControls.ObjectDataSource.Deleted
  - System.Web.UI.WebControls.ObjectDataSource.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSource.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSource.Deleting
  - System.Web.UI.WebControls.ObjectDataSource.EnableCaching
  - System.Web.UI.WebControls.ObjectDataSource.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSource.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSource.Filtering
  - System.Web.UI.WebControls.ObjectDataSource.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)
  - System.Web.UI.WebControls.ObjectDataSource.GetViewNames
  - System.Web.UI.WebControls.ObjectDataSource.Insert
  - System.Web.UI.WebControls.ObjectDataSource.Inserted
  - System.Web.UI.WebControls.ObjectDataSource.Inserting
  - System.Web.UI.WebControls.ObjectDataSource.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSource.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSource.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSource.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.ObjectDataSource.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSource.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSource.Select
  - System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSource.Selected
  - System.Web.UI.WebControls.ObjectDataSource.Selecting
  - System.Web.UI.WebControls.ObjectDataSource.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSource.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSource.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency
  - System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSource.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSource.TypeName
  - System.Web.UI.WebControls.ObjectDataSource.Update
  - System.Web.UI.WebControls.ObjectDataSource.Updated
  - System.Web.UI.WebControls.ObjectDataSource.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSource.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSource.Updating
  langs:
  - csharp
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
  type: Class
  summary: "Adathoz kötött vezérlők többrétegű webes alkalmazási architektúrákban található adatokat biztosító üzleti objektumot jelöli."
  remarks: "Ebben a témakörben:- [bemutatása](#introduction)      -   [célú](#purpose)      -   [adatok beolvasása](#retrieving_data)      -   [adatok műveletek végrehajtása](#performing_data_operations)      -   [-szűrési adatok](#filtering_data)      -   [gyorsítótárazását](#caching)      -   [szolgáltatások](#features)      -   [adatnézet](#data_view)      -   [használatával LINQ to SQL](#using_linq_to_sql)      -   [deklaratív Szintaxisán](#declarative_syntax) <a name=&quot;introduction&quot;> </a> ## felügyeletének bemutatása az ObjectDataSource az Ön által létrehozott osztállyal.       Létrehozhat módszereket, amelyek az adatok beolvasása és frissítése, és megadja azokat a módszereket markup ObjectDataSource vezérlőre nevét. Megjelenítés vagy visszaküldési feldolgozása során a ObjectDataSource adatforrás az Ön által megadott módszereket hív meg.       Nincs ObjectDataSource vezérlő nem vizuális megjelenítés. Ennek eredményeképpen a ObjectDataSource adatforrás nem támogatja a vizuális funkciókat, mint a <xref:System.Web.UI.DataSourceControl.EnableTheming%2A>vagy <xref:System.Web.UI.DataSourceControl.SkinID%2A>tulajdonság.</xref:System.Web.UI.DataSourceControl.SkinID%2A> </xref:System.Web.UI.DataSourceControl.EnableTheming%2A>      <a name=&quot;purpose&quot;></a>## Célja A nagyon gyakran alkalmazás tervezési módszere az, a bemutató réteg elkülönítéséhez üzleti logikát, és üzleti objektumok üzleti logikája foglalják magukban. Ezek az üzleti objektumok közötti a bemutató réteg és az adatszint, ami azt eredményezi, hogy egy alkalmazás háromrétegű architektúra különböző rétegben alkotnak. Az ObjectDataSource vezérlő lehetővé teszi a fejlesztők egy ASP.NET adatforrás-vezérlő használatához, megtartja a háromrétegű alkalmazásarchitektúrát is.       Az ObjectDataSource használ reflexiós üzleti objektumpéldányok létrehozásához és módszerek hívni beolvasása, frissítése, helyezze be, és törli az adatokat. A <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonság, amely a ObjectDataSource az osztály neve azonosítja.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Az ObjectDataSource vezérlő hoz létre, és minden metódus hívásához; osztály egyik példányához tartozó megsemmisít az objektum a memóriában élettartama idején a webes kérelem nem tartalmaz. Ez a súlyos veszi figyelembe az üzleti objektumhoz, amelyekkel sok erőforrást igényel, vagy más okból létrehozási drága. Költséges objektum használatával nem lehet a egy optimális tervezési szempontokat, de az objektum életciklusának segítségével szabályozhatják a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>események.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>      > [!NOTE] > A módszereket, amelyek azonosítják a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, és <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>Tulajdonságok lehet metódusok vagy `static` (`Shared` a Visual Basic nyelvben) módszerek.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Ha a megoldások a következők `static` (`Shared` a Visual Basic nyelvben), az üzleti objektumhoz egy példánya nem jön létre, és a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>események nem aktiválódnak.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>      <a name=&quot;retrieving_data&quot;></a>## Adatok beolvasása közben adatainak lekérése üzleti objektumot, állítsa be a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonságot, amely lekéri az adatokat a metódus neve.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Ha a metódus nem ad vissza egy <xref:System.Collections.IEnumerable>vagy <xref:System.Data.DataSet>objektumot, az objektum be van burkolva a futtatókörnyezet egy <xref:System.Collections.IEnumerable>gyűjtemény.</xref:System.Collections.IEnumerable> </xref:System.Data.DataSet> </xref:System.Collections.IEnumerable> Ha a metódus-aláírás paraméterekkel rendelkezik, hozzáadhat <xref:System.Web.UI.WebControls.Parameter>objektumok a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>gyűjtemény, majd társítanak azokat az értékeket, amelyeket szeretné, hogy a megadott metódust az <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.Parameter> Ahhoz, hogy az ObjectDataSource adatforrás-vezérlő paraméterek a paraméterek meg kell egyeznie a nevét és típusát a paraméterek a metódus aláírásában. További információkért lásd: [paraméterek használata a ObjectDataSource vezérlőhöz](~/add/includes/ajax-current-ext-md.md).       Az ObjectDataSource vezérlő kér le adatokat amikor csak a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódust.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ez a metódus a metódus által megadott programozott hozzáférést biztosít <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> A metódus által megadott a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság a ObjectDataSource adatforráshoz kötött vezérlők által automatikusan nevezik amikor a `DataBind` metódust.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Ha a `DataSourceID` adathoz kötött vezérlő tulajdonságához, a vezérlő automatikusan kötődik adatokat az adatforrásból, igény szerint. Beállítás a `DataSourceID` tulajdonsága az ajánlott módszer az ObjectDataSource vezérlők kötése egy adathoz kötött vezérlő. Másik lehetőségként beállíthatja a `DataSource` tulajdonságot, de majd explicit módon kell hívnia a `DataBind` az adathoz kötött vezérlő metódus. Hívása a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus programozott módon bármikor adatok lekéréséhez.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>       További információ a Kötés adathoz kötött vezérlők adatforrás-vezérlők: [kötés használatával végzett adatforrás-vezérlőhöz](http://msdn.microsoft.com/en-us/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).      <a name=&quot;performing_data_operations&quot;></a>## Végrehajtása adatok műveletek függően az üzleti objektumhoz az ObjectDataSource szabályozó képességeit működik együtt, adatok műveletek, például a frissítéseket, a beszúrások, és a törlések végezheti el. A data műveletek végrehajtására, állítsa be a megfelelő metódus nevét és a kapcsolódó paramétereket a végrehajtani kívánt művelethez. Például a frissítési művelet be a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>tulajdonság nevére, az üzleti objektumot módszer, amely elvégzi a frissítést, és adja hozzá a szükséges paramétereket a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Ha a ObjectDataSource vezérlő adathoz kötött vezérlő tartozik, a paraméterek az adathoz kötött vezérlő adhatók hozzá. Ebben az esetben kell győződjön meg arról, hogy a paraméter a metódus mező nevének egyeznie az adathoz kötött vezérlő. A frissítés végrehajtása során a <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>metódus hívása, explicit módon a kód vagy automatikusan egy adathoz kötött vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Az azonos általános mintát követi a <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>és <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>operations.</xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Üzleti objektumok rendszer feltételezi, hogy egyszerre végre adatrekordot operatív egy ilyen típusú, nem pedig kötegelni.      <a name=&quot;filtering_data&quot;></a>## ObjectDataSource vezérlő által beolvasott adatok jeleníthetők meg adatok szűrése a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság, ha az adatokat adja vissza a rendszer egy <xref:System.Data.DataSet>vagy <xref:System.Data.DataTable>objektum.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Beállíthatja a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>tulajdonságot a szűrési kifejezés formátumban szintaxis karakterláncot, és kötési értékek a megadott paraméterek kifejezés a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>      <a name=&quot;caching&quot;></a>## Gyorsítótárazás Bár a ObjectDataSource adatforrás nem őriz meg az üzleti objektumhoz példányának címzett több kérés során azt gyorsítótárazásával által azonosított metódus hívásának eredménye a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Amíg az adatok gyorsítótárazott, a következő hívásokat a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus visszaadni a gyorsítótárazott adatokat az üzleti objektumhoz létrehozásának és előhívásának helyett a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>következőt reflexió használatával.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Gyorsítótárazás megadható, hogy ne az objektum létrehozása, és csökkenti a memória az adatok metódus hívása a a webkiszolgálón. Az ObjectDataSource automatikusan gyorsítótárazza az adatokat amikor a <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>tulajdonsága `true`, és a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>tulajdonsága, amely a gyorsítótárban tárolja az adatokat, mielőtt a rendszer törli a gyorsítótár másodpercben.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> Azt is megadhatja a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>tulajdonság és egy nem kötelező <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Az ObjectDataSource vezérlő teszi lehetővé minden típusú adatok gyorsítótárazásához, de meg kell gyorsítótár erőforrások vagy állapotban, amely nem osztható meg több kérés kiszolgálásához-objektumokra (például a megnyitott <xref:System.Data.SqlClient.SqlDataReader>objektum), mert az objektum ugyanazt a példányát fogja több érkező kérelmek kiszolgálása során.</xref:System.Data.SqlClient.SqlDataReader>      <a name=&quot;features&quot;></a>## Szolgáltatások a következő táblázat ismerteti az ObjectDataSource vezérlőelem szolgáltatásait.      | Képesség |} Követelmények |}   |----------------|------------------|   | Kiválasztása |} Állítsa be a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>nevére, az üzleti objektumhoz módszer, amely kiválasztja adatokat, és tartalmazza a szükséges paramétereket <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>gyűjtemény vagy programozott módon, vagy egy adathoz kötött vezérlő segítségével. |}   | Rendezés |} A paraméter, amely hordoz magában, ha a rendezési feltételek <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>metódus nevét a <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A>tulajdonsága. |}   | Szűrés |} Állítsa be a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>tulajdonság egy szűrési kifejezés, és opcionálisan adja hozzá a paramétereket a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>gyűjtemény szűrje az adatokat a Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódust.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>  </xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A></xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> A metódus <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság által megadott értéket kell visszaadnia egy <xref:System.Data.DataSet>vagy <xref:System.Data.DataTable>. |}   | Lapozás |} Forrás adatlapozást támogatott, ha a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>metódus tartalmaz paramétereinek beolvasása rekordok maximális száma és az első rekordra beolvasása indexét.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Ezek a paraméterek nevei kell állítani a <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>és <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>Tulajdonságok, illetve.</xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Adathoz kötött vezérlő tudja elvégezni az önálló lapozási lehet, még akkor is, ha a ObjectDataSource vezérlő nem támogatja a lapozófájl közvetlenül a által megadott metódus a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Az adathoz kötött vezérlő végezhető el ez a követelmény az, hogy a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság által megadott metódus visszatérési a <xref:System.Collections.ICollection>felületet megvalósító objektum. |}   | Frissítése |} Állítsa be a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>nevére, az üzleti objektumhoz módszer, amely frissíti az adatokat, és a szükséges paramétereket tartalmazza a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>gyűjteményben. |}   | Törlése |} Állítsa be a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>nevére, az üzleti objektumot módszer vagy függvény, amely törli az adatokat, és tartalmazza a szükséges paramétereket a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>gyűjteményben. |}   | Beszúrása |} A <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>tulajdonsága az üzleti objektumhoz módszer vagy függvény által beszúrt adatok nevét, és a szükséges paramétereket tartalmazza a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>gyűjteményben. |}   | Gyorsítótárazás |} A tulajdonsága <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> `true`, és a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>és <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>Tulajdonságok használni a gyorsítótárazott adatokat szeretne a gyorsítótárazási viselkedés alapján. |}      > [!NOTE] > Használatakor az ObjectDataSource osztály frissítése, vagy szúrja be az adatokat az ügyfél megadott karakterláncok vannak nem automatikusan az ügyfél kulturális környezet formátumból formátumra alakítja át a kiszolgáló kulturális környezet.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Collections.ICollection> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Például az ügyfél kulturális környezet lehet egyben nn/hh/éééé a dátumformátum, és lehet, hogy a kiszolgálón a dátumformátum hh/nn/éééé. Ebben az esetben 2009. október 5 szeretné megadni egy <xref:System.Web.UI.WebControls.TextBox>mint 5/10/2009 vezérlőként, de a 2009. Előfordulhat, hogy 10., értelmezését.</xref:System.Web.UI.WebControls.TextBox> 2009. október 15 15/10/2009 szeretné megadni, és szeretné elutasították, mivel érvénytelen dátumot.      <a name=&quot;data_view&quot;></a>## Adatainak megtekintése, az összes adatforrás-vezérlők, a ObjectDataSource vezérlő egy adatforrás nézet osztály társítva. Az ObjectDataSource vezérlő pedig a felület, amelyen a lap fejlesztői adatait, a <xref:System.Web.UI.WebControls.ObjectDataSourceView>osztály a felület adathoz kötött vezérlők együttműködik.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Emellett a <xref:System.Web.UI.WebControls.ObjectDataSourceView>osztály az adatforrás-vezérlő képességeit ismerteti, és a tényleges munkát elvégzi.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Az ObjectDataSource vezérlőnek csak egy kapcsolódó <xref:System.Web.UI.WebControls.ObjectDataSourceView>, és mindig nevű `DefaultView`.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Amíg a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum tesz elérhetővé a <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>metódus, a tulajdonságok és metódusok számos burkolt, és közvetlenül a ObjectDataSource vezérlő által elérhetővé tett tárolókra.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> A színfalak mögött a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum hajtja végre az összes adat műveleteket, köztük a beolvasása, beszúrni, frissítése, törlése, szűrési és az adatok rendezése.</xref:System.Web.UI.WebControls.ObjectDataSourceView> További információkért lásd: <xref:System.Web.UI.WebControls.ObjectDataSourceView>.</xref:System.Web.UI.WebControls.ObjectDataSourceView>      <a name=&quot;using_linq_to_sql&quot;></a>## Használja a &quot;LINQ to SQL&quot; LINQ to SQL osztály ObjectDataSource vezérlő használható. Ehhez állítsa be a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonságot az adatkörnyezet osztály neve</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Is beállíthat a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, és <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>módszerek a megfelelő műveleteket módszerekhez az adatkörnyezet osztályba.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Létre kell hoznia egy eseménykezelő a következő <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>esemény ahhoz, hogy megszakítja a adatkörnyezet osztály megsemmisítése</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ez a lépés szükség, mert &quot;LINQ to SQL&quot; támogatja az elhalasztott végrehajtás, mivel a ObjectDataSource vezérlő megpróbálja az adatkörnyezetben eldobásakor a Select művelet után. SQL osztályokra LINQ létrehozásával kapcsolatos további információkért lásd: [hogyan: hozzon létre LINQ to SQL osztályok webes projekt](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081). Példa bemutatja, hogyan adatok környezetben osztály megsemmisítése megszakítja, tekintse meg a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>      ## Az Entity Framework, használatával segítségével is ObjectDataSource vezérlő az Entity Framework. További információkért lásd: [az Entity Framework és a ObjectDataSource adatforrás-vezérlés használatával](http://go.microsoft.com/fwlink/?LinkId=209117).      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:ObjectDataSource       CacheDuration=&quot;string|Infinite&quot;       CacheExpirationPolicy=&quot;Absolute|Sliding&quot;       CacheKeyDependency=&quot;string&quot;       ConflictDetection=&quot;OverwriteChanges|CompareAllValues&quot;       ConvertNullToDBNull=&quot;True|False&quot;       DataObjectTypeName=&quot;string&quot;       DeleteMethod=&quot;string&quot;       EnableCaching=&quot;True|False&quot;       EnablePaging=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       FilterExpression=&quot;string&quot;       ID=&quot;string&quot;       InsertMethod=&quot;string&quot;       MaximumRowsParameterName=&quot;string&quot;       OldValuesParameterFormatString=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleted=&quot;Deleted event handler&quot;       OnDeleting=&quot;Deleting event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnFiltering=&quot;Filtering event handler&quot;       OnInit=&quot;Init event handler&quot;       OnInserted=&quot;Inserted event handler&quot;       OnInserting=&quot;Inserting event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnObjectCreated=&quot;ObjectCreated event handler&quot;       OnObjectCreating=&quot;ObjectCreating event handler&quot;       OnObjectDisposing=&quot;ObjectDisposing event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelected=&quot;Selected event handler&quot;       OnSelecting=&quot;Selecting event handler&quot;       OnUnload=&quot;Unload event handler&quot;       OnUpdated=&quot;Updated event handler&quot;       OnUpdating=&quot;Updating event handler&quot;       runat=&quot;server&quot;       SelectCountMethod=&quot;string&quot;       SelectMethod=&quot;string&quot;       SkinID=&quot;string&quot;       SortParameterName=&quot;string&quot;       SqlCacheDependency=&quot;string&quot;       StartRowIndexParameterName=&quot;string&quot;       TypeName=&quot;string&quot;       UpdateMethod=&quot;string&quot;       Visible=&quot;True|False&quot;   >           <DeleteParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </DeleteParameters>           <FilterParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </FilterParameters>           <InsertParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </InsertParameters>           <SelectParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </SelectParameters>           <UpdateParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </UpdateParameters>   </asp:ObjectDataSource>   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  \n  \n This section shows an ObjectDataSource in markup in an .aspx page and it shows the business objects that it works with. The example is the .aspx page. It contains a <xref:System.Web.UI.WebControls.GridView> control that is bound to an ObjectDataSource control. The ObjectDataSource control markup specifies the name of the business object and the name of the business object method to call in order to retrieve data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_105_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_105_1.aspx)]  \n  \n The following example shows the business object that the ObjectDataSource control in the .aspx page uses. (Many other ObjectDataSource code examples use this business object also.) The example consists of the following two basic classes:  \n  \n-   The `EmployeeLogic` class is the business logic class that the ObjectDataSource uses.  \n  \n-   The `NorthwindEmployee` class defines the data object that is returned by the `GetAllEmployees` method of the `EmployeeLogic` class.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n This set of example classes works with the Northwind Traders database, which is available with Microsoft SQL Server and Microsoft Access. For a complete working example, you must compile and use these classes with the .aspx page example that is provided. For information about how to install the Northwind Traders database, see [How to: Install Sample Databases](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_105_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_105_2.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Selecting")]

      [System.ComponentModel.DefaultProperty("TypeName")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class ObjectDataSource : System.Web.UI.DataSourceControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.DataSourceControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: ObjectDataSource()
  nameWithType: ObjectDataSource.ObjectDataSource()
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> osztály."
  syntax:
    content: public ObjectDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: ObjectDataSource(String,String)
  nameWithType: ObjectDataSource.ObjectDataSource(String,String)
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectDataSource(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> a megadott típus és adatok lekérését metódus nevét a osztályt."
  remarks: "Értékét a `typeName` paraméter egy teljesen minősített, amely a Bin vagy App_Code könyvtárában található kód és lehet egy teljesen minősített típusnév kódot, amely regisztrálva van a globális szerelvény-gyorsítótárban. Ha használja a globális szerelvény-gyorsítótárban, hozzá kell adni a megfelelő hivatkozást a `assemblies` a Machine.config vagy Web.config konfigurációs fájl részét."
  syntax:
    content: public ObjectDataSource (string typeName, string selectMethod);
    parameters:
    - id: typeName
      type: System.String
      description: "Az osztály nevét, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> működik együtt."
    - id: selectMethod
      type: System.String
      description: "A metódus neve vagy nem működik, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> elindítja az adatok lekéréséhez."
  overload: System.Web.UI.WebControls.ObjectDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheDuration
  id: CacheDuration
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: CacheDuration
  nameWithType: ObjectDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.ObjectDataSource.CacheDuration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja az időtartamot (másodpercben), hogy az adatforrás-vezérlő gyorsítótárazza az adatokat, amely lekéri a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő támogatja az adatok gyorsítótárazása.</xref:System.Web.UI.WebControls.ObjectDataSource> Hívások adatok gyorsítótárazása történik, amíg a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus olvashatók be a gyorsítótárból, nem pedig az üzleti adatobjektumot, amely a <xref:System.Web.UI.WebControls.ObjectDataSource>együttműködik.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ha a lejár a gyorsítótár, a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus adatokat tölt le az üzleti objektumhoz, és újra majd gyorsítótárba helyezi az adatok.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>       A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő automatikusan gyorsítótárazza az adatokat amikor a <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>tulajdonsága `true` és a CacheDuration tulajdonsága érték nagyobb, mint 0, amely megadja, hogy hány másodpercig, amely a gyorsítótárban tárolja az adatokat, mielőtt a rendszer törli a gyorsítótár-bejegyzés.</xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> A 0 érték azt jelzi, hogy egy végtelenül hosszú gyorsítótár.       A gyorsítótárat az időtartam kombinációja szabályozását és a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>beállítás.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>tulajdonság értéke a <xref:System.Web.UI.DataSourceCacheExpiry>érték, a <xref:System.Web.UI.WebControls.ObjectDataSource>gyorsítótárazza az adatokat az első hívásakor a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus és a tartalom legfeljebb ennyi idő alatt a CacheDuration tulajdonság által megadott a memóriában tárolja.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Az adatok előfordulhat, hogy mikorra várható időtartama időpont előtt, a memória van szüksége. A gyorsítótár majd frissítése a következő hívása során a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>tulajdonsága <xref:System.Web.UI.DataSourceCacheExpiry>értéket, az adatforrás-vezérlő gyorsítótárazza az adatokat az első hívásakor a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódust, de az időszak, amelynek magánál tartja a gyorsítótárban minden ezt követő hívásakor alaphelyzetbe állítja a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> A gyorsítótár nem tevékenység esetén, amely a CacheDuration tulajdonság értéke a legutóbbi hívásának óta ideje lejár a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how an <xref:System.Web.UI.WebControls.ObjectDataSource> object supports caching. The second code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching with an <xref:System.Web.UI.WebControls.ObjectDataSource> object.  \n  \n The following code example demonstrates how an <xref:System.Web.UI.WebControls.ObjectDataSource> control supports caching. To enable caching, you must implement the method that retrieves data, which is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, to return the data as a <xref:System.Data.DataSet> object. In this example, the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true`, and the CacheDuration and <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> properties are set. The <xref:System.Web.UI.WebControls.ObjectDataSource> caches data that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property for 30 seconds.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1024_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_6#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1024_1.aspx)]  \n  \n The following code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching with an <xref:System.Web.UI.WebControls.ObjectDataSource> control. In the base implementation of the `EmployeeLogic` class, the `GetAllEmployees` method returns an <xref:System.Collections.ArrayList> object. Instead of refactoring the object completely to work with the <xref:System.Web.UI.WebControls.ObjectDataSource> on a Web Forms page, a wrapper method named `GetAllEmployeesAsDataSet` is added that returns a set of `NorthwindEmployee` data as a <xref:System.Data.DataSet>.  \n  \n This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ObjectDataSource> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1024_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_5#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1024_2.cs)]"
  syntax:
    content: public virtual int CacheDuration { get; set; }
    return:
      type: System.Int32
      description: "Hány másodpercig, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> eredményeit gyorsítótárazza a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>tulajdonság hívása.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*> Az alapértelmezett érték a 0. Az érték nem lehet negatív."
  overload: System.Web.UI.WebControls.ObjectDataSource.CacheDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy
  id: CacheExpirationPolicy
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: CacheExpirationPolicy
  nameWithType: ObjectDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a gyorsítótár lejárati viselkedését, hogy a időtartama, kombinálva a gyorsítótár az adatforrás-vezérlő használó működését mutatja be."
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő támogatja az adatok gyorsítótárazása.</xref:System.Web.UI.WebControls.ObjectDataSource> Hívások adatok gyorsítótárazása történik, amíg a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus olvashatók be a gyorsítótárból, nem pedig az üzleti adatobjektumot, amely a <xref:System.Web.UI.WebControls.ObjectDataSource>együttműködik.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ha a lejár a gyorsítótár, a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus adatokat tölt le az üzleti objektumhoz, és újra majd gyorsítótárba helyezi az adatok.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>       A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő automatikusan gyorsítótárazza az adatokat amikor a <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>tulajdonsága `true` és a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>tulajdonsága érték nagyobb, mint 0, amely megadja, hogy hány másodpercig, amely a gyorsítótárban tárolja az adatokat, mielőtt a rendszer törli a gyorsítótár-bejegyzés.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> A 0 érték azt jelzi, hogy a gyorsítótár végtelenül hosszú ideig.       A gyorsítótárat az időtartam és a CacheExpirationPolicy beállítás szabályozását. Ha a CacheExpirationPolicy tulajdonság értéke a <xref:System.Web.UI.DataSourceCacheExpiry>érték, a <xref:System.Web.UI.WebControls.ObjectDataSource>gyorsítótárazza az adatokat az első hívásakor a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus és legfeljebb ennyi idő alatt, amely megadja a memóriában tárolja a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> Az adatok előfordulhat, hogy mikorra várható időtartama időpont előtt, a memória van szüksége. A gyorsítótár majd frissítése a következő hívása során a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ha a CacheExpirationPolicy tulajdonság értéke a <xref:System.Web.UI.DataSourceCacheExpiry>értéket, az adatforrás-vezérlő gyorsítótárazza az adatokat az első hívásakor a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódust, de alaphelyzetbe állítja a időszak, amelynek magánál tartja a gyorsítótárba minden ezt követő hívása a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.DataSourceCacheExpiry> A gyorsítótár nem tevékenység esetén, amely egyenlő ideje lejár a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>tulajdonság utolsó hívása a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how an <xref:System.Web.UI.WebControls.ObjectDataSource> object supports filtering and caching. The second code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching and filtering with an <xref:System.Web.UI.WebControls.ObjectDataSource> object.  \n  \n The following code example demonstrates how an <xref:System.Web.UI.WebControls.ObjectDataSource> control supports filtering and caching. To enable filtering and caching, you must implement the method that retrieves data, which is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, to return the data as a <xref:System.Data.DataSet> object. In this example, caching is enabled because the `EmployeeLogic` object returns data as a <xref:System.Data.DataSet>, the <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> property is set to `true`, and the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> and CacheExpirationPolicy properties are set. The <xref:System.Web.UI.WebControls.ObjectDataSource> caches data that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property for 30 seconds.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1282_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_6#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1282_1.aspx)]  \n  \n The following code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching and filtering with an <xref:System.Web.UI.WebControls.ObjectDataSource> control. In the base implementation of the `EmployeeLogic` class, the `GetAllEmployees` method returns an <xref:System.Collections.ArrayList>. Instead of refactoring the object completely to work with the <xref:System.Web.UI.WebControls.ObjectDataSource> on a Web Forms page, a wrapper method named `GetAllEmployeesAsDataSet` is added that returns a set of `NorthwindEmployee` data as a <xref:System.Data.DataSet>. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ObjectDataSource> class.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1282_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_5#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1282_2.cs)]"
  syntax:
    content: public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }
    return:
      type: System.Web.UI.DataSourceCacheExpiry
      description: "Egy a <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> értékeket. Az alapértelmezett érték <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency
  id: CacheKeyDependency
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: CacheKeyDependency
  nameWithType: ObjectDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a felhasználó által definiált kulcs függőség, amely csatolva van minden adatot az adatforrás-vezérlő által létrehozott objektumok."
  remarks: "A CacheKeyDependency tulajdonság bármely tetszőleges karakterlánc értékre állítható be.       Minden gyorsítótár objektumot Ha lejárt a kulcs explicit módon lejárt. Ez lehetővé teszi, hogy által létrehozott gyorsítótár-bejegyzéseket érvénytelenné válnak a <xref:System.Web.UI.WebControls.ObjectDataSource>saját oldalról code programozott.</xref:System.Web.UI.WebControls.ObjectDataSource>       A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő támogatja az adatok gyorsítótárazása.</xref:System.Web.UI.WebControls.ObjectDataSource> Hívások adatok gyorsítótárazása történik, amíg a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus olvashatók be a gyorsítótárból, nem pedig az üzleti adatobjektumot, amely a <xref:System.Web.UI.WebControls.ObjectDataSource>együttműködik.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ha a lejár a gyorsítótár, a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus adatokat tölt le az üzleti objektumhoz, és újra majd gyorsítótárba helyezi az adatok.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>       A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő automatikusan gyorsítótárazza az adatokat amikor a <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>tulajdonsága `true` és a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>tulajdonsága érték nagyobb, mint 0, amely megadja, hogy hány másodpercig, amely a gyorsítótárban tárolja az adatokat, mielőtt a rendszer törli a gyorsítótár-bejegyzés.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> A 0 érték azt jelzi, hogy egy végtelenül hosszú gyorsítótár.       Beállíthatja a CacheKeyDependency tulajdonságát a függőséget által létrehozott összes gyorsítótár-bejegyzéseket létrehozni a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő és a kulcsot.</xref:System.Web.UI.WebControls.ObjectDataSource> Akkor is lejár a gyorsítótár-bejegyzéseket programozott módon bármikor ehhez lejártként kell megjelölni a kulcsot. A kulcs használatával lejár a <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=fullName>az aktuális CacheKeyDependency paraméter értékével megegyező a metódust.</xref:System.Web.Caching.Cache.Remove%2A?displayProperty=fullName>       Egy egyedi gyorsítótár-bejegyzés jön létre minden egyes kombinációjához a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, és <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Több <xref:System.Web.UI.WebControls.ObjectDataSource>szabályozza a gyorsítótár bejegyzések forgatókönyveiben használhatók ahol töltődnek be adatokat, és az azonos típusú, metódus és paraméterek.</xref:System.Web.UI.WebControls.ObjectDataSource>"
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that retrieve records from the Employees table in the Northwind database.  \n  \n The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control. The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database. The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve and display the employee record that is selected by the user.  \n  \n Caching is enabled for the <xref:System.Web.UI.WebControls.ObjectDataSource> control. Therefore, each record is retrieved only one time from the database. The CacheKeyDependency property is set to \"EmployeeDetails\", but any string value can work as the key. The Web page also includes a <xref:System.Web.UI.WebControls.Button> control that the user can click to expire the cached data.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_180_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_180_1.aspx)]  \n  \n The second example shows a handler for the <xref:System.Web.UI.Control.Load> event and a handler for the <xref:System.Web.UI.WebControls.Button.Click> event of the <xref:System.Web.UI.WebControls.Button> control. The <xref:System.Web.UI.Control.Load> event handler creates a cache item with a key set to the CacheKeyDependency value. The <xref:System.Web.UI.WebControls.Button.Click> event handler removes the cache item whose key is equal to the CacheKeyDependency value. When the cache item is removed, all the cached data that is dependent on the key is expired.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_180_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_180_2.vb)]  \n  \n The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and the Employees table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_180_3.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_180_3.cs)]"
  syntax:
    content: public virtual string CacheKeyDependency { get; set; }
    return:
      type: System.String
      description: "Egy kulcs, amely azonosítja az összes objektumok hozta létre a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSource.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSource.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdez vagy beállít egy értéket, amely meghatározza, függetlenül attól, a rendszer átadja az új értékekkel a <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> metódus vagy a régi és új értékeinek kerülnek átadásra a <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> metódust."
  remarks: "Ez a tulajdonság határozza meg, hogy paramétereket a régi és új értékeinek által megadott metódus vonatkoznak a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Például, ha ez a metódus által megadott a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság értéket ad vissza egy <xref:System.Data.DataTable>oszlopokkal vezérlő `Name` és `Number`, és a ConflictDetection beállítást tulajdonság értéke a <xref:System.Web.UI.ConflictOptions>mezőben paraméterek létrejönnek az `Name` és `Number` a a `Update` metódus.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Ha a ConflictDetection beállítást tulajdonság értéke a <xref:System.Web.UI.ConflictOptions>érték, paraméterek létrejönnek az `Name`, `Number`, `original_Name`, és `original_Number`.</xref:System.Web.UI.ConflictOptions> (Az eredeti értékeket a paraméterek a pontos neve függ a <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>tulajdonságot.)</xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> A <xref:System.Web.UI.WebControls.ObjectDataSource>majd határozza meg, hogy a metódus, amely szerepel a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>tulajdonságnak egyező paraméterek.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       Egyidejű vezérlő olyan módszer, amely adatokat tárolja az adatok olvasása és módosul a tárolóban, ha több ügyfél elérése és módosítása ugyanazokat az adatokat hogyan vezérelni. Például egy ügyfél adatokat olvas, és megadja a felhasználóknak, miközben egy másik ügyfél ugyanazokat az adatokat olvas, és megjeleníti azt egy másik felhasználó. Ha mindkét felhasználók frissítheti az adatokat, és küldje el az adattárolási, nem várt eredményt fordulhatnak elő, mert mindkét ügyfelek előfordulhat, hogy adjon meg eltérő értékeket ugyanazokat az adatokat. Ütközés tekintendő. A ConflictDetection beállítást tulajdonságának a <xref:System.Web.UI.ConflictOptions>érték, a `Update` metódus ezután összehasonlíthatja a régi és új értékeket ütközések észlelésére, és szükség szerint kezelhesse az eredeti adatforrás.</xref:System.Web.UI.ConflictOptions>       A ConflictDetection beállítást tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>"
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Egy a <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> értékeket. Az alapértelmezett érték <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSource.ConflictDetection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSource.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> egy frissítési, beszúrási vagy törlési művelet átadott értékek automatikusan konvertálásához <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> való a <xref href=&quot;System.DBNull.Value&quot;> </xref> érték által a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő."
  remarks: "Nem konvertálása `null` számára a <xref:System.DBNull.Value>érték hibát okozhat futási időben.</xref:System.DBNull.Value> A ConvertNullToDBNull tulajdonság ezzel jelezheti e <xref:System.Web.UI.WebControls.Parameter>egy frissítési, beszúrási vagy törlési művelet átadott értékek automatikusan konvertálásához `null` számára a <xref:System.DBNull.Value>érték által a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.DBNull.Value> </xref:System.Web.UI.WebControls.Parameter>"
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, ha van ilyen <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> értékei <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objektumok átadott a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő automatikusan alakulnak <xref href=&quot;System.DBNull.Value&quot;> </xref> értékeket, ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSource.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a nevét, egy osztály, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlőelem használja az egyik paraméter egy frissítés, Beszúrás vagy Adatműveletek, ahelyett, hogy át a egyedi értékeket az adathoz kötött vezérlő törlése."
  remarks: "Több átadott paraméterek megadása helyett a <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, és <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>módszerek, létrehozhat egy olyan objektum, amely több mező adatértékeit.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Az egyik objektum a módszereket, számos paraméter helyett kerülnek.       Az alapértelmezett viselkedését egy <xref:System.Web.UI.WebControls.ObjectDataSource>adathoz kötött vezérlő kötött vezérlő, hogy az adathoz kötött vezérlő létrehoz egy <xref:System.Web.UI.WebControls.Parameter>egyes paramétereket az adatforrás-objektumot.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.ObjectDataSource> Ha az üzleti objektumhoz sok mezőből áll, az eredményül kapott is metódusnak sok mező. DataObjectTypeName tulajdonságával lehetővé teszi egy adja meg, hogy minden adat mezőjében tulajdonsággal rendelkezik. Ezt követően az helyett a metódusnak több paraméterek átadása, a futtatókörnyezet egy objektumot hoz létre, és beállítja minden tulajdonságot. Ez egy objektum hozzáadódik a metódus hívásához a paraméterek gyűjteményében.       DataObjectTypeName tulajdonságával megadott típusnak rendelkeznie kell egy alapértelmezett konstruktorral, amelyek nincsenek paraméterei, ezért a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő hozhat létre a típus egy példánya.</xref:System.Web.UI.WebControls.ObjectDataSource> A típus is rendelkeznie kell a beállítható tulajdonságai, amelyek lehetővé teszik a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő feltölti az objektum az az adathoz kötött vezérlő átadott értékekkel.</xref:System.Web.UI.WebControls.ObjectDataSource> A tulajdonságneveket a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő várhatóan pontosan egyezik az adathoz kötött vezérlő által átadott értékek paraméternevén.</xref:System.Web.UI.WebControls.ObjectDataSource>       Ha a DataObjectTypeName tulajdonság értéke és az <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő adathoz kötött vezérlő, a módszerek által megadott társítva a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>és <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>Tulajdonságok DataObjectTypeName tulajdonságával megadott típusú egy paramétert kell rendelkezniük.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A>tulajdonság értéke a <xref:System.Web.UI.ConflictOptions>érték, a módszer, amely megadja a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>tulajdonság csak egy paramétere DataObjectTypeName tulajdonságával megadott típusú lehet.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A>tulajdonság értéke a <xref:System.Web.UI.ConflictOptions>érték, a módszer, amely megadja a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>tulajdonság DataObjectTypeName tulajdonságával megadott típusú két paraméterrel kell rendelkeznie.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Az első paraméter tartalmazza az eredeti értékeket; a második paraméter tartalmazza az új értékekkel.       DataObjectTypeName tulajdonságával gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>, amely társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A>"
  example:
  - "The section contains two code examples. The first code example demonstrates how to implement a type that combines all parameter values into one object, using the DataObjectTypeName property. The second code example shows the Web page that uses the two classes that are used in the first code example.  \n  \n The following code example demonstrates how to implement a type that combines all parameter values into one object, using the DataObjectTypeName property. The select method of the `AggregateData` class returns a <xref:System.Data.DataTable> object with two columns named `Name` and `Number`. Similarly, the `NewData` class defines two read/write properties, `Name` and `Number`. The `Insert` method of the `AggregateData` class takes one parameter of type `NewData`. The `TypeName` property of the <xref:System.Web.UI.WebControls.ObjectDataSource> is set to `AggregateData` and the DataObjectTypeName property is set to `NewData`.  \n  \n [!code-cs[ObjectDataSourceDataObjectTypeName#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_183_1.cs)]\n [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_183_1.vb)]  \n  \n The following code example shows the Web page that uses the two classes that are used in the preceding code example.  \n  \n [!code-cs[ObjectDataSourceDataObjectTypeName#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_183_2.aspx)]\n [!code-vb[ObjectDataSourceDataObjectTypeName#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_183_2.aspx)]"
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "Részlegesen vagy teljesen minősített osztálynevét, amely azonosítja az objektum típusa, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> paramétereként használható egy <> </> *>, <> </> *>, vagy egy <xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>művelet.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*> Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Delete
  id: Delete
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Delete()
  nameWithType: ObjectDataSource.Delete()
  fullName: System.Web.UI.WebControls.ObjectDataSource.Delete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy törlési művelet által azonosított metódus meghívásával végrehajtja a <> </> *> paramétereket, a tulajdonság a <> </> *> gyűjtemény."
  remarks: "A törlési művelet végrehajtása, előtt a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>metódus lehívásra kerül kell kiadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>eseményt, vizsgálja meg a paraméterek értékeit, és bármely előfeldolgozása előtt Delete műveletet végrehajtani.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> A törlési művelet végrehajtása a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum reflexió használatával az objektum által azonosított példányt létrehozni a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> A metódus által azonosított majd meghívja a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>tulajdonság használatával a hozzá tartozó <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> A törlés paraméterek kapcsolódó adathoz kötött vezérlő származik, ha a name paraméterek a következők szerint jön létre a <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> A Delete művelet befejezése után a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>metódus lehívásra kerül kell kiadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>esemény visszatérési értékek, a kimeneti paraméterek és a kivételek vizsgálata, valamint bármely utófeldolgozás végrehajtásához.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>       A Delete metódust ad a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>metódusában a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>      ## Adathoz kötött vezérlők amikor a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő társítva van egy adathoz kötött vezérlő, többek között a <xref:System.Web.UI.WebControls.GridView>vezérlő, nincs szükség a Delete metódus hívása a lap kódjában.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ObjectDataSource> A Delete metódus közvetlenül által indított az adathoz kötött vezérlő helyette.       További információ a paraméter az egyesítés, objektum élettartama, és a metódus feloldásához: <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  syntax:
    content: public int Delete ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy érték, amely a mögöttes adatokat tároló, a törölt sorok számát jelenti. Ha a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows*>tulajdonsága a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> állítható be a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource.Deleted&quot;> </xref> esemény; ellenkező esetben -1.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows*>"
  overload: System.Web.UI.WebControls.ObjectDataSource.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSource.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSource.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, amikor egy <xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>művelet befejeződött.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>"
  remarks: "Kezeli a törölt eseményt, vizsgálja meg a visszatérési érték vagy kimeneti paraméterek értékét, vagy annak meghatározásához, hogy az kivétel után egy <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>művelet befejeződött.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> A visszatérési érték, a kimeneti paraméterek és a kivételkezelő tulajdonságok érhetők el a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektum, amely a eseményhez társított.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Használhatja a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektum a törölt sorok számának visszaadása a <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Ehhez az szükséges, állítsa be a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> Ha a törölt sorok számát adja vissza a metódus által megadott a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>tulajdonság értéke érhető el a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The second code example shows the `EmployeeLogic` class that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. Initially, the <xref:System.Web.UI.WebControls.GridView> control displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the delete operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the operation is performed and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the operation has completed to perform exception handling. In this code example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindEmployeeDeleted` method.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_116_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_116_1.aspx)]  \n  \n The following code example shows the `EmployeeLogic` class that is used in the preceding code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_116_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_116_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSource.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a metódus vagy függvény neve, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő hív meg törli az adatokat."
  remarks: "Az üzleti objektumhoz egy adatrekordot törli egyszerre, nem pedig egy kötegben feltételezi.       A DeleteMethod tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>       Győződjön meg arról, hogy a paraméter nevének beállítása a <xref:System.Web.UI.WebControls.ObjectDataSource>lévő vezérlése a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>gyűjtemény felel meg a select metódus által visszaadott oszlopneveit.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>      ## A módszer a DeleteMethod tulajdonság által azonosított lehet példánymetódusnak objektum élettartama vagy egy `static` (`Shared` a Visual Basic nyelvben) metódust. Ha egy példánymetódus, az üzleti objektumhoz létrehozott és megsemmisül minden alkalommal, amikor a DeleteMethod tulajdonság neve. Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>események dolgozni az üzleti objektumhoz a DeleteMethod tulajdonság metódus meghívása előtt.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Emellett kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>eseményt, amely a DeleteMethod tulajdonság neve után következik be.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ha az üzleti objektumhoz megvalósítja a <xref:System.IDisposable>felületet, a <xref:System.IDisposable.Dispose%2A>metódus lehívásra kerül, mielőtt objektum megsemmisül.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable> Ha a metódus egy `static` (`Shared` a Visual Basic nyelvben) metódust, az üzleti objektumhoz soha nem jön létre, és nem tudja kezelni a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>események.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>      ## Paraméter egyesítése paraméterek kerülnek be a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>gyűjtemény három forrásból származó: – a az adathoz kötött vezérlő futási időben.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>      -A a `DeleteParameters` elem, deklaratív módon.      -A a `Deleting` metódus, deklaratív módon.       Először a paramétereket, amelyek akkor jönnek létre, az adathoz kötött vezérlők hozzáadódnak a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Például ha a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő kötve van egy <xref:System.Web.UI.WebControls.GridView>vezérlő, amely rendelkezik az oszlopok `Name` és `Number`, paramétereinek `Name` és `Number` van hozzá a gyűjteményhez.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ObjectDataSource> A paraméter pontos neve függ a <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Ezek a paraméterek adattípusa `string`. A Tovább, a paraméterek szerepelnek a `DeleteParameters` elem kerülnek. Ha egyik paraméterének a `DeleteParameters` paraméterként, amely már szerepel ilyen nevű elem található a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>gyűjtemény, a meglévő paraméter úgy módosul, hogy felel meg a megadott paraméter a `DeleteParameters` elem.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Általában ez segítségével módosítható a paraméterben megadott adat típusa. Végezetül programozott módon hozzáadhat és távolítsa el a paramétereket a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>esemény, amely előtt következik be a <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>metódus futása.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> A metódus meg van oldva, miután a paraméterek egyesítve lesznek. A következő szakaszban tárgyalt metódus megoldás.      ## Módszer feloldása során a <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>metódus lehívásra kerül, az adathoz kötött vezérlő, a paraméterek létrehozott deklaratív módon az adatok mezőit a `DeleteParameters` elemet, és a paraméterek hozzáadott a <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>eseménykezelő összes egyesített.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> (További információkért lásd az előző szakaszban.) A <xref:System.Web.UI.WebControls.ObjectDataSource>objektum majd megpróbálja megkeresni a metódust kell meghívni.</xref:System.Web.UI.WebControls.ObjectDataSource> Először egy vagy több módszert a DeleteMethod tulajdonság a megadott nevű keresi. Ha nem megfelelő, egy <xref:System.InvalidOperationException>kivétel történt.</xref:System.InvalidOperationException> Ha van egyezés, majd a jelek paraméterneveknek egyeztetéséhez. Tegyük fel például, a megadott típus a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonságnak nevű két módszer `DeleteARecord`.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Egy `DeleteARecord` egy paraméterrel rendelkezik `ID`, míg a másik `DeleteARecord` két paraméterrel rendelkezik `Name` és `Number`. Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>gyűjtemény neve csak egy paraméter tartozik `ID`, a `DeleteARecord` metódus csak a `ID` paraméter neve.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> A paraméter típusa nem vette a módszerek megoldását. A paraméterek sorrendje nem lényeges.       Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>tulajdonság értéke, a módszer megoldódott-e más módon.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> A <xref:System.Web.UI.WebControls.ObjectDataSource>megadott a DeleteMethod tulajdonság típusú egy paramétert fogad, amely nevű metódus megadott keresi a <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Ebben az esetben a paraméter neve nem lényeges."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The second code example shows the `EmployeeLogic` class that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. Initially, the <xref:System.Web.UI.WebControls.GridView> control displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the delete operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the operation has completed to perform exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindDataException` delegate.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_23_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_23_1.aspx)]  \n  \n The following code example shows the `EmployeeLogic` class that is used in the preceding code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_23_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_23_2.cs)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "Karakterlánc, amely a metódus nevét vagy nem működik, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> törli az adatokat használ. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSource.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A paraméterek gyűjteményében által használt paramétereit tartalmazó lekérdezi a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod*>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod*>"
  remarks: "Nevét és típusát a DeleteParameters gyűjteményben szereplő paraméterek nevét és a paraméterek típusát meg kell egyeznie a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>metódus-aláírás.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> A paraméterek nevei nem vonatkoznak a <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>tulajdonság és a kis-és nagybetűket.</xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> A gyűjtemény paraméterek az adathoz kötött vezérlő, a megadott paraméterek, deklaratív és a paraméterek programozott módon hozzáadott adatokról függ. További információkért lásd: &quot;Paraméter egyesítése&quot; a <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>és [paraméterek használata a ObjectDataSource vezérlőhöz](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>       Az DeleteParameters tulajdonság lekéri a <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>tulajdonság által tartalmazott a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>       További információ a paraméter az egyesítés, objektum élettartama, és a metódus feloldásához: <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The second code example shows the `EmployeeLogic` class that is used in the first code example.  \n  \n The following code example demonstrates how to use the DeleteParameters property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. Initially, the <xref:System.Web.UI.WebControls.GridView> control displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event is called with two parameters. One parameter, `EmpID`, comes from the <xref:System.Web.UI.WebControls.DataGrid> control, and is based on the <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> property. The other parameter comes from the declarative DeleteParameters property. The `EmployeeLogic` class overloads the `DeleteEmployee` method. One overload takes a `NorthwindEmployee` parameter, and the other takes an <xref:System.Int32> parameter named `anID`. In the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event, the entries in the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> property are adjusted to include only one parameter named `anID` with the value from `original_EmpID`. When the event handler exists, the matching `DeleteEmployee` method is called.  \n  \n The following code example shows the Web page that displays the <xref:System.Web.UI.WebControls.DataGrid> control and handles the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_11#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_729_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_729_1.aspx)]  \n  \n The following code example shows the `EmployeeLogic` class that is used in the preceding code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_729_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_11#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_729_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> , amely tartalmazza a által használt paraméterek a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod*>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSource.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSource.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSource.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, mielőtt egy <xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>művelet.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>"
  remarks: "Kezeli a törlés eseményét további paraméterek, ellenőrizze az alkalmazás adott inicializálási végrehajtásához, vagy módosítsa a paramétert értékek előtt a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlőn a törlési művelet.</xref:System.Web.UI.WebControls.ObjectDataSource> A paraméterek érhetők el, mint egy <xref:System.Collections.IDictionary>gyűjteményt, amely hozzáfér a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>tulajdonságot, amelynek tesz elérhetővé a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       A törlési művelet megszakíthatja úgy, hogy a <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>való `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The second code example shows the `EmployeeLogic` class that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. Initially, the <xref:System.Web.UI.WebControls.GridView> control displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the delete operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the operation has completed to perform exception handling. In this code example, if a `NorthwindDataException` is thrown, it is handled by the `NorthwindEmployeeDeleted` method.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example shows the `EmployeeLogic` class that is used in the preceding code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: EnableCaching
  nameWithType: ObjectDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.ObjectDataSource.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő engedélyezve van az adatok gyorsítótárazás."
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő támogatja az adatok gyorsítótárazása.</xref:System.Web.UI.WebControls.ObjectDataSource> Hívások adatok gyorsítótárazása történik, amíg a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus adatainak lekérése a gyorsítótár nem pedig a <xref:System.Web.UI.WebControls.ObjectDataSource>az üzleti objektumhoz egy példányának létrehozása és az adatok metódus hívása.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Ha a lejár a gyorsítótár, a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus adatokat tölt le az üzleti objektumhoz, és újra majd gyorsítótárba helyezi az adatok.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>       A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő automatikusan gyorsítótárazza az adatokat, amikor a EnableCaching tulajdonsága `true` és a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>tulajdonsága érték nagyobb, mint 0, amely megadja, hogy hány másodpercig, amely a gyorsítótárban tárolja az adatokat, mielőtt a rendszer törli a gyorsítótár-bejegyzés.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> A 0 érték azt jelzi, hogy egy végtelenül hosszú gyorsítótár."
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that retrieve records from the Employees table in the Northwind database.  \n  \n The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control. The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database. The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve and display the employee record that is selected by the user.  \n  \n Caching is enabled for the <xref:System.Web.UI.WebControls.ObjectDataSource> control. Therefore, each record is retrieved only one time from the database. The <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> property is set to \"EmployeeDetails\", but any string value can work as the key. The Web page also includes a <xref:System.Web.UI.WebControls.Button> control that the user can click to expire the cached data.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_657_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_657_1.aspx)]  \n  \n The second example shows a handler for the <xref:System.Web.UI.Control.Load> event and a handler for the <xref:System.Web.UI.WebControls.Button.Click> event of the <xref:System.Web.UI.WebControls.Button> control. The <xref:System.Web.UI.Control.Load> event handler creates a cache item with a key set to the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> value. The <xref:System.Web.UI.WebControls.Button.Click> event handler removes the cache item whose key is equal to the <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> value. When the cache item is removed, all the cached data that is dependent on the key is expired.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_657_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_657_2.vb)]  \n  \n The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and the Employees table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_657_3.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_657_3.cs)]"
  syntax:
    content: public virtual bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatok gyorsítótárazás engedélyezve van az adatforrás-vezérlő; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSource.EnableCaching*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A EnableCaching tulajdonsága <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> amikor a metódus által megadott a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>tulajdonság értéket ad vissza egy <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSource.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSource.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy az adatforrás-vezérlő támogatja-e az adatkészletet, amely lekérdezi a lapozást."
  remarks: "Lapozás által a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő kezeli az EnablePaging beállítás <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, és <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>tulajdonságainak a <xref:System.Web.UI.WebControls.ObjectDataSource>és adjon meg egy select metódusnak a megfelelő paraméterekkel rendelkező az üzleti objektumhoz.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Ha az EnablePaging tulajdonság értéke `true`, a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>két további paraméterek, a kért első sorának és kért sorok száma a gyűjteménybe.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> A két paraméter által meghatározott megnevezett a <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>és <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> A `Select` metódus kell visszaadni a kért számú sorok, a megadott indextől kezdődő. Az adatokat nem lehet, hogy egyenletesen osztás az oldalméret, mert az utolsó lap kevesebb sort is tartalmazhatnak. Így a kért sorok száma nem a ténylegesen a visszaadott sorok maximális számát.       A társított adathoz kötött vezérlő engedélyezve van a lapozás, amikor az adathoz kötött vezérlő meghívja a `Select` metódust használ a kezdőindex és a szükséges sorok számát. Továbbá ha a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>tulajdonság értéke, az adathoz kötött vezérlő meghívja a metódust a személyhívó vezérlők megjelenítése előtt.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Például ha egy <xref:System.Web.UI.WebControls.GridView>vezérlőnek egy lap mérettel 5, és a metódus által megadott lapozása a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>tulajdonság 20 adja vissza, csak 4 oldal jelennek meg a személyhívó.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.GridView>       Az EnablePaging tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>"
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.  \n  \n The Web page contains an <xref:System.Web.UI.WebControls.ObjectDataSource> control whose EnablePaging property is set to `true`. The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set to the name of a method that returns the total number of records in the query. The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property and the <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property are set to the names of the parameters that are used in the Select method. The page also contains a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_678_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_678_1.aspx)]  \n  \n The second example shows a handler for the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=fullName> event of the <xref:System.Web.UI.WebControls.DropDownList> control. The code in the handler sets the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property to the user's selection.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_678_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_678_2.vb)]  \n  \n The third example shows the data access class that retrieves data from the Customers table. It includes a method named `GetSubsetOfEmployees`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The example also includes a method named `GetEmployeeCount`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The class uses LINQ to query the Customers table. The example requires a LINQ to SQL class that represents the Northwind database and Customers table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_678_3.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_678_3.vb)]"
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatforrás-vezérlő támogatja az adatok lapozást lekérdezi a; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSource.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSource.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSource.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a szűrési kifejezés, amely akkor érvényes, ha ez a metódus által megadott a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>tulajdonság nevezik.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő támogatja a szűrési adatok csak akkor, ha a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus értéket ad vissza egy <xref:System.Data.DataSet>vagy <xref:System.Data.DataTable>objektum.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       A FilterExpression tulajdonsághoz használt szintaxisa a formázási karakterlánc stílusú kifejezés. A szűrő kifejezés szintaxisa ugyanazt a szintaxist, amelyet az elfogad az <xref:System.Data.DataColumn.Expression%2A>tulajdonság.</xref:System.Data.DataColumn.Expression%2A> Paraméterek való hozzáadásakor a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>gyűjtemény-formátumú karakterlánc helyőrzők is használható.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Például a `&quot;{0}&quot;` helyettesítéséhez paraméterértékeket a kifejezésben. A helyőrzők helyett a paraméter indexe megfelelően a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       A FilterExpression tulajdonságban paramétereket is megadhat. Ha a paraméter típusát is egy karaktert vagy karakterláncot, tegye idézőjelek között a paraméter. Idézőjelek esetén nincs szükség, ha a paraméter egy numerikus típus.       A <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>gyűjtemény tartalmazza a paraméterek, a helyőrzők a FilterExpression tulajdonságban található kiértékeli.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       A FilterExpression tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>      > [!NOTE] > Ellenőriznie kell a szűrő paraméterérték származó, az ügyfél. A futásidejű egyszerűen helyettesíti a paraméter értéke a szűrőkifejezés, és úgy, hogy alkalmazza a <xref:System.Data.DataSet>vagy <xref:System.Data.DataTable>által visszaadott objektum a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataSet> Biztonsági intézkedésként a FilterExpression tulajdonság segítségével korlátozza az eredmények számát, ellenőrizni kell a paraméterek értékeit, a szűrés bekövetkezte előtt."
  example:
  - "The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox> control, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, enter the full name of the employee in the <xref:System.Web.UI.WebControls.TextBox>, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_597_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_597_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering. For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_597_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_597_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "A szűrési kifejezés, amely akkor érvényes, ha a metódus vagy függvény által azonosított lekért adatmennyiséget jelölő karakterlánccá a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSource.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A FilterExpression tulajdonság lett beállítva, és a <xref:System.Web.UI.WebControls.ObjectDataSource.Select*>metódus nem ad vissza egy <xref href=&quot;System.Data.DataSet&quot;> </xref> vagy <xref href=&quot;System.Data.DataTable&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSource.Select*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSource.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSource.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy szűrési művelet előtt következik be."
  remarks: "A szűrés eseményének szűrőértékek paraméter előtt az érvényesítés műveletek végrehajtásához a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő szűrő műveletet hajt végre.</xref:System.Web.UI.WebControls.ObjectDataSource> A kiválasztott művelet megszakíthatja úgy, hogy a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>való `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Az esemény akkor következik be, ha csak a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>tulajdonság értéke.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       A szűrés esemény gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=fullName>az esemény a <xref:System.Web.UI.WebControls.ObjectDataSourceView>, amely társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=fullName>      > [!IMPORTANT] > Ellenőriznie kell a szűrő paraméterérték származó, az ügyfél. A futásidejű egyszerűen helyettesíti a paraméter értéke a szűrőkifejezés, és úgy, hogy alkalmazza a <xref:System.Data.DataSet>vagy <xref:System.Data.DataTable>által visszaadott objektum a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataSet> Ha használja a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>tulajdonság eredmények, a szűrés bekövetkezése előtt ellenőrizni kell a paraméterértékek száma korlátozható biztonsági intézkedésként.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSource.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Bármely paraméter helyőrzőt társított paraméterek gyűjteménye lekérdezi a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression*>karakterlánc.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression*>"
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő támogatja a szűrési adatok csak akkor, ha a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus értéket ad vissza egy <xref:System.Data.DataSet>vagy <xref:System.Data.DataTable>objektum.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       A használt szintaxis a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>a Formátum-karakterlánc stílusú kifejezés.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> A szűrő kifejezés szintaxisa ugyanazt a szintaxist, amelyet az elfogad az <xref:System.Data.DataColumn.Expression%2A>tulajdonság.</xref:System.Data.DataColumn.Expression%2A> Paraméterek FilterParameters gyűjteményhez való hozzáadásakor is használható a Szövegformátum helyőrzőinek-karakterlánc. Például a `&quot;{0}&quot;` helyettesítéséhez paraméterértékeket a kifejezésben. A helyőrzők helyett a paraméter FilterParameters gyűjtemény indexe megfelelően.       Megadhatja, hogy a paraméterek a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Ha a paraméter is egy karaktert vagy karakterláncot, tegye a paraméter szimpla idézőjelek között szerepel. Idézőjelek esetén nincs szükség, ha a paraméter egy numerikus típus.       Az FilterParameters tulajdonság lekéri a <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>tulajdonság által tartalmazott a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> object to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of a middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> or <xref:System.Data.DataTable> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox> control, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> object that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  You should validate any filter parameter value that you receive from the client. The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method. If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_647_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_647_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering. For a complete working example, you must compile and use these classes with the Web Forms code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_647_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_647_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> bármely paraméter helyőrzők található a társított paraméterek készletét tartalmazza, amely a <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression*>"
  overload: System.Web.UI.WebControls.ObjectDataSource.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Beállíthatja a <> </> *> tulajdonság és a <> </> *> metódus nem ad vissza egy <xref href=&quot;System.Data.DataSet&quot;> </xref> vagy <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: ObjectDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.ObjectDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Az elnevezett adatforrásnézet, az adatforrás-vezérlő társított kéri le."
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő támogatja a csak egy adatforrásnézet.</xref:System.Web.UI.WebControls.ObjectDataSource> Az összes adatforrás nézet-objektumok, az a <xref:System.Web.UI.WebControls.ObjectDataSourceView>kapcsolódó adatokkal verziókezelő határozza meg a képességei, hajtja végre a szükséges adatok lekérése a mögöttes adatokat tároló összes munkáját, például rendezés, beszúrni, törlése és a frissítési műveleteket hajtja végre.</xref:System.Web.UI.WebControls.ObjectDataSourceView>       A GetView metódus készült adathoz kötött vezérlők által hívása nem kódja."
  syntax:
    content: protected override System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "A beolvasandó nézet nevét. Mivel a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> csak egy nézetet támogat `viewName` figyelmen kívül hagyja."
    return:
      type: System.Web.UI.DataSourceView
      description: "A <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> nevű <xref uid=&quot;langword_csharp_DefaultView&quot; name=&quot;DefaultView&quot; href=&quot;&quot;> </xref> , amely társítva van a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSource.GetView*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott <code> viewName </code> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy valami feltételtag <xref uid=&quot;langword_csharp_DefaultView&quot; name=&quot;DefaultView&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: ObjectDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.ObjectDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Nézet objektum-lista képviselő nevek társított gyűjteménye lekéri a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> objektum."
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő csak egy, nevű nézetet támogat `DefaultView`, az annak alapjául szolgáló adatok.</xref:System.Web.UI.WebControls.ObjectDataSource> A GetViewNames metódus Ez egy nézet neve egyelemű gyűjteményének beolvasása.       A GetViewNames metódus készült adathoz kötött vezérlők által hívása nem kódja."
  syntax:
    content: protected override System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Egy <xref:System.Collections.ICollection>társított nézeteket nevét tartalmazza, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.ObjectDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Insert
  id: Insert
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Insert()
  nameWithType: ObjectDataSource.Insert()
  fullName: System.Web.UI.WebControls.ObjectDataSource.Insert()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Beszúrási műveletet végez a metódust, amely azonosítja a <> </> *> tulajdonság és a paraméterek a <> </> *> gyűjtemény."
  remarks: "Az Insert művelet elvégzése előtt a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>metódus lehívásra kerül kell kiadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>eseményt, vizsgálja meg a paraméterek értékeit, és bármely előfeldolgozása az Insert művelet végrehajtásához.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> Az insert művelet végrehajtásához a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum reflexió használatával az objektum által azonosított példányt létrehozni a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> A metódus által azonosított majd meghívja a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>tulajdonság használatával a hozzá tartozó <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Az Insert művelet befejezése után a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>metódus lehívásra kerül kell kiadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>esemény visszatérési értékek, a kimeneti paraméterek és a kivételek vizsgálata, valamint bármely utófeldolgozás végrehajtásához.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>       Az Insert metódus gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>metódusában a <xref:System.Web.UI.WebControls.ObjectDataSourceView>, amely társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       További információ a paraméter az egyesítés, objektum élettartama, és a metódus feloldásához: <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>      ## Adathoz kötött vezérlők amikor a <xref:System.Web.UI.WebControls.ObjectDataSource>objektum társítva van egy adathoz kötött vezérlő, többek között a <xref:System.Web.UI.WebControls.GridView>vezérlő, nincs szükség az Insert metódus hívása a lap kódjában.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ObjectDataSource> Az Insert metódus közvetlenül által indított az adathoz kötött vezérlő helyette."
  syntax:
    content: public int Insert ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy érték, amely a mögöttes adatokat tároló beszúrt sorok számát jelöli."
  overload: System.Web.UI.WebControls.ObjectDataSource.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSource.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSource.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, amikor egy <xref:System.Web.UI.WebControls.ObjectDataSource.Insert*>művelet befejeződött.</xref:System.Web.UI.WebControls.ObjectDataSource.Insert*>"
  remarks: "Kezeli az Inserted eseményt, vizsgálja meg a visszatérési érték vagy kimeneti paraméterek értékét, vagy annak meghatározásához, hogy az kivétel után egy <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>művelet befejeződött.</xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> A visszatérési érték, a kimeneti paraméterek és a kivételkezelő tulajdonságok érhetők el a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektum, amely a eseményhez társított.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSource.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSource.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, mielőtt egy <xref:System.Web.UI.WebControls.ObjectDataSource.Insert*>művelet.</xref:System.Web.UI.WebControls.ObjectDataSource.Insert*>"
  remarks: "További paraméterek, ellenőrizze az alkalmazás adott inicializálási végrehajtásához beszúrásához eseményének, vagy módosítsa a paramétert értékek előtt a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlőn az insert művelet.</xref:System.Web.UI.WebControls.ObjectDataSource> A paraméterek érhetők el, mint egy <xref:System.Collections.IDictionary>gyűjteményt, amely hozzáfér a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>tulajdonságot, amelynek tesz elérhetővé a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. Initially, the <xref:System.Web.UI.WebControls.DetailsView> displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property identifies which method performs the insert operation.  \n  \n In this example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_105_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_105_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience. For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_105_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_105_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSource.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a metódus vagy függvény neve, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő adatokat beszúrnia hív meg."
  remarks: "Az üzleti objektumhoz feltételezett, hogy egy adatrekordot beszúrása egyszerre, nem pedig egy kötegben.       Az InsertMethod tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>objektum.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>      ## A módszer az InsertMethod tulajdonság által azonosított lehet példánymetódusnak objektum élettartama vagy egy `static` (`Shared` a Visual Basic nyelvben) metódust. Ha egy példánymetódus, az üzleti objektumhoz létrehozott és megsemmisül minden alkalommal, amikor az InsertMethod tulajdonság által megadott metódus lehívásra kerül. Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>események dolgozni az üzleti objektumhoz az InsertMethod tulajdonság metódus meghívása előtt.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Is kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>eseményt, amely a megadott metódus után jelenik meg a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>tulajdonság nevezik.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ha az üzleti objektumhoz megvalósítja a <xref:System.IDisposable>felületet, a <xref:System.IDisposable.Dispose%2A>metódus lehívásra kerül, mielőtt objektum megsemmisül.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable> Ha a metódus `static` (`Shared` a Visual Basic nyelvben), az üzleti objektumhoz soha nem jön létre, és nem tudja kezelni a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>események.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>      ## Paraméter egyesítése paraméterek kerülnek be a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>gyűjtemény három forrásból származó: – a az adathoz kötött vezérlő futási időben.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>      -A a `InsertParameters` elem, deklaratív módon.      -A a `Inserting` metódus, programozott módon.       Először a paramétereket, amelyek akkor jönnek létre, az adathoz kötött vezérlők hozzáadódnak a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Például ha a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő kötve van egy <xref:System.Web.UI.WebControls.GridView>vezérlő, amely rendelkezik az oszlopok `Name` és `Number`, paramétereinek `Name` és `Number` van hozzá a gyűjteményhez.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ObjectDataSource> Ezek a paraméterek adattípusa `string`. A Tovább, a paraméterek szerepelnek a `InsertParameters` elem kerülnek. Ha egyik paraméterének a `InsertParameters` paraméterként, amely már szerepel ilyen nevű elem található a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>kell egyeznie a paraméter megadott gyűjteményt, a meglévő paraméter módosul a `InsertParameters` elem.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Általában ez segítségével módosítható a paraméterben megadott adat típusa. Végezetül programozott módon hozzáadhat és távolítsa el a paramétereket a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>esemény, amely előtt következik be a <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>metódus futása.</xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> A metódus meg van oldva, miután a paraméterek egyesítve lesznek. A következő szakaszban tárgyalt metódus megoldás.      > [!IMPORTANT] > Ellenőriznie kell a bármely paraméter értéke, az ügyfél kapott. A futtatókörnyezet egyszerűen helyettesíti a paraméter értéke az InsertMethod tulajdonság.      ## Módszer feloldása során a <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>metódus lehívásra kerül, az adathoz kötött vezérlő, a paraméterek létrehozott deklaratív módon az adatok mezőit a `InsertParameters` elemet, és a paraméterek hozzáadott a <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>eseménykezelő összes egyesített.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> (További információkért lásd az előző szakaszban.) A <xref:System.Web.UI.WebControls.ObjectDataSource>objektum majd megpróbálja megkeresni a metódust kell meghívni.</xref:System.Web.UI.WebControls.ObjectDataSource> Először egy vagy több módszert az InsertMethod tulajdonság a megadott nevű keresi. Ha nem megfelelő, egy <xref:System.InvalidOperationException>kivétel történt.</xref:System.InvalidOperationException> Ha van egyezés, majd a jelek paraméterneveknek egyeztetéséhez. Tegyük fel például, egy típust, amely megadja a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonságnak nevű két módszer `InsertARecord`.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Egy `InsertARecord` egy paraméterrel rendelkezik `ID`, míg a másik `InsertARecord` két paraméterrel rendelkezik `Name` és `Number`. Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>gyűjtemény neve csak egy paraméter tartozik `ID`, a `InsertARecord` metódus csak a `ID` paraméter neve.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> A paraméter típusa nem vette a módszerek megoldását. A paraméterek sorrendje nem lényeges.       Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>tulajdonság értéke, a módszer megoldódott-e más módon.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> A <xref:System.Web.UI.WebControls.ObjectDataSource>megadott az InsertMethod tulajdonság típusú egy paramétert fogad, amely nevű metódus megadott keresi a <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Ebben az esetben a paraméter neve nem lényeges."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. Initially, the <xref:System.Web.UI.WebControls.DetailsView> displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the insert operation.  \n  \n In this example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1235_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1235_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience. For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1235_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1235_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "Karakterlánc, amely a metódus nevét vagy nem működik, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> beilleszteni adatokat használ. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSource.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A paraméterek gyűjteményében által használt paramétereit tartalmazó lekérdezi a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod*>"
  remarks: "Nevét és típusát a InsertParameters gyűjteményben szereplő paraméterek nevét és a paraméterek típusát meg kell egyeznie a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>tulajdonság aláírás.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> A paraméterek nevei különbözőnek számítanak a kis. Az adathoz kötött vezérlők, amelyek paraméterek, például a használatakor a <xref:System.Web.UI.WebControls.GridView>és <xref:System.Web.UI.WebControls.DetailsView>vezérlők, a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő automatikusan egyesíti a paraméterek az adathoz kötött vezérlő által biztosított gyűjtemény explicit módon megadott paramétereket.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Ez azért fontos, mert az adathoz kötött vezérlők mindig adja meg a paramétereket, mint a <xref:System.String>meg kell adnia, és ha a metódus-aláírás numerikus vagy dátum típusú kell explicit módon a paraméter tartalmazza a megfelelő típusú InsertParameters gyűjteményben.</xref:System.String> Ellenkező esetben a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő megpróbálja szerint, a paraméterek, a gyűjtemény által definiált paraméterek konvertálni.</xref:System.Web.UI.WebControls.ObjectDataSource> További információkért lásd: [paraméterek használata a ObjectDataSource vezérlőhöz](~/add/includes/ajax-current-ext-md.md).       Az InsertParameters tulajdonság lekéri a <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>tulajdonság által tartalmazott a <xref:System.Web.UI.WebControls.ObjectDataSourceView>, amely társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>       További információ a paraméter az egyesítés, objektum élettartama, és a metódus feloldásához: <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. Initially, the <xref:System.Web.UI.WebControls.DetailsView> displays text boxes in which you can enter data for a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property identifies which method performs the insert operation.  \n  \n If you click the **Insert** button, the operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.GridView.Rows%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it is passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an <xref:System.Int32>, not as a string.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property is called. If the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method of the object has a method signature that includes parameters, the InsertParameters collection must contain parameters that have names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> method to complete successfully.  \n  \n> [!IMPORTANT]\n>  You should validate any parameter value that you receive from the client. The runtime simply substitutes the parameter value into the <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_752_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_752_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object that is provided in the <xref:System.Web.UI.WebControls.ObjectDataSource> class overview to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n To run the example, you must have the `NorthwindEmployee` class that is provided in the <xref:System.Web.UI.WebControls.ObjectDataSource> class overview. This example illustrates only how to connect the <xref:System.Web.UI.WebControls.ObjectDataSource> to a business object method that gets data for a new database record by using parameters. The example does not add records to the database, because the `Save` method of the `NorthwindEmployee` class does not include code to update the database.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_752_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_752_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> , amely tartalmazza a metódus által azonosított által használt paraméterek a <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSource.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSource.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSource.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Betölti a korábban mentett állapotának megtekintése a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő."
  remarks: "Ez a módszer elsősorban a .NET-keretrendszer-infrastruktúrát használják, és nem javasolt közvetlenül a kódból használni. Azonban a vezérlő fejlesztők felülírhatja ezt a metódust adja meg, hogyan egy egyéni vezérlőjét visszaállítja-e a nézetállapotát. További információkért lásd: [ASP.NET állapot Management áttekintése](~/add/includes/ajax-current-ext-md.md).       A LoadViewState metódus szolgál tölthető be a korábban mentett állapotának megtekintése a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "A vezérlő mentett nézet állapot értékeket tartalmazó objektum."
  overload: System.Web.UI.WebControls.ObjectDataSource.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSource.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja az üzleti objektum adatok lekérését metódus paraméter neve, amely jelzi az adatok forrása lapozás támogatása beolvasása rekordok száma."
  remarks: "A MaximumRowsParameterName tulajdonságokat tulajdonság forrás adatlapozást támogatására szolgál. További információ lapozás támogatja a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> című</xref:System.Web.UI.WebControls.ObjectDataSource>       A MaximumRowsParameterName tulajdonságokat tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>"
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.  \n  \n The Web page contains an <xref:System.Web.UI.WebControls.ObjectDataSource> control whose <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`. The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set to the name of a method that returns the total number of records in the query. The MaximumRowsParameterName property and the <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property are set to the names of the parameters that are used in the Select method. The page also contains a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_176_1.aspx)]  \n  \n The second example shows a handler for the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=fullName> event of the <xref:System.Web.UI.WebControls.DropDownList> control. The code in the handler sets the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property to the user's selection.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_176_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_176_2.vb)]  \n  \n The third example shows the data access class that retrieves data from the Customers table. It includes a method named `GetSubsetOfEmployees`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The example also includes a method named `GetEmployeeCount`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The class uses LINQ to query the Customers table. The example requires a LINQ to SQL class that represents the Northwind database and Customers table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_176_3.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_176_3.vb)]"
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "Neve a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>paraméter, amely jelzi a beolvasandó rekordok száma.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*> Az alapértelmezett érték `&quot;maximumRows&quot;`."
  overload: System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSource.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, az objektum által azonosított után a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*>tulajdonság jön létre.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*>"
  remarks: "ObjectCreated eseményének más módszerekkel hívható meg az üzleti objektumhoz, állítsa be a tulajdonságokat, vagy más inicializálása előtt az üzleti objektumhoz adott hajtsa végre a <xref:System.Web.UI.WebControls.ObjectDataSource>objektum meghívja az üzleti objektumhoz módszert adatok művelet végrehajtására.</xref:System.Web.UI.WebControls.ObjectDataSource> Egy objektum hivatkozását hozzáfér a <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>tulajdonságot, amelynek tesz elérhetővé a <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Ha van-e a módszert, amelyet az művelet elvégzéséhez, amelynél `static` (`Shared` a Visual Basic), a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>és ObjectCreated események soha nem aktiválódnak.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSource.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Az objektum által azonosított előtt következik be a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*>tulajdonság jön létre.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*>"
  remarks: "A mód az művelet végrehajtásához Advanced `static` (`Shared` a Visual Basic nyelvben), a ObjectCreating és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>események soha nem aktiválódnak.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>       A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő automatikusan meghívja az alapértelmezett konstruktort a üzleti objektumhoz reflexió használatával egy példányának létrehozásakor.</xref:System.Web.UI.WebControls.ObjectDataSource> A hívható explicit módon másik konstruktor ObjectCreating eseményének, és állítsa be az eredmények objektum példánya a <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>tulajdonsága a társított <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. The second code example provides the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive to create (in terms of time or resources) for every data operation your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation.  \n  \n> [!NOTE]\n>  In a production application, multiple requests might end up simultaneously using the same instance. Therefore, the object needs to be implemented in a thread-safe manner.  \n  \n This code example demonstrates this pattern. You can handle the ObjectCreating event to check the cache for an object first, and only create an instance of the object, if one is not already cached. Then, handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> event to cache the business object for future use, instead of destroying it. In this code example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> object is set to `true` to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call <xref:System.IDisposable.Dispose%2A> method on the object.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_72_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_72_1.aspx)]  \n  \n The following code example provides the example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a stateful class that encapsulates business logic. For a complete working example, you must compile this code as a library and use these classes from an ASP.NET page (.aspx file).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_72_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_72_2.vb)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSource.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Az objektum által azonosított előtt következik be a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*>tulajdonságot a program elveti.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName*>"
  remarks: "A ObjectDisposing esemény mindig jelenik meg, mielőtt a rendszer törli a példányt az üzleti objektumhoz. Ha az üzleti objektumhoz megvalósítja a <xref:System.IDisposable>felületet, a <xref:System.IDisposable.Dispose%2A>metódus lehívásra kerül, ez az esemény után.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>       Kezeli az ObjectDisposing eseményt hívható meg más metódus olyan objektumon, állítsa be a tulajdonságokat vagy karbantartás, amely csak az objektum az az objektum megsemmisül előtt hajtsa végre. Egy objektum hivatkozását hozzáfér a <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>tulajdonságot, amelynek tesz elérhetővé a <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Ha egy <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő a LINQ to SQL osztály, meg kell szakítania az adatkörnyezet osztály egy kezelő ObjectDisposing eseménynél megsemmisítése.</xref:System.Web.UI.WebControls.ObjectDataSource> Ez a lépés szükség, mert &quot;LINQ to SQL&quot; támogatja az elhalasztott végrehajtás, mivel a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő megpróbálja a Select művelet után az adatkörnyezetben eldobásakor.</xref:System.Web.UI.WebControls.ObjectDataSource>       Események kezelésére kapcsolatos további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> object with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. The second code example provides the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to display information. You might work with a business object that is very expensive to create (in terms of time or resources) for every data operation your Web page performs. One way to work with an expensive object might be to create an instance of it once, and then cache it for subsequent operations instead of creating and destroying it for every data operation. This example demonstrates this pattern. You can handle the <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> event to check the cache for an object first, and only create an instance of it, if one is not already cached. Then, handle the ObjectDisposing event to cache the business object for future use, instead of destroying it. In this code example, the <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=fullName> property of the <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> object is set to `true` to direct the <xref:System.Web.UI.WebControls.ObjectDataSource> to not call the <xref:System.IDisposable.Dispose%2A> method on the object.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_11_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_11_1.aspx)]  \n  \n The following code example provides the example middle-tier business object that the preceding code example uses. The code example consists of a basic business object, defined by the `EmployeeLogic` class, which is a stateful class that encapsulates business logic. For a complete working example, you must compile this code as a library and use these classes from an ASP.NET page (.aspx file).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_11_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_11_2.vb)]  \n  \n The following example shows how to handle the ObjectDisposing event when using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a LINQ to SQL class.  \n  \n```vb#  \nPublic Sub ExampleObjectDisposing(ByVal sender As Object, _   \n        ByVal e As ObjectDataSourceDisposingEventArgs)  \n    e.Cancel = True  \nEnd Sub  \n```  \n  \n```c#  \npublic void ExampleObjectDisposing(object sender,   \n        ObjectDataSourceDisposingEventArgs e)  \n{  \n    e.Cancel = true;  \n}  \n```"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSource.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a formázó karakterlánc alkalmazandó átadott eredeti értékeket a paraméterek nevei a <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> módszerek."
  remarks: "Értékét a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>tulajdonság vonatkozik, az elsődleges kulcsok csak, például azokkal, amelyek azonosítják a `DataKeyNames` tulajdonság adathoz kötött vezérlő, vagy törölje a forgatókönyvek frissítése és ahol a <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>tulajdonság értéke a <xref:System.Web.UI.ConflictOptions>értéket, és az eredeti értékek vannak a megfelelő adatok metódusnak átadott.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>       A következők két gyakori forgatókönyvek, ahol érdemes lehet módosítani a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>tulajdonság:-érdemes lehet különböztetni a frissítések a régi és új értékeinek tulajdonsága módosítható.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Ha a <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>tulajdonság értéke a <xref:System.Web.UI.ConflictOptions>értéke, paraméterek az eredeti és az új értékek hozzáadódnak a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> A formázási karakterlánc nélkül két paramétert ugyanazzal a névvel lenne hozhatók létre minden adat mezőjébe. Ha megváltoztatja az eredeti érték paraméter neve, összehasonlíthatja az adatokat az eredeti adatforrás ütközések észlelésére, és hasonlítsa össze a kulcsértékei.      -Egyes visual tervezők valósítja meg az eredeti kulcsok és értékek adott elnevezési rendszert.       Az OldValuesParameterFormatString karakterlánchoz tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>"
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "A nevek bármely alkalmazott formázó karakterlánc jelölő karakterlánccá <code> oldValues </code> átadott paramétereket, vagy a <> </> *> vagy <> </> *> módszerek. Az alapértelmezett érték `&quot;{0}&quot;`, ami azt jelenti, hogy a paraméter neve az a mező nevét."
  overload: System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ObjectDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSource.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Hozzáad egy <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref> eseménykezelő tartalmazó lapra a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő."
  remarks: "Az eseménykezelő keresztül egy delegált esemény indítása hív meg. További információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       A OnInit módszert is lehetővé teszi az események kezelésére anélkül egy delegált származtatott osztályok. Ez az ajánlott módszere az esemény egy származtatott osztályban kezelésére."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Egy <xref:System.EventArgs>, amely tartalmazza az eseményadatok.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.ObjectDataSource.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSource.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSource.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi a vagy beállít egy értéket, amely jelzi, hogy milyen információ van használatban tényleges tulajdonságtípus ahhoz, hogy létrehozni egy objektumot a típusú karakterlánc-érték konvertálása jelzett <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "A kulturális környezet információkat. Az alapértelmezett érték <xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSource.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSource.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSource.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Állapotát menti a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "A kiszolgálói vezérlőnek aktuális nézet állapotáról; Ellenkező esetben adja vissza <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ha nincs a vezérlőhöz tartozó állapotának megtekintése."
  overload: System.Web.UI.WebControls.ObjectDataSource.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Select
  id: Select
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Select()
  nameWithType: ObjectDataSource.Select()
  fullName: System.Web.UI.WebControls.ObjectDataSource.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Által azonosított metódus hívásával az alapul szolgáló adattár adatokat tölt le a <> </> *> a paramétereket a tulajdonságot a <> </> *> gyűjtemény."
  remarks: "A megadott metódus lehet bármely metódus-aláírás, de kell visszaadnia, vagy az alábbi táblázatban felsorolt típusok egyike származtathatók a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő sikeres meghívásához.</xref:System.Web.UI.WebControls.ObjectDataSource>      | Visszatérési típusa |} A művelet |}   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| A Select metódus által visszaadott a <xref:System.Collections.IEnumerable>. |}   | <xref:System.Data.DataTable>| Egy <xref:System.Data.DataView>a <xref:System.Data.DataTable>használatával létrehozott és a Select metódus által visszaadott. |}   | <xref:System.Data.DataView>| A Select metódus által visszaadott a <xref:System.Data.DataView>. |}   | <xref:System.Data.DataSet>| Az első <xref:System.Data.DataTable>a <xref:System.Data.DataSet>ki kell olvasni, és egy <xref:System.Data.DataView>jön létre, és a Select metódus által visszaadott. |}   | <xref:System.Object>| Az objektum egy elemhez <xref:System.Collections.IEnumerable>gyűjtemény csomagolni, és a Select metódus által visszaadott. |}       A metódus által azonosított a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság lehet példánymetódusnak vagy egy `static` (`Shared` a Visual Basic nyelvben) metódus.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataView> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> Ha példánymetódusnak, az üzleti objektumhoz jön létre, és minden alkalommal, amikor a metódus által megadott megsemmisül a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság nevezik, azzal a különbséggel, hogy ugyanazt a metódushívás által megadott szolgál a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság és a megadott a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> A Select metódusnak adja vissza egy <xref:System.Collections.IEnumerable>felületet.</xref:System.Collections.IEnumerable> Azonban és a szűrés forgatókönyvek engedélyezéséhez a visszatérési értéknek kell lennie egy <xref:System.Data.DataSet>objektum.</xref:System.Data.DataSet> Miközben az <xref:System.Data.DataSet>osztály nem valósítja meg a <xref:System.Collections.IEnumerable>felületet, a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő automatikusan kibontja az alapértelmezett <xref:System.Data.DataView>vezérlő, amely megvalósítja a <xref:System.Collections.IEnumerable>.</xref:System.Collections.IEnumerable> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Collections.IEnumerable> </xref:System.Data.DataSet>       A Select művelet elvégzése előtt a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>metódus lehívásra kerül kell kiadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>eseményt, vizsgálja meg a paraméterek értékeit, és bármely előfeldolgozása előtt kiválasztási műveletet végrehajtani.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Adatok lekérése művelet végrehajtásához a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum reflexió használatával az objektum által azonosított példányt létrehozni a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> A metódus által azonosított majd meghívja a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság használatával a hozzá tartozó <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> A Select művelet befejezése után a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>metódus lehívásra kerül kell kiadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>esemény visszatérési értékek, a kimeneti paraméterek és a kivételek vizsgálata, valamint bármely utófeldolgozás végrehajtásához.</xref:System.Web.UI.WebControls.ObjectDataSource.Selected>       Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság értéket ad vissza egy <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, vagy <xref:System.Data.DataView>objektum és a gyorsítótár engedélyezve van, a <xref:System.Web.UI.WebControls.ObjectDataSource>olvassa ki az adatokat, és adatokat a gyorsítótárába menti a Select művelet során.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> A gyorsítótár jön létre, elvetett, vagy frissíteni a gyorsítótár-viselkedést kombinációja által megadott alapján a <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>és <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>       Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság értéket ad vissza egy <xref:System.Data.DataSet>vagy <xref:System.Data.DataTable>objektumot, és egy <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>tulajdonság lett megadva, a rendszer kiértékeli az összes megadott <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>Tulajdonságok és az eredményül kapott szűrő vonatkozik az adatok listáját a Select művelet során.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>       A Select metódusnak gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>metódusában a <xref:System.Web.UI.WebControls.ObjectDataSourceView>, amely társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       További információ a paraméter az egyesítés, objektum élettartama, és a metódus feloldásához: <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>      ## Adathoz kötött vezérlők amikor a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő társítva van egy adathoz kötött vezérlő, többek között a <xref:System.Web.UI.WebControls.GridView>vezérlő, nincs szükség a Select metódus meghívására lap kódból.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ObjectDataSource> A Select metódusnak ehelyett meghívták az adathoz kötött vezérlő által közvetlenül."
  example:
  - For a code example, see <xref:System.Web.UI.WebControls.ObjectDataSource>.
  syntax:
    content: public System.Collections.IEnumerable Select ();
    parameters: []
    return:
      type: System.Collections.IEnumerable
      description: "Egy <xref:System.Collections.IEnumerable>adatok a sorok számát.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.ObjectDataSource.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSource.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a metódus vagy függvény neve, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő hív meg beolvasni a sorok számát."
  remarks: "A SelectCountMethod tulajdonság a sorok teljes számának támogatásához forrás adatlapozást beolvasásához használt üzleti objektum metódus azonosítja. A SelectCountMethod tulajdonság csak akkor, ha ki lesz értékelve az <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>tulajdonsága `true`.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>       A SelectCountMethod tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> További információ lapozás támogatja a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> című</xref:System.Web.UI.WebControls.ObjectDataSource>"
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.  \n  \n The Web page contains an <xref:System.Web.UI.WebControls.ObjectDataSource> control whose <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`. The SelectCountMethod property is set to the name of a method that returns the total number of records in the query. The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property and the <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> property are set to the names of the parameters that are used in the Select method. The page also contains a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_626_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_626_1.aspx)]  \n  \n The second example shows a handler for the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=fullName> event of the <xref:System.Web.UI.WebControls.DropDownList> control. The code in the handler sets the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property to the user's selection.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_626_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_626_2.vb)]  \n  \n The third example shows the data access class that retrieves data from the Customers table. It includes a method named `GetSubsetOfEmployees`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The example also includes a method named `GetEmployeeCount`, which is assigned to the SelectCountMethod property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The class uses LINQ to query the Customers table. The example requires a LINQ to SQL class that represents the Northwind database and Customers table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_626_3.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_626_3.vb)]"
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "Karakterlánc, amely a metódus nevét vagy nem működik, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> használja a sor számának beolvasása. A metódus egy egész számot kell visszaadnia (<xref:System.Int32>).</xref:System.Int32> Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSource.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSource.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, amikor egy <xref:System.Web.UI.WebControls.ObjectDataSource.Select*>művelet befejeződött.</xref:System.Web.UI.WebControls.ObjectDataSource.Select*>"
  remarks: "Kezeli a kiválasztott eseményt, vizsgálja meg a visszatérési érték vagy kimeneti paraméterek értékét, vagy annak meghatározásához, hogy az kivétel után egy <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>művelet befejeződött.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> A visszatérési érték, a kimeneti paraméterek és a kivételkezelő tulajdonságok érhetők el a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektum, amely a eseményhez társított.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.  \n  \n The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control. The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database. The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_48_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_48_1.aspx)]  \n  \n The second example shows handlers for the Selected and <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> events. The Selected event handler serializes the object that contains data that was retrieved from the Employee table. The serialized object is stored in view state. The <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event handler deserializes the object in view state that contains the original data for the data record that is being updated. The object that contains the original data is passed as a parameter to the Update method. The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_48_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_48_2.cs)]  \n  \n The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query and update the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and Employees table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_48_3.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/csharp/e-system.web.ui.webcontr_48_3.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSource.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSource.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, mielőtt egy <xref:System.Web.UI.WebControls.ObjectDataSource.Select*>művelet.</xref:System.Web.UI.WebControls.ObjectDataSource.Select*>"
  remarks: "Kezeli a Selecting esemény további paraméterek, ellenőrizze az alkalmazás adott inicializálási végrehajtásához, vagy módosíthatja a paramétert értékek előtt a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő az adatok lekérése műveletet hajt végre.</xref:System.Web.UI.WebControls.ObjectDataSource> A paraméterek érhetők el, mint egy <xref:System.Collections.IDictionary>gyűjteményt, amely hozzáfér a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>tulajdonságot, amelynek tesz elérhetővé a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Ez az esemény is indítható kétszer az egyetlen meghívása a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódust, ha a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>tulajdonság értéke.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> A <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>objektum azt határozza meg, ha select beolvasni az adatokat, vagy a count beolvasása lett meghívva.</xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSource.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a metódus vagy függvény neve, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő elindítja az adatok lekéréséhez."
  remarks: "A megadott metódus lehet bármely metódus-aláírás, de azt az alábbi táblázatban szereplő típusok valamelyikét kell visszaadnia a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő sikeres meghívásához.</xref:System.Web.UI.WebControls.ObjectDataSource>      | Visszatérési típusa |} A művelet |}   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| A <xref:System.Collections.IEnumerable> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus által visszaadott. |}   | <xref:System.Data.DataTable>| Egy <xref:System.Data.DataView>a <xref:System.Data.DataTable>használatával létrehozott és a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus által visszaadott. |}   | <xref:System.Data.DataView>| Egy <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus által visszaadott. |}   | <xref:System.Data.DataSet>| Az első <xref:System.Data.DataTable>a <xref:System.Data.DataSet>ki kell olvasni, és egy <xref:System.Data.DataView>jön létre, és a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus által visszaadott. |}   | <xref:System.Object>| Az objektum egy elemhez <xref:System.Collections.IEnumerable>gyűjtemény csomagolni, és a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus által visszaadott. |}       A SelectMethod metódus tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable>       Használatakor a <xref:System.Web.UI.WebControls.ObjectDataSource>osztály és törlése vagy adatokat, győződjön meg arról, hogy a paraméter nevének beállítása a <xref:System.Web.UI.WebControls.ObjectDataSource>lévő vezérlése a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>gyűjtemény vagy <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>gyűjtemény felel meg az oszlopok neveit, a select metódus által visszaadott.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource>      ## A SelectMethod metódus tulajdonság által azonosított metódus lehet példánymetódusnak objektum élettartama vagy egy `static` (`Shared` a Visual Basic nyelvben) metódust. Ha egy példánymetódus, az üzleti objektumhoz létrehozott és megsemmisül minden alkalommal, amikor a SelectMethod metódus tulajdonság által megadott metódus lehívásra kerül. Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>események dolgozni az üzleti objektumhoz az módszer, amely a SelectMethod metódus tulajdonság által megadott metódus meghívása előtt.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Emellett kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>eseményt, amely után a SelectMethod metódus tulajdonság által megadott metódus lehívásra kerül következik be.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ha az üzleti objektumhoz megvalósítja a <xref:System.IDisposable>felületet, a <xref:System.IDisposable.Dispose%2A>metódus lehívásra kerül, mielőtt objektum megsemmisül.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable> Ha a metódus `static` (`Shared` a Visual Basic nyelvben), az üzleti objektumhoz soha nem jön létre, és nem tudja kezelni a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>események.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>      ## Paraméter egyesítése paraméterek kerülnek be a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>gyűjtemény e forrásokból: – a deklaratív módon a `SelectParameters` elem.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>      -Programozott módon való a `Selecting` metódust.       Először is szerepel a paraméterek a `SelectParameters` elem kerülnek. Második, paraméterek programozott módon felvétele, illetve eltávolítása a a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>esemény, amely előtt következik be a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus futása.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> A metódus meg van oldva, miután a paraméterek egyesítve lesznek. A következő szakaszban tárgyalt metódus megoldás.      > [!IMPORTANT] > Ellenőriznie kell a bármely paraméter értéke, az ügyfél kapott. A futtatókörnyezet egyszerűen helyettesíti a paraméter értéke a SelectMethod metódus tulajdonság be.      ## Módszer feloldása során a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus lehívásra kerül, az adathoz kötött vezérlő, a paraméterek létrehozott deklaratív módon az adatok mezőit a `SelectParameters` elemet, és a paraméterek hozzáadott a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>eseménykezelő összes egyesített.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (További információkért lásd az előző szakaszban.) A <xref:System.Web.UI.WebControls.ObjectDataSource>található egy metódus hívására majd megpróbálja szabályozzák.</xref:System.Web.UI.WebControls.ObjectDataSource> Először is a SelectMethod metódus tulajdonságban megadott nevű egy vagy több módszert keres. Ha nem megfelelő, egy <xref:System.InvalidOperationException>kivétel történt.</xref:System.InvalidOperationException> Ha van egyezés, majd a jelek paraméterneveknek egyeztetéséhez. Tegyük fel például, egy típust, amely megadja a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonságnak nevű két módszer `SelectARecord`.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Egy `SelectARecord` egy paraméterrel rendelkezik `ID`, míg a másik `SelectARecord` két paraméterrel rendelkezik `Name` és `Number`. Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>gyűjtemény neve csak egy paraméter tartozik `ID`, a `SelectARecord` metódus csak a `ID` paraméter neve.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> A paraméter típusa nem vette a módszerek megoldását. A paraméterek sorrendje nem lényeges.       Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>tulajdonság értéke, a módszer megoldódott-e más módon.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> A <xref:System.Web.UI.WebControls.ObjectDataSource>tulajdonságban megadott a SelectMethod metódus típusú egy paramétert fogad, amely nevű metódus megadott keresi a <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Ebben az esetben a paraméter neve nem lényeges."
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the method that is specified by the SelectMethod property, and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_540_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_540_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "Karakterlánc, amely a metódus nevét vagy nem működik, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> adatok lekéréséhez használja. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSource.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi a megadott metódus által használt paraméterek gyűjteménye a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  remarks: "A SelectParameters tulajdonság lekérdezi a <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>       Hozzáadhat paraméterek a SelectParameters gyűjtemény deklarációval használatával a `SelectParameters` elem vagy programozott módon a kezelőt a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Futási időben paraméterek szerepelnek a `SelectParameters` elem első hozzáadódnak a gyűjteményben. A gyűjtemény paraméterek majd hozzáadásakor vagy eltávolításakor a kezelő számára a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> A <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>esemény jelenik meg, mielőtt a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus futása.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>       Mielőtt a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus futtatja, nevét és típusát a SelectParameters gyűjteményben szereplő paramétert meg kell egyeznie a megadott metódus aláírása a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Például, ha a select metódus nevű `GetEmployeesByStateAndAge` tart egy `string` és egész paraméter, a SelectParameters gyűjtemény két paramétert kell tartalmaznia. Az első paraméter karakterlánccá kell tartoznia, és a második paraméter egy egész számot kell tartoznia. Mindkét paraméter adható jelölését a `SelectParameters` elemet. Másik lehetőségként el lehet hozzáadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>eseménykezelőjét, vagy egy paraméter markup lehet hozzáadni, és a másik egy programozott módon lehet hozzáadni.</xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>       További információkért lásd: [paraméterek használata a ObjectDataSource vezérlőhöz](~/add/includes/ajax-current-ext-md.md) és a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod>      > [!IMPORTANT] > A kódját a <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>eseménykezelő vagy által megadott metódus a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság, győződjön meg arról, hogy minden paraméter értéke, amely az ügyféltől kapott érvényesítése.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>"
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control and display it in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> control retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a `QueryStringParameter` element in markup to create a <xref:System.Web.UI.WebControls.QueryStringParameter> object that will retrieve the value of a specified query-string parameter from the URL and pass it to the `GetEmployee` method.  \n  \n Other parameter classes can be used to retrieve values from other sources, such as control properties, form fields, cookies, ASP.NET profile data, or session state. You can also use a parameter object that is defined in markup in order to pass a hard-coded value to the select method. For more information about parameter classes that are available, see [Using Parameters with Data Source Controls for Filtering](~/add/includes/ajax-current-ext-md.md).  \n  \n To run this example, you will need the following:  \n  \n-   A Web site that has a connection string named `NorthwindConnection` that connects to the Northwind Traders database. For more information, see the <xref:System.Web.UI.WebControls.ObjectDataSource> class overview.  \n  \n-   The `EmployeeLogic` class that is shown as one of the code examples for the <xref:System.Web.UI.WebControls.ObjectDataSource> class overview. The class file must be located in the App_Code folder.  \n  \n-   The sample code can be run as an .aspx page. If you request the page without a query-string parameter, an error message is displayed. If you request the page using a query string such as `?empid=1` after the name of the .aspx file, you will see the details for the requested employee.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1025_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1025_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A megadott metódus által használt paraméterek gyűjteménye a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSource.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSource.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSource.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a nevét, az üzleti objektumhoz, amely a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>paraméter használatával adja meg a rendezési kifejezést adatforrás rendezési támogatási.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  remarks: "A SortParameterName tulajdonság segítségével támogatja a data source rendezést. Ha egy <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>tulajdonsága be van a <xref:System.Web.UI.DataSourceSelectArguments>objektumra, és továbbítja a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus, a SortParameterName érték azonosítja a paraméter nevét a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>üzleti objektumot módszer alapján, amely az adatok rendezése.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       Ha a <xref:System.Web.UI.WebControls.ObjectDataSource>adathoz kötött vezérlő, az értékeket, amelyeket a rendszer átadja a paraméter hajtsa végre a megfelelő mező vesszővel tagolt értékek formájában követ társított `&quot;ASC&quot;` vagy `&quot;DESC&quot;`.</xref:System.Web.UI.WebControls.ObjectDataSource> Például a növekvő sorrendje értéke `Name` lenne `&quot;Name ASC&quot;`.       A SortParameterName tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to implement a type that supports sorting. The second code example demonstrates how to implement a sort expression.  \n  \n The following code example demonstrates how to implement a type that supports sorting. The `SelectMethod` of the `SortingData` class takes a parameter, `sortExpression`. The string that is passed to `SelectMethod` is used for the <xref:System.Data.DataView.Sort%2A> property of the <xref:System.Data.DataView> object that is returned by `SelectMethod`.  \n  \n [!code-cs[ObjectDataSourceSorting#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_386_1.cs)]\n [!code-vb[ObjectDataSourceSorting#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_386_1.vb)]  \n  \n The following code example demonstrates how to implement a sort expression. The code in the Web page creates an instance of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property is set to `SortingData` and the SortParameterName property is set to `sortExpression`. The <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true`. When the user clicks the **Sort** button, the field name, `Name` or `Number`, is passed to `SelectMethod` in the sort parameter.  \n  \n [!code-cs[ObjectDataSourceSorting#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_386_2.aspx)]\n [!code-vb[ObjectDataSourceSorting#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_386_2.aspx)]"
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "Azt jelzi, a paramétert, amely az adatok rendezéséhez használt módszert paraméter neve. Az alapértelmezett érték egy üres karakterlánc."
  overload: System.Web.UI.WebControls.ObjectDataSource.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency
  id: SqlCacheDependency
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: SqlCacheDependency
  nameWithType: ObjectDataSource.SqlCacheDependency
  fullName: System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy pontosvesszővel elválasztott karakterlánc, amely azt jelzi, mely adatbázisok és táblák használata a Microsoft SQL Server gyorsítótár-függőségének."
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő támogatja-e egy választható lejárati házirendet, amely azon alapul a <xref:System.Web.Caching.SqlCacheDependency>-objektumot (a szolgáltatás kell állítani az adatbázis-kiszolgáló) adatgyorsítótár.</xref:System.Web.Caching.SqlCacheDependency> </xref:System.Web.UI.WebControls.ObjectDataSource>       SQL Server kétféle módszer támogatja a gyorsítótár érvénytelenítési: lekérdezési és értesítések. Minden egyes mechanizmus van egy másik szintaxisa a <xref:System.Web.Caching.SqlCacheDependency>objektum.</xref:System.Web.Caching.SqlCacheDependency>       A <xref:System.Web.UI.WebControls.ObjectDataSource>csak támogatja.</xref:System.Web.UI.WebControls.ObjectDataSource> A <xref:System.Web.Caching.SqlCacheDependency>karakterlánc segítségével létrehozhat egy <xref:System.Data.SqlClient.SqlDependency>átadott objektum a <xref:System.Data.Common.DbCommand>konstruktor előtt a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metódus végrehajtása.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.Common.DbCommand> </xref:System.Data.SqlClient.SqlDependency> </xref:System.Web.Caching.SqlCacheDependency> Az SqlCacheDependency karakterlánc adatbázisok és táblák ugyanazt a formátumot által használt alapján azonosítja a `@ Page` irányelv, ahol a karakterlánc első része egy SQL Server-adatbázis kapcsolati karakterláncát, kettőspont elválasztó, és végül az adatbázis-tábla neve követ (például `&quot;connectionstring1:table1&quot;`). Ha az SqlCacheDependency tulajdonság egynél több tábla függ, a kapcsolati karakterláncot és a tábla neve párok pontosvesszővel elválasztva (például `&quot;connectionstring1:table1&quot;;connectionstring2:table2&quot;`).       Értesítési támogatásához végrehajtásának kell írnia a gyorsítótár-logikát a <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>tulajdonság és felépítése kezelni a <xref:System.Web.Caching.SqlCacheDependency>objektum a kódban.</xref:System.Web.Caching.SqlCacheDependency> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to create a SQL Server cache dependency and set the SqlCacheDependency property of a <xref:System.Web.UI.WebControls.ObjectDataSource> object. The second code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching and filtering with an <xref:System.Web.UI.WebControls.ObjectDataSource> object.  \n  \n The following code example demonstrates how to create a SQL Server cache dependency and set the SqlCacheDependency property of a <xref:System.Web.UI.WebControls.ObjectDataSource> control. In this example, the database is polled every 120 seconds. If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <xref:System.Web.UI.WebControls.ObjectDataSource> control and displayed by the <xref:System.Web.UI.WebControls.GridView> control is expired and a new set of data is retrieved on the next request for the page.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_787_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_7#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_787_1.aspx)]  \n  \n The following code example demonstrates how to implement a wrapper method that returns a <xref:System.Data.DataSet> object to enable caching and filtering with an <xref:System.Web.UI.WebControls.ObjectDataSource> control. In the base implementation of the `EmployeeLogic` class, the `GetAllEmployees` method returns an <xref:System.Collections.ArrayList> object. Instead of refactoring the object completely to work with the <xref:System.Web.UI.WebControls.ObjectDataSource> on a Web Forms page, a wrapper method named `GetAllEmployeesAsDataSet` is added that returns a set of `NorthwindEmployee` data as a <xref:System.Data.DataSet>.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_787_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_5#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_787_2.cs)]"
  syntax:
    content: public virtual string SqlCacheDependency { get; set; }
    return:
      type: System.String
      description: "Egy karakterlánc, amely azt jelzi, mely adatbázisok és táblák az SQL-kiszolgáló gyorsítótár-függőségének használatára."
  overload: System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSource.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a nevét, az adatok lekérése metódus paraméterének, amely jelzi az első rekord beolvasása az adatok forrása lapozás támogatása az azonosítónak az értékét."
  remarks: "A StartRowIndexParameterName tulajdonság forrás adatlapozást támogatására szolgál. További információ lapozás támogatja a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> című</xref:System.Web.UI.WebControls.ObjectDataSource>       A StartRowIndexParameterName tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>"
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that enable the user to pick how many records are displayed in the page.  \n  \n The Web page contains an <xref:System.Web.UI.WebControls.ObjectDataSource> control whose <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> property is set to `true`. The <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property is set to the name of a method that returns the total number of records in the query. The <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> property and the StartRowIndexParameterName property are set to the names of the parameters that are used in the Select method. The page also contains a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1148_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1148_1.aspx)]  \n  \n The second example shows a handler for the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=fullName> event of the <xref:System.Web.UI.WebControls.DropDownList> control. The code in the handler sets the <xref:System.Web.UI.WebControls.GridView.PageSize%2A> property to the user's selection.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1148_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1148_2.vb)]  \n  \n The third example shows the data access class that retrieves data from the Customers table. It includes a method named `GetSubsetOfEmployees`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The example also includes a method named `GetEmployeeCount`, which is assigned to the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> property of the <xref:System.Web.UI.WebControls.ObjectDataSource> control. The class uses LINQ to query the Customers table. The example requires a LINQ to SQL class that represents the Northwind database and Customers table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_17#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1148_3.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1148_3.vb)]"
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "Azt jelzi, az első rekordra beolvasása üzleti objektum metódus paraméterének neve. A paraméter egy egész számot kell visszaadnia. Az alapértelmezett érték `&quot;startRowIndex&quot;`."
  overload: System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSource.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Nézetállapot módosítások nyomon követi a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> , hogy azok tárolhatja a <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objektum."
  remarks: "A TrackViewState módszer megjelölni a kiindulási pont kezdje el módosítani nyomkövetési és menteni a vezérlési a nézetállapotot, az objektum részeként felülíródik."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSource.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSource.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSource.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja annak az osztálynak a nevét, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> objektumot jelöli."
  remarks: "Az az objektum példányának létrehozása a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlőelem van kötve, a vezérlő reflexiós használja a futási időben a típusnév által azonosított típus betöltésekor.</xref:System.Web.UI.WebControls.ObjectDataSource> Ezért a TypeName tulajdonság értéke egy teljesen minősített, amely a Bin vagy App_Code könyvtár található kód és lehet egy teljesen minősített típusnév kódot, amely regisztrálva van a globális szerelvény-gyorsítótárban. Ha használja a globális szerelvény-gyorsítótárban, hozzá kell adni a megfelelő hivatkozást a `assemblies` a Machine.config vagy Web.config fájl a szakaszban.       A típus egy alapértelmezett konstruktorral kell rendelkezniük, kivéve, ha Ön kezeli a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>esemény létrehozása egy példányát, saját magának.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> A típus egy példányát minden egyes jön létre a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, és <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>módszert, ha az a típus metódusai tag módszerek.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Példánya nem jön létre, ha a megoldások a következők `static` (`Shared` a Visual Basic nyelvben). Ha a típus megvalósítja az <xref:System.IDisposable>felület, a <xref:System.IDisposable.Dispose%2A>metódus lehívásra kerül, mielőtt objektum megsemmisül.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data by using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property, and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_850_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_850_1.aspx)]  \n  \n The following example shows the class that the TypeName property value refers to.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_850_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_850_2.vb)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "Részlegesen vagy teljesen minősített osztálynevét, amely azonosítja az objektum típusa, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> jelöli. Az alapértelmezett érték egy üres karakterlánc (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSource.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Update
  id: Update
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Update()
  nameWithType: ObjectDataSource.Update()
  fullName: System.Web.UI.WebControls.ObjectDataSource.Update()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Frissítési művelet által azonosított metódus meghívásával végrehajtja a <> </> *> tulajdonság és paramétereket, a rendszer a <> </> *> gyűjtemény."
  remarks: "Az üzleti objektumhoz feltételezett, hogy frissítse az adatokat egy bejegyzést, egyszerre, nem pedig egy kötegben.       Az Update művelet elvégzése előtt a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>metódus lehívásra kerül kell kiadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>eseményt, vizsgálja meg a paraméterek értékeit, és bármely előfeldolgozása az Update művelet végrehajtásához.</xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Egy update művelet végrehajtásához a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum reflexió használatával az objektum által azonosított példányt létrehozni a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> A metódus által azonosított majd meghívja a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>tulajdonság használatával a hozzá tartozó <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> A frissítési művelet befejezése után a <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>metódus lehívásra kerül kell kiadni a <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>esemény.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>esemény visszatérési értékek, a kimeneti paraméterek és a kivételek vizsgálata, valamint bármely utófeldolgozás végrehajtásához.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated>       Az Update metódus gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>metódusában a <xref:System.Web.UI.WebControls.ObjectDataSourceView>, amely társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>       További információ a paraméter az egyesítés, objektum élettartama, és a metódus feloldásához: <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>      > [!IMPORTANT] > Ellenőriznie kell a bármely paraméter értéke, az ügyfél kapott. A futtatókörnyezet egyszerűen helyettesíti a paraméter értéke az a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>      ## Adathoz kötött vezérlők amikor a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő társítva van egy adathoz kötött vezérlő, többek között a <xref:System.Web.UI.WebControls.GridView>vezérlő, nincs szükség az Update metódus hívása a lap kódjában.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ObjectDataSource> Az Update metódus közvetlenül által indított az adathoz kötött vezérlő helyette."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> objects to update data. The second code example shows the `EmployeeLogic` class that is used in the first code example.  \n  \n The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a Northwind employee, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that raises the Update operation is enabled only after an employee is selected.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_97_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_97_1.aspx)]  \n  \n The following code example shows the `EmployeeLogic` class that is used in the preceding code example.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_97_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_97_2.vb)]"
  syntax:
    content: public int Update ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy érték, amely jelöli az alapul szolgáló adattár a frissített sorok számát."
  overload: System.Web.UI.WebControls.ObjectDataSource.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSource.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSource.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, amikor egy <xref:System.Web.UI.WebControls.ObjectDataSource.Update*>művelet befejeződött.</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>"
  remarks: "Kezeli a frissített eseményt, vizsgálja meg a visszatérési érték vagy kimeneti paraméterek értékét, vagy annak meghatározásához, hogy az kivétel után egy <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>művelet befejeződött.</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> A visszatérési érték, a kimeneti paraméterek és a kivételkezelő tulajdonságok érhetők el a <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objektum, amely a eseményhez társított.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSource.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a metódus vagy függvény neve, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> vezérlő hív meg frissíteni az adatokat."
  remarks: "A <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő feltételezi, hogy a metódus az UpdateMethod metódus tulajdonság által azonosított egyik végez a egyszerre, nem pedig egy kötegben.</xref:System.Web.UI.WebControls.ObjectDataSource>       Az UpdateMethod metódus tulajdonság gazdakiszolgálója a <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>tulajdonsága a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>       Győződjön meg arról, hogy a paraméter nevének beállítása a <xref:System.Web.UI.WebControls.ObjectDataSource>lévő vezérlése a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>gyűjtemény felel meg a select metódus által visszaadott oszlopneveit.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>      ## A módszer az UpdateMethod metódus tulajdonság által azonosított lehet példánymetódusnak objektum élettartama vagy egy `static` (`Shared` a Visual Basic nyelvben) metódust. Ha egy példánymetódus, az üzleti objektumhoz létrehozott és megsemmisül minden alkalommal, amikor az UpdateMethod metódus tulajdonság által megadott metódus lehívásra kerül. Kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>események dolgozni az üzleti objektumhoz az UpdateMethod metódus tulajdonság által megadott metódus metódus meghívása előtt.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> Emellett kezelheti a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>eseményt, amely az UpdateMethod metódus tulajdonság által megadott metódus lehívásra kerül után következik be.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Ha az üzleti objektumhoz megvalósítja a <xref:System.IDisposable>felületet, a <xref:System.IDisposable.Dispose%2A>metódus lehívásra kerül, mielőtt objektum megsemmisül.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable> Ha a metódus `static` (`Shared` a Visual Basic nyelvben), az üzleti objektumhoz soha nem jön létre, és nem tudja kezelni a <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, és <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>események.</xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> </xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>      ## Paraméter egyesítése paraméterek kerülnek be a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>gyűjtemény három forrásból származó: – a az adathoz kötött vezérlő futási időben.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>      -A a `UpdateParameters` elem, deklaratív módon.      -A a <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>eseménykezelő, programozott.</xref:System.Web.UI.WebControls.ObjectDataSource.Updating>       Először a paramétereket, amelyek akkor jönnek létre, az adathoz kötött vezérlők hozzáadódnak a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Például ha a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő kötve van egy <xref:System.Web.UI.WebControls.GridView>vezérlő, amely rendelkezik az oszlopok `Name` és `Number`, paramétereinek `Name` és `Number` van hozzá a gyűjteményhez.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.ObjectDataSource> A paraméter pontos neve függ a <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Ezek a paraméterek adattípusa `string`. A Tovább, a paraméterek szerepelnek a `UpdateParameters` elem kerülnek. Ha egyik paraméterének a `UpdateParameters` paraméterként, amely már szerepel ilyen nevű elem található a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>kell egyeznie a paraméter megadott gyűjteményt, a meglévő paraméter módosul a `UpdateParameters` elem.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Általában ez segítségével módosítható a paraméterben megadott adat típusa. Végezetül programozott módon hozzáadhat és távolítsa el a paramétereket a <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>esemény, amely előtt következik be a <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>metódus futása.</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> A metódus meg van oldva, miután a paraméterek egyesítve lesznek. A következő szakaszban tárgyalt metódus megoldás.      > [!IMPORTANT] > Ellenőriznie kell a bármely paraméter értéke, az ügyfél kapott. A futtatókörnyezet egyszerűen helyettesíti a paraméter értéke az UpdateMethod metódus tulajdonság.      ## Módszer feloldása során a <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>metódus lehívásra kerül, az adathoz kötött vezérlő, a paraméterek létrehozott deklaratív módon az adatok mezőit a `UpdateParameters` elemet, és a paraméterek hozzáadott a <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>eseménykezelő összes egyesített.</xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> (További információkért lásd az előző szakaszban.) A <xref:System.Web.UI.WebControls.ObjectDataSource>található egy metódus hívására majd megpróbálja szabályozzák.</xref:System.Web.UI.WebControls.ObjectDataSource> Először egy vagy több módszert az UpdateMethod metódus tulajdonságban megadott nevű keresi. Ha nem megfelelő, egy <xref:System.InvalidOperationException>kivétel történt.</xref:System.InvalidOperationException> Ha van egyezés, majd a jelek paraméterneveknek egyeztetéséhez. Tegyük fel például, egy típust, amely megadja a <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>tulajdonságnak nevű két módszer `UpdateARecord`.</xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Egy `UpdateARecord` egy paraméterrel rendelkezik `ID`, míg a másik `UpdateARecord` két paraméterrel rendelkezik `Name` és `Number`. Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>gyűjtemény neve csak egy paraméter tartozik `ID`, a `UpdateARecord` metódus csak a `ID` paraméter neve.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> A paraméter típusa nem vette a módszerek megoldását. A paraméterek sorrendje nem lényeges.       Ha a <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>tulajdonság értéke, a módszer megoldódott-e más módon.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> A <xref:System.Web.UI.WebControls.ObjectDataSource>tulajdonságban megadott az UpdateMethod metódus típusú egy paramétert fogad, amely nevű metódus megadott keresi a <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Ebben az esetben a paraméter neve nem lényeges."
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.  \n  \n The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control. The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database. The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_943_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_943_1.aspx)]  \n  \n The second example shows handlers for the <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> and <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> events. The <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> event handler serializes the object that contains data that was retrieved from the Employee table. The serialized object is stored in view state. The <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> event handler deserializes the object in view state that contains the original data for the data record that is being updated. The object that contains the original data is passed as a parameter to the Update method. The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_943_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_943_2.cs)]  \n  \n The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query and update the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and Employees table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_943_3.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_943_3.cs)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "Karakterlánc, amely a metódus nevét vagy nem működik, amely a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> alapján frissíti az adatokat. Az alapértelmezett érték egy üres karakterlánc."
  overload: System.Web.UI.WebControls.ObjectDataSource.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "A paraméterek gyűjteményében, amely tartalmazza a paramétereket, illetve a metódus által megadott lekérdezi a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod*>"
  remarks: "Nevét és típusát a UpdateParameters gyűjteményben szereplő paraméterek nevét és a paraméterek típusát meg kell egyeznie a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>metódus-aláírás.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> A paraméterek nevei nem vonatkoznak a <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>tulajdonság és a kis-és nagybetűket.</xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> A gyűjtemény paraméterek az adathoz kötött vezérlő, a megadott paraméterek, deklaratív és a paraméterek programozott módon hozzáadott adatainak függ. További információkért lásd: a &quot;Paraméter egyesítése&quot; szakasz <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>és [paraméterek használata a ObjectDataSource vezérlőhöz](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>       Az UpdateParameters tulajdonság lekéri a <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>tulajdonság által tartalmazott a <xref:System.Web.UI.WebControls.ObjectDataSourceView>objektum, amelyhez társítva van a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlő.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>       További információ a paraméter az egyesítés, objektum élettartama, és a metódus feloldásához: <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>      > [!IMPORTANT] > Ellenőriznie kell a bármely paraméter értéke, az ügyfél kapott. A futtatókörnyezet egyszerűen helyettesíti a paraméter értéke az a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> objects to update data. The second code example shows the `EmployeeLogic` class that is used in the first code example.  \n  \n The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a Northwind employee, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that raises the <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operation is enabled only after an employee is selected.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_610_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_610_1.aspx)]  \n  \n The following code example shows the `EmployeeLogic` class that is used in the preceding code example.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_610_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_610_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> , amely tartalmazza a megadott metódus által használt paraméterek a <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod*>tulajdonság.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSource.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSource.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSource
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSource.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSource.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, mielőtt egy <xref:System.Web.UI.WebControls.ObjectDataSource.Update*>művelet.</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>"
  remarks: "További paraméterek, ellenőrizze az alkalmazás adott inicializálási végrehajtásához Updating eseményének, vagy módosítsa a paramétert értékek előtt a <xref:System.Web.UI.WebControls.ObjectDataSource>vezérlőn a frissítési művelet.</xref:System.Web.UI.WebControls.ObjectDataSource> A paraméterek érhetők el, mint egy <xref:System.Collections.IDictionary>gyűjteményt, amely hozzáfér a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>tulajdonságot, amelynek tesz elérhetővé a <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objektum.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Események kezelésére vonatkozó további információkért lásd: [NIB: fel események](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following three examples show a Web page, a code-behind page class, and a data-access class that enable a user to retrieve and update records in the Employees table in the Northwind database.  \n  \n The first example shows a Web page that contains two <xref:System.Web.UI.WebControls.ObjectDataSource> controls, a <xref:System.Web.UI.WebControls.DropDownList> control, and a <xref:System.Web.UI.WebControls.DetailsView> control. The first <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DropDownList> control are used to retrieve and display employee names from the database. The second <xref:System.Web.UI.WebControls.ObjectDataSource> control and the <xref:System.Web.UI.WebControls.DetailsView> control are used to retrieve, display, and modify the data from the employee record that is selected by the user.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_25_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_25_1.aspx)]  \n  \n The second example shows handlers for the <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> and Updating events. The <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> event handler serializes the object that contains data that was retrieved from the Employee table. The serialized object is stored in view state. The Updating event handler deserializes the object in view state that contains the original data for the data record that is being updated. The object that contains the original data is passed as a parameter to the Update method. The original data must be passed to the database so that it can be used to check whether the data has been modified by another process.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_25_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_25_2.cs)]  \n  \n The third example shows the data access class that interacts with the Northwind database. The class uses LINQ to query and update the Employees table. The example requires a LINQ to SQL class that represents the Northwind database and Employees table. For more information, see [How to: Create LINQ to SQL Classes in a Web Project](http://msdn.microsoft.com/en-us/20bf925f-2a6d-410d-8f65-7b5b8f555081).  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_25_3.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_18#5](~/add/codesnippet/csharp/e-system.web.ui.webcontr_25_3.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.DataSourceControl
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.ObjectDataSource.#ctor
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ObjectDataSource()
  nameWithType: ObjectDataSource.ObjectDataSource()
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectDataSource()
- uid: System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ObjectDataSource(String,String)
  nameWithType: ObjectDataSource.ObjectDataSource(String,String)
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectDataSource(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheDuration
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: ObjectDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.ObjectDataSource.CacheDuration
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: ObjectDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy
- uid: System.Web.UI.DataSourceCacheExpiry
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCacheExpiry
  nameWithType: DataSourceCacheExpiry
  fullName: System.Web.UI.DataSourceCacheExpiry
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: ObjectDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.ObjectDataSource.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSource.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSource.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSource.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSource.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSource.Delete
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Delete()
  nameWithType: ObjectDataSource.Delete()
  fullName: System.Web.UI.WebControls.ObjectDataSource.Delete()
- uid: System.Web.UI.WebControls.ObjectDataSource.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSource.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSource.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSource.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSource.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSource.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSource.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSource.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSource.EnableCaching
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: ObjectDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.ObjectDataSource.EnableCaching
- uid: System.Web.UI.WebControls.ObjectDataSource.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSource.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSource.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSource.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSource.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSource.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSource.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSource.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSource.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSource.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSource.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: ObjectDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.ObjectDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSource.GetViewNames
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: ObjectDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.ObjectDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.ObjectDataSource.Insert
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Insert()
  nameWithType: ObjectDataSource.Insert()
  fullName: System.Web.UI.WebControls.ObjectDataSource.Insert()
- uid: System.Web.UI.WebControls.ObjectDataSource.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSource.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSource.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSource.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSource.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSource.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSource.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSource.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSource.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSource.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSource.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSource.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSource.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSource.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSource.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSource.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSource.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ObjectDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSource.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.ObjectDataSource.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSource.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSource.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSource.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSource.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSource.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSource.Select
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Select()
  nameWithType: ObjectDataSource.Select()
  fullName: System.Web.UI.WebControls.ObjectDataSource.Select()
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSource.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.Selected
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSource.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSource.Selected
- uid: System.Web.UI.WebControls.ObjectDataSource.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSource.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSource.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSource.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSource.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSource.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSource.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SqlCacheDependency
  nameWithType: ObjectDataSource.SqlCacheDependency
  fullName: System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency
- uid: System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSource.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSource.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSource.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSource.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSource.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSource.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSource.Update
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Update()
  nameWithType: ObjectDataSource.Update()
  fullName: System.Web.UI.WebControls.ObjectDataSource.Update()
- uid: System.Web.UI.WebControls.ObjectDataSource.Updated
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSource.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSource.Updated
- uid: System.Web.UI.WebControls.ObjectDataSource.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSource.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSource.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSource.Updating
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSource.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSource.Updating
- uid: System.Web.UI.WebControls.ObjectDataSource.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource.ObjectDataSource
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheDuration*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: ObjectDataSource.CacheDuration
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: ObjectDataSource.CacheExpirationPolicy
- uid: System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: ObjectDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.ObjectDataSource.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSource.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSource.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSource.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSource.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSource.Delete
- uid: System.Web.UI.WebControls.ObjectDataSource.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSource.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSource.EnableCaching*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: ObjectDataSource.EnableCaching
- uid: System.Web.UI.WebControls.ObjectDataSource.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSource.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSource.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSource.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSource.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSource.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSource.GetView*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: GetView
  nameWithType: ObjectDataSource.GetView
- uid: System.Web.UI.WebControls.ObjectDataSource.GetViewNames*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: ObjectDataSource.GetViewNames
- uid: System.Web.UI.WebControls.ObjectDataSource.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSource.Insert
- uid: System.Web.UI.WebControls.ObjectDataSource.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSource.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSource.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSource.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSource.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSource.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSource.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSource.OnInit*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: OnInit
  nameWithType: ObjectDataSource.OnInit
- uid: System.Web.UI.WebControls.ObjectDataSource.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSource.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSource.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSource.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSource.Select*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Select
  nameWithType: ObjectDataSource.Select
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSource.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSource.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSource.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSource.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSource.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: SqlCacheDependency
  nameWithType: ObjectDataSource.SqlCacheDependency
- uid: System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSource.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSource.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSource.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSource.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSource.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSource.Update*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: Update
  nameWithType: ObjectDataSource.Update
- uid: System.Web.UI.WebControls.ObjectDataSource.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSource.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSource.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSource.UpdateParameters
