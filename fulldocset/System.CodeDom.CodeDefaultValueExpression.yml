### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeDefaultValueExpression
  id: CodeDefaultValueExpression
  children:
  - System.CodeDom.CodeDefaultValueExpression.#ctor
  - System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  - System.CodeDom.CodeDefaultValueExpression.Type
  langs:
  - csharp
  name: CodeDefaultValueExpression
  nameWithType: CodeDefaultValueExpression
  fullName: System.CodeDom.CodeDefaultValueExpression
  type: Class
  summary: "Alapértelmezés szerint a hivatkozás jelöli."
  remarks: "Egy CodeDefaultValueExpression használható alapértelmezett értékkel való hivatkozást jelöl.       A <xref:System.CodeDom.CodeDefaultValueExpression.Type%2A>tulajdonság határozza meg a hivatkozást a következő értéktípusú.</xref:System.CodeDom.CodeDefaultValueExpression.Type%2A> A CodeDefaultValueExpression osztály általánosítási-kód létrehozásához használható. Az általános osztályokat és metódusokat további információkért lásd: [a .NET-keretrendszer Class Library a általánosítási](~/add/includes/ajax-current-ext-md.md). Az alábbi kód lépéseket szerepelnek ebben a szakaszban leírást adhat új alapértelmezett érték hozzáadása a kód diagramhoz CodeDefaultValueExpression osztály használatát.       1. rész kódja része egy meghatározott <xref:System.CodeDom.CodeTypeParameter>osztály</xref:System.CodeDom.CodeTypeParameter> nagyobb példa Ezzel a kóddal, a C# kódgenerátor, amikor végigfuttatása eredményezi, a C#-kódban, amely akkor jelenik meg a 2. Ez a kód metódus meghívásakor a 3. rész utasításban, eredménye a kimenettel, a 4.      ```   // Part 1: Code to create a generic Print method.               CodeMemberMethod printMethod = new CodeMemberMethod();               CodeTypeParameter sType = new CodeTypeParameter(&quot;S&quot;);               sType.HasConstructorConstraint = true;               CodeTypeParameter tType = new CodeTypeParameter(&quot;T&quot;);               sType.HasConstructorConstraint = true;                  printMethod.Name = &quot;Print&quot;;               printMethod.TypeParameters.Add(sType);               printMethod.TypeParameters.Add(tType);               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(&quot;T&quot;))));               printMethod.Statements.Add(ConsoleWriteLineStatement(                   new CodeDefaultValueExpression(new CodeTypeReference(&quot;S&quot;))));   ```      ```   // Part 2: Code generated by code in part 1.   public virtual void Print<S, T>()               where S : new()            {               Console.WriteLine(default(T));               Console.WriteLine(default(S));           }   ```      ```   // Part 3: Call to the generated method.   dict.Print<System.Decimal, int>();   ```      ```   // Part 4: Output of the generated method.   0   0      ```"
  example:
  - "The following code example shows the use of the CodeDefaultValueExpression to create default values for decimal and integer parameters. This example is part of a larger example provided for the <xref:System.CodeDom.CodeTypeParameter> class.  \n  \n [!code-vb[System.CodeDOM.Generics.1#7](~/add/codesnippet/visualbasic/t-system.codedom.codedef_1.vb)]\n [!code-cs[System.CodeDOM.Generics.1#7](~/add/codesnippet/csharp/t-system.codedom.codedef_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeDefaultValueExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: CodeDefaultValueExpression()
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression()
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.CodeDom.CodeDefaultValueExpression&quot;> </xref> osztály."
  syntax:
    content: public CodeDefaultValueExpression ();
    parameters: []
  overload: System.CodeDom.CodeDefaultValueExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  id: '#ctor(System.CodeDom.CodeTypeReference)'
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: CodeDefaultValueExpression(CodeTypeReference)
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.CodeDom.CodeDefaultValueExpression&quot;> </xref> osztály használata a megadott kód típushivatkozás."
  syntax:
    content: public CodeDefaultValueExpression (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> , amely megadja, hogy egy értéktípus mutató hivatkozást."
  overload: System.CodeDom.CodeDefaultValueExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDefaultValueExpression.Type
  id: Type
  parent: System.CodeDom.CodeDefaultValueExpression
  langs:
  - csharp
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
  fullName: System.CodeDom.CodeDefaultValueExpression.Type
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Lekérdezi vagy beállítja az alapértelmezett érték típusa hivatkozást."
  syntax:
    content: public System.CodeDom.CodeTypeReference Type { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> olyan adattípusú, amely alapértelmezett értéke képviselő objektum."
  overload: System.CodeDom.CodeDefaultValueExpression.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression()
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression()
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression()
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression(CodeTypeReference)
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
  fullName: System.CodeDom.CodeDefaultValueExpression.CodeDefaultValueExpression(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.CodeDefaultValueExpression.Type
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
  fullName: System.CodeDom.CodeDefaultValueExpression.Type
- uid: System.CodeDom.CodeDefaultValueExpression.#ctor*
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: CodeDefaultValueExpression
  nameWithType: CodeDefaultValueExpression.CodeDefaultValueExpression
- uid: System.CodeDom.CodeDefaultValueExpression.Type*
  parent: System.CodeDom.CodeDefaultValueExpression
  isExternal: false
  name: Type
  nameWithType: CodeDefaultValueExpression.Type
