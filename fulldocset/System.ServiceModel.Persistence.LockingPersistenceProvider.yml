### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider
  id: LockingPersistenceProvider
  children:
  - System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  langs:
  - csharp
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider
  type: Class
  summary: "Az absztrakt alaposztály amelyből valamennyi tartós adatmegőrzési szolgáltató, amelyek megvalósítják a zárolás származik."
  remarks: "Adatmegőrzési, mellett a LockingPersistenceProvider osztály megvalósítja az szolgáltatás állapota rekordok zárolását. Metódusokat tárolt adatok (például a `Load` metódus) rendelkezik egy nem kötelező paraméter (`lockInstance`), mely meghatározza, hogy a szóban forgó adatok zárolását lettek közzétéve vagy karbantartása."
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Persistence.PersistenceProvider
  implements: []
  inheritedMembers:
  - System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)
  - System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)
  - System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)
  - System.ServiceModel.Persistence.PersistenceProvider.Id
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "A származtatott osztály megadásuk hoz létre egy új példányát a <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> osztály konfigurálva a megadott azonosító értékét."
  syntax:
    content: protected LockingPersistenceProvider (Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "Az adatmegőrzési szolgáltató példányhoz tartozó egyedi azonosítója."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy aszinkron művelet létrehozásához példány állapotadatokat az állapotmegőrző tárolóban, a paraméterek használatával kezdődik. Ez a módszer nem példány zárolásának feloldására a történő mentésekor az állapotadatokat."
  remarks: "Ez a metódus meghívja a a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A>metódus, amely annak megállapítására irányult, hogy a példány zárolásának a további paramétert.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> Ez a módszer továbbítja `false` ezt a paramétert a hívó metódus értékeként."
  syntax:
    content: public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "A példány, amelynek állapotadatait mentéskor az állapotmegőrző tárolóban."
    - id: timeout
      type: System.TimeSpan
      description: "Az időköz, amelyben a kell művelet csatornainicializálásnak nélkül."
    - id: callback
      type: System.AsyncCallback
      description: "A delegált esetén, amely a értesítést kap, a művelet befejeződése után."
    - id: state
      type: System.Object
      description: "Az aszinkron művelethez társított állapotadatait."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy aszinkron művelet létrehozásához példány állapotadatokat az állapotmegőrző tárolóban, a paraméterek használatával kezdődik. Ez a módszer feloldja a példány után mentse a példány állapota, ha az értéke a <code> unlockInstance </code> paraméter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "A példány, amelynek állapotadatait mentéskor az állapotmegőrző tárolóban."
    - id: timeout
      type: System.TimeSpan
      description: "Az időköz, amelyben a kell művelet csatornainicializálásnak nélkül."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány fel kell oldani az állapotmegőrző tárolóban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "A delegált esetén, amely a értesítést kap, a művelet befejeződése után."
    - id: state
      type: System.Object
      description: "Az aszinkron művelethez társított állapotadatait."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy aszinkron művelet állapota alapján az állapotmegőrző tárolóban, a paraméterek használatával példány betöltésére kezdődik. Ez a módszer nem zárolja a példányt."
  remarks: "Ez a metódus meghívja a a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, ami egy további paramétert fogad, amely megadja, hogy a példány zárolni kell az állapotmegőrző tárolóban lévő.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A> Ez a módszer továbbítja `false` ezt a paramétert a hívó metódus értékeként."
  syntax:
    content: public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az időköz, amelyben a kell művelet csatornainicializálásnak nélkül."
    - id: callback
      type: System.AsyncCallback
      description: "A delegált esetén, amely a értesítést kap, a művelet befejeződése után."
    - id: state
      type: System.Object
      description: "Az aszinkron művelethez társított állapotadatait."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy aszinkron művelet állapota alapján az állapotmegőrző tárolóban, a paraméterek használatával példány betöltésére kezdődik. Ez a módszer zárolja a példányt betöltése a példány állapota, ha után értékének a <code> lockInstance </code> paraméter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Olyan időszak, amelyben a művelet előtt ki kell tölteni közbeni időtúllépés miatt meghiúsult."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány zárolni kell; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "A delegált esetén, amely a értesítést kap, a művelet befejeződése után."
    - id: state
      type: System.Object
      description: "Az aszinkron művelethez társított állapotadatait."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "A származtatott osztály megadásuk jelöli a LoadIfChanged fázis elején. A LoadIfChanged fázis következik be, amikor az állapotadatok betölti a megőrzési tárolóból az adatmegőrzési szolgáltató és az állapotadatokat az állapotmegőrző tárolóban módosítva lett. A metódus hívása nem zárolja a példányt a az állapotmegőrző tárolóban."
  syntax:
    content: public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az időszak, amely után az adatmegőrzési szolgáltató megszakítja a műveletet."
    - id: instanceToken
      type: System.Object
      description: "A jogkivonatot adott vissza a korábbi <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> a hívó által tárolt módszer, amely az aktuális állapotát jeleníti meg."
    - id: callback
      type: System.AsyncCallback
      description: "A művelet befejezésekor hívandó metódust."
    - id: state
      type: System.Object
      description: "A felhasználó által megadott objektum, amely megkülönbözteti a többi művelettől aszinkron művelet."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "A származtatott osztály megadásuk jelöli a LoadIfChanged fázis elején. A LoadIfChanged fázis következik be, amikor az állapotadatok betölti a megőrzési tárolóból az adatmegőrzési szolgáltató és az állapotadatokat az állapotmegőrző tárolóban módosítva lett. A metódus hívása lehetővé teszi adja meg, hogy az állapotmegőrző tárolóban szereplő példány zárolását."
  syntax:
    content: public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az időszak, amely után az adatmegőrzési szolgáltató megszakítja a műveletet."
    - id: instanceToken
      type: System.Object
      description: "A jogkivonatot adott vissza a korábbi <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> a hívó által tárolt módszer, amely az aktuális állapotát jeleníti meg."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány zárolása az állapotmegőrző tárolóban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "A művelet befejezésekor hívandó metódust."
    - id: state
      type: System.Object
      description: "A felhasználó által megadott objektum, amely megkülönbözteti a többi művelettől aszinkron művelet."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUnlock(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy aszinkron művelet az állapotmegőrző tárolóban található egy példány zárolásának feloldására kezdődik."
  syntax:
    content: public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Olyan időszak, amelyben a művelet előtt ki kell tölteni közbeni időtúllépés miatt meghiúsult."
    - id: callback
      type: System.AsyncCallback
      description: "A delegált esetén, amely a értesítést kap, a művelet befejeződése után."
    - id: state
      type: System.Object
      description: "Az aszinkron művelethez társított állapotadatait."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy aszinkron művelet példány állapota információinak frissítése a az állapotmegőrző tárolóban, az átadott paraméterek használatával kezdődik. Ez a művelet a példány, a példány tárolóban nem zárolásának feloldására."
  remarks: "Ez a metódus meghívja a a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>metódus és cserél egy `false` értékét a `unlockInstance` paraméter.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>"
  syntax:
    content: public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "A példány, amelynek állapotadatait frissíthető az állapotmegőrző tárolóban."
    - id: timeout
      type: System.TimeSpan
      description: "Az időköz, amelyben a művelet időtúllépés nélkül kell végeznie."
    - id: callback
      type: System.AsyncCallback
      description: "A delegált esetén, amely a értesítést kapjon, ha a művelet befejezését."
    - id: state
      type: System.Object
      description: "Az aszinkron művelet vonatkozó állapotadatokat."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy aszinkron művelet példány állapota információinak frissítése a az állapotmegőrző tárolóban, az átadott paraméterek használatával kezdődik. Ez a művelet az állapotmegőrző tárolóban szereplő példány zárolja, ha az értéke a <code> unlockInstance </code> paraméter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);
    parameters:
    - id: instance
      type: System.Object
      description: "A példány, amelynek állapotadatait frissíthető az állapotmegőrző tárolóban."
    - id: timeout
      type: System.TimeSpan
      description: "Az időköz, amelyben a művelet időtúllépés nélkül kell végeznie."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány zárolni kell, miután a példány állapota frissül az állapotmegőrző tárolóban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: callback
      type: System.AsyncCallback
      description: "A delegált esetén, amely a értesítést kap, a művelet befejeződése után."
    - id: state
      type: System.Object
      description: "Az aszinkron művelet vonatkozó állapotadatokat."
    return:
      type: System.IAsyncResult
      description: "Egy aszinkron művelet állapotát."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  id: Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Példány állapotadatokat az állapotmegőrző tárolóban, a metódusnak átadott paraméterek használatával hoz létre. Ez a módszer nem példány zárolásának feloldására a található az állapotmegőrző tárolóban példány állapotának mentése után."
  syntax:
    content: public override object Create (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "A példány objektum, amelynek állapotadatait menteni kell az állapotmegőrző tárolóban a."
    - id: timeout
      type: System.TimeSpan
      description: "Az időköz, amelyben a művelet időtúllépés előtt kell be."
    return:
      type: System.Object
      description: "Az állapotadatokat."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  id: Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Create(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Ez a módszer példány állapotadatokat az állapotmegőrző tárolóban, a metódusnak átadott paraméterek használatával hoz létre. A metódus feloldja a példánytárolóban a példány, ha az értéke a <code> unlockInstance </code> paraméter <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: "A példány objektum, amelynek állapotadatait mentéskor az állapotmegőrző tárolóban."
    - id: timeout
      type: System.TimeSpan
      description: "Az időköz, amelyen belül a művelet időtúllépés előtt teljesítendő."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány fel kell oldani az állapotmegőrző tárolóban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Az állapotadatokat."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  id: EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(IAsyncResult)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Befejeződik az aszinkron művelet az állapotmegőrző tárolóban található egy példány zárolásának feloldására."
  syntax:
    content: public abstract void EndUnlock (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A feloldási művelet által visszaadott eredmény."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  id: Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Terhelések szolgáltatás állapotadatait a megőrzési tárolóból anélkül, hogy a példány zárolását."
  remarks: "Ez a metódus meghívja a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>metódus `lockInstance` paraméter `false`.</xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>"
  syntax:
    content: public override object Load (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A megadott időtartam, mely után az adatmegőrzési szolgáltató Ez a kísérlet megszakítása."
    return:
      type: System.Object
      description: "A szolgáltatás állapotára vonatkozó információ."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  id: Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Load(TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Terhelések állapotinformáció a megőrzési tárolóból után a példány zárolását."
  syntax:
    content: public abstract object Load (TimeSpan timeout, bool lockInstance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az időszak, amely után az adatmegőrzési szolgáltató megszakítja a műveletet."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány zároltnak kell lennie; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Az állapotadatokat."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Tölti be a példány állapotadatait a megőrzési tárolóból, ha az állapotadatokat az adatokat a hívó által betöltött utolsó óta megváltozott. Ez a módszer nem zárolja a példány található az állapotmegőrző tárolóban."
  syntax:
    content: public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az időszak, amely után az adatmegőrzési szolgáltató megszakítja a műveletet."
    - id: instanceToken
      type: System.Object
      description: "Az előző visszatérési értékeként <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;> </xref> vagy <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> metódushívások, amely a hívó által tárolt aktuális állapotát jeleníti meg."
    - id: instance
      type: System.Object
      description: "A tényleges példány állapotadatait."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány az állapotmegőrző tárolóban; a művelet végén zárolva van Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  id: LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: LoadIfChanged(TimeSpan,Object,Boolean,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Tölti be a példány állapotadatait a megőrzési tárolóból, ha az állapotadatokat az adatokat a hívó által betöltött utolsó óta megváltozott. Ezt a módszert is lehetővé teszi a hívó adja meg, hogy az állapotmegőrző tárolóban szereplő példány zárolását."
  syntax:
    content: public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Az időszak, amely után az adatmegőrzési szolgáltató megszakítja a műveletet."
    - id: instanceToken
      type: System.Object
      description: "A visszatérési értékeként a korábbi létrehozás vagy frissítés-metódushívások, amely a hívó által tárolt aktuális állapotát jeleníti meg."
    - id: lockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány az állapotmegőrző tárolóban; a művelet végén zárolva van Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: instance
      type: System.Object
      description: "A példány állapotadatait."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány az állapotmegőrző tárolóban; a művelet végén zárolva van Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  id: Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "A példány, amelyek azonosítója meg van adva, térített feloldja a <xref href=&quot;System.ServiceModel.Persistence.LockingPersistenceProvider&quot;> </xref> objektum az az állapotmegőrző tárolóban."
  syntax:
    content: public abstract void Unlock (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A megadott időtartam, mely után az adatmegőrzési szolgáltató megszakítja a műveletet."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  id: Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy származtatott osztályban megadásuk frissíti az állapotmegőrző tárolóban példány állapotinformáció. Ez a módszer nem példány zárolásának feloldására a található az állapotmegőrző tárolóban példány állapota információk frissítése után."
  syntax:
    content: public override object Update (object instance, TimeSpan timeout);
    parameters:
    - id: instance
      type: System.Object
      description: "A példány állapotadatait."
    - id: timeout
      type: System.TimeSpan
      description: "A megadott időtartam, mely után az adatmegőrzési szolgáltató megszakítja a műveletet."
    return:
      type: System.Object
      description: "A példány állapotadatait."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  id: Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  langs:
  - csharp
  name: Update(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Persistence
  summary: "Egy származtatott osztályban megadásuk frissíti az állapotmegőrző tárolóban példány állapotinformáció. Ez a módszer nem példány zárolásának feloldására a található az állapotmegőrző tárolóban példány állapota információk frissítése után."
  syntax:
    content: public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);
    parameters:
    - id: instance
      type: System.Object
      description: "A példány állapotadatait."
    - id: timeout
      type: System.TimeSpan
      description: "A megadott időtartam, mely után az adatmegőrzési szolgáltató megszakítja a műveletet."
    - id: unlockInstance
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a példány zárolásának után frissíti a példány állapota adatait; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "A példány állapotadatait."
  overload: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Persistence.PersistenceProvider
  isExternal: false
  name: System.ServiceModel.Persistence.PersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider(Guid)
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider(Guid)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LockingPersistenceProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(Object,TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(TimeSpan,Object,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock(TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  nameWithType: LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(Object,TimeSpan,Boolean,AsyncCallback,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Create(Object,TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock(IAsyncResult)
  nameWithType: LockingPersistenceProvider.EndUnlock(IAsyncResult)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(IAsyncResult)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load(TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Load(TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Load(TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged(TimeSpan,Object,Boolean,Object)
  nameWithType: LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(TimeSpan,Object,Boolean,Object)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock(TimeSpan)
  nameWithType: LockingPersistenceProvider.Unlock(TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update(Object,TimeSpan,Boolean)
  nameWithType: LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
  fullName: System.ServiceModel.Persistence.LockingPersistenceProvider.Update(Object,TimeSpan,Boolean)
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LockingPersistenceProvider
  nameWithType: LockingPersistenceProvider.LockingPersistenceProvider
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginCreate
  nameWithType: LockingPersistenceProvider.BeginCreate
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoad
  nameWithType: LockingPersistenceProvider.BeginLoad
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginLoadIfChanged
  nameWithType: LockingPersistenceProvider.BeginLoadIfChanged
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUnlock
  nameWithType: LockingPersistenceProvider.BeginUnlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: BeginUpdate
  nameWithType: LockingPersistenceProvider.BeginUpdate
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Create*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Create
  nameWithType: LockingPersistenceProvider.Create
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: EndUnlock
  nameWithType: LockingPersistenceProvider.EndUnlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Load*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Load
  nameWithType: LockingPersistenceProvider.Load
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: LoadIfChanged
  nameWithType: LockingPersistenceProvider.LoadIfChanged
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Unlock
  nameWithType: LockingPersistenceProvider.Unlock
- uid: System.ServiceModel.Persistence.LockingPersistenceProvider.Update*
  parent: System.ServiceModel.Persistence.LockingPersistenceProvider
  isExternal: false
  name: Update
  nameWithType: LockingPersistenceProvider.Update
