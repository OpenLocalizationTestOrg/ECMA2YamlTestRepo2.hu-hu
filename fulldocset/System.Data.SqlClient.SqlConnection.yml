### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlConnection
  id: SqlConnection
  children:
  - System.Data.SqlClient.SqlConnection.#ctor
  - System.Data.SqlClient.SqlConnection.#ctor(System.String)
  - System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  - System.Data.SqlClient.SqlConnection.AccessToken
  - System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  - System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  - System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  - System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  - System.Data.SqlClient.SqlConnection.ClearAllPools
  - System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlConnection.ClientConnectionId
  - System.Data.SqlClient.SqlConnection.Close
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  - System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  - System.Data.SqlClient.SqlConnection.ConnectionString
  - System.Data.SqlClient.SqlConnection.ConnectionTimeout
  - System.Data.SqlClient.SqlConnection.CreateCommand
  - System.Data.SqlClient.SqlConnection.CreateDbCommand
  - System.Data.SqlClient.SqlConnection.Credential
  - System.Data.SqlClient.SqlConnection.Database
  - System.Data.SqlClient.SqlConnection.DataSource
  - System.Data.SqlClient.SqlConnection.DbProviderFactory
  - System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  - System.Data.SqlClient.SqlConnection.GetSchema
  - System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  - System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  - System.Data.SqlClient.SqlConnection.InfoMessage
  - System.Data.SqlClient.SqlConnection.Open
  - System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlConnection.PacketSize
  - System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  - System.Data.SqlClient.SqlConnection.ResetStatistics
  - System.Data.SqlClient.SqlConnection.RetrieveStatistics
  - System.Data.SqlClient.SqlConnection.ServerVersion
  - System.Data.SqlClient.SqlConnection.State
  - System.Data.SqlClient.SqlConnection.StatisticsEnabled
  - System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  - System.Data.SqlClient.SqlConnection.WorkstationId
  langs:
  - csharp
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
  type: Class
  summary: "Kapcsolat jelöli egy [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] adatbázis. Ez az osztály nem örökölhető."
  remarks: "A SqlConnection object represents a unique session to a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] data source. With a client/server database system, it is equivalent to a network connection to the server. SqlConnection is used together with <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlCommand> to increase performance when connecting to a Microsoft [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. For all third-party [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] products, and other OLE DB-supported data sources, use <xref:System.Data.OleDb.OleDbConnection>.  \n  \n When you create an instance of SqlConnection, all properties are set to their initial values. For a list of these values, see the SqlConnection constructor.  \n  \n See <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> for a list of the keywords in a connection string.  \n  \n If the SqlConnection goes out of scope, it won't be closed. Therefore, you must explicitly close the connection by calling `Close` or `Dispose`. `Close` and `Dispose` are functionally equivalent. If the connection pooling value `Pooling` is set to `true` or `yes`, the underlying connection is returned back to the connection pool. On the other hand, if `Pooling` is set to `false` or `no`, the underlying connection to the server is actually closed.  \n  \n> [!NOTE]\n>  Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool. For more information, see [SQL Server Connection Pooling (ADO.NET)](~/add/includes/ajax-current-ext-md.md).  \n  \n To ensure that connections are always closed, open the connection inside of a `using` block, as shown in the following code fragment. Doing so ensures that the connection is automatically closed when the code exits the block.  \n  \n```vb#  \nUsing connection As New SqlConnection(connectionString)  \n    connection.Open()  \n    ' Do work here; connection closed on following line.  \nEnd Using  \n  \n```  \n  \n```c#  \nusing (SqlConnection connection = new SqlConnection(connectionString))  \n    {  \n        connection.Open();  \n        // Do work here; connection closed on following line.  \n    }  \n```  \n  \n> [!NOTE]\n>  To deploy high-performance applications, you must use connection pooling. When you use the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], you do not have to enable connection pooling because the provider manages this automatically, although you can modify some settings. For more information, see [SQL Server Connection Pooling (ADO.NET)](../Topic/SQL%20Server%20Connection%20Pooling%20\\(ADO.NET\\).md).  \n  \n If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the SqlConnection remains open when the severity level is 19 or less. When the severity level is 20 or greater, the server ordinarily closes the SqlConnection. However, the user can reopen the connection and continue.  \n  \n An application that creates an instance of the SqlConnection object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. SqlConnection makes security demands using the <xref:System.Data.SqlClient.SqlClientPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.SqlClient.SqlClientPermissionAttribute> object. Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/add/includes/ajax-current-ext-md.md) to modify security policy at the machine, user, and enterprise levels. For more information, see [Security](~/add/includes/ajax-current-ext-md.md). For an example demonstrating how to use security demands, see [Code Access Security and ADO.NET](~/add/includes/ajax-current-ext-md.md).  \n  \n For more information about handling warning and informational messages from the server, see [Connection Events](~/add/includes/ajax-current-ext-md.md). [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] engine errors and error messages are documented in [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online.  \n  \n> [!CAUTION]\n>  You can force TCP instead of shared memory. You can do that by prefixing tcp: to the server name in the connection string or you can use localhost."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlCommand> and a SqlConnection. The SqlConnection is opened and set as the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> for the <xref:System.Data.SqlClient.SqlCommand>. The example then calls <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>. To accomplish this, the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] INSERT statement. The connection is closed automatically when the code exits the using block.  \n  \n [!code-cs[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._4_1.cs)]\n [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection()
  nameWithType: SqlConnection.SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> osztály."
  remarks: "Ha egy új példányát <xref:System.Data.SqlClient.SqlConnection>jön létre, az olvasási/írási tulajdonságok beállítása a következő kezdeti értékekre, kivéve, ha kifejezetten megfelelőek-e a kapcsolódó kulcsszavak használatával a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>tulajdonság.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection>      | Tulajdonságok |} A kezdeti érték |}   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|} üres karakterlánc (&quot;&quot;) |}   | <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|}&15; |}   | <xref:System.Data.SqlClient.SqlConnection.Database%2A>|} üres karakterlánc (&quot;&quot;) |}   | <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|} üres karakterlánc (&quot;&quot;) |}       Ezek a tulajdonságok értékét csak használatával módosíthatja a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>tulajdonság.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A> </xref:System.Data.SqlClient.SqlConnection.Database%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> A <xref:System.Data.SqlClient.SqlConnectionStringBuilder>osztály helyeire létrehozására és kezelésére a kapcsolati karakterláncok tartalmát.</xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._17_1.vb)]\n [!code-cs[Classic WebData SqlConnection.SqlConnection Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._17_1.cs)]"
  syntax:
    content: public SqlConnection ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection(String)
  nameWithType: SqlConnection.SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> indulásakor a megadott karakterlánc, amely tartalmazza a kapcsolati karakterláncot."
  remarks: "Ha egy új példányát <xref:System.Data.SqlClient.SqlConnection>jön létre, az olvasási/írási tulajdonságok beállítása a következő kezdeti értékekre, kivéve, ha kifejezetten megfelelőek-e a kapcsolódó kulcsszavak használatával a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>tulajdonság.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection>      | Tulajdonságok |} A kezdeti érték |}   |----------------|-------------------|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|}&15; |}   | <xref:System.Data.SqlClient.SqlConnection.Database%2A>|} üres karakterlánc (&quot;&quot;) |}   | <xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|} üres karakterlánc (&quot;&quot;) |}       Ezek a tulajdonságok értékét csak használatával módosíthatja a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>tulajdonság.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A> </xref:System.Data.SqlClient.SqlConnection.Database%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> A <xref:System.Data.SqlClient.SqlConnection>osztály létrehozására és kezelésére a kapcsolati karakterláncok tartalmát funkciókat biztosítja.</xref:System.Data.SqlClient.SqlConnection>"
  example:
  - "The following example creates and opens a <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._38_1.vb)]\n [!code-cs[Classic WebData SqlConnection.SqlConnection1 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._38_1.cs)]"
  syntax:
    content: public SqlConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "A kapcsolat megnyitásához használt a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] adatbázis."
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  id: '#ctor(System.String,System.Data.SqlClient.SqlCredential)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: SqlConnection(String,SqlCredential)
  nameWithType: SqlConnection.SqlConnection(String,SqlCredential)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String,SqlCredential)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> kapcsolati karakterláncot, nem használja a megadott osztály <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref> és egy <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> objektum, amely tartalmazza a felhasználói Azonosítót és jelszót."
  syntax:
    content: public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);
    parameters:
    - id: connectionString
      type: System.String
      description: 'A kapcsolati karakterláncot, amely nem használja a következő kapcsolati karakterlánc kulcsszavak: <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, vagy <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>; vagy nem használó <xref uid=&quot;langword_csharp_ContextConnection = true&quot; name=&quot;ContextConnection = true&quot; href=&quot;&quot;> </xref>.'
    - id: credential
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object. Ha `credential` értéke null, SqlConnection funkcionális szempontból egyenértékű &lt;xref:System.Data.SqlClient.SqlConnection.%23ctor%2A&gt;."
  overload: System.Data.SqlClient.SqlConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.AccessToken
  id: AccessToken
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
  fullName: System.Data.SqlClient.SqlConnection.AccessToken
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a hozzáférési jogkivonat a kapcsolathoz."
  syntax:
    content: public string AccessToken { get; set; }
    return:
      type: System.String
      description: "A hozzáférési jogkivonat a kapcsolathoz."
  overload: System.Data.SqlClient.SqlConnection.AccessToken*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.Common.DbTransaction
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: SqlConnection.BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Elindul az adatbázis-tranzakció."
  remarks: "Ez a parancs van leképezve a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] BEGIN TRANSACTION végrehajtását.       Explicit módon kell véglegesítése, vagy állítsa vissza a tranzakciót használja a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>vagy <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metódus.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Győződjön meg arról, hogy a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tranzakció felügyeleti modell megfelelően hajt végre, például a által biztosított egyéb tranzakció felügyeleti modellek kerülje [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Nem ad meg egy elkülönítési szintet, ha az alapértelmezett elkülönítési szint szolgál. Válasszon egy elkülönítési szintet a való a <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>metódus, használja, amely a `iso` paraméter (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>).</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> </xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> Állítsa be a tranzakció elkülönítési szintjét továbbra is fennáll, a tranzakció befejeződött, és amíg a kapcsolat be van zárva, vagy használaton. Az elkülönítési szint beállítása azokhoz a beállítás **pillanatkép** egy adatbázisban, ahol nincs engedélyezve a pillanatkép-elkülönítési szint nem kivételt jelez. A tranzakció befejezi az alapértelmezett elkülönítési szint használatával.      > [!CAUTION] > Tranzakció elindult, és a kiszolgálón egy szint 16 vagy magasabb hiba történik, ha a tranzakció nem vissza lesz állítva csak a <xref:System.Data.SqlClient.SqlDataReader.Read%2A>metódus meghívja.</xref:System.Data.SqlClient.SqlDataReader.Read%2A> Nincs kivétel történt **ExecuteReader**.      > [!CAUTION] > Ha a lekérdezés visszaadja-e nagy mennyiségű adatok és hívások `BeginTransaction`, egy <xref:System.Data.SqlClient.SqlException>vált ki, mert [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nem teszi lehetővé tranzakciók párhuzamos MARS használatakor.</xref:System.Data.SqlClient.SqlException> Ez a probléma elkerülése érdekében mindig társítani egy tranzakció a parancs vagy a kapcsolat bármely olvasók megnyitása előtt.       További információ a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tranzakciók, lásd a &quot;Explicit&quot; és &quot;Kódolási hatékony tranzakciók&quot; [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the BeginTransaction, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._1_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._1_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A párhuzamos tranzakciók nem engedélyezettek, több aktív eredménykészlet (MARS) használata esetén."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A párhuzamos tranzakciók nem támogatottak."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Adatbázis-tranzakció kezdődik-e a megadott elkülönítési szint."
  remarks: "Ez a parancs van leképezve a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] BEGIN TRANSACTION végrehajtását.       Explicit módon kell véglegesítése, vagy állítsa vissza a tranzakciót használja a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>vagy <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metódus.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Győződjön meg arról, hogy a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tranzakció felügyeleti modell megfelelően hajt végre, például a által biztosított egyéb tranzakció felügyeleti modellek kerülje [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Után egy tranzakció van véglegesítés vagy visszaállítás, a tranzakció elkülönítési szintjét továbbra is fennáll a végrehajtású módban lévő összes későbbi parancs (a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] alapértelmezett). Ez nem várt eredményekhez vezethet, például megőrzése, és egy sor kívül más felhasználók zárolása REPEATABLE READ elkülönítési szintet. Elkülönítési szintjét az alapértelmezett (READ COMMITTED) visszaállításához hajtsa végre a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] beállítása TRANZAKCIÓ ELKÜLÖNÍTÉSI SZINTET READ COMMITTED utasítást, vagy a hívás <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName>azonnal <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName>.</xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName> követ</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName> További információ a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] elkülönítési szinten &quot;Elkülönítési szintet a az adatbázismotor&quot; című [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen.       További információ a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tranzakciók, lásd a &quot;Explicit&quot; és &quot;Kódolási hatékony tranzakciók&quot; [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen.      > [!CAUTION] > Ha a lekérdezés visszaadja-e nagy mennyiségű adatok és hívások `BeginTransaction`, egy <xref:System.Data.SqlClient.SqlException>vált ki, mert [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nem teszi lehetővé tranzakciók párhuzamos MARS használatakor.</xref:System.Data.SqlClient.SqlException> Ez a probléma elkerülése érdekében mindig társítani egy tranzakció a parancs vagy a kapcsolat bármely olvasók megnyitása előtt."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/add/codesnippet/visualbasic/b09ea924-5f89-4203-b010-_1.vb)]\n [!code-cs[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/add/codesnippet/csharp/b09ea924-5f89-4203-b010-_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "Az elkülönítési szintet, amely alatt a tranzakció futni."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A párhuzamos tranzakciók nem engedélyezettek, több aktív eredménykészlet (MARS) használata esetén."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A párhuzamos tranzakciók nem támogatottak."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  id: BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(String)
  nameWithType: SqlConnection.BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Adatbázis-tranzakció a megadott tranzakció nevével kezdődik."
  remarks: "Ez a parancs van leképezve a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] BEGIN TRANSACTION végrehajtását.       A hosszát a `transactionName` paraméter nem lehet hosszabb 32 karakternél; ellenkező esetben kivétel lépett fel.       Az értéket a `transactionName` paraméter használható újabb hívások <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>és a a `savePoint` paramétere a <xref:System.Data.SqlClient.SqlTransaction.Save%2A>metódus.</xref:System.Data.SqlClient.SqlTransaction.Save%2A> </xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>       Explicit módon kell véglegesítése, vagy állítsa vissza a tranzakciót használja a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>vagy <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metódus.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Győződjön meg arról, hogy a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tranzakció felügyeleti modell megfelelően hajt végre, például a által biztosított egyéb tranzakció felügyeleti modellek kerülje [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].       További információ a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tranzakciók, lásd a &quot;Explicit&quot; és &quot;Kódolási hatékony tranzakciók&quot; [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen.      > [!CAUTION] > Ha a lekérdezés visszaadja-e nagy mennyiségű adatok és hívások `BeginTransaction`, egy <xref:System.Data.SqlClient.SqlException>vált ki, mert [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nem teszi lehetővé tranzakciók párhuzamos MARS használatakor.</xref:System.Data.SqlClient.SqlException> Ez a probléma elkerülése érdekében mindig társítani egy tranzakció a parancs vagy a kapcsolat bármely olvasók megnyitása előtt."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._36_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._36_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);
    parameters:
    - id: transactionName
      type: System.String
      description: "A tranzakció neve."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A párhuzamos tranzakciók nem engedélyezettek, több aktív eredménykészlet (MARS) használata esetén."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A párhuzamos tranzakciók nem támogatottak."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  id: BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel,String)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel,String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Adatbázis-tranzakció kezdődik-e a megadott elkülönítési szint és a tranzakció nevét."
  remarks: "Ez a parancs van leképezve a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] BEGIN TRANSACTION végrehajtását.       Az értéket a `transactionName` paraméter használható újabb hívások <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>és a a `savePoint` paramétere a <xref:System.Data.SqlClient.SqlTransaction.Save%2A>metódus.</xref:System.Data.SqlClient.SqlTransaction.Save%2A> </xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>       Explicit módon kell véglegesítése, vagy állítsa vissza a tranzakciót használja a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>vagy <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A>metódus.</xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> </xref:System.Data.SqlClient.SqlTransaction.Commit%2A> Győződjön meg arról, hogy a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tranzakció felügyeleti modell megfelelően hajt végre, például a által biztosított egyéb tranzakció felügyeleti modellek kerülje [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Után egy tranzakció van véglegesítés vagy visszaállítás, a tranzakció elkülönítési szintjét továbbra is fennáll a végrehajtású módban lévő összes későbbi parancs (a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] alapértelmezett). Ez nem várt eredményekhez vezethet, például megőrzése, és egy sor kívül más felhasználók zárolása REPEATABLE READ elkülönítési szintet. Elkülönítési szintjét az alapértelmezett (READ COMMITTED) visszaállításához hajtsa végre a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] beállítása TRANZAKCIÓ ELKÜLÖNÍTÉSI SZINTET READ COMMITTED utasítást, vagy a hívás <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName>azonnal <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName>.</xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=fullName> követ</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=fullName> További információ a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] elkülönítési szinten &quot;Elkülönítési szintet a az adatbázismotor&quot; című [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen.       További információ a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] tranzakciók, lásd a &quot;Explicit&quot; és &quot;Kódolási hatékony tranzakciók&quot; [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen.      > [!CAUTION] > Ha a lekérdezés visszaadja-e nagy mennyiségű adatok és hívások `BeginTransaction`, egy <xref:System.Data.SqlClient.SqlException>vált ki, mert [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nem teszi lehetővé tranzakciók párhuzamos MARS használatakor.</xref:System.Data.SqlClient.SqlException> Ez a probléma elkerülése érdekében mindig társítani egy tranzakció a parancs vagy a kapcsolat bármely olvasók megnyitása előtt."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, a <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/add/codesnippet/csharp/1f00ab5d-aff7-46ea-8f1d-_1.cs)]\n [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/add/codesnippet/visualbasic/1f00ab5d-aff7-46ea-8f1d-_1.vb)]"
  syntax:
    content: public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "Az elkülönítési szintet, amely alatt a tranzakció futni."
    - id: transactionName
      type: System.String
      description: "A tranzakció neve."
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "Az új tranzakció képviselő objektum."
  overload: System.Data.SqlClient.SqlConnection.BeginTransaction*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A párhuzamos tranzakciók nem engedélyezettek, több aktív eredménykészlet (MARS) használata esetén."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A párhuzamos tranzakciók nem támogatottak."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: SqlConnection.ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Módosítja az aktuális adatbázisban egy nyílt <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: "A megadott érték a `database` paraméternek kell lennie egy érvényes adatbázisnevet. A `database` paraméter nem tartalmazhat null értékű, üres vagy csak üres karaktereket tartalmazó karakterláncnak."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._10_1.cs)]\n [!code-vb[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._10_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string database);
    parameters:
    - id: database
      type: System.String
      description: "Az aktuális adatbázis helyett használni kívánt adatbázis nevét."
  overload: System.Data.SqlClient.SqlConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az adatbázisnév érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat nincs megnyitva."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Az adatbázis nem módosítható."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  id: ChangePassword(System.String,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangePassword(String,String)
  nameWithType: SqlConnection.ChangePassword(String,String)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Változások a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] a kapcsolati karakterláncban megadott új jelszó jelzi a felhasználó jelszavát."
  remarks: "Használata esetén [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] a Windows Server, a fejlesztők kihasználhatják a funkciót, amely lehetővé teszi, hogy az ügyfélalkalmazás adja meg az aktuális és az új jelszót ahhoz, hogy módosítsa a meglévő jelszavát. Alkalmazások funkciók, például egy új jelszót a felhasználó értesítése első bejelentkezés során, ha a régit lejárt, és ez a művelet befejezéséhez rendszergazdai beavatkozás nélkül is létrehozható.       A ChangePassword metódus módosításokat a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] a felhasználó jelszava jelzett a megadott `connectionString` paramétere a megadott érték a `newPassword` paraméter. Ha a kapcsolati karakterláncot tartalmazza-e az integrált biztonsági beállítást (Ez azt jelenti, hogy &quot;Integrated Security = True&quot; vagy az ezzel egyenértékű csoport), kivételt vált ki.       Annak meghatározásához, hogy a jelszó lejár, hívja, a <xref:System.Data.SqlClient.SqlConnection.Open%2A>módszer egy <xref:System.Data.SqlClient.SqlException>.</xref:System.Data.SqlClient.SqlException> vet fel</xref:System.Data.SqlClient.SqlConnection.Open%2A> Annak a megállapítására, hogy alaphelyzetbe kell állítani a jelszót, amely tartalmazza a kapcsolati karakterláncot, a <xref:System.Data.SqlClient.SqlException.Number%2A>a kivételhez tulajdonság tartalmazza az állapot értéke 18487 vagy 18488.</xref:System.Data.SqlClient.SqlException.Number%2A> Az első értéket (18487) azt jelzi, hogy a jelszava lejárt, és a második (18488) azt jelzi, hogy a jelszó előtt alaphelyzetbe kell állítani a bejelentkezés.       Ez a módszer megnyitja a saját csatlakozni a kiszolgálóhoz, a jelszó módosítása kér, és bezárja a kapcsolatot, amint befejeződött. Ez a kapcsolat nem veszi át, és nem adott vissza, a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] kapcsolatkészletbe."
  example:
  - "The following is a simple example of changing a password:  \n  \n```  \nclass Program {  \n   static void Main(string[] args) {  \n      System.Data.SqlClient.SqlConnection.ChangePassword(  \n        \"Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password\",   \n       \"new_password\");  \n   }  \n}  \n  \n```  \n  \n```  \nModule Module1  \n    Sub Main()  \nSystem.Data.SqlClient.SqlConnection.ChangePassword(  \n        \"Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password\",   \n       \"new_password\")  \n    End Sub  \nEnd Module  \n  \n```  \n  \n The following console application demonstrates the issues involved in changing a user's password because the current password has expired.  \n  \n [!code-cs[DataWorks SqlConnection.ChangePassword#1](~/add/codesnippet/csharp/7b66f468-c7fc-4a76-bd4e-_1.cs)]\n [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/add/codesnippet/visualbasic/7b66f468-c7fc-4a76-bd4e-_1.vb)]"
  syntax:
    content: public static void ChangePassword (string connectionString, string newPassword);
    parameters:
    - id: connectionString
      type: System.String
      description: "A kapcsolati karakterlánc, amely elegendő a kívánt kiszolgálóhoz való csatlakozáshoz. A kapcsolati karakterláncnak tartalmaznia kell, a felhasználói Azonosítót és a jelenlegi jelszavát."
    - id: newPassword
      type: System.String
      description: "Az új jelszó beállításához. Ezt a jelszót meg kell felelnie a jelszó biztonsági házirend beállítása a kiszolgálón, beleértve a minimális hossz követelményeinek különleges karaktereket, és így tovább."
  overload: System.Data.SqlClient.SqlConnection.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kapcsolati karakterláncot is használhat az integrált biztonsági tartalmazza.       Vagy a <code> newPassword </code> 128 karakternél."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Vagy a <code> connectionString </code> vagy a <code> newPassword </code> paraméterek egyike null értékű."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  id: ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ChangePassword(String,SqlCredential,SecureString)
  nameWithType: SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Változások a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] jelzett a felhasználó jelszavát a <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> objektum."
  syntax:
    content: public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);
    parameters:
    - id: connectionString
      type: System.String
      description: 'A kapcsolati karakterlánc, amely tartalmaz elég információt egy kiszolgálóhoz való csatlakozáshoz. A kapcsolati karakterláncot kell nem használja a következő kapcsolati karakterlánc kulcsszavak: <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, vagy <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>; vagy <xref uid=&quot;langword_csharp_ContextConnection = true&quot; name=&quot;ContextConnection = true&quot; href=&quot;&quot;> </xref>.'
    - id: credential
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;></xref> object."
    - id: newSecurePassword
      type: System.Security.SecureString
      description: "Az új jelszót. `newSecurePassword`kell a csak olvasható. A jelszót is meg kell felelnie a jelszó biztonsági házirend beállítása a kiszolgálón (például a minimális hosszát és a különleges karakterek követelményei)."
  overload: System.Data.SqlClient.SqlConnection.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "1.A kapcsolati karakterláncot tartalmaz bármilyen kombinációját <xref uid=&quot;langword_csharp_UserId&quot; name=&quot;UserId&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Password&quot; name=&quot;Password&quot; href=&quot;&quot;> </xref>, vagy <xref uid=&quot;langword_csharp_Integrated Security=true&quot; name=&quot;Integrated Security=true&quot; href=&quot;&quot;> </xref>.      2.  A kapcsolati karakterláncot tartalmaz <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;> </xref>.      3.  <code>newSecurePassword</code>érték nagyobb, mint 128 karakter hosszú lehet.      4.  <code>newSecurePassword</code>nem csak olvasható.      5.  <code>newSecurePassword</code>az üres karakterlánc."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the parameters (<code>connectionString</code>, <code>credential</code>, or <code>newSecurePassword</code>) is null."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: SqlConnection.ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Kiüríti a kapcsolatot a kapcsolatkészletből."
  remarks: "ClearAllPools alaphelyzetbe állítása vagy kiüríti a kapcsolatot a kapcsolatkészletből. Ha használja a hívás idején kapcsolatot, akkor megfelelően vannak megjelölve, és ha (és nem érkezett meg a készlet) elveti <xref:System.Data.SqlClient.SqlConnection.Close%2A>nevezzük őket.</xref:System.Data.SqlClient.SqlConnection.Close%2A>"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  id: ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClearPool(SqlConnection)
  nameWithType: SqlConnection.ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(SqlConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "A megadott kapcsolat társított kapcsolatkészlet kiüríti."
  remarks: "ClearPool törli a kapcsolatot a kapcsolatkészletből, amelyhez társítva van a `connection`. Ha további kapcsolatokat társított `connection` vannak használatban a hívás idején megfelelő megjelölve, és a rendszer elveti a (és nem érkezett meg a készlet) Ha <xref:System.Data.SqlClient.SqlConnection.Close%2A>nevezzük őket.</xref:System.Data.SqlClient.SqlConnection.Close%2A>"
  syntax:
    content: public static void ClearPool (System.Data.SqlClient.SqlConnection connection);
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> törölni kell a készletből."
  overload: System.Data.SqlClient.SqlConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  id: ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Függetlenül attól, hogy a kísérlet sikeres vagy sikertelen volt a legutóbbi kapcsolódási kísérlet kapcsolat azonosítója."
  remarks: "ClientConnectionId működik, függetlenül attól, melyik verzióját a kiszolgálóhoz kapcsolódik, de a kiterjesztett eseménynaplója és bevitelének kapcsolódási ring pufferbe hibák nem kerülnek a [!INCLUDE[sskatmai_r2](~/add/includes/ajax-current-ext-md.md)] és korábbi.       A kiterjesztett események napló megtekintéséhez, ha a hiba történt a kiszolgálón a bővítettesemény-naplózás Kapcsolatazonosító engedélyezésekor keresse meg a kapcsolat Azonosítóját. A kapcsolat azonosítója keresse meg a kapcsolódási gyűrűpuffer ([kapcsolat az SQL Server 2008 kapcsolódási gyűrűpuffer hibaelhárítási](http://go.microsoft.com/fwlink/?LinkId=207752)) az egyes csatlakozási hibák. Ha a kapcsolat azonosítója nincs kapcsolódási gyűrűpuffer, akkor feltételezheti, hálózati hiba."
  syntax:
    content: public Guid ClientConnectionId { get; }
    return:
      type: System.Guid
      description: "Kísérlet történt a legutóbbi kapcsolat kapcsolati azonosítója."
  overload: System.Data.SqlClient.SqlConnection.ClientConnectionId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Close
  id: Close
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Close()
  nameWithType: SqlConnection.Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Megszünteti a kapcsolatot az adatbázisba. Ez az preferált bármely nyitott kapcsolat bezárása."
  remarks: "A Close metódus visszaállítja a folyamatban lévő tranzakciók. Majd kiadja a kapcsolatkészletbe csatlakozni, vagy bezárja a kapcsolatot, ha kapcsolatkészletezést le van tiltva.      > [!NOTE] > Várakozó tranzakciók használatának [!INCLUDE[tsql](~/add/includes/tsql-md.md)] vagy <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>rendszer automatikusan visszaállítja a kapcsolatot alaphelyzetbe áll, ha van engedélyezve.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> Ha kapcsolatkészletezést ki van kapcsolva, a tranzakció vissza lesz állítva után `SqlConnection.Close` nevezik. Keresztül elindított tranzakciók <xref:System.Transactions>szabályozza a `System.Transactions` infrastruktúra, és amelyeket nem érinti a `SqlConnection.Close`.</xref:System.Transactions>       Egy alkalmazás egyszer lehet meghívni a Close eljárást. Nincs kivétel jön létre.       Ha a <xref:System.Data.SqlClient.SqlConnection>kívüli is megnőnek hatókör, ezt nem lehet bezárni.</xref:System.Data.SqlClient.SqlConnection> Ezért kifejezetten zárja be a kapcsolat meghívásával `Close` vagy `Dispose`. `Close`és `Dispose` megegyezik. Ha az érték a kapcsolatkészletezést `Pooling` értéke `true` vagy `yes`, az alapul szolgáló kapcsolatot ad vissza a kapcsolat készlet számára. Másrészről Ha `Pooling` értékre van állítva `false` vagy `no`, az alapul szolgáló a kiszolgálóval létesített kapcsolat le van zárva.      > [!NOTE] > Bejelentkezési és kijelentkezési események nem generál a kiszolgálón a kapcsolat nem a lehívott vagy küld vissza a kapcsolatot a kapcsolatkészletből, mert a kapcsolat ténylegesen nem megszakad amikor azt visszahozná a kapcsolatkészletbe. További információkért lásd: [SQL Server készletezését (ADO.NET)](~/add/includes/ajax-current-ext-md.md).      > [!CAUTION] > Ne hívja meg `Close` vagy `Dispose` a kapcsolatot, a DataReader vagy más felügyelt objektum az az `Finalize` az osztály. A véglegesítőt, a kiadás csak nem felügyelt erőforrást, amely a osztály birtokolja közvetlenül. Ha az osztály nem rendelkezik a nem felügyelt erőforrás nem tartalmaznak egy `Finalize` az osztálydefiníció metódust. További információkért lásd: [szemétgyűjtés](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, displays some of its properties. The connection is automatically closed at the end of the `using` block.  \n  \n [!code-vb[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._20_1.vb)]\n [!code-cs[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._20_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.Close*
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A kapcsolati szintű hiba történt a kapcsolat megnyitása közben."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  id: ColumnEncryptionKeyCacheTtl
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja azt az időt élettartamát az oszlop titkosítási kulcsbejegyzésekhez az oszloptitkosítási kulcs gyorsítótárában a a [mindig titkosítja](https://msdn.microsoft.com/library/mt163865.aspx) szolgáltatás. Az alapértelmezett értéke 2 óra. a&0; azt jelenti, hogy egyáltalán nem gyorsítótárazását."
  syntax:
    content: public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }
    return:
      type: System.TimeSpan
      description: "A időtartam alatt."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  id: ColumnEncryptionQueryMetadataCacheEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy engedélyezve van-e a lekérdezés metaadatainak gyorsítótárazása (true) avagy sem (false), a paraméteres lekérdezések futtatott [mindig titkosítja](https://msdn.microsoft.com/library/mt163865.aspx) engedélyezett adatbázisok. Az alapértelmezett érték: igaz."
  remarks: "Paraméterezett lekérdezéseknél, SqlClient válik, mivel egy körbejárási SQL Server paraméter-metaadattal, hogy mely paraméter titkosítani kell, és hogyan (mely kulcsok és algoritmusok kell használni). Ha az alkalmazás ugyanabban a lekérdezésben többször, egy extra oda a kiszolgálóra minden alkalommal létrejön, ami csökkenti az alkalmazások teljesítményének.       A **ColumnEncryptionQueryMetadataCacheEnabled** igaz értékre állítani, ha ugyanabban a lekérdezésben többször neve, a kiszolgáló körbejárási fog történni, csak egyszer. A gyorsítótár nem konfigurálható maximális méret paraméterrel 2000 lekérdezések értéke tartalmaz."
  syntax:
    content: public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Igaz értéket ad eredményül, ha a lekérdezés metaadatainak gyorsítótárazása engedélyezve van; egyébként pedig hamis. az alapértelmezett érték igaz."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  id: ColumnEncryptionTrustedMasterKeyPaths
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy adatbázis-kiszolgáló megbízható kulcs elérési utak listájának megadását teszi lehetővé. Ha egy alkalmazás lekérdezést kap a kulcs elérési útja, amely nem szerepel a listán feldolgozásakor a lekérdezés nem fog működni. Ez a tulajdonság olyan biztonsági támadások ellen, például egy sérült biztonságú SQL Server hamis kulcs elérési útja, ami azt eredményezheti, hogy a kulcs adattárolóhoz használandó hitelesítő adatok megakadályozására nyújtó további védelmet biztosít."
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,System.Collections.Generic.IList<string>> ColumnEncryptionTrustedMasterKeyPaths { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}}
      description: "Megbízható oszlopfőkulcs-elérési utakat a oszlop titkosítási listája."
  overload: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a karakterlánc, amely nyisson meg egy [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] adatbázis."
  remarks: "A ConnectionString kapcsolódási karakterláncban egy OLE DB-kapcsolati karakterlánc hasonló, de nincs azonos. OLE DB és ADO eltérően a kapcsolati karakterlánc visszaadott: ugyanaz, mint a felhasználó által beállított ConnectionString, csökkentve a biztonsági adatokat, ha a Persist Security Info értéke `false` (alapértelmezett). A [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] nem maradnak meg vagy a jelszó egy kapcsolati karakterláncot adja vissza, ha Persist Security Info állít `true`.       A ConnectionString tulajdonság használhatja egy adatbázishoz való kapcsolódáshoz. Az alábbi példában látható egy tipikus kapcsolati karakterláncot.      ```   &quot;Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)&quot;   ```Az új <xref:System.Data.SqlClient.SqlConnectionStringBuilder>érvényes kapcsolati karakterláncok futásidőben összeállításához.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> További információkért lásd: [kapcsolati karakterlánc szerkesztők](~/add/includes/ajax-current-ext-md.md).       A ConnectionString tulajdonság csak akkor, ha a kapcsolat megszakad állítható be. A kapcsolati karakterlánc-értékek számos rendelkezik a megfelelő csak olvasható tulajdonságok. Ha a kapcsolati karakterláncot, ezek a tulajdonságok frissítése, kivéve, ha hiba lép. Ebben az esetben a tulajdonságok egyike frissülnek. <xref:System.Data.SqlClient.SqlConnection>tulajdonságait csak azokat a beállításokat, amely tartalmazza a ConnectionString kapcsolódási karakterláncban adja vissza.</xref:System.Data.SqlClient.SqlConnection>       Szeretne csatlakozni a helyi számítógépen, adja meg &quot;(helyi)&quot; a kiszolgáló. Ha a kiszolgáló neve nincs megadva, a kapcsolat létrehozására történik kísérlet alapértelmezett példány a helyi számítógépen.       A ConnectionString kapcsolódási karakterláncban a lezárt kapcsolat alaphelyzetbe állításával alaphelyzetbe állítja az összes kapcsolati karakterlánc-értékek (és kapcsolódó tulajdonságok) többek között a jelszó. Például, ha egy kapcsolati karakterláncot, amely tartalmazza az &quot;adatbázis = AdventureWorks&quot;, majd állítsa vissza a karakterlánc &quot;adatforrás = myserver; Integrated Security = true&quot;, a <xref:System.Data.SqlClient.SqlConnection.Database%2A>tulajdonság értéke nem &quot;AdventureWorks&quot;.</xref:System.Data.SqlClient.SqlConnection.Database%2A>       A kapcsolati karakterlánc beállítása után azonnal elemzi. Ha a szintaktikai hibákat talált elemzésekor, futásidejű kivételt, például a <xref:System.ArgumentException>, jön létre.</xref:System.ArgumentException> Más hibák található csak akkor, ha a kapcsolat megnyitására tett kísérlet.       A kapcsolati karakterlánc alapszintű formátumát kulcsszó/érték párok pontosvesszővel elválasztva több tartalmazza. Az egyenlőségjel (=) minden kulcsszó és az értéke csatlakozik. Egy pontosvesszővel válassza el, aposztróf-karakterrel vagy idézőjel karaktert tartalmazó értékeit is, az érték idézőjelek közé kell foglalni. Ha az érték a pontosvesszőt és idézőjel karaktert is tartalmaz, az érték is lehet egyetlen idézőjelek közé. A szimpla idézőjel is akkor hasznos, ha az érték egy karakter kezdődik. Ezzel szemben a dupla idézőjel használható, ha az érték szimpla idézőjel kezdődik. Ha az érték szimpla idézőjelet, mind az idézőjel karaktert tartalmaz, az idézőjel karaktert, amely idézőjelbe az értéket meg kell kettőzni, minden alkalommal, amikor az érték belül megtörténik.       Kezdő vagy záró szóközt szerepeljenek a karakterláncértéket, az érték szimpla idézőjelek vagy dupla idézőjelek közé kell foglalni. Egész szám, a logikai érték, vagy a felsorolt értékek kezdő vagy záró szóközt a rendszer figyelmen kívül hagyja, akkor is, ha idézőjelek között. Egy szöveges karakterlánc kulcsszó vagy érték szóközt azonban megmaradnak. Egyetlen vagy dupla idézőjelek nélkül határolójelek használható belül egy kapcsolati karakterláncot (például a Data Source = my&quot;Server vagy adatforrás = a &quot;kiszolgáló), kivéve, ha egy idézőjel karaktert értéke az első vagy utolsó karaktere.       A kulcsszavak nem olyan kis-és nagybetűket.       A következő táblázat az érvényes nevek kulcsszó értékek belül a ConnectionString kapcsolódási karakterláncban.        Az alábbi lista tartalmazza az kapcsolatkészletezés belül a ConnectionString kapcsolódási karakterláncban értékek érvényes nevét. További információkért lásd: [SQL Server készletezését (ADO.NET)](~/add/includes/ajax-current-ext-md.md).      -Kapcsolat élettartam (vagy Load Balance időtúllépés) - besorolás - maximális készletméretet - minimális mérete - készletezés beállítás kulcsszó vagy kapcsolatkészlet értékek, amelyek logikai értéket kell megadni, használhatja &quot;Igen&quot; helyett &quot;true&quot; és &quot;nem&quot; helyett &quot;false&quot;. Egész értékei karakterláncként vannak megadva.      > [!NOTE] > A [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] saját protokoll segítségével kommunikálnak [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. Ezért nem támogatja egy ODBC adatforrásnevet (DSN) használatát csatlakozáskor a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] , mert nem ad hozzá egy ODBC réteget.      > [!NOTE] > Univerzális adatkapcsolati (UDL) fájlok nem támogatottak a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!CAUTION] > Ebben a kiadásban az alkalmazás kell legyen körültekintő, amikor a felhasználói bevitel (például amikor egy párbeszédpanelt, és azt a kapcsolati karakterlánc Hozzáfűzés felhasználói Azonosítót és jelszót kapcsolatos információk lekérdezése) alapján hozhat létre egy kapcsolati karakterláncot. Az alkalmazás győződjön meg arról, hogy a felhasználó további kapcsolódási karakterlánc paraméterek nem ágyazhatók ezeket az értékeket (például írja be a jelszót, mint a &quot;validpassword; adatbázis = somedb&quot; próbál csatlakozni egy másik adatbázishoz). Ha szeretné létrehozni a kapcsolati karakterláncok felhasználói bevitel alapján, használja az új <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, amely érvényesíti a kapcsolati karakterláncot, és segítséget nyújtanak a probléma.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> Lásd: [kapcsolati karakterlánc szerkesztők](../Topic/Connection%20String%20Builders.md) további információt."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the ConnectionString property before opening the connection.  \n  \n [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._24_1.vb)]\n [!code-cs[Classic WebData SqlConnection.ConnectionString Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._24_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "A kapcsolati karakterlánc, amely tartalmazza a forrás-adatbázis nevét, és más paramétereket, a kezdeti kapcsolat létrehozásához szükséges. Az alapértelmezett érték: üres karakterlánc."
  overload: System.Data.SqlClient.SqlConnection.ConnectionString*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Az érvénytelen kapcsolati karakterlánc-argumentummal adta meg, vagy nem lett megadva egy szükséges kapcsolati karakterlánc-argumentum."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi a kapcsolat létrehozása előtt megszakítja a kísérletet és hibát generál közben várakozási időt."
  remarks: "Beállíthatja a kapcsolat idő időtúllépésbe kerül használatával a `Connect``Timeout` vagy `Connection Timeout` kulcsszavak a kapcsolati karakterláncban. A 0 érték azt jelzi nincs korlátozva, és el kell kerülni a egy <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>, mert a csatlakozásra tett kísérlet határozatlan ideig vár.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and sets the `Connection Timeout` to 30 seconds in the connection string. The code opens the connection and displays the ConnectionTimeout property in the console window.  \n  \n [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._28_1.vb)]\n [!code-cs[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._28_1.cs)]"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Az eltelt idő (másodpercben) történő várakozás a kapcsolat megnyitásához. Az alapértelmezett érték 15 másodpercre."
  overload: System.Data.SqlClient.SqlConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A beállított érték a 0-nál kisebb."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: SqlConnection.CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Hoz létre, és adja vissza egy <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> rendelt objektumot a <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>."
  remarks: ''
  example:
  - >-
    [!code-vb[SqlConnection_CreateCommand#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._32_1.vb)]
     [!code-cs[SqlConnection_CreateCommand#1](~/add/codesnippet/csharp/m-system.data.sqlclient._32_1.cs)]
  syntax:
    content: public System.Data.SqlClient.SqlCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;></xref> object."
  overload: System.Data.SqlClient.SqlConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: SqlConnection.CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Credential
  id: Credential
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Credential
  nameWithType: SqlConnection.Credential
  fullName: System.Data.SqlClient.SqlConnection.Credential
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> objektum ehhez a kapcsolathoz."
  remarks: "`Persist Security Info = true`az érték beolvasásához szükséges a <xref:System.Data.SqlClient.SqlCredential>objektum hitelesítő adat tartozzon.</xref:System.Data.SqlClient.SqlCredential>       Az alapértelmezett érték a hitelesítő adatok értéke null.       Egy <xref:System.InvalidOperationException>kivételt generál: – Ha a hitelesítő adatok a megnyitott kapcsolat van beállítva.</xref:System.InvalidOperationException>      -Ha a hitelesítő adatok van beállítva, ha `Context Connection=true`.      -Ha a hitelesítő adatok van beállítva, ha `Integrated Security = true`.      -Ha a hitelesítő adatok beállítása, akkor a kapcsolódási karakterlánc `Password`.      -Ha a hitelesítő adatok beállítása, akkor a kapcsolódási karakterlánc `UserID`."
  syntax:
    content: public System.Data.SqlClient.SqlCredential Credential { get; set; }
    return:
      type: System.Data.SqlClient.SqlCredential
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> objektum ehhez a kapcsolathoz."
  overload: System.Data.SqlClient.SqlConnection.Credential*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Database
  id: Database
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Database
  nameWithType: SqlConnection.Database
  fullName: System.Data.SqlClient.SqlConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi az aktuális adatbázisban vagy használható egy kapcsolat megnyitása után az adatbázis nevét."
  remarks: "Az adatbázis tulajdonság dinamikusan frissíti. Ha módosítja az aktuális adatbázis használata a [!INCLUDE[tsql](~/add/includes/tsql-md.md)] utasítást vagy a <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>módszer, egy információs üzenetet kap, és a tulajdonság automatikusan frissül.</xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-cs[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._26_1.cs)]\n [!code-vb[Classic WebData SqlConnection.Database Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._26_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Az aktuális adatbázisban vagy használható egy kapcsolat megnyitása után az adatbázis nevét a neve. Az alapértelmezett érték: üres karakterlánc."
  overload: System.Data.SqlClient.SqlConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: SqlConnection.DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi a példányának nevét [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] , amelyhez csatlakozni kíván."
  remarks: >-
    > [!NOTE]

    >  The DataSource property returns `null` if the connection string for the <xref:System.Data.SqlClient.SqlConnection> is "context connection=true".
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._62_1.vb)]\n [!code-cs[Classic WebData SqlConnection.DataSource Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._62_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "A példány nevét [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] , amelyhez csatlakozni kíván. Az alapértelmezett érték: üres karakterlánc."
  overload: System.Data.SqlClient.SqlConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory
  id: DbProviderFactory
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
  fullName: System.Data.SqlClient.SqlConnection.DbProviderFactory
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlConnection.DbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlConnection.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlClient.SqlConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: SqlConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Felveszi a megadott tranzakció elosztott tranzakcióként."
  remarks: "Használhatja a <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>metódus az elosztott tranzakciókba való.</xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> Mivel azt felveszi a kapcsolatot a <xref:System.Transactions.Transaction>példány, **EnlistTransaction** funkcionalitást kihasználja a <xref:System.Transactions>névtér kezelésére szolgáló elosztott tranzakciók, így azt előnyösebb **EnlistDistributedTransaction** erre a célra.</xref:System.Transactions> </xref:System.Transactions.Transaction> További információkért lásd: [elosztott tranzakciók](~/add/includes/ajax-current-ext-md.md).       A tranzakcióban való részvételre használó meglévő elosztott tranzakció folytathatja a **EnlistDistributedTransaction** módszert, ha automatikus-általi bejegyzés le van tiltva. Meglévő elosztott tranzakcióban történő besorolásakor gondoskodik arról, hogy, ha a tranzakció véglegesítése vagy visszaállításra, a kódot az adatforrásban által végrehajtott módosítások vannak is véglegesítés vagy visszaállítás.       `EnlistDistributedTransaction`kivételt adja vissza, ha <xref:System.Data.SqlClient.SqlConnection>már elindította a tranzakció <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> használatával</xref:System.Data.SqlClient.SqlConnection> Azonban ha a tranzakció nem egy helyi tranzakció elindult az adatforrásban (például végrehajtásával explicit módon a BEGIN TRANSACTION utasítás használatával egy <xref:System.Data.SqlClient.SqlCommand>objektum), **EnlistDistributedTransaction** visszaállítja a helyi tranzakció, és felveszi a meglévő elosztott tranzakció a kérelemnek megfelelően.</xref:System.Data.SqlClient.SqlCommand> Nem kap értesítést, hogy a helyi tranzakció vissza lett állítva, és a helyi tranzakciók nem kezeléséért indított <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>.</xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> használatával"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "Egy meglévő hivatkozás <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> , amelyben a besorolásra."
  overload: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: SqlConnection.EnlistTransaction(Transaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Felveszi a megadott tranzakció elosztott tranzakcióként."
  remarks: 'Az elosztott tranzakciókba való használhatja a EnlistTransaction metódust. Mivel azt felveszi a kapcsolatot a <xref:System.Transactions.Transaction>példány, **EnlistTransaction** funkcionalitást kihasználja a <xref:System.Transactions>névtér kezelésére szolgáló elosztott tranzakciók, így azt előnyösebb **EnlistDistributedTransaction**, használó egy **System.EnterpriseServices.ITransaction** objektum.</xref:System.Transactions> </xref:System.Transactions.Transaction> Azt is némileg eltérő szemantika: Miután kapcsolat explicit módon feliratkozott a tranzakcióra, nem lehet unenlisted és egy másik tranzakció bejelentkezve, amíg befejeződik az első tranzakció. Az elosztott tranzakciók kapcsolatos további információkért lásd: [elosztott tranzakciók](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Egy meglévő hivatkozás <xref href=&quot;System.Transactions.Transaction&quot;> </xref> , amelyben a besorolásra."
  overload: System.Data.SqlClient.SqlConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  id: FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi vagy beállítja a FireInfoMessageEventOnUserErrors tulajdonságot."
  remarks: "Ha beállította FireInfoMessageEventOnUserErrors `true`, volt korábban kezelt kivételek most kezeli hibákról <xref:System.Data.SqlClient.SqlConnection.InfoMessage>események.</xref:System.Data.SqlClient.SqlConnection.InfoMessage> Összes esemény azonnal érvényesítést, és az eseménykezelő kezeli. Ha van FireInfoMessageEventOnUserErrors értéke `false`, majd <xref:System.Data.SqlClient.SqlConnection.InfoMessage>események kezeli, az eljárás végén.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>      > [!NOTE] > Kivételként kezelendő kell egy súlyossági szintet 17 vagy újabb verzió, amely hatására a kiszolgáló leállítására, a parancs feldolgozásakor hiba történt. Ebben az esetben, függetlenül a hibát a rendszer hogyan kezelje a rendszer kivételt hoz létre a <xref:System.Data.SqlClient.SqlConnection.InfoMessage>esemény.</xref:System.Data.SqlClient.SqlConnection.InfoMessage>       Események munkavégzés további információkért lásd: [Kapcsolateseményei](~/add/includes/ajax-current-ext-md.md). Által generált hibák bővebben a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] motor című [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen."
  syntax:
    content: public bool FireInfoMessageEventOnUserErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a FireInfoMessageEventOnUserErrors tulajdonság beállítása megtörtént; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema
  id: GetSchema
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: SqlConnection.GetSchema()
  fullName: System.Data.SqlClient.SqlConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Erre az adatforrásra vonatkozóan séma adatait adja vissza <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>. Séma kapcsolatos további információkért lásd: [SQL Server sémagyűjtemények](http://msdn.microsoft.com/library/ms254969.aspx)."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyek séma információkat tartalmaznak."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: SqlConnection.GetSchema(String)
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Erre az adatforrásra vonatkozóan séma adatait adja vissza <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> a megadott karakterlánc használ a séma neve."
  remarks: "Szükség lehet a sémaadatok, az adatbázis, a táblák vagy oszlopok. Ez a minta:-használ GetSchema séma lekérése.      -A séma korlátozások használja a megadott információkat.      -Lekérdezi az adatbázis, a táblák és az egyes oszlopok sémaadatok.       A minta futtatása előtt kell létrehozni az adatbázist, az alábbi [!INCLUDE[tsql](~/add/includes/tsql-md.md)]: ```   USE [master]   GO      CREATE DATABASE [MySchool]       GO      USE [MySchool]   GO      SET ANSI_NULLS ON   GO   SET QUOTED_IDENTIFIER ON   GO   CREATE TABLE [dbo].[Course](~/add/includes/ajax-current-ext-md.md [nvarchar](10) NOT NULL,   [Year] [smallint] NOT NULL,   [Title] [nvarchar](100) NOT NULL,   [Credits] [int] NOT NULL,   [DepartmentID] [int] NOT NULL,    CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED    (   [CourseID] ASC,   [Year] ASC   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]      GO      SET ANSI_NULLS ON   GO   SET QUOTED_IDENTIFIER ON   GO   CREATE TABLE [dbo].[Department](~/add/includes/ajax-current-ext-md.md [int] IDENTITY(1,1) NOT NULL,   [Name] [nvarchar](50) NOT NULL,   [Budget] [money] NOT NULL,   [StartDate] [datetime] NOT NULL,   [Administrator] [int] NULL,    CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED    (   [DepartmentID] ASC   )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]      GO      INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C1045&quot;, 2012, N&quot;Calculus&quot;, 4, 7)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C1061&quot;, 2012, N&quot;Physics&quot;, 4, 1)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C2021&quot;, 2012, N&quot;Composition&quot;, 3, 2)   INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N&quot;C2042&quot;, 2012, N&quot;Literature&quot;, 4, 2)      SET IDENTITY_INSERT [dbo].[Department] ON       INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N&quot;Engineering&quot;, 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N&quot;English&quot;, 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N&quot;Economics&quot;, 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)   INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N&quot;Mathematics&quot;, 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)   SET IDENTITY_INSERT [dbo].[Department] OFF      ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])   REFERENCES [dbo].[Department] ([DepartmentID])   GO   ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]   GO   ``` [hogyan séma-adatok beolvasása adatbázisból](http://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) kódmintában C# és Visual Basic verziója rendelkezik-e a Visual Studio-projektet.             ```   using System;   using System.Data;   using System.Data.SqlClient;      class Program {      static void Main(string[] args) {            using (SqlConnection conn = new SqlConnection(&quot;Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;&quot;)) {            conn.Open();               // Get the Meta Data for Supported Schema Collections            DataTable metaDataTable = conn.GetSchema(&quot;MetaDataCollections&quot;);               Console.WriteLine(&quot;Meta Data for Supported Schema Collections:&quot;);            ShowDataTable(metaDataTable, 25);            Console.WriteLine();               // Get the schema information of Databases in your instance            DataTable databasesSchemaTable = conn.GetSchema(&quot;Databases&quot;);               Console.WriteLine(&quot;Schema Information of Databases:&quot;);            ShowDataTable(databasesSchemaTable, 25);            Console.WriteLine();               // First, get schema information of all the tables in current database;            DataTable allTablesSchemaTable = conn.GetSchema(&quot;Tables&quot;);               Console.WriteLine(&quot;Schema Information of All Tables:&quot;);            ShowDataTable(allTablesSchemaTable, 20);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Table Type to get             // the specified table(s).            // You can use four restrictions for Table, so you should create a 4 members array.            String[] tableRestrictions = new String[4];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Table Type.             // Now we specify the Table Name of the table what we want to get schema information.            tableRestrictions[2] = &quot;Course&quot;;               DataTable courseTableSchemaTable = conn.GetSchema(&quot;Tables&quot;, tableRestrictions);               Console.WriteLine(&quot;Schema Information of Course Tables:&quot;);            ShowDataTable(courseTableSchemaTable, 20);            Console.WriteLine();               // First, get schema information of all the columns in current database.            DataTable allColumnsSchemaTable = conn.GetSchema(&quot;Columns&quot;);               Console.WriteLine(&quot;Schema Information of All Columns:&quot;);            ShowColumns(allColumnsSchemaTable);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).            // You can use four restrictions for Column, so you should create a 4 members array.            String[] columnRestrictions = new String[4];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Column Name.             // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.            columnRestrictions[2] = &quot;Course&quot;;            columnRestrictions[3] = &quot;DepartmentID&quot;;               DataTable departmentIDSchemaTable = conn.GetSchema(&quot;Columns&quot;, columnRestrictions);               Console.WriteLine(&quot;Schema Information of DepartmentID Column in Course Table:&quot;);            ShowColumns(departmentIDSchemaTable);            Console.WriteLine();               // First, get schema information of all the IndexColumns in current database            DataTable allIndexColumnsSchemaTable = conn.GetSchema(&quot;IndexColumns&quot;);               Console.WriteLine(&quot;Schema Information of All IndexColumns:&quot;);            ShowIndexColumns(allIndexColumnsSchemaTable);            Console.WriteLine();               // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to             // get the specified column(s).            // You can use five restrictions for Column, so you should create a 5 members array.            String[] indexColumnsRestrictions = new String[5];               // For the array, 0-member represents Catalog; 1-member represents Schema;             // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.             // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.            indexColumnsRestrictions[2] = &quot;Course&quot;;            indexColumnsRestrictions[4] = &quot;CourseID&quot;;               DataTable courseIdIndexSchemaTable = conn.GetSchema(&quot;IndexColumns&quot;, indexColumnsRestrictions);               Console.WriteLine(&quot;Index Schema Information of CourseID Column in Course Table:&quot;);            ShowIndexColumns(courseIdIndexSchemaTable);            Console.WriteLine();         }            Console.WriteLine(&quot;Please press any key to exit...&quot;);         Console.ReadKey();      }         private static void ShowDataTable(DataTable table, Int32 length) {         foreach (DataColumn col in table.Columns) {            Console.Write(&quot;{0,-&quot; + length + &quot;}&quot;, col.ColumnName);         }         Console.WriteLine();            foreach (DataRow row in table.Rows) {            foreach (DataColumn col in table.Columns) {               if (col.DataType.Equals(typeof(DateTime)))                  Console.Write(&quot;{0,-&quot; + length + &quot;:d}&quot;, row[col]);               else if (col.DataType.Equals(typeof(Decimal)))                  Console.Write(&quot;{0,-&quot; + length + &quot;:C}&quot;, row[col]);               else                  Console.Write(&quot;{0,-&quot; + length + &quot;}&quot;, row[col]);            }            Console.WriteLine();         }      }         private static void ShowDataTable(DataTable table) {         ShowDataTable(table, 14);      }         private static void ShowColumns(DataTable columnsTable) {         var selectedRows = from info in columnsTable.AsEnumerable()                            select new {                               TableCatalog = info[&quot;TABLE_CATALOG&quot;],                               TableSchema = info[&quot;TABLE_SCHEMA&quot;],                               TableName = info[&quot;TABLE_NAME&quot;],                               ColumnName = info[&quot;COLUMN_NAME&quot;],                               DataType = info[&quot;DATA_TYPE&quot;]                            };            Console.WriteLine(&quot;{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}&quot;, &quot;TableCatalog&quot;, &quot;TABLE_SCHEMA&quot;,             &quot;TABLE_NAME&quot;, &quot;COLUMN_NAME&quot;, &quot;DATA_TYPE&quot;);         foreach (var row in selectedRows) {            Console.WriteLine(&quot;{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}&quot;, row.TableCatalog,                row.TableSchema, row.TableName, row.ColumnName, row.DataType);         }      }         private static void ShowIndexColumns(DataTable indexColumnsTable) {         var selectedRows = from info in indexColumnsTable.AsEnumerable()                            select new {                               TableSchema = info[&quot;table_schema&quot;],                               TableName = info[&quot;table_name&quot;],                               ColumnName = info[&quot;column_name&quot;],                               ConstraintSchema = info[&quot;constraint_schema&quot;],                               ConstraintName = info[&quot;constraint_name&quot;],                               KeyType = info[&quot;KeyType&quot;]                            };            Console.WriteLine(&quot;{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}&quot;, &quot;table_schema&quot;, &quot;table_name&quot;, &quot;column_name&quot;, &quot;constraint_schema&quot;, &quot;constraint_name&quot;, &quot;KeyType&quot;);         foreach (var row in selectedRows) {            Console.WriteLine(&quot;{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}&quot;, row.TableSchema,                row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);         }      }   }   ```"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Vissza a séma neve."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyek séma információkat tartalmaznak."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>nullként van megadva."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: SqlConnection.GetSchema(String,String[])
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Erre az adatforrásra vonatkozóan séma adatait adja vissza <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> a megadott karakterlánc használata a sémanév és a korlátozás értékeket a megadott karakterlánc-tömbben."
  remarks: "A `restrictionValues` paraméter megadhatja *n* értékek, amelyeket a korlátozásgyűjtemény egy adott gyűjtemény által megadott mélységét. Ahhoz, hogy egy adott korlátozás kapacitásértékeinek beállítása, és nincs beállítva az egyéb korlátozások értékeit, be kell állítani az előző korlátozások `null` , majd tegye a megfelelő értéket a korlátozásokat, amelyeket szeretne, adjon meg egy értéket.       Például az &quot;Tábla&quot; gyűjteménye. Ha a &quot;Tábla&quot; gyűjtemény három korlátozások – adatbázis, a tulajdonos, és táblanév--, és szeretné segítségnyújtáshoz csak a &quot;Carl&quot; tulajdonosa társított táblákat, kell átadni a következő értékeket: null, a &quot;Carl&quot;. Egy korlátozási érték nem kerül át, a, ha az alapértelmezett értékeket használják, hogy korlátozásra vonatkozóan. Ez az azonosak maradjanak, a sikeres `null`, amely nem azonos a paraméter értéke üres karakterláncot a sikeres. Ebben az esetben, az üres karakterlánc (&quot;&quot;) a megadott paraméter értéke számít.       A tanúsítványkulcs GetSchema kódminta lásd: <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>.</xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Vissza a séma neve."
    - id: restrictionValues
      type: System.String[]
      description: "Egy értékhalmazt korlátozás a kért séma."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyek séma információkat tartalmaznak."
  overload: System.Data.SqlClient.SqlConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>nullként van megadva."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: SqlConnection.InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Akkor következik be, amikor [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] figyelmeztető vagy információs üzenetet adja vissza."
  remarks: "Ügyfelek, figyelmeztetés vagy a kiszolgáló által küldött tájékoztató üzeneteket dolgozni hozzon létre egy <xref:System.Data.SqlClient.SqlInfoMessageEventHandler>delegált figyelni ezt az eseményt.</xref:System.Data.SqlClient.SqlInfoMessageEventHandler>       A InfoMessage esemény következik be, amikor egy üzenetet, amelyben egy 10 súlyossága vagy kisebb által visszaadott [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. 11 és 20 közötti besorolással üzenetek előléptetése hiba és a súlyosság rendelkező 20 okok keresztül létesített kapcsolat bezárása üzeneteket. További információ a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] hibaszintek, &quot;Database Engine hiba fokozatok&quot; című [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen.       További információt és példa: [Kapcsolateseményei](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.SqlClient.SqlInfoMessageEventHandler
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.Open
  id: Open
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: Open()
  nameWithType: SqlConnection.Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "A <xref:System.Data.SqlClient.SqlConnection.ConnectionString*>.</xref:System.Data.SqlClient.SqlConnection.ConnectionString*> által megadott tulajdonságbeállítások tartalmazó adatbázis-kapcsolat megnyitása"
  remarks: "A <xref:System.Data.SqlClient.SqlConnection>megrajzolja a kapcsolat készletből nyitott kapcsolat, ha elérhető ilyen.</xref:System.Data.SqlClient.SqlConnection> Ellenkező esetben ez kapcsolatot hoz létre új példányának [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)].      > [!NOTE] > Ha a <xref:System.Data.SqlClient.SqlConnection>kívüli is megnőnek hatókör, nem le van zárva.</xref:System.Data.SqlClient.SqlConnection> Ezért kifejezetten zárja be a kapcsolat <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</xref:System.Data.SqlClient.SqlConnection.Close%2A> meghívásával      > [!NOTE] > Ha megad egy portszámot, amikor próbál csatlakozni egy példánya 1433 eltérő [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] eltérő TCP/IP protokoll használatát, az Open metódust sikertelen lesz. 1433 eltérő portszámot adjon meg, hogy tartalmazza a &quot;server = számítógépnév, portszám&quot; a kapcsolati karakterláncot, használja a TCP/IP protokoll.      > [!NOTE] > A [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] &quot;Lehetővé teszi hívások nem felügyelt szerelvények az&quot; engedélyezve van a biztonsági engedélyre van szüksége (<xref:System.Security.Permissions.SecurityPermission> rendelkező <xref:System.Security.Permissions.SecurityPermissionFlag>beállítása `UnmanagedCode`) megnyitása egy <xref:System.Data.SqlClient.SqlConnection>SQL hibakeresés engedélyezésével.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Security.Permissions.SecurityPermissionFlag> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, opens it, and displays some of its properties. The connection is automatically closed at the end of the `using` block.  \n  \n [!code-vb[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._18_1.vb)]\n [!code-cs[Classic WebData SqlConnection.Open Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._18_1.cs)]"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat nem nyitható meg egy adatforrás vagy a kiszolgáló megadása nélkül.       vagy a kapcsolat már meg nyitva."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "A kapcsolati szintű hiba történt a kapcsolat megnyitása. Ha a <> </> *> tulajdonság 18487 vagy 18488 értéket tartalmazza, ez azt jelzi, hogy a megadott jelszó lejárt, vagy alaphelyzetbe kell állítani. Tekintse meg a <> </> *> metódus olvashat.       A <xref uid=&quot;langword_csharp_&lt;system.data.localdb&gt;&quot; name=&quot;&lt;system.data.localdb&gt;&quot; href=&quot;&quot;> </xref> címke az app.config fájlban érvénytelen vagy ismeretlen elemmel rendelkezik."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Két, azonos nevű bejegyzést is tartalmaz a <xref uid=&quot;langword_csharp_&lt;localdbinstances&gt;&quot; name=&quot;&lt;localdbinstances&gt;&quot; href=&quot;&quot;> </xref> szakasz."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: OpenAsync(CancellationToken)
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Egy aszinkron verzióját <> </> *>, amely az adatbázis-kapcsolat megnyitása a tulajdonság által megadott beállításokkal a <> </> *>. A megszakítási jogkivonatot kérni, hogy a művelet elhagyásra kerül, az időkorlát lejárta előtt használható.  Kivételek propagálódik a visszaadott feladattal. Ha a kapcsolat időtúllépési értéket a sikertelen kapcsolódás nélkül eltelte után a visszaadott feladat lesz megjelölve kivétel miatt hibát jelzett. A megvalósítás egy feladatot a hívó szál készletezett és nem készletezett kapcsolat blokkolása nélkül adja vissza."
  remarks: "OpenAsync, hívása után <xref:System.Data.SqlClient.SqlConnection.State%2A>kell visszaadnia <xref:System.Data.ConnectionState>csak a visszaadott <xref:System.Threading.Tasks.Task>befejeződött.</xref:System.Threading.Tasks.Task> </xref:System.Data.ConnectionState> </xref:System.Data.SqlClient.SqlConnection.State%2A> Ezután, ha a kapcsolat nem volt sikeres, <xref:System.Data.SqlClient.SqlConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> kell visszaadnia.</xref:System.Data.SqlClient.SqlConnection.State%2A> Ha a kapcsolódás sikertelen, <xref:System.Data.SqlClient.SqlConnection.State%2A> <xref:System.Data.ConnectionState>.</xref:System.Data.ConnectionState> kell visszaadnia.</xref:System.Data.SqlClient.SqlConnection.State%2A>       Hívása <xref:System.Data.SqlClient.SqlConnection.Close%2A>megkísérli állítsa le vagy zárja be a megfelelő OpenAsync hívás.</xref:System.Data.SqlClient.SqlConnection.Close%2A>       Aszinkron programozásba a további információt a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] adatszolgáltatója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)], lásd: [aszinkron programozás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "A megszakítási utasítás."
    return:
      type: System.Threading.Tasks.Task
      description: "Az aszinkron művelet képviselő feladat."
  overload: System.Data.SqlClient.SqlConnection.OpenAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "OpenAsync egynél többször hívja meg ugyanazon a feladat befejezése előtt.       <xref uid=&quot;langword_csharp_Context Connection=true&quot; name=&quot;Context Connection=true&quot; href=&quot;&quot;></xref>van megadva a kapcsolati karakterláncban.       A kapcsolat nem volt elérhető a kapcsolat készletből a kapcsolódási időkorlát lejárta előtt."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Bármely által visszaadott hiba a következő [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] , amely a kapcsolat megnyitása során történt."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekéri a mérete (bájt) példányával folytatott kommunikációhoz használt hálózati csomagok [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]."
  remarks: "Ha egy alkalmazás tömeges másolási műveletet hajtanak végre, vagy küld vagy fogad szöveges vagy képi adatok sok, a csomag mérete nagyobb, mint az alapértelmezett növelheti a hatékonyságot, mert azt eredményezi, hogy kevesebb hálózati olvasási és írási műveletet. Ha a kérelmet küld, és kis mennyiségű információt kap, akkor megadhatja a csomag mérete 512 bájt (csomagméret értéke a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), amely elegendő-e a legtöbb adatátviteli műveleteket.</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> A legtöbb alkalmazás esetén az alapértelmezett csomag mérete ajánlott.       PacketSize bájtok 512 és 32767 közé érték lehet. Kivételt generál, ha az értéke a tartományon kívül van.       Az alapértelmezett érték szám-nál nagyobb megadása 8000, akkor a csomagok a többoldalas foglaló-példányon [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] helyett a sokkal hatékonyabb SinglePage foglaló átfogó méretezhetősége a csökkenti a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]. További információt a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] memóriát, lásd: [memóriaarchitektúra](http://go.microsoft.com/fwlink/?LinkId=143705) a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] Books Online webhelyen."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection>, including setting the `Packet Size` to 512 in the connection string. It displays the PacketSize and <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> properties in the console window.  \n  \n [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._63_1.vb)]\n [!code-cs[Classic WebData SqlConnection.PacketSize Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._63_1.cs)]"
  syntax:
    content: public int PacketSize { get; }
    return:
      type: System.Int32
      description: "A mérete (bájt) a hálózati csomagokat. Az alapértelmezett érték: 8000."
  overload: System.Data.SqlClient.SqlConnection.PacketSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  id: RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  fullName: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Az oszlop kulcstárszolgáltatók regisztrálja."
  syntax:
    content: public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary<string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider> customProviders);
    parameters:
    - id: customProviders
      type: System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider}
      description: "Az egyéni szolgáltatók"
  overload: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  id: ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ResetStatistics()
  nameWithType: SqlConnection.ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ha engedélyezve van a statisztika-összegyűjtés, minden érték nulla állnak vissza."
  remarks: "Statisztika-Összegyűjtés nincs engedélyezve, és ezt a módszert nevezik, ha nincs hiba fordul elő."
  syntax:
    content: public void ResetStatistics ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnection.ResetStatistics*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  id: RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: RetrieveStatistics()
  nameWithType: SqlConnection.RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "A metódus lehívásra kerül időben ponton statisztika nevét érték pár gyűjteményének beolvasása."
  remarks: "Ez a metódus meghívásakor beolvasni az értékek megegyeznek az aktuális pontnál időben. Ha Ön most folytatja, a kapcsolat használatával, az értékek helytelenek. Hajtsa végre újból az kérhetik le a legfrissebb metódust kell."
  syntax:
    content: public System.Collections.IDictionary RetrieveStatistics ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Visszaad egy hivatkozást típusú <xref:System.Collections.IDictionary>a <xref:System.Collections.DictionaryEntry>elemek.</xref:System.Collections.DictionaryEntry> </xref:System.Collections.IDictionary>"
  overload: System.Data.SqlClient.SqlConnection.RetrieveStatistics*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Lekérdezi a példányának verzióját tartalmazó karakterlánc [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] számára az ügyfél csatlakozik."
  remarks: "A verzió a következő formátumban: *##. ##. ###*, ahol az első két szám főverziója, a következő két szám a alverzió, és az utolsó négy számjegye a végleges verziót. A karakterlánc a következő formátumban: *major.minor.build*, ahol a fő és kisebb pontosan két számjegyek és build pontosan négy számjegyét.       OWA lett meghívva, amikor a visszaadott feladat nem fejeződött be, és a kapcsolat nem nyitható meg a <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>.</xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> hívása után"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the ServerVersion property.  \n  \n [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._30_1.vb)]\n [!code-cs[Classic WebData ISqlConnection.ServerVersion Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._30_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "A példány verziója [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]."
  overload: System.Data.SqlClient.SqlConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A kapcsolat le van zárva.       OWA lett meghívva, amikor a visszaadott feladat nem fejeződött be, és a kapcsolat nem nyitható meg a <xref:System.Data.SqlClient.SqlConnection.OpenAsync*>.</xref:System.Data.SqlClient.SqlConnection.OpenAsync*> hívása után"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.State
  id: State
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: State
  nameWithType: SqlConnection.State
  fullName: System.Data.SqlClient.SqlConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Állapotát jelzi a <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> hálózati legutóbbi művelet során végre a kapcsolat."
  remarks: "Visszaadja egy <xref:System.Data.ConnectionState>enumerálás a <xref:System.Data.SqlClient.SqlConnection>.</xref:System.Data.SqlClient.SqlConnection> állapotát jelzi.</xref:System.Data.ConnectionState> Bezárása és újbóli megnyitása a kapcsolat állapota értékének automatikusan frissíti."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Egy <xref href=&quot;System.Data.ConnectionState&quot;> </xref> enumerálása."
  overload: System.Data.SqlClient.SqlConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  id: StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ha beállítása <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, lehetővé teszi, hogy statisztika-Összegyűjtés a jelenlegi kapcsolathoz."
  remarks: "Statisztika gyűjtésének engedélyezése egy kisebb, de mérhető hatással van a teljesítményre, és ezért engedélyezni kell, csak akkor, ha szükséges."
  syntax:
    content: public bool StatisticsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "Beolvasása <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> statisztika-Összegyűjtés esetén engedélyezett, ha <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>az alapértelmezett beállítás."
  overload: System.Data.SqlClient.SqlConnection.StatisticsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlConnection.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Új objektumot hoz létre, amely az aktuális példány másolata."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.SqlClient.SqlConnection>példány típusúvá egy <xref:System.ICloneable>felületet.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlConnection>       Ez a tag csak a .NET kompakt keretrendszer támogatja."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Új objektumot, amely ezt a példányt egy példányát."
  overload: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  id: WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Karakterlánc, amely azonosítja az adatbázis-ügyfél lekérdezi."
  remarks: "A karakterlánc általában tartalmaz az ügyfél hálózati nevét. A WorkstationId tulajdonság megfelel a `Workstation ID` kapcsolati karakterlánc típusú tulajdonság."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnection> and displays the WorkstationId property.  \n  \n [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._7_1.vb)]\n [!code-cs[Classic WebData SqlConnection.WorkstationId Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._7_1.cs)]"
  syntax:
    content: public string WorkstationId { get; }
    return:
      type: System.String
      description: "Egy karakterlánc, amely azonosítja az adatbázis-ügyfél. Ha nincs megadva, az ügyfélszámítógép nevét. Ha egyike sincs megadva, az értéke üres karakterlánc."
  overload: System.Data.SqlClient.SqlConnection.WorkstationId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Data.SqlClient.SqlConnection.#ctor
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection()
  nameWithType: SqlConnection.SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection(String)
  nameWithType: SqlConnection.SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection(String,SqlCredential)
  nameWithType: SqlConnection.SqlConnection(String,SqlCredential)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(String,SqlCredential)
- uid: System.Data.SqlClient.SqlCredential
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCredential
  nameWithType: SqlCredential
  fullName: System.Data.SqlClient.SqlCredential
- uid: System.Data.SqlClient.SqlConnection.AccessToken
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
  fullName: System.Data.SqlClient.SqlConnection.AccessToken
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: SqlConnection.BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  nameWithType: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(String)
  nameWithType: SqlConnection.BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(String)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel,String)
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel,String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(IsolationLevel,String)
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: SqlConnection.ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(String)
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword(String,String)
  nameWithType: SqlConnection.ChangePassword(String,String)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,String)
- uid: System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword(String,SqlCredential,SecureString)
  nameWithType: SqlConnection.ChangePassword(String,SqlCredential,SecureString)
  fullName: System.Data.SqlClient.SqlConnection.ChangePassword(String,SqlCredential,SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: SqlConnection.ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearPool(SqlConnection)
  nameWithType: SqlConnection.ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(SqlConnection)
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.SqlClient.SqlConnection.Close
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Close()
  nameWithType: SqlConnection.Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
  fullName: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,IList<String>>
  nameWithType: IDictionary<String,IList<String>>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Collections.Generic.IList<System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Collections.Generic.IList<System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: SqlConnection.CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: SqlConnection.CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.SqlClient.SqlConnection.Credential
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Credential
  nameWithType: SqlConnection.Credential
  fullName: System.Data.SqlClient.SqlConnection.Credential
- uid: System.Data.SqlClient.SqlConnection.Database
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Database
  nameWithType: SqlConnection.Database
  fullName: System.Data.SqlClient.SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DataSource
  nameWithType: SqlConnection.DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
  fullName: System.Data.SqlClient.SqlConnection.DbProviderFactory
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlConnection.Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: SqlConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: SqlConnection.EnlistTransaction(Transaction)
  fullName: System.Data.SqlClient.SqlConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.GetSchema
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema()
  nameWithType: SqlConnection.GetSchema()
  fullName: System.Data.SqlClient.SqlConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: SqlConnection.GetSchema(String)
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String)
- uid: System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: SqlConnection.GetSchema(String,String[])
  fullName: System.Data.SqlClient.SqlConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: InfoMessage
  nameWithType: SqlConnection.InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
- uid: System.Data.SqlClient.SqlInfoMessageEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlInfoMessageEventHandler
  nameWithType: SqlInfoMessageEventHandler
  fullName: System.Data.SqlClient.SqlInfoMessageEventHandler
- uid: System.Data.SqlClient.SqlConnection.Open
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Open()
  nameWithType: SqlConnection.Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: OpenAsync(CancellationToken)
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
  fullName: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(IDictionary<String,SqlColumnEncryptionKeyStoreProvider>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,SqlColumnEncryptionKeyStoreProvider>
  nameWithType: IDictionary<String,SqlColumnEncryptionKeyStoreProvider>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider
    name: SqlColumnEncryptionKeyStoreProvider
    nameWithType: SqlColumnEncryptionKeyStoreProvider
    fullName: SqlColumnEncryptionKeyStoreProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ResetStatistics()
  nameWithType: SqlConnection.ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RetrieveStatistics()
  nameWithType: SqlConnection.RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: State
  nameWithType: SqlConnection.State
  fullName: System.Data.SqlClient.SqlConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlConnection.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
- uid: System.Data.SqlClient.SqlConnection.#ctor*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection.SqlConnection
- uid: System.Data.SqlClient.SqlConnection.AccessToken*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: AccessToken
  nameWithType: SqlConnection.AccessToken
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: SqlConnection.BeginDbTransaction
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: SqlConnection.BeginTransaction
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: SqlConnection.ChangeDatabase
- uid: System.Data.SqlClient.SqlConnection.ChangePassword*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ChangePassword
  nameWithType: SqlConnection.ChangePassword
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: SqlConnection.ClearAllPools
- uid: System.Data.SqlClient.SqlConnection.ClearPool*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClearPool
  nameWithType: SqlConnection.ClearPool
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ClientConnectionId
  nameWithType: SqlConnection.ClientConnectionId
- uid: System.Data.SqlClient.SqlConnection.Close*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Close
  nameWithType: SqlConnection.Close
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionKeyCacheTtl
  nameWithType: SqlConnection.ColumnEncryptionKeyCacheTtl
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionQueryMetadataCacheEnabled
  nameWithType: SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled
- uid: System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ColumnEncryptionTrustedMasterKeyPaths
  nameWithType: SqlConnection.ColumnEncryptionTrustedMasterKeyPaths
- uid: System.Data.SqlClient.SqlConnection.ConnectionString*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionString
  nameWithType: SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: SqlConnection.ConnectionTimeout
- uid: System.Data.SqlClient.SqlConnection.CreateCommand*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateCommand
  nameWithType: SqlConnection.CreateCommand
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: SqlConnection.CreateDbCommand
- uid: System.Data.SqlClient.SqlConnection.Credential*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Credential
  nameWithType: SqlConnection.Credential
- uid: System.Data.SqlClient.SqlConnection.Database*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Database
  nameWithType: SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DataSource
  nameWithType: SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.DbProviderFactory*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: DbProviderFactory
  nameWithType: SqlConnection.DbProviderFactory
- uid: System.Data.SqlClient.SqlConnection.Dispose*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Dispose
  nameWithType: SqlConnection.Dispose
- uid: System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: SqlConnection.EnlistDistributedTransaction
- uid: System.Data.SqlClient.SqlConnection.EnlistTransaction*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: SqlConnection.EnlistTransaction
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: FireInfoMessageEventOnUserErrors
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.GetSchema*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: GetSchema
  nameWithType: SqlConnection.GetSchema
- uid: System.Data.SqlClient.SqlConnection.Open*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: Open
  nameWithType: SqlConnection.Open
- uid: System.Data.SqlClient.SqlConnection.OpenAsync*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: OpenAsync
  nameWithType: SqlConnection.OpenAsync
- uid: System.Data.SqlClient.SqlConnection.PacketSize*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RegisterColumnEncryptionKeyStoreProviders
  nameWithType: SqlConnection.RegisterColumnEncryptionKeyStoreProviders
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ResetStatistics
  nameWithType: SqlConnection.ResetStatistics
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: RetrieveStatistics
  nameWithType: SqlConnection.RetrieveStatistics
- uid: System.Data.SqlClient.SqlConnection.ServerVersion*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: ServerVersion
  nameWithType: SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: State
  nameWithType: SqlConnection.State
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: StatisticsEnabled
  nameWithType: SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlConnection.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlConnection.WorkstationId*
  parent: System.Data.SqlClient.SqlConnection
  isExternal: false
  name: WorkstationId
  nameWithType: SqlConnection.WorkstationId
