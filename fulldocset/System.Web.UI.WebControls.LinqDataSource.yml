### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSource
  id: LinqDataSource
  children:
  - System.Web.UI.WebControls.LinqDataSource.#ctor
  - System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause
  - System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause
  - System.Web.UI.WebControls.LinqDataSource.AutoPage
  - System.Web.UI.WebControls.LinqDataSource.AutoSort
  - System.Web.UI.WebControls.LinqDataSource.ContextCreated
  - System.Web.UI.WebControls.LinqDataSource.ContextCreating
  - System.Web.UI.WebControls.LinqDataSource.ContextDisposing
  - System.Web.UI.WebControls.LinqDataSource.ContextTypeName
  - System.Web.UI.WebControls.LinqDataSource.CreateQueryableView
  - System.Web.UI.WebControls.LinqDataSource.CreateView
  - System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSource.Deleted
  - System.Web.UI.WebControls.LinqDataSource.DeleteParameters
  - System.Web.UI.WebControls.LinqDataSource.Deleting
  - System.Web.UI.WebControls.LinqDataSource.EnableDelete
  - System.Web.UI.WebControls.LinqDataSource.EnableInsert
  - System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking
  - System.Web.UI.WebControls.LinqDataSource.EnableUpdate
  - System.Web.UI.WebControls.LinqDataSource.GroupBy
  - System.Web.UI.WebControls.LinqDataSource.GroupByParameters
  - System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSource.Inserted
  - System.Web.UI.WebControls.LinqDataSource.Inserting
  - System.Web.UI.WebControls.LinqDataSource.InsertParameters
  - System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.LinqDataSource.OrderBy
  - System.Web.UI.WebControls.LinqDataSource.OrderByParameters
  - System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy
  - System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters
  - System.Web.UI.WebControls.LinqDataSource.Select
  - System.Web.UI.WebControls.LinqDataSource.Selected
  - System.Web.UI.WebControls.LinqDataSource.Selecting
  - System.Web.UI.WebControls.LinqDataSource.SelectParameters
  - System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState
  - System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType
  - System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName
  - System.Web.UI.WebControls.LinqDataSource.TableName
  - System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.LinqDataSource.Updated
  - System.Web.UI.WebControls.LinqDataSource.UpdateParameters
  - System.Web.UI.WebControls.LinqDataSource.Updating
  - System.Web.UI.WebControls.LinqDataSource.Where
  - System.Web.UI.WebControls.LinqDataSource.WhereParameters
  langs:
  - csharp
  name: LinqDataSource
  nameWithType: LinqDataSource
  fullName: System.Web.UI.WebControls.LinqDataSource
  type: Class
  summary: "Az ASP.NET weblapon lekérdezéséhez és módosíthatják az adatokat egy objektumot a jelölés során szövegben a Language-Integrated lekérdezés (LINQ) használatát teszi lehetővé."
  remarks: "Ebben a témakörben:- [bemutatása](#introduction)      -   [műveleti sorrend](#order_of_operations)      -   [rendelési adatok](#ordering_data)      -   [csoportosítási adatok](#grouping_data)      -   [módosítása](#data_modifications)      -   [futási idő kiértékelése értékeket](#evaluating_value_at_run_time)      -   [tárolt eljárások használata](#working_with_stored_procedures)      -   [deklaratív Szintaxisán](#declarative_syntax) <a name=&quot;introduction&quot;> </a> ## Introduction Language-Integrated lekérdezés (LINQ) olyan készlete, amelyek lehetővé teszik a átjárás, a szűrő és a leképezés műveletek bármely olyan deklaratív módon kell megadni a lekérdezési operátorok meghatározó lekérdezés szintaxisa. A NET-alapú programozási nyelv.       Az objektum egy memórián belüli adatgyűjtés vagy adatbázisból származó adatok képviselő objektum lehet. Beolvasni, vagy módosíthatja az adatokat SQL-parancsokat minden egyes művelethez írása nélkül.       A linqdatasource adatforrás vezérlő LINQ használja az ASP.NET-weblap tulajdonságainak beállításával a jelölés során szöveg teszi lehetővé. A linqdatasource adatforrás használ LINQ to SQL automatikus előállítására szolgál az adatok parancsokat. További információ a &quot;LINQ to SQL&quot;: [LINQ to SQL](~/add/includes/ajax-current-ext-md.md).       Adatgyűjtés a memóriában levő-gyűjteményből, ha beállította a <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>tulajdonságot az osztályhoz, amely tartalmazza az adatgyűjtést.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> Beállíthatja a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság a következő tulajdonság vagy mező, amely visszaadja az adatgyűjtést.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Például lehetséges, hogy egy osztályt `Person` nevű tulajdonságot tartalmazó `FavoriteCities` , hogy a karakterlánc-értékek tömbjét adja vissza. Ebben az esetben beállíthatja a <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>tulajdonságot `Person` és állítsa be a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonságot `FavoriteCities`.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>       Ha egy adatbázis kérdez le, először létre kell hoznia az adatbázis és a táblák képviselő entitás osztályok. Használhatja a [!INCLUDE[vs_ordesigner_long](~/add/includes/vs-ordesigner-long-md.md)] vagy a SqlMetal.exe segédprogramot, ezek az osztályok létrehozásához. Ezután a <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>tulajdonságot az adatbázis képviselő osztályt, és állítsa be a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság a adatbázistábla jelölő tulajdonsághoz.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> </xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>      <a name=&quot;order_of_operations&quot;></a>## Műveletek a linqdatasource adatforrás vezérlőelem sorrendjét vonatkozik az műveleteket az alábbi sorrendben: 1.  Ha (adja meg, mely adatokat rögzíti, vissza).      2.  Order By (rendezés).      3.  A Group By (összesített adatok rekordok értékek).      4.  Rendezés csoportok szerint (csoportosítva rendezési adatokat).      5.  Válassza ki a (adja meg, mely mezők vagy tulajdonságok vissza).      6.  Automatikus-rendezés (rendezési rekordok az egyik tulajdonsága, amely a felhasználó választott).      7.  Automatikus-page (beolvasása a data azt jelzi, hogy a felhasználó által kiválasztott egy részhalmazát).       Feltételeket adhat hozzá a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonság a egy lekérdezés által visszaadott rekordok szűrése.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> Ha a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonság nincs beállítva, a linqdatasource adatforrás vezérlő kikeresi az objektum minden rekordot.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>      <a name=&quot;ordering_data&quot;></a>## Rendelési adatok használata a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonság elemeiből szerinti rendezéshez a visszaadott adat nevének megadása.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>      > [!NOTE] > Használatakor a linqdatasource adatforrás-vezérlés [!INCLUDE[ss2k](~/add/includes/ss2k-md.md)] vagy [!INCLUDE[ssEW](~/add/includes/ssew-md.md)] és a <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>tulajdonsága `true`, meg kell adnia egy értéket a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> Alapértelmezés szerint a <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>tulajdonság `true`.</xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> Ha egy értéket rendelni a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság, is szerepelnie kell összes identitásoszlopot, hogy a rendszer a lekérdezés által visszaadott tulajdonságok listája.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>      <a name=&quot;grouping_data&quot;></a>## Használja adatok csoportosítása a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság adja meg, milyen tulajdonságok összevonni az adatokat azt jelzi, hogy az azonos értékűek használják.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> Amikor adatokat, megadhatja `Key` és `It`, amely dinamikusan létrehozott tulajdonságai, a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> A `Key` tulajdonság értékének a következő tulajdonság vagy az adatok csoportosításához használt tulajdonságok hivatkozik. Például, ha nevű tulajdonság szerint csoportosítja `Category`, a `Key` tulajdonság szereplő összes egyedi értékeket fogja tartalmazni az `Category` tulajdonság. A `It` tulajdonság adatok csoportja az egyes rekordok gyűjteményre hivatkozik. Ismétlés is a `It` tulajdonság beolvasása az egyes rekordok, amelyek a csoportosítási művelethez az engedélyezés. Például, ha nevű tulajdonság szerint csoportosítja `Category`, a `It` tulajdonsága tartalmazza az egyes rekordok, amelyek egy közös értéket a `Category` tulajdonság.       Használja a <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>tulajdonság adja meg a csoportosított adatok rendezéséhez használandó tulajdonságokat.</xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> Amikor adatokat, a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonság határozza meg, hogy az egyes rekordok belül a csoportosított adatok rendezését.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>       Alapértelmezés szerint a linqdatasource adatforrás vezérlő lekéri a tulajdonságok értékeit egy objektumot. Használja a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonsággal mely tulajdonság kerüljön adja vissza, ha szeretné-e az elérhető tulajdonságok adathalmazát.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> A Select művelet alkalmazása után a Where, Order By, és Group By műveleteket. Ha a Select záradékban lévő hoz létre egy aliasnevet neve, a alias ezért nem a más záradékban.      <a name=&quot;data_modifications&quot;></a>## Megadhatja, hogy az adatok módosítások engedélyezettek-e használatával adatok módosítása a <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, és <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>Tulajdonságok.</xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> </xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> A felhasználói felületen az adatok a vezérlőről LinqDataSource módosításához általában keresztül valósul meg adathoz kötött vezérlő, például egy <xref:System.Web.UI.WebControls.DetailsView>vezérlő.</xref:System.Web.UI.WebControls.DetailsView> Beállításban <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, vagy <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>való `true`, az alábbi feltételek szükségesek ahhoz, hogy automatikus módosítása: - a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság nem lehet értéket hozzárendelni.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> </xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> </xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>      -A <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság nem lehet értéket hozzárendelni.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>      -Az osztályhoz, amely hozzá van rendelve a <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>tulajdonság <xref:System.Data.Linq.DataContext>.</xref:System.Data.Linq.DataContext> kell származnia.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>      -A tulajdonság, amely hozzá van rendelve a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság <xref:System.Data.Linq.Table%601>.</xref:System.Data.Linq.Table%601> kell származnia.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>       Korlátozhatja, hogy mely tulajdonságok adathoz kötött vezérlő kétféle módon jelennek meg. Akkor is, vagy a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság tulajdonságai, vagy egy részének határozhatja meg az adathoz kötött vezérlő mezők hozzáadásával <xref:System.Web.UI.WebControls.DataControlField>vezérlők.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> Azonban ha bekapcsolja a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság, az azt jelenti, hogy automatikus frissítési, beszúrási és törlési műveletek nem engedélyezhető.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> Ha meg szeretné engedélyezni az automatikus módosítása, rendelkezésre álló tulajdonságok részhalmazának használata közben, ne adja meg a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> Ehelyett az objektum összes tulajdonságának lekérése, és kezelheti a megjelenített munkaterületek az adathoz kötött vezérlő segítségével. Ha a <xref:System.Web.UI.WebControls.DetailsView>vezérlő vagy a <xref:System.Web.UI.WebControls.GridView>vezérlő, meg kell adnia a <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>vagy <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>Tulajdonságok `false`.</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> Ez megakadályozza, hogy az adathoz kötött vezérlő gombjai módosítása és törlése az adatok automatikusan beleértve. Nem jelennek meg az adathoz kötött vezérlő értékek vannak tárolva állapotának megtekintése. Akkor továbbítódnak változatlan az adatforrás az adatok frissítés során.      <a name=&quot;evaluating_value_at_run_time&quot;></a>## Kiértékelése értékek Futtatás időpontban Ha értékeit értékelheti ki a rendezéshez, futási időben szűrés, vagy csoportosítási értékek, paramétereket adhat hozzá a <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, vagy <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>gyűjtemények.</xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>       Ha szeretne megadni az alapértelmezett értékeket, paramétereket adhat hozzá a <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>       Ha meg szeretné vizsgálni, vagy módosítsa az értékeket, az adatok művelet végrehajtása előtt, kezelheti a <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, vagy <xref:System.Web.UI.WebControls.LinqDataSource.Updating>események.</xref:System.Web.UI.WebControls.LinqDataSource.Updating> </xref:System.Web.UI.WebControls.LinqDataSource.Selecting> </xref:System.Web.UI.WebControls.LinqDataSource.Inserting> </xref:System.Web.UI.WebControls.LinqDataSource.Deleting> Ahhoz, hogy az adatok a művelet megszakítja, vagy vizsgálja meg az érvényesítési hiba történt az adatok osztály a felhasználói bevitel alapján tulajdonságainak beállításakor is kezelheti ezeket az eseményeket.       Megvizsgálhatja az értékeket, az művelet befejezése után, kezelni a <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, vagy <xref:System.Web.UI.WebControls.LinqDataSource.Updated>események.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted>      <a name=&quot;working_with_stored_procedures&quot;></a>## Működik együtt tárolt eljárások a linqdatasource adatforrás-vezérlő segítségével egy tárolt eljárás eseménykezelő létrehozásával adatainak lekérése a <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>esemény.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> A kezelő, akkor az adatok környezetben képviselő osztályt, a tárolt eljárás hívja meg a metódust, és állítsa az eredmény a <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>tulajdonsága a <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>objektum.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> Ha azt szeretné, hogy engedélyezze az automatikus frissítési, beszúrási és delete művelet az adatok, a metódus által visszaadott típusnak meg kell egyeznie a megadott típus a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Adatok környezetben módszerek létrehozásával kapcsolatos további információkért lásd: [hogyan: hozzon létre DataContext módszerek tárolt eljárásokat és függvényeket (O/R-tervező) leképezve](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;declarative_syntax&quot;></a>## Deklaratív Szintaxisán <CodeContentPlaceHolder>0</CodeContentPlaceHolder>"
  example:
  - "The following example shows a LinqDataSource control that retrieves data from an entity class named `Products`. The entity class could have been generated by using the [!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility. The <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is set to return only records that have a value in the `Price` property greater than 50. A <xref:System.Web.UI.WebControls.GridView> control is bound to the LinqDataSource control to display the data.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_370_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/add/codesnippet/csharp/t-system.web.ui.webcontr_370_1.aspx)]  \n  \n The following example shows a LinqDataSource control that enables users to update, delete, and insert records in the data source. A <xref:System.Web.UI.WebControls.DetailsView> control is bound to the LinqDataSource control and enables users to see and modify the data. Notice that no SQL commands are required in order to select, update, delete, or insert the records.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_370_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_370_2.aspx)]  \n  \n The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event that sets the data object based on a value in the Web page.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_370_3.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_370_3.vb)]  \n  \n The following example shows a LinqDataSource control that is configured to group by two columns. The `Key` property references an object that has two properties, `ProductCategory` and `Color`. The object represented by `It` is renamed (aliased) to `Products`. The renamed `Products` object contains a collection of the individual records in a grouping. Each instance will contain all the columns from the `Products` table.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_370_4.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_370_4.aspx)]  \n  \n The following example shows two <xref:System.Web.UI.WebControls.ListView> controls that display the data from the LinqDataSource control in the previous example. One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data, and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group. The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_370_5.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_370_5.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Selecting")]

      [System.ComponentModel.DefaultProperty("ContextTypeName")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), "LinqDataSource.bmp")]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class LinqDataSource : System.Web.UI.WebControls.ContextDataSource, System.Web.DynamicData.IDynamicDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.DataSourceControl
  - System.Web.UI.WebControls.QueryableDataSource
  - System.Web.UI.WebControls.ContextDataSource
  implements:
  - System.Web.DynamicData.IDynamicDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  - System.Web.UI.WebControls.ContextDataSource.EntitySetName
  - System.Web.UI.WebControls.ContextDataSource.EntityTypeName
  - System.Web.UI.WebControls.QueryableDataSource.GetView(System.String)
  - System.Web.UI.WebControls.QueryableDataSource.GetViewNames
  - System.Web.UI.WebControls.QueryableDataSource.LoadViewState(System.Object)
  - System.Web.UI.WebControls.QueryableDataSource.QueryCreated
  - System.Web.UI.WebControls.QueryableDataSource.RaiseViewChanged
  - System.Web.UI.WebControls.QueryableDataSource.SaveViewState
  - System.Web.UI.WebControls.QueryableDataSource.TrackViewState
  - System.Web.UI.WebControls.QueryableDataSource.UpdateParameterVales
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: LinqDataSource()
  nameWithType: LinqDataSource.LinqDataSource()
  fullName: System.Web.UI.WebControls.LinqDataSource.LinqDataSource()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> osztály."
  syntax:
    content: public LinqDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause
  id: AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: AutoGenerateOrderByClause
  nameWithType: LinqDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő dinamikusan létrehoz egy Order By záradék, levő értékek alapján a <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters*>gyűjtemény.</xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters*>"
  remarks: "Ha beállította az AutoGenerateOrderByClause tulajdonságot `true`, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő dinamikusan létrehoz egy Order By záradékban szereplő értékek alapján a <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSource> A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő rendezi az adatokat az első paraméter, és emellett rendezi az adatokat, minden további paraméter.</xref:System.Web.UI.WebControls.LinqDataSource> Paraméterek tartalmazó `null` vagy üres értéket nem szerepelnek az Order By záradék.       Nincs megadva a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonságot, ha a AutoGenerateOrderByClause értéke `true`, mert az elemző dinamikusan létrehoz az Order By záradék.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő kivételt jelez, ha a AutoGenerateOrderByClause értéke `true` és a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonság értékek van hozzárendelve.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.LinqDataSource>"
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the AutoGenerateOrderByClause set to `true`. A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/add/codesnippet/csharp/p-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_120_1.aspx)]"
  syntax:
    content: public bool AutoGenerateOrderByClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő hoz létre az Order By záradék; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause
  id: AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: AutoGenerateWhereClause
  nameWithType: LinqDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő dinamikusan létrehoz egy Where záradék a meghatározott értékek alapján a <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters*>gyűjtemény.</xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters*>"
  remarks: "Ha a AutoGenerateWhereClause tulajdonság értéke `true`, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő dinamikusan létrehoz a Where záradékban szereplő paraméterek a <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSource> Minden hozzáadott paraméter a <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>gyűjteményt kell rendelkeznie a <xref:System.Web.UI.WebControls.Parameter.Name%2A>tulajdonság, amely megfelel a lekérdezett adatok objektumban tulajdonság értéke.</xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> Az automatikusan létrehozott ahol záradék ellenőrzi e a megadott értéket a <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>gyűjtemény az objektum a megfelelő tulajdonság értéke.</xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> Ha több mint egy paraméterrel adja meg, a paraméterek kapcsolódnak logikai `AND` műveletet. Paraméterek tartalmazó `null` vagy egy üres érték nem szerepel a Where záradékban.       Az automatikusan létrehozott <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>záradékban csak az egyezés keresésekor tesztelheti, és társíthatja paramétereket csak a `AND` művelet.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> Nem a tulajdonsága AutoGenerateWhereClause `true` Ha fel kell vennie egy feltételt, amely azonban nem ellenőrizte az egyezés keresésekor, vagy ha más paramétereket az `OR` műveletet. Ezeket a feladatokat is elérheti a AutoGenerateWhereClause tulajdonság `false` , valamint hozzáadja a helyőrzőket a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonság mindegyik paraméterére vonatkozóan a <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>gyűjtemény.</xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> Az a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonság, található minden helyőrző neve a @ karakter.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>       Nincs megadva a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonságot, ha AutoGenerateWhereClause tulajdonság `true`, mert az elemző dinamikusan létrehoz a Where záradékban.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő kivételt jelez, ha AutoGenerateWhereClause tulajdonság `true` és a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonság értékek van hozzárendelve.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> </xref:System.Web.UI.WebControls.LinqDataSource>"
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the AutoGenerateWhereClause set to `true`. A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data that is returned from the query. A <xref:System.Web.UI.WebControls.DropDownList> control is included that is populated with three values. A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection with the name set to `Category,` which matches one of the properties of the data object. Its <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> property is set to the ID of the <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.LinqDataSource> control automatically creates the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter records based on the value that the user selects from the <xref:System.Web.UI.WebControls.DropDownList> control. The query returns the records whose `Category` property matches the value that the user has selected from the <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_223_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_223_1.aspx)]"
  syntax:
    content: public bool AutoGenerateWhereClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő hoz létre a Where záradék; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.AutoPage
  id: AutoPage
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: AutoPage
  nameWithType: LinqDataSource.AutoPage
  fullName: System.Web.UI.WebControls.LinqDataSource.AutoPage
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő támogatja az adatok szakaszok navigációs futási időben."
  remarks: "A tulajdonsága autopage attribútuma `true` a lapozás engedélyezéséhez a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő.</xref:System.Web.UI.WebControls.LinqDataSource> Ahhoz, hogy a felhasználó keresztül az adatok lapra, csatlakozzon a felületet biztosít a lapozás adathoz kötött vezérlő a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő.</xref:System.Web.UI.WebControls.LinqDataSource> Ha a autopage attribútuma tulajdonság értéke `true`, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő csak adathoz kötött vezérlő egy oldallal elég rekordok kéri le.</xref:System.Web.UI.WebControls.LinqDataSource> Használja a <xref:System.Linq.Enumerable.Skip%2A>és <xref:System.Linq.Enumerable.Take%2A>módszerek a rekordokat a jelenlegi lap beolvasni.</xref:System.Linq.Enumerable.Take%2A> </xref:System.Linq.Enumerable.Skip%2A>"
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the AutoPage property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control. The <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users page through the data.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_959_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_959_1.aspx)]"
  syntax:
    content: public bool AutoPage { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a felhasználók lapozhassanak az adatok; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.AutoPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.AutoSort
  id: AutoSort
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: AutoSort
  nameWithType: LinqDataSource.AutoSort
  fullName: System.Web.UI.WebControls.LinqDataSource.AutoSort
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő támogatja a rendezést futási időben."
  remarks: "A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő két módszer támogatja az adatok rendezése.</xref:System.Web.UI.WebControls.LinqDataSource> Az automatikus rendezés tulajdonsággal futásidejű rendezés engedélyezéséhez, vagy beállíthatja a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonság határozza meg, a rendezés tervezési időben.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>       Az automatikus rendezés tulajdonság beállítása `true` a rendezés engedélyezéséhez egy <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő adathoz kötött vezérlő a rendezési kifejezés alapuló.</xref:System.Web.UI.WebControls.LinqDataSource> Az adathoz kötött vezérlő biztosít ahhoz, hogy a felhasználó számára futási időben melyik tulajdonság rendezéshez használandó felületet.       Programozott módon beállíthatja azt a sorrendet, amelyben adatokat adott vissza úgy, hogy a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonságot a tulajdonságot, vagy a rendezéshez használt tulajdonságok.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> Ha a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonsága egy tulajdonságra, és az automatikus rendezés tulajdonság `true`, az adathoz kötött vezérlő a rendezési kifejezés lévő kifejezés után alkalmazza a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> Ezért ez határozza meg, a végső rendezés az adatok."
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the AutoSort property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control. The <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users sort the data.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_766_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_766_1.aspx)]"
  syntax:
    content: public bool AutoSort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a felhasználó rendezheti az adatokat; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.AutoSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.ContextCreated
  id: ContextCreated
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: ContextCreated
  nameWithType: LinqDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.LinqDataSource.ContextCreated
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "A környezet típusú objektum példányának létrehozása után következik be."
  remarks: "Kezeli az ContextCreated eseményt, vizsgálja meg a környezetben típusú objektum, vagy vizsgálja meg a kivételek fellépése, amelyek aktiválódnak az objektum létrehozása közben. Visszaállíthatja a környezet típusú objektum a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>tulajdonsága a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>objektum, amely ezt az eseményt társított.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Visszaállíthatja a az a művelet során kiváltott kivételt a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>       A környezet típusú objektum válassza ki, frissítési, beszúrási és törlési műveletek során jön létre, és a kérelem teljes újra.       Nincs egy alkalommal, amikor az esemény nem jelenik meg. Ez akkor, ha programozott módon állítsa be a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>tulajdonsága olyan objektumra során a <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>esemény.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Egy további feltétele, hogy az eredeti értékeket nem rendelkeznek tárolását a nézetállapotot, vagy az objektum az az <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>tulajdonság valósít meg a <xref:System.Data.Linq.ITable>felületet.</xref:System.Data.Linq.ITable> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> ContextCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.ContextCreating
  id: ContextCreating
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: ContextCreating
  nameWithType: LinqDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.LinqDataSource.ContextCreating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "A környezet típusú objektum példányának létrehozása előtt következik be."
  remarks: "Alapértelmezés szerint a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő hoz létre a megadott típus egy példánya a <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> </xref:System.Web.UI.WebControls.LinqDataSource> A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő meghívja az alapértelmezett konstruktort a adatok környezetben objektum az az objektum példányának létrehozásakor.</xref:System.Web.UI.WebControls.LinqDataSource> Lehetséges, hogy szükség van egy nem alapértelmezett konstruktort, vagy létre kell hoznia egy objektumot, amely eltér a megadottal a <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> Ebben az esetben kell ContextCreating eseményének, és manuálisan hozza létre az adatok környezetben objektumot.       A környezet típusú objektum jön létre, válassza ki, frissítési, beszúrási és törlési műveletek során.       Nincs egy alkalommal, amikor az esemény nem jelenik meg. Ez akkor, ha programozott módon állítsa be a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>eseménykezelő objektumára tulajdonságot a <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>esemény.</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Egy további feltétele, hogy az eredeti értékeket nem rendelkeznek tárolását a nézetállapotot, vagy az objektum az az <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>tulajdonság valósít meg a <xref:System.Data.Linq.ITable>felületet.</xref:System.Data.Linq.ITable> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>"
  example:
  - "The following example shows how to create the data context object by using a non-default constructor during the ContextCreating event. The code assigns the object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_153_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_153_1.vb)]"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs> ContextCreating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceContextEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.ContextDisposing
  id: ContextDisposing
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: ContextDisposing
  nameWithType: LinqDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.LinqDataSource.ContextDisposing
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "A környezet típusú objektum ártalmatlanítása előtt következik be."
  remarks: "Kezeli a ContextDisposing esemény az objektum eldobásakor manuálisan, vagy megsemmisül karbantartás előtt az objektumot az objektumra vonatkozó végrehajtásához."
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs> ContextDisposing;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.ContextTypeName
  id: ContextTypeName
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: ContextTypeName
  nameWithType: LinqDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.LinqDataSource.ContextTypeName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a neve, amely a tulajdonságot, amelynek értéke a lekérdezni kívánt adatokat tartalmazza."
  remarks: "Ha a <xref:System.Web.UI.WebControls.LinqDataSource>alkalmazást adatok beolvasására vagy egy memórián belüli adatok gyűjtésének, vagy egy adatbázis szabályozhatja, meg kell adnia a két tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource> Az első az az adatforrást képviselő adatokat környezetben osztály. A második pedig az adatok környezetben osztály, amely tartalmazza az adatokat a tulajdonságai. A ContextTypeName tulajdonsága az adatok környezetben osztály nevét és beállíthatja a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonságot az adatokat tartalmazó gyűjtemény.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>       Például ha egy adatbázis visszaállíthatja az adatokat, tulajdonsága a ContextTypeName az osztály, amely jelöli az adatbázis nevét. Állítson be úgy a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság a tábla az adatbázisban jelölő tulajdonsághoz.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Hozzon létre egy adatbázist osztályok, használja a [!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)] vagy a SqlMetal.exe segédprogram azon osztályok automatikus létrehozásához.       Egy memórián belüli adatok gyűjteményből, például egy tömb visszaállíthatja az adatokat, állítja a ContextTypeName tulajdonsága a tömb tulajdonságot tartalmazó osztály nevét. Utána állítsa be a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság, amely lekérdezi a tömb tulajdonságaként.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>       Automatikus frissítés engedélyezéséhez beszúrási vagy törlési műveletek a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlés, a ContextTypeName tulajdonságának rendelt osztályból kell származnia <xref:System.Data.Linq.DataContext>.</xref:System.Data.Linq.DataContext> </xref:System.Web.UI.WebControls.LinqDataSource> keresztül Emellett a tulajdonság rendelt <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság <xref:System.Data.Linq.Table%601>.</xref:System.Data.Linq.Table%601> kell származnia.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Ha nem kell az automatikus frissítés engedélyezéséhez beszúrása, vagy törlési műveletek, bármilyen típusú osztály neve rendelhet a ContextTypeName tulajdonsága.       Jelölje ki az adatokat az osztály egy példányával kapcsolatos információkért lásd: a <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>"
  example:
  - "The following example shows how to set the ContextTypeName property to a class that contains an array of strings. It also shows how to set the property to a class (generated by the [!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]) that represents a database.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_745_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_745_1.aspx)]  \n  \n The class named `ExampleDataContext` that represents the database table is not shown in this example. For this example to work, you must create this class by adding a LINQ To SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]. A class named `ExampleDataContext` with a property named `Movies` is generated.  \n  \n The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_745_2.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_745_2.vb)]"
  syntax:
    content: public override string ContextTypeName { get; set; }
    return:
      type: System.String
      description: "Az adatok beolvasása az osztály nevét."
  overload: System.Web.UI.WebControls.LinqDataSource.ContextTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView
  id: CreateQueryableView
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: CreateQueryableView()
  nameWithType: LinqDataSource.CreateQueryableView()
  fullName: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezhető nézetet adja vissza."
  syntax:
    content: protected override System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.QueryableDataSourceView
      description: "Lekérdezhető nézet."
  overload: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.CreateView
  id: CreateView
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: CreateView()
  nameWithType: LinqDataSource.CreateView()
  fullName: System.Web.UI.WebControls.LinqDataSource.CreateView()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Létrehoz egy új példányt a <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceView&quot;> </xref> osztály, amely a vezérlő tartozik."
  remarks: "Megjelenítésére szolgáló egyéni, felülírhatja ezt a módszert egy származtatott osztályban."
  syntax:
    content: protected virtual System.Web.UI.WebControls.LinqDataSourceView CreateView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.LinqDataSourceView
      description: "Egy objektum, amely különbséglemezként funkcionál az adathoz kötött vezérlők felületet."
  overload: System.Web.UI.WebControls.LinqDataSource.CreateView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: LinqDataSource.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSource.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "A törlési műveletet végez."
  remarks: "Általában nem kell a Delete metódust hívja a felhasználói kódból. Ha egy <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő adathoz kötött vezérlő, az adathoz kötött vezérlő automatikusan hívja a Delete metódust, ha a felhasználó végrehajtja a műveletet egy rekord törlése.</xref:System.Web.UI.WebControls.LinqDataSource> A Delete metódus explicit módon ha szeretne létrehozni a saját folyamatának adatok törléséhez hívja. Például a Delete metódust hívja, ha törli egy rekordot az adathoz kötött vezérlő kívül esemény alapján."
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A sor kulcsokat a törlendő rekordokat."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Ütközések észlelése kiértékelt sorértékeiből."
    return:
      type: System.Int32
      description: "A törlési művelet által érintett rekordok száma."
  overload: System.Web.UI.WebControls.LinqDataSource.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Deleted
  nameWithType: LinqDataSource.Deleted
  fullName: System.Web.UI.WebControls.LinqDataSource.Deleted
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "A törlési művelet befejeződése előtt következik be."
  remarks: "Kezeli a törölt esemény a törlési művelet egyetlen kivételeket, vagy vizsgálja meg a kimeneti paraméterek, a művelet befejeződése után. A kimeneti paramétert kérheti le a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>Eseményleírók átadott objektum.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Deleted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: LinqDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.DeleteParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ezt a tulajdonságot nem használják a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> osztály."
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Paraméterek gyűjteménye."
  overload: System.Web.UI.WebControls.LinqDataSource.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Deleting
  nameWithType: LinqDataSource.Deleting
  fullName: System.Web.UI.WebControls.LinqDataSource.Deleting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "A törlési művelet előtt következik be."
  remarks: "Kezeli a törlés eseményét. az objektum törlődnek, az adatok osztályból, a delete művelet előtt érték módosítása, vagy szakítsa meg a törlési művelet adatok érvényesítési hibák vizsgálata érvényesítéséhez. A <xref:System.Web.UI.WebControls.LinqDataSource>fázisok szabályozhatja a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>objektum törlése eseménynél eseménykezelők.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> </xref:System.Web.UI.WebControls.LinqDataSource> A <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>objektum tartalmazza az adatok törlődnek, és lehetővé teszi, hogy a törlési művelet megszakításához.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> Ha az adatok osztály jelez a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>kivételt, a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>objektum tartalmazza ezt a kivételt a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceValidationException>       A törlés esemény eseménykezelőben kivételt vált ki, a kivétel fordult elő az eseménykezelő kezelni kell. A kivétel a rendszer nem adta át az eseménykezelő a <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>esemény (keresztül a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonsága a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>objektum).</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonság csak a törlés esemény után okozott kivételek tartalmazza.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>"
  example:
  - "The following example shows an event handler for the Deleting event. The code cancels the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page. In the example, when the `OnSale` property is set to `true`, the user must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that a record should be deleted.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_77_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_77_1.cs)]"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> Deleting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.EnableDelete
  id: EnableDelete
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: EnableDelete
  nameWithType: LinqDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.LinqDataSource.EnableDelete
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy törölhető-e a rekordok keresztül a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő."
  remarks: "A tulajdonsága EnableDelete `true` Ha szeretne egy adatrekordot keresztül törlésére a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő.</xref:System.Web.UI.WebControls.LinqDataSource> Ha EnableDelete értéke `true`, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő &quot;LINQ to SQL&quot; alapján automatikusan létrehozza a parancs törli az adatokat.</xref:System.Web.UI.WebControls.LinqDataSource> Meg kell adni egy felület, amellyel a felhasználók jelöljön ki egy bejegyzést törölni, például egy <xref:System.Web.UI.WebControls.DetailsView>vezérlő.</xref:System.Web.UI.WebControls.DetailsView>       A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő nem támogatja az automatikus törlési műveletek során a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság vagy a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság értéke.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> </xref:System.Web.UI.WebControls.LinqDataSource> Ebben az esetben a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő kivételt jelez, ha egy törlési művelet próbálkozik.</xref:System.Web.UI.WebControls.LinqDataSource>"
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has EnableDelete set to `true`. A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users delete a data record.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_368_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_368_1.aspx)]"
  syntax:
    content: public bool EnableDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha automatikus delete műveletek engedélyezettek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.EnableDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.EnableInsert
  id: EnableInsert
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: EnableInsert
  nameWithType: LinqDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.LinqDataSource.EnableInsert
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy rekordok keresztül csak azután lehet beszúrni a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő."
  remarks: "A tulajdonsága EnableInsert `true` kívánt felhasználók – új rekord beszúrásához a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő.</xref:System.Web.UI.WebControls.LinqDataSource> Ha EnableInsert értéke `true`, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő &quot;LINQ to SQL&quot; alapján automatikusan létrehozza a parancs illessze be az adatokat.</xref:System.Web.UI.WebControls.LinqDataSource> Meg kell adni egy felület, amely lehetővé teszi a felhasználóknak egy új rekordot, például a beszúrása egy <xref:System.Web.UI.WebControls.DetailsView>vezérlő.</xref:System.Web.UI.WebControls.DetailsView>       A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő nem támogatja az automatikus beszúrási műveletek során a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság vagy a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság értéke.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> </xref:System.Web.UI.WebControls.LinqDataSource> Ebben az esetben a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő kivételt jelez, ha a beszúrási műveletet próbálkozik.</xref:System.Web.UI.WebControls.LinqDataSource>"
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has EnableInsert set to `true`. A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and displays a button that switches the control to insert mode where users can create and save a new record.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1142_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1142_1.aspx)]"
  syntax:
    content: public bool EnableInsert { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a automatikus insert művelet; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.EnableInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking
  id: EnableObjectTracking
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: EnableObjectTracking
  nameWithType: LinqDataSource.EnableObjectTracking
  fullName: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja az értéket, amely jelzi, hogy az adatok környezeti objektumot követi."
  remarks: "A EnableObjectTracking tulajdonsága csak egy LINQ az SQL-környezetben objektumot-adatok kiválasztásakor használt.       Csak olvasható adatok interakció, ha a beállítást a EnableObjectTracking tulajdonsága `false` javítja a teljesítményt, mert nem a rendszer gyorsítótárazza az adatokat határozza meg, ha az módosult. Azonban azt is letiltja a késleltetett lekérdezés végrehajtása. Ez a tulajdonság értékre kell állítani `true` Ha szeretné használni a késleltetett lekérdezés végrehajtása."
  syntax:
    content: public bool EnableObjectTracking { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a környezet objektum változásainak; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.EnableUpdate
  id: EnableUpdate
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: EnableUpdate
  nameWithType: LinqDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.LinqDataSource.EnableUpdate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a rekordok keresztül frissíthető a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> vezérlő."
  remarks: "A tulajdonsága enableupdate tulajdonságok bármelyike `true` kívánt felhasználók frissítése a rekord használatával a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő.</xref:System.Web.UI.WebControls.LinqDataSource> Ha EnableUpdate értéke `true`, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő &quot;LINQ to SQL&quot; alapján automatikusan létrehozza a parancs az adatokon.</xref:System.Web.UI.WebControls.LinqDataSource> Meg kell adni egy felülete, amelyről a felhasználók például módosítani egy rekordot, a <xref:System.Web.UI.WebControls.DetailsView>vezérlő.</xref:System.Web.UI.WebControls.DetailsView>       A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő nem támogatja az automatikus frissítési műveletek során a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság vagy a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság értéke.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> </xref:System.Web.UI.WebControls.LinqDataSource> Ebben az esetben a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő kivételt jelez, ha a frissítési művelet próbálkozik.</xref:System.Web.UI.WebControls.LinqDataSource>"
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has EnableUpdate set to `true`. A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users update a data record.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_116_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_116_1.aspx)]"
  syntax:
    content: public bool EnableUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha engedélyezve van a automatikus frissítési művelet; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.EnableUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.GroupBy
  id: GroupBy
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: GroupBy
  nameWithType: LinqDataSource.GroupBy
  fullName: System.Web.UI.WebControls.LinqDataSource.GroupBy
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a lekért adatok csoportosításához használt mely tulajdonság értéke."
  remarks: "A GroupBy tulajdonság segítségével adja meg, mely tulajdonságok adatok azt jelzi, hogy az azonos értékűek konszolidálására használják. Például, ha a GroupBy tulajdonság értéke `Name`, a lekérdezés, amely az rekordok `Name` egyetlen összevont rekordot mezeje tulajdonság értéke.       A GroupBy tulajdonság egynél több tulajdonság a befoglaló az összes tulajdonság rendelhet a `new` függvény és helyezzen át minden egyes tulajdonsága által vesszővel válassza el. Például, hogy a csoport tulajdonságai `Name` , majd `Category`, állítsa a GroupBy tulajdonságot `new(Name, Category)`.       A tulajdonság csoportosításhoz használt értékeket visszaadott nevű létrehozott tulajdonságon keresztül `Key`. Megadja a `Key` tulajdonságot a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság a csoportosított értékek beolvasása.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> Beállíthatja a `Key` tulajdonság használatával az alias a `As` kulcsszót, de nem kell használnia egy aliast. Például előfordulhat, hogy beállította a GroupBy tulajdonság nevű tulajdonság `Category`. Konszolidált értékeinek kérheti le a `Category` tulajdonság úgy, hogy a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonságot `new(Key As ProductCategory)`.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>       Beleértve a következőket végezheti el az egyes rekordok csoportosítása a `It` tulajdonságot a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> A `It` tulajdonság azt jelzi, hogy egy érték a csoportosított tulajdonságban gyűjteményét tartalmazza. Ismétlés is a `It` tulajdonság beolvasása az egyes rekordok.       A GroupBy tulajdonság gyakran használják csoportosítási módszerek is. A következő összesített módszerekkel:- `Count()`       -    `Average(` *oszlop* `)`       -    `Sum(` *oszlop* `)`       -    `Max(` *oszlop* `)`       -    `Min(` *oszlop* `)`       -    `Where(` *feltétel* `)`       -    `Any()`       -    `All(` *feltétel* `)` további információkért lásd: [NIB: LinqDataSource webkiszolgáló vezérlő áttekintése](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136) és [hogyan: csoport és az összesített adatok használata a linqdatasource adatforrás Vezérlő](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)."
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that groups the returned data by a property named `Category`. It returns the shared values and calculates the average price for the grouped records.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_84_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_84_1.aspx)]  \n  \n The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns. The `Key` property references an object that has two properties, `ProductCategory` and `Color`. The object represented by `It` is renamed `Products`. The renamed `Products` object contains a collection of the individual records in a grouping, and each instance contains all the columns from the Products table.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_84_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_84_2.aspx)]  \n  \n The following example shows two <xref:System.Web.UI.WebControls.ListView> controls for displaying the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example. One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group. The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_84_3.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_84_3.aspx)]"
  syntax:
    content: public string GroupBy { get; set; }
    return:
      type: System.String
      description: "A Group By záradék létrehozásához használt karakterlánc."
  overload: System.Web.UI.WebControls.LinqDataSource.GroupBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.GroupByParameters
  id: GroupByParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: GroupByParameters
  nameWithType: LinqDataSource.GroupByParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.GroupByParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi a Group By záradék létrehozásához használt paraméterek gyűjteménye."
  remarks: "A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő használja paraméterek GroupByParameters gyűjtemény létrehozásához a Group By záradék futási időben.</xref:System.Web.UI.WebControls.LinqDataSource> Általában nem fogja használni a replikációscsoport-adatok GroupByParameters gyűjteményt. Ehelyett használhatja a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> Használhatja a GroupByParameters gyűjtemény csak egy értéket a Group By záradékban kell állítani a futási időben, és az értéke nem egy tulajdonság neve. Például használható a GroupByParameters adatok alapján, hogy a `LastName` tulajdonságot az a rekordok eredménye a felhasználó által megadott értéket.       Tulajdonság szerint kívánja replikációscsoport-adatok, és ez a tulajdonság nem rendelkezik futás közben kell beállítani, ha a Csoportosítás tulajdonságot az megadhatja a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> Például egy adatbázis tábláinak származó visszaadott értékekre mutató szerint csoportosítva `LastName`, beállíthatja <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>&quot;Lastname&quot; paraméter nélkül.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> Ha dinamikusan adatok az egyik tulajdonsága, hozzon létre egy eseménykezelő a <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>esemény és testre szabhatja a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság igény szerint.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Selecting>       A GroupByParameters gyűjtemény egy paraméter értéke nem rendelhető hozzá a tulajdonságnevet kell megadni. Paraméterek GroupByParameters gyűjteményhez hozzáadhat, ha hozzá szeretne adni egy feltételt a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság, amely a futási időben be kell állítani.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>       Értékeinek beállításához a GroupByParameters gyűjteményben, a név hozzárendelése egyes paramétereket, és adja meg a helyőrző a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság az adott nevű paraméter.</xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> A Group By záradékban található minden paraméter neve a @ karakter."
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection GroupByParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A Group By záradék létrehozásához használt paraméterek."
  overload: System.Web.UI.WebControls.LinqDataSource.GroupByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: LinqDataSource.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSource.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Beszúrási műveletet végez."
  remarks: "Általában nem kell az Insert metódus hívása a felhasználói kódból. Az adathoz kötött vezérlő automatikusan az Insert metódus fogja hívni, amikor a felhasználó végrehajtja a műveletet, új rekord beszúrásához. Az Insert metódus explicit módon szeretne létrehozni a saját adatok beszúrása folyamata során hívható."
  example:
  - "The following example shows how to programmatically insert a new record in the data source after the user clicks a button. The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains default values to the Insert method.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/add/codesnippet/csharp/cd9b3311-c882-4466-8d03-_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/add/codesnippet/visualbasic/cd9b3311-c882-4466-8d03-_1.vb)]  \n  \n The following example shows the markup for the previous example.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/add/codesnippet/csharp/cd9b3311-c882-4466-8d03-_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/add/codesnippet/visualbasic/cd9b3311-c882-4466-8d03-_2.aspx)]"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Az adatforrás beszúrni sorértékeiből."
    return:
      type: System.Int32
      description: "Az insert művelet által érintett sorok száma."
  overload: System.Web.UI.WebControls.LinqDataSource.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Inserted
  nameWithType: LinqDataSource.Inserted
  fullName: System.Web.UI.WebControls.LinqDataSource.Inserted
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Az insert művelet befejeződése előtt következik be."
  remarks: "Az Inserted esemény a beszúrási művelet bármely kivételeket, vagy vizsgálja meg az értékeket, az insert művelet befejezése után kezelni. Az új értékek használatával kérheti le a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>Eseménykezelők átadott objektum.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Használhatja például a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>objektumot az új rekord adatbázis által előállított azonosító tulajdonság beolvasása.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  example:
  - "The following example shows how to create an event handler for the Inserted event that checks for exceptions and retrieves the identity property for the new record.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_96_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_96_1.aspx)]"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Inserted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Inserting
  nameWithType: LinqDataSource.Inserting
  fullName: System.Web.UI.WebControls.LinqDataSource.Inserting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, az insert művelet."
  remarks: "Kezeli az objektum beszúrni, az adatok osztályból, az insert művelet előtt érték módosítása, vagy megszakítja a beszúrási művelet adatok érvényesítési hibák vizsgálata érvényesítéséhez beszúrásához eseményét. A <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>objektum lett átadva Eseményleírók ezt az eseményt tartalmazza az új objektum be az adatforrás.</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>       Az insert művelet az <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>objektum tartalmazza a érvényesítési kivételeket, amelyek az adatok osztály által okozott</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> során érvényesítési hiba esetén Érvényesítési hiba akkor fordul elő, ha egy beillesztendő érték nem egyezik meg az adatok osztályban tulajdonság típusával, vagy nem felel meg egy egyéni érvényességi ellenőrzését. Eseménykezelőben beszúrásához eseménynél az érvényesítési kivételek beolvasni, és hajtsa végre a megfelelő műveletet.       Az elválasztó esemény eseménykezelőben kivételt vált ki, a kivétel fordult elő az eseménykezelő kezelni kell. A kivétel a rendszer nem adta át az eseménykezelő a <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>esemény (keresztül a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonsága a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>objektum).</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonsága tartalmazza az elválasztó esemény után okozott kivételek.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>"
  example:
  - "The following example shows an event handler for the Inserting event that modifies data before the insert operation. The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`. The `DateModified` property of the `Product` object is set to the current date and time.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_110_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_110_1.vb)]  \n  \n The following example shows an event handler for the Inserting event that retrieves validation exceptions.  \n  \n```vb#  \nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceInsertEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Inserting(object sender,   \n        LinqDataSourceInsertEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```  \n  \n The previous example retrieves validation exceptions. An exception might be thrown if a value does not match the type of the property. It might also be thrown from a customized check such as the one in the following example. The `OnAgeChanging` method checks that the number for the `Age` property is not negative.  \n  \n```c#  \npartial void  OnAgeChanging(int? value)  \n{  \n    if (value < 0)  \n    {  \n        throw new Exception(\"Age cannot be a negative number.\");  \n    }  \n}  \n```  \n  \n```vb#  \nPrivate Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  \n    If (value < 0) Then  \n        Throw New Exception(\"Age cannot be a negative number.\")  \n    End If  \nEnd Sub  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> Inserting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceInsertEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: InsertParameters
  nameWithType: LinqDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.InsertParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az insert művelet során használt paraméterek gyűjteménye."
  remarks: "Az értékek, amelyek szükségesek a beszúrási műveletet átadott általában a <xref:System.Web.UI.WebControls.LinqDataSource>az adathoz kötött vezérlő vezérlését.</xref:System.Web.UI.WebControls.LinqDataSource> Adja meg a Beszúrás paramétereket szeretne biztosítani egy alapértelmezett értéket, vagy adja meg, hogy üres értékeket átalakítani `null`. Nincs minden egyes értékhez beszúrt, csak az értékeket, amelyeket kell kezelni, amikor a felhasználó nem ad meg egy értéket a paraméter számára.       Az értékeket, Ön által biztosított InsertParameters gyűjtemény csak a meghatározott az adatforrásban, de az adatvezérlő nem kötött mezők fogja használni. Például tegyük fel, hogy egy adatbázis tábláinak oszlopok nevét, címét és irányítószám nevű rendelkezik, de a <xref:System.Web.UI.WebControls.ListView>a tábla kötött vezérlő csak a nevét és címét mezők kötődik.</xref:System.Web.UI.WebControls.ListView> A InsertParameters gyűjteményben szereplő értékek csak a irányítószám mezőbe fog történni. A név és cím mező nem lehet használva. Ez igaz, akkor is, ha nem ad meg értéket a mezőket. Ha az adathoz kötött vezérlő automatikusan hoz-e az összes mező az adatforrásban mezők, a InsertParameters gyűjteményből értékek lesz."
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with a parameter that provides a default value in the InsertParameters collection. If the user does not provide a value for the `Category` property, the default value that is provided by the parameter is saved in the database.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1053_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1053_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Az insert művelet során használt paraméterek."
  overload: System.Web.UI.WebControls.LinqDataSource.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: LinqDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSource.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inicializálja a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> objektum."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Az eseményadatok."
  overload: System.Web.UI.WebControls.LinqDataSource.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: LinqDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSource.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Kiváltja a <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> esemény."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Egy <xref:System.EventArgs>objektum, amely tartalmazza az eseményadatok.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.LinqDataSource.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.OrderBy
  id: OrderBy
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: OrderBy
  nameWithType: LinqDataSource.OrderBy
  fullName: System.Web.UI.WebControls.LinqDataSource.OrderBy
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely meghatározza a lekért adatok rendezéshez használt mezőket."
  remarks: "Az OrderBy tulajdonságot használatával adja meg a rendezéshez használandó a visszaadott adat mely tulajdonságokat. Az adatok rendezésére a tulajdonságnak léteznie kell az eredeti adatforrás, de nem kell szerepelnie a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> Hozzáadhat egy szóközzel és `Ascending`, `ASC`, `Descending`, vagy `DESC` ahhoz, hogy adja meg, hogyan a rendezett adat az OrderBy karakterláncban szereplő egyik tulajdonság.       Megadhatja az OrderBy tulajdonságot egynél több tulajdonsága minden tulajdonság használatával vesszővel elválasztva. Például, hogy rendezési nevű tulajdonságok `LastName` és `FirstName`, állítsa be az OrderBy tulajdonságot &quot;Lastname, FirstName&quot;.      > [!NOTE] > Használata esetén a <xref:System.Web.UI.WebControls.LinqDataSource>rendelkező vezérlő [!INCLUDE[ss2k](~/add/includes/ss2k-md.md)] vagy [!INCLUDE[ssEW](~/add/includes/ssew-md.md)] és a <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>tulajdonsága `true`, meg kell adnia egy értéket az OrderBy tulajdonságot.</xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> </xref:System.Web.UI.WebControls.LinqDataSource> Alapértelmezés szerint a <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>tulajdonság `true`.</xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> Ha egy értéket rendelni a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság, is szerepelnie kell összes identitásoszlopot, hogy a rendszer a lekérdezés által visszaadott tulajdonságok listája.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>       Ha a <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>tulajdonsága `true`, egy adathoz kötött vezérlő eltelhet egy rendezési kifejezést a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő futási időben.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő adathoz kötött vezérlő a rendezési kifejezés érvényes után vonatkozik, az OrderBy tulajdonságot.</xref:System.Web.UI.WebControls.LinqDataSource> Ezért az nem ad vissza a rendezési kifejezés szerint az adathoz kötött vezérlő."
  example:
  - "The following example returns data in reverse alphabetical order based on values in the `Category` property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_348_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_348_1.aspx)]"
  syntax:
    content: public string OrderBy { get; set; }
    return:
      type: System.String
      description: "Az Order By záradék létrehozásához használt karakterlánc."
  overload: System.Web.UI.WebControls.LinqDataSource.OrderBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.OrderByParameters
  id: OrderByParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: OrderByParameters
  nameWithType: LinqDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.OrderByParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az Order By záradék létrehozásához használt paraméterek gyűjteménye."
  remarks: "A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő használja paraméterek OrderByParameters gyűjtemény létrehozásához az Order By záradék futási időben.</xref:System.Web.UI.WebControls.LinqDataSource> Általában beállíthatja a <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>tulajdonságot `true` OrderByParameters gyűjteményhez paraméterek bővítésekor.</xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> Ha a <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>tulajdonsága `true`, egyes paramétereket az OrderByParameters gyűjteményben kerül az Order By záradék a sorrendben, hogy a OrderByParameters gyűjtemény azokat.</xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> Ha a <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>tulajdonság `true`, a paraméterek nem kell névvel ellátni, mert után lesznek alkalmazva, és a rendszer nem felel meg egy helyőrzőt.</xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>       Ha nem rendelkeznek, és állítson be egy Order By záradékban futásidőben, nem rendelkeznek a OrderByParameters gyűjtemény használatára. A mezők az adatokat a rendezéshez használandó a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> Például egy adatbázis tábláinak származó visszaadott értékekre mutató szerint rendezett `LastName`, beállíthatja <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>&quot;Lastname&quot; paraméter nélkül.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>       Paraméterek beállítása az OrderByParameters gyűjteményben, és felel meg a paramétereket a helyőrzőket a <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>tulajdonságot, de ez a megközelítés alkalmazás csak korlátozott.</xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> Ha ezt a módszert használja, a paraméterek az OrderByParameters gyűjtemény nem tudja ábrázolni a egy oszlop neve. A paraméter egy adott értékre állítva, és hasonlítsa össze ezt az értéket a tulajdonság értékek. Például az adatok e tulajdonság értékei kisebb, mint a paraméter által képviselt futásidejű értéke alapján rendezheti."
  example:
  - "The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property set to `true`. A parameter is included in the OrderByParameters collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/add/codesnippet/csharp/p-system.web.ui.webcontr_757_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_757_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Az Order By záradék létrehozásához használt paraméterek."
  overload: System.Web.UI.WebControls.LinqDataSource.OrderByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy
  id: OrderGroupsBy
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: OrderGroupsBy
  nameWithType: LinqDataSource.OrderGroupsBy
  fullName: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a rendezési csoportosított adatok használt mezőket."
  remarks: "Az OrderGroupsBy tulajdonság használatával adja meg a csoportok adatok rendezését. Például lehet szerint csoportosítja a `CategoryID` tulajdonság és majd rendezési minden Kategóriaazonosító átlaga szerint kell csoportosítani a `Price` tulajdonság.       Beállíthatja az OrderGroupsBy tulajdonság csak akkor, ha az adatok csoportosítása. Ha az OrderGroupsBy tulajdonság beállítás nélkül a <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>tulajdonság, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő kivételt jelez.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>       A tulajdonság, az adatok rendezéséhez használt kell lennie, vagy az adatok csoportosításához használt tulajdonság, vagy a csoportosított adatokon aggregátumfüggvény eredményét. Annak megadásához, hogy az adatok rendezését, majd egy szóközzel elválasztva a karakterlánc a &quot;Növekvő&quot;, &quot;ASC&quot;, &quot;Csökkenő&quot; vagy &quot;DESC&quot; adhat az OrderGroupsBy karakterláncban az egyik tulajdonságnév.       Az OrderGroupsBy tulajdonság adható meg egynél több tulajdonság. Minden egyes tulajdonsága külön által vesszővel válassza el."
  example:
  - "The following example shows how to group the data by using two properties, and how to sort the grouped data by using one of those properties. The data from a table named `Products` is grouped by using properties named `CategoryID` and `Discontinued`. The grouped data is sorted by the `CategoryID` property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1127_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1127_1.aspx)]  \n  \n The following example shows how to group the data by using a property, and how to sort it based on the results of an aggregation function. The data from the `Products` table is grouped by using the `CategoryID` property. It is sorted based on the average of the `UnitPrice` property within each group.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1127_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1127_2.aspx)]"
  syntax:
    content: public string OrderGroupsBy { get; set; }
    return:
      type: System.String
      description: "Az Order csoportok By záradék létrehozásához használt karakterlánc."
  overload: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters
  id: OrderGroupsByParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: OrderGroupsByParameters
  nameWithType: LinqDataSource.OrderGroupsByParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az Order csoportok By záradék létrehozásához használt paraméterek gyűjteménye."
  remarks: "A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő használja paraméterek OrderGroupsByParameters gyűjtemény létrehozásához az Order csoportok By záradék futási időben.</xref:System.Web.UI.WebControls.LinqDataSource>       Értékek hozzáadásához a OrderGroupsByParameters gyűjteményhez csak akkor, ha értékek meg kell adni a Order csoportok By záradékban futási időben. A használatával az adatok rendezéséhez használt mezőket adhat meg a <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>       Paraméterek beállítása a OrderGroupsByParameters gyűjteményben, és felel meg a paramétereket a helyőrzőket a <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> Azonban ha ezt a módszert használja, a paraméterek OrderGroupsByParameters gyűjtemény nem tudja ábrázolni egy oszlop neve; értékek képviselnek. A paraméter egy adott értékre állítva, és hasonlítsa össze a tulajdonság értékét. Például az adatok e tulajdonság értékei kisebb, mint a paraméter által képviselt futásidejű értéke alapján rendezheti."
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Az Order csoportok By záradék létrehozásához használt paraméterek."
  overload: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Select
  id: Select
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Select
  nameWithType: LinqDataSource.Select
  fullName: System.Web.UI.WebControls.LinqDataSource.Select
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a tulajdonságok és számított értékek, amelyek a lekért adatok szerepelnek."
  remarks: "Ha nincs megadva a Select tulajdonság a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő a Tulajdonságok (adatoszlopok) kikeresi az objektum.</xref:System.Web.UI.WebControls.LinqDataSource> A Select tulajdonság használhat tulajdonságok részhalmazát lekérdezni az objektum, vagy új értékek kiszámítása, amikor az adatok lekérése folyamatban van.       Megadhatja úgy a tulajdonságokat a visszaadott adat szerepeltetni kívánt nevét a Select tulajdonság beolvasása tulajdonságok.       Ha a Tulajdonságok részhalmazát le az objektum, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő dinamikusan létrehoz egy osztály, amely csak a Select tulajdonság megadott tulajdonságait tartalmazza.</xref:System.Web.UI.WebControls.LinqDataSource> Egy osztály is dinamikusan számítása, amelyek nem az az objektum tulajdonságait. Ebben az esetben a lekérdezés által visszaadott objektum nincs a megadott osztály egy példányát a <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Ehelyett használjon a `new` a Select tulajdonság jelzi, hogy egy új osztályt a lekérdezés által visszaadott metódust. Ahhoz például, hogy csak vissza a `FirstName` és `LastName` ezeket a tulajdonságokat, több olyan objektum, amely tartalmazza a tulajdonságok beállítása a Select tulajdonság `new(FirstName, LastName)`. A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő dinamikusan hoz létre az új osztály megadott a `new` metódus.</xref:System.Web.UI.WebControls.LinqDataSource>       Használhatja a `As` kulcsszó alias hozzárendelése a kijelölt értéket. Ha aliast, meg kell adni a fióknévnek tulajdonságok a `new` metódust. Minden adathoz kötött vezérlő, amelyhez van kötve az eredményeket a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő alias által a tulajdonságra kell hivatkoznia.</xref:System.Web.UI.WebControls.LinqDataSource> Például, ha a Select tulajdonság értéke `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, az adathoz kötött vezérlő férhetnek hozzá két tulajdonságok `SalesRegion` és `RevenueThousands`.       Használja a `new` a következő táblázatban felsorolt függvényt a Select tulajdonság feltételek szerint.      | Válassza ki |} Új felhasználása |} Példa |}   |------------|----------------|-------------|   | Egyetlen tulajdonság. |} `new` nem szükséges. |} `Select=&quot;Category&quot;`|   | Több tulajdonságra. |} `new` szükséges. |} `Select=&quot;new(Cateogry, Name)&quot;`|   | Egy vagy több tulajdonságok esetében alias. |} `new` szükséges. |} `Select=&quot;new(Category As CategoryGroup)&quot;`|       Ha engedélyezi az automatikus módosítása, de nem szeretné, hogy az objektum az összes tulajdonságainak megjelenítéséhez, ne adja meg a Select tulajdonság. Ehelyett kezelése keresztül az adathoz kötött vezérlő megjelenítése. Ha a <xref:System.Web.UI.WebControls.DetailsView>vezérlő vagy a <xref:System.Web.UI.WebControls.GridView>vezérlő, meg kell adnia a <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>vagy a <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>tulajdonságot `false`.</xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> </xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> Nem jelennek meg az adathoz kötött vezérlő értékek vannak tárolva állapotának megtekintése. Akkor továbbítódnak változatlan az adatforrás az adatok frissítés során.       Ha a csoport a lekérdezésben szereplő adatokat, a Select tulajdonság összesített módszerek is felvehet. A következő összesített módszerekkel:- `Count()`       -    `Average(` *oszlop* `)`       -    `Sum(` *oszlop* `)`       -    `Max(` *oszlop* `)`       -    `Min(` *oszlop* `)`       -    `Where(` *feltétel* `)`       -    `Any()`       -    `All(` *feltétel* `)` további információkért lásd: [NIB: LinqDataSource webkiszolgáló vezérlő áttekintése](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136) és [hogyan: csoport és az összesített adatok használata a linqdatasource adatforrás Vezérlő](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af).       Ha a csoport adatokat, megadhatja `Key` és `It`, amely dinamikusan létrehozott tulajdonságai, a Select tulajdonság. A `Key` tulajdonság értékének a következő tulajdonság vagy az adatok csoportosításához használt tulajdonságok hivatkozik. Például, ha nevű tulajdonság szerint csoportosítja `Category`, a `Key` tulajdonság fogja tartalmazni az egyes egyedi értéket a `Category` tulajdonság. A `It` tulajdonság adatok csoportja az egyes rekordok gyűjteményre hivatkozik. Ismétlés is a `It` tulajdonság beolvasása az egyes rekordok, amelyek a csoportosítási művelethez az engedélyezés. Például, ha nevű tulajdonság szerint csoportosítja `Category`, a `It` tulajdonsága tartalmazza az egyes rekordok, amelyek egy közös értéket a `Category` tulajdonság.       Ha megadja a `It` a Select tulajdonságot, amikor adatokat kulcsszót, hozzá kell rendelnie egy aliast a `It` kulcsszó. A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő fog kivételt jelez, ha `It` aliasszal rendelkezik.</xref:System.Web.UI.WebControls.LinqDataSource> Aliasként hozzárendelheti a `Key` kulcsszót, de ez nincs szükség."
  example:
  - "The following example shows how to set the Select property to a subset of properties in the data object.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/add/codesnippet/csharp/p-system.web.ui.webcontr_580_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_580_1.aspx)]  \n  \n The following example shows how to retrieve values in a property that has been used to group data, and to retrieve the average for the grouped records. The `Key` keyword contains the property that has been used for grouping data. In this example, `Key` will contain the shared values from the `ProductCategory` property.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_580_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_580_2.aspx)]"
  syntax:
    content: public string Select { get; set; }
    return:
      type: System.String
      description: "A Select záradékban létrehozásához használt karakterlánc."
  overload: System.Web.UI.WebControls.LinqDataSource.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Selected
  id: Selected
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Selected
  nameWithType: LinqDataSource.Selected
  fullName: System.Web.UI.WebControls.LinqDataSource.Selected
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Egy adatok lekérését művelet befejeződése előtt következik be."
  remarks: "Kezeli a kijelölt esemény bármely kivételeket az adatok lekérése művelet, vagy vizsgálja meg az objektum, a lekérdezési művelet befejeződése után. Az objektum érhető el a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>Eseményleírók átadott objektum.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Selected;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Selecting
  nameWithType: LinqDataSource.Selecting
  fullName: System.Web.UI.WebControls.LinqDataSource.Selecting
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Egy adatbeolvasási művelet előtt következik be."
  remarks: "A Selecting esemény kezeléséhez a következő feladatok elvégzéséhez:-adatok beolvasása a paraméterek módosítása.      -A lekérdezés készítése programozott módon.      -A rendezés vagy lapozás értékeit módosíthatja.      – Hajtsa végre a egyéni rendezési vagy a lapozás.      -A adatbeolvasási művelet megszakításához.       A <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>ezt az eseményt tartalmazza a adatbeolvasási művelet paramétereinek Eseményleírók átadott objektum.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> Módosíthatja a paramétereket a Selecting esemény kezelő a, mielőtt végrehajtja a lekérdezést, vagy hozzon létre egy új eredményhalmaz, és rendelje hozzá, hogy a <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>       Egyéni rendezési vagy a kezelők ezt az eseményt a lapozás megvalósításához arra a képességére, előfordulhat, hogy korlátozza a <xref:System.Web.UI.WebControls.LinqDataSource>.</xref:System.Web.UI.WebControls.LinqDataSource> kötött vezérlő Például, ha az oszlop fejlécében a <xref:System.Web.UI.WebControls.GridView>vezérlő kattint, a vezérlőn, az automatikus rendezés amely előfordulhat, hogy bármilyen sorrendben, akkor felülbírálást létesíteni a kezelő.</xref:System.Web.UI.WebControls.GridView>       Ha a Selecting esemény eseménykezelőben kivételt vált ki, kezelni kell a kivétel fordult elő az eseménykezelő. A kivétel a rendszer nem adta át az eseménykezelő a <xref:System.Web.UI.WebControls.LinqDataSource.Selected>esemény (keresztül a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonsága a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>objektum).</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonság csak a kivételek fellépése, amelyek a Selecting esemény után okozott tartalmazza.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>"
  example:
  - "The following example shows an event handler for the Selecting event. The handler creates a query that retrieves values from an array of string values in the Web page.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/csharp/e-system.web.ui.webcontr_69_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_69_1.vb)]  \n  \n The following example shows how to assign the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to the object that is returned from a method that represents a stored procedure.  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub LinqDataSource_Selecting(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceSelectEventArgs)  \n    Dim exampleContext As ExampleDataContext = New ExampleDataContext()  \n    e.Result = exampleContext.GetRegisteredCustomers()  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Selecting(object sender,   \n        LinqDataSourceSelectEventArgs e)  \n{  \n    ExampleDataContext exampleContext = new ExampleDataContext();  \n    e.Result = exampleContext.GetRegisteredCustomers();  \n}  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> Selecting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceSelectEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: SelectParameters
  nameWithType: LinqDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.SelectParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi az adatlekérési művelet során használt paraméterek gyűjteménye."
  remarks: "A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő használja paraméterek SelectParameters gyűjtemény létrehozásához a Select záradékban futási időben.</xref:System.Web.UI.WebControls.LinqDataSource> Ha a Select záradékban futásidejű értékek használni kívánt paraméterek hozzáadása a SelectParameters gyűjteményben. Például egy paramétert adhat hozzá a SelectParameters gyűjteményt, amelyben a felhasználói profil tulajdonságokat jelöli. Majd használhatja, hogy a tulajdonság és egy értéket, az adatforrás új érték kiszámításához.       Ha nem rendelkeznek, és állítson be egy futási időben a Select záradékban, nem rendelkeznek a SelectParameters gyűjtemény használatára. A beolvasandó tulajdonságként meghatározhatja a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> Ahhoz például, hogy térjen vissza a `FirstName` és `LastName` egy adatbázis tábláinak értékeinek beállítása <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>&quot;Utónév, Vezetéknév&quot; a paraméter nélkül.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>       SelectParameters gyűjtemény értékek megadásához adja hozzá a helyőrző a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>az elnevezett paraméter tulajdonsága.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> A Select záradékban található minden paraméter neve a @ karakter.       SelectParameters gyűjtemény egy paraméter nem használható tulajdonság nevét képviseli. Dinamikusan beállítása a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonságot egy tulajdonság neve eseménykezelő létrehozása a <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>esemény és testre szabhatja a <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>tulajdonság igény szerint.</xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Selecting> </xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>"
  example:
  - "The following example shows how to use a user-supplied value to calculate a value in the returned data. The user can enter a value in the text box that represents the number of manufacturing days. That value is divided by a value from a database that represents the number of days to manufacture a product. The returned value indicates how many products can be manufactured during the specified number of days. The user's input is included in the Select command through the SelectParameters collection.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_129_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A Select záradékban létrehozásához használt paraméterek."
  overload: System.Web.UI.WebControls.LinqDataSource.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState
  id: StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy az adatokat az adatforrásból nézetállapot győződjön meg arról, hogy az adatok nem módosították egy másik folyamat előtt frissíteni vagy törölni kell tárolni."
  remarks: "Alapértelmezés szerint amikor frissíteni és törlési műveletek engedélyezve van, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő az eredeti értékeket tartalmaz, az összes rekordot nézetben állapot.</xref:System.Web.UI.WebControls.LinqDataSource> A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő minden elsődleges kulcs értékeket tartalmaz, és nincs ellátva az összes tulajdonság `UpdateCheck.Never` a a `Column` attribútum.</xref:System.Web.UI.WebControls.LinqDataSource> Beállíthatja a `UpdateCheck` tulajdonsága a `Column` attribútumnak a [!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)].       LINQ to SQL frissíti, vagy törli az adatokat, mielőtt az értékeket az aktuális értékekkel, az adatforrás nézetben állapot ellenőrzi. Ha az értékek nem egyeznek, az adatforrás rekordja megváltozott. Ebben az esetben LINQ to SQL kivételt jelez, és nem folytassa a frissítési vagy törlési művelet. További információ a &quot;LINQ to SQL&quot;: [LINQ to SQL](~/add/includes/ajax-current-ext-md.md).       Az eredeti értékek megtekintési tárolására állapotot okozhat a mérete legyen, feleslegesen és is elérhetővé teheti a bizalmas adatokat, hogy egy rosszindulatú felhasználó. Letilthatja értékek nézetben állapot tárolására a StoreOriginalValuesInViewState tulajdonságának `false`. Ha ezt a megoldást választja, meg kell adnia a saját úgy győződhet meg arról, hogy az adatok nem módosult. Ha a StoreOriginalValuesInViewState tulajdonság értéke `false`, az eredeti értékeket nem megmaradnak az adathoz kötött vezérlő állapotának megtekintése. Ebben az esetben a &quot;LINQ to SQL&quot; nem tudja ellenőrizni az adatok integritásának. &quot;LINQ to SQL&quot; fog kivételt jelez, amely adatok ütközést jelez, akkor is, ha az adatokat az adatforrás ténylegesen nem változott.       Ha az alapul szolgáló adatforrásban, amely automatikusan frissül frissítés közben Timestamp típusú mezőt tartalmaz, csak ezt az értéket a nézetben állapot tárolhatja. Ebben az esetben az entitásosztály időbélyeg-tulajdonságának értéke `IsVersion=true` és a tulajdonság `UpdateCheck.Never`. Minden alkalommal, amikor megváltozik a rekordban levő adatok időbélyegmezővel automatikusan frissíti az adatbázist, mert &quot;LINQ to SQL&quot; ezt az értéket a ellenőrzi, hogy az adatok változásairól. Ezzel csökkenthető nézetállapot méretét, és nem bizalmas adatok van közzétéve. &quot;LINQ to SQL&quot; fogják keresni az adatok konzisztenciájának megtekintési összehasonlítva a timestamp értéket, a Timestamp típusú értéket ad meg az adatbázis állapotát. További információkért lásd: [forgatókönyv: az adatintegritás ellenőrzése linqdatasource adatforrás-vezérlő időbélyeg használatával](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa)."
  syntax:
    content: public bool StoreOriginalValuesInViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az értékek nézetben kívánja tárolni állapot; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType
  id: System#Web#DynamicData#IDynamicDataSource#ContextType
  isEii: true
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: System.Web.DynamicData.IDynamicDataSource.ContextType
  nameWithType: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.ContextType
  fullName: System.Web.UI.WebControls.LinqDataSource.System.Web.DynamicData.IDynamicDataSource.ContextType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ez a tag ismertetését lásd: <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref>."
  remarks: "Ez a tag egy explicit illesztőfelületet tag végrehajtására. Használat csak akkor, ha a <xref:System.Web.UI.WebControls.LinqDataSource>példány típusúvá egy <xref:System.Web.DynamicData.IDynamicDataSource>felületet.</xref:System.Web.DynamicData.IDynamicDataSource> </xref:System.Web.UI.WebControls.LinqDataSource>"
  syntax:
    content: Type System.Web.DynamicData.IDynamicDataSource.ContextType { get; set; }
    return:
      type: System.Type
      description: "Az osztály társított típusa."
  overload: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName
  id: System#Web#DynamicData#IDynamicDataSource#EntitySetName
  isEii: true
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: System.Web.DynamicData.IDynamicDataSource.EntitySetName
  nameWithType: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.LinqDataSource.System.Web.DynamicData.IDynamicDataSource.EntitySetName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ez a tag ismertetését lásd: <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref>."
  remarks: "Ez a tag egy explicit illesztőfelületet tag végrehajtására. Használat csak akkor, ha a <xref:System.Web.UI.WebControls.LinqDataSource>példány típusúvá egy <xref:System.Web.DynamicData.IDynamicDataSource>felületet.</xref:System.Web.DynamicData.IDynamicDataSource> </xref:System.Web.UI.WebControls.LinqDataSource>"
  syntax:
    content: string System.Web.DynamicData.IDynamicDataSource.EntitySetName { get; set; }
    return:
      type: System.String
      description: "Az entitás neve."
  overload: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.TableName
  id: TableName
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: TableName
  nameWithType: LinqDataSource.TableName
  fullName: System.Web.UI.WebControls.LinqDataSource.TableName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja a következő tulajdonság vagy mező nevét adatok számoknak adatok környezetben osztályból."
  remarks: "A TableName tulajdonsága a következő tulajdonság vagy mező szeretné beolvasni az adatokat jelképező nevét. Egy adatbázis tábláinak csatlakozik, a tulajdonság neve esetén általában ugyanaz, mint a tábla neve. Ha egy memórián belüli adatgyűjtés csatlakozik, a TableName tulajdonsága nevére, a következő tulajdonság vagy mező, amely visszaadja az adatgyűjtést.       Olyan tulajdonságon, amely bármilyen visszatér a TableName tulajdonsága adatbeolvasási műveletekkel rendelhet hozzá. Ha a tulajdonság által képviselt objektum nem valósítja meg <xref:System.Collections.IEnumerable>, a <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő automatikusan burkolása az objektum egy példány egy <xref:System.Collections.IEnumerable>objektum.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Collections.IEnumerable>       Automatikus frissítés engedélyezéséhez beszúrási vagy törlési műveletek, az osztályhoz, amely hozzá van rendelve a <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>tulajdonság kell származnia, <xref:System.Data.Linq.DataContext>és a tulajdonság, amely hozzá van rendelve a TableName tulajdonság <xref:System.Data.Linq.Table%601>.</xref:System.Data.Linq.Table%601> kell származnia</xref:System.Data.Linq.DataContext> :</xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>       Jelölje ki az adatokat az osztály egy példányával kapcsolatos információkért lásd: a <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>"
  example:
  - "The following example shows two <xref:System.Web.UI.WebControls.LinqDataSource> controls. In one <xref:System.Web.UI.WebControls.LinqDataSource> control, the TableName property is set to a property in a class. That property returns an array of strings. In the other <xref:System.Web.UI.WebControls.LinqDataSource> control, the TableName property is set to a property that represents a database table.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_811_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_811_1.aspx)]  \n  \n The class named `ExampleDataContext` that represents the database table is not shown in this example. For this example to work, you must create this class by adding a LINQ to SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/add/includes/vs-ordesigner-short-md.md)]. A class named `ExampleDataContext` with a property named `Movies` is generated.  \n  \n The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_811_2.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_811_2.vb)]"
  syntax:
    content: public string TableName { get; set; }
    return:
      type: System.String
      description: "A tulajdonság, amely tartalmazza az adatgyűjtést nevét tartalmazó karakterlánc."
  overload: System.Web.UI.WebControls.LinqDataSource.TableName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSource.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSource.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Az update műveletet hajt végre."
  remarks: "Általában nem kell a felhasználói kódból az Update metódus hívni. Az adathoz kötött vezérlő automatikusan lesz a frissítés metódust hívja, ha a felhasználó végrehajtja a műveletet egy rekord frissítését. Explicit módon hívható meg az Update metódus közben szeretne létrehozni a saját adatok frissítésének folyamatát."
  example:
  - "The following example shows how to programmatically update a record in the data source after the user clicks a button. The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains the key value, a <xref:System.Collections.Specialized.ListDictionary> object that contains the original values, and a <xref:System.Collections.Specialized.ListDictionary> object that contains the new values to the Update method.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Update#1](~/add/codesnippet/csharp/6a1b9704-8770-4c58-8934-_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Update#1](~/add/codesnippet/visualbasic/6a1b9704-8770-4c58-8934-_1.vb)]  \n  \n The following example shows the markup for the previous example.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Update#2](~/add/codesnippet/csharp/6a1b9704-8770-4c58-8934-_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Update#2](~/add/codesnippet/visualbasic/6a1b9704-8770-4c58-8934-_2.aspx)]"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A sor kulcsértékei frissítenie kell a rekordok."
    - id: values
      type: System.Collections.IDictionary
      description: "Az adatforrás frissítendő sorértékeiből."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Ütközések észlelése kiértékelt sorértékeiből."
    return:
      type: System.Int32
      description: "A frissítési művelet által érintett rekordok száma."
  overload: System.Web.UI.WebControls.LinqDataSource.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Updated
  id: Updated
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Updated
  nameWithType: LinqDataSource.Updated
  fullName: System.Web.UI.WebControls.LinqDataSource.Updated
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Akkor következik be, amikor befejezte a frissítési művelet."
  remarks: "Kezeli a frissített esemény a frissítési művelet egyetlen kivételeket, vagy vizsgálja meg a kimeneti paraméterek, a frissítési művelet befejeződése után. A kimeneti paraméterek érhetők el a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>Eseménykezelők átadott objektum.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Updated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: LinqDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.UpdateParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ez a gyűjtemény nem használják a <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> osztály."
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Paraméterek gyűjteménye."
  overload: System.Web.UI.WebControls.LinqDataSource.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Updating
  id: Updating
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Updating
  nameWithType: LinqDataSource.Updating
  fullName: System.Web.UI.WebControls.LinqDataSource.Updating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Frissítési művelet előtt következik be."
  remarks: "A Frissítéskísérleti esemény az objektum frissíteni kell, hogy vizsgálja meg az adatok osztályból, a frissítési művelet előtt érték módosítása, vagy szakítsa meg a frissítési művelet adatok érvényesítési hibák ellenőrzéséhez kezelni. A <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>Eseményleírók átadott objektum tartalmazza az eredeti objektum és a frissített objektum.</xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>       A frissítési műveletet, az <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>objektum tartalmazza a érvényesítési kivételeket, amelyek az adatok osztály által okozott</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> során érvényesítési hiba esetén Érvényesítési hiba akkor fordul elő, ha frissítenie kell egy érték nem egyezik meg az adatok osztályban tulajdonság típusával, vagy nem felel meg egy egyéni érvényességi ellenőrzését. Eseménykezelőben a frissítési esemény az érvényesítési kivételek beolvasni, és hajtsa végre a megfelelő műveletet.       A Frissítéskísérleti esemény eseménykezelőben kivételt vált ki, a kivétel fordult elő az eseménykezelő kezelni kell. A kivétel a rendszer nem adta át az eseménykezelő a <xref:System.Web.UI.WebControls.LinqDataSource.Updated>esemény (keresztül a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonsága a <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>objektum).</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.LinqDataSource.Updated> A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>tulajdonság csak a frissítési esemény után okozott kivételek tartalmazza.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>"
  example:
  - "The following example shows an event handler for the Updating event. The code compares properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to see whether a value has changed. If the value has changed, a value of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_16_1.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_16_1.cs)]  \n  \n The following example shows an event handler for the Updating event that retrieves validation exceptions.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```  \n  \n The previous example retrieves validation exceptions. An exception might be thrown if a value does not match the type of the property. It might also be thrown from a customized check such as the one in the following example. The `OnAgeChanging` method checks that the number for the `Age` property is not negative.  \n  \n```c#  \npartial void  OnAgeChanging(int? value)  \n{  \n    if (value < 0)  \n    {  \n        throw new Exception(\"Age cannot be a negative number.\");  \n    }  \n}  \n```  \n  \n```vb#  \nPrivate Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  \n    If (value < 0) Then  \n        Throw New Exception(\"Age cannot be a negative number.\")  \n    End If  \nEnd Sub  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Updating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs}
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.Where
  id: Where
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: Where
  nameWithType: LinqDataSource.Where
  fullName: System.Web.UI.WebControls.LinqDataSource.Where
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja azt a, amely meghatározza a feltételeket, amelyek igaz értékűnek kell lennie a lekért adatok bevonandó egy vonatkozóan."
  remarks: "You use the Where property to specify the conditions for the record to be returned from a query. The syntax for the Where property is the same as the syntax for a LINQ Where clause in C#.  \n  \n You specify an expression that results in a Boolean value, and if the expression evaluates to `true` for a given row, the row is included in the result set. Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:  \n  \n```  \n<asp:LinqDataSource ... Where=\"Price > 50\"...>  \n```  \n  \n To specify multiple expressions linked by logical `AND` or `OR` operators, you use `&&` as a logical AND operator and `||` as a logical OR operator, as shown in the following example:  \n  \n```  \n<asp:LinqDataSource ... Where=\"Price > 50 && Price < 100\"...>  \n<asp:LinqDataSource ... Where=\"Price <= 50 || Price >= 100\"...>  \n```  \n  \n If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks. To do this in markup, enclose the Where clause value in single quotation marks, as shown in the following example:  \n  \n```  \n<asp:LinqDataSource ... Where='Category = \"Sports\"' ... >  \n```  \n  \n To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:  \n  \n```vb#  \nLinqDataSource1.Where = \"Category = \"\"Sports\"\"\"  \n```  \n  \n```c#  \nLinqDataSource1.Where = \"Category = \\\"Sports\\\"\";  \n```  \n  \n If you want to test whether a string is greater than or less than another string, you must use methods of the <xref:System.String> class instead of using `<` or `>` operators between the column name and the string value. The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to \"Sports\":  \n  \n```  \n<asp:LinqDataSource ... Where='Category.CompareTo(\"Sports\") < 0' ... >  \n<asp:LinqDataSource ... Where='Category.CompareTo(\"Sports\") <= 0' ... >  \n<asp:LinqDataSource ... Where='Category.CompareTo(\"Sports\") > 0' ... >  \n<asp:LinqDataSource ... Where='Category.CompareTo(\"Sports\") >= 0' ... >  \n```  \n  \n You can also use other methods of the <xref:System.String> class, such as <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.Contains%2A>. For more information about how to compare strings, see [Comparing Strings](~/add/includes/ajax-current-ext-md.md). For more information about Where clause syntax, see [C# Operators](~/add/includes/ajax-current-ext-md.md) and [where clause](~/add/includes/ajax-current-ext-md.md).  \n  \n In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time. In that case, you include a named parameter in the Where property that acts as a placeholder for the value. You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.  \n  \n Alternatively, you can set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` and define the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection. When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, you do not have to include the named parameters in the Where property. Instead, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically generates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> property.  \n  \n For more information about how to filter data, see [Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls](http://msdn.microsoft.com/en-us/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)."
  example:
  - "The following example shows how to filter the data returned from a query based on a static condition.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_778_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_778_1.aspx)]  \n  \n The following example shows how to filter the data based on a value that is provided by the user at run time. In this example a <xref:System.Web.UI.WebControls.DropDownList> control and a <xref:System.Web.UI.WebControls.GridView> control are displayed on the page. When the user selects one of the values in the <xref:System.Web.UI.WebControls.DropDownList> control, the <xref:System.Web.UI.WebControls.LinqDataSource> control selects from the `Products` table only rows that have `UserPrice` values equal to the selected value. The <xref:System.Web.UI.WebControls.GridView> control then displays the filtered data.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_778_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_778_2.aspx)]"
  syntax:
    content: public string Where { get; set; }
    return:
      type: System.String
      description: "Karakterlánc, amely hozhatók létre a Where záradékban."
  overload: System.Web.UI.WebControls.LinqDataSource.Where*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSource.WhereParameters
  id: WhereParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  langs:
  - csharp
  name: WhereParameters
  nameWithType: LinqDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.WhereParameters
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi a Where létrehozásához használt paraméterek gyűjteménye záradékban."
  remarks: "A <xref:System.Web.UI.WebControls.LinqDataSource>vezérlő paramétereket használja a WhereParameters gyűjtemény létrehozása a Where záradék futási időben.</xref:System.Web.UI.WebControls.LinqDataSource> Ön paraméterek a gyűjteményhez hozzáadni kívánt WhereParameters helyzet programozott módon állítsa be a feltételek közül legalább egyet a Where záradékban. Például egy adatbázis tábláinak értékének egyenlőnek utolsó néven rekordok keresésekor egy <xref:System.Web.UI.WebControls.TextBox>vezérlő.</xref:System.Web.UI.WebControls.TextBox> Ebben az esetben paramétert adhat a szöveges be értéket a WhereParameters gyűjteményt.       Ha nem rendelkezik és állítson be egy futási időben WHERE záradék, nem kell használni a WhereParameters gyűjteményben. A mezők a beolvasása a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> Például egy adatbázis tábláinak származó visszaadott értékekre mutató hol `LastName` egyenlő &quot;Adams&quot; a jelölés során, állítsa be a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonságot `&quot;LastName = &quot;Adams&quot;&quot;` paraméter nélkül.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>       Értékeinek beállításához a WhereParameters gyűjteményben, a név hozzárendelése egyes paramétereket, és adja meg a helyőrző a <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>tulajdonság az adott paraméter.</xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> A Where záradék, található minden paraméter neve a @ karakter."
  example:
  - "The following example shows how to use the WhereParameters collection to dynamically create the Where clause. The <xref:System.Web.UI.WebControls.LinqDataSource> control returns all the records with a value in the `Price` column that is greater than the value selected by the user in a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_594_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_594_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A Where létrehozásához használt paraméterek gyűjteménye záradékot a <xref:System.Web.UI.WebControls.LinqDataSource.Where*>tulajdonság.</xref:System.Web.UI.WebControls.LinqDataSource.Where*>"
  overload: System.Web.UI.WebControls.LinqDataSource.WhereParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ContextDataSource
  isExternal: false
  name: System.Web.UI.WebControls.ContextDataSource
- uid: System.Web.UI.WebControls.LinqDataSource.#ctor
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: LinqDataSource()
  nameWithType: LinqDataSource.LinqDataSource()
  fullName: System.Web.UI.WebControls.LinqDataSource.LinqDataSource()
- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: LinqDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: LinqDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.LinqDataSource.AutoPage
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: AutoPage
  nameWithType: LinqDataSource.AutoPage
  fullName: System.Web.UI.WebControls.LinqDataSource.AutoPage
- uid: System.Web.UI.WebControls.LinqDataSource.AutoSort
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: AutoSort
  nameWithType: LinqDataSource.AutoSort
  fullName: System.Web.UI.WebControls.LinqDataSource.AutoSort
- uid: System.Web.UI.WebControls.LinqDataSource.ContextCreated
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: ContextCreated
  nameWithType: LinqDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.LinqDataSource.ContextCreated
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceStatusEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceStatusEventArgs>
  nameWithType: EventHandler<LinqDataSourceStatusEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
    name: LinqDataSourceStatusEventArgs
    nameWithType: LinqDataSourceStatusEventArgs
    fullName: LinqDataSourceStatusEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSource.ContextCreating
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: ContextCreating
  nameWithType: LinqDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.LinqDataSource.ContextCreating
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceContextEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceContextEventArgs>
  nameWithType: EventHandler<LinqDataSourceContextEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceContextEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
    name: LinqDataSourceContextEventArgs
    nameWithType: LinqDataSourceContextEventArgs
    fullName: LinqDataSourceContextEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSource.ContextDisposing
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: ContextDisposing
  nameWithType: LinqDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.LinqDataSource.ContextDisposing
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceDisposeEventArgs>
  nameWithType: EventHandler<LinqDataSourceDisposeEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs
    name: LinqDataSourceDisposeEventArgs
    nameWithType: LinqDataSourceDisposeEventArgs
    fullName: LinqDataSourceDisposeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSource.ContextTypeName
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: LinqDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.LinqDataSource.ContextTypeName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: CreateQueryableView()
  nameWithType: LinqDataSource.CreateQueryableView()
  fullName: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView()
- uid: System.Web.UI.WebControls.QueryableDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: QueryableDataSourceView
  nameWithType: QueryableDataSourceView
  fullName: System.Web.UI.WebControls.QueryableDataSourceView
- uid: System.Web.UI.WebControls.LinqDataSource.CreateView
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: CreateView()
  nameWithType: LinqDataSource.CreateView()
  fullName: System.Web.UI.WebControls.LinqDataSource.CreateView()
- uid: System.Web.UI.WebControls.LinqDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceView
  nameWithType: LinqDataSourceView
  fullName: System.Web.UI.WebControls.LinqDataSourceView
- uid: System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: LinqDataSource.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSource.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.LinqDataSource.Deleted
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Deleted
  nameWithType: LinqDataSource.Deleted
  fullName: System.Web.UI.WebControls.LinqDataSource.Deleted
- uid: System.Web.UI.WebControls.LinqDataSource.DeleteParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: LinqDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.LinqDataSource.Deleting
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Deleting
  nameWithType: LinqDataSource.Deleting
  fullName: System.Web.UI.WebControls.LinqDataSource.Deleting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceDeleteEventArgs>
  nameWithType: EventHandler<LinqDataSourceDeleteEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs
    name: LinqDataSourceDeleteEventArgs
    nameWithType: LinqDataSourceDeleteEventArgs
    fullName: LinqDataSourceDeleteEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSource.EnableDelete
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: LinqDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.LinqDataSource.EnableDelete
- uid: System.Web.UI.WebControls.LinqDataSource.EnableInsert
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: LinqDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.LinqDataSource.EnableInsert
- uid: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: EnableObjectTracking
  nameWithType: LinqDataSource.EnableObjectTracking
  fullName: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking
- uid: System.Web.UI.WebControls.LinqDataSource.EnableUpdate
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: LinqDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.LinqDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.LinqDataSource.GroupBy
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: GroupBy
  nameWithType: LinqDataSource.GroupBy
  fullName: System.Web.UI.WebControls.LinqDataSource.GroupBy
- uid: System.Web.UI.WebControls.LinqDataSource.GroupByParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: GroupByParameters
  nameWithType: LinqDataSource.GroupByParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.GroupByParameters
- uid: System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: LinqDataSource.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSource.Insert(IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSource.Inserted
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Inserted
  nameWithType: LinqDataSource.Inserted
  fullName: System.Web.UI.WebControls.LinqDataSource.Inserted
- uid: System.Web.UI.WebControls.LinqDataSource.Inserting
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Inserting
  nameWithType: LinqDataSource.Inserting
  fullName: System.Web.UI.WebControls.LinqDataSource.Inserting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceInsertEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceInsertEventArgs>
  nameWithType: EventHandler<LinqDataSourceInsertEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
    name: LinqDataSourceInsertEventArgs
    nameWithType: LinqDataSourceInsertEventArgs
    fullName: LinqDataSourceInsertEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSource.InsertParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: LinqDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.InsertParameters
- uid: System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: LinqDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSource.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: LinqDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.LinqDataSource.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.LinqDataSource.OrderBy
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OrderBy
  nameWithType: LinqDataSource.OrderBy
  fullName: System.Web.UI.WebControls.LinqDataSource.OrderBy
- uid: System.Web.UI.WebControls.LinqDataSource.OrderByParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: LinqDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OrderGroupsBy
  nameWithType: LinqDataSource.OrderGroupsBy
  fullName: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy
- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OrderGroupsByParameters
  nameWithType: LinqDataSource.OrderGroupsByParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters
- uid: System.Web.UI.WebControls.LinqDataSource.Select
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Select
  nameWithType: LinqDataSource.Select
  fullName: System.Web.UI.WebControls.LinqDataSource.Select
- uid: System.Web.UI.WebControls.LinqDataSource.Selected
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Selected
  nameWithType: LinqDataSource.Selected
  fullName: System.Web.UI.WebControls.LinqDataSource.Selected
- uid: System.Web.UI.WebControls.LinqDataSource.Selecting
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Selecting
  nameWithType: LinqDataSource.Selecting
  fullName: System.Web.UI.WebControls.LinqDataSource.Selecting
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceSelectEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceSelectEventArgs>
  nameWithType: EventHandler<LinqDataSourceSelectEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceSelectEventArgs
    name: LinqDataSourceSelectEventArgs
    nameWithType: LinqDataSourceSelectEventArgs
    fullName: LinqDataSourceSelectEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSource.SelectParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: LinqDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.SelectParameters
- uid: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: System.Web.DynamicData.IDynamicDataSource.ContextType
  nameWithType: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.ContextType
  fullName: System.Web.UI.WebControls.LinqDataSource.System.Web.DynamicData.IDynamicDataSource.ContextType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: System.Web.DynamicData.IDynamicDataSource.EntitySetName
  nameWithType: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.LinqDataSource.System.Web.DynamicData.IDynamicDataSource.EntitySetName
- uid: System.Web.UI.WebControls.LinqDataSource.TableName
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: TableName
  nameWithType: LinqDataSource.TableName
  fullName: System.Web.UI.WebControls.LinqDataSource.TableName
- uid: System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: LinqDataSource.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.LinqDataSource.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.LinqDataSource.Updated
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Updated
  nameWithType: LinqDataSource.Updated
  fullName: System.Web.UI.WebControls.LinqDataSource.Updated
- uid: System.Web.UI.WebControls.LinqDataSource.UpdateParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: LinqDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.LinqDataSource.Updating
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Updating
  nameWithType: LinqDataSource.Updating
  fullName: System.Web.UI.WebControls.LinqDataSource.Updating
- uid: System.EventHandler{System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<LinqDataSourceUpdateEventArgs>
  nameWithType: EventHandler<LinqDataSourceUpdateEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs
    name: LinqDataSourceUpdateEventArgs
    nameWithType: LinqDataSourceUpdateEventArgs
    fullName: LinqDataSourceUpdateEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSource.Where
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Where
  nameWithType: LinqDataSource.Where
  fullName: System.Web.UI.WebControls.LinqDataSource.Where
- uid: System.Web.UI.WebControls.LinqDataSource.WhereParameters
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: LinqDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.LinqDataSource.WhereParameters
- uid: System.Web.UI.WebControls.LinqDataSource.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: LinqDataSource
  nameWithType: LinqDataSource.LinqDataSource
- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: LinqDataSource.AutoGenerateOrderByClause
- uid: System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: LinqDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.LinqDataSource.AutoPage*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: AutoPage
  nameWithType: LinqDataSource.AutoPage
- uid: System.Web.UI.WebControls.LinqDataSource.AutoSort*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: AutoSort
  nameWithType: LinqDataSource.AutoSort
- uid: System.Web.UI.WebControls.LinqDataSource.ContextTypeName*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: LinqDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.LinqDataSource.CreateQueryableView*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: CreateQueryableView
  nameWithType: LinqDataSource.CreateQueryableView
- uid: System.Web.UI.WebControls.LinqDataSource.CreateView*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: CreateView
  nameWithType: LinqDataSource.CreateView
- uid: System.Web.UI.WebControls.LinqDataSource.Delete*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Delete
  nameWithType: LinqDataSource.Delete
- uid: System.Web.UI.WebControls.LinqDataSource.DeleteParameters*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: LinqDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.LinqDataSource.EnableDelete*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: LinqDataSource.EnableDelete
- uid: System.Web.UI.WebControls.LinqDataSource.EnableInsert*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: LinqDataSource.EnableInsert
- uid: System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: EnableObjectTracking
  nameWithType: LinqDataSource.EnableObjectTracking
- uid: System.Web.UI.WebControls.LinqDataSource.EnableUpdate*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: LinqDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.LinqDataSource.GroupBy*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: GroupBy
  nameWithType: LinqDataSource.GroupBy
- uid: System.Web.UI.WebControls.LinqDataSource.GroupByParameters*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: GroupByParameters
  nameWithType: LinqDataSource.GroupByParameters
- uid: System.Web.UI.WebControls.LinqDataSource.Insert*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Insert
  nameWithType: LinqDataSource.Insert
- uid: System.Web.UI.WebControls.LinqDataSource.InsertParameters*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: LinqDataSource.InsertParameters
- uid: System.Web.UI.WebControls.LinqDataSource.OnInit*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OnInit
  nameWithType: LinqDataSource.OnInit
- uid: System.Web.UI.WebControls.LinqDataSource.OnUnload*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OnUnload
  nameWithType: LinqDataSource.OnUnload
- uid: System.Web.UI.WebControls.LinqDataSource.OrderBy*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OrderBy
  nameWithType: LinqDataSource.OrderBy
- uid: System.Web.UI.WebControls.LinqDataSource.OrderByParameters*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: LinqDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OrderGroupsBy
  nameWithType: LinqDataSource.OrderGroupsBy
- uid: System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: OrderGroupsByParameters
  nameWithType: LinqDataSource.OrderGroupsByParameters
- uid: System.Web.UI.WebControls.LinqDataSource.Select*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Select
  nameWithType: LinqDataSource.Select
- uid: System.Web.UI.WebControls.LinqDataSource.SelectParameters*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: LinqDataSource.SelectParameters
- uid: System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: LinqDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: System.Web.DynamicData.IDynamicDataSource.ContextType
  nameWithType: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.ContextType
- uid: System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: System.Web.DynamicData.IDynamicDataSource.EntitySetName
  nameWithType: LinqDataSource.System.Web.DynamicData.IDynamicDataSource.EntitySetName
- uid: System.Web.UI.WebControls.LinqDataSource.TableName*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: TableName
  nameWithType: LinqDataSource.TableName
- uid: System.Web.UI.WebControls.LinqDataSource.Update*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Update
  nameWithType: LinqDataSource.Update
- uid: System.Web.UI.WebControls.LinqDataSource.UpdateParameters*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: LinqDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.LinqDataSource.Where*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: Where
  nameWithType: LinqDataSource.Where
- uid: System.Web.UI.WebControls.LinqDataSource.WhereParameters*
  parent: System.Web.UI.WebControls.LinqDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: LinqDataSource.WhereParameters
