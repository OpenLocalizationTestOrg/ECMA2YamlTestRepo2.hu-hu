### YamlMime:ManagedReference
items:
- uid: System.Windows.FrameworkPropertyMetadata
  id: FrameworkPropertyMetadata
  children:
  - System.Windows.FrameworkPropertyMetadata.#ctor
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  - System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  - System.Windows.FrameworkPropertyMetadata.AffectsArrange
  - System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  - System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  - System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  - System.Windows.FrameworkPropertyMetadata.AffectsRender
  - System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  - System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  - System.Windows.FrameworkPropertyMetadata.Inherits
  - System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  - System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  - System.Windows.FrameworkPropertyMetadata.Journal
  - System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  - System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  - System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  - System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  langs:
  - csharp
  name: FrameworkPropertyMetadata
  nameWithType: FrameworkPropertyMetadata
  fullName: System.Windows.FrameworkPropertyMetadata
  type: Class
  summary: "Jelentések, vagy a metaadatokat egy függőség tulajdonság, kifejezetten a keretrendszer-specifikus tulajdonság jellemzői hozzáadása alkalmazza."
  remarks: "Ez az osztály származik <xref:System.Windows.PropertyMetadata>(keresztül <xref:System.Windows.UIPropertyMetadata>).</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.PropertyMetadata> A legtöbb WPF keretrendszert szintű alkalmazás fejlesztési célra FrameworkPropertyMetadata egy függőség tulajdonság metaadatai ahelyett, hogy az alapmetaadatoknak típusok <xref:System.Windows.PropertyMetadata>vagy <xref:System.Windows.UIPropertyMetadata>.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.PropertyMetadata> használt típus Ez igaz mind a meglévő függőségi tulajdonságok, illetve a legtöbb egyéni függőségi tulajdonság esetében.       A tagok ez deklarál osztály adott kiegészítés a <xref:System.Windows.PropertyMetadata>alaposztály közé tartoznak, adja meg, vagy a jelentés a WPF keretrendszert szintű tulajdonság rendszerműködést például tulajdonságöröklés adatkötés vagy elrendezés logikai tulajdonságait.</xref:System.Windows.PropertyMetadata>       Több konstruktor aláírásának FrameworkPropertyMetadata példány létrehozása igénybe vehet egy <xref:System.Windows.FrameworkPropertyMetadataOptions>paraméter.</xref:System.Windows.FrameworkPropertyMetadataOptions> A <xref:System.Windows.FrameworkPropertyMetadataOptions>számbavételi csak a kezdeti viselkedés meg a konstruktorban használjuk, és nincs más módon felfedve után FrameworkPropertyMetadata összeállított.</xref:System.Windows.FrameworkPropertyMetadataOptions> A létrehozott példány beolvasása, vagy állítsa be a megfelelő adatok különböző tulajdonságai, amelyek az enumerálási adatokat a konstruktorhívás használt nevét.      <a name=&quot;xamlTextUsage_FrameworkPropertyMetadata&quot;></a>## Ez az osztály nem általában használatos XAML szöveg használati [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example gets metadata for a dependency property on a particular owner as the initial base <xref:System.Windows.PropertyMetadata> type. That metadata is cast to FrameworkPropertyMetadata. If the cast returned a valid FrameworkPropertyMetadata, then various FrameworkPropertyMetadata property values are reported through a simple UI (not shown).  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: 'public class FrameworkPropertyMetadata : System.Windows.UIPropertyMetadata'
  inheritance:
  - System.Object
  - System.Windows.PropertyMetadata
  - System.Windows.UIPropertyMetadata
  implements: []
  inheritedMembers:
  - System.Windows.PropertyMetadata.CoerceValueCallback
  - System.Windows.PropertyMetadata.DefaultValue
  - System.Windows.PropertyMetadata.IsSealed
  - System.Windows.PropertyMetadata.PropertyChangedCallback
  - System.Windows.UIPropertyMetadata.IsAnimationProhibited
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor
  id: '#ctor'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata()
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> osztály."
  remarks: "Az aláírás inicializálja szereplő összes FrameworkPropertyMetadata tulajdonságot alapértelmezett értékre. <xref:System.Windows.PropertyMetadata.DefaultValue%2A>lesz `null`, és a különböző <xref:System.Windows.FrameworkPropertyMetadata>logikai tulajdonságok lesz `false`.</xref:System.Windows.FrameworkPropertyMetadata></xref:System.Windows.PropertyMetadata.DefaultValue%2A>"
  syntax:
    content: public FrameworkPropertyMetadata ();
    parameters: []
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> osztály a megadott alapértelmezett értékkel."
  remarks: "A megadott érték típusa `defaultValue` kell lenniük, vagy az eredeti regisztráció a függőség tulajdonság, az alkalmazni fogja a metaadatok megadott típus kapcsolódnak. Inkonzisztens metaadatok alapértelmezett érték típusa és a alkalmazva van a függőség tulajdonság hibakeresési, nehézkes lehet, mert a következő ütközés nem felismerhető történik a fordítás során. A tulajdonság-rendszer nem értékeli az érvényes érték a tulajdonság futási idő, amíg, alapértelmezett érték típusa/tulajdonság Típuseltérés eredménye egy futásidejű hiba.       Az érték <xref:System.Windows.DependencyProperty.UnsetValue>kulcsszó különleges jelentéssel bír az tulajdonság rendszerben, és nem használható egy függőség tulajdonság alapértelmezett értéke.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor1param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor1param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Az alapértelmezett érték a függőség tulajdonság, általában megadott adott típusú értékként."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>értéke <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; lásd: a megjegyzések."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> és a megadott osztály <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> visszahívás."
  remarks: ''
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor1paramcallback](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor1paramcallback)]"
  syntax:
    content: public FrameworkPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "Egy hivatkozás, amely a tulajdonság rendszer fel fogja hívni, az érvényes érték a tulajdonság megváltozásakor kezelő megvalósításához."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> osztály a megadott alapértelmezett értéket és a keretrendszer szintű metaadatok beállításokkal."
  remarks: "A megadott érték típusa `defaultValue` kell lenniük, vagy az eredeti regisztráció a függőség tulajdonság, az alkalmazni fogja a metaadatok megadott típus kapcsolódnak. Inkonzisztens metaadatok alapértelmezett érték típusa és a alkalmazva van a függőség tulajdonság hibakeresési, nehézkes lehet, mert a következő ütközés nem felismerhető történik a fordítás során. A tulajdonság-rendszer nem értékeli az érvényes érték a tulajdonság futási idő, amíg, alapértelmezett érték típusa/tulajdonság Típuseltérés eredménye egy futásidejű hiba.       Az érték <xref:System.Windows.DependencyProperty.UnsetValue>kulcsszó különleges jelentéssel bír az tulajdonság rendszerben, és nem használható egy függőség tulajdonság alapértelmezett értéke.</xref:System.Windows.DependencyProperty.UnsetValue>       Értékek jelölésű set jelzőt a `flags` paraméter állítja be a logikai értéke <xref:System.Windows.FrameworkPropertyMetadata>tulajdonsága, amely egyezik <xref:System.Windows.FrameworkPropertyMetadataOptions>jelző nevét `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> Ezt követően módosíthatja az értékeket a metaadat-tulajdonságokat, mindaddig, amíg a metaadatok nincs még telepítve van egy adott tulajdonságra rendszerművelet."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Az alapértelmezett érték a függőség tulajdonság, általában megadott adott típusú értékként."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "A metaadatok beállítási jelző (kombinációja <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> értékek). Ezek a beállítások a függőség tulajdonság módosításának jellemzői rendszerek – például a szükséges elrendezést vagy adatkötés adja meg."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>értéke <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; lásd: a megjegyzések."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Object,System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> osztály a megadott alapértelmezett értékkel, és a megadott <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> visszahívás."
  remarks: "A megadott érték típusa `defaultValue` kell lenniük, vagy az eredeti regisztráció a függőség tulajdonság, az alkalmazni fogja a metaadatok megadott típus kapcsolódnak. Inkonzisztens metaadatok alapértelmezett érték típusa és a alkalmazva van a függőség tulajdonság hibakeresési, nehézkes lehet, mert a következő ütközés nem felismerhető történik a fordítás során. A tulajdonság-rendszer nem értékeli az érvényes érték a tulajdonság futási idő, amíg, alapértelmezett érték típusa/tulajdonság Típuseltérés eredménye egy futásidejű hiba.       Az érték <xref:System.Windows.DependencyProperty.UnsetValue>kulcsszó különleges jelentéssel bír az tulajdonság rendszerben, és nem használható egy függőség tulajdonság alapértelmezett értéke.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor2param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor2param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Az alapértelmezett érték a függőség tulajdonság, általában megadott adott típusú értékként."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "Egy hivatkozás, amely a tulajdonság rendszer fel fogja hívni, az érvényes érték a tulajdonság megváltozásakor kezelő megvalósításához."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>értéke <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; lásd: a megjegyzések."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> a megadott visszahívások osztályra."
  remarks: "Ez a megvalósítás alap inicializáló hívja, és hozzáadja a `coerceValueCallback` tulajdonságának beállításával alap-példányon."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_PCC_CVC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_pcc_cvc)]"
  syntax:
    content: public FrameworkPropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "Egy hivatkozás, amely a tulajdonság rendszer fel fogja hívni, az érvényes érték a tulajdonság megváltozásakor kezelő megvalósításához."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "Kezelő megvalósításához hivatkozást kell meghívni, amikor a tulajdonság rendszer meghívja a <xref:System.Windows.DependencyObject.CoerceValue*>a függőség tulajdonság.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> osztály a megadott alapértelmezett értéket és a keretrendszer metaadatok beállításokkal, és a megadott <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> visszahívás."
  remarks: "A megadott érték típusa `defaultValue` kell lenniük, vagy az eredeti regisztráció a függőség tulajdonság, az alkalmazni fogja a metaadatok megadott típus kapcsolódnak. Inkonzisztens metaadatok alapértelmezett érték típusa és a alkalmazva van a függőség tulajdonság hibakeresési, nehézkes lehet, mert a következő ütközés nem felismerhető történik a fordítás során. A tulajdonság-rendszer nem értékeli az érvényes érték a tulajdonság futási idő, amíg, alapértelmezett érték típusa/tulajdonság Típuseltérés eredménye egy futásidejű hiba.       Az érték <xref:System.Windows.DependencyProperty.UnsetValue>kulcsszó különleges jelentéssel bír az tulajdonság rendszerben, és nem használható egy függőség tulajdonság alapértelmezett értéke.</xref:System.Windows.DependencyProperty.UnsetValue>       Értékek jelölésű set jelzőt a `flags` paraméter állítja be a logikai értéke <xref:System.Windows.FrameworkPropertyMetadata>tulajdonsága, amely egyezik <xref:System.Windows.FrameworkPropertyMetadataOptions>jelző nevét `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> A metaadat-tulajdonságokat az értékeket módosíthatja, amíg a metaadatok nincs még telepítve van egy adott tulajdonságra rendszerművelet továbbra is."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Az alapértelmezett érték a függőség tulajdonság, általában megadott adott típusú értékként."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "A metaadatok beállítási jelző (kombinációja <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> értékek). Ezek a beállítások a függőség tulajdonság módosításának jellemzői rendszerek – például a szükséges elrendezést vagy adatkötés adja meg."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "Egy hivatkozás, amely a tulajdonság rendszer fel fogja hívni, az érvényes érték a tulajdonság megváltozásakor kezelő megvalósításához."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>értéke <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; lásd: a megjegyzések."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> a megadott alapértelmezett értéket és a megadott visszahívások osztály."
  remarks: "A megadott érték típusa `defaultValue` kell lenniük, vagy az eredeti regisztráció a függőség tulajdonság, az alkalmazni fogja a metaadatok megadott típus kapcsolódnak. Inkonzisztens metaadatok alapértelmezett érték típusa és a alkalmazva van a függőség tulajdonság hibakeresési, nehézkes lehet, mert a következő ütközés nem felismerhető történik a fordítás során. A tulajdonság-rendszer nem értékeli az érvényes érték a tulajdonság futási idő, amíg, alapértelmezett érték típusa/tulajdonság Típuseltérés eredménye egy futásidejű hiba.       Az érték <xref:System.Windows.DependencyProperty.UnsetValue>kulcsszó különleges jelentéssel bír az tulajdonság rendszerben, és nem használható egy függőség tulajdonság alapértelmezett értéke.</xref:System.Windows.DependencyProperty.UnsetValue>"
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor3param](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor3param)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Az alapértelmezett érték a függőség tulajdonság, általában megadja azt a megadott típusra."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "Egy hivatkozás, amely a tulajdonság rendszer fel fogja hívni, az érvényes érték a tulajdonság megváltozásakor kezelő megvalósításához."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "Egy hivatkozást, amely hívható, ha a tulajdonság rendszer meghívja a kezelő megvalósításához <xref:System.Windows.DependencyObject.CoerceValue*>a függőség tulajdonság.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>értéke <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; lásd: a megjegyzések."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> a megadott alapértelmezett értéket, és a keretrendszer metaadatok beállítások és a megadott visszahívások osztály."
  remarks: "A megadott érték típusa `defaultValue` kell lenniük, vagy az eredeti regisztráció a függőség tulajdonság, az alkalmazni fogja a metaadatok megadott típus kapcsolódnak. Inkonzisztens metaadatok alapértelmezett érték típusa és a alkalmazva van a függőség tulajdonság hibakeresési, nehézkes lehet, mert a következő ütközés nem felismerhető történik a fordítás során. A tulajdonság-rendszer nem értékeli az érvényes érték a tulajdonság futási idő, amíg, alapértelmezett érték típusa/tulajdonság Típuseltérés eredménye egy futásidejű hiba.       Az érték <xref:System.Windows.DependencyProperty.UnsetValue>kulcsszó különleges jelentéssel bír az tulajdonság rendszerben, és nem használható egy függőség tulajdonság alapértelmezett értéke.</xref:System.Windows.DependencyProperty.UnsetValue>       Értékek jelölésű set jelzőt a `flags` paraméter állítja be a logikai értéke <xref:System.Windows.FrameworkPropertyMetadata>tulajdonsága, amely egyezik <xref:System.Windows.FrameworkPropertyMetadataOptions>jelző nevét `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> A metaadat-tulajdonságokat az értékeket módosíthatja, amíg a metaadatok nincs még telepítve van egy adott tulajdonságra rendszerművelet továbbra is."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Az alapértelmezett érték a függőség tulajdonság, általában megadja azt a megadott típusra."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "A metaadatok beállítási jelző (kombinációja <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> értékek). Ezek a beállítások a függőség tulajdonság módosításának jellemzői rendszerek – például a szükséges elrendezést vagy adatkötés adja meg."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "Egy hivatkozás, amely a tulajdonság rendszer fel fogja hívni, az érvényes érték a tulajdonság megváltozásakor kezelő megvalósításához."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "Egy hivatkozást, amely hívható, ha a tulajdonság rendszer meghívja a kezelő megvalósításához <xref:System.Windows.DependencyObject.CoerceValue*>elleni ehhez a tulajdonsághoz.</xref:System.Windows.DependencyObject.CoerceValue*>"
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>értéke <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; lásd: a megjegyzések."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> osztály a megadott alapértelmezett értéket és a keretrendszer metaadatok beállítások, a megadott visszahívások és a logikai érték a tulajdonság az animáció megelőzése érdekében használható."
  remarks: "A megadott érték típusa `defaultValue` kell lenniük, vagy az eredeti regisztráció a függőség tulajdonság, az alkalmazni fogja a metaadatok megadott típus kapcsolódnak. Inkonzisztens metaadatok alapértelmezett érték típusa és a alkalmazva van a függőség tulajdonság hibakeresési, nehézkes lehet, mert a következő ütközés nem felismerhető történik a fordítás során. A tulajdonság-rendszer nem értékeli az érvényes érték a tulajdonság futási idő, amíg, alapértelmezett érték típusa/tulajdonság Típuseltérés eredménye egy futásidejű hiba.       Az érték <xref:System.Windows.DependencyProperty.UnsetValue>kulcsszó különleges jelentéssel bír az tulajdonság rendszerben, és nem használható egy függőség tulajdonság alapértelmezett értéke.</xref:System.Windows.DependencyProperty.UnsetValue>       A `isAnimationProhibited` paraméter állandóként állítja be a kezdeti értéke <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>tulajdonságot deklarál azonnali alap <xref:System.Windows.UIPropertyMetadata>osztályhoz.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>       Értékek jelölésű set jelzőt a `flags` paraméter állítja be a logikai értéke <xref:System.Windows.FrameworkPropertyMetadata>tulajdonsága, amely egyezik <xref:System.Windows.FrameworkPropertyMetadataOptions>jelző nevét `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> A metaadat-tulajdonságokat az értékeket módosíthatja, amíg a metaadatok nincs még telepítve van egy adott tulajdonságra rendszerművelet továbbra is."
  example:
  - "The following example calls this constructor signature:  \n  \n [!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC_IAP](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc_iap)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Az alapértelmezett érték a függőség tulajdonság, általában megadja azt a megadott típusra."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "A metaadatok beállítási jelző (kombinációja <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> értékek). Ezek a beállítások a függőség tulajdonság módosításának jellemzői rendszerek – például a szükséges elrendezést vagy adatkötés adja meg."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "Egy hivatkozás, amely a tulajdonság rendszer fel fogja hívni, az érvényes érték a tulajdonság megváltozásakor kezelő megvalósításához."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "Egy hivatkozást, amely hívható, ha a tulajdonság rendszer meghívja a kezelő megvalósításához <xref:System.Windows.DependencyObject.CoerceValue*>ezen függőségi tulajdonsággal.</xref:System.Windows.DependencyObject.CoerceValue*>"
    - id: isAnimationProhibited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a tulajdonság rendszer érdekében a tulajdonság a metaadatok alkalmazott animációjának. Az ilyen tulajdonságok emeli a futásidejű kivételt a tulajdonság rendszerből származó, ha azok animációk próbált vannak. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>lehetővé teszi a animálása tulajdonság. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>értéke <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; lásd: a megjegyzések."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  id: '#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)'
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.FrameworkPropertyMetadata&quot;> </xref> osztály a megadott alapértelmezett értéket és a keretrendszer metaadatokkal lehetőségek, megadott visszahívások, olyan logikai érték, amely megakadályozza a tulajdonságot, és egy adatkötési update trigger alapértelmezett animáció használható."
  remarks: "A megadott érték típusa `defaultValue` kell lenniük, vagy az eredeti regisztráció a függőség tulajdonság, az alkalmazni fogja a metaadatok megadott típus kapcsolódnak. Inkonzisztens metaadatok alapértelmezett érték típusa és a alkalmazva van a függőség tulajdonság hibakeresési, nehézkes lehet, mert a következő ütközés nem felismerhető történik a fordítás során. A tulajdonság-rendszer nem értékeli az érvényes érték a tulajdonság futási idő, amíg, alapértelmezett érték típusa/tulajdonság Típuseltérés eredménye egy futásidejű hiba.       Az érték <xref:System.Windows.DependencyProperty.UnsetValue>kulcsszó különleges jelentéssel bír az tulajdonság rendszerben, és nem használható egy függőség tulajdonság alapértelmezett értéke.</xref:System.Windows.DependencyProperty.UnsetValue>       A `isAnimationProhibited` paraméter állandóként állítja be a kezdeti értéke <xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>tulajdonságot deklarál azonnali alap <xref:System.Windows.UIPropertyMetadata>osztályhoz.</xref:System.Windows.UIPropertyMetadata> </xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>       A frissítési forrás viselkedése kötések kapcsolatos további információkért lásd: [kötés – áttekintés](~/add/includes/ajax-current-ext-md.md).       Értékek jelölésű set jelzőt a `flags` paraméter állítja be a logikai értéke <xref:System.Windows.FrameworkPropertyMetadata>tulajdonsága, amely egyezik <xref:System.Windows.FrameworkPropertyMetadataOptions>jelző nevét `true`.</xref:System.Windows.FrameworkPropertyMetadataOptions> </xref:System.Windows.FrameworkPropertyMetadata> A metaadat-tulajdonságokat az értékeket módosíthatja, amíg a metaadatok nincs még telepítve van egy adott tulajdonságra rendszerművelet továbbra is."
  example:
  - "[!code-cs[PropertyMetadataAPIs#Initfpm](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#initfpm)]  \n[!code-cs[PropertyMetadataAPIs#FPMCtor_DV_FPMO_PCC_CVC_IAP_DUST](~/add/codesnippet/csharp/PropertyMetadataAPIs/Class1.cs#fpmctor_dv_fpmo_pcc_cvc_iap_dust)]"
  syntax:
    content: public FrameworkPropertyMetadata (object defaultValue, System.Windows.FrameworkPropertyMetadataOptions flags, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback, bool isAnimationProhibited, System.Windows.Data.UpdateSourceTrigger defaultUpdateSourceTrigger);
    parameters:
    - id: defaultValue
      type: System.Object
      description: "Az alapértelmezett érték a függőség tulajdonság, általában megadja azt a megadott típusra."
    - id: flags
      type: System.Windows.FrameworkPropertyMetadataOptions
      description: "A metaadatok beállítási jelző (kombinációja <xref href=&quot;System.Windows.FrameworkPropertyMetadataOptions&quot;> </xref> értékek). Ezek a beállítások a függőség tulajdonság módosításának jellemzői rendszerek – például a szükséges elrendezést vagy adatkötés adja meg."
    - id: propertyChangedCallback
      type: System.Windows.PropertyChangedCallback
      description: "Egy hivatkozás, amely a tulajdonság rendszer fel fogja hívni, az érvényes érték a tulajdonság megváltozásakor kezelő megvalósításához."
    - id: coerceValueCallback
      type: System.Windows.CoerceValueCallback
      description: "Egy hivatkozást, amely hívható, ha a tulajdonság rendszer meghívja a kezelő megvalósításához <xref:System.Windows.DependencyObject.CoerceValue*>elleni ehhez a tulajdonsághoz.</xref:System.Windows.DependencyObject.CoerceValue*>"
    - id: isAnimationProhibited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a tulajdonság rendszer érdekében a tulajdonság a metaadatok alkalmazott animációjának. Az ilyen tulajdonságok emeli a futásidejű kivételt a tulajdonság rendszerből származó, ha azok animációk próbált vannak. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: defaultUpdateSourceTrigger
      type: System.Windows.Data.UpdateSourceTrigger
      description: "A <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> használja, ha ehhez a tulajdonsághoz kötések lesznek alkalmazva, amelyek rendelkeznek a saját <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> beállítása <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>defaultValue</code>értéke <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref>; lásd: a megjegyzések."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  id: AffectsArrange
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a függőség tulajdonság érintheti a rendezés fázis elrendezés motor műveletek során."
  remarks: "<xref:System.Windows.FrameworkElement>és <xref:System.Windows.FrameworkContentElement>közé tartoznak az megvalósítását <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>, amely figyeli, hogy az összes függőség tulajdonság, amely létezik egy elem hatékony változásainak.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Adott logikájának részeként, hatékony érték módosításához és AffectsArrange metaadatait függőségi tulajdonságok beállítása `true` érvénytelenné válnak az adott elemhez látványelemek késleltetett kérést kezdeményez (hívása <xref:System.Windows.UIElement.InvalidateArrange%2A>).</xref:System.Windows.UIElement.InvalidateArrange%2A> A WPF keretrendszert szintű megvalósításával már rendelkezésre áll, mert általában nem kell AffectsArrange függőség tulajdonság keres, kivéve, ha jelentősen cseréje vagy módosítása a WPF keretrendszert szintű elrendezés viselkedését.       Egyéni <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>megvalósítások kiválaszthat olyan hasonló viselkedését a függőségi tulajdonságok módosításának amelyekben AffectsArrange `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       A származtatott osztályait tulajdonságainak <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsArrange&quot;></a>## XAML szöveg használati tagokat az osztály vagy nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsArrange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a függőség tulajdonság, amelyen a metaadatok található vélhetően hatással van az elrendezés fázis; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsArrange*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  id: AffectsMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a függőség tulajdonság érintheti a mérték fázis elrendezés motor műveletek során."
  remarks: "<xref:System.Windows.FrameworkElement>és <xref:System.Windows.FrameworkContentElement>közé tartoznak az megvalósítását <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>, amely figyeli, hogy az összes függőség tulajdonság, amely létezik egy elem hatékony változásainak.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Adott logikájának részeként, hatékony érték módosításához és AffectsMeasure metaadatait függőségi tulajdonságok beállítása `true` érvénytelenné válnak az adott elemhez látványelemek késleltetett kérést kezdeményez. A WPF keretrendszert szintű megvalósításával már rendelkezésre áll, mert általában nem kell AffectsMeasure függőség tulajdonság keres, kivéve, ha jelentősen cseréje vagy módosítása a WPF keretrendszert szintű elrendezés viselkedését.       Egyéni <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>megvalósítások kiválaszthat olyan hasonló viselkedését a függőségi tulajdonságok módosításának amelyekben AffectsMeasure `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       A származtatott osztályait tulajdonságainak <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsMeasure&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsMeasure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a függőség tulajdonság, amelyen a metaadatok található vélhetően hatással van a mérték fázis; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsMeasure*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  id: AffectsParentArrange
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a függőség tulajdonság érintheti a szülőelem elrendezése az elrendezés fázis elrendezés motor műveletek során."
  remarks: "<xref:System.Windows.FrameworkElement>és <xref:System.Windows.FrameworkContentElement>közé tartoznak az megvalósítását <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>, amely figyeli, hogy az összes függőség tulajdonság, amely létezik egy elem hatékony változásainak.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Adott logikájának részeként, hatékony érték módosításához és AffectsParentArrange metaadatait függőségi tulajdonságok beállítása `true` érvénytelenné válnak a szülő elem látványelemek késleltetett kérést kezdeményez.       Általában nem kell a jelentés módosításainak egy <xref:System.Windows.FrameworkElement>AffectsParentArrange használatával, mert a maga az elem már rendelkezik saját szülőelem tulajdonságot <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A>, `true`.</xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A> </xref:System.Windows.FrameworkElement> Ez általában elegendő, mivel általában kezdeményezhet a gyermekelem változásai a fölérendelt elrendezése adott esetben. AffectsParentArrange használható egy <xref:System.Windows.FrameworkContentElement>osztály származtatott</xref:System.Windows.FrameworkContentElement> a Ebben az esetben a gyermek elem egyik tulajdonságának, de a készletek <xref:System.Windows.FrameworkContentElement>származtatott osztály nem felügyeli a saját megjelenítési.</xref:System.Windows.FrameworkContentElement> A Megjelenítés kezeli a <xref:System.Windows.FrameworkElement>szülőelem, amelyek a tartalomszolgáltató.</xref:System.Windows.FrameworkElement> Például az értékét módosítva a <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName>csatolt tulajdonság által egy gyermekelem érvényteleníti a szülő elrendezése, mert a szülő az alárendelt helyének meg kell változtatni.</xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName> Ezért a <xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName>csatolt tulajdonság-metaadattal rendelkezik AffectsParentArrange esetén `true`.</xref:System.Windows.Documents.FixedPage.Left%2A?displayProperty=fullName> Egy másik példa <xref:System.Windows.Controls.Control.Padding%2A>; módosításakor a tulajdonságok módosítását a szülő előfordulhat, hogy elhelyezkedését a gyermek, attól függően, hogy a rendelkezésre álló területet.</xref:System.Windows.Controls.Control.Padding%2A>       A WPF keretrendszert szintű megvalósításával már rendelkezésre áll, mert általában nem kell AffectsParentArrange függőség tulajdonság keres, kivéve, ha jelentősen cseréje vagy módosítása a WPF keretrendszert szintű elrendezés viselkedését.       Egyéni <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>megvalósítások kiválaszthat olyan hasonló viselkedését a függőségi tulajdonságok módosításának amelyekben AffectsParentArrange `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       A Tulajdonságok származtatott osztályait <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsParentArrange&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool AffectsParentArrange { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a függőség tulajdonság, amelyen a metaadatok található vélhetően hatással van a rendezés továbbítják kifejezetten a szülőelem; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  id: AffectsParentMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a függőség tulajdonság érintheti a mérték fázis a szülőelem elrendezése elrendezés motor műveletek során."
  remarks: "<xref:System.Windows.FrameworkElement>és <xref:System.Windows.FrameworkContentElement>közé tartoznak az megvalósítását <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>, amely figyeli, hogy az összes függőség tulajdonság, amely létezik egy elem hatékony változásainak.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Adott logikájának részeként, hatékony érték módosításához és AffectsParentMeasure metaadatait függőségi tulajdonságok beállítása `true` érvénytelenné válnak a szülő elem látványelemek késleltetett kérést kezdeményez. A WPF keretrendszert szintű megvalósításával már rendelkezésre áll, mert általában nem kell AffectsParentMeasure függőség tulajdonság keres, kivéve, ha jelentősen cseréje vagy módosítása a WPF keretrendszert szintű elrendezés viselkedését.       Általában nem kell a jelentés módosításainak egy <xref:System.Windows.FrameworkElement>AffectsParentMeasure használatával, mert a maga az elem már rendelkezik saját szülőelem tulajdonságot <xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, `true`.</xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A> </xref:System.Windows.FrameworkElement> Ennek oka általában elegendő, a gyermekelem változásai általában kezdeményezni egy szülő mérték fázist, amikor szükséges. AffectsParentMeasure használható egy <xref:System.Windows.FrameworkContentElement>osztály származtatott</xref:System.Windows.FrameworkContentElement> a Ebben az esetben a gyermek elem egyik tulajdonságának, de a készletek <xref:System.Windows.FrameworkContentElement>származtatott osztály nem felügyeli a saját megjelenítési.</xref:System.Windows.FrameworkContentElement> A Megjelenítés kezeli a <xref:System.Windows.FrameworkElement>szülőelem, amelyek a tartalomszolgáltató.</xref:System.Windows.FrameworkElement> Például az értékét módosítva a <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>egy gyermekelem tulajdonság a szülő mérték érvénytelenné válik, mert bekezdések relatív térközének előfordulhat, hogy módosítsa és előfordulhat, hogy növeli vagy csökkenti a tartalomszolgáltató méretét.</xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName> Ezért a <xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>tulajdonságnak metaadatok AffectsParentMeasure esetén `true`.</xref:System.Windows.Documents.Paragraph.KeepWithNext%2A?displayProperty=fullName>       Tartalomszolgáltató elemek is gyakran keresse meg a függőségi tulajdonságok változásokat AffectsParentMeasure esetén `true`, tartalomszolgáltató megjelenítési logikája. Például a <xref:System.Windows.Controls.TextBox>elem válaszolnia kell a szöveg, előfordulhat, hogy egyes változásokkal körbe a <xref:System.Windows.Controls.TextBox>maga módosítható.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       Egyéni <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>megvalósítások kiválaszthat olyan hasonló viselkedését a függőségi tulajdonságok módosításának amelyekben AffectsParentMeasure `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       A Tulajdonságok származtatott osztályait <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsParentMeasure&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool AffectsParentMeasure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a függőség tulajdonság, amelyen a metaadatok található vélhetően hatással van a mérték továbbítják kifejezetten a szülőelem; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender
  id: AffectsRender
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsRender
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a függőség tulajdonság potenciális hatása valamilyen módon, amely befolyásolja kifejezetten megállapodás vagy mérési, de egy újbóli igényelnének általános elrendezése."
  remarks: "<xref:System.Windows.FrameworkElement>és <xref:System.Windows.FrameworkContentElement>közé tartoznak az megvalósítását <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A>, amely figyeli, hogy az összes függőség tulajdonság, amely létezik egy elem hatékony változásainak.</xref:System.Windows.FrameworkElement.OnPropertyChanged%2A> </xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement> Adott logikájának részeként, hatékony érték módosításához és AffectsRender metaadatait függőségi tulajdonságok beállítása `true` érvénytelenné válnak az adott elemhez látványelemek késleltetett kérést kezdeményez. A WPF keretrendszert szintű megvalósításával már rendelkezésre áll, mert általában nem kell AffectsRender függőség tulajdonság keres, kivéve, ha jelentősen cseréje vagy módosítása a WPF keretrendszert szintű elrendezés viselkedését.       Egyéni <xref:System.Windows.DependencyObject.OnPropertyChanged%2A>megvalósításokhoz lehet, hogy választja, hogy a függőségi tulajdonságok módosításának hasonló viselkedés AffectsRender esetén `true`.</xref:System.Windows.DependencyObject.OnPropertyChanged%2A>       A Tulajdonságok származtatott osztályait <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_AffectsRender&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool AffectsRender { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a függőség tulajdonság, amelyen a metaadatok található hatással van a megjelenítési; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.AffectsRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  id: BindsTwoWayByDefault
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
  fullName: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a tulajdonság van kötve kétirányú alapértelmezés szerint."
  remarks: "Hiányában ez a tulajdonság, amely nem `true`, kötelező frissítések egyirányúak alapértelmezés szerint az alapértelmezett viselkedése alapján a <xref:System.Windows.Data.Binding>konstruktorok vagy ezzel egyenértékű csoport [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] szintaxis.</xref:System.Windows.Data.Binding>       A meglévő elemeket megtalálható ez a tulajdonság beállítása `true` a metaadatok között, amelyek mind a jelentés állapot és a felhasználói beavatkozásra, például <xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName>.</xref:System.Windows.Controls.Primitives.Selector.IsSelected%2A?displayProperty=fullName> által módosítható függőségi tulajdonságok       Ez a tulajdonság csak a jelentés a függőség tulajdonság alapértelmezett kötés frissítés jellemzői általában. Ez a példány tulajdonság értéke kötés helyileg állíthatja be a <xref:System.Windows.Data.Binding.Mode%2A>tulajdonság a kötés és az alapértelmezés módosításáról.</xref:System.Windows.Data.Binding.Mode%2A>       A Tulajdonságok származtatott osztályait <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_BindsTwoWayByDefault&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool BindsTwoWayByDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a függőség tulajdonság, amelyen a metaadatok található köti kétirányú alapértelmezett; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  id: DefaultUpdateSourceTrigger
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  fullName: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja azt az alapértelmezett <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> a tulajdonságot a metaadatok kötései alkalmazásakor használatára, amely rendelkezik a <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> beállítása <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  remarks: "A származtatott osztályait tulajdonságainak <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_DefaultUpdateSourceTrigger&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger DefaultUpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "A számbavétel, eltérő értékű <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ez a tulajdonság értéke <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>; legyen, az alapértelmezett kötések által kért kellene beállított értéket."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Inherits
  id: Inherits
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
  fullName: System.Windows.FrameworkPropertyMetadata.Inherits
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a függőség tulajdonság örökölhető."
  remarks: "Tulajdonságöröklés érték csak a a [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] tulajdonság rendszer szinten WPF keretrendszert, amellyel bizonyos függőségi tulajdonságok helyileg beállítható kevés vagy gyökérmappájában elemet egy [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] elem fán, és azok előnyeit, a logikai fája, amelyek is rendelkezik az adott tulajdonsághoz az összes elem által örökölt már rendelkezik. Alapértelmezés szerint nincs engedélyezve a tulajdonságöröklés értéket, és lehetővé téve rendelkezik néhány teljesítményre gyakorolt hatása. További információkért lásd: [érték tulajdonságöröklés](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Ugyan tulajdonságöröklés érték lehet, hogy nonattached függőségi tulajdonságok esetében működik, az öröklési működést egy bizonyos objektum osztályok a futásidejű fában nonattached tulajdonság nincs definiálva. Mindig <xref:System.Windows.DependencyProperty.RegisterAttached%2A>a metaadatok megadott Inherits tulajdonságok regisztrálni.</xref:System.Windows.DependencyProperty.RegisterAttached%2A>       A származtatott osztályait tulajdonságainak <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_Inherits&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool Inherits { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tulajdonság értéke nem örökölhető; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.Inherits*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  id: IsDataBindingAllowed
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
  fullName: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi egy érték, amely jelzi, hogy támogatott-e az adatkötés a függőségi tulajdonság esetében."
  remarks: "Ez a tulajdonság jelzi `false` két lehetséges feltételek egyike: vagy az adatkötés egyik függőség tulajdonság nem engedélyezett, mert a függőség tulajdonság csak olvasható (a történtek a függőség tulajdonság azonosítója, nem a metaadatokat), vagy egy másik metaadatok tulajdonság <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>, értékre van állítva `true` a metaadatokban.</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> Ez a tulajdonság a könnyebb elérhetőség érdekében van közzétéve, így nem kell hívóknak Ellenőrizze mindkét <xref:System.Windows.DependencyProperty.ReadOnly%2A>és <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>.</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> </xref:System.Windows.DependencyProperty.ReadOnly%2A>       Ha létre, amely meghatározza, hogy egy egyébként olvasási/írási tulajdonsággal kell nem támogatja az adatkötést próbál, adja meg a jelzőt <xref:System.Windows.FrameworkPropertyMetadataOptions>(vegye figyelembe a némi elnevezési egyezmény különbséget és <xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>).</xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A> </xref:System.Windows.FrameworkPropertyMetadataOptions>      <a name=&quot;xamlTextUsage_IsDataBindingAllowed&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  example:
  - "The following example obtains the default metadata from various dependency property fields, queries the value of various <xref:System.Windows.FrameworkPropertyMetadata> properties on it, and uses the information to populate a table to implement a \"metadata browser\".  \n  \n [!code-cs[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#dpgetmetadatasingle)]\n [!code-vb[PropertySystemEsoterics#DPGetMetadataSingle](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#dpgetmetadatasingle)]  \n[!code-cs[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/csharp/PropertySystemEsoterics/XAMLAPP/page2.xaml.cs#fpmproperties)]\n[!code-vb[PropertySystemEsoterics#FPMProperties](~/add/codesnippet/visualbasic/xamlapp/page2.xaml.vb#fpmproperties)]"
  syntax:
    content: public bool IsDataBindingAllowed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a függőség tulajdonság, amelyekre ezek a metaadatok vonatkozik; adatkötés esetén támogatott Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  id: IsNotDataBindable
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
  fullName: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a függőség tulajdonság támogatja az adatkötés."
  remarks: "Vegye figyelembe, hogy a metaadatok tulajdonsága `true` kifejezetten azokhoz a tulajdonságokhoz, nem kell támogatja az adatkötést, annak ellenére, hogy az írható-olvasható tulajdonságok. Az elvárás, hogy a legtöbb esetben, amikor a függőség tulajdonság van deklarálva, adatkötés van szükség, mert az adatkötés egyike azon kulcsfontosságú forgatókönyvek, ahol a függőség tulajdonság akkor hasznos. Eltérően <xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, nem csupán egy adott kötésének később módosítható az alapértelmezett változik.</xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A> A tulajdonság beállítása `true` egy függőségi tulajdonság esetében a metaadatokban metaadatok letiltja a kifejezések keresztül értékeik alkalmazása az adott függőségi tulajdonság összes kötéseket.       Csak olvasható függőségi tulajdonságok nem támogatják az adatok kötésének (mert az nincs beállítója, amely a módosított érték is alkalmazható), de továbbra is jelentést `false` IsNotDataBindable számára. Ennek az az oka tulajdonságait, amelyek megfelelnek egy <xref:System.Windows.FrameworkPropertyMetadataOptions>értékek jelentést küld a paritás hogyan a metaadatok ténylegesen létrejött, ahelyett, hogy az eredmény viselkedési, amelyek azt sugallják tulajdonságának elnevezési előfordulhat, hogy mindig reporting.</xref:System.Windows.FrameworkPropertyMetadataOptions> Annak megállapításához, hogy egy adott függőségi tulajdonság engedélyezi-e az adatkötés, általában ellenőrizze <xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>helyette.</xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A> <xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>a könnyebb ellenőrzésére is van <xref:System.Windows.DependencyProperty.ReadOnly%2A>és IsNotDataBindable egyetlen műveletként, a várt eredményt készítésére.</xref:System.Windows.DependencyProperty.ReadOnly%2A></xref:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed%2A>       A származtatott osztályait tulajdonságainak <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_IsNotDataBindable&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool IsNotDataBindable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tulajdonság támogatja az adatkötést; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Journal
  id: Journal
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
  fullName: System.Windows.FrameworkPropertyMetadata.Journal
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy ez a tulajdonság tartalmaz-e a naplózási adatokat, alkalmazások vagy a naplózási megvalósításának részeként tárolja."
  remarks: "A származtatott osztályait tulajdonságainak <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_Journal&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool Journal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a naplózási kell végezni a függőség tulajdonság, a metaadatok alkalmazott; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.Journal*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  id: Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: Merge(PropertyMetadata,DependencyProperty)
  nameWithType: FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  fullName: System.Windows.FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lehetővé teszi, hogy a forrás metaadatait alapmetaadatoknak egyesítésével."
  remarks: "Ezt a módszert belső használatra, ha felülírja a metaadatok."
  syntax:
    content: protected override void Merge (System.Windows.PropertyMetadata baseMetadata, System.Windows.DependencyProperty dp);
    parameters:
    - id: baseMetadata
      type: System.Windows.PropertyMetadata
      description: "A kiinduló metaadatokra ahhoz, hogy egyesíteni."
    - id: dp
      type: System.Windows.DependencyProperty
      description: "A függőség tulajdonság, a metaadatok vonatkozik."
  overload: System.Windows.FrameworkPropertyMetadata.Merge*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  id: OnApply(System.Windows.DependencyProperty,System.Type)
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: OnApply(DependencyProperty,Type)
  nameWithType: FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  fullName: System.Windows.FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Hívható meg, ha ezek a metaadatok telepítve van egy tulajdonság, amely azt jelzi, hogy a metaadatok lezárásához."
  remarks: "Az adatok szerkezete bármely mutability egy <xref:System.Windows.FrameworkPropertyMetadata>példány kell megjelölni, nem módosítható a metódus meghívásakor.</xref:System.Windows.FrameworkPropertyMetadata>"
  syntax:
    content: protected override void OnApply (System.Windows.DependencyProperty dp, Type targetType);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "A függőség tulajdonság, amelyhez a metaadatok alkalmazták."
    - id: targetType
      type: System.Type
      description: "A metaadatok társított, ha ez típusra vonatkozó metaadatokhoz típusa. Ez az alapértelmezett metaadatok, ha az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.OnApply*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  id: OverridesInheritanceBehavior
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
  fullName: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a tulajdonság értékének öröklési kiértékelése a logikai fán. az elem bizonyos tartalom határain túlnyúló kell span."
  remarks: "A metaadatok tulajdonság értéke öröklési viselkedés ritkán alkalmazott módosítása különleges szülő elem-alárendelt elem határain túlnyúló jelentéseket. A kanonikus példa ilyen a határ egy tartalmát egy <xref:System.Windows.Controls.Frame>, ahol <xref:System.Windows.Controls.Frame>Előfordulhat, hogy a tartalom létezik-e a <xref:System.Windows.Controls.Frame>.</xref:System.Windows.Controls.Frame> függetlenül beolvasása módosítás</xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Frame> A kívánt tulajdonság rendszerműködést, hogy tulajdonságöröklés érték nem bejárása kell a tartalmát a <xref:System.Windows.Controls.Frame>, mivel előfordulhat, hogy ezek a tartalmak elemek, amelyek a keret futtató alkalmazás tulajdonosa, vagy nem szabályozza.</xref:System.Windows.Controls.Frame> Metaadatok megadása a OverridesInheritanceBehavior beállítása `true`, valamint megadását <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, `true`, a tulajdonság a metaadatok alkalmazott kell örökölhető keresztben még akkor is, akkor a <xref:System.Windows.Controls.Frame>határ vagy hasonló határokat.</xref:System.Windows.Controls.Frame> </xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>       A származtatott osztályait tulajdonságainak <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_OverridesInheritanceBehavior&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool OverridesInheritanceBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tulajdonság értékének öröklési kell span teljes különböző bizonyos tartalom; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  id: SubPropertiesDoNotAffectRender
  parent: System.Windows.FrameworkPropertyMetadata
  langs:
  - csharp
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  fullName: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy a függőség tulajdonság alárendelt tulajdonságok nem befolyásolják a tartalmazó objektum megjelenítésének."
  remarks: "A metaadatok beállítás akkor megfelelő függőségi tulajdonságok esetében a referencia típusoknak, ahol az adott típusú rendelkezik saját tulajdonságértékek. Az elrendezés rendszer logikai általában azt feltételezik, hogy bármely függőség tulajdonság alárendelt tulajdonságokkal potenciálisan érvényesek elrendezés, mert az összes alárendelt tulajdonságok változások ellenőrzése több időigényes, mint ténylegesen fut egy másik leképezési fázis. Ezt a beállítást `true` akkor hasznos, ha a WPF keretrendszert szintű elrendezés rendszer végrehajtásának teljesítmény optimalizálása.       A származtatott osztályait tulajdonságainak <xref:System.Windows.PropertyMetadata>általában határozzák meg a hálózatiobjektum-modellje, írható-olvasható.</xref:System.Windows.PropertyMetadata> Ez a helyzet a példány inicializálása után módosítható. Azonban Miután a metaadatok felhasznált hívása részeként <xref:System.Windows.DependencyProperty.Register%2A>, <xref:System.Windows.DependencyProperty.AddOwner%2A>, vagy <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>, a tulajdonság rendszer fog lezárni metaadat példánynak, és átadja a részletekről a metaadatok tulajdonságok most minősülnek nem módosítható.</xref:System.Windows.DependencyProperty.OverrideMetadata%2A> </xref:System.Windows.DependencyProperty.AddOwner%2A> </xref:System.Windows.DependencyProperty.Register%2A> Kísérlet után ez a tulajdonság <xref:System.Windows.PropertyMetadata.IsSealed%2A>van `true` ezeket a metaadatokat a példány emeli kivétel.</xref:System.Windows.PropertyMetadata.IsSealed%2A>      <a name=&quot;xamlTextUsage_SubPropertiesDoNotAffectRender&quot;></a>## XAML szöveg használati Ez az osztály tagjai nem jellemzően [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public bool SubPropertiesDoNotAffectRender { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az alárendelt tulajdonságértékek változtatások nincsenek hatással a megjelenítési megváltozásakor; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A metaadatok már telepített függőség tulajdonság művelethez, így metaadatok le van zárva, és nem lehet beállítani a metaadatok tulajdonságait."
  platform:
  - net462
references:
- uid: System.Windows.UIPropertyMetadata
  isExternal: false
  name: System.Windows.UIPropertyMetadata
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.FrameworkPropertyMetadata.#ctor
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata()
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata()
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata()
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback)
- uid: System.Windows.PropertyChangedCallback
  parent: System.Windows
  isExternal: false
  name: PropertyChangedCallback
  nameWithType: PropertyChangedCallback
  fullName: System.Windows.PropertyChangedCallback
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions)
- uid: System.Windows.FrameworkPropertyMetadataOptions
  parent: System.Windows
  isExternal: false
  name: FrameworkPropertyMetadataOptions
  nameWithType: FrameworkPropertyMetadataOptions
  fullName: System.Windows.FrameworkPropertyMetadataOptions
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.CoerceValueCallback
  parent: System.Windows
  isExternal: false
  name: CoerceValueCallback
  nameWithType: CoerceValueCallback
  fullName: System.Windows.CoerceValueCallback
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback)
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
  fullName: System.Windows.FrameworkPropertyMetadata.FrameworkPropertyMetadata(Object,FrameworkPropertyMetadataOptions,PropertyChangedCallback,CoerceValueCallback,Boolean,UpdateSourceTrigger)
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
  fullName: System.Windows.FrameworkPropertyMetadata.AffectsRender
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
  fullName: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
  fullName: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.Inherits
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
  fullName: System.Windows.FrameworkPropertyMetadata.Inherits
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
  fullName: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
  fullName: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable
- uid: System.Windows.FrameworkPropertyMetadata.Journal
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
  fullName: System.Windows.FrameworkPropertyMetadata.Journal
- uid: System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Merge(PropertyMetadata,DependencyProperty)
  nameWithType: FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
  fullName: System.Windows.FrameworkPropertyMetadata.Merge(PropertyMetadata,DependencyProperty)
- uid: System.Windows.PropertyMetadata
  parent: System.Windows
  isExternal: false
  name: PropertyMetadata
  nameWithType: PropertyMetadata
  fullName: System.Windows.PropertyMetadata
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OnApply(DependencyProperty,Type)
  nameWithType: FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
  fullName: System.Windows.FrameworkPropertyMetadata.OnApply(DependencyProperty,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
  fullName: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
  fullName: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
- uid: System.Windows.FrameworkPropertyMetadata.#ctor*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: FrameworkPropertyMetadata
  nameWithType: FrameworkPropertyMetadata.FrameworkPropertyMetadata
- uid: System.Windows.FrameworkPropertyMetadata.AffectsArrange*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsArrange
  nameWithType: FrameworkPropertyMetadata.AffectsArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsMeasure*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentArrange*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentArrange
  nameWithType: FrameworkPropertyMetadata.AffectsParentArrange
- uid: System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsParentMeasure
  nameWithType: FrameworkPropertyMetadata.AffectsParentMeasure
- uid: System.Windows.FrameworkPropertyMetadata.AffectsRender*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: AffectsRender
  nameWithType: FrameworkPropertyMetadata.AffectsRender
- uid: System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: BindsTwoWayByDefault
  nameWithType: FrameworkPropertyMetadata.BindsTwoWayByDefault
- uid: System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: DefaultUpdateSourceTrigger
  nameWithType: FrameworkPropertyMetadata.DefaultUpdateSourceTrigger
- uid: System.Windows.FrameworkPropertyMetadata.Inherits*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Inherits
  nameWithType: FrameworkPropertyMetadata.Inherits
- uid: System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsDataBindingAllowed
  nameWithType: FrameworkPropertyMetadata.IsDataBindingAllowed
- uid: System.Windows.FrameworkPropertyMetadata.IsNotDataBindable*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: IsNotDataBindable
  nameWithType: FrameworkPropertyMetadata.IsNotDataBindable
- uid: System.Windows.FrameworkPropertyMetadata.Journal*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Journal
  nameWithType: FrameworkPropertyMetadata.Journal
- uid: System.Windows.FrameworkPropertyMetadata.Merge*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: Merge
  nameWithType: FrameworkPropertyMetadata.Merge
- uid: System.Windows.FrameworkPropertyMetadata.OnApply*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OnApply
  nameWithType: FrameworkPropertyMetadata.OnApply
- uid: System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: OverridesInheritanceBehavior
  nameWithType: FrameworkPropertyMetadata.OverridesInheritanceBehavior
- uid: System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender*
  parent: System.Windows.FrameworkPropertyMetadata
  isExternal: false
  name: SubPropertiesDoNotAffectRender
  nameWithType: FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender
