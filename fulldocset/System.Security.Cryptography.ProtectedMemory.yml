### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ProtectedMemory
  id: ProtectedMemory
  children:
  - System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  - System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  langs:
  - csharp
  name: ProtectedMemory
  nameWithType: ProtectedMemory
  fullName: System.Security.Cryptography.ProtectedMemory
  type: Class
  summary: "A védelmét, és a memória feloldása módszereket kínál. Ez az osztály nem örökölhető."
  remarks: "This class provides access to the Data Protection API (DPAPI) available in the Windows XP and later operating systems. This is a service that is provided by the operating system and does not require additional libraries. It provides encryption for sensitive data in memory.  \n  \n The class consists of two wrappers for the unmanaged DPAPI, [Protect(Byte\\[\\], MemoryProtectionScope)](assetId:///M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)?qualifyHint=False&autoUpgrade=True) and [Unprotect(Byte\\[\\], MemoryProtectionScope)](assetId:///M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)?qualifyHint=False&autoUpgrade=True). These two methods can be used to encrypt and decrypt data in memory."
  example:
  - "The following example shows how to use data protection.  \n  \n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/t-system.security.crypto_26_1.cs)]\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/t-system.security.crypto_26_1.vb)]\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/t-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public static class ProtectedMemory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  id: Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  parent: System.Security.Cryptography.ProtectedMemory
  langs:
  - csharp
  name: Protect(Byte[],MemoryProtectionScope)
  nameWithType: ProtectedMemory.Protect(Byte[],MemoryProtectionScope)
  fullName: System.Security.Cryptography.ProtectedMemory.Protect(Byte[],MemoryProtectionScope)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "A megadott adatok védelmét."
  remarks: "Ez a módszer az memória adatok védelmére használható. Vegye figyelembe, hogy a metódus nem másolatot készít az adatokat, de titkosítja a bájttömb helyen. A `userData` paraméter 16 bájt hosszúságú vagy 16 bájt többszörösének kell lennie.       Ez a metódus támogatja a Windows XP vagy újabb operációs rendszeren érhető el."
  example:
  - "The following code example shows how to use data protection.  \n  \n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/6df72062-ece3-4989-a6e7-_1.cs)]\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/6df72062-ece3-4989-a6e7-_1.vb)]\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/6df72062-ece3-4989-a6e7-_1.cpp)]"
  syntax:
    content: public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);
    parameters:
    - id: userData
      type: System.Byte[]
      description: "Az adatok védelme a memóriában tartalmazó bájttömb. A tömb 16 bájt többszörösének kell lennie."
    - id: scope
      type: System.Security.Cryptography.MemoryProtectionScope
      description: "Az egyik a számbavételi érték, amely meghatározza a Memóriavédelem hatókörén."
  overload: System.Security.Cryptography.ProtectedMemory.Protect*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>userData</code>16 bájt hosszúságú vagy 16 bájt többszörösének kell lennie."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az operációs rendszer nem támogatja ezt a módszert. Ez a metódus csak a Windows 2000 vagy újabb operációs rendszereken használható."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userData </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  id: Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  parent: System.Security.Cryptography.ProtectedMemory
  langs:
  - csharp
  name: Unprotect(Byte[],MemoryProtectionScope)
  nameWithType: ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)
  fullName: System.Security.Cryptography.ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography
  summary: "A memóriában, amely használatával védett adatok unprotects a <xref:System.Security.Cryptography.ProtectedMemory.Protect*>metódus.</xref:System.Security.Cryptography.ProtectedMemory.Protect*>"
  remarks: "Ez a módszer használható a memóriában, amely a használatával titkosított adatok visszafejtése a <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A>metódus.</xref:System.Security.Cryptography.ProtectedMemory.Protect%2A>       Ez a metódus támogatja a Windows XP vagy újabb operációs rendszeren érhető el."
  example:
  - "The following example shows how to use data protection.  \n  \n [!code-cs[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/csharp/c4cde6bb-28e8-4233-bae1-_1.cs)]\n [!code-vb[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/visualbasic/c4cde6bb-28e8-4233-bae1-_1.vb)]\n [!code-cpp[Cryptography.MemoryProtectionSample#1](~/add/codesnippet/cpp/c4cde6bb-28e8-4233-bae1-_1.cpp)]"
  syntax:
    content: public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);
    parameters:
    - id: encryptedData
      type: System.Byte[]
      description: "A bájttömb memória titkosítani."
    - id: scope
      type: System.Security.Cryptography.MemoryProtectionScope
      description: "Az egyik a számbavételi érték, amely meghatározza a Memóriavédelem hatókörén."
  overload: System.Security.Cryptography.ProtectedMemory.Unprotect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az operációs rendszer nem támogatja ezt a módszert. Ez a metódus csak a Windows 2000 vagy újabb operációs rendszereken használható."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>encryptedData </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>encryptedData </code>Nincs megadva.       – vagy – a hívás nem lett megvalósítva.       – vagy – NTSTATUS hibát tartalmaz."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  parent: System.Security.Cryptography.ProtectedMemory
  isExternal: false
  name: Protect(Byte[],MemoryProtectionScope)
  nameWithType: ProtectedMemory.Protect(Byte[],MemoryProtectionScope)
  fullName: System.Security.Cryptography.ProtectedMemory.Protect(Byte[],MemoryProtectionScope)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.MemoryProtectionScope
  parent: System.Security.Cryptography
  isExternal: false
  name: MemoryProtectionScope
  nameWithType: MemoryProtectionScope
  fullName: System.Security.Cryptography.MemoryProtectionScope
- uid: System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)
  parent: System.Security.Cryptography.ProtectedMemory
  isExternal: false
  name: Unprotect(Byte[],MemoryProtectionScope)
  nameWithType: ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)
  fullName: System.Security.Cryptography.ProtectedMemory.Unprotect(Byte[],MemoryProtectionScope)
- uid: System.Security.Cryptography.ProtectedMemory.Protect*
  parent: System.Security.Cryptography.ProtectedMemory
  isExternal: false
  name: Protect
  nameWithType: ProtectedMemory.Protect
- uid: System.Security.Cryptography.ProtectedMemory.Unprotect*
  parent: System.Security.Cryptography.ProtectedMemory
  isExternal: false
  name: Unprotect
  nameWithType: ProtectedMemory.Unprotect
