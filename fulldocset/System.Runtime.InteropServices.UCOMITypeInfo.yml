### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.UCOMITypeInfo
  id: UCOMITypeInfo
  children:
  - System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.IntPtr@)
  - System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.UCOMITypeLib@,System.Int32@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.String@,System.String@,System.Int16@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])
  - System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags(System.Int32,System.Int32@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetMops(System.Int32,System.String@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.UCOMITypeInfo@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp(System.Runtime.InteropServices.UCOMITypeComp@)
  - System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)
  - System.Runtime.InteropServices.UCOMITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.DISPPARAMS@,System.Object@,System.Runtime.InteropServices.EXCEPINFO@,System.Int32@)
  - System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc(System.IntPtr)
  - System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr(System.IntPtr)
  - System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc(System.IntPtr)
  langs:
  - csharp
  name: UCOMITypeInfo
  nameWithType: UCOMITypeInfo
  fullName: System.Runtime.InteropServices.UCOMITypeInfo
  type: Interface
  summary: "Használjon &lt;xref:System.Runtime.InteropServices.ComTypes.ITypeInfo?displayProperty=fullName&gt; helyette."
  remarks: "További információt `ITypeInfo`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: >-
      [System.Obsolete("Use System.Runtime.InteropServices.ComTypes.ITypeInfo instead. http://go.microsoft.com/fwlink/?linkid=14202", false)]

      [System.Runtime.InteropServices.Guid("00020401-0000-0000-C000-000000000046")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface UCOMITypeInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.IntPtr@)
  id: AddressOfMember(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.IntPtr@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: AddressOfMember(Int32,INVOKEKIND,IntPtr)
  nameWithType: UCOMITypeInfo.AddressOfMember(Int32,INVOKEKIND,IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember(Int32,INVOKEKIND,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Lekéri a statikus vagy változók, például a dll-fájl megadott címek."
  remarks: "További információt `ITypeInfo::AddressOfMember`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void AddressOfMember (int memid, System.Runtime.InteropServices.INVOKEKIND invKind, out IntPtr ppv);
    parameters:
    - id: memid
      type: System.Int32
      description: "A Tagazonosító a <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> tag cím beolvasása."
    - id: invKind
      type: System.Runtime.InteropServices.INVOKEKIND
      description: "Meghatározza, hogy a tag egy tulajdonság, és ha igen, milyen."
    - id: ppv
      type: System.IntPtr
      description: "A sikeres térjen vissza a hivatkozás a <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> tag."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)
  id: CreateInstance(System.Object,System.Guid@,System.Object@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: CreateInstance(Object,Guid,Object)
  nameWithType: UCOMITypeInfo.CreateInstance(Object,Guid,Object)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance(Object,Guid,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Létrehoz egy új példányt, amely leírja egy összetevő osztályának (tartalmazó) típusú."
  remarks: "További információt `ITypeInfo::CreateInstance`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void CreateInstance (object pUnkOuter, ref Guid riid, out object ppvObj);
    parameters:
    - id: pUnkOuter
      type: System.Object
      description: "-Objektumból, amely úgy működik, mint a szabályozása <xref uid=&quot;langword_csharp_IUnknown&quot; name=&quot;IUnknown&quot; href=&quot;&quot;> </xref>."
    - id: riid
      type: System.Guid
      description: "A felület, amely a hívó használatával fogja kommunikálni az eredményül kapott objektum IID beolvasása."
    - id: ppvObj
      type: System.Object
      description: "A sikeres visszatérési, a létrehozott objektumra mutató hivatkozás."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.UCOMITypeLib@,System.Int32@)
  id: GetContainingTypeLib(System.Runtime.InteropServices.UCOMITypeLib@,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetContainingTypeLib(UCOMITypeLib,Int32)
  nameWithType: UCOMITypeInfo.GetContainingTypeLib(UCOMITypeLib,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib(UCOMITypeLib,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "A típustár, amely tartalmazza a leírása és indexével belül típus beolvasása."
  remarks: "További információt `ITypeInfo::GetContainingTypeLib`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetContainingTypeLib (out System.Runtime.InteropServices.UCOMITypeLib ppTLB, out int pIndex);
    parameters:
    - id: ppTLB
      type: System.Runtime.InteropServices.UCOMITypeLib
      description: "A sikeres visszatérési, egy hivatkozást a tartalmazó típus."
    - id: pIndex
      type: System.Int32
      description: "A sikeres visszatérési, egy hivatkozást a leírása a tartalmazó típustár belül indexét."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.String@,System.String@,System.Int16@)
  id: GetDllEntry(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.String@,System.String@,System.Int16@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetDllEntry(Int32,INVOKEKIND,String,String,Int16)
  nameWithType: UCOMITypeInfo.GetDllEntry(Int32,INVOKEKIND,String,String,Int16)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry(Int32,INVOKEKIND,String,String,Int16)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "A leírás vagy a belépési pont egy DLL függvényt a megadását kéri le."
  remarks: "További információt `ITypeInfo::GetDllEntry`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetDllEntry (int memid, System.Runtime.InteropServices.INVOKEKIND invKind, out string pBstrDllName, out string pBstrName, out short pwOrdinal);
    parameters:
    - id: memid
      type: System.Int32
      description: "A tag függvény, amelynek DLL belépési Leírás: a visszaadandó azonosítója."
    - id: invKind
      type: System.Runtime.InteropServices.INVOKEKIND
      description: "Megadja, milyen típusú tag által azonosított `memid`."
    - id: pBstrDllName
      type: System.String
      description: "Ha nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a függvény beállítása `pBstrDllName` való egy <xref uid=&quot;langword_csharp_BSTR&quot; name=&quot;BSTR&quot; href=&quot;&quot;> </xref> , amely tartalmazza a dll-Fájljának nevét."
    - id: pBstrName
      type: System.String
      description: "Ha nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a függvény beállítása `lpbstrName` való egy <xref uid=&quot;langword_csharp_BSTR&quot; name=&quot;BSTR&quot; href=&quot;&quot;> </xref> , amely tartalmazza a belépési pont nevét."
    - id: pwOrdinal
      type: System.Int16
      description: "Ha nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a függvény határozzák meg az sorszámát, majd `lpwOrdinal` van beállítva, hogy a sorszám mutasson."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)
  id: GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetDocumentation(Int32,String,String,Int32,String)
  nameWithType: UCOMITypeInfo.GetDocumentation(Int32,String,String,Int32,String)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(Int32,String,String,Int32,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "A dokumentáció karakterlánc, a teljes Súgó fájl neve és elérési útja és a megadott típus leírását tartozó súgó-témakör a context-ID kéri le."
  remarks: "További információt `ITypeInfo::GetDocumentation`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);
    parameters:
    - id: index
      type: System.Int32
      description: "A tag, amelynek dokumentáció áll vissza kell azonosítója."
    - id: strName
      type: System.String
      description: "A sikeres vissza, az elem metódus neve."
    - id: strDocString
      type: System.String
      description: "A sikeres vissza a megadott elem dokumentáció karakterláncát."
    - id: dwHelpContext
      type: System.Int32
      description: "A sikeres vissza, az adott elemhez tartozó súgó összefüggésben mutató hivatkozás."
    - id: strHelpFile
      type: System.String
      description: "A sikeres visszatérési, a súgófájl teljesen minősített neve."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)
  id: GetFuncDesc(System.Int32,System.IntPtr@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetFuncDesc(Int32,IntPtr)
  nameWithType: UCOMITypeInfo.GetFuncDesc(Int32,IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(Int32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Lekéri a <xref href=&quot;System.Runtime.InteropServices.FUNCDESC&quot;> </xref> struktúra, amely a megadott függvény információkat tartalmaz."
  remarks: "Az értékek `ppFuncDesc` <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> keresztül érhető el       További információt `ITypeInfo::GetFuncDesc`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetFuncDesc (int index, out IntPtr ppFuncDesc);
    parameters:
    - id: index
      type: System.Int32
      description: "A funkció leírása indexe való visszatéréshez."
    - id: ppFuncDesc
      type: System.IntPtr
      description: "Hivatkozás a <xref uid=&quot;langword_csharp_FUNCDESC&quot; name=&quot;FUNCDESC&quot; href=&quot;&quot;> </xref> , amely leírja, hogy a megadott függvény."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])
  id: GetIDsOfNames(System.String[],System.Int32,System.Int32[])
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetIDsOfNames(String[],Int32,Int32[])
  nameWithType: UCOMITypeInfo.GetIDsOfNames(String[],Int32,Int32[])
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames(String[],Int32,Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "A Maps tagok neve és a tag azonosítókat, és a paraméterek nevei és a paraméter azonosítók között."
  remarks: "További információt `ITypeInfo::GetIDsOfNames`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetIDsOfNames (string[] rgszNames, int cNames, int[] pMemId);
    parameters:
    - id: rgszNames
      type: System.String[]
      description: "A sikeres return hozzárendelését nevének tömbjét."
    - id: cNames
      type: System.Int32
      description: "Nevek száma történő leképezéséhez."
    - id: pMemId
      type: System.Int32[]
      description: "Hivatkozás a tömb okozó név a leképezéseket kerülnek."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags(System.Int32,System.Int32@)
  id: GetImplTypeFlags(System.Int32,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetImplTypeFlags(Int32,Int32)
  nameWithType: UCOMITypeInfo.GetImplTypeFlags(Int32,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Lekéri a <xref href=&quot;System.Runtime.InteropServices.IMPLTYPEFLAGS&quot;> </xref> egy megvalósított illesztőfelülettel vagy alap felülettel típus leírását."
  remarks: "További információt `ITypeInfo::GetImplTypeFlags`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetImplTypeFlags (int index, out int pImplTypeFlags);
    parameters:
    - id: index
      type: System.Int32
      description: "A megvalósított illesztőfelülettel vagy alap illesztőfelület indexe."
    - id: pImplTypeFlags
      type: System.Int32
      description: "A sikeres térjen vissza a hivatkozás a <xref uid=&quot;langword_csharp_IMPLTYPEFLAGS&quot; name=&quot;IMPLTYPEFLAGS&quot; href=&quot;&quot;> </xref> enumerálása."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetMops(System.Int32,System.String@)
  id: GetMops(System.Int32,System.String@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetMops(Int32,String)
  nameWithType: UCOMITypeInfo.GetMops(Int32,String)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetMops(Int32,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Lekéri a átadás-előkészítési információt."
  remarks: "További információt `ITypeInfo::GetMops`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetMops (int memid, out string pBstrMops);
    parameters:
    - id: memid
      type: System.Int32
      description: "A tag azonosítója, amely jelzi, hogy mely átadás-előkészítési információt van szükség."
    - id: pBstrMops
      type: System.String
      description: "A hivatkozás a opkód karakterlánc átadás-előkészítési által hivatkozott típus leírása ismertetett mezők használt, vagy adja vissza <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha nincs információ való visszatéréshez."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetMops*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)
  id: GetNames(System.Int32,System.String[],System.Int32,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetNames(Int32,String[],Int32,Int32)
  nameWithType: UCOMITypeInfo.GetNames(Int32,String[],Int32,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetNames(Int32,String[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Lekéri a megadott Tagazonosító (vagy a tulajdonság vagy metódus és a paraméterek nevét), amelyek megfelelnek a megadott függvény azonosító változó"
  remarks: "További információt `ITypeInfo::GetNames`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetNames (int memid, string[] rgBstrNames, int cMaxNames, out int pcNames);
    parameters:
    - id: memid
      type: System.Int32
      description: "A tag, amelynek (vagy neveit) rendszer akkor adja vissza az azonosítója."
    - id: rgBstrNames
      type: System.String[]
      description: "A sikeres visszatérési tartalmaz (vagy neveit) tag társított."
    - id: cMaxNames
      type: System.Int32
      description: "Mennyi a `rgBstrNames` tömb."
    - id: pcNames
      type: System.Int32
      description: "A sikeres visszatérési, a nevek számát a `rgBstrNames` tömb."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.UCOMITypeInfo@)
  id: GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.UCOMITypeInfo@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetRefTypeInfo(Int32,UCOMITypeInfo)
  nameWithType: UCOMITypeInfo.GetRefTypeInfo(Int32,UCOMITypeInfo)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo(Int32,UCOMITypeInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Ha egy leírása más leírások hivatkozik, a hivatkozott típus leírások kéri le."
  remarks: "További információt `ITypeInfo::GetRefTypeInfo`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetRefTypeInfo (int hRef, out System.Runtime.InteropServices.UCOMITypeInfo ppTI);
    parameters:
    - id: hRef
      type: System.Int32
      description: "A hivatkozott típus Leírás visszatéréshez leírót."
    - id: ppTI
      type: System.Runtime.InteropServices.UCOMITypeInfo
      description: "A sikeres visszatérési, a hivatkozott típus leírása."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)
  id: GetRefTypeOfImplType(System.Int32,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetRefTypeOfImplType(Int32,Int32)
  nameWithType: UCOMITypeInfo.GetRefTypeOfImplType(Int32,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Ha egy leírása ismerteti egy COM-osztály, lekérdezi a a megvalósított adaptertípusok típusának leírása."
  remarks: "További információt `ITypeInfo::GetRefTypeOfImplType`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetRefTypeOfImplType (int index, out int href);
    parameters:
    - id: index
      type: System.Int32
      description: "A megvalósított típusnak, amelynek leíró visszaadott indexe"
    - id: href
      type: System.Int32
      description: "Leíró a megvalósított illesztőfelülettel a hivatkozás."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)
  id: GetTypeAttr(System.IntPtr@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetTypeAttr(IntPtr)
  nameWithType: UCOMITypeInfo.GetTypeAttr(IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Lekéri egy <xref href=&quot;System.Runtime.InteropServices.TYPEATTR&quot;> </xref> struktúrában, amelynek a leírása attribútumait tartalmazza."
  remarks: "Az értékek `ppTypeAttr` <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> keresztül érhető el       További információt `ITypeInfo::GetTypeAttr`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetTypeAttr (out IntPtr ppTypeAttr);
    parameters:
    - id: ppTypeAttr
      type: System.IntPtr
      description: "A sikeres return hivatkozni kell a struktúra, amely tartalmazza a típust leírást attribútumait."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp(System.Runtime.InteropServices.UCOMITypeComp@)
  id: GetTypeComp(System.Runtime.InteropServices.UCOMITypeComp@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetTypeComp(UCOMITypeComp)
  nameWithType: UCOMITypeInfo.GetTypeComp(UCOMITypeComp)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp(UCOMITypeComp)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Lekéri a <xref uid=&quot;langword_csharp_ITypeComp&quot; name=&quot;ITypeComp&quot; href=&quot;&quot;> </xref> típus leírására, amely lehetővé teszi, hogy egy ügyfél fordító lehet kötést létrehozni a típust leírás tagok felületet."
  remarks: "További információt `ITypeInfo::GetTypeComp`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetTypeComp (out System.Runtime.InteropServices.UCOMITypeComp ppTComp);
    parameters:
    - id: ppTComp
      type: System.Runtime.InteropServices.UCOMITypeComp
      description: "A sikeres térjen vissza a hivatkozás a <xref uid=&quot;langword_csharp_UCOMITypeComp&quot; name=&quot;UCOMITypeComp&quot; href=&quot;&quot;> </xref> a tartalmazó típustár."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)
  id: GetVarDesc(System.Int32,System.IntPtr@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: GetVarDesc(Int32,IntPtr)
  nameWithType: UCOMITypeInfo.GetVarDesc(Int32,IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(Int32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Lekéri egy <xref uid=&quot;langword_csharp_VARDESC&quot; name=&quot;VARDESC&quot; href=&quot;&quot;> </xref> struktúra, amely leírja a változóhoz."
  remarks: "Az értékek `ppVarDesc` <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> keresztül érhető el       További információt `ITypeInfo::GetVarDesc`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void GetVarDesc (int index, out IntPtr ppVarDesc);
    parameters:
    - id: index
      type: System.Int32
      description: "A változó leírását indexe való visszatéréshez."
    - id: ppVarDesc
      type: System.IntPtr
      description: "A sikeres térjen vissza a hivatkozás a <xref uid=&quot;langword_csharp_VARDESC&quot; name=&quot;VARDESC&quot; href=&quot;&quot;> </xref> , amely leírja, hogy a változóhoz."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.DISPPARAMS@,System.Object@,System.Runtime.InteropServices.EXCEPINFO@,System.Int32@)
  id: Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.DISPPARAMS@,System.Object@,System.Runtime.InteropServices.EXCEPINFO@,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: Invoke(Object,Int32,Int16,DISPPARAMS,Object,EXCEPINFO,Int32)
  nameWithType: UCOMITypeInfo.Invoke(Object,Int32,Int16,DISPPARAMS,Object,EXCEPINFO,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.Invoke(Object,Int32,Int16,DISPPARAMS,Object,EXCEPINFO,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Egy metódus meghívja, vagy egy tulajdonság az a típusú leírás szerint felületet megvalósító objektum hozzáfér."
  remarks: "Az értékek `pDispParams` <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> keresztül érhető el       Az érvényes értékek `wFlags` vannak: |} Érték |} Leírás |}   |-----------|-----------------|   | DISPATCH_METHOD |} A tag módszerként érhető el. Ha a félreérthetőség, ez és a `DISPATCH_PROPERTYGET` jelző állítható be. |}   | DISPATCH_PROPERTYGET |} A tag egy tulajdonság vagy adattag értelmezi a rendszer. |}   | DISPATCH_PROPERTYPUT |} A tag tulajdonság vagy adatok tagként megváltozott. |}   | DISPATCH_PROPERTYPUTREF |} A tag egy referencia-hozzárendelést ahelyett, hogy egy érték-hozzárendelés megváltozik. Ez az érték csak akkor érvényes, ha a tulajdonság fogad el olyan objektumra hivatkozik. |}       További információt `ITypeInfo::Invoke`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void Invoke (object pvInstance, int memid, short wFlags, ref System.Runtime.InteropServices.DISPPARAMS pDispParams, out object pVarResult, out System.Runtime.InteropServices.EXCEPINFO pExcepInfo, out int puArgErr);
    parameters:
    - id: pvInstance
      type: System.Object
      description: "A felület, ez a típusú leírás szerint hivatkozás."
    - id: memid
      type: System.Int32
      description: "Azonosítja a illesztőfelületi tag."
    - id: wFlags
      type: System.Int16
      description: "Az invoke-hívás keretében leíró jelzőket."
    - id: pDispParams
      type: System.Runtime.InteropServices.DISPPARAMS
      description: "Hivatkozás, amely tartalmazza az argumentumok, tömb DISPID-azonosítók elnevezett argumentumok tömbje és számát is minden tömb elemeinek száma struktúrára."
    - id: pVarResult
      type: System.Object
      description: "Hivatkozás a helyet, amelynél az eredmény kell tárolni. If `wFlags` specifies <xref uid=&quot;langword_csharp_DISPATCH_PROPERTYPUT&quot; name=&quot;DISPATCH_PROPERTYPUT&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_DISPATCH_PROPERTYPUTREF&quot; name=&quot;DISPATCH_PROPERTYPUTREF&quot; href=&quot;&quot;></xref>, `pVarResult` is ignored. Beállítása <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nincs eredmény van szükség."
    - id: pExcepInfo
      type: System.Runtime.InteropServices.EXCEPINFO
      description: "Olyan kivétel adatszerkezet, amely csak akkor, ha ki van töltve mutat <xref uid=&quot;langword_csharp_DISP_E_EXCEPTION&quot; name=&quot;DISP_E_EXCEPTION&quot; href=&quot;&quot;> </xref> adja vissza."
    - id: puArgErr
      type: System.Int32
      description: "Ha <xref uid=&quot;langword_csharp_Invoke&quot; name=&quot;Invoke&quot; href=&quot;&quot;> </xref> adja vissza <xref uid=&quot;langword_csharp_DISP_E_TYPEMISMATCH&quot; name=&quot;DISP_E_TYPEMISMATCH&quot; href=&quot;&quot;> </xref>, `puArgErr` belüli index jelzi `rgvarg` helytelen típusú argumentum. Ha egynél több argumentumot hibát jelez, `puArgErr` jelzi a hiba csak az első argumentumként."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc(System.IntPtr)
  id: ReleaseFuncDesc(System.IntPtr)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: ReleaseFuncDesc(IntPtr)
  nameWithType: UCOMITypeInfo.ReleaseFuncDesc(IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Kiadásokban a <xref href=&quot;System.Runtime.InteropServices.FUNCDESC&quot;> </xref> <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc*>.</xref:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc*> által korábban visszaadott"
  remarks: "További információt `ITypeInfo::ReleaseFuncDesc`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void ReleaseFuncDesc (IntPtr pFuncDesc);
    parameters:
    - id: pFuncDesc
      type: System.IntPtr
      description: "Hivatkozás a <xref uid=&quot;langword_csharp_FUNCDESC&quot; name=&quot;FUNCDESC&quot; href=&quot;&quot;> </xref> felszabadítása."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr(System.IntPtr)
  id: ReleaseTypeAttr(System.IntPtr)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: ReleaseTypeAttr(IntPtr)
  nameWithType: UCOMITypeInfo.ReleaseTypeAttr(IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Kiadásokban a <xref href=&quot;System.Runtime.InteropServices.TYPEATTR&quot;> </xref> <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr*>.</xref:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr*> által korábban visszaadott"
  remarks: "További információt `ITypeInfo::ReleaseTypeAttr`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void ReleaseTypeAttr (IntPtr pTypeAttr);
    parameters:
    - id: pTypeAttr
      type: System.IntPtr
      description: "Hivatkozás a <xref uid=&quot;langword_csharp_TYPEATTR&quot; name=&quot;TYPEATTR&quot; href=&quot;&quot;> </xref> felszabadítása."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc(System.IntPtr)
  id: ReleaseVarDesc(System.IntPtr)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  langs:
  - csharp
  name: ReleaseVarDesc(IntPtr)
  nameWithType: UCOMITypeInfo.ReleaseVarDesc(IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Kiadásokban a <xref uid=&quot;langword_csharp_VARDESC&quot; name=&quot;VARDESC&quot; href=&quot;&quot;> </xref> által korábban visszaadott &lt;xref:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc%2A?displayProperty=fullName&gt;."
  remarks: "További információt `ITypeInfo::ReleaseVarDesc`, tekintse meg az MSDN könyvtárában."
  syntax:
    content: public void ReleaseVarDesc (IntPtr pVarDesc);
    parameters:
    - id: pVarDesc
      type: System.IntPtr
      description: "Hivatkozás a <xref uid=&quot;langword_csharp_VARDESC&quot; name=&quot;VARDESC&quot; href=&quot;&quot;> </xref> felszabadítása."
  overload: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.IntPtr@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: AddressOfMember(Int32,INVOKEKIND,IntPtr)
  nameWithType: UCOMITypeInfo.AddressOfMember(Int32,INVOKEKIND,IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember(Int32,INVOKEKIND,IntPtr)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.INVOKEKIND
  parent: System.Runtime.InteropServices
  isExternal: false
  name: INVOKEKIND
  nameWithType: INVOKEKIND
  fullName: System.Runtime.InteropServices.INVOKEKIND
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: CreateInstance(Object,Guid,Object)
  nameWithType: UCOMITypeInfo.CreateInstance(Object,Guid,Object)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance(Object,Guid,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.UCOMITypeLib@,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetContainingTypeLib(UCOMITypeLib,Int32)
  nameWithType: UCOMITypeInfo.GetContainingTypeLib(UCOMITypeLib,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib(UCOMITypeLib,Int32)
- uid: System.Runtime.InteropServices.UCOMITypeLib
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UCOMITypeLib
  nameWithType: UCOMITypeLib
  fullName: System.Runtime.InteropServices.UCOMITypeLib
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.String@,System.String@,System.Int16@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetDllEntry(Int32,INVOKEKIND,String,String,Int16)
  nameWithType: UCOMITypeInfo.GetDllEntry(Int32,INVOKEKIND,String,String,Int16)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry(Int32,INVOKEKIND,String,String,Int16)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetDocumentation(Int32,String,String,Int32,String)
  nameWithType: UCOMITypeInfo.GetDocumentation(Int32,String,String,Int32,String)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(Int32,String,String,Int32,String)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetFuncDesc(Int32,IntPtr)
  nameWithType: UCOMITypeInfo.GetFuncDesc(Int32,IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(Int32,IntPtr)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetIDsOfNames(String[],Int32,Int32[])
  nameWithType: UCOMITypeInfo.GetIDsOfNames(String[],Int32,Int32[])
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames(String[],Int32,Int32[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags(System.Int32,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetImplTypeFlags(Int32,Int32)
  nameWithType: UCOMITypeInfo.GetImplTypeFlags(Int32,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags(Int32,Int32)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetMops(System.Int32,System.String@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetMops(Int32,String)
  nameWithType: UCOMITypeInfo.GetMops(Int32,String)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetMops(Int32,String)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetNames(Int32,String[],Int32,Int32)
  nameWithType: UCOMITypeInfo.GetNames(Int32,String[],Int32,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetNames(Int32,String[],Int32,Int32)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.UCOMITypeInfo@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetRefTypeInfo(Int32,UCOMITypeInfo)
  nameWithType: UCOMITypeInfo.GetRefTypeInfo(Int32,UCOMITypeInfo)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo(Int32,UCOMITypeInfo)
- uid: System.Runtime.InteropServices.UCOMITypeInfo
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UCOMITypeInfo
  nameWithType: UCOMITypeInfo
  fullName: System.Runtime.InteropServices.UCOMITypeInfo
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetRefTypeOfImplType(Int32,Int32)
  nameWithType: UCOMITypeInfo.GetRefTypeOfImplType(Int32,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType(Int32,Int32)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetTypeAttr(IntPtr)
  nameWithType: UCOMITypeInfo.GetTypeAttr(IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(IntPtr)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp(System.Runtime.InteropServices.UCOMITypeComp@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetTypeComp(UCOMITypeComp)
  nameWithType: UCOMITypeInfo.GetTypeComp(UCOMITypeComp)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp(UCOMITypeComp)
- uid: System.Runtime.InteropServices.UCOMITypeComp
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UCOMITypeComp
  nameWithType: UCOMITypeComp
  fullName: System.Runtime.InteropServices.UCOMITypeComp
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetVarDesc(Int32,IntPtr)
  nameWithType: UCOMITypeInfo.GetVarDesc(Int32,IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(Int32,IntPtr)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.DISPPARAMS@,System.Object@,System.Runtime.InteropServices.EXCEPINFO@,System.Int32@)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: Invoke(Object,Int32,Int16,DISPPARAMS,Object,EXCEPINFO,Int32)
  nameWithType: UCOMITypeInfo.Invoke(Object,Int32,Int16,DISPPARAMS,Object,EXCEPINFO,Int32)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.Invoke(Object,Int32,Int16,DISPPARAMS,Object,EXCEPINFO,Int32)
- uid: System.Runtime.InteropServices.DISPPARAMS
  parent: System.Runtime.InteropServices
  isExternal: false
  name: DISPPARAMS
  nameWithType: DISPPARAMS
  fullName: System.Runtime.InteropServices.DISPPARAMS
- uid: System.Runtime.InteropServices.EXCEPINFO
  parent: System.Runtime.InteropServices
  isExternal: false
  name: EXCEPINFO
  nameWithType: EXCEPINFO
  fullName: System.Runtime.InteropServices.EXCEPINFO
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc(System.IntPtr)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: ReleaseFuncDesc(IntPtr)
  nameWithType: UCOMITypeInfo.ReleaseFuncDesc(IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc(IntPtr)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr(System.IntPtr)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: ReleaseTypeAttr(IntPtr)
  nameWithType: UCOMITypeInfo.ReleaseTypeAttr(IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr(IntPtr)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc(System.IntPtr)
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: ReleaseVarDesc(IntPtr)
  nameWithType: UCOMITypeInfo.ReleaseVarDesc(IntPtr)
  fullName: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc(IntPtr)
- uid: System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: AddressOfMember
  nameWithType: UCOMITypeInfo.AddressOfMember
- uid: System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: CreateInstance
  nameWithType: UCOMITypeInfo.CreateInstance
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetContainingTypeLib
  nameWithType: UCOMITypeInfo.GetContainingTypeLib
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetDllEntry
  nameWithType: UCOMITypeInfo.GetDllEntry
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetDocumentation
  nameWithType: UCOMITypeInfo.GetDocumentation
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetFuncDesc
  nameWithType: UCOMITypeInfo.GetFuncDesc
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: UCOMITypeInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetImplTypeFlags
  nameWithType: UCOMITypeInfo.GetImplTypeFlags
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetMops*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetMops
  nameWithType: UCOMITypeInfo.GetMops
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetNames*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetNames
  nameWithType: UCOMITypeInfo.GetNames
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetRefTypeInfo
  nameWithType: UCOMITypeInfo.GetRefTypeInfo
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetRefTypeOfImplType
  nameWithType: UCOMITypeInfo.GetRefTypeOfImplType
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetTypeAttr
  nameWithType: UCOMITypeInfo.GetTypeAttr
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetTypeComp
  nameWithType: UCOMITypeInfo.GetTypeComp
- uid: System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: GetVarDesc
  nameWithType: UCOMITypeInfo.GetVarDesc
- uid: System.Runtime.InteropServices.UCOMITypeInfo.Invoke*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: Invoke
  nameWithType: UCOMITypeInfo.Invoke
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: ReleaseFuncDesc
  nameWithType: UCOMITypeInfo.ReleaseFuncDesc
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: ReleaseTypeAttr
  nameWithType: UCOMITypeInfo.ReleaseTypeAttr
- uid: System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc*
  parent: System.Runtime.InteropServices.UCOMITypeInfo
  isExternal: false
  name: ReleaseVarDesc
  nameWithType: UCOMITypeInfo.ReleaseVarDesc
