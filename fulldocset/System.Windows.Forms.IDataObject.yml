### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "Lehetővé teszi a független formátumot az adatok átviteléhez."
  remarks: "A `IDataObject` felületet használják a <xref:System.Windows.Forms.Clipboard>osztály és a fogd és vidd műveletek.</xref:System.Windows.Forms.Clipboard>       Megvalósított az osztály a IDataObject módszerek engedélyezése a felhasználó számára az osztály egy példányát a több formátumban tárolják adatokat. Adattárolás egynél több formátumban megnő az esélye, hogy a célalkalmazás, amelynek formátuma követelményeknek, hogy nem tudja, kérheti le a tárolt adatok. Adatok tárolása az IDataObject példányának, hívja meg a <xref:System.Windows.Forms.IDataObject.SetData%2A>metódust, és adja meg az adatformátum a `format` paraméter.</xref:System.Windows.Forms.IDataObject.SetData%2A> Állítsa be a `autoConvert` paramétert `false` Ha nem szeretné, hogy egy másik formátumra kell alakítani, amikor lekéri azt tárolt adatokat. Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A>többször az IDataObject formában történő tárolásához adatok egynél több egy példánya.</xref:System.Windows.Forms.IDataObject.SetData%2A>       Ön tárolt adatainak lekérése az IDataObject meghívásával a <xref:System.Windows.Forms.IDataObject.GetData%2A>formátumával metódus, és adja meg az adatokat a `format` paraméter.</xref:System.Windows.Forms.IDataObject.GetData%2A> Állítsa be a `autoConvert` paramétert `false` csak a megadott formátumban tárolt adatok lekéréséhez. A tárolt adatok átalakítása a megadott formátumban, állítsa `autoConvert` való `true`, vagy ne használjon `autoConvert`.       Annak megállapításához, a formátumok az IDataObject tárolt adatok, az alábbi módszerekkel IDataObject.      -Hívás a <xref:System.Windows.Forms.IDataObject.GetFormats%2A>metódus egy tömb, amelyben a formátumok érhetők el az adatok.</xref:System.Windows.Forms.IDataObject.GetFormats%2A> Állítsa be a `autoConvert` paramétert `false` csak a formátumok, amely tárolja az adatok eléréséhez. Ahhoz, hogy az összes formátumot, amelyben érhetők el az adatok, állítsa be `autoConvert` való `true`, vagy ne használja ezt a paramétert.      -Hívás a <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>metódus egy bizonyos formátumban tárolt adatok meghatározásához.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Ha nem szeretné, hogy a tárolt adatok a megadott formátumra kell alakítani, állítsa be a `autoConvert` paramétert `false`.       Tekintse meg a <xref:System.Windows.Forms.DataObject>osztályt, ez a felület megvalósítása.</xref:System.Windows.Forms.DataObject> Tekintse meg a <xref:System.Windows.Forms.DataFormats>az előre meghatározott osztály <xref:System.Windows.Forms.Clipboard>adatok formátumok.</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a megadott adatformátum kapcsolódó adatokat."
  remarks: "Ez a metódus nem található adatokat a megadott formátumban, ha megkísérli az adatok átalakítása a formátum. Ha az adatok nem konvertálható a megadott formátumban, ez a metódus visszaadja `null`.       Adatok társítva van, vagy konvertálható, a formátum hívás <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> hívása előtt</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Hívás <xref:System.Windows.Forms.IDataObject.GetFormats%2A>ebben tárolt adatok érvényes formátumok listája.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Adatok más formátumba konvertálható, ha a megadása, hogy engedélyezett-e átalakítás tárolása, és a kért formátuma nem kompatibilis a tárolt formátummal. Például adatok Unicode konvertálható szöveget tárolva.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "A beolvasandó adatok formátuma. Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    return:
      type: System.Object
      description: "A megadott formátummal kapcsolatos adatok vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a megadott osztály típusformátum kapcsolódó adatokat."
  remarks: "Ez a metódus nem található adatokat a megadott formátumban, ha megkísérli az adatok átalakítása a formátum. Ha az adatok nem konvertálható a megadott formátumban, ez a metódus visszaadja `null`.       Adatok társítva van, vagy konvertálható, a formátum hívás <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> hívása előtt</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Hívás <xref:System.Windows.Forms.IDataObject.GetFormats%2A>ebben tárolt adatok érvényes formátumok listája.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Adatok más formátumba konvertálható, ha a megadása, hogy engedélyezett-e átalakítás tárolása, és a kért formátuma nem kompatibilis a tárolt formátummal. Például adatok Unicode konvertálható szöveget tárolva.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>képviselő beolvasása az adatok formátumának.</xref:System.Type> Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    return:
      type: System.Object
      description: "A megadott formátummal kapcsolatos adatok vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a megadott adatformátum, olyan logikai érték határozza meg, hogy az adatok átalakítása a formátum használatával kapcsolódó adatokat."
  remarks: "Ha a `autoConvert` paraméter `true` , és ez a metódus nem található adatokat a megadott formátumban, megkísérli az adatok átalakítása a formátuma. Ha az adatok nem konvertálható a megadott formátumban, vagy ha a tárolási és a `autoConvert` paraméter `false`, ez a metódus visszaadja `null`.       Ha a `autoConvert` paraméter `false`, ez a módszer adatait jeleníti meg a megadott formátumban vagy `null` Ha ebben a formátumban adatot nem található.       Határozza meg, hogy adatok társítva van-e, vagy formátum átalakítható, hívja meg a <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>előtt hívja az GetData.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Hívás <xref:System.Windows.Forms.IDataObject.GetFormats%2A>ebben tárolt adatok érvényes formátumok listája.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Adatok más formátumba konvertálható, ha a megadása, hogy engedélyezett-e átalakítás tárolása, és a kért formátuma nem kompatibilis a tárolt formátummal. Például adatok Unicode konvertálható szöveget tárolva.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "A beolvasandó adatok formátuma. Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az adatok átalakítása a megadott formátumban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "A megadott formátummal kapcsolatos adatok vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Meghatározza, hogy ez a példány tárolt adatok társítva van-e, vagy konvertálható, a megadott formátumban."
  remarks: "Ez a metódus annak meghatározásához, hogy formátuma nem létezik-e <xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> hívása előtt</xref:System.Windows.Forms.DataObject> hívható Hívás <xref:System.Windows.Forms.IDataObject.GetFormats%2A>érhetők el ebben a példában formátumok.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Adatok más formátumba konvertálható, ha a megadása, hogy engedélyezett-e átalakítás tárolása, és a kért formátuma nem kompatibilis a tárolt formátummal. Például adatok Unicode konvertálható szöveget tárolva.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "A formátum, amelyek esetében szeretne ellenőrzése. Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az tárolt ehhez a példányhoz társítva van-e, vagy konvertálható, a megadott formátumban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Meghatározza, hogy ez a példány tárolt adatok társítva van-e, vagy konvertálható, a megadott formátumban."
  remarks: "Ez a metódus annak meghatározásához, hogy formátuma nem létezik-e <xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> hívása előtt</xref:System.Windows.Forms.DataObject> hívható Hívás <xref:System.Windows.Forms.IDataObject.GetFormats%2A>érhetők el ebben a példában formátumok.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Adatok más formátumba konvertálható, ha a megadása, hogy engedélyezett-e átalakítás tárolása, és a kért formátuma nem kompatibilis a tárolt formátummal. Például adatok Unicode konvertálható szöveget tárolva.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>képviselő ellenőrizze a formátuma.</xref:System.Type> Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az tárolt ehhez a példányhoz társítva van-e, vagy konvertálható, a megadott formátumban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Meghatározza, hogy ez a példány tárolt adatok társítva van egy logikai értéket annak megállapításához, hogy az adatok átalakítása a formátum használatával meghatározott formátumban."
  remarks: "Ez a metódus annak meghatározásához, hogy formátuma nem létezik-e <xref:System.Windows.Forms.DataObject> <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> hívása előtt</xref:System.Windows.Forms.DataObject> hívható Hívás <xref:System.Windows.Forms.IDataObject.GetFormats%2A>érhetők el ebben a példában formátumok.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       Ez a metódus visszaadja `true` amikor: - a `autoConvert` paraméter `true` és az adatok formátuma nem konvertálható, a megfelelő formátumú.      -A `autoConvert` paraméter `false` és az adatok nem megfelelő formátumú.       Ez a metódus visszaadja `false` amikor: - a `autoConvert` paraméter `true` és ez a metódus nem található adatokat a megadott formátumban és adatok nem konvertálható a megadott formátumnak, vagy a tárolási rendelkező `autoConvert` beállítása `false`.      -A `autoConvert` paraméter `false`, és az adatok nem létezik ebben a példában a megadott formátumban.      > [!NOTE] > Adatok más formátumba konvertálható, ha a megadása, hogy engedélyezett-e átalakítás tárolása, és a kért formátuma nem kompatibilis a tárolt formátummal. Például adatok Unicode konvertálható szöveget tárolva.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "A formátum, amelyek esetében szeretne ellenőrzése. Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>annak meghatározásához, hogy ez a példány tárolt adatokra is lehet formátumra alakítja át a megadott; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> annak ellenőrzéséhez, hogy az adatokat a megadott formátumban."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatokat, vagy konvertálható, a megadott formátumban; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ez a példány tárolt adatok társítva van, vagy konvertálható formátumok listáját adja vissza."
  remarks: "A metódus hívása előtt a támogatott adatobjektum-formátumok lekérni a <xref:System.Windows.Forms.IDataObject.GetData%2A>metódus.</xref:System.Windows.Forms.IDataObject.GetData%2A> Tekintse meg a <xref:System.Windows.Forms.DataFormats>osztályt, az előre megadott formátumok.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Adatok más formátumba konvertálható, ha a megadása, hogy engedélyezett-e átalakítás tárolása, és a kért formátuma nem kompatibilis a tárolt formátummal. Például adatok Unicode konvertálható szöveget tárolva.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "A nevek képviselő tömböt a objektumban tárolt adatok által támogatott formátumok listája."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ez a példány tárolt adatok társítva van, vagy konvertálható, logikai értéket használ annak meghatározásához, hogy minden az adatok konvertálható formátumok vagy csak a natív adatok lekéréséhez formázza a formátumok listájának lekérése."
  remarks: "A metódus hívása előtt a támogatott adatobjektum-formátumok lekérni a <xref:System.Windows.Forms.IDataObject.GetData%2A>metódus.</xref:System.Windows.Forms.IDataObject.GetData%2A> Tekintse meg a <xref:System.Windows.Forms.DataFormats>osztályt, az előre megadott formátumok.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Adatok más formátumba konvertálható, ha a megadása, hogy engedélyezett-e átalakítás tárolása, és a kért formátuma nem kompatibilis a tárolt formátummal. Például adatok Unicode konvertálható szöveget tárolva.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Minden formátum beolvasni, hogy ez a példány tárolt adatok társítva van, vagy konvertálható; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a natív adatok formátumok beolvasása."
    return:
      type: System.String[]
      description: "A nevek képviselő tömböt a objektumban tárolt adatok által támogatott formátumok listája."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A megadott adatot tárol ebben az esetben használja az osztály az adatok formátuma."
  remarks: "A formátum a adatok osztályból lett származtatva.       Ezzel a módszerrel tárolt adatok formátuma nem kompatibilis konvertálható, amikor lekéri azt.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Az adatok tárolásához."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ez a példány a megadott adatokat és a kapcsolódó formátumban tárolja."
  remarks: "Ha nem ismeri a célalkalmazás formátumát, adatot tárolhat több formátumok ezzel a módszerrel.       Ezzel a módszerrel tárolt adatok formátuma nem kompatibilis konvertálható, amikor lekéri azt.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "A társított formátuma. Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    - id: data
      type: System.Object
      description: "Az adatok tárolásához."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A megadott adatokat, és a kapcsolódó osztálytípus tárolja ezt a példányt."
  remarks: "Ha nem ismeri a célalkalmazás formátumát, adatot tárolhat több formátumok ezzel a módszerrel.       Ezzel a módszerrel tárolt adatok formátuma nem kompatibilis konvertálható, amikor lekéri azt.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "A <xref:System.Type>képviselő társított adatok formátuma.</xref:System.Type> Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    - id: data
      type: System.Object
      description: "Az adatok tárolásához."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ebben az esetben egy logikai érték használatával adhatja meg, hogy az adatok egy másik formátumú konvertálható a megadott adatokat és a kapcsolódó formátumban tárolja."
  remarks: "Ha nem ismeri a célalkalmazás formátumát, adatot tárolhat több formátumok ezzel a módszerrel.       Ez a metódus megvalósítása lásd: <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "A társított formátuma. Lásd: <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> előre definiált formátumokat."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az adatok kell formátumra alakítja át egy másik; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: data
      type: System.Object
      description: "Az adatok tárolásához."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
