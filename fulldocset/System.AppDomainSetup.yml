### YamlMime:ManagedReference
items:
- uid: System.AppDomainSetup
  id: AppDomainSetup
  children:
  - System.AppDomainSetup.#ctor
  - System.AppDomainSetup.#ctor(System.ActivationContext)
  - System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  - System.AppDomainSetup.ActivationArguments
  - System.AppDomainSetup.AppDomainInitializer
  - System.AppDomainSetup.AppDomainInitializerArguments
  - System.AppDomainSetup.AppDomainManagerAssembly
  - System.AppDomainSetup.AppDomainManagerType
  - System.AppDomainSetup.ApplicationBase
  - System.AppDomainSetup.ApplicationName
  - System.AppDomainSetup.ApplicationTrust
  - System.AppDomainSetup.CachePath
  - System.AppDomainSetup.ConfigurationFile
  - System.AppDomainSetup.DisallowApplicationBaseProbing
  - System.AppDomainSetup.DisallowBindingRedirects
  - System.AppDomainSetup.DisallowCodeDownload
  - System.AppDomainSetup.DisallowPublisherPolicy
  - System.AppDomainSetup.DynamicBase
  - System.AppDomainSetup.GetConfigurationBytes
  - System.AppDomainSetup.LicenseFile
  - System.AppDomainSetup.LoaderOptimization
  - System.AppDomainSetup.PartialTrustVisibleAssemblies
  - System.AppDomainSetup.PrivateBinPath
  - System.AppDomainSetup.PrivateBinPathProbe
  - System.AppDomainSetup.SandboxInterop
  - System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  - System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  - System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  - System.AppDomainSetup.ShadowCopyDirectories
  - System.AppDomainSetup.ShadowCopyFiles
  - System.AppDomainSetup.TargetFrameworkName
  langs:
  - csharp
  name: AppDomainSetup
  nameWithType: AppDomainSetup
  fullName: System.AppDomainSetup
  type: Class
  summary: "Szerelvény kötési információ egy példányára felvehető jelöli <xref href=&quot;System.AppDomain&quot;> </xref>."
  remarks: "Az AppDomainSetup példányához tartozó tulajdonságok módosítása nem érinti a meglévő <xref:System.AppDomain>.</xref:System.AppDomain> Ez hatással lehet a csak egy új létrehozása <xref:System.AppDomain>, amikor a <xref:System.AppDomain.CreateDomain%2A>módszer neve az AppDomainSetup példánnyal paraméterként.</xref:System.AppDomain.CreateDomain%2A> </xref:System.AppDomain>       Ez az osztály megvalósítja az <xref:System.IAppDomainSetup>felületet.</xref:System.IAppDomainSetup>      > [!CAUTION] > Az alapértelmezett érték a <xref:System.AppDomainSetup.DisallowCodeDownload%2A>tulajdonság értéke &quot;false&quot;.</xref:System.AppDomainSetup.DisallowCodeDownload%2A> Ez a beállítás nem biztonságos szolgáltatások. Részlegesen megbízható kód szolgáltatások megakadályozása érdekében állítsa ezt a tulajdonságot igaz értékre"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class AppDomainSetup : IAppDomainSetup
  inheritance:
  - System.Object
  implements:
  - System.IAppDomainSetup
  inheritedMembers: []
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor
  id: '#ctor'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup()
  nameWithType: AppDomainSetup.AppDomainSetup()
  fullName: System.AppDomainSetup.AppDomainSetup()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.AppDomainSetup&quot;> </xref> osztály."
  syntax:
    content: public AppDomainSetup ();
    parameters: []
  overload: System.AppDomainSetup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor(System.ActivationContext)
  id: '#ctor(System.ActivationContext)'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup(ActivationContext)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationContext)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.AppDomainSetup&quot;> </xref> a megadott aktiválási környezet egy alkalmazástartomány jegyzékfájl-alapú aktiválás használata a osztályt."
  remarks: "A <xref:System.ActivationContext>megadott objektum `activationContext` előállítására szolgál egy <xref:System.Runtime.Hosting.ActivationArguments>objektum egy új alkalmazástartomány aktiválásához szükséges adatokat tartalmazó.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.ActivationContext> Ez <xref:System.Runtime.Hosting.ActivationArguments>objektum használatával is elérhetők a <xref:System.AppDomainSetup.ActivationArguments%2A>tulajdonság.</xref:System.AppDomainSetup.ActivationArguments%2A> </xref:System.Runtime.Hosting.ActivationArguments>"
  syntax:
    content: public AppDomainSetup (ActivationContext activationContext);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Az aktiválási környezet egy alkalmazástartomány használható."
  overload: System.AppDomainSetup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  id: '#ctor(System.Runtime.Hosting.ActivationArguments)'
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainSetup(ActivationArguments)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationArguments)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationArguments)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.AppDomainSetup&quot;> </xref> osztály a megadott aktiválási argumentumokkal egy alkalmazástartomány jegyzékfájl-alapú aktiváláshoz szükséges."
  remarks: "A megadott objektum `activationArguments` használatával érhető el a <xref:System.AppDomainSetup.ActivationArguments%2A>tulajdonság.</xref:System.AppDomainSetup.ActivationArguments%2A>"
  syntax:
    content: public AppDomainSetup (System.Runtime.Hosting.ActivationArguments activationArguments);
    parameters:
    - id: activationArguments
      type: System.Runtime.Hosting.ActivationArguments
      description: "Egy objektum, amely megadja egy alkalmazás új tartományt a jegyzékfájl-alapú aktiváláshoz szükséges adatokat."
  overload: System.AppDomainSetup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationArguments</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.ActivationArguments
  id: ActivationArguments
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
  fullName: System.AppDomainSetup.ActivationArguments
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja az aktiválási egy alkalmazástartomány adatait."
  remarks: "Nincs kivételhiba fordul elő, ha ez a tulajdonság értéke `null`.       Az információk a <xref:System.Runtime.Hosting.ActivationArguments>objektum jegyzékfájl-alapú aktiválást támogatja.</xref:System.Runtime.Hosting.ActivationArguments>"
  syntax:
    content: public System.Runtime.Hosting.ActivationArguments ActivationArguments { get; set; }
    return:
      type: System.Runtime.Hosting.ActivationArguments
      description: "Egy objektum, amely egy alkalmazástartomány aktiválási adatait tartalmazza."
  overload: System.AppDomainSetup.ActivationArguments*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A tulajdonság értéke egy <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> objektum, amelynek alkalmazásidentitás nem egyezik meg az alkalmazás identitását a <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> által visszaadott objektum a <> </> *> tulajdonság. Ha nincs kivétel történt a <> </> *> tulajdonság <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainInitializer
  id: AppDomainInitializer
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
  fullName: System.AppDomainSetup.AppDomainInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.AppDomainInitializer&quot;> </xref> delegálása, amely jelenti, hogy egy visszahívási metódus az alkalmazástartomány inicializálása hív meg."
  remarks: "A visszahívási metódus adjon át adatokat, rendelje hozzá a karakterláncok a <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A>tulajdonság.</xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> A tömb van a visszahívási metódusnak átadott minden alkalommal, amikor egy <xref:System.AppDomain>inicializálva van.</xref:System.AppDomain>       A visszahívási metódus végrehajtása az újonnan létrehozott alkalmazástartomány környezetében."
  example:
  - "The following example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain. The AppDomainInitializer property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized. The arguments for the callback method are placed in an array of strings, which is assigned to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property. When the child domain is created, the callback method simply prints the strings.  \n  \n [!code-cpp[AppDomainInitializer#1](~/add/codesnippet/cpp/p-system.appdomainsetup._4_1.cpp)]\n [!code-cs[AppDomainInitializer#1](~/add/codesnippet/csharp/p-system.appdomainsetup._4_1.cs)]\n [!code-vb[AppDomainInitializer#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._4_1.vb)]"
  syntax:
    content: public AppDomainInitializer AppDomainInitializer { get; set; }
    return:
      type: System.AppDomainInitializer
      description: "Ez a delegált jelenti. a visszahívási metódus az alkalmazástartomány inicializálása hív meg."
  overload: System.AppDomainSetup.AppDomainInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainInitializerArguments
  id: AppDomainInitializerArguments
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
  fullName: System.AppDomainSetup.AppDomainInitializerArguments
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a által képviselt visszahívási metódusnak átadott argumentumok a <xref href=&quot;System.AppDomainInitializer&quot;> </xref> delegálni. A visszahívási metódus nyílik meg, ha az alkalmazástartomány inicializálása."
  remarks: "Használja a <xref:System.AppDomainSetup.AppDomainInitializer%2A>tulajdonsággal, amelyet során visszahívási metódus <xref:System.AppDomain>inicializálási.</xref:System.AppDomain> </xref:System.AppDomainSetup.AppDomainInitializer%2A> Ha a <xref:System.AppDomainSetup.AppDomainInitializer%2A>tulajdonság nincs beállítva, ez a tulajdonság rendelve a tömb nem használatos.</xref:System.AppDomainSetup.AppDomainInitializer%2A>       A visszahívási metódus végrehajtása az újonnan létrehozott alkalmazástartomány környezetében."
  example:
  - "The following code example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain. The <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized. The arguments for the callback method are placed in an array of strings, which is assigned to the AppDomainInitializerArguments property. When the child domain is created, the callback method simply prints the strings.  \n  \n [!code-cpp[AppDomainInitializer#1](~/add/codesnippet/cpp/p-system.appdomainsetup._0_1.cpp)]\n [!code-cs[AppDomainInitializer#1](~/add/codesnippet/csharp/p-system.appdomainsetup._0_1.cs)]\n [!code-vb[AppDomainInitializer#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._0_1.vb)]"
  syntax:
    content: public string[] AppDomainInitializerArguments { get; set; }
    return:
      type: System.String[]
      description: "Karakterlánctömbnek a által képviselt visszahívási metódusnak átadott a <xref href=&quot;System.AppDomainInitializer&quot;> </xref> delegált során a visszahívási metódus meghívásakor <xref href=&quot;System.AppDomain&quot;> </xref> inicializálása."
  overload: System.AppDomainSetup.AppDomainInitializerArguments*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainManagerAssembly
  id: AppDomainManagerAssembly
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
  fullName: System.AppDomainSetup.AppDomainManagerAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a szerelvény, amely a tartomány kezelő típusú biztosít alkalmazástartományok létre ezt a megjelenítendő név <xref href=&quot;System.AppDomainSetup&quot;> </xref> objektum."
  remarks: "To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property. If either of these properties is not set, the other is ignored.  \n  \n If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName> method is called).  \n  \n When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly does not exist, or if the assembly does not contain the type specified by the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property. <xref:System.IO.FileLoadException> is thrown if the assembly is found but the version information does not match.  \n  \n To set the application domain manager for the default application domain, use the [\\<appDomainManagerAssembly>](../Topic/%3CappDomainManagerAssembly%3E%20Element.md) and [\\<appDomainManagerType>](../Topic/%3CappDomainManagerType%3E%20Element.md) elements in the [\\<runtime>](../Topic/%3Cruntime%3E%20Element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.  \n  \n This feature requires the application to have full trust. (For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.  \n  \n The format of the assembly display name is given by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property."
  syntax:
    content: public string AppDomainManagerAssembly { get; set; }
    return:
      type: System.String
      description: "A megjelenített név a szerelvény, amely a <xref:System.Type>az alkalmazáskezelő tartományi.</xref:System.Type>"
  overload: System.AppDomainSetup.AppDomainManagerAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.AppDomainManagerType
  id: AppDomainManagerType
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
  fullName: System.AppDomainSetup.AppDomainManagerType
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a teljes nevet, amely biztosítja a tartomány kezelő segítségével létrehozott alkalmazást tartományok típusú <xref href=&quot;System.AppDomainSetup&quot;> </xref> objektum."
  remarks: "To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property. If either of these properties is not set, the other is ignored.  \n  \n If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=fullName> method is called).  \n  \n When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly specified by the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property does not contain the type specified by this property.  \n  \n To set the application domain manager for the default application domain, use the [\\<appDomainManagerAssembly>](../Topic/%3CappDomainManagerAssembly%3E%20Element.md) and [\\<appDomainManagerType>](../Topic/%3CappDomainManagerType%3E%20Element.md) elements in the [\\<runtime>](../Topic/%3Cruntime%3E%20Element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.  \n  \n This feature requires the application to have full trust. (For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.  \n  \n The format of the full name of a type is given by the <xref:System.Type.FullName%2A?displayProperty=fullName> property."
  syntax:
    content: public string AppDomainManagerType { get; set; }
    return:
      type: System.String
      description: "A típus, beleértve a névtér teljes neve."
  overload: System.AppDomainSetup.AppDomainManagerType*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationBase
  id: ApplicationBase
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
  fullName: System.AppDomainSetup.ApplicationBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja az alkalmazást tartalmazó könyvtár nevét."
  remarks: "Az alkalmazás alapkönyvtárának, ahol a szerelvénykezelő szerelvények számlálása kezdődik-e.       Az ApplicationBase tulajdonságot befolyásolhatja, mely jogosultságokkal egy alkalmazástartomány. Például egy alkalmazástartomány a helyi számítógépről származó rendszerint megkapja a származási helye alapján a teljesen megbízható. Azonban ha az ApplicationBase tulajdonsága, amely <xref:System.AppDomain>beállítása egy intranetes directory, a beállítás korlátozza az engedélyeket a LocalIntranet támogatáshoz alkalmazástartományt annak ellenére, hogy az alkalmazástartomány ténylegesen a helyi számítógépről származó ApplicationBase teljes nevét.</xref:System.AppDomain>"
  example:
  - "The following example demonstrates how to use the ApplicationBase property to set the location where the assembly loader begins probing for assemblies to load into a new application domain.  \n  \n> [!NOTE]\n>  You must ensure that the folder you specify exists.  \n  \n [!code-vb[ADApplicationBase#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._5_1.vb)]\n [!code-cpp[ADApplicationBase#1](~/add/codesnippet/cpp/p-system.appdomainsetup._5_1.cpp)]\n [!code-cs[ADApplicationBase#1](~/add/codesnippet/csharp/p-system.appdomainsetup._5_1.cs)]"
  syntax:
    content: public string ApplicationBase { get; set; }
    return:
      type: System.String
      description: "Az alkalmazás alapkönyvtárának neve."
  overload: System.AppDomainSetup.ApplicationBase*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationName
  id: ApplicationName
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
  fullName: System.AppDomainSetup.ApplicationName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja az alkalmazás nevét."
  remarks: ''
  example:
  - "The following example shows how to set the ApplicationName property when you create a new application domain.  \n  \n The example creates a new application domain, and then calls the <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName> method to load the example assembly into the new application domain and create an instance of the `Worker` class. The `Worker` class inherits <xref:System.MarshalByRefObject>, so the example can use the proxy returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A> to call the `TestLoad` method.  \n  \n The `TestLoad` method loads an assembly that you specify. You must either specify a valid, fully qualified assembly name, or comment out the <xref:System.Reflection.Assembly.Load%28System.String%29> method. The `TestLoad` method lists the assemblies that are loaded into the new application domain, showing that your specified assembly and the example assembly are loaded.  \n  \n The example uses the <xref:System.LoaderOptimizationAttribute> attribute to tell the assembly loader how the application will share code across application domains.  \n  \n [!code-cpp[ADMultiDomain#1](~/add/codesnippet/cpp/p-system.appdomainsetup._2_1.cpp)]\n [!code-cs[ADMultiDomain#1](~/add/codesnippet/csharp/p-system.appdomainsetup._2_1.cs)]\n [!code-vb[ADMultiDomain#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._2_1.vb)]"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Az alkalmazás nevét."
  overload: System.AppDomainSetup.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ApplicationTrust
  id: ApplicationTrust
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
  fullName: System.AppDomainSetup.ApplicationTrust
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a biztonsági és megbízhatósági adatait tartalmazó objektum."
  remarks: "Ez a tulajdonság `null` amikor a <xref:System.AppDomainSetup>jön létre.</xref:System.AppDomainSetup> Miután módosította, akkor nem állítható vissza null hivatkozás."
  syntax:
    content: public System.Security.Policy.ApplicationTrust ApplicationTrust { get; set; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Egy objektum, amely a biztonsági és megbízhatósági tudnivalókat tartalmaz."
  overload: System.AppDomainSetup.ApplicationTrust*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A tulajdonság értéke egy <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> objektum, amelynek alkalmazásidentitás nem egyezik meg az alkalmazás identitását a <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> által visszaadott objektum a <> </> *> tulajdonság. Ha nincs kivétel történt a <> </> *> tulajdonság <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A tulajdonság értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.CachePath
  id: CachePath
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
  fullName: System.AppDomainSetup.CachePath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a terület neve adott az alkalmazás árnyékmásolat fájlok esetén."
  remarks: "Ahhoz, hogy ezt a tulajdonságot, amely hatással a <xref:System.AppDomainSetup.ApplicationName%2A>tulajdonság is meg kell adni.</xref:System.AppDomainSetup.ApplicationName%2A> Ha a <xref:System.AppDomainSetup.ApplicationName%2A>tulajdonság nincs beállítva, a CachePath tulajdonság a rendszer figyelmen kívül hagyja, és az árnyékmásolat másolási gyorsítótár alapértelmezett hely a letöltési gyorsítótár.</xref:System.AppDomainSetup.ApplicationName%2A>       Az árnyékmásolat további információkért lásd: [árnyékmásolat másolása szerelvények](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string CachePath { get; set; }
    return:
      type: System.String
      description: "Ahol fájljai árnyékmásolat könyvtárnév elérési út és fájlnév teljesen minősített neve."
  overload: System.AppDomainSetup.CachePath*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ConfigurationFile
  id: ConfigurationFile
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
  fullName: System.AppDomainSetup.ConfigurationFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja egy alkalmazástartomány konfigurációs fájl nevét."
  remarks: "A konfigurációs fájl írja le, a szabályok keresése és a konfigurációs adatokat az alkalmazástartományt. A gazdagép, amely létrehozza az alkalmazástartományt biztosítja ezeket az adatokat, mivel nem minden esetben helyzet a jelentéssel bíró értékek felelős.       Például a konfigurációs adatokat az ASP.NET-alkalmazások tárolódnak minden alkalmazás, a hely és a számítógép, amíg minden alkalmazás, a felhasználó és a számítógép tárolja a konfigurációs adatokat a végrehajtható fájlt. Csak a gazdagép tudja a konfigurációs adatokat egy adott esetben az adatok megírását."
  syntax:
    content: public string ConfigurationFile { get; set; }
    return:
      type: System.String
      description: "A konfigurációs fájl nevét."
  overload: System.AppDomainSetup.ConfigurationFile*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing
  id: DisallowApplicationBaseProbing
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
  fullName: System.AppDomainSetup.DisallowApplicationBaseProbing
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Meghatározza, hogy az alkalmazás alap elérési útja és a titkos bináris fájl elérési útja megadott vannak szerelvényeket betölteni keresésekor."
  remarks: "Ha a DisallowApplicationBaseProbing tulajdonság `true`, értékét a <xref:System.AppDomainSetup.ApplicationBase%2A>tulajdonság a rendszer figyelmen kívül hagyja.</xref:System.AppDomainSetup.ApplicationBase%2A> Nincs szerelvények megadott Ez azt jelenti, hogy a megadott könyvtárak a <xref:System.AppDomainSetup.ApplicationBase%2A>tulajdonság.</xref:System.AppDomainSetup.ApplicationBase%2A> Emellett az értékeket a <xref:System.AppDomainSetup.PrivateBinPath%2A>tulajdonság és a <xref:System.AppDomainSetup.PrivateBinPathProbe%2A>tulajdonság figyelmen kívül lesznek hagyva.</xref:System.AppDomainSetup.PrivateBinPathProbe%2A> </xref:System.AppDomainSetup.PrivateBinPath%2A> Nincs szerelvényeket a rendszer megadott által megadott könyvtárak a <xref:System.AppDomainSetup.PrivateBinPath%2A>tulajdonság.</xref:System.AppDomainSetup.PrivateBinPath%2A>       A DisallowApplicationBaseProbing tulajdonság a betöltés folyamat ellenőrzését további réteget biztosít. A normál szerelvény betöltése feladatütemezési, az alkalmazás alapja előtt megadott a <xref:System.AppDomain.AssemblyResolve?displayProperty=fullName>egy esemény jelenik meg.</xref:System.AppDomain.AssemblyResolve?displayProperty=fullName> Előfordulhat azonban, egyes alkalmazások kell betölteni egy OLE összetett fájl dokumentumból, vagy olyan egyedi ismert helyre, sem a globális szerelvény-gyorsítótárban, sem a megadott könyvtárban a <xref:System.AppDomainSetup.ApplicationBase%2A>és <xref:System.AppDomainSetup.PrivateBinPath%2A>Tulajdonságok.</xref:System.AppDomainSetup.PrivateBinPath%2A> </xref:System.AppDomainSetup.ApplicationBase%2A> Ezek az alkalmazások a tulajdonsággal DisallowApplicationBaseProbing a szokásos vizsgálattal által okozott késleltetés elkerülése érdekében, és hogy elkerülje a szükséges szerelvény, amely lehet, hogy a normál vizsgálathoz használt elérési utakon található példányát."
  syntax:
    content: public bool DisallowApplicationBaseProbing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az ellenőrzés nem engedélyezett; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.DisallowApplicationBaseProbing*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowBindingRedirects
  id: DisallowBindingRedirects
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
  fullName: System.AppDomainSetup.DisallowBindingRedirects
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy egy alkalmazástartomány engedélyez-e a kötési átirányítás szerelvény."
  remarks: "Célja, hogy a DisallowBindingRedirects tulajdonság által használt szolgáltatások és kiszolgálói alkalmazások ahol szerelvény kötési átirányítás nem az alkalmazás forgatókönyv része."
  syntax:
    content: public bool DisallowBindingRedirects { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a szerelvények átirányítását nem engedélyezett; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha engedélyezve van."
  overload: System.AppDomainSetup.DisallowBindingRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowCodeDownload
  id: DisallowCodeDownload
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
  fullName: System.AppDomainSetup.DisallowCodeDownload
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy szerelvények HTTP-alapú letöltése alkalmazás tartományban."
  remarks: "Célja, hogy a DisallowCodeDownload tulajdonság által használt szolgáltatások és kiszolgálói alkalmazások ahol intraneten vagy az internetről letöltése kód nem az alkalmazás forgatókönyv része.      > [!CAUTION] > Az alapértelmezett érték a DisallowCodeDownload tulajdonság `false`. Ez a beállítás nem biztonságos szolgáltatások. Részlegesen megbízható kód szolgáltatások megakadályozása érdekében a tulajdonság értéke `true`."
  syntax:
    content: public bool DisallowCodeDownload { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha HTTP szerelvények letöltése nem engedélyezett; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha engedélyezve van."
  overload: System.AppDomainSetup.DisallowCodeDownload*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DisallowPublisherPolicy
  id: DisallowPublisherPolicy
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
  fullName: System.AppDomainSetup.DisallowPublisherPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a [ &lt;publisherPolicy&gt; ](../Topic/%3CpublisherPolicy%3E%20Element.md) a konfigurációs fájl a szakaszban egy alkalmazástartomány vonatkozik."
  remarks: "A DisallowPublisherPolicy tulajdonság kifejezetten egy webes alkalmazás, amely helyileg be van töltve. Ez a tulajdonság segítségével egy rosszindulatú kísérlet történt egy nem biztonságos webes alkalmazás végrehajtása csökkentett módban megelőzése érdekében.       Közzétevői házirend kihagyásával kapcsolatos további információkért tekintse meg a [átirányítása szerelvény verziója](~/add/includes/ajax-current-ext-md.md) témakör. Csökkentett módban kapcsolatos további információkért lásd: a &quot;Vizsgálata folyamatban van a konfigurációs fájlok&quot; szakaszában a [hogyan a Runtime megkeresi szerelvény](~/add/includes/ajax-current-ext-md.md) témakör."
  syntax:
    content: public bool DisallowPublisherPolicy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref uid=&quot;langword_csharp_&lt;publisherPolicy&gt;&quot; name=&quot;&lt;publisherPolicy&gt;&quot; href=&quot;&quot;> </xref> a konfigurációs fájl egy alkalmazás-tartomány részét a rendszer figyelmen kívül hagyja; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Ha a deklarált közzétevői házirend van figyelembe véve."
  overload: System.AppDomainSetup.DisallowPublisherPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.DynamicBase
  id: DynamicBase
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
  fullName: System.AppDomainSetup.DynamicBase
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a alapkönyvtárának, ahol a dinamikusan generált fájlok."
  remarks: "Use this property to set the base directory where the dynamic directory for the new application domain will be located. When code in the new application domain loads an assembly, assembly resolution looks first in the normal probing paths. If it does not find the assembly, it looks in the dynamic directory, which is returned by the <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName> property. Dynamic assemblies that will be loaded and executed by the new application domain can be placed there.  \n  \n When you assign a path to the DynamicBase property, an additional subdirectory is added; the name of this subdirectory is the hash code of the value assigned to the <xref:System.AppDomainSetup.ApplicationName%2A> property. Thus, the base directory subsequently returned by this property is always different from the value assigned.  \n  \n> [!IMPORTANT]\n>  Assigning a value to this property does not create any directories. The directories must be created or verified by the code that uses them.  \n  \n The dynamic directory is a subdirectory of DynamicBase. Its simple name is the value returned by the <xref:System.AppDomainSetup.ApplicationName%2A> property, so its format is *original path*\\\\*hash code*\\\\*application name*."
  example:
  - "The following example demonstrates how to use the DynamicBase property to set the path an application domain probes when loading dynamic assemblies.  \n  \n The example creates an <xref:System.AppDomainSetup> object and sets its <xref:System.AppDomainSetup.ApplicationName%2A> property to \"Example\" and its DynamicBase property to \"C:\\DynamicAssemblyDir\". The example then displays the DynamicBase property, to show that the hash code of the application name has been appended as a subdirectory of the path that was originally assigned.  \n  \n> [!NOTE]\n>  The base directory in this example is intended to be outside the probing path for the example application. Be sure to compile the example in a different location. Delete the base directory and all its subdirectories each time you run the example.  \n  \n The example creates a new application domain using the <xref:System.AppDomainSetup> object. The example then creates the dynamic directory if it does not already exist. Although the example uses the application domain's <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName> property to get the name of the dynamic directory, it could just as easily create the directory beforehand by concatenating the original path, the hash code of the application name, and the application name.  \n  \n The example has a `GenerateDynamicAssembly` method that emits an assembly named `DynamicHelloWorld.dll` and stores it in the new application domain's dynamic directory. The dynamic assembly contains one type, `HelloWorld`, that has a static method (`Shared` method in Visual Basic) named `HelloFromAD`. Calling this method displays the name of the application domain.  \n  \n The `Example` class derives from <xref:System.MarshalByRefObject>, so the example can create an instance of the class in the new application domain and call its `Test` method. The `Test` method loads the dynamic assembly by its display name and calls the static `HelloFromAD` method.  \n  \n You can show that the dynamic directory is searched after the normal probing paths by writing code for an assembly named `DynamicHelloWorld.dll` and compiling it in the same directory as this example. The assembly must have a class named `HelloWorld` with a static method named `HelloFromAD`. This method does not have to have the same functionality as the one in the example; it can simply display a string to the console. The assembly must also have an <xref:System.Reflection.AssemblyVersionAttribute> attribute that sets its version to 1.0.0.0. When you run the example, the assembly you compiled in the current directory is found before the dynamic directory is searched.  \n  \n [!code-cpp[ADDynamicBase#1](~/add/codesnippet/cpp/p-system.appdomainsetup._1_1.cpp)]\n [!code-cs[ADDynamicBase#1](~/add/codesnippet/csharp/p-system.appdomainsetup._1_1.cs)]\n [!code-vb[ADDynamicBase#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._1_1.vb)]"
  syntax:
    content: public string DynamicBase { get; set; }
    return:
      type: System.String
      description: "A könyvtár ahol a &lt;xref:System.AppDomain.DynamicDirectory%2A?displayProperty=fullName&gt; található.       <div class=&quot;alert NOTE&quot;>    Az eredményül kapott értéket a tulajdonság hozzárendelt érték eltér. A Megjegyzések című szakaszában talál.      </div>"
  overload: System.AppDomainSetup.DynamicBase*
  exceptions:
  - type: System.MemberAccessException
    commentId: T:System.MemberAccessException
    description: "Ez a tulajdonság nem állítható be, mert az alkalmazástartományt az alkalmazás neve nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.AppDomainSetup.GetConfigurationBytes
  id: GetConfigurationBytes
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: GetConfigurationBytes()
  nameWithType: AppDomainSetup.GetConfigurationBytes()
  fullName: System.AppDomainSetup.GetConfigurationBytes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "A által beállított XML-konfigurációs adatait adja vissza. a <xref:System.AppDomainSetup.SetConfigurationBytes*>metódus, amely felülírja az alkalmazás XML-konfigurációs adatokat.</xref:System.AppDomainSetup.SetConfigurationBytes*>"
  remarks: "A <xref:System.AppDomainSetup.SetConfigurationBytes%2A>metódus bírálja felül a konfigurációs adatokat az új tartományt hoz létre alkalmazást alkalmazás lehetőséget biztosít.</xref:System.AppDomainSetup.SetConfigurationBytes%2A> A konfigurációs fájl adatainak `value` felülírja az alkalmazás a konfigurációs fájl információit. Például a Example.exe alkalmazás új tartományt hoz létre alkalmazást, ha azt lehet felülbírálni a konfigurációs információ eredetileg Example.exe.config fájlból.      > [!IMPORTANT] > A konfigurációs fájl adatokat egyes fogyasztók által tárolt adatokat nem használja a <xref:System.AppDomainSetup.SetConfigurationBytes%2A>metódus.</xref:System.AppDomainSetup.SetConfigurationBytes%2A> A futtatókörnyezet nem érvényesítik. Győződjön meg arról, hogy az összes konfigurációs fájl adatokat egy új alkalmazás tartományban érvényét veszti, használja a <xref:System.AppDomainSetup.ConfigurationFile%2A>konfigurációs fájlt megadó tulajdonság.</xref:System.AppDomainSetup.ConfigurationFile%2A> A <xref:System.AppDomainSetup.SetConfigurationBytes%2A>metódus kötés szerelvény befolyásolja.</xref:System.AppDomainSetup.SetConfigurationBytes%2A>       Az XML-t `value` megegyezik egy normál konfigurációs fájlban lévő XML azzal a különbséggel, hogy azt tárolja egy <xref:System.Byte>tömb.</xref:System.Byte>       A konfigurációs bájtos egy alkalmazástartomány elérésére, a <xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName>tulajdonság használatával beolvassa a <xref:System.AppDomainSetup>alkalmazástartományt objektum, majd a GetConfigurationBytes módszer használatát.</xref:System.AppDomainSetup> </xref:System.AppDomain.SetupInformation%2A?displayProperty=fullName>"
  syntax:
    content: public byte[] GetConfigurationBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Olyan tömb, amely által megadott XML-konfigurációs információkat tartalmazza a <> </> *> metódus, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a <> </> *> metódus nem volt meghívva."
  overload: System.AppDomainSetup.GetConfigurationBytes*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.LicenseFile
  id: LicenseFile
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
  fullName: System.AppDomainSetup.LicenseFile
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a tartomány hozzárendelt licenc-fájl helyét."
  syntax:
    content: public string LicenseFile { get; set; }
    return:
      type: System.String
      description: "A helyét és nevét a licencfájlt."
  overload: System.AppDomainSetup.LicenseFile*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.LoaderOptimization
  id: LoaderOptimization
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
  fullName: System.AppDomainSetup.LoaderOptimization
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Meghatározza egy végrehajtható fájl betöltéséhez optimalizálási házirendet."
  remarks: ''
  example:
  - "The following example creates a dynamic assembly and saves it to disk, and then uses the LoaderOptimization property to set the optimization policy used to load the assembly into an application domain.  \n  \n [!code-cpp[ADDyno#1](~/add/codesnippet/cpp/p-system.appdomainsetup._3_1.cpp)]\n [!code-cs[ADDyno#1](~/add/codesnippet/csharp/p-system.appdomainsetup._3_1.cs)]\n [!code-vb[ADDyno#1](~/add/codesnippet/visualbasic/p-system.appdomainsetup._3_1.vb)]"
  syntax:
    content: public LoaderOptimization LoaderOptimization { get; set; }
    return:
      type: System.LoaderOptimization
      description: "A felsorolt állandó használt a <xref href=&quot;System.LoaderOptimizationAttribute&quot;> </xref>."
  overload: System.AppDomainSetup.LoaderOptimization*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies
  id: PartialTrustVisibleAssemblies
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
  fullName: System.AppDomainSetup.PartialTrustVisibleAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a jelölésű szerelvényekben listáját a <xref href=&quot;System.Security.PartialTrustVisibilityLevel&quot;> </xref> jelzőt, amely is láthatóvá válnak az részlegesen megbízható kód egy elkülönített alkalmazástartományt futtatja."
  remarks: "Verziótól kezdve a [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], <xref:System.Security.AllowPartiallyTrustedCallersAttribute>(APTCA) attribútum is feltétele az <xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A> <xref:System.Security.PartialTrustVisibilityLevel>.</xref:System.Security.PartialTrustVisibilityLevel> tulajdonság</xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A> </xref:System.Security.AllowPartiallyTrustedCallersAttribute> Egy aptca JELÖLÉSŰ szerelvény is meg van jelölve a <xref:System.Security.PartialTrustVisibilityLevel>részlegesen megbízható kód által nem használható, kivéve, ha a fogadó alkalmazás lehetővé teszi, hogy azt.</xref:System.Security.PartialTrustVisibilityLevel>       A gazdagép egy elkülönített alkalmazástartományt, lehetővé teszi, hogy az alkalmazás tartomány feltételes APTCA attribútumokkal rendelkező szerelvények használata olyan tömb, amely tartalmazza az egyszerű nevét és minden szerelvény nyilvános kulcsa hoz létre, és a tömb erre a tulajdonságra. For example, an element of the array might look like the following: &quot;MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9&quot;.      > [!IMPORTANT] > Alosztályát használata <xref:System.AppDomainManager>, és a feltételes APTCA attribútummal rendelkező szerelvények függ, amely meghatározza, hogy a szerelvény, meg kell adni ezeket a szerelvényeket a listában, adja meg a PartialTrustVisibleAssemblies tulajdonságához a <xref:System.AppDomainSetup>alkalmazástartományok létrehozására használhatja.</xref:System.AppDomainSetup> </xref:System.AppDomainManager> Ellenkező esetben a feltételes APTCA attribútummal rendelkező szerelvények letiltásra kerül.      > [!NOTE] > Egy alkalmazás egy elkülönített alkalmazástartományt, amelyen nyomkövetésére néhány <xref:System.Security.SecurityException>üzenetek félrevezető lehet.</xref:System.Security.SecurityException> Egy üzenet például előfordulhat, hogy adja meg, hogy a teljesen megbízható szerelvények egyik csak korlátozott engedéllyel, amikor a valós az oka, hogy egy elkülönített alkalmazástartományt grant készlete nagyobb biztonsági igény szerint elkülönített alkalmazástartományt határa kre történő propagálása, és nem sikerült."
  syntax:
    content: public string[] PartialTrustVisibleAssemblies { get; set; }
    return:
      type: System.String[]
      description: "Részleges szerelvény neve, ahol a egyszerű szerelvénynév és a nyilvános kulcs áll-e a minden egyes részleges név tömbjét."
  overload: System.AppDomainSetup.PartialTrustVisibleAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PrivateBinPath
  id: PrivateBinPath
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
  fullName: System.AppDomainSetup.PrivateBinPath
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a könyvtárakat az alkalmazás alap, amelyek megadott listája titkos szerelvények."
  remarks: "Személyes szerelvények az alkalmazás ugyanazon könyvtárszerkezet lettek telepítve. Ha a megadott PrivateBinPath címtárai nem a <xref:System.AppDomainSetup.ApplicationBase%2A>, akkor a rendszer nem veszi figyelembe.</xref:System.AppDomainSetup.ApplicationBase%2A>"
  syntax:
    content: public string PrivateBinPath { get; set; }
    return:
      type: System.String
      description: "Directory neveket pontosvesszővel elválasztott listája."
  overload: System.AppDomainSetup.PrivateBinPath*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.PrivateBinPathProbe
  id: PrivateBinPathProbe
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
  fullName: System.AppDomainSetup.PrivateBinPathProbe
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a tartalmaz, vagy nem tartalmazza a karakterlánc-értéke <> </> *> alkalmazásokra, és csak a keresések a keresési elérési <> </> *>."
  remarks: "Ez a tulajdonság értékre van állítva, nem üres karakterlánc, beleértve <xref:System.String?displayProperty=fullName>(&quot;&quot;), hogy kizárja a könyvtár elérési útja – Ez azt jelenti, hogy <xref:System.AppDomainSetup.ApplicationBase%2A>– a keresési elérési utat az alkalmazáshoz, és csak a <xref:System.AppDomainSetup.PrivateBinPath%2A>.</xref:System.AppDomainSetup.PrivateBinPath%2A> szerelvények kereséséhez</xref:System.AppDomainSetup.ApplicationBase%2A> </xref:System.String?displayProperty=fullName>"
  syntax:
    content: public string PrivateBinPathProbe { get; set; }
    return:
      type: System.String
      description: "Egy null hivatkozás (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Visual Basic nyelvben) az alkalmazás alap elérési útja szerelvények keresésekor; az elérési út kizárása bármilyen null értékű karakterlánc típusú értéket tartalmazza. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.PrivateBinPathProbe*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SandboxInterop
  id: SandboxInterop
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
  fullName: System.AppDomainSetup.SandboxInterop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy felület gyorsítótárazás le van tiltva az együttműködési meghívja az alkalmazás a tartományban, így a `QueryInterface` minden hívás hajtja végre."
  remarks: "Felület gyorsítótár letiltása jelentős hatással van az együttműködési hívások teljesítményére.       Ez a tag bevezetett a [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public bool SandboxInterop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a kapcsolat gyorsítótárazás le van tiltva, az együttműködési meghívja a létrehozott és a jelenlegi alkalmazás tartományokban <xref href=&quot;System.AppDomainSetup&quot;> </xref> objektum; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AppDomainSetup.SandboxInterop*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  id: SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetCompatibilitySwitches(IEnumerable<String>)
  nameWithType: AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  fullName: System.AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Beállítja a megadott kapcsolók, így kompatibilis a megadott hibákat a .NET-keretrendszer korábbi verzióinak alkalmazástartományt."
  remarks: "Major versions of the .NET Framework sometimes introduce breaking changes from the previous version. For example, the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] introduces a small number of breaking changes from the [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Use the SetCompatibilitySwitches method to specify that one or more of these breaking changes should be rolled back for the application domain, to make the behavior compatible with the previous version of the .NET Framework.  \n  \n Each time you call this method, it replaces the existing switch settings. To erase the settings, specify `null` for the `switches` parameter.  \n  \n The set of string values you provide for `switches` can be a simple string array, because arrays implement the <xref:System.Collections.IEnumerable> interface.  \n  \n The following table provides examples of compatibility switches that can be set to restore the behavior of earlier versions of the .NET Framework.  \n  \n|Switch|Meaning|  \n|------------|-------------|  \n|\"NetFx40_LegacySecurityPolicy\"|Code access security (CAS) for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] is enabled in this application domain. See [\\&lt;NetFx40_LegacySecurityPolicy\\&gt; Element](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md).|  \n|\"NetFx40_Legacy20SortingBehavior\"|String sorting defaults for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] are enabled in this application domain. Successfully restoring legacy sorting behavior also requires the sort00001000.dll dynamic link library to be available on the local system. See [\\&lt;CompatSortNLSVersion\\&gt; Element](../Topic/%3CCompatSortNLSVersion%3E%20Element.md).|  \n|\"NetFx40_Legacy40SortingBehavior\"|String sorting defaults for the [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] and Unicode 5.0 are enabled in this application domain. Successfully restoring legacy sorting behavior also requires the sort00060101.dll dynamic link library to be available on the local system.|  \n|\"NetFx40_TimeSpanLegacyFormatMode\"|<xref:System.TimeSpan> formatting behavior for the [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] is enabled in this application domain. See [\\&lt;TimeSpan_LegacyFormatMode\\&gt; Element](../Topic/%3CTimeSpan_LegacyFormatMode%3E%20Element.md) and the \"Restoring Legacy TimeSpan Formatting\" section of the <xref:System.TimeSpan> topic.|  \n|\"UseRandomizedStringHashAlgorithm\"|The runtime calculates hash codes for strings on a per application domain basis instead of using a single hashing algorithm that produces a consistent hash code across application domains. See [\\&lt;UseRandomizedStringHashAlgorithm\\&gt; Element](../Topic/%3CUseRandomizedStringHashAlgorithm%3E%20Element.md).|"
  syntax:
    content: public void SetCompatibilitySwitches (System.Collections.Generic.IEnumerable<string> switches);
    parameters:
    - id: switches
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Adja meg a kompatibilis kapcsolók, karakterlánc-értékek egy halmazát vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vált, a meglévő kompatibilitási törlésére."
  overload: System.AppDomainSetup.SetCompatibilitySwitches*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  id: SetConfigurationBytes(System.Byte[])
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetConfigurationBytes(Byte[])
  nameWithType: AppDomainSetup.SetConfigurationBytes(Byte[])
  fullName: System.AppDomainSetup.SetConfigurationBytes(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Az alkalmazástartomány, az alkalmazás XML-konfigurációs adatokat lecseréli XML konfigurációs információkat nyújt."
  remarks: "A SetConfigurationBytes metódus cserélje le a konfigurációs adatokat az új tartományt hoz létre alkalmazást alkalmazás lehetőséget biztosít. A konfigurációs fájl adatainak `value`a felváltja az alkalmazás a konfigurációs fájl információit. Például a Example.exe alkalmazás új tartományt hoz létre alkalmazást, ha azt lecserélheti a konfigurációs információ eredetileg a Example.exe.config fájlból.      > [!IMPORTANT] > Egyes fogyasztók a konfigurációs fájl adatokat a SetConfigurationBytes metódus által tárolt adatokat nem használja. A futtatókörnyezet nem érvényesítik. Győződjön meg arról, hogy az összes konfigurációs fájl adatokat egy új alkalmazás tartományban váltja fel, használja a <xref:System.AppDomainSetup.ConfigurationFile%2A>konfigurációs fájlt megadó tulajdonság.</xref:System.AppDomainSetup.ConfigurationFile%2A> A SetConfigurationBytes metódus kötés szerelvény befolyásolja.       Az XML-t `value` megegyezik egy normál konfigurációs fájlban lévő XML azzal a különbséggel, hogy azt tárolja egy <xref:System.Byte>tömb.</xref:System.Byte>"
  syntax:
    content: public void SetConfigurationBytes (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "Az alkalmazástartomány használandó XML konfigurációs adatokat tartalmazó tömb."
  overload: System.AppDomainSetup.SetConfigurationBytes*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  id: SetNativeFunction(System.String,System.Int32,System.IntPtr)
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: SetNativeFunction(String,Int32,IntPtr)
  nameWithType: AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  fullName: System.AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "A közös nyelvi futtatókörnyezet biztosít egy alternatív implementáció egy karakterlánc-összehasonlítási függvény."
  remarks: "A következő karakterlánc-összehasonlítási és módszerek rendezés felülbírálhatja a SetNativeFunction metódus:- `IsNLSDefinedString`       -    `CompareStringEx`       -    `LCMapStringEx`       -    `FindNLSStringEx`       -    `CompareStringOrdinal`       -    `GetNLSVersion` ezeket a funkciókat kapcsolatos információkért lásd: [nemzeti nyelvi támogatás funkciók](http://go.microsoft.com/fwlink/?LinkId=228134)."
  syntax:
    content: public void SetNativeFunction (string functionName, int functionVersion, IntPtr functionPointer);
    parameters:
    - id: functionName
      type: System.String
      description: "A karakterlánc összehasonlító függvény felülbírálása neve."
    - id: functionVersion
      type: System.Int32
      description: "A funkció verziója. A [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], értéke 1 vagy nagyobb lehet."
    - id: functionPointer
      type: System.IntPtr
      description: "A függvény, amely felülbírálja mutató `functionName`."
  overload: System.AppDomainSetup.SetNativeFunction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>functionName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>functionVersion</code>Nincs 1 vagy nagyobb.       – vagy – <code>functionPointer</code> van &lt;xref:System.IntPtr?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.AppDomainSetup.ShadowCopyDirectories
  id: ShadowCopyDirectories
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
  fullName: System.AppDomainSetup.ShadowCopyDirectories
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a fájlneveket a tartalmazó szerelvények árnyékmásolatot."
  remarks: "Ha árnyékmásolat engedélyezve van, az alapértelmezett érték az összes szerelvényben található keresztül probing; árnyékmásolat Ez azt jelenti, hogy a könyvtárak a megadott a <xref:System.AppDomainSetup.PrivateBinPath%2A>és <xref:System.AppDomainSetup.ApplicationBase%2A>Tulajdonságok.</xref:System.AppDomainSetup.ApplicationBase%2A> </xref:System.AppDomainSetup.PrivateBinPath%2A> A ShadowCopyDirectories tulajdonság az árnyékmásolat korlátozza a szerelvények ShadowCopyDirectories által megadott könyvtárban.       Ha ShadowCopyDirectories tulajdonság nem rendel hozzá egy karakterlánc, vagy ha ez a tulajdonság `null`, a könyvtárak által meghatározott összes szerelvényeket a <xref:System.AppDomainSetup.ApplicationBase%2A>és <xref:System.AppDomainSetup.PrivateBinPath%2A>tulajdonságainak árnyékmásolat.</xref:System.AppDomainSetup.PrivateBinPath%2A> </xref:System.AppDomainSetup.ApplicationBase%2A>      > [!IMPORTANT] > Directory elérési utak nem tartalmazhatnak pontosvesszővel válassza el, mert a pontosvessző elválasztó karaktert. Nincs nincs pontosvesszővel válassza el az escape-karakter.       Árnyékmásolat érvényben van, amikor szerelvényfájljait egy másik helyre kerülnek, mielőtt a szerelvény betöltése. Az eredeti szerelvényfájl nem zárolva van, ezért is frissíthetők. Az árnyékmásolat további információkért lásd: [árnyékmásolat másolása szerelvények](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string ShadowCopyDirectories { get; set; }
    return:
      type: System.String
      description: "Directory neveket pontosvesszővel elválasztott listája."
  overload: System.AppDomainSetup.ShadowCopyDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.ShadowCopyFiles
  id: ShadowCopyFiles
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
  fullName: System.AppDomainSetup.ShadowCopyFiles
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a karakterlánc, amely azt jelzi, hogy árnyékmásolat van kapcsolva."
  remarks: "Az árnyékmásolat további információkért lásd: [árnyékmásolat másolása szerelvények](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string ShadowCopyFiles { get; set; }
    return:
      type: System.String
      description: "A karakterlánc értéke &quot;true&quot; annak jelzésére, hogy az árnyékmásolat be van kapcsolva; vagy &quot;false&quot;, annak jelzésére, hogy az árnyékmásolat ki van kapcsolva."
  overload: System.AppDomainSetup.ShadowCopyFiles*
  exceptions: []
  platform:
  - net462
- uid: System.AppDomainSetup.TargetFrameworkName
  id: TargetFrameworkName
  parent: System.AppDomainSetup
  langs:
  - csharp
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
  fullName: System.AppDomainSetup.TargetFrameworkName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Lekérdezi vagy beállítja a célverzió és a profil az alkalmazástartományt, a .NET-keretrendszer által elemezhető formátumú meghatározó karakterlánc a &lt;xref:System.Runtime.Versioning.FrameworkName.%23ctor%28System.String%29?displayProperty=fullName&gt; konstruktor."
  remarks: "Állítsa ezt a tulajdonságot, hogy a jelenleg futó verzióját, hogy az alkalmazástartomány betölteni, és futtassa a cél verzióját és a profil lefordított szerelvények használható. Ha a jelenleg futó verzióját választható viselkedéseket, amelyek hatással vannak a kompatibilitási kód, amely a célként megadott verziójával fordítottak le, azt engedélyezheti vagy letilthatja a ezen viselkedés, szükség esetén való kompatibilitás javítása érdekében. Ez akkor lehet hasznos, ha egy alkalmazás-bővítmények fordítása különálló alkalmazáskészletekben tartományokban futtatásával több verziójának a .NET-keretrendszer támogatja.       Az ügyfélalkalmazások, a TargetFrameworkName tulajdonság kikövetkeztetve a a <xref:System.Runtime.Versioning.TargetFrameworkAttribute>attribútum.</xref:System.Runtime.Versioning.TargetFrameworkAttribute> A [!INCLUDE[vs_dev10_long](~/add/includes/vs-dev10-long-md.md)] , és később, ez az attribútum a projekt beállítás alapján automatikusan szerelvény **Célkeretrendszer** tulajdonság."
  syntax:
    content: public string TargetFrameworkName { get; set; }
    return:
      type: System.String
      description: "A célverzió és a profilt."
  overload: System.AppDomainSetup.TargetFrameworkName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.MemberAccessException
  isExternal: true
  name: System.MemberAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.AppDomainSetup.#ctor
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup()
  nameWithType: AppDomainSetup.AppDomainSetup()
  fullName: System.AppDomainSetup.AppDomainSetup()
- uid: System.AppDomainSetup.#ctor(System.ActivationContext)
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup(ActivationContext)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationContext)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationContext)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup(ActivationArguments)
  nameWithType: AppDomainSetup.AppDomainSetup(ActivationArguments)
  fullName: System.AppDomainSetup.AppDomainSetup(ActivationArguments)
- uid: System.Runtime.Hosting.ActivationArguments
  parent: System.Runtime.Hosting
  isExternal: false
  name: ActivationArguments
  nameWithType: ActivationArguments
  fullName: System.Runtime.Hosting.ActivationArguments
- uid: System.AppDomainSetup.ActivationArguments
  parent: System.AppDomainSetup
  isExternal: false
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
  fullName: System.AppDomainSetup.ActivationArguments
- uid: System.AppDomainSetup.AppDomainInitializer
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
  fullName: System.AppDomainSetup.AppDomainInitializer
- uid: System.AppDomainInitializer
  parent: System
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainInitializer
  fullName: System.AppDomainInitializer
- uid: System.AppDomainSetup.AppDomainInitializerArguments
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
  fullName: System.AppDomainSetup.AppDomainInitializerArguments
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AppDomainSetup.AppDomainManagerAssembly
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
  fullName: System.AppDomainSetup.AppDomainManagerAssembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AppDomainSetup.AppDomainManagerType
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
  fullName: System.AppDomainSetup.AppDomainManagerType
- uid: System.AppDomainSetup.ApplicationBase
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
  fullName: System.AppDomainSetup.ApplicationBase
- uid: System.AppDomainSetup.ApplicationName
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
  fullName: System.AppDomainSetup.ApplicationName
- uid: System.AppDomainSetup.ApplicationTrust
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
  fullName: System.AppDomainSetup.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.AppDomainSetup.CachePath
  parent: System.AppDomainSetup
  isExternal: false
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
  fullName: System.AppDomainSetup.CachePath
- uid: System.AppDomainSetup.ConfigurationFile
  parent: System.AppDomainSetup
  isExternal: false
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
  fullName: System.AppDomainSetup.ConfigurationFile
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
  fullName: System.AppDomainSetup.DisallowApplicationBaseProbing
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AppDomainSetup.DisallowBindingRedirects
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
  fullName: System.AppDomainSetup.DisallowBindingRedirects
- uid: System.AppDomainSetup.DisallowCodeDownload
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
  fullName: System.AppDomainSetup.DisallowCodeDownload
- uid: System.AppDomainSetup.DisallowPublisherPolicy
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
  fullName: System.AppDomainSetup.DisallowPublisherPolicy
- uid: System.AppDomainSetup.DynamicBase
  parent: System.AppDomainSetup
  isExternal: false
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
  fullName: System.AppDomainSetup.DynamicBase
- uid: System.AppDomainSetup.GetConfigurationBytes
  parent: System.AppDomainSetup
  isExternal: false
  name: GetConfigurationBytes()
  nameWithType: AppDomainSetup.GetConfigurationBytes()
  fullName: System.AppDomainSetup.GetConfigurationBytes()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AppDomainSetup.LicenseFile
  parent: System.AppDomainSetup
  isExternal: false
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
  fullName: System.AppDomainSetup.LicenseFile
- uid: System.AppDomainSetup.LoaderOptimization
  parent: System.AppDomainSetup
  isExternal: false
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
  fullName: System.AppDomainSetup.LoaderOptimization
- uid: System.LoaderOptimization
  parent: System
  isExternal: false
  name: LoaderOptimization
  nameWithType: LoaderOptimization
  fullName: System.LoaderOptimization
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies
  parent: System.AppDomainSetup
  isExternal: false
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
  fullName: System.AppDomainSetup.PartialTrustVisibleAssemblies
- uid: System.AppDomainSetup.PrivateBinPath
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
  fullName: System.AppDomainSetup.PrivateBinPath
- uid: System.AppDomainSetup.PrivateBinPathProbe
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
  fullName: System.AppDomainSetup.PrivateBinPathProbe
- uid: System.AppDomainSetup.SandboxInterop
  parent: System.AppDomainSetup
  isExternal: false
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
  fullName: System.AppDomainSetup.SandboxInterop
- uid: System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})
  parent: System.AppDomainSetup
  isExternal: false
  name: SetCompatibilitySwitches(IEnumerable<String>)
  nameWithType: AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
  fullName: System.AppDomainSetup.SetCompatibilitySwitches(IEnumerable<String>)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AppDomainSetup.SetConfigurationBytes(System.Byte[])
  parent: System.AppDomainSetup
  isExternal: false
  name: SetConfigurationBytes(Byte[])
  nameWithType: AppDomainSetup.SetConfigurationBytes(Byte[])
  fullName: System.AppDomainSetup.SetConfigurationBytes(Byte[])
- uid: System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)
  parent: System.AppDomainSetup
  isExternal: false
  name: SetNativeFunction(String,Int32,IntPtr)
  nameWithType: AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
  fullName: System.AppDomainSetup.SetNativeFunction(String,Int32,IntPtr)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.AppDomainSetup.ShadowCopyDirectories
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
  fullName: System.AppDomainSetup.ShadowCopyDirectories
- uid: System.AppDomainSetup.ShadowCopyFiles
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
  fullName: System.AppDomainSetup.ShadowCopyFiles
- uid: System.AppDomainSetup.TargetFrameworkName
  parent: System.AppDomainSetup
  isExternal: false
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
  fullName: System.AppDomainSetup.TargetFrameworkName
- uid: System.AppDomainSetup.#ctor*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainSetup
  nameWithType: AppDomainSetup.AppDomainSetup
- uid: System.AppDomainSetup.ActivationArguments*
  parent: System.AppDomainSetup
  isExternal: false
  name: ActivationArguments
  nameWithType: AppDomainSetup.ActivationArguments
- uid: System.AppDomainSetup.AppDomainInitializer*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializer
  nameWithType: AppDomainSetup.AppDomainInitializer
- uid: System.AppDomainSetup.AppDomainInitializerArguments*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainInitializerArguments
  nameWithType: AppDomainSetup.AppDomainInitializerArguments
- uid: System.AppDomainSetup.AppDomainManagerAssembly*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerAssembly
  nameWithType: AppDomainSetup.AppDomainManagerAssembly
- uid: System.AppDomainSetup.AppDomainManagerType*
  parent: System.AppDomainSetup
  isExternal: false
  name: AppDomainManagerType
  nameWithType: AppDomainSetup.AppDomainManagerType
- uid: System.AppDomainSetup.ApplicationBase*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationBase
  nameWithType: AppDomainSetup.ApplicationBase
- uid: System.AppDomainSetup.ApplicationName*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationName
  nameWithType: AppDomainSetup.ApplicationName
- uid: System.AppDomainSetup.ApplicationTrust*
  parent: System.AppDomainSetup
  isExternal: false
  name: ApplicationTrust
  nameWithType: AppDomainSetup.ApplicationTrust
- uid: System.AppDomainSetup.CachePath*
  parent: System.AppDomainSetup
  isExternal: false
  name: CachePath
  nameWithType: AppDomainSetup.CachePath
- uid: System.AppDomainSetup.ConfigurationFile*
  parent: System.AppDomainSetup
  isExternal: false
  name: ConfigurationFile
  nameWithType: AppDomainSetup.ConfigurationFile
- uid: System.AppDomainSetup.DisallowApplicationBaseProbing*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowApplicationBaseProbing
  nameWithType: AppDomainSetup.DisallowApplicationBaseProbing
- uid: System.AppDomainSetup.DisallowBindingRedirects*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowBindingRedirects
  nameWithType: AppDomainSetup.DisallowBindingRedirects
- uid: System.AppDomainSetup.DisallowCodeDownload*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowCodeDownload
  nameWithType: AppDomainSetup.DisallowCodeDownload
- uid: System.AppDomainSetup.DisallowPublisherPolicy*
  parent: System.AppDomainSetup
  isExternal: false
  name: DisallowPublisherPolicy
  nameWithType: AppDomainSetup.DisallowPublisherPolicy
- uid: System.AppDomainSetup.DynamicBase*
  parent: System.AppDomainSetup
  isExternal: false
  name: DynamicBase
  nameWithType: AppDomainSetup.DynamicBase
- uid: System.AppDomainSetup.GetConfigurationBytes*
  parent: System.AppDomainSetup
  isExternal: false
  name: GetConfigurationBytes
  nameWithType: AppDomainSetup.GetConfigurationBytes
- uid: System.AppDomainSetup.LicenseFile*
  parent: System.AppDomainSetup
  isExternal: false
  name: LicenseFile
  nameWithType: AppDomainSetup.LicenseFile
- uid: System.AppDomainSetup.LoaderOptimization*
  parent: System.AppDomainSetup
  isExternal: false
  name: LoaderOptimization
  nameWithType: AppDomainSetup.LoaderOptimization
- uid: System.AppDomainSetup.PartialTrustVisibleAssemblies*
  parent: System.AppDomainSetup
  isExternal: false
  name: PartialTrustVisibleAssemblies
  nameWithType: AppDomainSetup.PartialTrustVisibleAssemblies
- uid: System.AppDomainSetup.PrivateBinPath*
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPath
  nameWithType: AppDomainSetup.PrivateBinPath
- uid: System.AppDomainSetup.PrivateBinPathProbe*
  parent: System.AppDomainSetup
  isExternal: false
  name: PrivateBinPathProbe
  nameWithType: AppDomainSetup.PrivateBinPathProbe
- uid: System.AppDomainSetup.SandboxInterop*
  parent: System.AppDomainSetup
  isExternal: false
  name: SandboxInterop
  nameWithType: AppDomainSetup.SandboxInterop
- uid: System.AppDomainSetup.SetCompatibilitySwitches*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetCompatibilitySwitches
  nameWithType: AppDomainSetup.SetCompatibilitySwitches
- uid: System.AppDomainSetup.SetConfigurationBytes*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetConfigurationBytes
  nameWithType: AppDomainSetup.SetConfigurationBytes
- uid: System.AppDomainSetup.SetNativeFunction*
  parent: System.AppDomainSetup
  isExternal: false
  name: SetNativeFunction
  nameWithType: AppDomainSetup.SetNativeFunction
- uid: System.AppDomainSetup.ShadowCopyDirectories*
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyDirectories
  nameWithType: AppDomainSetup.ShadowCopyDirectories
- uid: System.AppDomainSetup.ShadowCopyFiles*
  parent: System.AppDomainSetup
  isExternal: false
  name: ShadowCopyFiles
  nameWithType: AppDomainSetup.ShadowCopyFiles
- uid: System.AppDomainSetup.TargetFrameworkName*
  parent: System.AppDomainSetup
  isExternal: false
  name: TargetFrameworkName
  nameWithType: AppDomainSetup.TargetFrameworkName
