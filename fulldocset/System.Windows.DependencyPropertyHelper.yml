### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyPropertyHelper
  id: DependencyPropertyHelper
  children:
  - System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  langs:
  - csharp
  name: DependencyPropertyHelper
  nameWithType: DependencyPropertyHelper
  fullName: System.Windows.DependencyPropertyHelper
  type: Class
  summary: "Egyetlen segítő módszert biztosít a (<xref:System.Windows.DependencyPropertyHelper.GetValueSource*>), amely jelzi, hogy az érvényes érték a függőség tulajdonság tulajdonság rendszer forrásának.</xref:System.Windows.DependencyPropertyHelper.GetValueSource*>"
  remarks: "A[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] tulajdonság rendszer elég bonyolult, és az értékeket, hogy vélhetően, bemeneti adatokat, egy meghatározott érték meghatározása sorrend alapján különböző ésszerűsítéséről támaszkodik. Mert a források potenciálisan származik futásidejű kódot, a lefordított jelölés során, vagy akár a futásidejű felhasználói beállítások, ez hasznos lehet tudni, hogy pontosan melyik résztvevő a függőség tulajdonság értéke rendszerben létrehozott szerezze be a következő meghívásakor: az érték <xref:System.Windows.DependencyObject.GetValue%2A>a tulajdonságon alapuló futásidőben.</xref:System.Windows.DependencyObject.GetValue%2A> Ha az érték egy másik forrásból származik, mint kellett szánt, szükség lehet úgy, hogy az alkalmazás bizonyos elemeit. Érték forrása lehet stílus, téma, helyi értéket, animáció, egy kötést, vagy rendszerbeállítások témák vagy a rendszererőforrások – például futásidejű alapján értéket. További információkért lásd: [függőség tulajdonság értéke sorrend](~/add/includes/ajax-current-ext-md.md).       Egy másik mechanizmus, amely általában jelent tulajdonság ahelyett, hogy a tulajdonság egy olyan objektumon, egy adott példánya a tulajdonság metaadatai. A tulajdonság metaadatai keresési meghívásával <xref:System.Windows.DependencyProperty.GetMetadata%2A>és megvizsgálta a visszaadott <xref:System.Windows.PropertyMetadata>(vagy egy több lehetséges származtatott osztályok, a visszaadott tulajdonság metaadatai castable számára).</xref:System.Windows.PropertyMetadata> </xref:System.Windows.DependencyProperty.GetMetadata%2A>"
  syntax:
    content: public static class DependencyPropertyHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  id: GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.DependencyPropertyHelper
  langs:
  - csharp
  name: GetValueSource(DependencyObject,DependencyProperty)
  nameWithType: DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  fullName: System.Windows.DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adja vissza, amely egy adott kapcsolatos különféle metaadatokat és tulajdonság rendszer tulajdonságait egy adott függőségi tulajdonság jelentések struktúra <xref href=&quot;System.Windows.DependencyObject&quot;> </xref>."
  remarks: "Ezt a módszert kell hívnia a környezetben, úgy, hogy a tulajdonság értékének meghatározása késői résztvevők képesek egy tulajdonságot meg. Például kötések nem lehet aktív egy tulajdonságot a kivéve, ha az elem fájában összes résztvevő elem be van töltve a aszinkron kötés propagálja és a kötési objektum van csatlakoztatva. Erőforrások például az összes szükséges téma szótárak hasonlóan elérhetőnek kell lennie."
  syntax:
    content: public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);
    parameters:
    - id: dependencyObject
      type: System.Windows.DependencyObject
      description: "Az elem, amely tartalmazza a `dependencyProperty` jelentés információhoz."
    - id: dependencyProperty
      type: System.Windows.DependencyProperty
      description: "A jelentés adatai a függőség tulajdonság azonosítója."
    return:
      type: System.Windows.ValueSource
      description: "A <xref href=&quot;System.Windows.ValueSource&quot;> </xref> struktúrában, amelynek a megadott adatokat."
  overload: System.Windows.DependencyPropertyHelper.GetValueSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.DependencyPropertyHelper
  isExternal: false
  name: GetValueSource(DependencyObject,DependencyProperty)
  nameWithType: DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
  fullName: System.Windows.DependencyPropertyHelper.GetValueSource(DependencyObject,DependencyProperty)
- uid: System.Windows.ValueSource
  parent: System.Windows
  isExternal: false
  name: ValueSource
  nameWithType: ValueSource
  fullName: System.Windows.ValueSource
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.DependencyPropertyHelper.GetValueSource*
  parent: System.Windows.DependencyPropertyHelper
  isExternal: false
  name: GetValueSource
  nameWithType: DependencyPropertyHelper.GetValueSource
