### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerPrefixCollection
  id: HttpListenerPrefixCollection
  children:
  - System.Net.HttpListenerPrefixCollection.Add(System.String)
  - System.Net.HttpListenerPrefixCollection.Clear
  - System.Net.HttpListenerPrefixCollection.Contains(System.String)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  - System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  - System.Net.HttpListenerPrefixCollection.Count
  - System.Net.HttpListenerPrefixCollection.GetEnumerator
  - System.Net.HttpListenerPrefixCollection.IsReadOnly
  - System.Net.HttpListenerPrefixCollection.IsSynchronized
  - System.Net.HttpListenerPrefixCollection.Remove(System.String)
  - System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: HttpListenerPrefixCollection
  nameWithType: HttpListenerPrefixCollection
  fullName: System.Net.HttpListenerPrefixCollection
  type: Class
  summary: "Egységes erőforrás-azonosító (URI) előtagokat tároló gyűjtemény jelöli <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektumok."
  remarks: "A <xref:System.Net.HttpListener.Prefixes%2A>tulajdonság adja vissza ehhez a gyűjteményhez példányait.</xref:System.Net.HttpListener.Prefixes%2A>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its HttpListenerPrefixCollection.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_1_1.cs)]"
  syntax:
    content: 'public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection<string>, System.Collections.Generic.IEnumerable<string>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.String>
  - System.Collections.Generic.IEnumerable<System.String>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Egy egységes erőforrás-azonosító (URI) előtag hozzáadása a gyűjteményhez."
  remarks: "Ez a módszer egy URI-előtag hozzáadása kezeli a társított előtagok készletét <xref:System.Net.HttpListener>objektum.</xref:System.Net.HttpListener> Ellenőrzésekor `uriPrefix` érvényes érdekében esetben figyelmen kívül hagyja.       A URI karakterlánc előtagja áll egy protokollt (http vagy https), a gazdagép, egy opcionális port és egy opcionális elérési útja, például &quot;`http://www.contoso.com:8080/customerData``/`&quot;. Az előtag a perjellel (&quot;/&quot;) kell végződniük. A <xref:System.Net.HttpListener>a előtaggal, amely a legjobban illik a kért URI válaszol a kérésre.</xref:System.Net.HttpListener> Több <xref:System.Net.HttpListener>objektumok nem adható hozzá ugyanazon előtaggal.</xref:System.Net.HttpListener> Egy <xref:System.Net.HttpListenerException>kivételhiba fordul elő, ha egy <xref:System.Net.HttpListener>ad hozzá, amely már része egy előtagot használja.</xref:System.Net.HttpListener> </xref:System.Net.HttpListenerException>       Ha a port meg van adva, az állomás elem lehet cserélni &quot;`*`&quot; annak jelzésére, hogy a <xref:System.Net.HttpListener>fogad el, ha a kért URI-azonosító nem egyezik meg a bármely más előtag a port küldött kérelmeket.</xref:System.Net.HttpListener> Például minden kérelmek fogadására portra küldött 8080, amikor a kért URI nem kezeli a más <xref:System.Net.HttpListener>, az előtag &quot;`http://*:8080``/`&quot;.</xref:System.Net.HttpListener> Hasonlóképpen annak meghatározása, hogy a <xref:System.Net.HttpListener>fogad el egy portra küldött összes kérelem az állomás elemet cserélje le a &quot;`+`&quot;character&quot;,`https://+:8080`/&quot;.</xref:System.Net.HttpListener> A &quot;`*`&quot;és&quot;`+`&quot; karaktert is meg lehet, amely tartalmazza az elérési utak előtagok szerepel.       .NET 4.5.3 és a Windows 10-es verziótól kezdődően helyettesítő altartományok által támogatott URI-előtagok által kezelt egy <xref:System.Net.HttpListener>objektum.</xref:System.Net.HttpListener> Helyettesítő karakteres altartomány megadásához használja a &quot;*&quot; karaktert az állomásnév az URI-előtag részeként: például `http://*.foo.com/`, és adja át ennek argumentumként a HttpListenerPrefixCollection.Add metódus. Ez fog működni a .NET 4.5.3 és a Windows 10. a korábbi verziókban ez hoz létre egy<xref:System.Net.HttpListenerException></xref:System.Net.HttpListenerException>"
  example:
  - "The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/m-system.net.httplistene_16_1.cs)]"
  syntax:
    content: public void Add (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "A <xref:System.String>, amely azonosítja a URI adatokat a rendszer összehasonlítja a bejövő kérelmeket.</xref:System.String> Az előtag a perjellel (&quot;/&quot;) kell végződniük."
  overload: System.Net.HttpListenerPrefixCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uriPrefix</code>nem használja fel a http:// vagy https:// séma. Ezek a csak a támogatott sémák a <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektumok.       – vagy – <code>uriPrefix</code> nem megfelelően formázott URI-előtag van. Győződjön meg arról, hogy leállt van a karakterlánc a &quot;/&quot;."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Net.HttpListener&quot;> </xref> a hozzárendelt gyűjtemény le van zárva."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Windows függvény hívása nem sikerült. Ellenőrizze a kivétel <xref:System.Net.HttpListenerException.ErrorCode*>tulajdonság a kivétel a hiba okának megállapításához.</xref:System.Net.HttpListenerException.ErrorCode*> Ezt a kivételt vált ki, ha egy másik <xref href=&quot;System.Net.HttpListener&quot;> </xref> már hozzá van adva a előtag <code> uriPrefix </code>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Clear
  id: Clear
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Az egységes erőforrás-azonosító (URI) előtagok eltávolítja a gyűjteményből."
  remarks: "A metódus hívása után nem indíthatja el a társított <xref:System.Net.HttpListener>Új előtagok; hozzáadása nélkül ehhez, ha kivétel történik.</xref:System.Net.HttpListener>"
  example:
  - "The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#6](~/add/codesnippet/csharp/m-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Net.HttpListenerPrefixCollection.Clear*
  exceptions:
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Windows függvény hívása nem sikerült. Ellenőrizze a kivétel <xref:System.Net.HttpListenerException.ErrorCode*>tulajdonság a kivétel a hiba okának megállapításához.</xref:System.Net.HttpListenerException.ErrorCode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Net.HttpListener&quot;> </xref> a hozzárendelt gyűjtemény le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Értéket ad vissza egy <xref:System.Boolean>érték, amely jelzi, hogy megadott előtag szerepel a gyűjteményben.</xref:System.Boolean>"
  remarks: "A megadott előtag pontosan meg kell egyeznie egy meglévő értékkel."
  example:
  - "The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.  \n  \n [!code-cs[Net_Listener_Basic#4](~/add/codesnippet/csharp/m-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public bool Contains (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "A <xref:System.String>vizsgálandó egységes erőforrás-azonosító (URI) előtagot, amely tartalmazza</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a gyűjtemény által megadott előtagot tartalmaz <code> uriPrefix </code>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "A tartalmát egy <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> a megadott tömb."
  remarks: "A tömb karakterláncokat tartalmazhat képesnek kell lennie, és nem lehet többdimenziós."
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int offset);
    parameters:
    - id: array
      type: System.Array
      description: "Dimenzionális egy <xref:System.Array>, amely fogadja az egységes erőforrás-azonosító (URI) előtagokat ebben a gyűjteményben.</xref:System.Array>"
    - id: offset
      type: System.Int32
      description: "A nulla alapú indexét `array` mely másolása megkezdődik."
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>egynél több dimenziója van."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ez a gyűjtemény tartalmaz további elemek is tárolható, mint <code> array </code> kezdődő <code> offset </code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Net.HttpListener&quot;> </xref> a hozzárendelt gyűjtemény le van zárva."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "<code>array</code>nem lehet tárolni a karakterlánc-értékek."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "A tartalmát egy <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> a megadott karakterlánc-tömbben."
  remarks: "A tömb karakterláncokat tartalmazhat képesnek kell lennie, és nem lehet többdimenziós."
  example:
  - "The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.  \n  \n [!code-cs[Net_Listener_Basic#7](~/add/codesnippet/csharp/m-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public void CopyTo (string[] array, int offset);
    parameters:
    - id: array
      type: System.String[]
      description: "Egy dimenzionális karakterlánc-tömbben, amely megkapja az egységes erőforrás-azonosító (URI) előtagokat ebben a gyűjteményben."
    - id: offset
      type: System.Int32
      description: "A nulla alapú indexét `array` mely másolása megkezdődik."
  overload: System.Net.HttpListenerPrefixCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>egynél több dimenziója van."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Ez a gyűjtemény tartalmaz további elemek is tárolható, mint <code> array </code> kezdődő <code> offset </code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Net.HttpListener&quot;> </xref> a hozzárendelt gyűjtemény le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Count
  id: Count
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a gyűjteményben szereplő előtagok számát."
  remarks: ''
  example:
  - "The following code example displays the prefixes in a collection.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/p-system.net.httplistene_43_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Egy <xref:System.Int32>, amely tartalmazza a gyűjtemény számához.</xref:System.Int32>"
  overload: System.Net.HttpListenerPrefixCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Olyan objektum, amely segítségével a gyűjtemény iterációt adja vissza."
  remarks: "Ez a metódus által visszaadott objektum kezdetben el, a gyűjtemény első eleme elé. Meg kell hívnia a <xref:System.Collections.IEnumerator.MoveNext%2A>metódus próbál hozzáférni az első elem.</xref:System.Collections.IEnumerator.MoveNext%2A> Az aktuális pozíció helyen lévő elem elérésére hívja a <xref:System.Collections.IEnumerator.Current%2A>tulajdonság.</xref:System.Collections.IEnumerator.Current%2A>       A számbavevő a gyűjtemény nem módosítható. Ha a gyűjtemény módosítás alatt enumerátor használja, vagy <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>egy <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> hatására</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> a pozíció beállítása       Enumerálók részletes leírását a dokumentációban a a <xref:System.Collections.IEnumerator>osztály és a <xref:System.Collections.IEnumerable.GetEnumerator%2A>metódus.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  example:
  - "The following code example demonstrates enumerating through a collection. Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.  \n  \n [!code-cs[Net_Listener_Basic#1](~/add/codesnippet/csharp/m-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public System.Collections.Generic.IEnumerator<string> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.String}
      description: "Egy objektum, amely megvalósítja a <xref:System.Collections.IEnumerator>felületet, és a gyűjtemény karakterláncok hozzáférést biztosít.</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy hozzáférése a gyűjteményhez csak olvasható."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Mindig vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Egy érték, amely azt jelzi, hogy hozzáférése a gyűjteményhez szinkronizálva van-e (szálbiztos) lekérése."
  remarks: "Egy gyűjtemény számbavétele alapvetően nem szálbiztos eljárást. Még ha egy gyűjtemény szinkronizálása, más szálak továbbra is módosíthatja a gyűjteményhez, amely azt eredményezi, a számbavevő a kivételt jelez. Szál biztonsági garantálja a számbavételi művelet során, a gyűjteményt, a teljes felsorolásakor zárolása vagy más szálak által végrehajtott módosítások a kivételeket."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Ez a tulajdonság mindig adja vissza <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "A megadott egységes erőforrás-azonosító (URI) eltávolítása a listából az előtagok kezeli a <xref href=&quot;System.Net.HttpListener&quot;> </xref> objektum."
  remarks: "Ha `uriPrefix` van nem szerepel a gyűjteményben, ez a metódus nincs semmi hatása."
  syntax:
    content: public bool Remove (string uriPrefix);
    parameters:
    - id: uriPrefix
      type: System.String
      description: "A <xref:System.String>, amely tartalmazza az URI-előtag eltávolításához.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <code> uriPrefix </code> található a <xref href=&quot;System.Net.HttpListenerPrefixCollection&quot;> </xref> és eltávolítása, ha <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerPrefixCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriPrefix</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.HttpListenerException
    commentId: T:System.Net.HttpListenerException
    description: "Windows függvény hívása nem sikerült. A kivétel a hiba okának megállapításához ellenőrizze a kivétel hibakódja."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A <xref href=&quot;System.Net.HttpListener&quot;> </xref> a hozzárendelt gyűjtemény le van zárva."
  platform:
  - net462
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.HttpListenerPrefixCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Olyan objektum, amely segítségével a gyűjtemény iterációt adja vissza."
  remarks: "Ez a metódus által visszaadott objektum kezdetben el, a gyűjtemény első eleme elé. Meg kell hívnia a <xref:System.Collections.IEnumerator.MoveNext%2A>metódus próbál hozzáférni az első elem.</xref:System.Collections.IEnumerator.MoveNext%2A> Az aktuális pozíció helyen lévő elem elérésére hívja a <xref:System.Collections.IEnumerator.Current%2A>tulajdonság.</xref:System.Collections.IEnumerator.Current%2A>       A számbavevő a gyűjtemény nem módosítható. Ha a gyűjtemény módosítás alatt enumerátor használja, vagy <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>egy <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> hatására</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> a pozíció beállítása       Enumerálók részletes leírását a dokumentációban a a <xref:System.Collections.IEnumerator>osztály és a <xref:System.Collections.IEnumerable.GetEnumerator%2A>metódus.</xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Collections.IEnumerator>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy objektum, amely megvalósítja a <xref:System.Collections.IEnumerator>felületet, és a gyűjtemény karakterláncok hozzáférést biztosít.</xref:System.Collections.IEnumerator>"
  overload: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.HttpListenerException
  parent: System.Net
  isExternal: false
  name: HttpListenerException
  nameWithType: HttpListenerException
  fullName: System.Net.HttpListenerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Net.HttpListenerPrefixCollection.Add(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add(String)
  nameWithType: HttpListenerPrefixCollection.Add(String)
  fullName: System.Net.HttpListenerPrefixCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerPrefixCollection.Clear
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear()
  nameWithType: HttpListenerPrefixCollection.Clear()
  fullName: System.Net.HttpListenerPrefixCollection.Clear()
- uid: System.Net.HttpListenerPrefixCollection.Contains(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains(String)
  nameWithType: HttpListenerPrefixCollection.Contains(String)
  fullName: System.Net.HttpListenerPrefixCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(Array,Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: HttpListenerPrefixCollection.CopyTo(String[],Int32)
  fullName: System.Net.HttpListenerPrefixCollection.CopyTo(String[],Int32)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerPrefixCollection.Count
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
  fullName: System.Net.HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<String>
  nameWithType: IEnumerator<String>
  fullName: System.Collections.Generic.IEnumerator<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
  fullName: System.Net.HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
  fullName: System.Net.HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove(System.String)
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove(String)
  nameWithType: HttpListenerPrefixCollection.Remove(String)
  fullName: System.Net.HttpListenerPrefixCollection.Remove(String)
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.HttpListenerPrefixCollection.Add*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Add
  nameWithType: HttpListenerPrefixCollection.Add
- uid: System.Net.HttpListenerPrefixCollection.Clear*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Clear
  nameWithType: HttpListenerPrefixCollection.Clear
- uid: System.Net.HttpListenerPrefixCollection.Contains*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Contains
  nameWithType: HttpListenerPrefixCollection.Contains
- uid: System.Net.HttpListenerPrefixCollection.CopyTo*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: CopyTo
  nameWithType: HttpListenerPrefixCollection.CopyTo
- uid: System.Net.HttpListenerPrefixCollection.Count*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Count
  nameWithType: HttpListenerPrefixCollection.Count
- uid: System.Net.HttpListenerPrefixCollection.GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpListenerPrefixCollection.GetEnumerator
- uid: System.Net.HttpListenerPrefixCollection.IsReadOnly*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpListenerPrefixCollection.IsReadOnly
- uid: System.Net.HttpListenerPrefixCollection.IsSynchronized*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpListenerPrefixCollection.IsSynchronized
- uid: System.Net.HttpListenerPrefixCollection.Remove*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: Remove
  nameWithType: HttpListenerPrefixCollection.Remove
- uid: System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.HttpListenerPrefixCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HttpListenerPrefixCollection.System.Collections.IEnumerable.GetEnumerator
