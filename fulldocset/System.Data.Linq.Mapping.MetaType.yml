### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaType
  id: MetaType
  children:
  - System.Data.Linq.Mapping.MetaType.#ctor
  - System.Data.Linq.Mapping.MetaType.Associations
  - System.Data.Linq.Mapping.MetaType.CanInstantiate
  - System.Data.Linq.Mapping.MetaType.DataMembers
  - System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember
  - System.Data.Linq.Mapping.MetaType.DerivedTypes
  - System.Data.Linq.Mapping.MetaType.Discriminator
  - System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)
  - System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)
  - System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)
  - System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod
  - System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod
  - System.Data.Linq.Mapping.MetaType.HasInheritance
  - System.Data.Linq.Mapping.MetaType.HasInheritanceCode
  - System.Data.Linq.Mapping.MetaType.HasUpdateCheck
  - System.Data.Linq.Mapping.MetaType.IdentityMembers
  - System.Data.Linq.Mapping.MetaType.InheritanceBase
  - System.Data.Linq.Mapping.MetaType.InheritanceCode
  - System.Data.Linq.Mapping.MetaType.InheritanceDefault
  - System.Data.Linq.Mapping.MetaType.InheritanceRoot
  - System.Data.Linq.Mapping.MetaType.InheritanceTypes
  - System.Data.Linq.Mapping.MetaType.IsEntity
  - System.Data.Linq.Mapping.MetaType.IsInheritanceDefault
  - System.Data.Linq.Mapping.MetaType.Model
  - System.Data.Linq.Mapping.MetaType.Name
  - System.Data.Linq.Mapping.MetaType.OnLoadedMethod
  - System.Data.Linq.Mapping.MetaType.OnValidateMethod
  - System.Data.Linq.Mapping.MetaType.PersistentDataMembers
  - System.Data.Linq.Mapping.MetaType.Table
  - System.Data.Linq.Mapping.MetaType.Type
  - System.Data.Linq.Mapping.MetaType.VersionMember
  langs:
  - csharp
  name: MetaType
  nameWithType: MetaType
  fullName: System.Data.Linq.Mapping.MetaType
  type: Class
  summary: "A tartomány objektumtípus leképezése egy adatbázis tábla oszlopainak képviseli."
  syntax:
    content: public abstract class MetaType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: MetaType()
  nameWithType: MetaType.MetaType()
  fullName: System.Data.Linq.Mapping.MetaType.MetaType()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> osztály."
  syntax:
    content: protected MetaType ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.Associations
  id: Associations
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: Associations
  nameWithType: MetaType.Associations
  fullName: System.Data.Linq.Mapping.MetaType.Associations
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi az enumerálás a társítást."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaAssociation> Associations { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaAssociation}
      description: "Társítások gyűjteménye."
  overload: System.Data.Linq.Mapping.MetaType.Associations*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.CanInstantiate
  id: CanInstantiate
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: CanInstantiate
  nameWithType: MetaType.CanInstantiate
  fullName: System.Data.Linq.Mapping.MetaType.CanInstantiate
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy az alapjául szolgáló típus lehet létrehozni a lekérdezés eredményeként."
  syntax:
    content: public abstract bool CanInstantiate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az alapul szolgáló típusa; egy lekérdezés eredményeként példányosítható Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.CanInstantiate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.DataMembers
  id: DataMembers
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: DataMembers
  nameWithType: MetaType.DataMembers
  fullName: System.Data.Linq.Mapping.MetaType.DataMembers
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi az enumerálás a adatok tagok (mezőit és tulajdonságait)."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> DataMembers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}
      description: "A adattagok gyűjteménye."
  overload: System.Data.Linq.Mapping.MetaType.DataMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember
  id: DBGeneratedIdentityMember
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: DBGeneratedIdentityMember
  nameWithType: MetaType.DBGeneratedIdentityMember
  fullName: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a tagot, amely az automatikusan létrehozott identitásoszlop jelöli."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaDataMember DBGeneratedIdentityMember { get; }
    return:
      type: System.Data.Linq.Mapping.MetaDataMember
      description: "A tag az automatikusan létrehozott identitásoszlop jelölő vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> nem automatikusan generált azonosító oszlop esetén."
  overload: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.DerivedTypes
  id: DerivedTypes
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: DerivedTypes
  nameWithType: MetaType.DerivedTypes
  fullName: System.Data.Linq.Mapping.MetaType.DerivedTypes
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "A közvetlen származtatott típusú felsorolásoknak lekérdezi az öröklési hierarchiában."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaType> DerivedTypes { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaType}
      description: "Egy metaadat-típusok enumerálása."
  overload: System.Data.Linq.Mapping.MetaType.DerivedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.Discriminator
  id: Discriminator
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: Discriminator
  nameWithType: MetaType.Discriminator
  fullName: System.Data.Linq.Mapping.MetaType.Discriminator
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a tagot, amely jelöli az öröklési Diszkriminátor oszlopot."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaDataMember Discriminator { get; }
    return:
      type: System.Data.Linq.Mapping.MetaDataMember
      description: "A tag, amely jelöli az öröklési Diszkriminátor oszlopot, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha egyik sem."
  overload: System.Data.Linq.Mapping.MetaType.Discriminator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)
  id: GetDataMember(System.Reflection.MemberInfo)
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: GetDataMember(MemberInfo)
  nameWithType: MetaType.GetDataMember(MemberInfo)
  fullName: System.Data.Linq.Mapping.MetaType.GetDataMember(MemberInfo)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a <xref href=&quot;System.Data.Linq.Mapping.MetaDataMember&quot;> </xref> a megadott tag társított."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaDataMember GetDataMember (System.Reflection.MemberInfo member);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "A tag, amelyhez a társított <xref href=&quot;System.Data.Linq.Mapping.MetaDataMember&quot;> </xref> kérik."
    return:
      type: System.Data.Linq.Mapping.MetaDataMember
      description: "A <xref href=&quot;System.Data.Linq.Mapping.MetaDataMember&quot;> </xref> társítva van a megadott tag, ha sikertelen, ha <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.GetDataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)
  id: GetInheritanceType(System.Type)
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: GetInheritanceType(Type)
  nameWithType: MetaType.GetInheritanceType(Type)
  fullName: System.Data.Linq.Mapping.MetaType.GetInheritanceType(Type)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> egy öröklési altípus."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType GetInheritanceType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A következő altípus."
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "A <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> egy öröklési altípus."
  overload: System.Data.Linq.Mapping.MetaType.GetInheritanceType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)
  id: GetTypeForInheritanceCode(System.Object)
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: GetTypeForInheritanceCode(Object)
  nameWithType: MetaType.GetTypeForInheritanceCode(Object)
  fullName: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a megadott öröklési kód társított meta-típus."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType GetTypeForInheritanceCode (object code);
    parameters:
    - id: code
      type: System.Object
      description: "Az öröklési kód."
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "A metaadat-típusa a megadott öröklési kód társított."
  overload: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod
  id: HasAnyLoadMethod
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: HasAnyLoadMethod
  nameWithType: MetaType.HasAnyLoadMethod
  fullName: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy az aktuális <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> vagy annak valamelyik körrel típusát egy `OnLoaded` metódust."
  syntax:
    content: public abstract bool HasAnyLoadMethod { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a metaadat-típusát és alap meta-e egy `OnLoaded` metódus; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod
  id: HasAnyValidateMethod
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: HasAnyValidateMethod
  nameWithType: MetaType.HasAnyValidateMethod
  fullName: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> vagy annak valamelyik körrel típusát egy `OnValidate` metódust."
  syntax:
    content: public abstract bool HasAnyValidateMethod { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a metaadat-típusát és alap meta-e egy `OnValidate` metódus; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.HasInheritance
  id: HasInheritance
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: HasInheritance
  nameWithType: MetaType.HasInheritance
  fullName: System.Data.Linq.Mapping.MetaType.HasInheritance
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi egy érték, amely jelzi, hogy a típus része egy leképezett öröklési hierarchiának."
  syntax:
    content: public abstract bool HasInheritance { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a típus része egy leképezett öröklési hierarchiának; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.HasInheritance*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.HasInheritanceCode
  id: HasInheritanceCode
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: HasInheritanceCode
  nameWithType: MetaType.HasInheritanceCode
  fullName: System.Data.Linq.Mapping.MetaType.HasInheritanceCode
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Egy érték, amely jelzi, hogy a típus azt határozza meg az öröklési kód lekérése."
  syntax:
    content: public abstract bool HasInheritanceCode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a típus határozza meg az öröklési kód; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.HasInheritanceCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.HasUpdateCheck
  id: HasUpdateCheck
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: HasUpdateCheck
  nameWithType: MetaType.HasUpdateCheck
  fullName: System.Data.Linq.Mapping.MetaType.HasUpdateCheck
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Hogy a típus rendelkezik-e bármely állandó tag, amelyre szüksége lehet az egyidejű hozzáférések optimista ütközések teszt jelző érték beolvasása."
  syntax:
    content: public abstract bool HasUpdateCheck { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a bármely állandó tag van egy <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;> </xref> eltérő házirend <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.HasUpdateCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.IdentityMembers
  id: IdentityMembers
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: IdentityMembers
  nameWithType: MetaType.IdentityMembers
  fullName: System.Data.Linq.Mapping.MetaType.IdentityMembers
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Adja meg az egyedi azonosító típusú adatok tagot felsorolásoknak lekérdezi."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> IdentityMembers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}
      description: "Tagok, amelyek meghatározzák az egyedi azonosító típusú felsorolásoknak."
  overload: System.Data.Linq.Mapping.MetaType.IdentityMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.InheritanceBase
  id: InheritanceBase
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: InheritanceBase
  nameWithType: MetaType.InheritanceBase
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceBase
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "A metaadat-alaptípus lekérdezi az öröklési hierarchiában."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType InheritanceBase { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "A metaadat-alaptípusa az aktuális öröklési hierarchiában."
  overload: System.Data.Linq.Mapping.MetaType.InheritanceBase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.InheritanceCode
  id: InheritanceCode
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: InheritanceCode
  nameWithType: MetaType.InheritanceCode
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceCode
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Egy érték, amely jelzi, hogy a típus azt határozza meg az öröklési kód lekérése."
  syntax:
    content: public abstract object InheritanceCode { get; }
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ez a típus határozza meg az öröklési kód; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.InheritanceCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.InheritanceDefault
  id: InheritanceDefault
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: InheritanceDefault
  nameWithType: MetaType.InheritanceDefault
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceDefault
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Egy érték, amely jelzi, hogy ez a típus használja az alapértelmezett egy öröklési hierarchia lekérdezi."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType InheritanceDefault { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "Az alapértelmezett típus az öröklési leképezésben metaadatait."
  overload: System.Data.Linq.Mapping.MetaType.InheritanceDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.InheritanceRoot
  id: InheritanceRoot
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: InheritanceRoot
  nameWithType: MetaType.InheritanceRoot
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceRoot
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi az öröklési hierarchia legfelső szintű típusát."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType InheritanceRoot { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "A legfelső szintű típus."
  overload: System.Data.Linq.Mapping.MetaType.InheritanceRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.InheritanceTypes
  id: InheritanceTypes
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: InheritanceTypes
  nameWithType: MetaType.InheritanceTypes
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceTypes
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi az öröklési hierarchia által meghatározott összes típus gyűjteménye."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaType> InheritanceTypes { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaType}
      description: "Az aktuális öröklési hierarchiában meta-típusok gyűjteménye."
  overload: System.Data.Linq.Mapping.MetaType.InheritanceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.IsEntity
  id: IsEntity
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: IsEntity
  nameWithType: MetaType.IsEntity
  fullName: System.Data.Linq.Mapping.MetaType.IsEntity
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> entitás típus."
  syntax:
    content: public abstract bool IsEntity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> entitás típusú; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.IsEntity*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault
  id: IsInheritanceDefault
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: IsInheritanceDefault
  nameWithType: MetaType.IsInheritanceDefault
  fullName: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Egy érték, amely jelzi, hogy ez a típus használja az alapértelmezett egy öröklési hierarchia lekérdezi."
  syntax:
    content: public abstract bool IsInheritanceDefault { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ez a típus egy öröklési hierarchia; alapértelmezett használata Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.Model
  id: Model
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: Model
  nameWithType: MetaType.Model
  fullName: System.Data.Linq.Mapping.MetaType.Model
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a <xref href=&quot;System.Data.Linq.Mapping.MetaModel&quot;> </xref> , amely tartalmazza a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref>."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaModel Model { get; }
    return:
      type: System.Data.Linq.Mapping.MetaModel
      description: "A tartalmazó meta modellre."
  overload: System.Data.Linq.Mapping.MetaType.Model*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.Name
  id: Name
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: Name
  nameWithType: MetaType.Name
  fullName: System.Data.Linq.Mapping.MetaType.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a nevét a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref>."
  remarks: "Ez a név megegyezik a közös nyelvi futtatókörnyezet (CLR) típusú nevét."
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "A jelenlegi metaadat-típus neve."
  overload: System.Data.Linq.Mapping.MetaType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.OnLoadedMethod
  id: OnLoadedMethod
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: OnLoadedMethod
  nameWithType: MetaType.OnLoadedMethod
  fullName: System.Data.Linq.Mapping.MetaType.OnLoadedMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Információ lekérése a a `OnLoaded` szerepelnie kell a metaadat-típusú metódus."
  syntax:
    content: public abstract System.Reflection.MethodInfo OnLoadedMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "Leírása a `OnLoaded` metódus a metaadat-típus."
  overload: System.Data.Linq.Mapping.MetaType.OnLoadedMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.OnValidateMethod
  id: OnValidateMethod
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: OnValidateMethod
  nameWithType: MetaType.OnValidateMethod
  fullName: System.Data.Linq.Mapping.MetaType.OnValidateMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Információ lekérése a a `OnValidate` szerepelnie kell a metaadat-típusú metódus."
  syntax:
    content: public abstract System.Reflection.MethodInfo OnValidateMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "Leírása a `OnValidate` metódus a metaadat-típus."
  overload: System.Data.Linq.Mapping.MetaType.OnValidateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.PersistentDataMembers
  id: PersistentDataMembers
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: PersistentDataMembers
  nameWithType: MetaType.PersistentDataMembers
  fullName: System.Data.Linq.Mapping.MetaType.PersistentDataMembers
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a állandó összes adattagok gyűjteménye."
  remarks: "Állandó adattagok ezen mezőket és oszlopokat leképezett tulajdonságok."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember> PersistentDataMembers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}
      description: "Az aktuális típushoz a metaadatok tagok gyűjteménye."
  overload: System.Data.Linq.Mapping.MetaType.PersistentDataMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.Table
  id: Table
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: Table
  nameWithType: MetaType.Table
  fullName: System.Data.Linq.Mapping.MetaType.Table
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a <xref href=&quot;System.Data.Linq.Mapping.MetaTable&quot;> </xref> , amely használja, ez <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> sor definíciójához."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaTable Table { get; }
    return:
      type: System.Data.Linq.Mapping.MetaTable
      description: "Meta-táblázat, amely a jelenlegi metaadat-típus használ a sor definíciója."
  overload: System.Data.Linq.Mapping.MetaType.Table*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.Type
  id: Type
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: Type
  nameWithType: MetaType.Type
  fullName: System.Data.Linq.Mapping.MetaType.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Lekérdezi a közös nyelvi futtatókörnyezet (CLR) alaptípusának."
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "A társított CLR-típus."
  overload: System.Data.Linq.Mapping.MetaType.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaType.VersionMember
  id: VersionMember
  parent: System.Data.Linq.Mapping.MetaType
  langs:
  - csharp
  name: VersionMember
  nameWithType: MetaType.VersionMember
  fullName: System.Data.Linq.Mapping.MetaType.VersionMember
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "A sor-verzió vagy Timestamp típusú oszlop lekérdezi a <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref>."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaDataMember VersionMember { get; }
    return:
      type: System.Data.Linq.Mapping.MetaDataMember
      description: "A metaadatok tag meta-típus, a sor-verzió vagy Timestamp típusú oszlop jelölő vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha egyik sem."
  overload: System.Data.Linq.Mapping.MetaType.VersionMember*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaType.#ctor
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: MetaType()
  nameWithType: MetaType.MetaType()
  fullName: System.Data.Linq.Mapping.MetaType.MetaType()
- uid: System.Data.Linq.Mapping.MetaType.Associations
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Associations
  nameWithType: MetaType.Associations
  fullName: System.Data.Linq.Mapping.MetaType.Associations
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaAssociation}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaAssociation>
  nameWithType: ReadOnlyCollection<MetaAssociation>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaAssociation>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Linq.Mapping.MetaAssociation>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Linq.Mapping.MetaAssociation
    name: MetaAssociation
    nameWithType: MetaAssociation
    fullName: MetaAssociation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Mapping.MetaType.CanInstantiate
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: CanInstantiate
  nameWithType: MetaType.CanInstantiate
  fullName: System.Data.Linq.Mapping.MetaType.CanInstantiate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.MetaType.DataMembers
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: DataMembers
  nameWithType: MetaType.DataMembers
  fullName: System.Data.Linq.Mapping.MetaType.DataMembers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaDataMember}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaDataMember>
  nameWithType: ReadOnlyCollection<MetaDataMember>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Linq.Mapping.MetaDataMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Linq.Mapping.MetaDataMember
    name: MetaDataMember
    nameWithType: MetaDataMember
    fullName: MetaDataMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: DBGeneratedIdentityMember
  nameWithType: MetaType.DBGeneratedIdentityMember
  fullName: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember
- uid: System.Data.Linq.Mapping.MetaDataMember
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaDataMember
  nameWithType: MetaDataMember
  fullName: System.Data.Linq.Mapping.MetaDataMember
- uid: System.Data.Linq.Mapping.MetaType.DerivedTypes
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: DerivedTypes
  nameWithType: MetaType.DerivedTypes
  fullName: System.Data.Linq.Mapping.MetaType.DerivedTypes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Linq.Mapping.MetaType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<MetaType>
  nameWithType: ReadOnlyCollection<MetaType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Linq.Mapping.MetaType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Data.Linq.Mapping.MetaType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Linq.Mapping.MetaType
    name: MetaType
    nameWithType: MetaType
    fullName: MetaType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.Mapping.MetaType.Discriminator
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Discriminator
  nameWithType: MetaType.Discriminator
  fullName: System.Data.Linq.Mapping.MetaType.Discriminator
- uid: System.Data.Linq.Mapping.MetaType.GetDataMember(System.Reflection.MemberInfo)
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: GetDataMember(MemberInfo)
  nameWithType: MetaType.GetDataMember(MemberInfo)
  fullName: System.Data.Linq.Mapping.MetaType.GetDataMember(MemberInfo)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Data.Linq.Mapping.MetaType.GetInheritanceType(System.Type)
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: GetInheritanceType(Type)
  nameWithType: MetaType.GetInheritanceType(Type)
  fullName: System.Data.Linq.Mapping.MetaType.GetInheritanceType(Type)
- uid: System.Data.Linq.Mapping.MetaType
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaType
  nameWithType: MetaType
  fullName: System.Data.Linq.Mapping.MetaType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(System.Object)
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: GetTypeForInheritanceCode(Object)
  nameWithType: MetaType.GetTypeForInheritanceCode(Object)
  fullName: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode(Object)
- uid: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasAnyLoadMethod
  nameWithType: MetaType.HasAnyLoadMethod
  fullName: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod
- uid: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasAnyValidateMethod
  nameWithType: MetaType.HasAnyValidateMethod
  fullName: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod
- uid: System.Data.Linq.Mapping.MetaType.HasInheritance
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasInheritance
  nameWithType: MetaType.HasInheritance
  fullName: System.Data.Linq.Mapping.MetaType.HasInheritance
- uid: System.Data.Linq.Mapping.MetaType.HasInheritanceCode
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasInheritanceCode
  nameWithType: MetaType.HasInheritanceCode
  fullName: System.Data.Linq.Mapping.MetaType.HasInheritanceCode
- uid: System.Data.Linq.Mapping.MetaType.HasUpdateCheck
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasUpdateCheck
  nameWithType: MetaType.HasUpdateCheck
  fullName: System.Data.Linq.Mapping.MetaType.HasUpdateCheck
- uid: System.Data.Linq.Mapping.MetaType.IdentityMembers
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: IdentityMembers
  nameWithType: MetaType.IdentityMembers
  fullName: System.Data.Linq.Mapping.MetaType.IdentityMembers
- uid: System.Data.Linq.Mapping.MetaType.InheritanceBase
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceBase
  nameWithType: MetaType.InheritanceBase
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceBase
- uid: System.Data.Linq.Mapping.MetaType.InheritanceCode
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceCode
  nameWithType: MetaType.InheritanceCode
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceCode
- uid: System.Data.Linq.Mapping.MetaType.InheritanceDefault
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceDefault
  nameWithType: MetaType.InheritanceDefault
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceDefault
- uid: System.Data.Linq.Mapping.MetaType.InheritanceRoot
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceRoot
  nameWithType: MetaType.InheritanceRoot
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceRoot
- uid: System.Data.Linq.Mapping.MetaType.InheritanceTypes
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceTypes
  nameWithType: MetaType.InheritanceTypes
  fullName: System.Data.Linq.Mapping.MetaType.InheritanceTypes
- uid: System.Data.Linq.Mapping.MetaType.IsEntity
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: IsEntity
  nameWithType: MetaType.IsEntity
  fullName: System.Data.Linq.Mapping.MetaType.IsEntity
- uid: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: IsInheritanceDefault
  nameWithType: MetaType.IsInheritanceDefault
  fullName: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault
- uid: System.Data.Linq.Mapping.MetaType.Model
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Model
  nameWithType: MetaType.Model
  fullName: System.Data.Linq.Mapping.MetaType.Model
- uid: System.Data.Linq.Mapping.MetaModel
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Data.Linq.Mapping.MetaModel
- uid: System.Data.Linq.Mapping.MetaType.Name
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Name
  nameWithType: MetaType.Name
  fullName: System.Data.Linq.Mapping.MetaType.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.MetaType.OnLoadedMethod
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: OnLoadedMethod
  nameWithType: MetaType.OnLoadedMethod
  fullName: System.Data.Linq.Mapping.MetaType.OnLoadedMethod
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Data.Linq.Mapping.MetaType.OnValidateMethod
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: OnValidateMethod
  nameWithType: MetaType.OnValidateMethod
  fullName: System.Data.Linq.Mapping.MetaType.OnValidateMethod
- uid: System.Data.Linq.Mapping.MetaType.PersistentDataMembers
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: PersistentDataMembers
  nameWithType: MetaType.PersistentDataMembers
  fullName: System.Data.Linq.Mapping.MetaType.PersistentDataMembers
- uid: System.Data.Linq.Mapping.MetaType.Table
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Table
  nameWithType: MetaType.Table
  fullName: System.Data.Linq.Mapping.MetaType.Table
- uid: System.Data.Linq.Mapping.MetaTable
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Data.Linq.Mapping.MetaTable
- uid: System.Data.Linq.Mapping.MetaType.Type
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Type
  nameWithType: MetaType.Type
  fullName: System.Data.Linq.Mapping.MetaType.Type
- uid: System.Data.Linq.Mapping.MetaType.VersionMember
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: VersionMember
  nameWithType: MetaType.VersionMember
  fullName: System.Data.Linq.Mapping.MetaType.VersionMember
- uid: System.Data.Linq.Mapping.MetaType.#ctor*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: MetaType
  nameWithType: MetaType.MetaType
- uid: System.Data.Linq.Mapping.MetaType.Associations*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Associations
  nameWithType: MetaType.Associations
- uid: System.Data.Linq.Mapping.MetaType.CanInstantiate*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: CanInstantiate
  nameWithType: MetaType.CanInstantiate
- uid: System.Data.Linq.Mapping.MetaType.DataMembers*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: DataMembers
  nameWithType: MetaType.DataMembers
- uid: System.Data.Linq.Mapping.MetaType.DBGeneratedIdentityMember*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: DBGeneratedIdentityMember
  nameWithType: MetaType.DBGeneratedIdentityMember
- uid: System.Data.Linq.Mapping.MetaType.DerivedTypes*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: DerivedTypes
  nameWithType: MetaType.DerivedTypes
- uid: System.Data.Linq.Mapping.MetaType.Discriminator*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Discriminator
  nameWithType: MetaType.Discriminator
- uid: System.Data.Linq.Mapping.MetaType.GetDataMember*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: GetDataMember
  nameWithType: MetaType.GetDataMember
- uid: System.Data.Linq.Mapping.MetaType.GetInheritanceType*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: GetInheritanceType
  nameWithType: MetaType.GetInheritanceType
- uid: System.Data.Linq.Mapping.MetaType.GetTypeForInheritanceCode*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: GetTypeForInheritanceCode
  nameWithType: MetaType.GetTypeForInheritanceCode
- uid: System.Data.Linq.Mapping.MetaType.HasAnyLoadMethod*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasAnyLoadMethod
  nameWithType: MetaType.HasAnyLoadMethod
- uid: System.Data.Linq.Mapping.MetaType.HasAnyValidateMethod*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasAnyValidateMethod
  nameWithType: MetaType.HasAnyValidateMethod
- uid: System.Data.Linq.Mapping.MetaType.HasInheritance*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasInheritance
  nameWithType: MetaType.HasInheritance
- uid: System.Data.Linq.Mapping.MetaType.HasInheritanceCode*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasInheritanceCode
  nameWithType: MetaType.HasInheritanceCode
- uid: System.Data.Linq.Mapping.MetaType.HasUpdateCheck*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: HasUpdateCheck
  nameWithType: MetaType.HasUpdateCheck
- uid: System.Data.Linq.Mapping.MetaType.IdentityMembers*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: IdentityMembers
  nameWithType: MetaType.IdentityMembers
- uid: System.Data.Linq.Mapping.MetaType.InheritanceBase*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceBase
  nameWithType: MetaType.InheritanceBase
- uid: System.Data.Linq.Mapping.MetaType.InheritanceCode*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceCode
  nameWithType: MetaType.InheritanceCode
- uid: System.Data.Linq.Mapping.MetaType.InheritanceDefault*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceDefault
  nameWithType: MetaType.InheritanceDefault
- uid: System.Data.Linq.Mapping.MetaType.InheritanceRoot*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceRoot
  nameWithType: MetaType.InheritanceRoot
- uid: System.Data.Linq.Mapping.MetaType.InheritanceTypes*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: InheritanceTypes
  nameWithType: MetaType.InheritanceTypes
- uid: System.Data.Linq.Mapping.MetaType.IsEntity*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: IsEntity
  nameWithType: MetaType.IsEntity
- uid: System.Data.Linq.Mapping.MetaType.IsInheritanceDefault*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: IsInheritanceDefault
  nameWithType: MetaType.IsInheritanceDefault
- uid: System.Data.Linq.Mapping.MetaType.Model*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Model
  nameWithType: MetaType.Model
- uid: System.Data.Linq.Mapping.MetaType.Name*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Name
  nameWithType: MetaType.Name
- uid: System.Data.Linq.Mapping.MetaType.OnLoadedMethod*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: OnLoadedMethod
  nameWithType: MetaType.OnLoadedMethod
- uid: System.Data.Linq.Mapping.MetaType.OnValidateMethod*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: OnValidateMethod
  nameWithType: MetaType.OnValidateMethod
- uid: System.Data.Linq.Mapping.MetaType.PersistentDataMembers*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: PersistentDataMembers
  nameWithType: MetaType.PersistentDataMembers
- uid: System.Data.Linq.Mapping.MetaType.Table*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Table
  nameWithType: MetaType.Table
- uid: System.Data.Linq.Mapping.MetaType.Type*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: Type
  nameWithType: MetaType.Type
- uid: System.Data.Linq.Mapping.MetaType.VersionMember*
  parent: System.Data.Linq.Mapping.MetaType
  isExternal: false
  name: VersionMember
  nameWithType: MetaType.VersionMember
