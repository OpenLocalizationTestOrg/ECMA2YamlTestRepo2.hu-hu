### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlFileStream
  id: SqlFileStream
  children:
  - System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  - System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  - System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Data.SqlTypes.SqlFileStream.CanRead
  - System.Data.SqlTypes.SqlFileStream.CanSeek
  - System.Data.SqlTypes.SqlFileStream.CanTimeout
  - System.Data.SqlTypes.SqlFileStream.CanWrite
  - System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  - System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  - System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  - System.Data.SqlTypes.SqlFileStream.Finalize
  - System.Data.SqlTypes.SqlFileStream.Flush
  - System.Data.SqlTypes.SqlFileStream.Length
  - System.Data.SqlTypes.SqlFileStream.Name
  - System.Data.SqlTypes.SqlFileStream.Position
  - System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlFileStream.ReadByte
  - System.Data.SqlTypes.SqlFileStream.ReadTimeout
  - System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  - System.Data.SqlTypes.SqlFileStream.TransactionContext
  - System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  - System.Data.SqlTypes.SqlFileStream.WriteTimeout
  langs:
  - csharp
  name: SqlFileStream
  nameWithType: SqlFileStream
  fullName: System.Data.SqlTypes.SqlFileStream
  type: Class
  summary: "A FILESTREAM oszlopattribútum bájt sorozatot tárolt SQL Server-adatok közzététele."
  remarks: "A SqlFileStream osztály használatával együttműködésre `varbinary(max)` a FILESTREAM attribútum egy SQL Server 2008-adatbázisban tárolt adatok. Telepítenie kell a .NET-keretrendszer 3.5 SP1 (vagy újabb) használata <xref:System.Data.SqlTypes.SqlFileStream>FILESTREAM adatok.</xref:System.Data.SqlTypes.SqlFileStream>       Adja meg a FILESTREAM attribútuma egy `varbinary(max)` oszlop hatására az SQL Server a helyi NTFS fájlrendszer ahelyett, hogy az adatbázis-fájlban lévő adatok tárolásához. Transact-SQL-utasítások adatok adatkezelési szolgáltatásokat a kiszolgáló, és Win32 fájl rendszer felületek adatfolyam férhetnek hozzá az adatokhoz.      > [!NOTE] > Egy FILESTREAM-oszlop tárolt egyes fájlok nem lehet megnyitni az NTFS fájlrendszer-ről. Adatfolyam-FILESTREAM-adatokhoz csak egy SQL Server tranzakció környezetében működik.       A SqlFileStream osztály származik a <xref:System.IO.Stream>osztályt, amely az egyes tetszőleges adatforrások, például fájlt vagy egy memóriablokkjainak bájt sorozatát absztrakciós jelöli.</xref:System.IO.Stream> A FILESTREAM olvasni adatok átvitele a folyam például bájttömb adatok struktúrába. A FILESTREAM írni olyan adatszerkezet egy adatfolyamba való mentésre az adatok átvitelét. A stream, amely lehetővé teszi lekérdezéséhez és módosíthatják az aktuális pozíció az adatfolyam belül adatokat belül is kérhet.       Fogalmi dokumentációjában és kódpéldák: [FILESTREAM adatok](~/add/includes/ajax-current-ext-md.md).       Beállítása és konfigurálása a FILESTREAM-adatokat az SQL Server dokumentációjában talál [megtervezése és végrehajtása FILESTREAM-tároló](http://go.microsoft.com/fwlink/?LinkId=121499) az SQL Server 2008 Books Online."
  syntax:
    content: 'public sealed class SqlFileStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  id: '#ctor(System.String,System.Byte[],System.IO.FileAccess)'
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SqlFileStream(String,Byte[],FileAccess)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> osztály."
  remarks: "Ha a rendszer kivételt hoz létre, nyitott tranzakciók kell állítható vissza. Ellenkező esetben előfordulhat adatvesztés."
  syntax:
    content: public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "A logikai elérési utat a fájlhoz. Az elérési út lehet beolvasni az alapul szolgáló FILESTREAM oszlop a tábla a Transact-SQL Pathname függvény használatával."
    - id: transactionContext
      type: System.Byte[]
      description: "A tranzakció környezetben a <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objektum. Alkalmazások a get_filestream_transaction_context függvényt metódus által visszaadott bájttömb kell visszaadnia."
    - id: access
      type: System.IO.FileAccess
      description: "A fájl megnyitásakor használandó hozzáférési mód. Supported <xref href=&quot;System.IO.FileAccess&quot;></xref> enumeration values are <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, and <xref href=&quot;System.IO.FileAccess&quot;></xref>.       Használata esetén <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objektum segítségével olvassa el a meglévő adatok.       Használata esetén <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> nulla bájt fájlra mutat. Meglévő adatot felülír, amikor az objektum le van zárva, és a tranzakció.       Használata esetén <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> egy fájlra, amely rendelkezik az összes adat. A leíró található a fájl elején. Egyikét használhatja a <xref uid=&quot;langword_csharp_System.IO&quot; name=&quot;System.IO&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Seek&quot; name=&quot;Seek&quot; href=&quot;&quot;> </xref> módszerek pozícióba való pozicionálására leíró írnia, vagy új adatok hozzáfűzése fájlon belül."
  overload: System.Data.SqlTypes.SqlFileStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>egy null hivatkozás vagy <code>transactionContext</code> null értékű."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>path</code> is an empty string (\"\"), contains only white space, or contains one or more invalid characters.  \n  \n <code>path</code> begins with \"\\\\\\\\.\\\\\", for example \"\\\\\\\\.\\PHYSICALDRIVE0 \".  \n  \n The handle returned by the call to NTCreateFile is not of type FILE_TYPE_DISK.  \n  \n <code>options</code> contains an unsupported value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl nem található."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/o-hiba lépett fel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott <code> path </code> érvénytelen, például egy le nem képezett meghajtón folyamatban."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A kért hozzáférés nem engedélyezett az operációs rendszer a megadott elérési. Ez akkor fordul elő, ha írási vagy ReadWrite hozzáférés meg van adva, és a fájl vagy könyvtár csak olvasási hozzáférésre van beállítva."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "NtCreateFile állítsa be újra a következő hibakóddal meghiúsul."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  id: '#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)'
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> osztály."
  remarks: "Ha a rendszer kivételt hoz létre, nyitott tranzakciók kell állítható vissza. Ellenkező esetben előfordulhat adatvesztés."
  syntax:
    content: public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access, System.IO.FileOptions options, long allocationSize);
    parameters:
    - id: path
      type: System.String
      description: "A logikai elérési utat a fájlhoz. Az elérési út lehet beolvasni az alapul szolgáló FILESTREAM oszlop a tábla a Transact-SQL Pathname függvény használatával."
    - id: transactionContext
      type: System.Byte[]
      description: "A tranzakció környezetben a <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objektum. Ha értéke null, az implicit tranzakciókban fog történni a <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objektum. Alkalmazások a get_filestream_transaction_context függvényt metódus által visszaadott bájttömb kell visszaadnia."
    - id: access
      type: System.IO.FileAccess
      description: "A fájl megnyitásakor használandó hozzáférési mód. Supported <xref href=&quot;System.IO.FileAccess&quot;></xref> enumeration values are <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, and <xref href=&quot;System.IO.FileAccess&quot;></xref>.       Használata esetén <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objektum segítségével olvassa el a meglévő adatok.       Használata esetén <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> nulla bájt fájlra mutat. Meglévő adatot felülír, amikor az objektum le van zárva, és a tranzakció.       Használata esetén <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>, a <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> egy fájlra, amely rendelkezik az összes adat. A leíró található a fájl elején. Egyikét használhatja a <xref uid=&quot;langword_csharp_System.IO&quot; name=&quot;System.IO&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Seek&quot; name=&quot;Seek&quot; href=&quot;&quot;> </xref> módszerek pozícióba való pozicionálására leíró írnia, vagy új adatok hozzáfűzése fájlon belül."
    - id: options
      type: System.IO.FileOptions
      description: "Adja meg azt a lehetőséget a fájl megnyitása közben. Supported <xref href=&quot;System.IO.FileOptions&quot;></xref> values are <xref href=&quot;System.IO.FileOptions&quot;></xref>, <xref href=&quot;System.IO.FileOptions&quot;></xref>, <xref href=&quot;System.IO.FileOptions&quot;></xref>, and <xref href=&quot;System.IO.FileOptions&quot;></xref>."
    - id: allocationSize
      type: System.Int64
      description: "A foglalási méretet használja a következő fájl létrehozása közben. Ha értéke 0, az alapértelmezett értéket használja."
  overload: System.Data.SqlTypes.SqlFileStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>egy null hivatkozás vagy <code>transactionContext</code> null értékű."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>path</code> is an empty string (\"\"), contains only white space, or contains one or more invalid characters.  \n  \n <code>path</code> begins with \"\\\\\\\\.\\\\\", for example \"\\\\\\\\.\\PHYSICALDRIVE0 \".  \n  \n The handle returned by call to NTCreateFile is not of type FILE_TYPE_DISK.  \n  \n <code>options</code> contains an unsupported value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "A fájl nem található."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/o-hiba lépett fel."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A hívó nem rendelkezik a szükséges engedélyekkel."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "A megadott <code> path </code> érvénytelen, például egy le nem képezett meghajtón folyamatban."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A kért hozzáférés nem engedélyezett az operációs rendszer a megadott elérési. Ez akkor fordul elő, ha írási vagy ReadWrite hozzáférés meg van adva, és a fájl vagy könyvtár csak olvasási hozzáférésre van beállítva."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "NtCreateFile állítsa be újra a következő hibakóddal meghiúsul."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy aszinkron olvasási művelet kezdődik."
  remarks: "Használja a <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>tulajdonság határozza meg, hogy támogatja-e az aktuális példány olvasási.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A puffer az adatok olvasására."
    - id: offset
      type: System.Int32
      description: "Az eltolás bájtban `buffer` kezdőpontját az adatfolyamból beolvasott adatok írásakor."
    - id: count
      type: System.Int32
      description: "Olvassa el a bájtok maximális száma."
    - id: callback
      type: System.AsyncCallback
      description: "Egy nem kötelező aszinkron visszahívás, az olvasás befejezésekor hívandó."
    - id: state
      type: System.Object
      description: "A felhasználó által megadott objektum, amely az adott aszinkron olvasási kérelem megkülönbözteti küldött egyéb kérések"
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amely jelöli az aszinkron Olvasás, esetleg még függőben.</xref:System.IAsyncResult>"
  overload: System.Data.SqlTypes.SqlFileStream.BeginRead*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az adatfolyam adatok olvasása nem támogatott."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy aszinkron írási művelet kezdődik."
  remarks: "Használja a <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>tulajdonságot megállapítása, hogy az aktuális példány támogatja az írást.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A puffer adatokat írni."
    - id: offset
      type: System.Int32
      description: "A bájteltolás a `buffer` kezdőpontjaként írást."
    - id: count
      type: System.Int32
      description: "Az írandó bájtok maximális száma."
    - id: callback
      type: System.AsyncCallback
      description: "Egy nem kötelező aszinkron visszahívás, az írási befejezésekor hívandó."
    - id: state
      type: System.Object
      description: "A felhasználó által megadott objektum, amely az adott aszinkron írási kérelem megkülönbözteti a küldött egyéb kérések."
    return:
      type: System.IAsyncResult
      description: "Egy <xref:System.IAsyncResult>, amely jelöli az aszinkron írás, esetleg még függőben.</xref:System.IAsyncResult>"
  overload: System.Data.SqlTypes.SqlFileStream.BeginWrite*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Adatok írása az adatfolyam nem támogatott."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanRead
  id: CanRead
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: System.Data.SqlTypes.SqlFileStream.CanRead
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy érték, amely jelzi, hogy a jelenlegi adatfolyam támogatja-e olvasási lekérdezi."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jelenlegi adatfolyam támogatja az olvasást; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek
  id: CanSeek
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: System.Data.SqlTypes.SqlFileStream.CanSeek
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lekérdezi egy érték, amely jelzi, hogy a jelenlegi adatfolyam támogatja-e a keresést."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jelenlegi adatfolyam támogatja a keresést; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout
  id: CanTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.CanTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lekérdezi egy érték, amely jelzi, hogy a jelenlegi adatfolyam is túllépi az időkorlátot."
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jelenlegi adatfolyam is időtúllépés; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite
  id: CanWrite
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: System.Data.SqlTypes.SqlFileStream.CanWrite
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lekérdezi egy érték, amely jelzi, hogy a jelenlegi adatfolyam támogatja-e az írást."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a jelenlegi adatfolyam támogatja az írást; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlFileStream.Dispose(Boolean)
  fullName: System.Data.SqlTypes.SqlFileStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.SqlTypes.SqlFileStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SqlFileStream.EndRead(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A függőben lévő aszinkron olvasás befejezéséhez vár."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A függőben lévő aszinkron kérelem befejezésének mutató hivatkozást."
    return:
      type: System.Int32
      description: "A bájtok száma olvasható be az adatfolyamból, nulla (0) és a kért bájtok száma. Adatfolyamok térjen vissza a nulla (0), csak az adatfolyam végén, ellenkező esetben kell letiltják a addig, amíg legalább egy bájt nem érhető el."
  overload: System.Data.SqlTypes.SqlFileStream.EndRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.IAsyncResult>objektum nem származik a megfelelő <xref uid=&quot;langword_csharp_BeginRead&quot; name=&quot;BeginRead&quot; href=&quot;&quot;> </xref> metódus.</xref:System.IAsyncResult>"
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SqlFileStream.EndWrite(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy aszinkron írási művelet véget ér."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A függőben lévő aszinkron i/o-kérelmek mutató hivatkozás."
  overload: System.Data.SqlTypes.SqlFileStream.EndWrite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.IAsyncResult>objektum nem származik a megfelelő <xref uid=&quot;langword_csharp_BeginWrite&quot; name=&quot;BeginWrite&quot; href=&quot;&quot;> </xref> metódus.</xref:System.IAsyncResult>"
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Finalize
  id: Finalize
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: SqlFileStream.Finalize()
  fullName: System.Data.SqlTypes.SqlFileStream.Finalize()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Ellenőrzi, hogy az erőforrások felszabadítását, és egyéb törlési művelet végrehajtása közben a szemétgyűjtő úgy szabadít fel a <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  syntax:
    content: ~SqlFileStream ();
    parameters: []
  overload: System.Data.SqlTypes.SqlFileStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Flush
  id: Flush
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SqlFileStream.Flush()
  fullName: System.Data.SqlTypes.SqlFileStream.Flush()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "törli az összes puffer adatfolyam, és a pufferelt adatokat írni az alapul szolgáló eszköz okoz."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.SqlTypes.SqlFileStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Length
  id: Length
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: System.Data.SqlTypes.SqlFileStream.Length
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A jelenlegi adatfolyam bájtban hosszát jelző érték beolvasása."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Egy <xref:System.Int64>a jelenlegi adatfolyam bájtban hosszát jelző.</xref:System.Int64>"
  overload: System.Data.SqlTypes.SqlFileStream.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Name
  id: Name
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: System.Data.SqlTypes.SqlFileStream.Name
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A logikai elérési útja lekérdezi a <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> a konstruktornak átadott."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Egy karakterláncértéket, amely nevét a <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Position
  id: Position
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: System.Data.SqlTypes.SqlFileStream.Position
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lekérdezi vagy beállítja a pozíciója a jelenlegi adatfolyam belül."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Az aktuális pozíció belül a <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Read(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Az aktuális adatfolyamból bájt sorrendjét olvasó, és a pozíció az adatfolyam belül kiadásokban olvasott bájtok száma."
  remarks: "Használja a <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>tulajdonságot meghatározásához, hogy az aktuális példány támogatja az írást.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bájttömb. Ha ez a módszer ad vissza, a puffer tartalmaz eltolás és (eltolás + száma - 1) a jelenlegi forrásból beolvasott bájtok helyébe közötti értékeket a megadott bájttömb."
    - id: offset
      type: System.Int32
      description: "A nulla alapú bájteltolás pufferben kezdőpontját az adatok tárolása az aktuális adatfolyamból beolvasott."
    - id: count
      type: System.Int32
      description: "Az aktuális adatfolyamból olvasandó bájtok maximális száma."
    return:
      type: System.Int32
      description: "A puffer az olvasott bájtok teljes száma. Ez lehet kisebb, mint a bájtok száma irányuló kérés. Ha sok bájt még nem állnak rendelkezésre, vagy nulla (0), ha az adatfolyam végét elérte."
  overload: System.Data.SqlTypes.SqlFileStream.Read*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az objektum nem támogatja az olvasást adatok."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte
  id: ReadByte
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SqlFileStream.ReadByte()
  fullName: System.Data.SqlTypes.SqlFileStream.ReadByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy olyan bájtot olvas be az adatfolyamból kiadásokban a pozíció az adatfolyam belül egy bájt, és az adatfolyam végén&1; értéket ad vissza."
  remarks: "Használja a <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>tulajdonság határozza meg, hogy támogatja-e az aktuális példány olvasási.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Az előjel nélküli bájt típusúvá egy <xref:System.Int32>, vagy a -1, az adatfolyam végén.</xref:System.Int32>"
  overload: System.Data.SqlTypes.SqlFileStream.ReadByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az objektum nem támogatja az olvasást adatok."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  id: ReadTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lekérdezi vagy beállítja egy érték ezredmásodpercben, határozza meg, hogy mennyi ideig kísérli meg az adatfolyam olvasására időkorlátját."
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Egy érték, ezredmásodpercben, amely meghatározza, mennyi ideig adatfolyam megkísérli időkorlátját olvasni."
  overload: System.Data.SqlTypes.SqlFileStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SqlFileStream.Seek(Int64,SeekOrigin)
  fullName: System.Data.SqlTypes.SqlFileStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "A jelenlegi adatfolyam pozíciója állítja be."
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "A relatív bájteltolás a `origin` paraméter"
    - id: origin
      type: System.IO.SeekOrigin
      description: "A típus <xref:System.IO.SeekOrigin>a hivatkozási pont segítségével kéri le az új helyre jelző</xref:System.IO.SeekOrigin> érték"
    return:
      type: System.Int64
      description: "Az új helyre, a jelenlegi adatfolyam belül."
  overload: System.Data.SqlTypes.SqlFileStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SqlFileStream.SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Beállítja a jelenlegi adatfolyam hossza."
  remarks: "Használja a <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>tulajdonság határozza meg, hogy támogatja-e az aktuális példány olvasási.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "A jelenlegi adatfolyam bájtban kívánt hosszát."
  overload: System.Data.SqlTypes.SqlFileStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az objektum nem támogatja az olvasást adatok."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext
  id: TransactionContext
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: System.Data.SqlTypes.SqlFileStream.TransactionContext
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lekérdezi vagy beállítja a tranzakciós környezet lett átadva a <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> objektum."
  syntax:
    content: public byte[] TransactionContext { get; }
    return:
      type: System.Byte[]
      description: "A <code> transactionContext </code> ehhez a konstruktornak átadott tömb <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> objektum."
  overload: System.Data.SqlTypes.SqlFileStream.TransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Write(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Bájtok sorozatát ír a jelenlegi adatfolyam, és az aktuális pozíció az adatfolyam belül kiadásokban által írt bájtok száma."
  remarks: "Használja a <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>tulajdonságot megállapítása, hogy az aktuális példány támogatja az írást.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Bájttömb. Ez a módszer másolja `count` bájt, forrás `buffer` a jelenlegi adatfolyam."
    - id: offset
      type: System.Int32
      description: "A nulla alapú bájteltolás a `buffer` kezdőpontját bájt másolása a jelenlegi adatfolyam."
    - id: count
      type: System.Int32
      description: "A jelenlegi adatfolyam írandó bájtok száma."
  overload: System.Data.SqlTypes.SqlFileStream.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az objektum nem támogatja az írást, az adatok."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: SqlFileStream.WriteByte(Byte)
  fullName: System.Data.SqlTypes.SqlFileStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Egy olyan bájtot ír az aktuális pozíciót az adatfolyamban, és a pozíció az adatfolyam belül kiadásokban egy bájt."
  remarks: "Használja a <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>tulajdonságot megállapítása, hogy az aktuális példány támogatja az írást.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Az adatfolyam írni bájt."
  overload: System.Data.SqlTypes.SqlFileStream.WriteByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az objektum nem támogatja az írást, az adatok."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  id: WriteTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lekérdezi vagy beállítja egy érték ezredmásodpercben, határozza meg, hogy mennyi ideig az adatfolyam fog írására történt kísérlet időkorlátját."
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Egy érték, ezredmásodpercben, amely meghatározza, mennyi ideig adatfolyam megkísérli időkorlátját írni."
  overload: System.Data.SqlTypes.SqlFileStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream(String,Byte[],FileAccess)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Data.SqlTypes.SqlFileStream.CanRead
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: System.Data.SqlTypes.SqlFileStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: System.Data.SqlTypes.SqlFileStream.CanSeek
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.CanTimeout
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: System.Data.SqlTypes.SqlFileStream.CanWrite
- uid: System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlFileStream.Dispose(Boolean)
  fullName: System.Data.SqlTypes.SqlFileStream.Dispose(Boolean)
- uid: System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SqlFileStream.EndRead(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndRead(IAsyncResult)
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SqlFileStream.EndWrite(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndWrite(IAsyncResult)
- uid: System.Data.SqlTypes.SqlFileStream.Finalize
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Finalize()
  nameWithType: SqlFileStream.Finalize()
  fullName: System.Data.SqlTypes.SqlFileStream.Finalize()
- uid: System.Data.SqlTypes.SqlFileStream.Flush
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Flush()
  nameWithType: SqlFileStream.Flush()
  fullName: System.Data.SqlTypes.SqlFileStream.Flush()
- uid: System.Data.SqlTypes.SqlFileStream.Length
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: System.Data.SqlTypes.SqlFileStream.Length
- uid: System.Data.SqlTypes.SqlFileStream.Name
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: System.Data.SqlTypes.SqlFileStream.Name
- uid: System.Data.SqlTypes.SqlFileStream.Position
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: System.Data.SqlTypes.SqlFileStream.Position
- uid: System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Read(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Read(Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadByte()
  nameWithType: SqlFileStream.ReadByte()
  fullName: System.Data.SqlTypes.SqlFileStream.ReadByte()
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.ReadTimeout
- uid: System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SqlFileStream.Seek(Int64,SeekOrigin)
  fullName: System.Data.SqlTypes.SqlFileStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SqlFileStream.SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SetLength(Int64)
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: System.Data.SqlTypes.SqlFileStream.TransactionContext
- uid: System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Write(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Write(Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: SqlFileStream.WriteByte(Byte)
  fullName: System.Data.SqlTypes.SqlFileStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.WriteTimeout
- uid: System.Data.SqlTypes.SqlFileStream.#ctor*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream
  nameWithType: SqlFileStream.SqlFileStream
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginRead
  nameWithType: SqlFileStream.BeginRead
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginWrite
  nameWithType: SqlFileStream.BeginWrite
- uid: System.Data.SqlTypes.SqlFileStream.CanRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanRead
  nameWithType: SqlFileStream.CanRead
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
- uid: System.Data.SqlTypes.SqlFileStream.Dispose*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Dispose
  nameWithType: SqlFileStream.Dispose
- uid: System.Data.SqlTypes.SqlFileStream.EndRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndRead
  nameWithType: SqlFileStream.EndRead
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndWrite
  nameWithType: SqlFileStream.EndWrite
- uid: System.Data.SqlTypes.SqlFileStream.Finalize*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Finalize
  nameWithType: SqlFileStream.Finalize
- uid: System.Data.SqlTypes.SqlFileStream.Flush*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Flush
  nameWithType: SqlFileStream.Flush
- uid: System.Data.SqlTypes.SqlFileStream.Length*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Length
  nameWithType: SqlFileStream.Length
- uid: System.Data.SqlTypes.SqlFileStream.Name*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Name
  nameWithType: SqlFileStream.Name
- uid: System.Data.SqlTypes.SqlFileStream.Position*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Position
  nameWithType: SqlFileStream.Position
- uid: System.Data.SqlTypes.SqlFileStream.Read*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Read
  nameWithType: SqlFileStream.Read
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadByte
  nameWithType: SqlFileStream.ReadByte
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
- uid: System.Data.SqlTypes.SqlFileStream.Seek*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Seek
  nameWithType: SqlFileStream.Seek
- uid: System.Data.SqlTypes.SqlFileStream.SetLength*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SetLength
  nameWithType: SqlFileStream.SetLength
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
- uid: System.Data.SqlTypes.SqlFileStream.Write*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Write
  nameWithType: SqlFileStream.Write
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteByte
  nameWithType: SqlFileStream.WriteByte
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
