### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.RegistryAuditRule
  id: RegistryAuditRule
  children:
  - System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.RegistryAuditRule.RegistryRights
  langs:
  - csharp
  name: RegistryAuditRule
  nameWithType: RegistryAuditRule
  fullName: System.Security.AccessControl.RegistryAuditRule
  type: Class
  summary: "Csomagok olyan hozzáférési jogosultsága ahhoz, hogy egy felhasználó vagy csoport naplózni kell. Ez az osztály nem örökölhető."
  remarks: "A RegistryAuditRule osztály az egyik olyan osztályokkal rendelkezik, amelyek a .NET-keretrendszer biztosít a felhőszolgáltatóknak a Windows hozzáférés-vezérléssel beállításkulcsok készlete. Ezeket az osztályokat és azok az alapul szolgáló Windows hozzáférést vezérlő struktúrákat való kapcsolatának áttekintéséhez lásd: <xref:System.Security.AccessControl.RegistrySecurity>.</xref:System.Security.AccessControl.RegistrySecurity>      > [!NOTE] > Windows hozzáférés-vezérléssel csak alkalmazható beállításkulcsok. Az egyéni kulcs/érték párok tárolja a kulcsot nem lehet alkalmazni.       Megtekintéséhez használja a naplózási szabály jelenleg egy beállításkulcs megadásával listáját a <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>metódus használatával kérje le a <xref:System.Security.AccessControl.RegistrySecurity>objektumot, és használja a <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>beszerzéséhez RegistryAuditRule objektumok gyűjteménye.</xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> </xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>       RegistryAuditRule objektumok nem képezi le egy az egyhez típusú az alapul szolgáló tulajdonosi hozzáférés-szabályozási listához (DACL) hozzáférés-vezérlési bejegyzésekkel együtt. Amikor a készlet az összes szabályok egy beállításkulcsot a naplózása, a készlet összes hozzáférés-vezérlési bejegyzés Express jelenleg szükséges szabályok minimális számát tartalmazza.      > [!NOTE] > Az alapul szolgáló hozzáférés-vezérlési bejegyzés módosítható, mert a vonatkoznak, és törölje a szabályokat. A szabályok egyesítéskor Ha lehetséges, hozzáférés-vezérlő bejegyzéseket a legkevesebb fenntartásához. Így ha olvasható szabályok aktuális listáját, azt nem nézhet pontosan a hozzáadott összes szabályok listáját.       Adja meg a hozzáférési jogosultsága ahhoz, hogy egy felhasználó vagy csoport kell naplózni RegistryAuditRule-objektumokat használ. Szabály alkalmazása egy beállításkulcsot, használja a <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName>metódus használatával kérje le a <xref:System.Security.AccessControl.RegistrySecurity>objektum.</xref:System.Security.AccessControl.RegistrySecurity> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName> Módosítsa a <xref:System.Security.AccessControl.RegistrySecurity>objektum a metódusok segítségével vegye fel a szabályt, és használja a <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName>metódus a biztonsági objektum újracsatolni.</xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.RegistrySecurity>      > [!IMPORTANT] > Végrehajtott módosítások egy <xref:System.Security.AccessControl.RegistrySecurity>objektum nem befolyásolják a beállításkulcs a hozzáférési szintek amíg meghívja a <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName>metódus a módosított biztonsági objektum hozzárendelése a beállításkulcsot.</xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName> </xref:System.Security.AccessControl.RegistrySecurity>       RegistryAuditRule objektumok nem módosíthatók. A beállításjegyzék-kulcs biztonsági módszerek használatával módosul a <xref:System.Security.AccessControl.RegistrySecurity>osztály hozzáadása vagy eltávolítása szabályok; ehhez, mert az alapul szolgáló hozzáférés-vezérlési bejegyzés módosítva lett.</xref:System.Security.AccessControl.RegistrySecurity>"
  syntax:
    content: 'public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.RegistryAuditRule&quot;> </xref> osztály, a felhasználót vagy csoportot rendszervizsgálati, a naplózási jogosultságok, hogy figyelembe öröklési lekapcsolja-e, és kell-e naplózni sikeres, sikertelen vagy mindkettő megadása."
  remarks: "All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  \n  \n|Propagation flags|S|CS|GS|  \n|-----------------------|-------|--------|--------|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X||  \n|<xref:System.Security.AccessControl.PropagationFlags>||X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>||X||  \n  \n The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  \n  \n For example, if the <xref:System.Security.AccessControl.InheritanceFlags> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  \n  \n> [!NOTE]\n>  Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag for `inheritanceFlags`, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags> flag. Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules."
  syntax:
    content: public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "A felhasználó vagy csoport, a szabály vonatkozik. Típusúnak kell lennie <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> vagy például típusú <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> be, amely átalakítható <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> megadását rendszervizsgálati hozzáférés típusú értékeket."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> értékek megadása, hogy a naplózási szabály vonatkozik-e az aktuális kulcs alkulcsokat."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> értékek, amelyek hatással vannak az alkulcsok az aktuális kulcs egy örökölt naplózási szabály propagálja."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> megadása, hogy sikeres vagy sikertelen naplózandó értékeket."
  overload: System.Security.AccessControl.RegistryAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Itt adható meg érték érvénytelen.       – vagy – <code>flags</code> érvénytelen értéket.       – vagy – <code>inheritanceFlags</code> érvénytelen értéket.       – vagy – <code>propagationFlags</code> érvénytelen értéket."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>registryRights</code> nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>az egyik típus sem <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> és nem olyan típusú, mint <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> be, amely átalakítható <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.RegistryAuditRule&quot;> </xref> osztály, a felhasználó vagy a naplózási, a naplózási jogosultságok, hogy figyelembe öröklési lekapcsolja-e és kell-e naplózni sikeres, sikertelen vagy mindkét csoport nevének megadását."
  remarks: "All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag. If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected. If the flag is present, the rule is propagated as shown in the following table. The table assumes there is a subkey S with child subkey CS and grandchild subkey GS. That is, the path for the grandchild subkey is S\\CS\\GS.  \n  \n|Propagation flags|S|CS|GS|  \n|-----------------------|-------|--------|--------|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>|X|X||  \n|<xref:System.Security.AccessControl.PropagationFlags>||X|X|  \n|<xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>||X||  \n  \n The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.  \n  \n For example, if the <xref:System.Security.AccessControl.InheritanceFlags> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.  \n  \n> [!NOTE]\n>  Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName> flag for `inheritanceFlags`, there is no point in doing so. For the purposes of access control, the name/value pairs in a subkey are not separate objects. The access rights to name/value pairs are controlled by the rights of the subkey. Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags> flag. Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.  \n  \n This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor."
  syntax:
    content: public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identity
      type: System.String
      description: "A felhasználó vagy csoport nevét a szabály vonatkozik."
    - id: registryRights
      type: System.Security.AccessControl.RegistryRights
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> megadását rendszervizsgálati hozzáférés típusú értékeket."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Kombinációja <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> , amely meghatározza, hogy a naplózási szabály vonatkozik-e az aktuális kulcs alkulcsok jelzők."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Kombinációja <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> jelzőkkel, amelyek hatással vannak az alkulcsok az aktuális kulcs egy örökölt naplózási szabály propagálja."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> megadása, hogy sikeres vagy sikertelen naplózandó értékeket."
  overload: System.Security.AccessControl.RegistryAuditRule.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>eventRights</code>Itt adható meg érték érvénytelen.       – vagy – <code>flags</code> érvénytelen értéket.       – vagy – <code>inheritanceFlags</code> érvénytelen értéket.       – vagy – <code>propagationFlags</code> érvénytelen értéket."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>registryRights</code>értéke nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       – vagy – <code>identity</code> egy nulla hosszúságú karakterlánc.       – vagy – <code>identity</code> 512 karakternél hosszabb."
  platform:
  - net462
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  id: RegistryRights
  parent: System.Security.AccessControl.RegistryAuditRule
  langs:
  - csharp
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi a naplózási szabály hozzáférési jogosultságokat."
  remarks: "<xref:System.Security.AccessControl.RegistryAuditRule>objektumok nem módosíthatók.</xref:System.Security.AccessControl.RegistryAuditRule> Létrehozhat egy új naplózási szabály egy másik felhasználó, a különböző jogokkal, vagy a különböző képviselő <xref:System.Security.AccessControl.AuditFlags>jelzők, de egy meglévő naplózási szabály nem módosítható.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public System.Security.AccessControl.RegistryRights RegistryRights { get; }
    return:
      type: System.Security.AccessControl.RegistryRights
      description: "Tagértékeinek <xref href=&quot;System.Security.AccessControl.RegistryRights&quot;> </xref> értékeket, amelyeket a jogosultságok, a naplózási szabály jelzi."
  overload: System.Security.AccessControl.RegistryAuditRule.RegistryRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AuditRule
  isExternal: false
  name: System.Security.AccessControl.AuditRule
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryAuditRule(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
  fullName: System.Security.AccessControl.RegistryAuditRule.RegistryRights
- uid: System.Security.AccessControl.RegistryAuditRule.#ctor*
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryAuditRule
  nameWithType: RegistryAuditRule.RegistryAuditRule
- uid: System.Security.AccessControl.RegistryAuditRule.RegistryRights*
  parent: System.Security.AccessControl.RegistryAuditRule
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryAuditRule.RegistryRights
