### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.OSFeature
  id: OSFeature
  children:
  - System.Windows.Forms.OSFeature.#ctor
  - System.Windows.Forms.OSFeature.Feature
  - System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  - System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  - System.Windows.Forms.OSFeature.LayeredWindows
  - System.Windows.Forms.OSFeature.Themes
  langs:
  - csharp
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
  type: Class
  summary: "Operációs rendszer adott termékfejlesztő lekérdezések biztosít."
  remarks: "Használja a `static` az osztálypéldány szerepel a <xref:System.Windows.Forms.OSFeature.Feature%2A>tulajdonság az operációs rendszer szolgáltatásainak lekérdezéséhez.</xref:System.Windows.Forms.OSFeature.Feature%2A> Ez az osztály példánya nem hozható létre.       Egy szolgáltatás verziójának, hívja meg a <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metódus.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Annak megállapítása, hogy egy szolgáltatás vagy egy adott verzió található, hívja meg a <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>metódust, és adja meg a szolgáltatást, hogy ezt az osztályt a megadott szolgáltatás azonosítók keressen</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example uses OSFeature to query the operating system to determine if the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature is installed. The example presents two different ways of checking to see whether the feature is present. In the first method, `myVersion` is checked to see if it is `null`. If the version is `null`, the feature is not installed. In the second method, the example calls the base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> to see if the feature is installed. The results are displayed in a text box.  \n  \n This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cs[Classic OSFeature Example#1](~/add/codesnippet/csharp/t-system.windows.forms.o_0_1.cs)]\n [!code-vb[Classic OSFeature Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.o_0_1.vb)]\n [!code-cpp[Classic OSFeature Example#1](~/add/codesnippet/cpp/t-system.windows.forms.o_0_1.cpp)]"
  syntax:
    content: 'public class OSFeature : System.Windows.Forms.FeatureSupport'
  inheritance:
  - System.Object
  - System.Windows.Forms.FeatureSupport
  implements: []
  inheritedMembers:
  - System.Windows.Forms.FeatureSupport.GetVersionPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.Object,System.Version)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)
  - System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String,System.Version)
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> osztály."
  remarks: "Ez az osztály példánya nem hozható létre. Az operációs rendszer szolgáltatásainak lekérdezéséhez használja a `static` <xref:System.Windows.Forms.OSFeature>ezt az osztályt megadott</xref:System.Windows.Forms.OSFeature> példánya"
  syntax:
    content: protected OSFeature ();
    parameters: []
  overload: System.Windows.Forms.OSFeature.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Feature
  id: Feature
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> példánya a <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> szolgáltatás lekérdezések használt osztály. Ez a tulajdonság csak olvasható."
  remarks: "Ezzel `static` tulajdonság az operációs rendszer szolgáltatásainak lekérdezéséhez. Ez az osztály példánya nem hozható létre.       Egy szolgáltatás verziójának, hívja meg a <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metódus.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> Annak megállapítása, hogy egy szolgáltatás vagy egy adott verzió található, hívja meg a <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>metódust, és adja meg a szolgáltatást, hogy ezt az osztályt a megadott szolgáltatás azonosítók keressen</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/p-system.windows.forms.o_3_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/p-system.windows.forms.o_3_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.o_3_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.OSFeature Feature { get; }
    return:
      type: System.Windows.Forms.OSFeature
      description: "Egy példányát a <xref href=&quot;System.Windows.Forms.OSFeature&quot;> </xref> osztály."
  overload: System.Windows.Forms.OSFeature.Feature*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  id: GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a megadott szolgáltatást a rendszeren jelenleg elérhető verzióját."
  remarks: "Használja a <xref:System.Windows.Forms.OSFeature.Feature%2A>tulajdonság, a `static` példányának <xref:System.Windows.Forms.OSFeature>szerepel ez az osztály, a verziószám egy szolgáltatás a lekérdezésre.</xref:System.Windows.Forms.OSFeature> </xref:System.Windows.Forms.OSFeature.Feature%2A>"
  example:
  - "The following example queries <xref:System.Windows.Forms.OSFeature> for the <xref:System.Windows.Forms.OSFeature.LayeredWindows> feature. The version is checked to see if it is `null`, to determine whether the feature is present. The result is displayed in a text box. This code assumes `textBox1` has been created and placed on a form.  \n  \n [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/cpp/m-system.windows.forms.o_2_1.cpp)]\n [!code-cs[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/csharp/m-system.windows.forms.o_2_1.cs)]\n [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_2_1.vb)]"
  syntax:
    content: public override Version GetVersionPresent (object feature);
    parameters:
    - id: feature
      type: System.Object
      description: "A szolgáltatás, amelynek verzióra van szükség, vagy <xref href=&quot;System.Windows.Forms.OSFeature.LayeredWindows&quot;> </xref> vagy <xref href=&quot;System.Windows.Forms.OSFeature.Themes&quot;> </xref>."
    return:
      type: System.Version
      description: "A <xref:System.Version>jelenleg elérhető, a rendszer; a megadott operációs rendszer a szolgáltatás verzióját jelző vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a szolgáltatás nem található.</xref:System.Version>"
  overload: System.Windows.Forms.OSFeature.GetVersionPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  id: IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Beolvas egy értéket, amely azt jelzi, hogy az operációs rendszer támogatja-e a megadott funkció vagy metrika."
  remarks: "Általában a IsPresent módszert használja annak meghatározásához, ha az operációs rendszer támogatja-e az adott szolgáltatás vagy által azonosított metrikus `enumValue`. IsPresent által visszaadott érték alapján, a kódban feltételes műveletek hajtaná végre. Például, ha a paraméter értéke az metódus hívása <xref:System.Windows.Forms.SystemParameter>adja vissza `true`, létrehozhatja tulajdonos rajzolt menük lapos stílusú az alkalmazásban.</xref:System.Windows.Forms.SystemParameter>       Egyes rendszer szolgáltatások és a metrikák elérése is növelheti kivételek, ha nem érhetők el egy adott operációs rendszeren. Ebben az esetben először használja a megfelelő <xref:System.Windows.Forms.SystemParameter>számbavételi érték együtt IsPresent meghatározni, ha a rendszer támogatja-e a metrika.</xref:System.Windows.Forms.SystemParameter> Például hívja a IsPresent <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>elérése előtt a <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName>tulajdonság értéke.</xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> </xref:System.Windows.Forms.SystemInformation.CaretWidth%2A>"
  example:
  - "The following code example demonstrates how to use the IsPresent method with the <xref:System.Windows.Forms.SystemParameter> enumeration. The example determines if the operating system supports the `CaretWidth` metric before calling the <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/cpp/m-system.windows.forms.o_0_1.cpp)]\n [!code-cs[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/csharp/m-system.windows.forms.o_0_1.cs)]\n [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_1.vb)]  \n[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/cpp/m-system.windows.forms.o_0_2.cpp)]\n[!code-cs[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/csharp/m-system.windows.forms.o_0_2.cs)]\n[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/add/codesnippet/visualbasic/m-system.windows.forms.o_0_2.vb)]"
  syntax:
    content: public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);
    parameters:
    - id: enumVal
      type: System.Windows.Forms.SystemParameter
      description: "A <xref href=&quot;System.Windows.Forms.SystemParameter&quot;> </xref> képviselő keresse meg a szolgáltatás."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a szolgáltatás elérhető, a rendszer; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.OSFeature.IsPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  id: LayeredWindows
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "A réteges, legfelső szintű windows-szolgáltatás jelöli. Ez a mező csak olvasható."
  remarks: "Egy rétegezett ablak tehető átlátszó vagy áttetsző az operációs rendszer. Támogatja a többrétegű windows először verzióban jelent meg a Windows 2000 rendszerben. További információ &quot;réteges Windows: A új módon történő használatát áttetszőségét és átláthatóság hatások a Windows alkalmazásokat láthatják&quot; http://msdn.microsoft.com, a Platform SDK dokumentációjának.       Határozhatja meg, ha a rétegzett windows-szolgáltatás telepítve van, a <xref:System.Windows.Forms.OSFeature.Feature%2A>tulajdonság a alaposztály metódus meghívására <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>LayeredWindows kikeresni a következő tartalmát. a szolgáltatás a</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> </xref:System.Windows.Forms.OSFeature.Feature%2A>       Azt is megteheti, ellenőrizheti, ha a szolgáltatás telepítve van-e meghívásával megjelenítéséhez a <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>metódus található a szolgáltatás LayeredWindows.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  example:
  - "The following example determines whether the current system supports layered windows. The base class method <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> is called with LayeredWindows as the feature to look for. The result is displayed in a text box. This code assumes `textBox1` has been instantiated and placed on a form.  \n  \n [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/visualbasic/f-system.windows.forms.o_1.vb)]\n [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/cpp/f-system.windows.forms.o_1.cpp)]\n [!code-cs[Classic OSFeature.LayeredWindows Example#1](~/add/codesnippet/csharp/f-system.windows.forms.o_1.cs)]"
  syntax:
    content: public static readonly object LayeredWindows;
    return:
      type: System.Object
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OSFeature.Themes
  id: Themes
  parent: System.Windows.Forms.OSFeature
  langs:
  - csharp
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Az operációs rendszer Témák szolgáltatás jelöli. Ez a mező csak olvasható."
  remarks: "Téma gyűjteménye, amelyek tartalmazzák a háttérkép, kurzorok, betűtípusok, hangok és ikonok először a Microsoft Plus visual csatolóbeállításokkal! a Windows 95. A .NET-keretrendszer nem támogatja közvetlenül testreszabhatóvá témák, bár ez a vizuális stílusok széleskörű támogatása a <xref:System.Windows.Forms.VisualStyles?displayProperty=fullName>névtér.</xref:System.Windows.Forms.VisualStyles?displayProperty=fullName> További információ a Windows témák témakörök a témák és vizuális stílusok és a Win32 SDK vizuális stílusok referenciaként.       Annak meghatározásához, ha telepítve van-e a témák funkció, a alaposztály metódust hívja <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>meg a tartalmát. a szolgáltatás témák</xref:System.Windows.Forms.FeatureSupport.IsPresent%2A>       Azt is megteheti, ellenőrizheti, ha a szolgáltatás telepítve van-e meghívásával megjelenítéséhez a <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>témák metódust használ a szolgáltatás található.</xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A>"
  syntax:
    content: public static readonly object Themes;
    return:
      type: System.Object
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.FeatureSupport
  isExternal: false
  name: System.Windows.Forms.FeatureSupport
- uid: System.Windows.Forms.OSFeature.#ctor
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature()
  nameWithType: OSFeature.OSFeature()
  fullName: System.Windows.Forms.OSFeature.OSFeature()
- uid: System.Windows.Forms.OSFeature.Feature
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
  fullName: System.Windows.Forms.OSFeature.Feature
- uid: System.Windows.Forms.OSFeature
  parent: System.Windows.Forms
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature
  fullName: System.Windows.Forms.OSFeature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent(Object)
  nameWithType: OSFeature.GetVersionPresent(Object)
  fullName: System.Windows.Forms.OSFeature.GetVersionPresent(Object)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent(SystemParameter)
  nameWithType: OSFeature.IsPresent(SystemParameter)
  fullName: System.Windows.Forms.OSFeature.IsPresent(SystemParameter)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.SystemParameter
  parent: System.Windows.Forms
  isExternal: false
  name: SystemParameter
  nameWithType: SystemParameter
  fullName: System.Windows.Forms.SystemParameter
- uid: System.Windows.Forms.OSFeature.LayeredWindows
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: LayeredWindows
  nameWithType: OSFeature.LayeredWindows
  fullName: System.Windows.Forms.OSFeature.LayeredWindows
- uid: System.Windows.Forms.OSFeature.Themes
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Themes
  nameWithType: OSFeature.Themes
  fullName: System.Windows.Forms.OSFeature.Themes
- uid: System.Windows.Forms.OSFeature.#ctor*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: OSFeature
  nameWithType: OSFeature.OSFeature
- uid: System.Windows.Forms.OSFeature.Feature*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: Feature
  nameWithType: OSFeature.Feature
- uid: System.Windows.Forms.OSFeature.GetVersionPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: GetVersionPresent
  nameWithType: OSFeature.GetVersionPresent
- uid: System.Windows.Forms.OSFeature.IsPresent*
  parent: System.Windows.Forms.OSFeature
  isExternal: false
  name: IsPresent
  nameWithType: OSFeature.IsPresent
