### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonObjectSecurity
  id: CommonObjectSecurity
  children:
  - System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  langs:
  - csharp
  name: CommonObjectSecurity
  nameWithType: CommonObjectSecurity
  fullName: System.Security.AccessControl.CommonObjectSecurity
  type: Class
  summary: "Szabályozza a hozzáférést objektumok hozzáférés-vezérlési listák (ACL) közvetlen kezelése nélkül. Ez az osztály absztrakt alaposztálya a <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> osztály."
  syntax:
    content: 'public abstract class CommonObjectSecurity : System.Security.AccessControl.ObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: CommonObjectSecurity(Boolean)
  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> osztály."
  syntax:
    content: protected CommonObjectSecurity (bool isContainer);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az új objektum egy tárolóobjektumot."
  overload: System.Security.AccessControl.CommonObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  id: AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: AddAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hozzáadja a megadott hozzáférési szabály az a tulajdonosi hozzáférés vezérlési lista (DACL) a társított <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  remarks: "Egy hozzáférési szabály hozzáadása meglévő hozzáférési szabályok okozhat a hozzáférés-vezérlési lista való egyesíthetők.       Rendszerbiztonsági tagok véletlenül hozzáférést elkerüléséhez alkalmazások ellenőrizze engedélyezési megléte mindenki számára teljes hozzáférést (AEFA) hozzáférés-szabályozási bejegyzés (ACE), és távolítsa el a hozzáférés-vezérlési lista módosítása előtt."
  syntax:
    content: protected void AddAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A hozzáférési szabály hozzáadásához."
  overload: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  id: AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: AddAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hozzáadja a megadott naplózási szabály a rendszer hozzáférés vezérlési lista (Rendszerszintű) a társított ez <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  remarks: "Egy naplózási szabály hozzáadása meglévő hozzáférési szabályok okozhat a Rendszerszintű való egyesíthetők."
  syntax:
    content: protected void AddAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A naplózási szabály hozzáadásához."
  overload: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi a megadott biztonsági azonosító társított hozzáférési szabályok gyűjteménye."
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>hozzáférési szabályok explicit módon adja meg az objektum."
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az örökölt hozzáférési szabályokat tartalmaznak."
    - id: targetType
      type: System.Type
      description: "Megadja, hogy a biztonsági azonosítója olvassa be a hozzáférési szabályok a T:System.Security.Principal.SecurityIdentifier vagy T:System.Security.Principal.NTAccount típusú. Ez a paraméter értékét, amely fordítható típusnak kell lennie a <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> típusa."
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "A megadott társított hozzáférési szabályok gyűjteménye <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi a megadott biztonsági azonosító kapcsolódó naplózási szabály gyűjteménye."
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>naplózási szabályok explicit módon adja meg az objektum."
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>az örökölt naplózási szabályokat tartalmaznak."
    - id: targetType
      type: System.Type
      description: "A biztonsági azonosítót, amelynek naplózási szabályok beolvasása. Olyan objektum, amely szerint is konvertálható kell lennie egy <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objektum."
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "A megadott kapcsolódó naplózási szabály gyűjteménye <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "A megadott módosítás a a tulajdonosi hozzáférés vezérlési lista (DACL) a társított vonatkozik <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  remarks: "Rendszerbiztonsági tagok véletlenül hozzáférést elkerüléséhez alkalmazások ellenőrizze engedélyezési megléte mindenki számára teljes hozzáférést (AEFA) hozzáférés-szabályozási bejegyzés (ACE), és távolítsa el a hozzáférés-vezérlési lista módosítása előtt."
  syntax:
    content: protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "A módosítás alkalmazása a hozzáférés-vezérlési lista."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A hozzáférési szabály módosítása."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférés-vezérlési lista sikeresen módosítva; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférés-vezérlési lista sikeresen módosítva; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "A megadott módosítás számára a rendszer hozzáférés vezérlő lista Rendszerhozzáférés társított Ez vonatkozik <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  syntax:
    content: protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "A módosítás alkalmazása a Rendszerszintű."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A naplózási szabály módosítása."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a Rendszerszintű sikeresen módosította; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a Rendszerszintű sikeresen módosította; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja a megadott hozzáférési szabály az a tulajdonosi hozzáférés vezérlési lista (DACL) kapcsolódó ennek a biztonsági azonosítót és a hozzáférés-maszk tartalmazó hozzáférési szabályok <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  remarks: "Hozzáférés eltávolítása végezhető el egy összetett algoritmus, amely előfordulhat, hogy vegye fel a hozzáférés-vezérlési szabályok mellett eltávolítja azokat.       Ez a metódus nem tudja eltávolítani a hozzáférési szabályhoz, és visszaadja `false` Ha a hozzáférési szabályhoz kapcsolódó öröklési szabály sikeres eltávolítását algoritmus túl összetett.       Rendszerbiztonsági tagok véletlenül hozzáférést elkerüléséhez alkalmazások ellenőrizze engedélyezési megléte mindenki számára teljes hozzáférést (AEFA) hozzáférés-szabályozási bejegyzés (ACE), és távolítsa el a hozzáférés-vezérlési lista módosítása előtt."
  syntax:
    content: protected bool RemoveAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A hozzáférési szabály eltávolításához."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a hozzáférési szabály sikeresen el lett távolítva; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes hozzáférési szabályok, amelyek rendelkeznek a megadott hozzáférési szabály az a tulajdonosi hozzáférés vezérlési lista (DACL) a társított biztonsági azonosítójával megegyező <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  remarks: "Rendszerbiztonsági tagok véletlenül hozzáférést elkerüléséhez alkalmazások ellenőrizze engedélyezési megléte mindenki számára teljes hozzáférést (AEFA) hozzáférés-szabályozási bejegyzés (ACE), és távolítsa el a hozzáférés-vezérlési lista módosítása előtt."
  syntax:
    content: protected void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A hozzáférési szabály eltávolításához."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes olyan hozzáférési szabályok, amelyek egyeznek pontosan a megadott hozzáférési szabály az a tulajdonosi hozzáférés szabálygyűjtemény (DACL) a társított <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  remarks: "Rendszerbiztonsági tagok véletlenül hozzáférést elkerüléséhez alkalmazások ellenőrizze engedélyezési megléte mindenki számára teljes hozzáférést (AEFA) hozzáférés-szabályozási bejegyzés (ACE), és távolítsa el a hozzáférés-vezérlési lista módosítása előtt."
  syntax:
    content: protected void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A hozzáférési szabály eltávolításához."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja a megadott naplózási szabály a rendszer hozzáférés vezérlési lista (Rendszerszintű) a kapcsolódó ennek a biztonsági azonosítót és a hozzáférés-maszk tartalmazó naplózási szabályok <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  remarks: "Naplózási eltávolítása végezhető el egy összetett algoritmus, amely a naplózási ellenőrzési szabályok mellett eltávolítja azokat is felvehet.       Ez a metódus nem tudja eltávolítani a naplózási szabály, és visszaadja `false` a naplózási szabály kapcsolt öröklődés szabály túl összetett a sikeres eltávolítását algoritmus esetén."
  syntax:
    content: protected bool RemoveAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A naplózási szabály eltávolításához."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a naplózási szabály sikeresen el lett távolítva; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes ellenőrzési szabályok, amelyek rendelkeznek a megadott naplózási szabály a rendszer hozzáférés vezérlési lista (Rendszerszintű) a társított Ez biztonsági azonosítójával megegyező <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  syntax:
    content: protected void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A naplózási szabály eltávolításához."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes ellenőrzési szabályok, amelyek egyeznek pontosan a megadott naplózási szabály az a rendszer hozzáférést vezérlő lista Rendszerhozzáférés ez társított <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektum."
  syntax:
    content: protected void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A naplózási szabály eltávolításához."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  id: ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ResetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes hozzáférési szabályok a a tulajdonosi hozzáférés vezérlési lista (DACL) a társított <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektumra, és hozzáadja a megadott hozzáférési szabály."
  remarks: "Rendszerbiztonsági tagok véletlenül hozzáférést elkerüléséhez alkalmazások ellenőrizze engedélyezési megléte mindenki számára teljes hozzáférést (AEFA) hozzáférés-szabályozási bejegyzés (ACE), és távolítsa el a hozzáférés-vezérlési lista módosítása előtt."
  syntax:
    content: protected void ResetAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "Új hozzáférési szabály."
  overload: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  id: SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: SetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes olyan hozzáférési szabályok, amelyek a megadott hozzáférési szabály az a tulajdonosi hozzáférés vezérlési lista (DACL) a társított biztonsági azonosítót és a minősítő tartalmazhat <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektumra, és hozzáadja a megadott hozzáférési szabály."
  remarks: "Rendszerbiztonsági tagok véletlenül hozzáférést elkerüléséhez alkalmazások ellenőrizze engedélyezési megléte mindenki számára teljes hozzáférést (AEFA) hozzáférés-szabályozási bejegyzés (ACE), és távolítsa el a hozzáférés-vezérlési lista módosítása előtt."
  syntax:
    content: protected void SetAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A hozzáférési szabály beállítása."
  overload: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  id: SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: SetAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes ellenőrzési szabályok, amelyek a megadott naplózási szabály a rendszer Access Control lista (Rendszerszintű) a társított biztonsági azonosítót és a minősítő tartalmazhat <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objektumra, és hozzáadja a megadott naplózási szabály."
  syntax:
    content: protected void SetAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A naplózási szabály beállítása."
  overload: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.ObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: CommonObjectSecurity(Boolean)
  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.AuthorizationRuleCollection
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRuleCollection
  nameWithType: AuthorizationRuleCollection
  fullName: System.Security.AccessControl.AuthorizationRuleCollection
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: CommonObjectSecurity
  nameWithType: CommonObjectSecurity.CommonObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: CommonObjectSecurity.AddAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: CommonObjectSecurity.AddAuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAccessRules
  nameWithType: CommonObjectSecurity.GetAccessRules
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAuditRules
  nameWithType: CommonObjectSecurity.GetAuditRules
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAccess
  nameWithType: CommonObjectSecurity.ModifyAccess
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAudit
  nameWithType: CommonObjectSecurity.ModifyAudit
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: CommonObjectSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: CommonObjectSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: CommonObjectSecurity.ResetAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: CommonObjectSecurity.SetAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: CommonObjectSecurity.SetAuditRule
