### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonAcl
  id: CommonAcl
  children:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.CommonAcl.Revision
  langs:
  - csharp
  name: CommonAcl
  nameWithType: CommonAcl
  fullName: System.Security.AccessControl.CommonAcl
  type: Class
  summary: "Hozzáférés-vezérlési listaként (ACL) jelöli, és az alaposztály a <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> és <xref href=&quot;System.Security.AccessControl.SystemAcl&quot;> </xref> osztályok."
  remarks: "-   Egyes kombinációi öröklési és hozzáférési maszk jelző értelmetlenné válnak:-bármely hozzáférés-szabályozási bejegyzés (ACE) nulla-hozzáférési maszkkal a rendszer eltávolítja.      -Öröklése-csak ACE objektum hozzáférés-vezérlési listák belül törlődnek.      - <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.InheritanceFlags>, és <xref:System.Security.AccessControl.InheritanceFlags>jelzők a levél összes ACE objektum hozzáférés-vezérlési listák adatútvonalai törlődtek.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags> </xref:System.Security.AccessControl.PropagationFlags>      -ACE-k, amelyek rendelkeznek egy <xref:System.Security.AccessControl.PropagationFlags>jelző hiányában a <xref:System.Security.AccessControl.InheritanceFlags>vagy <xref:System.Security.AccessControl.InheritanceFlags>jelző értelmetlenné válnak; eltávolítja.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags>      -A <xref:System.Security.AccessControl.PropagationFlags>jelző hiányában a <xref:System.Security.AccessControl.InheritanceFlags>vagy <xref:System.Security.AccessControl.InheritanceFlags>jelző el kell távolítani.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags>      -ACE-k, amelyek rendelkeznek egy <xref:System.Security.AccessControl.AuditFlags>értékének <xref:System.Security.AccessControl.AuditFlags>vagy <xref:System.Security.AccessControl.AuditFlags>tulajdonosi hozzáférés-vezérlési listák (DACL) törlődnek.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>      -A hozzáférés-vezérlő bejegyzések, amely nem határoz meg vagy naplózási <xref:System.Security.AccessControl.AuditFlags>vagy <xref:System.Security.AccessControl.AuditFlags>eltávolítják.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>      -A DACL SystemAudit és SystemAlarm ACE-k törlődnek.      -A rendszer hozzáférés-vezérlési listák (rendszerszintű) AccessAllowed és a hozzáférés megtagadva ACE-k törlődnek.       Kanonikus sorrendje megmarad a következő algoritmus alapján:-Explicit ACE-k elsőbbséget élveznek az örökölt ACE-k; Ez a szabály a DACL-EK és rendszerszintű egyaránt vonatkoznak.      -A DACL között kifejezett ACE ACE-k, amelyek engedélyezik a hozzáférést elsőbbséget élveznek ACE-k, amelyek lehetővé teszik a hozzáférést. Directory objektum hozzáférés-vezérlési listákat a nonobject ACE-k megelőzik objektum.      – Az összes általános ACE-k élveznek noncommon ACE-k.      -Örökölt ACE-k a relatív sorrendjük karbantartása canonicity után.      -Egyéni és ismeretlen ACE-k DACL-EK és rendszerszintű is le van tiltva.      -Tartományba összefüggő (explicit hozzáférés megtagadva és DACL, minden explicit ACE-k a rendszerszintű AccessAllowed ACE-k), a ACE-k használatával rendezi a <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A>módszerek a <xref:System.Security.Principal.SecurityIdentifier>a ACE-k társított objektumot.</xref:System.Security.Principal.SecurityIdentifier> </xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A>       Szomszédos ACE-k a rendszer kombinálja, ha szükséges.  Ez csökkenti a hozzáférés-vezérlési lista mérete nem befolyásolja a hozzáférés-vezérlő ad szemantikáját."
  syntax:
    content: 'public abstract class CommonAcl : System.Security.AccessControl.GenericAcl'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi a hosszát, a bináris megjelenítése az aktuális száma <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum. A hossz használandó előtt a hozzáférés-vezérlési lista (ACL) egy bináris tömbbe használatával a <xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*>metódus.</xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*>"
  syntax:
    content: public override sealed int BinaryLength { get; }
    return:
      type: System.Int32
      description: "A bináris megjelenítése az aktuális hosszát bájtban <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonAcl.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Count
  id: Count
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Hozzáférés száma (ACE) lekérdezi az aktuális <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum."
  syntax:
    content: public override sealed int Count { get; }
    return:
      type: System.Int32
      description: "Az aktuális ACE-k száma <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum."
  overload: System.Security.AccessControl.CommonAcl.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Marshals tartalmát a <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektumot be a megadott bájtnál tömb megadott eltolástól kezdődően."
  syntax:
    content: public override sealed void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "A bájttömb, amelybe a tartalmát a <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> van átadásra."
    - id: offset
      type: System.Int32
      description: "Az eltolás átadás-előkészítési elindításához."
  overload: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  id: IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Logikai érték, amely meghatározza, hogy a hozzáférés-vezérlés: bejegyzések (ACE-k) az aktuális lekérdezi <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum kanonikus sorrendben legyenek."
  syntax:
    content: public bool IsCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális ACE <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum sorrendje kanonikus; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonAcl.IsCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Készletek e a <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum egy olyan tároló."
  syntax:
    content: public bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum egy olyan tároló."
  overload: System.Security.AccessControl.CommonAcl.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsDS
  id: IsDS
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Készletek e az aktuális <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> célja egy directory objektum hozzáférési szabálygyűjtemény (ACL)."
  syntax:
    content: public bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> directory objektumok hozzáférés-vezérlési lista."
  overload: System.Security.AccessControl.CommonAcl.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Lekérdezi vagy beállítja a <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> a megadott indexnél."
  syntax:
    content: public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét a <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> beolvasni vagy megadni."
    return:
      type: System.Security.AccessControl.GenericAce
      description: "A <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> a megadott indexnél."
  overload: System.Security.AccessControl.CommonAcl.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  id: Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Eltávolítja az összes hozzáférés-vezérlő bejegyzések (ACE-k) található a következőben <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> van hozzárendelve a megadott objektum <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objektum."
  syntax:
    content: public void Purge (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "A <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objektum kereséséhez."
  overload: System.Security.AccessControl.CommonAcl.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  id: RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ez eltávolítja minden örökölt hozzáférés-vezérlő bejegyzések (ACE-k) <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> objektum."
  syntax:
    content: public void RemoveInheritedAces ();
    parameters: []
  overload: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Revision
  id: Revision
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "A felülvizsgálati szintjét lekérdezi a <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref>."
  syntax:
    content: public override sealed byte Revision { get; }
    return:
      type: System.Byte
      description: "A bájtértékek verziószámát megadó a <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref>."
  overload: System.Security.AccessControl.CommonAcl.Revision*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: System.Security.AccessControl.GenericAcl
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CommonAcl.Count
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
- uid: System.Security.AccessControl.GenericAce
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAce
  nameWithType: GenericAce
  fullName: System.Security.AccessControl.GenericAce
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
- uid: System.Security.AccessControl.CommonAcl.Revision
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.CommonAcl.BinaryLength*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
- uid: System.Security.AccessControl.CommonAcl.Count*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm
  nameWithType: CommonAcl.GetBinaryForm
- uid: System.Security.AccessControl.CommonAcl.IsCanonical*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
- uid: System.Security.AccessControl.CommonAcl.IsContainer*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item
  nameWithType: CommonAcl.Item
- uid: System.Security.AccessControl.CommonAcl.Purge*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge
  nameWithType: CommonAcl.Purge
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces
  nameWithType: CommonAcl.RemoveInheritedAces
- uid: System.Security.AccessControl.CommonAcl.Revision*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
