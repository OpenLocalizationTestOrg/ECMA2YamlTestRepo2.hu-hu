### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.PeerResolver
  id: PeerResolver
  children:
  - System.ServiceModel.PeerResolver.#ctor
  - System.ServiceModel.PeerResolver.CanShareReferrals
  - System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  - System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  - System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  langs:
  - csharp
  name: PeerResolver
  nameWithType: PeerResolver
  fullName: System.ServiceModel.PeerResolver
  type: Class
  summary: "Adja meg a szerződés a regisztráció segítségével alaptípusa és társ feloldása háló azonosítója a végpont-címekre, a csomópontok részt vesz a háló adja meg."
  remarks: "Ez az osztály az alaposztály egyéni peer name feloldókat végrehajtására. A társfeloldó név olyan társ csatornákon társ csomópontok részt vesz egy társ háló kereséséhez használt felderítési szolgáltatás. &quot;Regisztrálása&quot; csomópont társ rácsvonal, a mechanizmus, amellyel a társcsomópont lesz ismert, és elérhető a társ a(z) is használt."
  syntax:
    content: public abstract class PeerResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.#ctor
  id: '#ctor'
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: PeerResolver()
  nameWithType: PeerResolver.PeerResolver()
  fullName: System.ServiceModel.PeerResolver.PeerResolver()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.ServiceModel.PeerResolver&quot;> </xref> osztály."
  syntax:
    content: protected PeerResolver ();
    parameters: []
  overload: System.ServiceModel.PeerResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.CanShareReferrals
  id: CanShareReferrals
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
  fullName: System.ServiceModel.PeerResolver.CanShareReferrals
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Lekérdezi, hogy a társfeloldó átirányítások megoszthatnak-e."
  syntax:
    content: public abstract bool CanShareReferrals { get; }
    return:
      type: System.Boolean
      description: "Igaz értéke esetén a társfeloldó oszthatnak meg az átirányítások; Ha értéke HAMIS, nem."
  overload: System.ServiceModel.PeerResolver.CanShareReferrals*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  id: Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  nameWithType: PeerResolver.Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  fullName: System.ServiceModel.PeerResolver.Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Az új megadott végpontcím és beállításokkal aktuális társ feloldó példányt inicializál."
  remarks: "Ez a metódus egyszerűen inicializálja a meglévő egyenrangú feloldó példány; nem hoz létre egy újat. Hozzon létre egy új társfeloldó, a CreatePeerResolver metódust hívja a megfelelő kötéselem (például <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>).</xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>"
  syntax:
    content: public virtual void Initialize (System.ServiceModel.EndpointAddress address, System.ServiceModel.Channels.Binding binding, System.ServiceModel.Description.ClientCredentials credentials, System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "<xref:System.ServiceModel.EndpointAddress>a társ-feloldó példány új végpont címét tartalmazza, amelyek.</xref:System.ServiceModel.EndpointAddress>"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>amely megadja, hogy a társfeloldó új hálózati kötése.</xref:System.ServiceModel.Channels.Binding>"
    - id: credentials
      type: System.ServiceModel.Description.ClientCredentials
      description: "<xref:System.ServiceModel.Description.ClientCredentials>a társfeloldó esetében, amely megadja az új ügyfél hitelesítő adatait.</xref:System.ServiceModel.Description.ClientCredentials>"
    - id: referralPolicy
      type: System.ServiceModel.PeerResolvers.PeerReferralPolicy
      description: "<xref href=&quot;System.ServiceModel.PeerResolvers.PeerReferralPolicy&quot;></xref>a társfeloldó esetében, amely megadja az új hivatkozási házirend."
  overload: System.ServiceModel.PeerResolver.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  id: Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Register(String,PeerNodeAddress,TimeSpan)
  nameWithType: PeerResolver.Register(String,PeerNodeAddress,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Register(String,PeerNodeAddress,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Regisztrálja a <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> egy adott társ háló esetében."
  syntax:
    content: public abstract object Register (string meshId, System.ServiceModel.PeerNodeAddress nodeAddress, TimeSpan timeout);
    parameters:
    - id: meshId
      type: System.String
      description: "A társ háló, amelyben a társcsomópont regisztrálni kell az azonosítója."
    - id: nodeAddress
      type: System.ServiceModel.PeerNodeAddress
      description: "A <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> lehet regisztrálni a társ háló."
    - id: timeout
      type: System.TimeSpan
      description: "A sikeres a társ háló regisztrálni a kísérlet megszakítása előtti várakozási idő hosszát. Ha a sikertelen lesz, <xref:System.TimeoutException>jelenik meg, az a társ.</xref:System.TimeoutException>"
    return:
      type: System.Object
      description: "Egy <xref:System.Object>, amely jelzi, hogy a regisztrációs azonosítót.</xref:System.Object> A regisztrációs azonosítója objektum átadott a <> </> *> és <> </> *> módszerek."
  overload: System.ServiceModel.PeerResolver.Register*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  id: Resolve(System.String,System.Int32,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Resolve(String,Int32,TimeSpan)
  nameWithType: PeerResolver.Resolve(String,Int32,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Resolve(String,Int32,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A megadott háló azonosítója a csomópontok részt vesz a társ háló nulla vagy több végpont-címekre mutat."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.PeerNodeAddress> Resolve (string meshId, int maxAddresses, TimeSpan timeout);
    parameters:
    - id: meshId
      type: System.String
      description: "A háló azonosítója a társ háló, amelyen belül a <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> objektumokat, jelző részt vevő csomópontja be lesznek szerezve van."
    - id: maxAddresses
      type: System.Int32
      description: "A végpont címét vissza száma."
    - id: timeout
      type: System.TimeSpan
      description: "A sikeres a társ hálón végpont címek feloldására irányuló kísérlet megszakítása előtti várakozási idő hosszát. Ha a sikertelen lesz, <xref:System.TimeoutException>jelenik meg, az a társ.</xref:System.TimeoutException>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.PeerNodeAddress}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; tartalmazó <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> csomópontok részt vesz a társ háló képviselő objektum."
  overload: System.ServiceModel.PeerResolver.Resolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  id: Unregister(System.Object,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Unregister(Object,TimeSpan)
  nameWithType: PeerResolver.Unregister(Object,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Unregister(Object,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "A regisztrációs bejegyzés, a csomópont eltávolítása a társ-háló."
  remarks: "A regisztrációs Azonosítót egy társ feloldó, jelképező jogkivonatot, a nagyon minimális, a rekord a társ csomópont-Azonosítót és a háló azonosítót. Ezt az azonosító értéket kell szerzett <xref:System.ServiceModel.PeerResolver.Register%2A>.</xref:System.ServiceModel.PeerResolver.Register%2A> egy előző hívása közben       Regisztrációját két adott esetben elnevezése: – a <xref:System.ServiceModel.PeerNode>, hagyja a társ háló (általában eredményeként az utolsó társ csatorna vagy szolgáltatásgazda társított azt a záró).</xref:System.ServiceModel.PeerNode>      – Amikor a <xref:System.ServiceModel.PeerNode>nem érhető el-végpont cím, más csomópontok részt vesz a társ háló található.</xref:System.ServiceModel.PeerNode> Ennek eredményeképpen a <xref:System.ServiceModel.PeerNode>már nem érhető el, és megkísérli törölni magát a <xref:System.ServiceModel.PeerResolver>.</xref:System.ServiceModel.PeerResolver> Unregister hívás</xref:System.ServiceModel.PeerNode> Más társ csomópontok a hálón megszüntetni a regisztrációt követően elérhetővé válnak, ha a csomópont újra regisztrálhatja saját magát hívásával <xref:System.ServiceModel.PeerResolver.Register%2A>és egy új regisztrációs azonosítót.</xref:System.ServiceModel.PeerResolver.Register%2A>"
  syntax:
    content: public abstract void Unregister (object registrationId, TimeSpan timeout);
    parameters:
    - id: registrationId
      type: System.Object
      description: "A csomópont egy korábbi hívás <xref:System.ServiceModel.PeerResolver.Register*>.</xref:System.ServiceModel.PeerResolver.Register*> kapott egy regisztrációs azonosítója"
    - id: timeout
      type: System.TimeSpan
      description: "Mennyi ideig vár a társ háló a regisztráció sikeres eltávolítását. Ha a sikertelen lesz, <xref:System.TimeoutException>jelenik meg, az a társ.</xref:System.TimeoutException>"
  overload: System.ServiceModel.PeerResolver.Unregister*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  id: Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  langs:
  - csharp
  name: Update(Object,PeerNodeAddress,TimeSpan)
  nameWithType: PeerResolver.Update(Object,PeerNodeAddress,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Update(Object,PeerNodeAddress,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Frissítések a <xref href=&quot;System.ServiceModel.PeerNodeAddress&quot;> </xref> egy adott társ rácsvonal regisztrált csomópont."
  remarks: "Frissítés lesz meghívva címét a <xref:System.ServiceModel.PeerNode>módosításokat a helyi gépen.</xref:System.ServiceModel.PeerNode>"
  syntax:
    content: public abstract void Update (object registrationId, System.ServiceModel.PeerNodeAddress updatedNodeAddress, TimeSpan timeout);
    parameters:
    - id: registrationId
      type: System.Object
      description: "A csomópont egy korábbi hívás által előállított regisztrációs azonosítója jogkivonat<xref:System.ServiceModel.PeerResolver.Register*></xref:System.ServiceModel.PeerResolver.Register*>"
    - id: updatedNodeAddress
      type: System.ServiceModel.PeerNodeAddress
      description: "A frissített végpontcím (és más többhelyűségével IP-címek)."
    - id: timeout
      type: System.TimeSpan
      description: "A sikeres a csomópont regisztrációs a társ hálón frissítésére tett kísérlet megszakítása előtti várakozási idő hosszát. Ha a sikertelen lesz, <xref:System.TimeoutException>jelenik meg, az a társ.</xref:System.TimeoutException>"
  overload: System.ServiceModel.PeerResolver.Update*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.PeerResolver.#ctor
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: PeerResolver()
  nameWithType: PeerResolver.PeerResolver()
  fullName: System.ServiceModel.PeerResolver.PeerResolver()
- uid: System.ServiceModel.PeerResolver.CanShareReferrals
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
  fullName: System.ServiceModel.PeerResolver.CanShareReferrals
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  nameWithType: PeerResolver.Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
  fullName: System.ServiceModel.PeerResolver.Initialize(EndpointAddress,Binding,ClientCredentials,PeerReferralPolicy)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: true
  name: ClientCredentials
  nameWithType: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
- uid: System.ServiceModel.PeerResolvers.PeerReferralPolicy
  parent: System.ServiceModel.PeerResolvers
  isExternal: false
  name: PeerReferralPolicy
  nameWithType: PeerReferralPolicy
  fullName: System.ServiceModel.PeerResolvers.PeerReferralPolicy
- uid: System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Register(String,PeerNodeAddress,TimeSpan)
  nameWithType: PeerResolver.Register(String,PeerNodeAddress,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Register(String,PeerNodeAddress,TimeSpan)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.PeerNodeAddress
  parent: System.ServiceModel
  isExternal: false
  name: PeerNodeAddress
  nameWithType: PeerNodeAddress
  fullName: System.ServiceModel.PeerNodeAddress
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Resolve(String,Int32,TimeSpan)
  nameWithType: PeerResolver.Resolve(String,Int32,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Resolve(String,Int32,TimeSpan)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.PeerNodeAddress}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PeerNodeAddress>
  nameWithType: ReadOnlyCollection<PeerNodeAddress>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.PeerNodeAddress>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ServiceModel.PeerNodeAddress>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.PeerNodeAddress
    name: PeerNodeAddress
    nameWithType: PeerNodeAddress
    fullName: PeerNodeAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Unregister(Object,TimeSpan)
  nameWithType: PeerResolver.Unregister(Object,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Unregister(Object,TimeSpan)
- uid: System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Update(Object,PeerNodeAddress,TimeSpan)
  nameWithType: PeerResolver.Update(Object,PeerNodeAddress,TimeSpan)
  fullName: System.ServiceModel.PeerResolver.Update(Object,PeerNodeAddress,TimeSpan)
- uid: System.ServiceModel.PeerResolver.#ctor*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: PeerResolver
  nameWithType: PeerResolver.PeerResolver
- uid: System.ServiceModel.PeerResolver.CanShareReferrals*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: CanShareReferrals
  nameWithType: PeerResolver.CanShareReferrals
- uid: System.ServiceModel.PeerResolver.Initialize*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Initialize
  nameWithType: PeerResolver.Initialize
- uid: System.ServiceModel.PeerResolver.Register*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Register
  nameWithType: PeerResolver.Register
- uid: System.ServiceModel.PeerResolver.Resolve*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Resolve
  nameWithType: PeerResolver.Resolve
- uid: System.ServiceModel.PeerResolver.Unregister*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Unregister
  nameWithType: PeerResolver.Unregister
- uid: System.ServiceModel.PeerResolver.Update*
  parent: System.ServiceModel.PeerResolver
  isExternal: false
  name: Update
  nameWithType: PeerResolver.Update
