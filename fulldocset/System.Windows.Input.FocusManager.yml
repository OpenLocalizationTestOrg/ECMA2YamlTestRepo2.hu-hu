### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.FocusManager
  id: FocusManager
  children:
  - System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.FocusedElementProperty
  - System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  - System.Windows.Input.FocusManager.GotFocusEvent
  - System.Windows.Input.FocusManager.IsFocusScopeProperty
  - System.Windows.Input.FocusManager.LostFocusEvent
  - System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  - System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  - System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  langs:
  - csharp
  name: FocusManager
  nameWithType: FocusManager
  fullName: System.Windows.Input.FocusManager
  type: Class
  summary: "Statikus metódusok, a csatolt tulajdonságok és az események biztosít fókusz hatóköröket és meghatározása és a kijelölt elem beállítása a hatókörön belül."
  remarks: "A [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] vannak a fókusz vonatkozó két fogalom: azok a logikai és a fókuszt.       A billentyűzetfókusz az elem, amelynek jelenleg fogad bevitel a billentyűzetről vonatkozik.  A billentyűzetfókusz csak egy elem lehet.  Az elemnek a billentyűzetfókusz <xref:System.Windows.IInputElement.IsKeyboardFocused%2A>beállítása `true`.</xref:System.Windows.IInputElement.IsKeyboardFocused%2A>  <xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>a billentyűzet az aktuális elem beolvasása.</xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=fullName>       Logikai fókusz vonatkozik a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>egy adott fókusz hatókörén belül.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>       A fókusz hatóköre a tároló eleme, amely nyomon követi a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>a hatókörén belül.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Alapértelmezés szerint a <xref:System.Windows.Window>osztály a fókusz hatókör, amelyek a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, és <xref:System.Windows.Controls.ToolBar>osztályok.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Egy elem, amelynek az aktuális hatókör rendelkezik <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>beállítása `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       Logikai aktuális több elem is lehet, de csak lehet egyetlen fókusz hatókörön belüli logikai aktuális egy elemet.  Logikai az aktuális elem nem kell feltétlenül billentyűzetfókusz, de a billentyűzetfókusz rendelkező elemet kell logikai fókuszba.  Akkor lehet egy fókusz hatókörön belüli fókusz hatókör meghatározása.  Ebben az esetben mind a szülő aktuális és a gyermek fókusz hatókörébe <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName> rendelkezhet       A következő forgatókönyv bemutatja, hogyan billentyűzetfókusz és a logikai változása egy [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] alkalmazás, amely egy, <xref:System.Windows.Window> <xref:System.Windows.Controls.TextBox>és egy <xref:System.Windows.Controls.Menu> <xref:System.Windows.Controls.MenuItem>.</xref:System.Windows.Controls.MenuItem> tartalmaz</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window>  A billentyűzetfókusz változásának a <xref:System.Windows.Controls.TextBox>a a <xref:System.Windows.Controls.MenuItem>, a <xref:System.Windows.Controls.TextBox>veszteségek billentyűzetfókusz de megtartja a logikai fókusza a <xref:System.Windows.Window>hatókör összpontosítson.</xref:System.Windows.Window> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.MenuItem> </xref:System.Windows.Controls.TextBox>  A <xref:System.Windows.Controls.MenuItem>Billentyűzetfókusz beolvassa és logikai fókusza beolvassa a <xref:System.Windows.Controls.Menu>hatókör összpontosítson.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>  Ha a billentyűzetfókusz adja vissza, a legfelső szintű <xref:System.Windows.Window>az elem az <xref:System.Windows.Window>aktuális hatókör logikai aktuális beszerzi a billentyűzetfókusz, amely a jelen esetben ez a <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Window>  A <xref:System.Windows.Controls.TextBox>most már a logikai és a billentyűzetfókuszt.</xref:System.Windows.Controls.TextBox>  A <xref:System.Windows.Controls.MenuItem>elveszítette a billentyűzetfókuszt, de a logikai fókusza megőrzi a <xref:System.Windows.Controls.Menu>hatókör összpontosítson.</xref:System.Windows.Controls.Menu> </xref:System.Windows.Controls.MenuItem>       Az alapértelmezett érték <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>a egy <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, és <xref:System.Windows.Controls.ContextMenu>van `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       A fókusz további információkért lásd: a [bemeneti áttekintése](~/add/includes/ajax-current-ext-md.md) és a [fókusz áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static class FocusManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "A kezelőtársítást ad hozzá a <xref:System.Windows.Input.FocusManager.GotFocus>esemény csatolt.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref> vagy <xref href=&quot;System.Windows.ContentElement&quot;> </xref> ezt az eseményt figyel."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Az eseménykezelő lehet hozzáadni."
  overload: System.Windows.Input.FocusManager.AddGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "A kezelőtársítást ad hozzá a <xref:System.Windows.Input.FocusManager.LostFocus>esemény csatolt.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref> vagy <xref href=&quot;System.Windows.ContentElement&quot;> </xref> ezt az eseményt figyel."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Az eseménykezelő lehet hozzáadni."
  overload: System.Windows.Input.FocusManager.AddLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  id: FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Azonosítja a <xref:System.Windows.Input.FocusManager.FocusedElement*>csatolt tulajdonság.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FocusedElementProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  id: GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Az elem logikai aktuális lekérdezi a megadott fókusz hatókörén belül."
  remarks: "A <xref:System.Windows.Input.FocusManager.FocusedElement%2A>eleme, amely egy adott fókusz hatókör logikai fókuszba.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Ez az objektum is, vagy már nem rendelkezik a billentyűzetfókusz.  Az elem, amely megkapja a bevitel a billentyűzetről a billentyűzetfókusz hivatkozik.  A fókusz, billentyűzetfókusz és logikai fókusz további információkért lásd: a [bemeneti áttekintése](~/add/includes/ajax-current-ext-md.md).       Ha `element` nincs aktuális hatókör, ezt a módszert fog visszaadni `null`.       Használjon <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>Adja meg a elem egy megadott fókusz hatókörön belüli logikai aktuális.</xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>"
  example:
  - "The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the GetFocusedElement.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Az elem logikai aktuális megadott fókusz hatókörében."
    return:
      type: System.Windows.IInputElement
      description: "Az elem logikai aktuális megadott fókusz hatókörében."
  overload: System.Windows.Input.FocusManager.GetFocusedElement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  id: GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Meghatározza, hogy a megadott elem, amelynek a legközelebbi elődje <xref:System.Windows.Input.FocusManager.IsFocusScope*>beállítása <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "Az alapértelmezett érték <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>a egy <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>van `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       A fókusz hatóköre a tároló eleme, amely nyomon követi a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>a hatókörén belül.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Alapértelmezés szerint a <xref:System.Windows.Window>osztály a fókusz hatókör, amelyek a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, és <xref:System.Windows.Controls.ToolBar>osztályok.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Egy elem, amelynek az aktuális hatókör rendelkezik <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>beállítása `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       A fókusz, billentyűzetfókusz és logikai fókusz további információkért lásd: a [bemeneti áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Az elem a legközelebbi fókusz hatóköre eléréséhez."
    return:
      type: System.Windows.DependencyObject
      description: "A megadott elem fókusz hatóköre."
  overload: System.Windows.Input.FocusManager.GetFocusScope*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  id: GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Meghatározza, hogy a megadott <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> fókusz hatókör."
  remarks: "A fókusz hatóköre a tároló eleme, amely nyomon követi a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>a hatókörén belül.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Alapértelmezés szerint a <xref:System.Windows.Window>osztály a fókusz hatókör, amelyek a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, és <xref:System.Windows.Controls.ToolBar>osztályok.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Egy elem, amelynek az aktuális hatókör rendelkezik <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>beállítása `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       A fókusz, billentyűzetfókusz és logikai fókusz további információkért lásd: a [bemeneti áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static bool GetIsFocusScope (System.Windows.DependencyObject element);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Az elem, amelynek be kell olvasni a csatolt tulajdonság."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <xref:System.Windows.Input.FocusManager.IsFocusScope*>értéke <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> a megadott elem; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  overload: System.Windows.Input.FocusManager.GetIsFocusScope*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  id: GotFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Azonosítja a <xref:System.Windows.Input.FocusManager.GotFocus>esemény csatolt.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent GotFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  id: IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Azonosítja a <xref:System.Windows.Input.FocusManager.IsFocusScope*>csatolt tulajdonság.</xref:System.Windows.Input.FocusManager.IsFocusScope*>"
  remarks: "Az alapértelmezett érték <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>a egy <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu>van `true`.</xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       A fókusz hatóköre a tároló eleme, amely nyomon követi a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>a hatókörén belül.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Alapértelmezés szerint a <xref:System.Windows.Window>osztály a fókusz hatókör, amelyek a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, és <xref:System.Windows.Controls.ToolBar>osztályok.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Egy elem, amelynek az aktuális hatókör rendelkezik <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>beállítása `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       A fókusz, billentyűzetfókusz és logikai fókusz további információkért lásd: a [bemeneti áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  id: LostFocusEvent
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Azonosítja a <xref:System.Windows.Input.FocusManager.LostFocus>esemény csatolt.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent LostFocusEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Eltávolít egy hibakezelőt a <xref:System.Windows.Input.FocusManager.GotFocus>esemény csatolt.</xref:System.Windows.Input.FocusManager.GotFocus>"
  syntax:
    content: public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref> vagy <xref href=&quot;System.Windows.ContentElement&quot;> </xref> ezt az eseményt figyel."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Az eseménykezelő távolíthatók el."
  overload: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  id: RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Eltávolít egy hibakezelőt a <xref:System.Windows.Input.FocusManager.LostFocus>esemény csatolt.</xref:System.Windows.Input.FocusManager.LostFocus>"
  syntax:
    content: public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref> vagy <xref href=&quot;System.Windows.ContentElement&quot;> </xref> ezt az eseményt figyel."
    - id: handler
      type: System.Windows.RoutedEventHandler
      description: "Az eseménykezelő távolíthatók el."
  overload: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  id: SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Logikai beállítása a megadott elem összpontosítanak."
  remarks: "A <xref:System.Windows.Input.FocusManager.FocusedElement%2A>eleme, amely az adott fókusz hatókör logikai fókuszba.</xref:System.Windows.Input.FocusManager.FocusedElement%2A>  Ez az objektum is, vagy már nem rendelkezik a billentyűzetfókusz.  Az elem, amely megkapja a bevitel a billentyűzetről a billentyűzetfókusz hivatkozik.  A fókusz, billentyűzetfókusz és logikai fókusz további információkért lásd: a [bemeneti áttekintése](~/add/includes/ajax-current-ext-md.md).       Akkor lehet, hogy a fókusz hatókör, az elem állapota elődje fókusz hatókörökkel.  Például ha egy <xref:System.Windows.Controls.StackPanel>van a fókusz hatókör és a fölérendelt <xref:System.Windows.Window>fókusz hatókör, egy <xref:System.Windows.Controls.TextBox>gyermeke a <xref:System.Windows.Controls.StackPanel>kell megadni a <xref:System.Windows.Window>SetFocusedElement meghívásakor a fókusz hatókörként.</xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Window> </xref:System.Windows.Controls.StackPanel>  A <xref:System.Windows.Controls.TextBox>Ezután <xref:System.Windows.Input.FocusManager.FocusedElement%2A>mind a <xref:System.Windows.Window>összpontosítson, hatókör és a <xref:System.Windows.Controls.StackPanel>hatókör összpontosítson.</xref:System.Windows.Controls.StackPanel> </xref:System.Windows.Window> </xref:System.Windows.Input.FocusManager.FocusedElement%2A> </xref:System.Windows.Controls.TextBox>       SetFocusedElement ad a megadott elem logikai fókusz megadott fókusz hatókörében, és megkísérli a elem billentyűzet fókuszba."
  example:
  - "The following example sets the element with logical focus by using the SetFocusedElement and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.  \n  \n [!code-cs[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focusgetsetfocusedelement)]\n [!code-vb[focussnippets#FocusGetSetFocusedElement](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focusgetsetfocusedelement)]"
  syntax:
    content: public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Az aktuális hatókör használandó ellenőrizze a megadott elem a <xref:System.Windows.Input.FocusManager.FocusedElement*>.</xref:System.Windows.Input.FocusManager.FocusedElement*>"
    - id: value
      type: System.Windows.IInputElement
      description: "Az elem a logikai fókuszba."
  overload: System.Windows.Input.FocusManager.SetFocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  id: SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  langs:
  - csharp
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Beállítja a megadott <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> fókusz hatókörként."
  remarks: "A fókusz hatóköre a tároló eleme, amely nyomon követi a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>a hatókörén belül.</xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=fullName>  Alapértelmezés szerint a <xref:System.Windows.Window>osztály a fókusz hatókör, amelyek a <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, és <xref:System.Windows.Controls.ToolBar>osztályok.</xref:System.Windows.Controls.ToolBar> </xref:System.Windows.Controls.ContextMenu> </xref:System.Windows.Controls.Menu> </xref:System.Windows.Window>  Egy elem, amelynek az aktuális hatókör rendelkezik <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>beállítása `true`.</xref:System.Windows.Input.FocusManager.IsFocusScope%2A>       A fókusz, billentyűzetfókusz és logikai fókusz további információkért lásd: a [bemeneti áttekintése](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The follow example makes an element a focus scope by using SetIsFocusScope.  \n  \n [!code-cs[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/csharp/FocusSnippets/Window1.xaml.cs#focussetisfocusscope)]\n [!code-vb[focussnippets#FocusSetIsFocusScope](~/add/codesnippet/visualbasic/focussnippets/window1.xaml.vb#focussetisfocusscope)]"
  syntax:
    content: public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Az elem a fókusz hatókör végrehajtásához."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha `element` fókusz hatókör; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.FocusManager.SetIsFocusScope*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RoutedEventHandler
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandler
  nameWithType: RoutedEventHandler
  fullName: System.Windows.RoutedEventHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.AddLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.FocusedElementProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: FocusedElementProperty
  nameWithType: FocusManager.FocusedElementProperty
  fullName: System.Windows.Input.FocusManager.FocusedElementProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement(DependencyObject)
  nameWithType: FocusManager.GetFocusedElement(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusedElement(DependencyObject)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope(DependencyObject)
  nameWithType: FocusManager.GetFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetFocusScope(DependencyObject)
- uid: System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope(DependencyObject)
  nameWithType: FocusManager.GetIsFocusScope(DependencyObject)
  fullName: System.Windows.Input.FocusManager.GetIsFocusScope(DependencyObject)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.FocusManager.GotFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GotFocusEvent
  nameWithType: FocusManager.GotFocusEvent
  fullName: System.Windows.Input.FocusManager.GotFocusEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.FocusManager.IsFocusScopeProperty
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: IsFocusScopeProperty
  nameWithType: FocusManager.IsFocusScopeProperty
  fullName: System.Windows.Input.FocusManager.IsFocusScopeProperty
- uid: System.Windows.Input.FocusManager.LostFocusEvent
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: LostFocusEvent
  nameWithType: FocusManager.LostFocusEvent
  fullName: System.Windows.Input.FocusManager.LostFocusEvent
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveGotFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  nameWithType: FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
  fullName: System.Windows.Input.FocusManager.RemoveLostFocusHandler(DependencyObject,RoutedEventHandler)
- uid: System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement(DependencyObject,IInputElement)
  nameWithType: FocusManager.SetFocusedElement(DependencyObject,IInputElement)
  fullName: System.Windows.Input.FocusManager.SetFocusedElement(DependencyObject,IInputElement)
- uid: System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope(DependencyObject,Boolean)
  nameWithType: FocusManager.SetIsFocusScope(DependencyObject,Boolean)
  fullName: System.Windows.Input.FocusManager.SetIsFocusScope(DependencyObject,Boolean)
- uid: System.Windows.Input.FocusManager.AddGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddGotFocusHandler
  nameWithType: FocusManager.AddGotFocusHandler
- uid: System.Windows.Input.FocusManager.AddLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: AddLostFocusHandler
  nameWithType: FocusManager.AddLostFocusHandler
- uid: System.Windows.Input.FocusManager.GetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusedElement
  nameWithType: FocusManager.GetFocusedElement
- uid: System.Windows.Input.FocusManager.GetFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetFocusScope
  nameWithType: FocusManager.GetFocusScope
- uid: System.Windows.Input.FocusManager.GetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: GetIsFocusScope
  nameWithType: FocusManager.GetIsFocusScope
- uid: System.Windows.Input.FocusManager.RemoveGotFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveGotFocusHandler
  nameWithType: FocusManager.RemoveGotFocusHandler
- uid: System.Windows.Input.FocusManager.RemoveLostFocusHandler*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: RemoveLostFocusHandler
  nameWithType: FocusManager.RemoveLostFocusHandler
- uid: System.Windows.Input.FocusManager.SetFocusedElement*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetFocusedElement
  nameWithType: FocusManager.SetFocusedElement
- uid: System.Windows.Input.FocusManager.SetIsFocusScope*
  parent: System.Windows.Input.FocusManager
  isExternal: false
  name: SetIsFocusScope
  nameWithType: FocusManager.SetIsFocusScope
