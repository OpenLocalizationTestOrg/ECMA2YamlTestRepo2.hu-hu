### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RijndaelManagedTransform
  id: RijndaelManagedTransform
  children:
  - System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  - System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  - System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  - System.Security.Cryptography.RijndaelManagedTransform.Clear
  - System.Security.Cryptography.RijndaelManagedTransform.Dispose
  - System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  - System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  - System.Security.Cryptography.RijndaelManagedTransform.Reset
  - System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: RijndaelManagedTransform
  nameWithType: RijndaelManagedTransform
  fullName: System.Security.Cryptography.RijndaelManagedTransform
  type: Class
  summary: "Az adatok a Rijndael algoritmussal kriptográfiai átalakítás hajt végre. Ez az osztály nem örökölhető."
  remarks: "> [!NOTE]> Ez az osztály használata nem ajánlott. Jobb gyakorlat <xref:System.Security.Cryptography.RijndaelManaged>rendelkező egy <xref:System.Security.Cryptography.CryptoStream>objektum.</xref:System.Security.Cryptography.CryptoStream> </xref:System.Security.Cryptography.RijndaelManaged> A <xref:System.Security.Cryptography.CryptoStream>objektum kezeli a kitöltési problémákat, amelyek közvetlenül RijndaelManagedTransform használatakor fordul elő.</xref:System.Security.Cryptography.CryptoStream> Egy vonatkozó példáért lásd: a <xref:System.Security.Cryptography.RijndaelManaged>osztályhoz.</xref:System.Security.Cryptography.RijndaelManaged>       Mind a <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A>és <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A>módszerek vissza inicializálva van a kulcs adatainak az aktuális RijndaelManagedTransform osztály példányának <xref:System.Security.Cryptography.RijndaelManaged>objektum.</xref:System.Security.Cryptography.RijndaelManaged> </xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> </xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A>  Az adatok titkosítására vagy visszafejtésére Rijndael algoritmussal, adja át a módszerek által visszaadott RijndaelManagedTransform objektum egy <xref:System.Security.Cryptography.CryptoStream>objektum.</xref:System.Security.Cryptography.CryptoStream>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RijndaelManagedTransform : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  id: BlockSizeValue
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: BlockSizeValue
  nameWithType: RijndaelManagedTransform.BlockSizeValue
  fullName: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a blokkméret."
  syntax:
    content: public int BlockSizeValue { get; }
    return:
      type: System.Int32
      description: "Az adatok mérete bájtban blokkolja."
  overload: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: RijndaelManagedTransform.CanReuseTransform
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi egy érték, amely jelzi, hogy az aktuális átalakítás felhasználhatók."
  syntax:
    content: public bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Egy érték, amely jelzi, hogy a több blokkra átalakíthatók lekérdezi."
  syntax:
    content: public bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha több blokkra átalakíthatók; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear
  id: Clear
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: Clear()
  nameWithType: RijndaelManagedTransform.Clear()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Feloldja a által használt erőforrások a <xref href=&quot;System.Security.Cryptography.RijndaelManagedTransform&quot;> </xref> osztály."
  remarks: "Ez a módszer egy egyszerű hívása <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>osztályhoz.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       Hívása `Dispose` által használt erőforrások lehetővé teszi a <xref:System.Security.Cryptography.RijndaelManagedTransform>foglalhatók le más célra való.</xref:System.Security.Cryptography.RijndaelManagedTransform> További információ `Dispose`, lásd: [nem felügyelt erőforrások tisztítás](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManagedTransform.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose
  id: Dispose
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: Dispose()
  nameWithType: RijndaelManagedTransform.Dispose()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Feloldja a jelenlegi példány által használt erőforrások a <xref href=&quot;System.Security.Cryptography.RijndaelManagedTransform&quot;> </xref> osztály."
  remarks: "Hívás `Dispose` amikor elkészült, a <xref:System.Security.Cryptography.RijndaelManagedTransform>.</xref:System.Security.Cryptography.RijndaelManagedTransform> használatával A `Dispose` metódus leaves a <xref:System.Security.Cryptography.RijndaelManagedTransform>használhatatlan állapotban.</xref:System.Security.Cryptography.RijndaelManagedTransform> Hívása után `Dispose`, fel kell szabadítania mutató összes hivatkozást az <xref:System.Security.Cryptography.RijndaelManagedTransform>, a szemétgyűjtő is visszaszerezni a memória, amely a <xref:System.Security.Cryptography.RijndaelManagedTransform>lett elfoglaló.</xref:System.Security.Cryptography.RijndaelManagedTransform> </xref:System.Security.Cryptography.RijndaelManagedTransform>       További információkért lásd: [nem felügyelt erőforrások tisztítás](~/add/includes/ajax-current-ext-md.md) és [eldobásakor metódusának](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Mindig hívás `Dispose` az <xref:System.Security.Cryptography.RijndaelManagedTransform>.</xref:System.Security.Cryptography.RijndaelManagedTransform> utolsó referenciaként a engedélyezés előtt Ellenkező esetben az erőforrásoknak nem szabadul szemétgyűjtő hívást csak a <xref:System.Security.Cryptography.RijndaelManagedTransform>objektum `Finalize` metódus.</xref:System.Security.Cryptography.RijndaelManagedTransform>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManagedTransform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: RijndaelManagedTransform.InputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a bemeneti blokkméret."
  syntax:
    content: public int InputBlockSize { get; }
    return:
      type: System.Int32
      description: "A bemeneti adatok mérete bájtban blokkolja."
  overload: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: RijndaelManagedTransform.OutputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a kimeneti blokkméret."
  syntax:
    content: public int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: "A kimeneti adatok mérete bájtban blokkolja."
  overload: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset
  id: Reset
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: Reset()
  nameWithType: RijndaelManagedTransform.Reset()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Belső állapotát visszaállítja <xref href=&quot;System.Security.Cryptography.RijndaelManagedTransform&quot;> </xref> , a különböző titkosítási vagy visszafejtési újra használható."
  remarks: "A visszaállítási módszer neve automatikusan <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>.</xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A> hívásakor A visszaállítási metódus nem hívják meg, ha például a titkosított bemeneti adatok szemétgyűjtési, és nem fejthető vissza. Ebben az esetben kivételt vált ki, és alaphelyzetbe állítása nem hívják meg. Dönthet úgy, hogy manuálisan ebben az esetben az a alaphelyzetbe állítása a metódus meghívható."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Cryptography.RijndaelManagedTransform.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: RijndaelManagedTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Kiszámítja a bemeneti bájt tömb a megadott régión átalakítását, és az amiatt végbemenő átalakításában másolja a kimeneti bájttömb megadott régiója."
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "A bemeneti meg végrehajtani a műveletet."
    - id: inputOffset
      type: System.Int32
      description: "Az eltolás a bemeneti bájttömb származó adatok használatának megkezdéséhez."
    - id: inputCount
      type: System.Int32
      description: "A bemeneti bájttömb adatok használandó bájtok száma."
    - id: outputBuffer
      type: System.Byte[]
      description: "A kimeneti adatokat írni."
    - id: outputOffset
      type: System.Int32
      description: "A kimeneti bájttömb megkezdéséhez az adatok írása az eltolás."
    return:
      type: System.Int32
      description: "Az írt bájtok száma."
  overload: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>outputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A bemeneti puffer hossza kisebb, mint a bemeneti eltolás és a bemeneti számának összege.       – vagy – értékének a <code> inputCount </code> paraméter értéke kisebb vagy egyenlő, mint 0.       – vagy – értékének a <code> inputCount </code> paraméter értéke nagyobb, mint a hosszát a <code> inputBuffer </code> paraméter.       – vagy – a hosszát a <code> inputCount </code> paraméter nincs a bemeneti blokkméret által egyenletesen devisable."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Értékét a <code> inputOffset </code> paraméter értéke negatív."
  platform:
  - net462
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: RijndaelManagedTransform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Kiszámítja a megadott bájttömb az adott régió az átalakításhoz."
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "A bemeneti meg végrehajtani a műveletet."
    - id: inputOffset
      type: System.Int32
      description: "Az eltolás a bájttömb származó adatok használatának megkezdéséhez."
    - id: inputCount
      type: System.Int32
      description: "A bájttömb adatok használandó bájtok száma."
    return:
      type: System.Byte[]
      description: "A számított transzformáció."
  overload: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Értékét a <code> inputCount </code> paramétere 0-nál kisebb.       – vagy – értékének a <code> inputCount </code> paraméter nullánál kisebb, mint a hossza <code> inputBuffer </code> paraméter."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Értékét a <code> inputOffset </code> paraméter értéke negatív."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "A hosszát a <code> inputCount </code> paraméter nincs a bemeneti blokkméret által egyenletesen devisable."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: BlockSizeValue
  nameWithType: RijndaelManagedTransform.BlockSizeValue
  fullName: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: CanReuseTransform
  nameWithType: RijndaelManagedTransform.CanReuseTransform
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Clear()
  nameWithType: RijndaelManagedTransform.Clear()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Clear()
- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Dispose()
  nameWithType: RijndaelManagedTransform.Dispose()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Dispose()
- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: InputBlockSize
  nameWithType: RijndaelManagedTransform.InputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize
- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: OutputBlockSize
  nameWithType: RijndaelManagedTransform.OutputBlockSize
  fullName: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize
- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Reset()
  nameWithType: RijndaelManagedTransform.Reset()
  fullName: System.Security.Cryptography.RijndaelManagedTransform.Reset()
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: RijndaelManagedTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: RijndaelManagedTransform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: BlockSizeValue
  nameWithType: RijndaelManagedTransform.BlockSizeValue
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: CanReuseTransform
  nameWithType: RijndaelManagedTransform.CanReuseTransform
- uid: System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: RijndaelManagedTransform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.RijndaelManagedTransform.Clear*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Clear
  nameWithType: RijndaelManagedTransform.Clear
- uid: System.Security.Cryptography.RijndaelManagedTransform.Dispose*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Dispose
  nameWithType: RijndaelManagedTransform.Dispose
- uid: System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: InputBlockSize
  nameWithType: RijndaelManagedTransform.InputBlockSize
- uid: System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: OutputBlockSize
  nameWithType: RijndaelManagedTransform.OutputBlockSize
- uid: System.Security.Cryptography.RijndaelManagedTransform.Reset*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: Reset
  nameWithType: RijndaelManagedTransform.Reset
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformBlock*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: TransformBlock
  nameWithType: RijndaelManagedTransform.TransformBlock
- uid: System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock*
  parent: System.Security.Cryptography.RijndaelManagedTransform
  isExternal: false
  name: TransformFinalBlock
  nameWithType: RijndaelManagedTransform.TransformFinalBlock
