### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.QualificationDataItem
  id: QualificationDataItem
  children:
  - System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)
  - System.AddIn.Hosting.QualificationDataItem.GetHashCode
  - System.AddIn.Hosting.QualificationDataItem.Name
  - System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)
  - System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)
  - System.AddIn.Hosting.QualificationDataItem.Segment
  - System.AddIn.Hosting.QualificationDataItem.Value
  langs:
  - csharp
  name: QualificationDataItem
  nameWithType: QualificationDataItem
  fullName: System.AddIn.Hosting.QualificationDataItem
  type: Struct
  summary: "A következő feldolgozási sori szegmens, a gazdagép által használható fejlesztője által biztosított információk jelöli."
  remarks: "Minősítési minden adatelemre használatával a következő feldolgozási sori szegmens alkalmazott név-érték párból áll a <xref:System.AddIn.Pipeline.QualificationDataAttribute>attribútum, amely megfelel a szegmens (például a javasolt elkülönítési szintet a szegmenst) használatát információk megadására.</xref:System.AddIn.Pipeline.QualificationDataAttribute> A QualificationDataItem struktúra tartalmaz egy név-érték pár és feldolgozási sori szegmens kiegyenlítő típusú.       A <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=fullName>tulajdonság, amely tartalmazza a feldolgozási sori szegmenseket <xref:System.AddIn.Hosting.AddInToken>.</xref:System.AddIn.Hosting.AddInToken> társított QualificationDataItem struktúrák szótárak beágyazott kaphat</xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=fullName>       Használhatja a <xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=fullName>metódus a számbavevő a feldolgozási sori szegmenseket jogkivonat társított QualificationDataItem szerkezetének a, vagy egyszerűen egy `foreach` utasítás (`For Each` a Visual Basic `for each` Visual c++) a token kezelni, mintha QualificationDataItem struktúrák gyűjteménye.</xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=fullName>"
  example:
  - "The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens.  \n  \n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]"
  syntax:
    content: public struct QualificationDataItem
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.AddIn.Hosting.QualificationDataItem
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: QualificationDataItem.Equals(Object)
  fullName: System.AddIn.Hosting.QualificationDataItem.Equals(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Meghatározza, hogy egy adott objektum az aktuális minősítési elem értéke."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Az objektum összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha <code> obj </code> megegyezik a jelenlegi példány; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Hosting.QualificationDataItem.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.QualificationDataItem.GetHashCode
  id: GetHashCode
  parent: System.AddIn.Hosting.QualificationDataItem
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: QualificationDataItem.GetHashCode()
  fullName: System.AddIn.Hosting.QualificationDataItem.GetHashCode()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "A kivonatoló kódot lekérdezi a minősítési adatelem."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A kivonatoló kódot."
  overload: System.AddIn.Hosting.QualificationDataItem.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.QualificationDataItem.Name
  id: Name
  parent: System.AddIn.Hosting.QualificationDataItem
  langs:
  - csharp
  name: Name
  nameWithType: QualificationDataItem.Name
  fullName: System.AddIn.Hosting.QualificationDataItem.Name
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Lekérdezi az minősítési elem nevét."
  remarks: "Az <xref:System.AddIn.Pipeline.QualificationDataAttribute>attribútum a beépülő modult. a fogyasztók információval</xref:System.AddIn.Pipeline.QualificationDataAttribute> használatával a következő feldolgozási sori szegmens alkalmazott név-érték párból áll minősítési minden adatelemre A Name tulajdonság lekérdezi a nevét. Használja a <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A>tulajdonság értékének beolvasása.</xref:System.AddIn.Hosting.QualificationDataItem.Value%2A>"
  example:
  - "The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens. The Name property is used to display the name of each item.  \n  \n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A minősítési adatelem neve."
  overload: System.AddIn.Hosting.QualificationDataItem.Name*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)
  id: op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)
  parent: System.AddIn.Hosting.QualificationDataItem
  langs:
  - csharp
  name: op_Equality(QualificationDataItem,QualificationDataItem)
  nameWithType: QualificationDataItem.op_Equality(QualificationDataItem,QualificationDataItem)
  fullName: System.AddIn.Hosting.QualificationDataItem.op_Equality(QualificationDataItem,QualificationDataItem)
  type: Operator
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Meghatározza, hogy két <xref href=&quot;System.AddIn.Hosting.QualificationDataItem&quot;> </xref> struktúrák azonosak."
  syntax:
    content: public static bool op_Equality (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);
    parameters:
    - id: item1
      type: System.AddIn.Hosting.QualificationDataItem
      description: "Az első <xref href=&quot;System.AddIn.Hosting.QualificationDataItem&quot;> </xref> összehasonlítani."
    - id: item2
      type: System.AddIn.Hosting.QualificationDataItem
      description: "A második <xref href=&quot;System.AddIn.Hosting.QualificationDataItem&quot;> </xref> összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>item1</code> and <code>item2</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Hosting.QualificationDataItem.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)
  id: op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)
  parent: System.AddIn.Hosting.QualificationDataItem
  langs:
  - csharp
  name: op_Inequality(QualificationDataItem,QualificationDataItem)
  nameWithType: QualificationDataItem.op_Inequality(QualificationDataItem,QualificationDataItem)
  fullName: System.AddIn.Hosting.QualificationDataItem.op_Inequality(QualificationDataItem,QualificationDataItem)
  type: Operator
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Meghatározza, hogy két <xref href=&quot;System.AddIn.Hosting.QualificationDataItem&quot;> </xref> struktúrák nem egyezik."
  syntax:
    content: public static bool op_Inequality (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);
    parameters:
    - id: item1
      type: System.AddIn.Hosting.QualificationDataItem
      description: "Az első <xref href=&quot;System.AddIn.Hosting.QualificationDataItem&quot;> </xref> összehasonlítani."
    - id: item2
      type: System.AddIn.Hosting.QualificationDataItem
      description: "A második <xref href=&quot;System.AddIn.Hosting.QualificationDataItem&quot;> </xref> összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>item1</code> and <code>item2</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Hosting.QualificationDataItem.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.QualificationDataItem.Segment
  id: Segment
  parent: System.AddIn.Hosting.QualificationDataItem
  langs:
  - csharp
  name: Segment
  nameWithType: QualificationDataItem.Segment
  fullName: System.AddIn.Hosting.QualificationDataItem.Segment
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Egy érték, amely azonosítja a következő feldolgozási sori szegmens lekérdezi az adatelem alkalmazta a feltételnek."
  remarks: "Minősítési adatok számba venni, amikor a Ez a tulajdonság használatával azonosíthatja a feltételnek, a folyamatának egy adott szegmens tartozó adatokat.      > [!NOTE] > A modell nem használja a gazdagép nézetében alkalmazott minősítési adatokat. Ennek eredményeképpen, amikor számbavétele a minősítési adatok nem megtalálja azokat a cikkeket amelynek szegmens tulajdonsága <xref:System.AddIn.Hosting.AddInSegmentType>.</xref:System.AddIn.Hosting.AddInSegmentType>"
  example:
  - "The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens. The Segment property is used to display the kind of segment.  \n  \n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]"
  syntax:
    content: public System.AddIn.Hosting.AddInSegmentType Segment { get; }
    return:
      type: System.AddIn.Hosting.AddInSegmentType
      description: "Az elem alkalmazott feldolgozási sori szegmens típusú."
  overload: System.AddIn.Hosting.QualificationDataItem.Segment*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.QualificationDataItem.Value
  id: Value
  parent: System.AddIn.Hosting.QualificationDataItem
  langs:
  - csharp
  name: Value
  nameWithType: QualificationDataItem.Value
  fullName: System.AddIn.Hosting.QualificationDataItem.Value
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "A minősítési adatelem értékének beolvasása."
  remarks: "Az <xref:System.AddIn.Pipeline.QualificationDataAttribute>attribútum a beépülő modult. a fogyasztók információval</xref:System.AddIn.Pipeline.QualificationDataAttribute> használatával a következő feldolgozási sori szegmens alkalmazott név-érték párból áll minősítési minden adatelemre A Value tulajdonság értéke lekérdezi. Használja a <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A>tulajdonság használatával beolvassa a neve.</xref:System.AddIn.Hosting.QualificationDataItem.Name%2A>"
  example:
  - "The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens. The Value property is used to display the value of the item.  \n  \n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "Az elem értékét."
  overload: System.AddIn.Hosting.QualificationDataItem.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: Equals(Object)
  nameWithType: QualificationDataItem.Equals(Object)
  fullName: System.AddIn.Hosting.QualificationDataItem.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.AddIn.Hosting.QualificationDataItem.GetHashCode
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: GetHashCode()
  nameWithType: QualificationDataItem.GetHashCode()
  fullName: System.AddIn.Hosting.QualificationDataItem.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Hosting.QualificationDataItem.Name
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: Name
  nameWithType: QualificationDataItem.Name
  fullName: System.AddIn.Hosting.QualificationDataItem.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: op_Equality(QualificationDataItem,QualificationDataItem)
  nameWithType: QualificationDataItem.op_Equality(QualificationDataItem,QualificationDataItem)
  fullName: System.AddIn.Hosting.QualificationDataItem.op_Equality(QualificationDataItem,QualificationDataItem)
- uid: System.AddIn.Hosting.QualificationDataItem
  parent: System.AddIn.Hosting
  isExternal: false
  name: QualificationDataItem
  nameWithType: QualificationDataItem
  fullName: System.AddIn.Hosting.QualificationDataItem
- uid: System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: op_Inequality(QualificationDataItem,QualificationDataItem)
  nameWithType: QualificationDataItem.op_Inequality(QualificationDataItem,QualificationDataItem)
  fullName: System.AddIn.Hosting.QualificationDataItem.op_Inequality(QualificationDataItem,QualificationDataItem)
- uid: System.AddIn.Hosting.QualificationDataItem.Segment
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: Segment
  nameWithType: QualificationDataItem.Segment
  fullName: System.AddIn.Hosting.QualificationDataItem.Segment
- uid: System.AddIn.Hosting.AddInSegmentType
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInSegmentType
  nameWithType: AddInSegmentType
  fullName: System.AddIn.Hosting.AddInSegmentType
- uid: System.AddIn.Hosting.QualificationDataItem.Value
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: Value
  nameWithType: QualificationDataItem.Value
  fullName: System.AddIn.Hosting.QualificationDataItem.Value
- uid: System.AddIn.Hosting.QualificationDataItem.Equals*
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: Equals
  nameWithType: QualificationDataItem.Equals
- uid: System.AddIn.Hosting.QualificationDataItem.GetHashCode*
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: GetHashCode
  nameWithType: QualificationDataItem.GetHashCode
- uid: System.AddIn.Hosting.QualificationDataItem.Name*
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: Name
  nameWithType: QualificationDataItem.Name
- uid: System.AddIn.Hosting.QualificationDataItem.op_Equality*
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: op_Equality
  nameWithType: QualificationDataItem.op_Equality
- uid: System.AddIn.Hosting.QualificationDataItem.op_Inequality*
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: op_Inequality
  nameWithType: QualificationDataItem.op_Inequality
- uid: System.AddIn.Hosting.QualificationDataItem.Segment*
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: Segment
  nameWithType: QualificationDataItem.Segment
- uid: System.AddIn.Hosting.QualificationDataItem.Value*
  parent: System.AddIn.Hosting.QualificationDataItem
  isExternal: false
  name: Value
  nameWithType: QualificationDataItem.Value
