### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngAlgorithmGroup
  id: CngAlgorithmGroup
  children:
  - System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  - System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.Dsa
  - System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  - System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.Rsa
  - System.Security.Cryptography.CngAlgorithmGroup.ToString
  langs:
  - csharp
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
  type: Class
  summary: "Magában foglalja egy titkosítási algoritmus csoport nevét."
  remarks: "A CngAlgorithmGroup osztály az segédprogram osztály. A statikus tulajdonságok, összehasonlítás metódusok és a saját belső fenntartott karakterlánc, amely meghatározza az algoritmus csoportnév áll.       A statikus tulajdonságok CngAlgorithmGroup objektumokat adjanak vissza. Az algoritmus csoport nevét, amely megfelel a statikus tulajdonság neve belső karakterlánc minden objektum inicializálása.       Ez az osztály használatával algoritmus csoportok, amelyekre nem vonatkozik a statikus tulajdonságok-objektumokat hozzon létre.       Több kriptográfiai következő generációs (CNG) osztályok (például <xref:System.Security.Cryptography.CngKey>) CngAlgorithmGroup objektumokat adjanak vissza.</xref:System.Security.Cryptography.CngKey> Osztályok fogadó <xref:System.Security.Cryptography.CngAlgorithm>objektumok lekérhetik a beágyazott algoritmus csoport neve az objektum meghívásával <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A>tulajdonság.</xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> </xref:System.Security.Cryptography.CngAlgorithm>       Ezért CngAlgorithmGroup jól ismert algoritmus csoportok felsorolásoknak funkcionál. Lehetővé teszi egy algoritmus csoport nevének megadása helyett egy karakterláncot egy szigorú típusmeghatározású értéket használatával."
  syntax:
    content: 'public sealed class CngAlgorithmGroup : IEquatable<System.Security.Cryptography.CngAlgorithmGroup>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngAlgorithmGroup>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> osztály."
  remarks: "Példányait a <xref:System.Security.Cryptography.CngAlgorithmGroup>osztály belső fenntartására a algoritmus csoport nevét, amely megadja a `algorithmGroup` paraméter.</xref:System.Security.Cryptography.CngAlgorithmGroup>       Ez a konstruktor elsődleges célja <xref:System.Security.Cryptography.CngAlgorithmGroup>, hogy az <xref:System.Security.Cryptography.CngAlgorithmGroup>osztály</xref:System.Security.Cryptography.CngAlgorithmGroup> a statikus tulajdonságok nem képvisel algoritmus csoportok objektumok</xref:System.Security.Cryptography.CngAlgorithmGroup> létrehozásához módot Ez a kapacitás lehetővé teszi, hogy a jövőben [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] kiadások, szervizcsomagok és külső fejlesztők hozzáadása új algoritmus csoportok, csakúgy, mint a jelenleg rendelkezésre álló algoritmus csoportokat is elérhetők."
  syntax:
    content: public CngAlgorithmGroup (string algorithmGroup);
    parameters:
    - id: algorithmGroup
      type: System.String
      description: "A következő algoritmuscsoport inicializálása neve."
  overload: System.Security.Cryptography.CngAlgorithmGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>algorithmGroup</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> algorithmGroup </code> paraméter hossza 0 (nulla)."
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Az algoritmus csoport nevét, amely lekérdezi az aktuális <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> objektum határozza meg."
  syntax:
    content: public string AlgorithmGroup { get; }
    return:
      type: System.String
      description: "A beágyazott algoritmus neve."
  overload: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  id: DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum, amely meghatározza a Diffie-Hellman család."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Megadja a Diffie-Hellman család objektum."
  overload: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  id: Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum, amely meghatározza a digitális aláírási algoritmus (DSA) család."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Megadja a DSA család objektum."
  overload: System.Security.Cryptography.CngAlgorithmGroup.Dsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  id: ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum, amely meghatározza az elliptikus görbe Diffie-Hellman (ECDH) család."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Megadja az ECDH család objektum."
  overload: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  id: ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum, amely meghatározza az elliptikus görbéjű digitális aláíró algoritmus (ECDSA) család."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Az ECDSA család megadó objektum."
  overload: System.Security.Cryptography.CngAlgorithmGroup.ECDsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "A megadott objektum az aktuális összehasonlítja <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Össze kell hasonlítania az aktuális objektum <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <code> obj </code> paraméter egy <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> , amely megadja, hogy az azonos algoritmus csoportot az aktuális objektum; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  id: Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "A megadott összehasonlítja <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> az aktuális objektum <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Össze kell hasonlítania az aktuális objektum <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <code> other </code> paraméter ugyanazt a algoritmust határozza meg az aktuális objektum csoportot; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Állít elő, az algoritmus csoport nevének az aktuális beágyazott kivonatot <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A beágyazott algoritmus csoportnév kivonat értéke."
  overload: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Meghatározza, hogy két <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektumokat adja meg az algoritmus ugyanabban a csoportban."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Egy objektum, amely meghatározza az algoritmus csoport."
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Az objektum által azonosított össze, egy második objektumot a `left` paraméter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a két objektum adja meg a azonos algoritmus; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithmGroup.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Meghatározza, hogy két <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektumok nem adja meg a csoportba algoritmus."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Egy objektum, amely meghatározza az algoritmus csoport."
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Az objektum által azonosított össze, egy második objektumot a `left` paraméter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a két objektum nem ad meg ugyanazon algoritmuscsoport; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a <xref href=&quot;System.Security.Cryptography.CngAlgorithmGroup&quot;> </xref> objektum, amely meghatározza a Rivest-Shamir-Adleman (RSA) család."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: "Megadja az RSA család objektum."
  overload: System.Security.Cryptography.CngAlgorithmGroup.Rsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Az algoritmus csoport nevét, amely lekérdezi az aktuális <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> objektum határozza meg."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A beágyazott algoritmus neve."
  overload: System.Security.Cryptography.CngAlgorithmGroup.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals
  nameWithType: CngAlgorithmGroup.Equals
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: GetHashCode
  nameWithType: CngAlgorithmGroup.GetHashCode
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Equality
  nameWithType: CngAlgorithmGroup.op_Equality
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Inequality
  nameWithType: CngAlgorithmGroup.op_Inequality
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ToString
  nameWithType: CngAlgorithmGroup.ToString
