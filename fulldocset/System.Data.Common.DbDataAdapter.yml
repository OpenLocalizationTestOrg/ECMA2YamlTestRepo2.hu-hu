### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbDataAdapter
  id: DbDataAdapter
  children:
  - System.Data.Common.DbDataAdapter.#ctor
  - System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.DeleteCommand
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.InsertCommand
  - System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbDataAdapter.SelectCommand
  - System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.Common.DbDataAdapter.System#ICloneable#Clone
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.Data.Common.DbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
  type: Class
  summary: "Végrehajtásának támogatások a <xref href=&quot;System.Data.IDbDataAdapter&quot;> </xref> felületet. A dbConnection.providerfactory.createdataadapter() öröklőknek funkciók biztosításához erős beírásával készletének megvalósítását, de öröklik a teljes megvalósításához szükséges funkciókat a legtöbb egy **DataAdapter**."
  remarks: "A dbConnection.providerfactory.createdataadapter() osztály örökli a <xref:System.Data.Common.DataAdapter>osztályhoz, és segít a megvalósítása osztály egy **DataAdapter** egy relációs adatbázisban való használatra tervezték.</xref:System.Data.Common.DataAdapter>       Az alkalmazás nem hozható létre példánya a dbConnection.providerfactory.createdataadapter() felület közvetlenül, de az osztály példányát <xref:System.Data.IDbDataAdapter>és dbConnection.providerfactory.createdataadapter().</xref:System.Data.IDbDataAdapter>       DbConnection.providerfactory.createdataadapter() öröklő osztály kell valósítja meg az örökölt tagok, és általában a szolgáltatói funkciókkal további tagokat definiálja. Például a dbConnection.providerfactory.createdataadapter() osztály határozza meg a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>tulajdonság, és a dbConnection.providerfactory.createdataadapter() felület meghatározása a nyolc túlterhelés a <xref:System.Data.IDataAdapter.Fill%2A>metódus.</xref:System.Data.IDataAdapter.Fill%2A> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> Viszont a <xref:System.Data.OleDb.OleDbDataAdapter>osztály örökli a <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódust, és a két további túlterhelések is definiálja <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>paraméterként ADO rekordhalmaz objektum érvénybe, amelyek.</xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> </xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.OleDb.OleDbDataAdapter>"
  syntax:
    content: 'public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  implements:
  - System.Data.IDbDataAdapter
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: DbDataAdapter()
  nameWithType: DbDataAdapter.DbDataAdapter()
  fullName: System.Data.Common.DbDataAdapter.DbDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy új példányát inicializálja a **DataAdapter** osztály."
  remarks: "Ha egy példányának létrehozásakor <xref:System.Data.Common.DbDataAdapter>, a következő olvasási/írási tulajdonsága a következő kezdeti értékekre.</xref:System.Data.Common.DbDataAdapter>      | Tulajdonságok |} A kezdeti érték |}   |----------------|-------------------|   | <xref:System.Data.IDbDataAdapter.SelectCommand%2A>| Egy új <xref:System.Data.IDbCommand>. |}   | <xref:System.Data.IDbDataAdapter.InsertCommand%2A>| Egy új <xref:System.Data.IDbCommand>. |}   | <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>| Egy új <xref:System.Data.IDbCommand>. |}   | <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>| Egy új <xref:System.Data.IDbCommand>. |}   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Az alábbi tulajdonságok keresztül külön hívása a tulajdonság értékének bármikor módosíthatja.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> </xref:System.Data.IDbCommand> </xref:System.Data.IDbDataAdapter.UpdateCommand%2A> </xref:System.Data.IDbCommand> </xref:System.Data.IDbDataAdapter.DeleteCommand%2A> </xref:System.Data.IDbCommand> </xref:System.Data.IDbDataAdapter.InsertCommand%2A> </xref:System.Data.IDbCommand> </xref:System.Data.IDbDataAdapter.SelectCommand%2A>"
  syntax:
    content: protected DbDataAdapter ();
    parameters: []
  overload: System.Data.Common.DbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)
  id: '#ctor(System.Data.Common.DbDataAdapter)'
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: DbDataAdapter(DbDataAdapter)
  nameWithType: DbDataAdapter.DbDataAdapter(DbDataAdapter)
  fullName: System.Data.Common.DbDataAdapter.DbDataAdapter(DbDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy új példányát inicializálja a <xref uid=&quot;langword_csharp_DataAdapter&quot; name=&quot;DataAdapter&quot; href=&quot;&quot;> </xref> osztály azonos típusú objektum."
  remarks: "Ez túlterhelése a <xref:System.Data.Common.DbDataAdapter>konstruktor használatra készült .NET-keretrendszer adatszolgáltató használatra hasonló konstruktor Klónozás megvalósításában végrehajtásakor.</xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "A <xref uid=&quot;langword_csharp_DataAdapter&quot; name=&quot;DataAdapter&quot; href=&quot;&quot;> </xref> objektum használatával létrejött a új <xref uid=&quot;langword_csharp_DataAdapter&quot; name=&quot;DataAdapter&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  id: AddToBatch(System.Data.IDbCommand)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: AddToBatch(IDbCommand)
  nameWithType: DbDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.Common.DbDataAdapter.AddToBatch(IDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hozzáad egy <xref href=&quot;System.Data.IDbCommand&quot;> </xref> az aktuális köteg számára."
  remarks: "<xref:System.Data.Common.DbDataAdapter>Ez a módszer <xref:System.NotSupportedException>.</xref:System.NotSupportedException> jelez</xref:System.Data.Common.DbDataAdapter> Öröklő <xref:System.Data.Common.DbDataAdapter>bírálja felül ezt a metódust támogatást nyújt a kötegek.</xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected virtual int AddToBatch (System.Data.IDbCommand command);
    parameters:
    - id: command
      type: System.Data.IDbCommand
      description: "A <xref href=&quot;System.Data.IDbCommand&quot;> </xref> a kötegelt hozzáadása."
    return:
      type: System.Int32
      description: "A kötegelt hozzáadása előtt a parancsok száma a <xref href=&quot;System.Data.IDbCommand&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.AddToBatch*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az adapter nem támogatja a kötegek."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.ClearBatch
  id: ClearBatch
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: ClearBatch()
  nameWithType: DbDataAdapter.ClearBatch()
  fullName: System.Data.Common.DbDataAdapter.ClearBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Eltávolítja az összes <xref href=&quot;System.Data.IDbCommand&quot;> </xref> a kötegelt objektumokat."
  remarks: "<xref:System.Data.Common.DbDataAdapter>Ez a módszer <xref:System.NotSupportedException>.</xref:System.NotSupportedException> jelez</xref:System.Data.Common.DbDataAdapter> Öröklő <xref:System.Data.Common.DbDataAdapter>bírálja felül ezt a metódust támogatást nyújt a kötegek.</xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected virtual void ClearBatch ();
    parameters: []
  overload: System.Data.Common.DbDataAdapter.ClearBatch*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az adapter nem támogatja a kötegek."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: DbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.Common.RowUpdatedEventArgs&quot;> </xref> osztály."
  syntax:
    content: protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "A <xref href=&quot;System.Data.DataRow&quot;> </xref> az adatforrás frissítésére szolgáló."
    - id: command
      type: System.Data.IDbCommand
      description: "A <xref href=&quot;System.Data.IDbCommand&quot;> </xref> végrehajtása során a <xref:System.Data.IDataAdapter.Update*>.</xref:System.Data.IDataAdapter.Update*>"
    - id: statementType
      type: System.Data.StatementType
      description: "A parancs a frissítés, hogy HELYEZZE, törlése, vagy válassza ki az utasítást."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;></xref> object."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Egy új példányt a <xref href=&quot;System.Data.Common.RowUpdatedEventArgs&quot;> </xref> osztály."
  overload: System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: DbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Data.Common.RowUpdatingEventArgs&quot;> </xref> osztály."
  syntax:
    content: protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "A <xref href=&quot;System.Data.DataRow&quot;> </xref> , amely frissíti az adatforrás."
    - id: command
      type: System.Data.IDbCommand
      description: "A <xref href=&quot;System.Data.IDbCommand&quot;> </xref> végrehajtása során a <xref:System.Data.IDataAdapter.Update*>.</xref:System.Data.IDataAdapter.Update*>"
    - id: statementType
      type: System.Data.StatementType
      description: "A parancs a frissítés, hogy HELYEZZE, törlése, vagy válassza ki az utasítást."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "A <xref href=&quot;System.Data.Common.DataTableMapping&quot;></xref> object."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Egy új példányt a <xref href=&quot;System.Data.Common.RowUpdatingEventArgs&quot;> </xref> osztály."
  overload: System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.DefaultSourceTableName
  id: DefaultSourceTableName
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: DefaultSourceTableName
  nameWithType: DbDataAdapter.DefaultSourceTableName
  fullName: System.Data.Common.DbDataAdapter.DefaultSourceTableName
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Az alapértelmezett nevet, amellyel az a <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> tábla leképezéseihez objektum."
  remarks: "&quot;Table&quot; által használt alapértelmezett név a <xref:System.Data.Common.DataAdapter>objektum tábla leképezések.</xref:System.Data.Common.DataAdapter>       DefaultSourceTableName akkor, ha egy alkalmazás hozzáadása egy tábla a leképezés csak akkor használható <xref:System.Data.Common.DbDataAdapter.Fill%2A>, de nem ad meg egy <xref:System.Data.DataTable>neve.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public const string DefaultSourceTableName;
    return:
      type: System.String
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: DbDataAdapter.DeleteCommand
  fullName: System.Data.Common.DbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja egy adatkészletből rekordok törlésére vonatkozó parancsot."
  remarks: "Során <xref:System.Data.Common.DbDataAdapter.Update%2A>, ha ez a tulajdonság nincs beállítva, és az elsődleges kulcs adataira is szerepel a <xref:System.Data.DataSet>, a <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>automatikusan jön létre.</xref:System.Data.IDbDataAdapter.DeleteCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A>"
  example:
  - "The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.common.dbd_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dbd_3_1.vb)]"
  syntax:
    content: public System.Data.Common.DbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.Common.DbCommand
      description: "Egy <xref href=&quot;System.Data.IDbCommand&quot;> </xref> során használt <xref:System.Data.IDataAdapter.Update*>törlendő rekordok az adatforrás az adatkészlet törölt soraihoz.</xref:System.Data.IDataAdapter.Update*>"
  overload: System.Data.Common.DbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbDataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DbDataAdapter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A nem felügyelt által használt erőforrások kiadja a <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref> és opcionálisan kiadja a felügyelt erőforrások."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a kibocsátási felügyelt és a nem felügyelt erőforrások; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> csak a nem felügyelt erőforrások kijelölése."
  overload: System.Data.Common.DbDataAdapter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.ExecuteBatch
  id: ExecuteBatch
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: ExecuteBatch()
  nameWithType: DbDataAdapter.ExecuteBatch()
  fullName: System.Data.Common.DbDataAdapter.ExecuteBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Az aktuális köteg hajtja végre."
  remarks: "<xref:System.Data.Common.DbDataAdapter>Ez a módszer <xref:System.NotSupportedException>.</xref:System.NotSupportedException> jelez</xref:System.Data.Common.DbDataAdapter> Öröklő <xref:System.Data.Common.DbDataAdapter>bírálja felül ezt a metódust támogatást nyújt a kötegek.</xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected virtual int ExecuteBatch ();
    parameters: []
    return:
      type: System.Int32
      description: "Az eredményül kapott értéket a kötegben utolsó parancs."
  overload: System.Data.Common.DbDataAdapter.ExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  id: Fill(System.Data.DataSet)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Fill(DataSet)
  nameWithType: DbDataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ad hozzá, vagy frissíti a sorokat a <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: "A Fill metódus lekéri az adatokat az adatforrásból a SELECT utasítás használatával. A <xref:System.Data.IDbConnection>a kijelölési parancs rendelt objektum érvényesnek kell lennie, de nem kell nyitva kell lennie.</xref:System.Data.IDbConnection> Ha a <xref:System.Data.IDbConnection>van Fill metódus meghívása előtt bezárul, megnyitott beolvasni az adatokat, és lezárt állapotú.</xref:System.Data.IDbConnection> Ha a kapcsolat meg nyitva Fill metódus meghívása előtt, hogy nyitva marad.       Hiba vagy egy kivételt a adattáblák feltöltése során észleli, ha a hiba bekövetkezése előtt hozzáadott sor a adattáblák maradnak. A hátralévő részét a művelet végrehajtása megszakadt.       Ha a parancs nem ad vissza egyetlen sort sem, táblák hozzáadódnak a <xref:System.Data.DataSet>, és nincs kivétel következik be.</xref:System.Data.DataSet>       Ha a <xref:System.Data.Common.DbDataAdapter>objektum duplikált oszlop észlel feltöltése során egy <xref:System.Data.DataTable>, a minta használatával a következő oszlopok neveit létrehozott &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet>       A megadott lekérdezés több eredményeket ad vissza, az eredmény, állítsa vissza a lekérdezés minden egyes sorára különálló táblában kerül. További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és így tovább). Nincs tábla létrejön egy lekérdezést, amely nem ad vissza a sorok, ha egy insert lekérdezést a select lekérdezés követ, mert a tábla a select lekérdezés készült mert az első tábla &quot;Table&quot; neve. Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       A SELECT utasítás használatakor a <xref:System.Data.DataSet>több annak az eredménye, például a kötegelt SQL-utasítások, az eredmények egyikének tartalmazza a hiba, ha vissza minden ezt követő eredmény kimarad, és nem kerülnek be a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataSet> feltöltése       Ha további használatával töltse ki a hívások tartalmának frissítése a <xref:System.Data.DataSet>, két feltételeknek teljesülniük kell: 1.</xref:System.Data.DataSet>  Az SQL-utasítás meg kell felelnie a kezdetben használt a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> feltöltéséhez      2.  A **kulcs** oszlopra vonatkozó információ jelen kell lennie.       Ha elsődleges kulcs adataira, az ismétlődő sorokat egyeztetett, és csak egyszer szerepelhet <xref:System.Data.DataTable>, amely megfelel a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Elsődleges kulcs adataira is beállítható keresztül <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, megadásával a <xref:System.Data.DataTable.PrimaryKey%2A>tulajdonsága a <xref:System.Data.DataTable>, vagy úgy, hogy a <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>tulajdonságot `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Ha a `SelectCommand` külső ILLESZTÉS, az eredményt ad vissza a `DataAdapter` nem adott meg <xref:System.Data.DataTable.PrimaryKey%2A>az eredményül kapott <xref:System.Data.DataTable>.</xref:System.Data.DataTable> értéke</xref:System.Data.DataTable.PrimaryKey%2A> Győződjön meg arról, hogy az ismétlődő sorok helyesen feloldani az elsődleges kulcs explicit módon meg kell adni. További információkért lásd: [elsődleges kulcsok meghatározása](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja a írja a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction>"
  syntax:
    content: public override int Fill (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> használatával kitölthet rögzíti, és ha szükséges, séma."
    return:
      type: System.Int32
      description: "A sorok száma sikeresen hozzáadni vagy frissíteni kell a a <xref href=&quot;System.Data.DataSet&quot;> </xref>. Ez nem vonatkozik, amelyek nem adnak vissza a sorok utasítás érintett sorok."
  overload: System.Data.Common.DbDataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  id: Fill(System.Data.DataTable)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Fill(DataTable)
  nameWithType: DbDataAdapter.Fill(DataTable)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ad hozzá, vagy frissíti a sort a megadott tartományban a <xref href=&quot;System.Data.DataSet&quot;> </xref> való megfelelnek-e a használhatja a <xref href=&quot;System.Data.DataTable&quot;> </xref> nevét."
  remarks: "A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus beolvas sort az adatforrásból, az a hozzárendelt által megadott SELECT utasítás használatával <xref:System.Data.IDbDataAdapter.SelectCommand%2A>tulajdonság.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbDataAdapter.Fill%2A> A SELECT utasítással tartozó kapcsolati objektum érvényesnek kell lennie, de nem kell nyitva kell lennie. Ha a kapcsolat le van zárva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van nevezik, az adatok beolvasásához megnyitni, akkor lezárt.</xref:System.Data.Common.DbDataAdapter.Fill%2A> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>majd a művelet hozzáadja a sorok cél <xref:System.Data.DataTable>objektumokat a <xref:System.Data.DataSet>létrehozásakor, a <xref:System.Data.DataTable>objektumokat, ha még nem léteznek.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Létrehozásakor <xref:System.Data.DataTable>objektumok, a <xref:System.Data.Common.DbDataAdapter.Fill%2A>művelet általában csak az oszlop neve metaadatokat hoz létre.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.DataTable> Azonban ha a <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>tulajdonsága `AddWithKey`, megfelelő elsődleges kulcsokat és korlátozásokat is létrejött.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Ha a <xref:System.Data.Common.DbDataAdapter>ütközik ismétlődő oszlopok feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehozott &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet> Ha több eredménykészlet hozzáadódnak a <xref:System.Data.DataSet>minden eredménykészlet helyezkedik el, különálló táblában.</xref:System.Data.DataSet>       A paraméterekkel nem rendelkező <xref:System.Data.Common.DbDataAdapter.Fill%2A>, amely fogad `DataTable` , a paraméter csak beolvassa az első találatra.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A túlterhelés használata <xref:System.Data.Common.DbDataAdapter.Fill%2A>, amely fogad `DataSet` több eredmények paraméterként.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus szituációkat ahol a <xref:System.Data.DataSet>több tartalmaz <xref:System.Data.DataTable>objektumok mappanevek csak térnek el egymástól eset.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ilyen helyzetekben <xref:System.Data.Common.DbDataAdapter.Fill%2A>hajt végre a megfelelő táblában található kis-és nagybetűket összehasonlítása, és táblázatot hoz létre új pontos egyezést létezésének.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();    dataset.Tables.Add(&quot;aaa&quot;);    dataset.Tables.Add(&quot;AAA&quot;);    adapter.Fill(dataset, &quot;aaa&quot;); // Fills &quot;aaa&quot;, which already exists in the DataSet.       adapter.Fill(dataset, &quot;Aaa&quot;); // Adds a new table called &quot;Aaa&quot;.   ```Ha <xref:System.Data.Common.DbDataAdapter.Fill%2A>neve és a <xref:System.Data.DataSet>csak egy <xref:System.Data.DataTable>névvel csak esetben eltér, amely <xref:System.Data.DataTable>frissül.</xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ebben a forgatókönyvben eredményű összehasonlítás esetén-és nagybetűket. A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();    dataset.Tables.Add(&quot;aaa&quot;);       adapter.Fill(dataset, &quot;AAA&quot;); // Fills table &quot;aaa&quot; because only one similarly named table is in the DataSet.   ```A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus több alkalommal a azonos <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ha egy elsődleges kulcs megtalálható, bejövő sorok egyesítve lesznek az egyező sorok, amely már létezik. Ha nem elsődleges kulcs létezik, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> lesz hozzáfűzve bejövő sorok       Ha a `SelectCommand` külső ILLESZTÉS, az eredményt ad vissza a `DataAdapter` nem adott meg <xref:System.Data.DataTable.PrimaryKey%2A>az eredményül kapott <xref:System.Data.DataTable>.</xref:System.Data.DataTable> értéke</xref:System.Data.DataTable.PrimaryKey%2A> Győződjön meg arról, hogy az ismétlődő sorok helyesen feloldani az elsődleges kulcs explicit módon meg kell adni. További információkért lásd: [elsődleges kulcsok meghatározása](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.Fill%2A>és <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>egy .NET-keretrendszer adatokat szolgáltató visszakeresi sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public int Fill (System.Data.DataTable dataTable);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Neve a <xref href=&quot;System.Data.DataTable&quot;> </xref> táblaleképezés használandó."
    return:
      type: System.Int32
      description: "A sorok száma sikeresen hozzáadni vagy frissíteni kell a a <xref href=&quot;System.Data.DataSet&quot;> </xref>. Ez nem vonatkozik, amelyek nem adnak vissza a sorok utasítás érintett sorok."
  overload: System.Data.Common.DbDataAdapter.Fill*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  id: Fill(System.Data.DataSet,System.String)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Fill(DataSet,String)
  nameWithType: DbDataAdapter.Fill(DataSet,String)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataSet,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ad hozzá, vagy frissíti a sorokat a <xref href=&quot;System.Data.DataSet&quot;> </xref> való megfelelnek-e a használhatja a <xref href=&quot;System.Data.DataSet&quot;> </xref> és <xref href=&quot;System.Data.DataTable&quot;> </xref> nevek."
  remarks: "A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus lekéri az adatokat az adatforrásból a SELECT utasítás használatával.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A <xref:System.Data.IDbConnection>a kijelölési parancs rendelt objektum érvényesnek kell lennie, de nem kell nyitva kell lennie.</xref:System.Data.IDbConnection> Ha a <xref:System.Data.IDbConnection>bezárása előtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van nevezik, az adatok beolvasásához megnyitni, akkor lezárt.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.IDbConnection> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       Ha a parancs nem ad vissza egyetlen sort sem, táblák hozzáadódnak a <xref:System.Data.DataSet>, és nincs kivétel következik be.</xref:System.Data.DataSet>       Ha a <xref:System.Data.Common.DbDataAdapter>objektum duplikált oszlop észlel feltöltése során egy <xref:System.Data.DataTable>, a későbbi oszlopokhoz, a minta &quot;columnname1&quot;, &quot;columnname2&quot;, &quot;columnname3&quot; és így tovább használatával nevek generál.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet>       A megadott lekérdezés több eredményeket ad vissza, ha minden eredménykészlet különálló táblában kerül. További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és így tovább). Nincs tábla létrejön egy lekérdezést, amely nem ad vissza a sorok, ha egy insert lekérdezés követi a select lekérdezés feldolgozását, mert a select lekérdezés létrehozott tábla neve &quot;Table&quot;, mert az első tábla. Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus szituációkat ahol a <xref:System.Data.DataSet>több tartalmaz <xref:System.Data.DataTable>objektumok mappanevek csak térnek el egymástól eset.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ilyen helyzetekben <xref:System.Data.Common.DbDataAdapter.Fill%2A>hajt végre a megfelelő táblában található kis-és nagybetűket összehasonlítása, és táblázatot hoz létre új pontos egyezést létezésének.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   dataset.Tables.Add(&quot;AAA&quot;);   adapter.Fill(dataset, &quot;aaa&quot;); // Fills &quot;aaa&quot;, which already exists in the DataSet.   adapter.Fill(dataset, &quot;Aaa&quot;); // Adds a new table called &quot;Aaa&quot;.   ```Ha <xref:System.Data.Common.DbDataAdapter.Fill%2A>neve és a <xref:System.Data.DataSet>csak egy <xref:System.Data.DataTable>névvel csak esetben eltér, amely <xref:System.Data.DataTable>frissül.</xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ebben a forgatókönyvben eredményű összehasonlítás esetén-és nagybetűket. A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   adapter.Fill(dataset, &quot;AAA&quot;); // Fills table &quot;aaa&quot; because only one similarly named table is in the DataSet.   ```Hiba vagy egy kivételt a adattáblák feltöltése során észleli, ha a hiba bekövetkezése előtt hozzáadott sor a adattáblák maradnak. A hátralévő részét a művelet végrehajtása megszakadt.       Ha a SELECT utasítás való feltöltéséhez használt a <xref:System.Data.DataSet>több eredményeket ad vissza, például egy kötegelt SQL-utasításban, vegye figyelembe a következőket:-eredmények egyikének tartalmazza a hiba, ha az összes későbbi eredmények kihagyva és nem adja hozzá a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataSet>       További használatakor <xref:System.Data.Common.DbDataAdapter.Fill%2A>hívások tartalmának frissítése a <xref:System.Data.DataSet>, két feltételeknek teljesülniük kell: 1.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>  Az SQL-utasítás meg kell felelnie a kezdetben használt a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> feltöltéséhez      2.  A **kulcs** oszlopra vonatkozó információ jelen kell lennie. Ha elsődleges kulcs adataira, az ismétlődő sorokat egyeztetett, és csak egyszer szerepelhet <xref:System.Data.DataTable>, amely megfelel a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Elsődleges kulcs adataira is beállítható keresztül <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, megadásával a <xref:System.Data.DataTable.PrimaryKey%2A>tulajdonsága a <xref:System.Data.DataTable>, vagy úgy, hogy a <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>tulajdonságot `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Ha a `SelectCommand` külső ILLESZTÉS, az eredményt ad vissza a `DataAdapter` nem adott meg <xref:System.Data.DataTable.PrimaryKey%2A>az eredményül kapott <xref:System.Data.DataTable>.</xref:System.Data.DataTable> értéke</xref:System.Data.DataTable.PrimaryKey%2A> Győződjön meg arról, hogy az ismétlődő sorok helyesen feloldani az elsődleges kulcs explicit módon meg kell adni. További információkért lásd:[elsődleges kulcsok definiálása](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table. This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dbd_3_1.vb)]\n [!code-cs[Classic WebData DbDataAdapter.Fill2 Example#1](~/add/codesnippet/csharp/m-system.data.common.dbd_3_1.cs)]"
  syntax:
    content: public int Fill (System.Data.DataSet dataSet, string srcTable);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> használatával kitölthet rögzíti, és ha szükséges, séma."
    - id: srcTable
      type: System.String
      description: "A tábla hozzárendelésének használandó forrástábla neve."
    return:
      type: System.Int32
      description: "A sorok száma sikeresen hozzáadni vagy frissíteni kell a a <xref href=&quot;System.Data.DataSet&quot;> </xref>. Ez nem vonatkozik, amelyek nem adnak vissza a sorok utasítás érintett sorok."
  overload: System.Data.Common.DbDataAdapter.Fill*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "A következő forrástábla nem érvényes."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  id: Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Fill(DataTable,IDbCommand,CommandBehavior)
  nameWithType: DbDataAdapter.Fill(DataTable,IDbCommand,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataTable,IDbCommand,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ad hozzá, vagy frissíti a sorokat egy <xref href=&quot;System.Data.DataTable&quot;> </xref> megegyeznek a megadott adatokkal való <xref href=&quot;System.Data.DataTable&quot;> </xref>, <xref href=&quot;System.Data.IDbCommand&quot;> </xref> és <xref href=&quot;System.Data.CommandBehavior&quot;> </xref>."
  remarks: "A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus beolvas sort az adatforrásból, az a hozzárendelt által megadott SELECT utasítás használatával <xref:System.Data.IDbDataAdapter.SelectCommand%2A>tulajdonság.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbDataAdapter.Fill%2A> A SELECT utasítással tartozó kapcsolati objektum érvényesnek kell lennie, de nem kell nyitva kell lennie. Ha a kapcsolat le van zárva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van neve, megnyitott beolvasni az adatokat, és majd lezárt.</xref:System.Data.Common.DbDataAdapter.Fill%2A> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>majd a művelet hozzáadja a sorokat a megadott helyre <xref:System.Data.DataTable>objektum a <xref:System.Data.DataSet>létrehozásakor, a <xref:System.Data.DataTable>objektumot, ha még nem létezik.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Amikor hoz létre egy <xref:System.Data.DataTable>objektum, a <xref:System.Data.Common.DbDataAdapter.Fill%2A>művelet általában csak az oszlop neve metaadatokat hoz létre.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.DataTable> Azonban ha a <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>tulajdonsága `AddWithKey`, megfelelő elsődleges kulcsokat és korlátozásokat is létrejött.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Ha a <xref:System.Data.Common.DbDataAdapter>objektum duplikált oszlop észlel feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehoz &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet>       A paraméterekkel nem rendelkező <xref:System.Data.Common.DbDataAdapter.Fill%2A>, amely fogad `DataTable` , a paraméter csak beolvassa az első találatra.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A túlterhelés használata <xref:System.Data.Common.DbDataAdapter.Fill%2A>, amely fogad `DataSet` több eredmények paraméterként.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus több alkalommal a azonos <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ha egy elsődleges kulcs megtalálható, bejövő sorok egyesítve lesznek az egyező sorok, amely már létezik. Ha nem elsődleges kulcs létezik, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> lesz hozzáfűzve bejövő sorok       Ha a `SelectCommand` külső ILLESZTÉS, az eredményt ad vissza a `DataAdapter` nem adott meg <xref:System.Data.DataTable.PrimaryKey%2A>az eredményül kapott <xref:System.Data.DataTable>.</xref:System.Data.DataTable> értéke</xref:System.Data.DataTable.PrimaryKey%2A> Győződjön meg arról, hogy az ismétlődő sorok helyesen feloldani az elsődleges kulcs explicit módon meg kell adni. További információkért lásd: [elsődleges kulcsok meghatározása](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> használatával kitölthet rögzíti, és ha szükséges, séma."
    - id: command
      type: System.Data.IDbCommand
      description: "Az SQL SELECT utasításhoz sorok kérdezi le az adatforrás."
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Egy a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékeket."
    return:
      type: System.Int32
      description: "A sorok száma sikeresen hozzáadni vagy frissíteni kell a a <xref href=&quot;System.Data.DataTable&quot;> </xref>. Ez nem vonatkozik, amelyek nem adnak vissza a sorok utasítás érintett sorok."
  overload: System.Data.Common.DbDataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  id: Fill(System.Int32,System.Int32,System.Data.DataTable[])
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Fill(Int32,Int32,DataTable[])
  nameWithType: DbDataAdapter.Fill(Int32,Int32,DataTable[])
  fullName: System.Data.Common.DbDataAdapter.Fill(Int32,Int32,DataTable[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ad hozzá, vagy frissíti a sorokat egy <xref href=&quot;System.Data.DataTable&quot;> </xref> pontosan megegyeznek a megadott rekord kezdődő, és legfeljebb a megadott maximális számú rekordot beolvasása az adatforrás számára."
  remarks: "A <xref:System.Data.Common.DataAdapter.Fill%2A>metódus beolvas sort az adatforrásból, az a hozzárendelt által megadott SELECT utasítás használatával <xref:System.Data.IDbDataAdapter.SelectCommand%2A>tulajdonság.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DataAdapter.Fill%2A> A SELECT utasítással tartozó kapcsolati objektum érvényesnek kell lennie, de nem kell nyitva kell lennie. Ha a kapcsolat le van zárva, mielőtt <xref:System.Data.Common.DataAdapter.Fill%2A>van nevezik, adatok beolvasása meg van nyitva, és majd le van zárva.</xref:System.Data.Common.DataAdapter.Fill%2A> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DataAdapter.Fill%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DataAdapter.Fill%2A>       A <xref:System.Data.Common.DataAdapter.Fill%2A>majd a művelet hozzáadja a sorok cél <xref:System.Data.DataTable>objektumokat a <xref:System.Data.DataSet>létrehozásakor, a <xref:System.Data.DataTable>objektumokat, ha még nem léteznek.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter.Fill%2A> Létrehozásakor <xref:System.Data.DataTable>objektumok, a <xref:System.Data.Common.DataAdapter.Fill%2A>művelet általában csak az oszlop neve metaadatokat hoz létre.</xref:System.Data.Common.DataAdapter.Fill%2A> </xref:System.Data.DataTable> Azonban ha a <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>tulajdonsága `AddWithKey`, megfelelő elsődleges kulcsokat és korlátozásokat is létrejött.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Ha a `SelectCommand` külső ILLESZTÉS, az eredményt ad vissza a `DataAdapter` nem adott meg <xref:System.Data.DataTable.PrimaryKey%2A>az eredményül kapott <xref:System.Data.DataTable>.</xref:System.Data.DataTable> értéke</xref:System.Data.DataTable.PrimaryKey%2A> Győződjön meg arról, hogy az ismétlődő sorok helyesen feloldani az elsődleges kulcs explicit módon meg kell adni. További információkért lásd: [elsődleges kulcsok meghatározása](~/add/includes/ajax-current-ext-md.md).       Ha a adapter tapasztal ismétlődő oszlopok feltöltése során a <xref:System.Data.DataTable>, akkor ad a további oszlopok, a minta &quot;columnname1&quot;, &quot;columnname2&quot;, &quot;columnname3&quot; és így tovább használatával neveket.</xref:System.Data.DataTable> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet> Ha több eredménykészlet hozzáadódnak a <xref:System.Data.DataSet>, minden egyes eredménykészlet helyezkedik el, különálló táblában.</xref:System.Data.DataSet> További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és így tovább). Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       Ha a SELECT utasítás való feltöltéséhez használt a <xref:System.Data.DataSet>több eredményt ad vissza. egy kötegelt SQL-utasítások, mint például az eredmények közül tartalmazza a hiba, ha minden későbbi eredmények kihagyva és nem adja hozzá a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataSet>       A <xref:System.Data.Common.DataAdapter.Fill%2A>metódus több alkalommal a azonos <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter.Fill%2A> Ha egy elsődleges kulcs megtalálható, bejövő sorok egyesítve lesznek az egyező sorok, amely már létezik. Ha nem elsődleges kulcs létezik, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> lesz hozzáfűzve bejövő sorok      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public int Fill (int startRecord, int maxRecords, System.Data.DataTable[] dataTables);
    parameters:
    - id: startRecord
      type: System.Int32
      description: "A nulla alapú rekordszám elindítása."
    - id: maxRecords
      type: System.Int32
      description: "A beolvasandó rekordok maximális száma."
    - id: dataTables
      type: System.Data.DataTable[]
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> töltse ki az adatforrás-objektumok."
    return:
      type: System.Int32
      description: "A sorok száma sikeresen hozzáadni vagy frissíteni kell a a <xref href=&quot;System.Data.DataTable&quot;> </xref>. Ez az érték nem tartalmaz, amelyek nem adnak vissza a sorok utasítás érintett sorok."
  overload: System.Data.Common.DbDataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  id: Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Fill(DataSet,Int32,Int32,String)
  nameWithType: DbDataAdapter.Fill(DataSet,Int32,Int32,String)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataSet,Int32,Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ad hozzá, vagy frissíti a sort a megadott tartományban a <xref href=&quot;System.Data.DataSet&quot;> </xref> való megfelelnek-e a használhatja a <xref href=&quot;System.Data.DataSet&quot;> </xref> és <xref href=&quot;System.Data.DataTable&quot;> </xref> nevek."
  remarks: "A `maxRecords` a 0 érték beolvasása után a start-rekord található összes rekord. Ha `maxRecords` érték nagyobb, mint a többi sorok száma csak a többi sor visszaadása, és nem hibaüzenettel meghiúsul.       Ha a megfelelő kijelölési parancs egy utasítás több eredményt visszaadó <xref:System.Data.Common.DbDataAdapter.Fill%2A>csak érvényes `maxRecords` az első találatra.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus lekéri az adatokat az adatforrásból a SELECT utasítás használatával.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A <xref:System.Data.IDbConnection>a SELECT utasítás rendelt objektum érvényesnek kell lennie, de nem kell nyitva kell lennie.</xref:System.Data.IDbConnection> Ha a <xref:System.Data.IDbConnection>bezárása előtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van neve, megnyitott beolvasni az adatokat, és majd lezárt.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.IDbConnection> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       Ha a parancs nem ad vissza egyetlen sort sem, táblák hozzáadódnak a <xref:System.Data.DataSet>, de nincs kivétel következik be.</xref:System.Data.DataSet>       Ha a <xref:System.Data.Common.DbDataAdapter>objektum duplikált oszlop észlel feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehoz &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet>       A megadott lekérdezés több eredményeket ad vissza, ha minden eredménykészlet különálló táblában kerül. További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és így tovább). Nincs tábla létrejön egy lekérdezést, amely nem ad vissza a sorok, ha egy insert lekérdezést a select lekérdezés követ, mert a tábla a select lekérdezés készült mert az első tábla &quot;Table&quot;, neve. Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus szituációkat ahol a <xref:System.Data.DataSet>több tartalmaz <xref:System.Data.DataTable>objektumok mappanevek csak térnek el egymástól eset.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ilyen helyzetekben <xref:System.Data.Common.DbDataAdapter.Fill%2A>hajt végre a megfelelő táblában található kis-és nagybetűket összehasonlítása, és táblázatot hoz létre új pontos egyezést létezésének.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   dataset.Tables.Add(&quot;AAA&quot;);   adapter.Fill(dataset, &quot;aaa&quot;); // Fills &quot;aaa&quot;, which already exists in the DataSet.   adapter.Fill(dataset, &quot;Aaa&quot;); // Adds a new table called &quot;Aaa&quot;.   ```Ha <xref:System.Data.Common.DbDataAdapter.Fill%2A>neve és a <xref:System.Data.DataSet>csak egy <xref:System.Data.DataTable>névvel csak esetben eltér, amely <xref:System.Data.DataTable>frissül.</xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ebben a forgatókönyvben eredményű összehasonlítás esetén-és nagybetűket. A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   adapter.Fill(dataset, &quot;AAA&quot;); // Fills table &quot;aaa&quot; because only one similarly named table is in the DataSet.   ```Hiba vagy egy kivételt a adattáblák feltöltése során észleli, ha a hiba bekövetkezése előtt hozzáadott sor a adattáblák maradnak. A hátralévő részét a művelet végrehajtása megszakadt.       Ha a SELECT utasítás való feltöltéséhez használt a <xref:System.Data.DataSet>értéket ad eredményül, több annak az eredménye, például a kötegelt SQL-utasítások, vegye figyelembe a következőket: - az SQL-utasítás kötegből több eredmények feldolgozásakor `maxRecords` csak az első eredmény vonatkozik.</xref:System.Data.DataSet> Ugyanez érvényes szakaszból eredmények (.NET Framework Data Provider az OLE DB csak) tartalmazó sort. A legfelső szintű eredmények korlátozza `maxRecords`, de összes gyermeksorok kerülnek.      – Ha egy, az eredmények hibát tartalmaz, minden további eredmények kihagyva és a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> nincs hozzáadva       További használatakor <xref:System.Data.Common.DbDataAdapter.Fill%2A>hívások tartalmának frissítése a <xref:System.Data.DataSet>, két feltételeknek teljesülniük kell: 1.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A>  Az SQL-utasítás meg kell felelnie a kezdetben használt a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> feltöltéséhez      2.  A **kulcs** oszlopra vonatkozó információ jelen kell lennie.       Ha az elsődleges kulcs adataira meg adva, az ismétlődő sorokat egyeztetendő és csak egyszer szerepelhet <xref:System.Data.DataTable>, amely megfelel a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Elsődleges kulcs adataira is beállítható keresztül <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, megadásával a <xref:System.Data.DataTable.PrimaryKey%2A>tulajdonsága a <xref:System.Data.DataTable>, vagy úgy, hogy a <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>tulajdonságot `AddWithKey`.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       Ha a `SelectCommand` külső ILLESZTÉS, az eredményt ad vissza a `DataAdapter` nem adott meg <xref:System.Data.DataTable.PrimaryKey%2A>az eredményül kapott <xref:System.Data.DataTable>.</xref:System.Data.DataTable> értéke</xref:System.Data.DataTable.PrimaryKey%2A> Győződjön meg arról, hogy az ismétlődő sorok helyesen feloldani az elsődleges kulcs explicit módon meg kell adni. További információkért lásd: [elsődleges kulcsok meghatározása](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>      > [!NOTE] > A `DataSet` nem tartalmaz a több rekordot által jelzett `maxRecords`. A lekérdezés által generált teljes eredménykészlet azonban továbbra is vissza a kiszolgálóról."
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table. This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/add/codesnippet/visualbasic/db016a7d-8591-46f9-abcc-_1.vb)]\n [!code-cs[Classic WebData DbDataAdapter.Fill3 Example#1](~/add/codesnippet/csharp/db016a7d-8591-46f9-abcc-_1.cs)]"
  syntax:
    content: public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> használatával kitölthet rögzíti, és ha szükséges, séma."
    - id: startRecord
      type: System.Int32
      description: "A nulla alapú rekordszám elindítása."
    - id: maxRecords
      type: System.Int32
      description: "A beolvasandó rekordok maximális száma."
    - id: srcTable
      type: System.String
      description: "A tábla hozzárendelésének használandó forrástábla neve."
    return:
      type: System.Int32
      description: "A sorok száma sikeresen hozzáadni vagy frissíteni kell a a <xref href=&quot;System.Data.DataSet&quot;> </xref>. Ez nem vonatkozik, amelyek nem adnak vissza a sorok utasítás érintett sorok."
  overload: System.Data.Common.DbDataAdapter.Fill*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes.       – vagy – a kapcsolat érvénytelen."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A kapcsolat nem található."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> startRecord </code> paramétere 0-nál kisebb.       – vagy – a <code> maxRecords </code> paramétere 0-nál kisebb."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  id: Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Fill(DataTable[],Int32,Int32,IDbCommand,CommandBehavior)
  nameWithType: DbDataAdapter.Fill(DataTable[],Int32,Int32,IDbCommand,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataTable[],Int32,Int32,IDbCommand,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ad hozzá, vagy frissíti a sort a megadott tartományban a <xref href=&quot;System.Data.DataSet&quot;> </xref> való megfelelnek-e a használhatja a <xref href=&quot;System.Data.DataSet&quot;> </xref> és <xref href=&quot;System.Data.DataTable&quot;> </xref> nevek."
  remarks: "A `maxRecords` a 0 érték beolvasása után a start-rekord található összes rekord. Ha `maxRecords` érték nagyobb, mint a többi sorok száma csak a többi sor visszaadása, és nem hibaüzenettel meghiúsul.       A Fill metódus lekéri az adatokat az adatforrásból a SELECT utasítás használatával. A <xref:System.Data.IDbConnection>a SELECT utasítás rendelt objektum érvényesnek kell lennie, de nem kell nyitva kell lennie.</xref:System.Data.IDbConnection> Ha a <xref:System.Data.IDbConnection>bezárása előtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van nevezik, az adatok beolvasásához megnyitni, akkor lezárt.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.IDbConnection> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       Ha a parancs nem ad vissza egyetlen sort sem, táblák hozzáadódnak a <xref:System.Data.DataSet>, de nincs kivétel következik be.</xref:System.Data.DataSet>       Ha a <xref:System.Data.Common.DbDataAdapter>objektum duplikált oszlop észlel feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehoz &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet>       A megadott lekérdezés több eredményeket ad vissza, ha minden eredménykészlet különálló táblában kerül. További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és így tovább). Nincs tábla létrejön egy lekérdezést, amely nem ad vissza a sorok, ha egy insert lekérdezés követi a select lekérdezés feldolgozását, mert a select lekérdezés létrehozott tábla neve &quot;Table&quot;, mert az első tábla. Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       A Fill metódus szituációkat ahol a <xref:System.Data.DataSet>több tartalmaz <xref:System.Data.DataTable>objektumok mappanevek csak térnek el egymástól eset.</xref:System.Data.DataTable> </xref:System.Data.DataSet> Ilyen helyzetekben <xref:System.Data.Common.DbDataAdapter.Fill%2A>hajt végre a megfelelő táblában található kis-és nagybetűket összehasonlítása, és táblázatot hoz létre új pontos egyezést létezésének.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   dataset.Tables.Add(&quot;AAA&quot;);   adapter.Fill(dataset, &quot;aaa&quot;); // Fills &quot;aaa&quot;, which already exists in the DataSet.   adapter.Fill(dataset, &quot;Aaa&quot;); // Adds a new table called &quot;Aaa&quot;.   ```Ha <xref:System.Data.Common.DbDataAdapter.Fill%2A>neve és a <xref:System.Data.DataSet>csak egy <xref:System.Data.DataTable>névvel csak esetben eltér, amely <xref:System.Data.DataTable>frissül.</xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ebben a forgatókönyvben eredményű összehasonlítás esetén-és nagybetűket. A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   adapter.Fill(dataset, &quot;AAA&quot;); // Fills table &quot;aaa&quot; because only one similarly named table is in the DataSet.   ```Hiba vagy egy kivételt a adattáblák feltöltése során észleli, ha a hiba bekövetkezése előtt hozzáadott sor a adattáblák maradnak. A hátralévő részét a művelet végrehajtása megszakadt.       Ha a SELECT utasítás való feltöltéséhez használt a <xref:System.Data.DataTable>objektumok több eredményeket ad vissza, például egy kötegelt SQL-utasításban, vegye figyelembe a következőket: - az SQL-utasítás kötegből több eredmények feldolgozásakor `maxRecords` csak az első eredmény vonatkozik.</xref:System.Data.DataTable> Ugyanez érvényes szakaszból eredmények (.NET Framework Data Provider az OLE DB csak) tartalmazó sort. A legfelső szintű eredmények korlátozza `maxRecords`, de összes gyermeksorok kerülnek.      – Ha egy, az eredmények hibát tartalmaz, minden további eredmények kimarad.      > [!NOTE] > A `DataSet` nem tartalmaz a több rekordot által jelzett `maxRecords`. A lekérdezés által generált teljes eredményhalmaza azonban továbbra is vissza a kiszolgálóról."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> töltse ki az adatforrás-objektumok."
    - id: startRecord
      type: System.Int32
      description: "A nulla alapú rekordszám elindítása."
    - id: maxRecords
      type: System.Int32
      description: "A beolvasandó rekordok maximális száma."
    - id: command
      type: System.Data.IDbCommand
      description: "A <xref href=&quot;System.Data.IDbCommand&quot;> </xref> végre, hogy az kitöltse a <xref href=&quot;System.Data.DataTable&quot;> </xref> objektumok."
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Egy a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékeket."
    return:
      type: System.Int32
      description: "A sorok száma fel vagy adatokat táblázatokban frissíteni kell."
  overload: System.Data.Common.DbDataAdapter.Fill*
  exceptions:
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes.       – vagy – a kapcsolat érvénytelen."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A kapcsolat nem található."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> startRecord </code> paramétere 0-nál kisebb.       – vagy – a <code> maxRecords </code> paramétere 0-nál kisebb."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  id: Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Fill(DataSet,Int32,Int32,String,IDbCommand,CommandBehavior)
  nameWithType: DbDataAdapter.Fill(DataSet,Int32,Int32,String,IDbCommand,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataSet,Int32,Int32,String,IDbCommand,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ad hozzá, vagy egy adott címtartomány megadásával a sorok frissíti a <xref href=&quot;System.Data.DataSet&quot;> </xref> megfelelnek-e a használhatja a a <xref href=&quot;System.Data.DataSet&quot;> </xref> és forrás táblanevek, a parancsot, és a parancs viselkedését."
  remarks: "A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus beolvas sort az adatforrásból, az a hozzárendelt által megadott SELECT utasítás használatával <xref:System.Data.IDbDataAdapter.SelectCommand%2A>tulajdonság.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbDataAdapter.Fill%2A> A SELECT utasítással tartozó kapcsolati objektum érvényesnek kell lennie, de nem kell nyitva kell lennie. Ha a kapcsolat le van zárva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van nevezik, az adatok beolvasásához megnyitni, akkor lezárt.</xref:System.Data.Common.DbDataAdapter.Fill%2A> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.Fill%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>majd a művelet hozzáadja a sorok cél <xref:System.Data.DataTable>objektumokat a <xref:System.Data.DataSet>létrehozásakor, a <xref:System.Data.DataTable>objektumokat, ha még nem léteznek.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Létrehozásakor <xref:System.Data.DataTable>objektumok, a <xref:System.Data.Common.DbDataAdapter.Fill%2A>művelet általában csak az oszlop neve metaadatokat hoz létre.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.Data.DataTable> Azonban ha a <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>tulajdonsága `AddWithKey`, megfelelő elsődleges kulcsokat és korlátozásokat is létrejött.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Ha a <xref:System.Data.Common.DbDataAdapter>ütközik ismétlődő oszlopok feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehozott &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet> Ha több eredménykészlet hozzáadódnak a <xref:System.Data.DataSet>minden eredménykészlet helyezkedik el, különálló táblában.</xref:System.Data.DataSet> További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és így tovább). Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus szituációkat ahol a <xref:System.Data.DataSet>több tartalmaz <xref:System.Data.DataTable>objektumok mappanevek csak térnek el egymástól eset.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ilyen helyzetekben <xref:System.Data.Common.DbDataAdapter.Fill%2A>hajt végre a megfelelő táblában található kis-és nagybetűket összehasonlítása, és táblázatot hoz létre új pontos egyezést létezésének.</xref:System.Data.Common.DbDataAdapter.Fill%2A> A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   dataset.Tables.Add(&quot;AAA&quot;);   adapter.Fill(dataset, &quot;aaa&quot;); // Fills &quot;aaa&quot;, which already exists in the DataSet.   adapter.Fill(dataset, &quot;Aaa&quot;); // Adds a new table called &quot;Aaa&quot;.   ```Ha <xref:System.Data.Common.DbDataAdapter.Fill%2A>neve és a <xref:System.Data.DataSet>csak egy <xref:System.Data.DataTable>névvel csak esetben eltér, amely <xref:System.Data.DataTable>frissül.</xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ebben a forgatókönyvben eredményű összehasonlítás esetén-és nagybetűket. A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   adapter.Fill(dataset, &quot;AAA&quot;); // Fills table &quot;aaa&quot; because only one similarly named table is in the DataSet.   ```A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus több alkalommal a azonos <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Ha egy elsődleges kulcs megtalálható, bejövő sorok egyesítve lesznek az egyező sorok, amely már létezik. Ha nem elsődleges kulcs létezik, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> lesz hozzáfűzve bejövő sorok       Ha a `SelectCommand` külső ILLESZTÉS, az eredményt ad vissza a `DataAdapter` nem adott meg <xref:System.Data.DataTable.PrimaryKey%2A>az eredményül kapott <xref:System.Data.DataTable>.</xref:System.Data.DataTable> értéke</xref:System.Data.DataTable.PrimaryKey%2A> Győződjön meg arról, hogy az ismétlődő sorok helyesen feloldani az elsődleges kulcs explicit módon meg kell adni. További információkért lásd:[elsődleges kulcsok definiálása](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.Fill%2A>és <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>egy .NET-keretrendszer adatokat szolgáltató visszakeresi sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> használatával kitölthet rögzíti, és ha szükséges, séma."
    - id: startRecord
      type: System.Int32
      description: "A nulla alapú rekordszám elindítása."
    - id: maxRecords
      type: System.Int32
      description: "A beolvasandó rekordok maximális száma."
    - id: srcTable
      type: System.String
      description: "A tábla hozzárendelésének használandó forrástábla neve."
    - id: command
      type: System.Data.IDbCommand
      description: "Az SQL SELECT utasításhoz sorok kérdezi le az adatforrás."
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Egy a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékeket."
    return:
      type: System.Int32
      description: "A sorok száma sikeresen hozzáadni vagy frissíteni kell a a <xref href=&quot;System.Data.DataSet&quot;> </xref>. Ez nem vonatkozik, amelyek nem adnak vissza a sorok utasítás érintett sorok."
  overload: System.Data.Common.DbDataAdapter.Fill*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <code> startRecord </code> paramétere 0-nál kisebb.       – vagy – a <code> maxRecords </code> paramétere 0-nál kisebb."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.FillCommandBehavior
  id: FillCommandBehavior
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: FillCommandBehavior
  nameWithType: DbDataAdapter.FillCommandBehavior
  fullName: System.Data.Common.DbDataAdapter.FillCommandBehavior
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a parancs a adapter kitöltéséhez használandó viselkedését."
  syntax:
    content: protected System.Data.CommandBehavior FillCommandBehavior { get; set; }
    return:
      type: System.Data.CommandBehavior
      description: "A <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> tölti ki a adapter parancs."
  overload: System.Data.Common.DbDataAdapter.FillCommandBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DbDataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataSet,SchemaType)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hozzáad egy <xref href=&quot;System.Data.DataTable&quot;> </xref> &quot;Table&quot; ahhoz, hogy a megadott nevű <xref href=&quot;System.Data.DataSet&quot;> </xref> , és konfigurálja megfelelően a séma, amely az adatforrás alapján a megadott <xref href=&quot;System.Data.SchemaType&quot;> </xref>."
  remarks: "Ez a módszer a séma adatait kérdezi le a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> adatokkal       A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>művelet hozzáadja a <xref:System.Data.DataTable>a cél- <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Hozzáadja egy oszlopot az <xref:System.Data.DataColumnCollection>, a <xref:System.Data.DataTable>, és konfigurálja a következőket <xref:System.Data.DataColumn>tulajdonságait, ha vannak ilyenek az adatforrásban:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> Meg kell adni <xref:System.Data.DataColumn.AutoIncrementStep%2A>és <xref:System.Data.DataColumn.AutoIncrementSeed%2A>külön-külön.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>is konfigurálja a <xref:System.Data.DataTable.PrimaryKey%2A>és <xref:System.Data.DataTable.Constraints%2A>a következő szabályok szerint tulajdonságok: – Ha egy vagy több elsődleges-kulcs oszlopainak a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>használhatók, mint az elsődleges kulcs oszlopainak a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> által visszaadott</xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Ha nincsenek elsődleges kulcs oszlopok ad vissza, de egyedi oszlop, az egyedi oszlopok használatosak az elsődleges kulcs, ha csak az egyedi oszlopok nullázhatóra korlátozva. Bármelyik oszlop nullázható, ha egy <xref:System.Data.UniqueConstraint>hozzáadódik a <xref:System.Data.ConstraintCollection>, de a <xref:System.Data.DataTable.PrimaryKey%2A>tulajdonsága nincs beállítva.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      – Ha az elsődleges kulcs és egyedi oszlopok ad vissza, az elsődleges kulcs oszlopok használják az elsődleges-kulcs oszlopainak a <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Vegye figyelembe, hogy az elsődleges kulcsok és egyedi korlátozások bekerülnek a <xref:System.Data.ConstraintCollection>megfelelően az előző szabályok, de más megkötés típusok nem lettek hozzáadva.</xref:System.Data.ConstraintCollection>       Ha egy egyedi fürtözött index egy SQL Server tábla oszlopai van definiálva, és elsődleges kulcs megszorítását oszlopok, a különálló megfelelő van definiálva, akkor a fürtözött index oszlopainak nevét adja vissza. Nevét vagy az elsődleges kulcs oszlopainak nevét adja vissza, használja a lekérdezés mutatóban a SELECT utasítással, amely meghatározza az elsődleges kulcs indexe nevét. A lekérdezésmutatók megadásával kapcsolatos további információkért lásd: [lekérdezés mutatóban (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Elsődleges kulcs adataira során használt <xref:System.Data.Common.DbDataAdapter.Fill%2A>keresése és cseréje egyetlen sort sem azonos kulcsú oszlopokból.</xref:System.Data.Common.DbDataAdapter.Fill%2A> Ha ez nem a kívánt viselkedés, használjon <xref:System.Data.Common.DbDataAdapter.Fill%2A>nélkül séma információt kérő.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       Ha a <xref:System.Data.IDataAdapter>ütközik ismétlődő oszlopok feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehozott &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.IDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet> Ha több eredménykészlet hozzáadódnak a <xref:System.Data.DataSet>minden eredménykészlet helyezkedik el, különálló táblában.</xref:System.Data.DataSet> További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és stb.). Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       A <xref:System.Data.IDbConnection>a kijelölési parancs rendelt objektum érvényesnek kell lennie, de nem kell megnyitni.</xref:System.Data.IDbConnection> Ha a <xref:System.Data.IDbConnection>bezárása előtt <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>van nevezik, az adatok beolvasásához megnyitni, akkor lezárt.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> </xref:System.Data.IDbConnection> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>van neve, nélkül van nyitva.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       Használata esetén <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, a .NET Framework Data Provider az SQL Server FOR BROWSE záradék hozzáfűzi az utasítás végrehajtása.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A felhasználó lehetséges hatásai, például a SET FMTONLY METÓDUS ON utasítás használatával zavaró tényező tisztában kell lennie. SQL Server Online könyvekben további információt talál."
  example:
  - "The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/add/codesnippet/visualbasic/5283d285-2680-48b0-856a-_1.vb)]\n [!code-cs[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/add/codesnippet/csharp/5283d285-2680-48b0-856a-_1.cs)]"
  syntax:
    content: public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> beszúrására a sémának."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Egy a <xref href=&quot;System.Data.SchemaType&quot;> </xref> értékek beszúrása a séma megadása."
    return:
      type: System.Data.DataTable[]
      description: "Egy referencia-gyűjteményre <xref href=&quot;System.Data.DataTable&quot;> </xref> hozzáadott objektumok a <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  id: FillSchema(System.Data.DataTable,System.Data.SchemaType)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: FillSchema(DataTable,SchemaType)
  nameWithType: DbDataAdapter.FillSchema(DataTable,SchemaType)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataTable,SchemaType)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Konfigurálja a megadott séma <xref href=&quot;System.Data.DataTable&quot;> </xref> a megadott alapján <xref href=&quot;System.Data.SchemaType&quot;> </xref>."
  remarks: "FillSchema metódus a séma átveszi a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> adatokkal A tartozó kapcsolati objektum a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>kell érvényes, de nem kell nyitva kell lennie.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Ha a kapcsolat le van zárva, FillSchema metódus meghívása előtt, azt megnyitott beolvasni az adatokat, akkor zárva. Ha a kapcsolat meg nyitva FillSchema metódus meghívása előtt, hogy nyitva marad.       Egy FillSchema művelet <xref:System.Data.DataTable>.</xref:System.Data.DataTable> adja vissza. Hozzáadja egy oszlopot az <xref:System.Data.DataColumnCollection>, a <xref:System.Data.DataTable>, és konfigurálja a következőket <xref:System.Data.DataColumn>tulajdonságait, ha vannak ilyenek az adatforrásban:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> Meg kell adni <xref:System.Data.DataColumn.AutoIncrementStep%2A>és <xref:System.Data.DataColumn.AutoIncrementSeed%2A>külön-külön.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A>FillSchema is konfigurálja a <xref:System.Data.DataTable.PrimaryKey%2A>és <xref:System.Data.DataTable.Constraints%2A>Tulajdonságok a következő szabályok szerint: – Ha egy <xref:System.Data.DataTable.PrimaryKey%2A>esetében már meg van adva a `DataTable`, vagy a `DataTable` adatokat tartalmaz, a `PrimaryKey` tulajdonság nem állítható.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      – Ha egy vagy több elsődleges-kulcs oszlopainak által visszaadott a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, használhatók, mint az elsődleges kulcs oszlopainak a `DataTable`.</xref:System.Data.IDbDataAdapter.SelectCommand%2A>      -Ha nincsenek elsődleges kulcs oszlopok ad vissza, de egyedi oszlop, az egyedi oszlopok használatosak az elsődleges kulcs, ha csak az egyedi oszlopok nullázhatóra korlátozva. Bármelyik oszlop nullázható, ha egy <xref:System.Data.UniqueConstraint>hozzáadódik a <xref:System.Data.ConstraintCollection>, de a `PrimaryKey` tulajdonsága nincs beállítva.</xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      – Ha az elsődleges kulcs és egyedi oszlopok ad vissza, az elsődleges kulcs oszlopok használatosak az elsődleges kulcs oszlopainak a `DataTable`.       Vegye figyelembe, hogy az elsődleges kulcsok és egyedi korlátozások bekerülnek a <xref:System.Data.ConstraintCollection>megfelelően az előző szabályok, de más megkötés típusok nem lettek hozzáadva.</xref:System.Data.ConstraintCollection> Ez a folyamat a kiszolgálóhoz több üzenetváltások lehet szükség.       Ha egy egyedi fürtözött index egy SQL Server tábla oszlopai van definiálva, és elsődleges kulcs megszorítását oszlopok, a különálló megfelelő van definiálva, akkor a fürtözött index oszlopainak nevét adja vissza. Nevét vagy az elsődleges kulcs oszlopainak nevét adja vissza, használja a lekérdezés mutatóban a SELECT utasítással, amely meghatározza az elsődleges kulcs indexe nevét. A lekérdezésmutatók megadásával kapcsolatos további információkért lásd: [lekérdezés mutatóban (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Ha a <xref:System.Data.Common.DbDataAdapter>ütközik ismétlődő oszlopok feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehozott &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet> Ha több eredménykészlet hozzáadódnak a <xref:System.Data.DataSet>minden eredménykészlet helyezkedik el, különálló táblában.</xref:System.Data.DataSet> További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és stb.). Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       FillSchema metódus nem ad vissza egyetlen sort sem. A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus egy <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorok hozzáadása</xref:System.Data.Common.DbDataAdapter.Fill%2A>      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot kezelésekor végrehajtásának FillSchema metódus a .NET-keretrendszer adatszolgáltatója az OLE DB lekéri sémaadatainak csak az első találatra. Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       FillSchema metódus használata esetén a .NET Framework Data Provider az SQL Server FOR BROWSE záradék fűzi hozzá az utasítás végrehajtása. A felhasználó lehetséges hatásai, például a SET FMTONLY METÓDUS ON utasítás használatával zavaró tényező tisztában kell lennie. SQL Server Online könyvekben további információt talál."
  example:
  - "The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/add/codesnippet/visualbasic/658ac10a-3a87-4693-8b37-_1.vb)]\n [!code-cs[Classic WebData DbDataAdapter.FillSchema3#1](~/add/codesnippet/csharp/658ac10a-3a87-4693-8b37-_1.cs)]"
  syntax:
    content: public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> ki kell tölteni az adatforrásból a sémával."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Egy a <xref href=&quot;System.Data.SchemaType&quot;> </xref> értékeket."
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> , amelyek az adatforrásból visszaadott séma információkat tartalmaznak."
  overload: System.Data.Common.DbDataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType,String)
  nameWithType: DbDataAdapter.FillSchema(DataSet,SchemaType,String)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataSet,SchemaType,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hozzáad egy <xref href=&quot;System.Data.DataTable&quot;> </xref> megadott <xref href=&quot;System.Data.DataSet&quot;> </xref> , és konfigurálja megfelelően a séma, amely az adatforrás alapján a megadott <xref href=&quot;System.Data.SchemaType&quot;> </xref> és <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "Ez a módszer a séma adatait kérdezi le a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> adatokkal       A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>művelet hozzáadja a <xref:System.Data.DataTable>a cél- <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Hozzáadja egy oszlopot az <xref:System.Data.DataColumnCollection>, a <xref:System.Data.DataTable>, és konfigurálja a következőket <xref:System.Data.DataColumn>tulajdonságait, ha vannak ilyenek az adatforrásban:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> Meg kell adni <xref:System.Data.DataColumn.AutoIncrementStep%2A>és <xref:System.Data.DataColumn.AutoIncrementSeed%2A>külön-külön.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>is konfigurálja a <xref:System.Data.DataTable.PrimaryKey%2A>és <xref:System.Data.DataTable.Constraints%2A>a következő szabályok szerint tulajdonságok: – Ha egy vagy több elsődleges-kulcs oszlopainak a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>használhatók, mint az elsődleges kulcs oszlopainak a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> által visszaadott</xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Ha nincsenek elsődleges kulcs oszlopok ad vissza, de egyedi oszlop, az egyedi oszlopok használatosak az elsődleges kulcs, ha csak az egyedi oszlopok nullázhatóra korlátozva. Bármelyik oszlop nullázható, ha egy <xref:System.Data.UniqueConstraint>hozzáadódik a <xref:System.Data.ConstraintCollection>, de a <xref:System.Data.DataTable.PrimaryKey%2A>tulajdonsága nincs beállítva.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      – Ha az elsődleges kulcs és egyedi oszlopok ad vissza, az elsődleges kulcs oszlopok használják az elsődleges-kulcs oszlopainak a <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Vegye figyelembe, hogy az elsődleges kulcsok és egyedi korlátozások bekerülnek a <xref:System.Data.ConstraintCollection>megfelelően az előző szabályok, de más megkötés típusok nem lettek hozzáadva.</xref:System.Data.ConstraintCollection>       Ha egy egyedi fürtözött index egy SQL Server tábla oszlopai van definiálva, és elsődleges kulcs megszorítását oszlopok, a különálló megfelelő van definiálva, akkor a fürtözött index oszlopainak nevét adja vissza. Nevét vagy az elsődleges kulcs oszlopainak nevét adja vissza, használja a lekérdezés mutatóban a SELECT utasítással, amely meghatározza az elsődleges kulcs indexe nevét. A lekérdezésmutatók megadásával kapcsolatos további információkért lásd: [lekérdezés mutatóban (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Elsődleges kulcs adataira során használt <xref:System.Data.Common.DbDataAdapter.Fill%2A>keresése és cseréje egyetlen sort sem azonos kulcsú oszlopokból.</xref:System.Data.Common.DbDataAdapter.Fill%2A> Ha ez nem a kívánt viselkedés, használjon <xref:System.Data.Common.DbDataAdapter.Fill%2A>nélkül séma információt kérő.</xref:System.Data.Common.DbDataAdapter.Fill%2A>       Ha a <xref:System.Data.Common.DbDataAdapter>ütközik ismétlődő oszlopok feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehozott &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet> Ha több eredménykészlet hozzáadódnak a <xref:System.Data.DataSet>minden eredménykészlet helyezkedik el, különálló táblában.</xref:System.Data.DataSet> További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és stb.). Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>metódus szituációkat ahol a <xref:System.Data.DataSet>több tartalmaz <xref:System.Data.DataTable>objektumok mappanevek csak térnek el egymástól eset.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Ilyen helyzetekben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>hajt végre a megfelelő táblában található kis-és nagybetűket összehasonlítása, és táblázatot hoz létre új pontos egyezést létezésének.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   dataset.Tables.Add(&quot;AAA&quot;);   adapter.FillSchema(dataset, &quot;aaa&quot;); // Fills the schema of &quot;aaa&quot;, which already exists in the DataSet.   adapter.FillSchema(dataset, &quot;Aaa&quot;); // Adds a new table called &quot;Aaa&quot;.   ```Ha <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>nevezik, és a <xref:System.Data.DataSet>csak egy <xref:System.Data.DataTable>névvel csak esetben eltér, amely <xref:System.Data.DataTable>frissül.</xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Ebben a forgatókönyvben eredményű összehasonlítás esetén-és nagybetűket. A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   adapter.FillSchema(dataset, &quot;AAA&quot;); // Fills the schema of table &quot;aaa&quot; because only one similarly named table is in the DataSet.   ```A <xref:System.Data.IDbConnection>a kijelölési parancs rendelt objektum érvényesnek kell lennie, de nem kell megnyitni.</xref:System.Data.IDbConnection> Ha a <xref:System.Data.IDbConnection>bezárása előtt <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>van nevezik, az adatok beolvasásához megnyitni, akkor lezárt.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> </xref:System.Data.IDbConnection> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>van neve, nélkül van nyitva.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       Használata esetén <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, a .NET Framework Data Provider az SQL Server FOR BROWSE záradék hozzáfűzi az utasítás végrehajtása.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A felhasználó lehetséges hatásai, például a SET FMTONLY METÓDUS ON utasítás használatával zavaró tényező tisztában kell lennie. SQL Server Online könyvekben további információt talál."
  example:
  - "The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.  \n  \n [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/add/codesnippet/visualbasic/c7e2b899-0a44-4d9d-9e8d-_1.vb)]\n [!code-cs[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/add/codesnippet/csharp/c7e2b899-0a44-4d9d-9e8d-_1.cs)]"
  syntax:
    content: public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> beszúrására a sémának."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Egy a <xref href=&quot;System.Data.SchemaType&quot;> </xref> értékek beszúrása a séma megadása."
    - id: srcTable
      type: System.String
      description: "A tábla hozzárendelésének használandó forrástábla neve."
    return:
      type: System.Data.DataTable[]
      description: "Egy referencia-gyűjteményre <xref href=&quot;System.Data.DataTable&quot;> </xref> hozzáadott objektumok a <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.FillSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A forrástábla, amelyből ki kell olvasni a séma nem található."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  id: FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: FillSchema(DataTable,SchemaType,IDbCommand,CommandBehavior)
  nameWithType: DbDataAdapter.FillSchema(DataTable,SchemaType,IDbCommand,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataTable,SchemaType,IDbCommand,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Konfigurálja a megadott séma <xref href=&quot;System.Data.DataTable&quot;> </xref> a megadott alapján <xref href=&quot;System.Data.SchemaType&quot;> </xref>, parancs-karakterlánc, és <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékeket."
  remarks: "A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>metódus lekéri a séma az adatforrásból a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> használatával</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A tartozó kapcsolati objektum a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>kell érvényes, de nem kell nyitva kell lennie.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Ha a kapcsolat le van zárva, mielőtt <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>van nevezik, az adatok beolvasásához megnyitni, akkor lezárt.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>művelet hozzáadja a <xref:System.Data.DataTable>a cél- <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Hozzáadja egy oszlopot az <xref:System.Data.DataColumnCollection>, a <xref:System.Data.DataTable>, és konfigurálja a következőket <xref:System.Data.DataColumn>tulajdonságait, ha vannak ilyenek az adatforrásban:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> Meg kell adni <xref:System.Data.DataColumn.AutoIncrementStep%2A>és <xref:System.Data.DataColumn.AutoIncrementSeed%2A>külön-külön.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>is konfigurálja a <xref:System.Data.DataTable.PrimaryKey%2A>és <xref:System.Data.DataTable.Constraints%2A>a következő szabályok szerint tulajdonságok: – Ha egy vagy több elsődleges-kulcs oszlopainak a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>használhatók, mint az elsődleges kulcs oszlopainak a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> által visszaadott</xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Ha nincsenek elsődleges kulcs oszlopok ad vissza, de egyedi oszlop, az egyedi oszlopok használatosak az elsődleges kulcs, ha csak az egyedi oszlopok nullázhatóra korlátozva. Bármelyik oszlop nullázható, ha egy <xref:System.Data.UniqueConstraint>hozzáadódik a <xref:System.Data.ConstraintCollection>, de a <xref:System.Data.DataTable.PrimaryKey%2A>tulajdonsága nincs beállítva.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      – Ha az elsődleges kulcs és egyedi oszlopok ad vissza, az elsődleges kulcs oszlopok használják az elsődleges-kulcs oszlopainak a <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Vegye figyelembe, hogy az elsődleges kulcsok és egyedi korlátozások bekerülnek a <xref:System.Data.ConstraintCollection>megfelelően az előző szabályok, de más megkötés típusok nem lettek hozzáadva.</xref:System.Data.ConstraintCollection>       Ha egy egyedi fürtözött index egy SQL Server tábla oszlopai van definiálva, és elsődleges kulcs megszorítását oszlopok, a különálló megfelelő van definiálva, akkor a fürtözött index oszlopainak nevét adja vissza. Nevét vagy az elsődleges kulcs oszlopainak nevét adja vissza, használja a lekérdezés mutatóban a SELECT utasítással, amely meghatározza az elsődleges kulcs indexe nevét. A lekérdezésmutatók megadásával kapcsolatos további információkért lásd: [lekérdezés mutatóban (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Ha a <xref:System.Data.IDataAdapter>ütközik ismétlődő oszlopok feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehozott &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.IDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet> Ha több eredménykészlet hozzáadódnak a <xref:System.Data.DataSet>minden eredménykészlet helyezkedik el, különálló táblában.</xref:System.Data.DataSet> További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és stb.). Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>vissza a sorokat.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus egy <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorok hozzáadása</xref:System.Data.Common.DbDataAdapter.Fill%2A>      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       Használata esetén <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, a .NET Framework Data Provider az SQL Server FOR BROWSE záradék hozzáfűzi az utasítás végrehajtása.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A felhasználó lehetséges hatásai, például a SET FMTONLY METÓDUS ON utasítás használatával zavaró tényező tisztában kell lennie. SQL Server Online könyvekben további információt talál."
  syntax:
    content: protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> ki kell tölteni az adatforrásból a sémával."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Egy a <xref href=&quot;System.Data.SchemaType&quot;> </xref> értékeket."
    - id: command
      type: System.Data.IDbCommand
      description: "Az SQL SELECT utasításhoz sorok kérdezi le az adatforrás."
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Egy a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékeket."
    return:
      type: System.Data.DataTable
      description: "Az A <xref href=&quot;System.Data.DataTable&quot;> </xref> az adatforrás által visszaadott objektum, amely séma adatait tartalmazza."
  overload: System.Data.Common.DbDataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType,IDbCommand,String,CommandBehavior)
  nameWithType: DbDataAdapter.FillSchema(DataSet,SchemaType,IDbCommand,String,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataSet,SchemaType,IDbCommand,String,CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Hozzáad egy <xref href=&quot;System.Data.DataTable&quot;> </xref> megadott <xref href=&quot;System.Data.DataSet&quot;> </xref> , és konfigurálja megfelelően a séma, amely az adatforrás alapján a megadott <xref href=&quot;System.Data.SchemaType&quot;> </xref>."
  remarks: "A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>metódus lekéri a séma az adatforrásból a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> használatával</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A tartozó kapcsolati objektum a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>kell érvényes, de nem kell nyitva kell lennie.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Ha a kapcsolat le van zárva, mielőtt <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>van nevezik, az adatok beolvasásához megnyitni, akkor lezárt.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Ha a kapcsolat meg nyitva, mielőtt <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>van neve, hogy nyitva marad.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>művelet hozzáadja a <xref:System.Data.DataTable>a cél- <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Hozzáadja egy oszlopot az <xref:System.Data.DataColumnCollection>, a <xref:System.Data.DataTable>, és konfigurálja a következőket <xref:System.Data.DataColumn>tulajdonságait, ha vannak ilyenek az adatforrásban:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> Meg kell adni <xref:System.Data.DataColumn.AutoIncrementStep%2A>és <xref:System.Data.DataColumn.AutoIncrementSeed%2A>külön-külön.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>is konfigurálja a <xref:System.Data.DataTable.PrimaryKey%2A>és <xref:System.Data.DataTable.Constraints%2A>a következő szabályok szerint tulajdonságok: – Ha egy vagy több elsődleges-kulcs oszlopainak a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>használhatók, mint az elsődleges kulcs oszlopainak a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> által visszaadott</xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A>       </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Ha nincsenek elsődleges kulcs oszlopok ad vissza, de egyedi oszlop, az egyedi oszlopok használatosak az elsődleges kulcs, ha csak az egyedi oszlopok nullázhatóra korlátozva. Bármelyik oszlop nullázható, ha egy <xref:System.Data.UniqueConstraint>hozzáadódik a <xref:System.Data.ConstraintCollection>, de a <xref:System.Data.DataTable.PrimaryKey%2A>tulajdonsága nincs beállítva.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      – Ha az elsődleges kulcs és egyedi oszlopok ad vissza, az elsődleges kulcs oszlopok használják az elsődleges-kulcs oszlopainak a <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Vegye figyelembe, hogy az elsődleges kulcsok és egyedi korlátozások bekerülnek a <xref:System.Data.ConstraintCollection>megfelelően az előző szabályok, de más megkötés típusok nem lettek hozzáadva.</xref:System.Data.ConstraintCollection>       Ha egy egyedi fürtözött index egy SQL Server tábla oszlopai van definiálva, és elsődleges kulcs megszorítását oszlopok, a különálló megfelelő van definiálva, akkor a fürtözött index oszlopainak nevét adja vissza. Nevét vagy az elsődleges kulcs oszlopainak nevét adja vissza, használja a lekérdezés mutatóban a SELECT utasítással, amely meghatározza az elsődleges kulcs indexe nevét. A lekérdezésmutatók megadásával kapcsolatos további információkért lásd: [lekérdezés mutatóban (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Ha a <xref:System.Data.IDataAdapter>ütközik ismétlődő oszlopok feltöltése során a <xref:System.Data.DataTable>, nevei a következő oszlopokhoz, a minta használatával létrehozott &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, és így tovább.</xref:System.Data.DataTable> </xref:System.Data.IDataAdapter> Ha a bejövő adatok tartalmazzák a névtelen oszlopok, kerülnek, a a <xref:System.Data.DataSet>megfelelően a minta &quot;1. oszlop&quot;, &quot;2&quot; és így tovább.</xref:System.Data.DataSet> Ha több eredménykészlet hozzáadódnak a <xref:System.Data.DataSet>minden eredménykészlet helyezkedik el, különálló táblában.</xref:System.Data.DataSet> További eredményhalmazt megnevezett szerves értékek hozzáfűzésével a megadott tábla neve (például &quot;Table&quot;, &quot;Table1&quot;, &quot;Table2&quot; és stb.). Alkalmazások oszlop- és nevek használatával győződjön meg arról, hogy ezek a minták elnevezési ütközik nem történik meg.       A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>metódus szituációkat ahol a <xref:System.Data.DataSet>több tartalmaz <xref:System.Data.DataTable>objektumok mappanevek csak térnek el egymástól eset.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Ilyen helyzetekben <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>hajt végre a megfelelő táblában található kis-és nagybetűket összehasonlítása, és táblázatot hoz létre új pontos egyezést létezésének.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   dataset.Tables.Add(&quot;AAA&quot;);   adapter.FillSchema(dataset, &quot;aaa&quot;); // Fills the schema of &quot;aaa&quot;, which already exists in the DataSet.   adapter.FillSchema(dataset, &quot;Aaa&quot;); // Adds a new table called &quot;Aaa&quot;.   ```Ha <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>nevezik, és a <xref:System.Data.DataSet>csak egy <xref:System.Data.DataTable>névvel csak esetben eltér, amely <xref:System.Data.DataTable>frissül.</xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Ebben a forgatókönyvben eredményű összehasonlítás esetén-és nagybetűket. A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();   dataset.Tables.Add(&quot;aaa&quot;);   adapter.FillSchema(dataset, &quot;AAA&quot;); // Fills the schema of table &quot;aaa&quot; because only one similarly named table is in the DataSet.   ```       <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>vissza a sorokat.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A <xref:System.Data.Common.DbDataAdapter.Fill%2A>metódus egy <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorok hozzáadása</xref:System.Data.Common.DbDataAdapter.Fill%2A>      > [!NOTE] > Kötegelt SQL-utasítások, amelyek több találatot, végrehajtásának kezelésekor <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>számára a .NET Framework Data Provider az OLE DB lekéri sémaadatainak csak az első találatra.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Több eredmény sémainformációja lekéréséhez használja <xref:System.Data.Common.DbDataAdapter.Fill%2A>rendelkező a <xref:System.Data.MissingSchemaAction>beállítása `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>       Használata esetén <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, a .NET Framework Data Provider az SQL Server FOR BROWSE záradék hozzáfűzi az utasítás végrehajtása.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> A felhasználó lehetséges hatásai, például a SET FMTONLY METÓDUS ON utasítás használatával zavaró tényező tisztában kell lennie. SQL Server Online könyvekben további információt talál."
  syntax:
    content: protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> ki kell tölteni az adatforrásból a sémával."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Egy a <xref href=&quot;System.Data.SchemaType&quot;> </xref> értékeket."
    - id: command
      type: System.Data.IDbCommand
      description: "Az SQL SELECT utasításhoz sorok kérdezi le az adatforrás."
    - id: srcTable
      type: System.String
      description: "A tábla hozzárendelésének használandó forrástábla neve."
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Egy a <xref href=&quot;System.Data.CommandBehavior&quot;> </xref> értékeket."
    return:
      type: System.Data.DataTable[]
      description: "A tömb <xref href=&quot;System.Data.DataTable&quot;> </xref> séma adatokat tartalmazó objektumot adott vissza az adatforrásból."
  overload: System.Data.Common.DbDataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  id: GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: DbDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.Common.DbDataAdapter.GetBatchedParameter(Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Értéket ad vissza egy <xref href=&quot;System.Data.IDataParameter&quot;> </xref> az aktuális köteg lévő parancsok egyikét."
  remarks: "<xref:System.Data.Common.DbDataAdapter>Ez a módszer <xref:System.NotSupportedException>.</xref:System.NotSupportedException> jelez</xref:System.Data.Common.DbDataAdapter> Öröklő <xref:System.Data.Common.DbDataAdapter>bírálja felül ezt a metódust támogatást nyújt a kötegek.</xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "A parancs beolvasása a paraméter indexe."
    - id: parameterIndex
      type: System.Int32
      description: "A parancs belül paraméter indexe."
    return:
      type: System.Data.IDataParameter
      description: "A <xref href=&quot;System.Data.IDataParameter&quot;> </xref> megadott."
  overload: System.Data.Common.DbDataAdapter.GetBatchedParameter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az adapter nem támogatja a kötegek."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  id: GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: DbDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Kísérlet történt egy nagyobb kötegelt frissítési belül egyedi frissítés információt ad vissza."
  remarks: "Amely támogatja a kötegelt frissítése logika adatszolgáltatók felül kell bírálnia a több virtuális módszer a <xref:System.Data.Common.DbDataAdapter>osztályból</xref:System.Data.Common.DbDataAdapter> . `GetBatchedRecordsAffected`Ezen virtuális módszerek jelöli. A `DbDataAdapter` osztály támaszkodik `GetBatchedRecordsAffected` sikerességét vagy sikertelenségét az egyes frissítési kísérletek belül egy kötegelt meghatározásához, így minden megfelelő jelölheti <xref:System.Data.DataRow>ennek megfelelően.</xref:System.Data.DataRow>"
  syntax:
    content: protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Az egyes parancsnak a kötegelt nulláról indulva számított oszlop sorszámát."
    - id: recordsAffected
      type: System.Int32
      description: "A megadott parancs a kötegelt belül található az adattárban érintett sorok száma."
    - id: error
      type: System.Exception
      description: "Egy <xref:System.Exception>a megadott parancs végrehajtása közben lépett fel.</xref:System.Exception> Beolvasása <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Visual Basic nyelvben), ha nincs kivétel történt."
    return:
      type: System.Boolean
      description: "Kísérlet történt egy nagyobb kötegelt frissítési belül egyedi frissítés kapcsolatos információkat."
  overload: System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.GetFillParameters
  id: GetFillParameters
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: GetFillParameters()
  nameWithType: DbDataAdapter.GetFillParameters()
  fullName: System.Data.Common.DbDataAdapter.GetFillParameters()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi a SQL SELECT utasítás végrehajtása közben a felhasználó által megadott paramétereket."
  syntax:
    content: public override System.Data.IDataParameter[] GetFillParameters ();
    parameters: []
    return:
      type: System.Data.IDataParameter[]
      description: "A tömb <xref href=&quot;System.Data.IDataParameter&quot;> </xref> a felhasználó által megadott objektumokat, amely tartalmazza a paraméterek."
  overload: System.Data.Common.DbDataAdapter.GetFillParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.InitializeBatching
  id: InitializeBatching
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: InitializeBatching()
  nameWithType: DbDataAdapter.InitializeBatching()
  fullName: System.Data.Common.DbDataAdapter.InitializeBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A kötegelés inicializálja a <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "<xref:System.Data.Common.DbDataAdapter>Ez a módszer <xref:System.NotSupportedException>.</xref:System.NotSupportedException> jelez</xref:System.Data.Common.DbDataAdapter> Öröklő <xref:System.Data.Common.DbDataAdapter>bírálja felül ezt a metódust támogatást nyújt a kötegek.</xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected virtual void InitializeBatching ();
    parameters: []
  overload: System.Data.Common.DbDataAdapter.InitializeBatching*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az adapter nem támogatja a kötegek."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: DbDataAdapter.InsertCommand
  fullName: System.Data.Common.DbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a parancs segítségével szúrják be az új bejegyzések az adatforrás."
  remarks: "Során <xref:System.Data.Common.DbDataAdapter.Update%2A>, ha ez a tulajdonság nincs beállítva, és az elsődleges kulcs adataira is szerepel a <xref:System.Data.DataSet>, a <xref:System.Data.IDbDataAdapter.InsertCommand%2A>automatikusan generált.</xref:System.Data.IDbDataAdapter.InsertCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A>"
  example:
  - "The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.common.dbd_0_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dbd_0_1.vb)]"
  syntax:
    content: public System.Data.Common.DbCommand InsertCommand { get; set; }
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.IDbCommand&quot;> </xref> során használt <xref:System.Data.IDataAdapter.Update*>beszúrandó rekordok az adatforrás az adatkészlet új soraihoz.</xref:System.Data.IDataAdapter.Update*>"
  overload: System.Data.Common.DbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: DbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Common.DbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Kiváltja a <xref uid=&quot;langword_csharp_RowUpdated&quot; name=&quot;RowUpdated&quot; href=&quot;&quot;> </xref> egy .NET-keretrendszer adatszolgáltatója az eseménye."
  remarks: 'Az eseménykezelő keresztül egy delegált esemény indítása hív meg. Megtudhatja, [NIB: esemény indítása](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "A <xref href=&quot;System.Data.Common.RowUpdatedEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Data.Common.DbDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: DbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Kiváltja a <xref uid=&quot;langword_csharp_RowUpdating&quot; name=&quot;RowUpdating&quot; href=&quot;&quot;> </xref> egy .NET-keretrendszer adatszolgáltatója az eseménye."
  remarks: 'Az eseménykezelő keresztül egy delegált esemény indítása hív meg. Megtudhatja, [NIB: esemény indítása](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Egy <xref href=&quot;System.Data.Common.RowUpdatingEventArgs&quot;> </xref> , amely tartalmazza az eseményadatok."
  overload: System.Data.Common.DbDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: DbDataAdapter.SelectCommand
  fullName: System.Data.Common.DbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a parancs az adatforrás rekordok kiválasztására szolgál."
  remarks: ''
  example:
  - "The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.common.dbd_1_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dbd_1_1.vb)]"
  syntax:
    content: public System.Data.Common.DbCommand SelectCommand { get; set; }
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.IDbCommand&quot;> </xref> során használt <xref:System.Data.IDataAdapter.Update*>rekordok kiválasztásához a következő adatkészletben elhelyezésre az adatforrásból.</xref:System.Data.IDataAdapter.Update*>"
  overload: System.Data.Common.DbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a rekordok eltávolítása az adatkészlet egy SQL-utasítást."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DbDataAdapter>példány típusúvá egy <xref:System.Data.IDbDataAdapter>felületet.</xref:System.Data.IDbDataAdapter> </xref:System.Data.Common.DbDataAdapter>       További információkért lásd: <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</xref:System.Data.IDbDataAdapter.DeleteCommand%2A>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Egy <xref href=&quot;System.Data.IDbCommand&quot;> </xref> során használt <xref:System.Data.Common.DbDataAdapter.Update*>törlendő rekordok az adatforrás az adatkészlet törölt soraihoz.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a segítségével szúrják be az új bejegyzések az adatforrás SQL-utasítást."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DbDataAdapter>példány típusúvá egy <xref:System.Data.IDbDataAdapter>felületet.</xref:System.Data.IDbDataAdapter> </xref:System.Data.Common.DbDataAdapter>       További információkért lásd: <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</xref:System.Data.IDbDataAdapter.InsertCommand%2A>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Egy <xref href=&quot;System.Data.IDbCommand&quot;> </xref> során használt <xref:System.Data.Common.DbDataAdapter.Update*>beszúrandó rekordok az adatforrás az adatkészlet új soraihoz.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja az adatforrás rekordok kiválasztásához használt SQL-utasítást."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DbDataAdapter>példány típusúvá egy <xref:System.Data.IDbDataAdapter>felületet.</xref:System.Data.IDbDataAdapter> </xref:System.Data.Common.DbDataAdapter>       További információkért lásd: <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Egy <xref href=&quot;System.Data.IDbCommand&quot;> </xref> során használt <xref:System.Data.Common.DbDataAdapter.Update*>rekordok kiválasztásához a következő adatkészletben elhelyezésre az adatforrásból.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a rekordokat az adatforrás frissítésére szolgáló SQL-utasítást."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DbDataAdapter>példány típusúvá egy <xref:System.Data.IDbDataAdapter>felületet.</xref:System.Data.IDbDataAdapter> </xref:System.Data.Common.DbDataAdapter>       További információkért lásd: <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</xref:System.Data.IDbDataAdapter.UpdateCommand%2A>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Egy <xref href=&quot;System.Data.IDbCommand&quot;> </xref> során használt <xref:System.Data.Common.DbDataAdapter.Update*>az adatforrás az adatkészlet módosított soraihoz rekordok frissítésére.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: DbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Common.DbDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Új objektumot hoz létre, amely az aktuális példány másolata."
  remarks: "Ez a tag egy explicit illesztőfelületet tag megvalósítása. Használat csak akkor, ha a <xref:System.Data.Common.DbDataAdapter>példány típusúvá egy <xref:System.ICloneable>felületet.</xref:System.ICloneable> </xref:System.Data.Common.DbDataAdapter>       További információkért lásd: <xref:System.ICloneable.Clone%2A?displayProperty=fullName>.</xref:System.ICloneable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Új objektumot, amely ezt a példányt egy példányát."
  overload: System.Data.Common.DbDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.TerminateBatching
  id: TerminateBatching
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: TerminateBatching()
  nameWithType: DbDataAdapter.TerminateBatching()
  fullName: System.Data.Common.DbDataAdapter.TerminateBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "A kötegelés befejezi a <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "<xref:System.Data.Common.DbDataAdapter>Ez a módszer <xref:System.NotSupportedException>.</xref:System.NotSupportedException> jelez</xref:System.Data.Common.DbDataAdapter> Öröklő <xref:System.Data.Common.DbDataAdapter>bírálja felül ezt a metódust támogatást nyújt a kötegek.</xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected virtual void TerminateBatching ();
    parameters: []
  overload: System.Data.Common.DbDataAdapter.TerminateBatching*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Az adapter nem támogatja a kötegek."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  id: Update(System.Data.DataRow[])
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Update(DataRow[])
  nameWithType: DbDataAdapter.Update(DataRow[])
  fullName: System.Data.Common.DbDataAdapter.Update(DataRow[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Frissíti az adatbázisban levő értékek a megfelelő INSERT, UPDATE vagy DELETE utasítás végrehajtása, az egyes beszúrni, frissíteni vagy a megadott tömb a sor törlése a <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: "Ha egy alkalmazás meghívja a <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus, a <xref:System.Data.Common.DbDataAdapter>megvizsgálja a <xref:System.Data.DataRow.RowState%2A>tulajdonság, és végrehajtja a INSERT, UPDATE vagy DELETE utasítások ismételt minden egyes sorára, az indexeket, a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> konfigurált terabájtok rendelése alapján</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbDataAdapter.Update%2A> Például <xref:System.Data.Common.DbDataAdapter.Update%2A>a DELETE utasításban, ezt követően egy INSERT utasítás és majd egy másik DELETE utasítások, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorba rendezés miatt előfordulhat, hogy hajtható végre.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Fontos megjegyezni, hogy ezek az utasítások nem készül kötegelt feladatként; minden egyes sorára a külön-külön frissül. Egy alkalmazás meghívhatja a <xref:System.Data.DataSet.GetChanges%2A>metódus olyan esetekben, ahol kell utasítás típusok (például frissítések előtt beillesztése) sorrendjének szabályozásához.</xref:System.Data.DataSet.GetChanges%2A> További információkért lásd: [adatforrások frissítése DataAdapters](~/add/includes/ajax-current-ext-md.md).       Ha INSERT, UPDATE vagy DELETE utasítások nincsenek megadva, a <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus kivételt hoz létre.</xref:System.Data.Common.DbDataAdapter.Update%2A> Azonban létrehozhat egy <xref:System.Data.SqlClient.SqlCommandBuilder>vagy <xref:System.Data.OleDb.OleDbCommandBuilder>objektum egyetlen táblás frissítések SQL-utasítások automatikus generálása, ha a `SelectCommand` tulajdonsága egy .NET-keretrendszer adatszolgáltatója.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Bármely további SQL-utasítások nem beállított által előállított, majd a **CommandBuilder**. A létrehozás logika megköveteli megtalálható a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> kulcsoszlop-információt További információ: [CommandBuilders generálása utasítással](~/add/includes/ajax-current-ext-md.md).       A <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus táblából sort a frissítés végrehajtása előtt első leképezésben felsorolt.</xref:System.Data.Common.DbDataAdapter.Update%2A> A <xref:System.Data.Common.DbDataAdapter.Update%2A>majd frissíti a sor értékének használata a <xref:System.Data.IDbCommand.UpdatedRowSource%2A>tulajdonság.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> A további sorokat adja vissza a rendszer figyelmen kívül hagyja.       Az adatok betöltése újraindítása után a <xref:System.Data.DataSet>, a <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg, a felhasználók vizsgálata a egyeztetett <xref:System.Data.DataSet>sor- és a kimeneti paraméterek, a parancs által visszaadott.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Egy sor sikeresen frissíti, a módosítások a sorhoz elfogadás.       Használata esetén <xref:System.Data.Common.DbDataAdapter.Update%2A>, a végrehajtás sorrendje a következőképpen történik: 1.</xref:System.Data.Common.DbDataAdapter.Update%2A>  Az értékek a <xref:System.Data.DataRow>áthelyezik a paraméterértékek.</xref:System.Data.DataRow>      2.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  A parancs végrehajtása során.      4.  Ha a parancs értéke `FirstReturnedRecord`, az első visszaadott eredmény kerül a <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Ha a kimeneti paraméterek, a <xref:System.Data.DataRow>.</xref:System.Data.DataRow> kerülnek      6.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>nevezik.</xref:System.Data.DataRow.AcceptChanges%2A>       Minden egyes parancsnál társított <xref:System.Data.Common.DbDataAdapter>általában rendelkezik egy paraméterek gyűjtemény társítva.</xref:System.Data.Common.DbDataAdapter> Paraméterek vannak leképezve az aktuális sor keresztül a `SourceColumn` és `SourceVersion` egy .NET-keretrendszer adatszolgáltatója tulajdonságainak `Parameter` osztály. `SourceColumn`hivatkozik egy <xref:System.Data.DataTable>oszlop, amely a <xref:System.Data.Common.DbDataAdapter>értékei az aktuális sor az beszerzése hivatkozik.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.DataTable>       `SourceColumn`nem leképezett oszlop nevére hivatkozik, mielőtt tábla leképezések telepítve lettek. Ha `SourceColumn` hivatkozik egy nem létező oszlopot, a műveletet hajt végre attól függ, a következő <xref:System.Data.MissingMappingAction>értékek.</xref:System.Data.MissingMappingAction>      | Számbavételi érték |} Műveletről |}   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| A forrás oszlopneveket és a táblaneveket az használnia a <xref:System.Data.DataSet>Nincs leképezés jelen. |}   | `MissingMappingAction.Ignore`| A <xref:System.SystemException>jön létre.</xref:System.SystemException> </xref:System.Data.DataSet> Ha a leképezések vannak explicit módon beállítva, egy hiányzó leképezése egy bemeneti paraméter értéke általában hiba eredménye. |}   | `MissingMappingAction.Error`| Egy <xref:System.SystemException>jön létre. |}       A `SourceColumn` tulajdonság is szolgál a kimeneti értéket hozzárendelni, vagy a bemeneti paraméterek vissza a `DataSet`.</xref:System.SystemException> Kivételt generál, ha egy nem létező oszlopra hivatkozik.       A `SourceVersion` tulajdonság a .NET-keretrendszer adatszolgáltatója a `Parameter` osztály határozza meg, hogy az oszlop értékét az eredeti, Current vagy Proposed verzióját használja. Ez a funkció gyakran használják az eredeti értékek szerepeljenek a hozzáférések optimista megsértésének kereséséhez UPDATE utasítás WHERE záradékban.      > [!NOTE] > Hiba bekövetkezne, amikor a sor frissítése, ha kivétel történik, és a frissítés végrehajtása megszakad. A frissítési művelet folytatásához kivételek létrehozása, ha hiba esetén nélkül, állítsa be a <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>tulajdonságot `true` előtt hívja az <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Hibák belül soron kívüli alapon is előfordulhat, hogy válaszolni a `RowUpdated` az a DataAdapter eseménye. A frissítési művelet kivételt belül létrehozása nélkül folytatja a `RowUpdated` esemény, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>a <xref:System.Data.Common.RowUpdatedEventArgs> <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> tulajdonságának</xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> beállítása"
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.  \n  \n [!code-cs[Classic WebData DbDataAdapter.Update1 Example#1](~/add/codesnippet/csharp/m-system.data.common.dbd_0_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dbd_0_1.vb)]"
  syntax:
    content: public int Update (System.Data.DataRow[] dataRows);
    parameters:
    - id: dataRows
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> az adatforrás frissítésére szolgáló objektumok."
    return:
      type: System.Int32
      description: "A sikeresen frissített sorok száma a <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.Update*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Nem <xref href=&quot;System.Data.DataRow&quot;> </xref> létezik-e frissíteni.       – vagy – nem <xref href=&quot;System.Data.DataTable&quot;> </xref> létezik-e frissíteni.       – vagy – nem <xref href=&quot;System.Data.DataSet&quot;> </xref> forrásként használandó létezik."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Az INSERT, UPDATE vagy DELETE utasítás végrehajtásához kísérlet nulla érintett rekordok eredményezett."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  id: Update(System.Data.DataSet)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Update(DataSet)
  nameWithType: DbDataAdapter.Update(DataSet)
  fullName: System.Data.Common.DbDataAdapter.Update(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Frissíti az adatbázisban levő értékek a megfelelő INSERT, UPDATE vagy DELETE utasítás végrehajtása, az egyes beszúrni, frissíteni vagy törölni a megadott sor <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: "Amikor egy alkalmazás az Update metódus meghívja a <xref:System.Data.Common.DbDataAdapter>megvizsgálja a <xref:System.Data.DataRow.RowState%2A>tulajdonság, és végrehajtja a INSERT, UPDATE vagy DELETE utasítások ismételt minden egyes sorára, az indexeket, a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> konfigurált terabájtok rendelése alapján</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DbDataAdapter> Például hajtható végre Update előfordulhat, hogy a DELETE utasításban, követi egy INSERT utasítás, majd egy másik DELETE utasítások, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorba rendezés miatt       Fontos megjegyezni, hogy ezek az utasítások nem készül kötegelt feladatként; minden egyes sorára a külön-külön frissül. Egy alkalmazás meghívhatja a <xref:System.Data.DataSet.GetChanges%2A>metódus olyan esetekben, ahol kell utasítás típusok (például frissítések előtt beillesztése) sorrendjének szabályozásához.</xref:System.Data.DataSet.GetChanges%2A> További információkért lásd: [adatforrások frissítése DataAdapters](~/add/includes/ajax-current-ext-md.md).       Ha INSERT, UPDATE vagy DELETE utasítások nincsenek megadva, az Update metódus kivételt hoz létre. Azonban létrehozhat egy <xref:System.Data.SqlClient.SqlCommandBuilder>vagy <xref:System.Data.OleDb.OleDbCommandBuilder>objektum egyetlen táblás frissítések SQL-utasítások automatikus generálása, ha a `SelectCommand` tulajdonsága egy .NET-keretrendszer adatszolgáltatója.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Bármely további SQL-utasítások nem beállított által előállított, majd a **CommandBuilder**. A létrehozás logika megköveteli megtalálható a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> kulcsoszlop-információt További információ: [CommandBuilders generálása utasítással](~/add/includes/ajax-current-ext-md.md).       Az Update metódus táblából sort a frissítés végrehajtása előtt az első leképezés szerepel. A frissítés ekkor a sor értékének használatával frissíti a <xref:System.Data.IDbCommand.UpdatedRowSource%2A>tulajdonság.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> A további sorokat adja vissza a rendszer figyelmen kívül hagyja.       Az adatok betöltése újraindítása után a <xref:System.Data.DataSet>, a <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg, a felhasználók vizsgálata a egyeztetett <xref:System.Data.DataSet>sor- és a kimeneti paraméterek, a parancs által visszaadott.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Egy sor sikeresen frissíti, a módosítások a sorhoz elfogadás.       Frissítés használata esetén a végrehajtás sorrendje a következőképpen történik: 1.  Az értékek a <xref:System.Data.DataRow>áthelyezik a paraméterértékek.</xref:System.Data.DataRow>      2.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  A parancs végrehajtása során.      4.  Ha a parancs értéke `FirstReturnedRecord`, akkor az első visszaadott eredmény kerül a <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Ha a kimeneti paraméterek, a <xref:System.Data.DataRow>.</xref:System.Data.DataRow> kerülnek      6.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>nevezik.</xref:System.Data.DataRow.AcceptChanges%2A>       Minden egyes parancsnál társított <xref:System.Data.Common.DbDataAdapter>általában rendelkezik egy paraméterek gyűjtemény társítva.</xref:System.Data.Common.DbDataAdapter> Paraméterek vannak leképezve az aktuális sor keresztül a `SourceColumn` és `SourceVersion` egy .NET-keretrendszer adatszolgáltatója tulajdonságainak `Parameter` osztály. `SourceColumn`hivatkozik egy <xref:System.Data.DataTable>oszlop, amely a <xref:System.Data.Common.DbDataAdapter>értékei az aktuális sor az beszerzése hivatkozik.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.DataTable>       `SourceColumn`nem leképezett oszlop nevére hivatkozik, mielőtt tábla leképezések telepítve lettek. Ha `SourceColumn` hivatkozik egy nem létező oszlopot, a műveletet hajt végre attól függ, a következő <xref:System.Data.MissingMappingAction>értékek.</xref:System.Data.MissingMappingAction>      | Számbavételi érték |} Műveletről |}   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| A forrás oszlopneveket és a táblaneveket az használnia a <xref:System.Data.DataSet>Nincs leképezés jelen. |}   | `MissingMappingAction.Ignore`| A <xref:System.SystemException>jön létre.</xref:System.SystemException> </xref:System.Data.DataSet> Ha a leképezések vannak explicit módon beállítva, egy hiányzó leképezése egy bemeneti paraméter értéke általában hiba eredménye. |}   | `MissingMappingAction.Error`| Egy <xref:System.SystemException>jön létre. |}       A `SourceColumn` tulajdonság is szolgál a kimeneti értéket hozzárendelni, vagy a bemeneti paraméterek vissza a `DataSet`.</xref:System.SystemException> Kivételt generál, ha egy nem létező oszlopra hivatkozik.       A `SourceVersion` tulajdonság a .NET-keretrendszer adatszolgáltatója a `Parameter` osztály határozza meg, hogy az oszlop értékét az eredeti, Current vagy Proposed verzióját használja. Ez a funkció gyakran használják az eredeti értékek szerepeljenek a hozzáférések optimista megsértésének kereséséhez UPDATE utasítás WHERE záradékban.      > [!NOTE] > Hiba bekövetkezne, amikor a sor frissítése, ha kivétel történik, és a frissítés végrehajtása megszakad. A frissítési művelet folytatásához kivételek létrehozása, ha hiba esetén nélkül, állítsa be a <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>tulajdonságot `true` előtt hívja az Update.</xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Hibák belül soron kívüli alapon is előfordulhat, hogy válaszolni a `RowUpdated` az a DataAdapter eseménye. A frissítési művelet kivételt belül létrehozása nélkül folytatja a `RowUpdated` esemény, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>a <xref:System.Data.Common.RowUpdatedEventArgs> <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> tulajdonságának</xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> beállítása"
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.  \n  \n [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dbd_4_1.vb)]\n [!code-cs[Classic WebData DbDataAdapter.Update Example#1](~/add/codesnippet/csharp/m-system.data.common.dbd_4_1.cs)]"
  syntax:
    content: public override int Update (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> az adatforrás frissítésére szolgáló."
    return:
      type: System.Int32
      description: "A sikeresen frissített sorok száma a <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Az INSERT, UPDATE vagy DELETE utasítás végrehajtásához kísérlet nulla érintett rekordok eredményezett."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  id: Update(System.Data.DataTable)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Update(DataTable)
  nameWithType: DbDataAdapter.Update(DataTable)
  fullName: System.Data.Common.DbDataAdapter.Update(DataTable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Frissíti az adatbázisban levő értékek a megfelelő INSERT, UPDATE vagy DELETE utasítás végrehajtása, az egyes beszúrni, frissíteni vagy törölni a megadott sor <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "Ha egy alkalmazás meghívja a <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus, a <xref:System.Data.Common.DbDataAdapter>megvizsgálja a <xref:System.Data.DataRow.RowState%2A>tulajdonság, és végrehajtja a INSERT, UPDATE vagy DELETE utasítások ismételt minden egyes sorára, az indexeket, a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> konfigurált terabájtok rendelése alapján</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbDataAdapter.Update%2A> Például <xref:System.Data.Common.DbDataAdapter.Update%2A>a DELETE utasításban, ezt követően egy INSERT utasítás és majd egy másik DELETE utasítások, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorba rendezés miatt előfordulhat, hogy hajtható végre.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Fontos megjegyezni, hogy ezek az utasítások nem készül kötegelt feladatként; minden egyes sorára a külön-külön frissül. Egy alkalmazás meghívhatja a <xref:System.Data.DataSet.GetChanges%2A>metódus olyan esetekben, ahol kell utasítás típusok (például frissítések előtt beillesztése) sorrendjének szabályozásához.</xref:System.Data.DataSet.GetChanges%2A> További információkért lásd: [adatforrások frissítése DataAdapters](~/add/includes/ajax-current-ext-md.md).       Ha INSERT, UPDATE vagy DELETE utasítások nincsenek megadva, a <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus kivételt hoz létre.</xref:System.Data.Common.DbDataAdapter.Update%2A> Azonban létrehozhat egy <xref:System.Data.SqlClient.SqlCommandBuilder>vagy <xref:System.Data.OleDb.OleDbCommandBuilder>objektum egyetlen táblás frissítések SQL-utasítások automatikus generálása, ha a `SelectCommand` tulajdonsága egy .NET-keretrendszer adatszolgáltatója.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Bármely további SQL-utasítások nem beállított által előállított, majd a **CommandBuilder**. A létrehozás logika megköveteli megtalálható a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> kulcsoszlop-információt További információ: [CommandBuilders generálása utasítással](~/add/includes/ajax-current-ext-md.md).       A <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus táblából sort a frissítés végrehajtása előtt első leképezésben felsorolt.</xref:System.Data.Common.DbDataAdapter.Update%2A> A <xref:System.Data.Common.DbDataAdapter.Update%2A>majd frissíti a sor értékének használata a <xref:System.Data.IDbCommand.UpdatedRowSource%2A>tulajdonság.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> A további sorokat adja vissza a rendszer figyelmen kívül hagyja.       Az adatok betöltése újraindítása után a <xref:System.Data.DataSet>, a <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg, a felhasználók vizsgálata a egyeztetett <xref:System.Data.DataSet>sor- és a kimeneti paraméterek, a parancs által visszaadott.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Egy sor sikeresen frissíti, a módosítások a sorhoz elfogadás.       Használata esetén <xref:System.Data.Common.DbDataAdapter.Update%2A>, a végrehajtás sorrendje a következőképpen történik: 1.</xref:System.Data.Common.DbDataAdapter.Update%2A>  Az értékek a <xref:System.Data.DataRow>áthelyezik a paraméterértékek.</xref:System.Data.DataRow>      2.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  A parancs végrehajtása során.      4.  Ha a parancs értéke `FirstReturnedRecord`, akkor az első visszaadott eredmény kerül a <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Ha a kimeneti paraméterek, a <xref:System.Data.DataRow>.</xref:System.Data.DataRow> kerülnek      6.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>nevezik.</xref:System.Data.DataRow.AcceptChanges%2A>       Minden egyes parancsnál társított <xref:System.Data.Common.DbDataAdapter>általában rendelkezik egy paraméterek gyűjtemény társítva.</xref:System.Data.Common.DbDataAdapter> Paraméterek vannak leképezve az aktuális sor keresztül a `SourceColumn` és `SourceVersion` egy .NET-keretrendszer adatszolgáltatója tulajdonságainak `Parameter` osztály. `SourceColumn`hivatkozik egy <xref:System.Data.DataTable>oszlop, amely a <xref:System.Data.Common.DbDataAdapter>értékei az aktuális sor az beszerzése hivatkozik.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.DataTable>       `SourceColumn`nem leképezett oszlop nevére hivatkozik, mielőtt tábla leképezések telepítve lettek. Ha `SourceColumn` hivatkozik egy nem létező oszlopot, a műveletet hajt végre attól függ, a következő <xref:System.Data.MissingMappingAction>értékek.</xref:System.Data.MissingMappingAction>      | Számbavételi érték |} Műveletről |}   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| A forrás oszlopneveket és a táblaneveket az használnia a <xref:System.Data.DataSet>Nincs leképezés jelen. |}   | `MissingMappingAction.Ignore`| A <xref:System.SystemException>jön létre.</xref:System.SystemException> </xref:System.Data.DataSet> Ha a leképezések vannak explicit módon beállítva, egy hiányzó leképezése egy bemeneti paraméter értéke általában hiba eredménye. |}   | `MissingMappingAction.Error`| Egy <xref:System.SystemException>jön létre. |}       A `SourceColumn` tulajdonság is szolgál a kimeneti értéket hozzárendelni, vagy a bemeneti paraméterek vissza a `DataSet`.</xref:System.SystemException> Kivételt generál, ha egy nem létező oszlopra hivatkozik.       A `SourceVersion` tulajdonság a .NET-keretrendszer adatszolgáltatója a `Parameter` osztály határozza meg, hogy az oszlop értékét az eredeti, Current vagy Proposed verzióját használja. Ez a funkció gyakran használják az eredeti értékek szerepeljenek a hozzáférések optimista megsértésének kereséséhez UPDATE utasítás WHERE záradékban.      > [!NOTE] > Hiba bekövetkezne, amikor a sor frissítése, ha kivétel történik, és a frissítés végrehajtása megszakad. A frissítési művelet folytatásához kivételek létrehozása, ha hiba esetén nélkül, állítsa be a <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>tulajdonságot `true` előtt hívja az <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Hibák belül soron kívüli alapon is előfordulhat, hogy válaszolni a `RowUpdated` az a DataAdapter eseménye. A frissítési művelet kivételt belül létrehozása nélkül folytatja a `RowUpdated` esemény, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>a <xref:System.Data.Common.RowUpdatedEventArgs> <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> tulajdonságának</xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> beállítása"
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.  \n  \n [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dbd_1_1.vb)]\n [!code-cs[Classic WebData DbDataAdapter.Update2 Example#1](~/add/codesnippet/csharp/m-system.data.common.dbd_1_1.cs)]"
  syntax:
    content: public int Update (System.Data.DataTable dataTable);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref> az adatforrás frissítésére szolgáló."
    return:
      type: System.Int32
      description: "A sikeresen frissített sorok száma a <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.Update*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Nem <xref href=&quot;System.Data.DataRow&quot;> </xref> létezik-e frissíteni.       – vagy – nem <xref href=&quot;System.Data.DataTable&quot;> </xref> létezik-e frissíteni.       – vagy – nem <xref href=&quot;System.Data.DataSet&quot;> </xref> forrásként használandó létezik."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Az INSERT, UPDATE vagy DELETE utasítás végrehajtásához kísérlet nulla érintett rekordok eredményezett."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  id: Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Update(DataRow[],DataTableMapping)
  nameWithType: DbDataAdapter.Update(DataRow[],DataTableMapping)
  fullName: System.Data.Common.DbDataAdapter.Update(DataRow[],DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Frissíti az adatbázisban levő értékek a megfelelő INSERT, UPDATE vagy DELETE utasítás végrehajtása, az egyes beszúrni, frissíteni vagy törölni a megadott tömb sorában <xref href=&quot;System.Data.DataSet&quot;> </xref> objektumok."
  remarks: "Ha egy alkalmazás meghívja a <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus, a <xref:System.Data.Common.DbDataAdapter>megvizsgálja a <xref:System.Data.DataRow.RowState%2A>tulajdonság, és végrehajtja a INSERT, UPDATE vagy DELETE utasítások ismételt minden egyes sorára, az indexeket, a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> konfigurált terabájtok rendelése alapján</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbDataAdapter.Update%2A> Például <xref:System.Data.Common.DbDataAdapter.Update%2A>a DELETE utasításban, ezt követően egy INSERT utasítás és majd egy másik DELETE utasítások, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorba rendezés miatt előfordulhat, hogy hajtható végre.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Fontos megjegyezni, hogy ezek az utasítások nem készül kötegelt feladatként; minden egyes sorára a külön-külön frissül. Egy alkalmazás meghívhatja a <xref:System.Data.DataSet.GetChanges%2A>metódus olyan esetekben, ahol kell utasítás típusok (például frissítések előtt beillesztése) sorrendjének szabályozásához.</xref:System.Data.DataSet.GetChanges%2A> További információkért lásd: [adatforrások frissítése DataAdapters](~/add/includes/ajax-current-ext-md.md).       Ha INSERT, UPDATE vagy DELETE utasítások nincsenek megadva, a <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus kivételt hoz létre.</xref:System.Data.Common.DbDataAdapter.Update%2A> Azonban létrehozhat egy <xref:System.Data.SqlClient.SqlCommandBuilder>vagy <xref:System.Data.OleDb.OleDbCommandBuilder>objektum egyetlen táblás frissítések SQL-utasítások automatikus generálása, ha a `SelectCommand` tulajdonsága egy .NET-keretrendszer adatszolgáltatója.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Bármely további SQL-utasítások nem beállított által előállított, majd a **CommandBuilder**. A létrehozás logika megköveteli megtalálható a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> kulcsoszlop-információt További információ: [CommandBuilders generálása utasítással](~/add/includes/ajax-current-ext-md.md).       A <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus táblából sort a frissítés végrehajtása előtt első leképezésben felsorolt.</xref:System.Data.Common.DbDataAdapter.Update%2A> A <xref:System.Data.Common.DbDataAdapter.Update%2A>majd frissíti a sor értékének használata a <xref:System.Data.IDbCommand.UpdatedRowSource%2A>tulajdonság.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> A további sorokat adja vissza a rendszer figyelmen kívül hagyja.       Az adatok betöltése újraindítása után a <xref:System.Data.DataSet>, a <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg, a felhasználók vizsgálata a egyeztetett <xref:System.Data.DataSet>sor- és a kimeneti paraméterek, a parancs által visszaadott.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Egy sor sikeresen frissíti, a módosítások a sorhoz elfogadás.       Használata esetén <xref:System.Data.Common.DbDataAdapter.Update%2A>, a végrehajtás sorrendje a következőképpen történik: 1.</xref:System.Data.Common.DbDataAdapter.Update%2A>  Az értékek a <xref:System.Data.DataRow>áthelyezik a paraméterértékek.</xref:System.Data.DataRow>      2.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  A parancs végrehajtása során.      4.  Ha a parancs értéke `FirstReturnedRecord`, akkor az első visszaadott eredmény kerül a <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Ha a kimeneti paraméterek, a <xref:System.Data.DataRow>.</xref:System.Data.DataRow> kerülnek      6.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>nevezik.</xref:System.Data.DataRow.AcceptChanges%2A>       Minden egyes parancsnál társított <xref:System.Data.Common.DbDataAdapter>általában rendelkezik egy paraméterek gyűjtemény társítva.</xref:System.Data.Common.DbDataAdapter> Paraméterek vannak leképezve az aktuális sor keresztül a `SourceColumn` és `SourceVersion` egy .NET-keretrendszer adatszolgáltatója tulajdonságainak `Parameter` osztály. `SourceColumn`hivatkozik egy <xref:System.Data.DataTable>oszlop, amely a <xref:System.Data.Common.DbDataAdapter>értékei az aktuális sor az beszerzése hivatkozik.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.DataTable>       `SourceColumn`nem leképezett oszlop nevére hivatkozik, mielőtt tábla leképezések telepítve lettek. Ha `SourceColumn` hivatkozik egy nem létező oszlopot, a műveletet hajt végre attól függ, a következő <xref:System.Data.MissingMappingAction>értékek.</xref:System.Data.MissingMappingAction>      | Számbavételi érték |} Műveletről |}   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| A forrás oszlopneveket és a táblaneveket az használnia a <xref:System.Data.DataSet>Nincs leképezés jelen. |}   | `MissingMappingAction.Ignore`| A <xref:System.SystemException>jön létre.</xref:System.SystemException> </xref:System.Data.DataSet> Ha a leképezések vannak explicit módon beállítva, egy hiányzó leképezése egy bemeneti paraméter értéke általában hiba eredménye. |}   | `MissingMappingAction.Error`| Egy <xref:System.SystemException>jön létre. |}       A `SourceColumn` tulajdonság is szolgál a kimeneti értéket hozzárendelni, vagy a bemeneti paraméterek vissza a `DataSet`.</xref:System.SystemException> Kivételt generál, ha egy nem létező oszlopra hivatkozik.       A `SourceVersion` tulajdonság a .NET-keretrendszer adatszolgáltatója a `Parameter` osztály határozza meg, hogy az oszlop értékét az eredeti, Current vagy Proposed verzióját használja. Ez a funkció gyakran használják az eredeti értékek szerepeljenek a hozzáférések optimista megsértésének kereséséhez UPDATE utasítás WHERE záradékban.      > [!NOTE] > Hiba bekövetkezne, amikor a sor frissítése, ha kivétel történik, és a frissítés végrehajtása megszakad. A frissítési művelet folytatásához kivételek létrehozása, ha hiba esetén nélkül, állítsa be a <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>tulajdonságot `true` előtt hívja az <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Hibák belül soron kívüli alapon is előfordulhat, hogy válaszolni a `RowUpdated` az a DataAdapter eseménye. A frissítési művelet kivételt belül létrehozása nélkül folytatja a `RowUpdated` esemény, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>a <xref:System.Data.Common.RowUpdatedEventArgs> <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> tulajdonságának</xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> beállítása"
  syntax:
    content: protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRows
      type: System.Data.DataRow[]
      description: "A tömb <xref href=&quot;System.Data.DataRow&quot;> </xref> az adatforrás frissítésére szolgáló objektumok."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "A <xref:System.Data.IDataAdapter.TableMappings*>használandó gyűjteményt.</xref:System.Data.IDataAdapter.TableMappings*>"
    return:
      type: System.Int32
      description: "A sikeresen frissített sorok száma a <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.Update*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Nem <xref href=&quot;System.Data.DataRow&quot;> </xref> létezik-e frissíteni.       – vagy – nem <xref href=&quot;System.Data.DataTable&quot;> </xref> létezik-e frissíteni.       – vagy – nem <xref href=&quot;System.Data.DataSet&quot;> </xref> forrásként használandó létezik."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Az INSERT, UPDATE vagy DELETE utasítás végrehajtásához kísérlet nulla érintett rekordok eredményezett."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  id: Update(System.Data.DataSet,System.String)
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: Update(DataSet,String)
  nameWithType: DbDataAdapter.Update(DataSet,String)
  fullName: System.Data.Common.DbDataAdapter.Update(DataSet,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Frissíti az adatbázisban levő értékek a megfelelő INSERT, UPDATE vagy DELETE utasítás végrehajtása, az egyes beszúrni, frissíteni vagy törölt sor a <xref href=&quot;System.Data.DataSet&quot;> </xref> és a megadott <xref href=&quot;System.Data.DataTable&quot;> </xref> nevét."
  remarks: "Ha egy alkalmazás meghívja a <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus, a <xref:System.Data.Common.DbDataAdapter>megvizsgálja a <xref:System.Data.DataRow.RowState%2A>tulajdonság, és végrehajtja a INSERT, UPDATE vagy DELETE utasítások ismételt minden egyes sorára, az indexeket, a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> konfigurált terabájtok rendelése alapján</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbDataAdapter.Update%2A> Például <xref:System.Data.Common.DbDataAdapter.Update%2A>a DELETE utasításban, ezt követően egy INSERT utasítás és majd egy másik DELETE utasítások, a <xref:System.Data.DataTable>.</xref:System.Data.DataTable> sorba rendezés miatt előfordulhat, hogy hajtható végre.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Fontos megjegyezni, hogy ezek az utasítások nem készül kötegelt feladatként; minden egyes sorára a külön-külön frissül. Egy alkalmazás meghívhatja a <xref:System.Data.DataSet.GetChanges%2A>metódus olyan esetekben, ahol kell utasítás típusok sorrendjének szabályozásához (például beszúrás frissítés előtt).</xref:System.Data.DataSet.GetChanges%2A> További információkért lásd: [adatforrások frissítése DataAdapters](~/add/includes/ajax-current-ext-md.md).       Ha INSERT, UPDATE vagy DELETE utasítások nincsenek megadva, a <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus kivételt hoz létre.</xref:System.Data.Common.DbDataAdapter.Update%2A> Azonban létrehozhat egy <xref:System.Data.SqlClient.SqlCommandBuilder>vagy <xref:System.Data.OleDb.OleDbCommandBuilder>objektum egyetlen táblás frissítések SQL-utasítások automatikus generálása, ha a `SelectCommand` tulajdonsága egy .NET-keretrendszer adatszolgáltatója.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Bármely további SQL-utasítások nem beállított által előállított, majd a **CommandBuilder**. A létrehozás logika megköveteli megtalálható a <xref:System.Data.DataSet>.</xref:System.Data.DataSet> kulcsoszlop-információt További információ: [CommandBuilders generálása utasítással](~/add/includes/ajax-current-ext-md.md).       A <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus szituációkat ahol a <xref:System.Data.DataSet>több tartalmaz <xref:System.Data.DataTable>objektumok mappanevek csak térnek el egymástól eset.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Ha létezik azonos nevű, de más esetben több táblázat egy `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A>hajt végre a megfelelő táblában található kis-és nagybetűket összehasonlítása, és kivételt generál, ha van nem pontos egyezés.</xref:System.Data.Common.DbDataAdapter.Update%2A> A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet ds = new DataSet();    ds.Tables.Add(&quot;aaa&quot;);    ds.Tables.Add(&quot;AAA&quot;);    adapter.Update(ds, &quot;aaa&quot;); // Updates &quot;aaa&quot;, which already exists in the DataSet.    adapter.Update(ds, &quot;AAA&quot;); // Updates &quot;AAA&quot;, which already exists in the DataSet.       adapter.Update(ds, &quot;Aaa&quot;); // Results in an exception.   ```Ha <xref:System.Data.Common.DbDataAdapter.Update%2A>nevezik, és a <xref:System.Data.DataSet>csak egy <xref:System.Data.DataTable>névvel csak esetben eltér, amely <xref:System.Data.DataTable>frissül.</xref:System.Data.DataTable> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Ebben a forgatókönyvben eredményű összehasonlítás esetén-és nagybetűket. A következő C#-kódban szemlélteti ezt a viselkedést.      ```   DataSet dataset = new DataSet();    dataset.Tables.Add(&quot;aaa&quot;);       adapter.Update(dataset, &quot;AAA&quot;); // Updates table &quot;aaa&quot; because only one similarly named table is in the DataSet.   ```A <xref:System.Data.Common.DbDataAdapter.Update%2A>metódus táblából sort a frissítés végrehajtása előtt első leképezésben felsorolt.</xref:System.Data.Common.DbDataAdapter.Update%2A> A <xref:System.Data.Common.DbDataAdapter.Update%2A>majd frissíti a sor értékének használata a <xref:System.Data.IDbCommand.UpdatedRowSource%2A>tulajdonság.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> A további sorokat adja vissza a rendszer figyelmen kívül hagyja.       Az adatok betöltése újraindítása után a <xref:System.Data.DataSet>, a <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg, a felhasználók vizsgálata a egyeztetett <xref:System.Data.DataSet>sor- és a kimeneti paraméterek, a parancs által visszaadott.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Egy sor sikeresen frissíti, a módosítások a sorhoz elfogadás.       Használata esetén <xref:System.Data.Common.DbDataAdapter.Update%2A>, a végrehajtás sorrendje a következőképpen történik: 1.</xref:System.Data.Common.DbDataAdapter.Update%2A>  Az értékek a <xref:System.Data.DataRow>áthelyezik a paraméterértékek.</xref:System.Data.DataRow>      2.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  A parancs végrehajtása során.      4.  Ha a parancs értéke `FirstReturnedRecord`, akkor az első visszaadott eredmény kerül a <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Ha a kimeneti paraméterek, a <xref:System.Data.DataRow>.</xref:System.Data.DataRow> kerülnek      6.  A <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>egy esemény jelenik meg.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>nevezik.</xref:System.Data.DataRow.AcceptChanges%2A>       Minden egyes parancsnál társított <xref:System.Data.Common.DbDataAdapter>általában rendelkezik egy paraméterek gyűjtemény társítva.</xref:System.Data.Common.DbDataAdapter> Paraméterek vannak leképezve az aktuális sor keresztül a `SourceColumn` és `SourceVersion` egy .NET-keretrendszer adatszolgáltatója tulajdonságainak `Parameter` osztály. `SourceColumn`hivatkozik egy <xref:System.Data.DataTable>oszlop, amely a <xref:System.Data.Common.DbDataAdapter>értékei az aktuális sor az beszerzése hivatkozik.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.DataTable>       `SourceColumn`nem leképezett oszlop nevére hivatkozik, mielőtt tábla leképezések telepítve lettek. Ha `SourceColumn` hivatkozik egy nem létező oszlopot, a műveletet hajt végre attól függ, a következő <xref:System.Data.MissingMappingAction>értékek.</xref:System.Data.MissingMappingAction>      | Számbavételi érték |} Műveletről |}   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| A forrás oszlopneveket és a táblaneveket az használnia a <xref:System.Data.DataSet>Nincs leképezés jelen. |}   | `MissingMappingAction.Ignore`| A <xref:System.SystemException>jön létre.</xref:System.SystemException> </xref:System.Data.DataSet> Ha a leképezések vannak explicit módon beállítva, egy hiányzó leképezése egy bemeneti paraméter értéke általában hiba eredménye. |}   | `MissingMappingAction.Error`| Egy <xref:System.SystemException>jön létre. |}       A `SourceColumn` tulajdonság is szolgál a kimeneti értéket hozzárendelni, vagy a bemeneti paraméterek vissza a `DataSet`.</xref:System.SystemException> Kivételt generál, ha egy nem létező oszlopra hivatkozik.       A `SourceVersion` tulajdonság a .NET-keretrendszer adatszolgáltatója a `Parameter` osztály határozza meg, hogy az oszlop értékét az eredeti, Current vagy Proposed verzióját használja. Ez a funkció gyakran használják az eredeti értékek szerepeljenek a hozzáférések optimista megsértésének kereséséhez UPDATE utasítás WHERE záradékban.      > [!NOTE] > Hiba bekövetkezne, amikor a sor frissítése, ha kivétel történik, és a frissítés végrehajtása megszakad. A frissítési művelet folytatásához kivételek létrehozása, ha hiba esetén nélkül, állítsa be a <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>tulajdonságot `true` előtt hívja az <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Hibák belül soron kívüli alapon is előfordulhat, hogy válaszolni a `RowUpdated` az a DataAdapter eseménye. A frissítési művelet kivételt belül létrehozása nélkül folytatja a `RowUpdated` esemény, <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>a <xref:System.Data.Common.RowUpdatedEventArgs> <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> tulajdonságának</xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> beállítása"
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.  \n  \n [!code-cs[Classic WebData DbDataAdapter.Update3#1](~/add/codesnippet/csharp/m-system.data.common.dbd_2_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/add/codesnippet/visualbasic/m-system.data.common.dbd_2_1.vb)]"
  syntax:
    content: public int Update (System.Data.DataSet dataSet, string srcTable);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> használni az adatforrás frissítése."
    - id: srcTable
      type: System.String
      description: "A tábla hozzárendelésének használandó forrástábla neve."
    return:
      type: System.Int32
      description: "A sikeresen frissített sorok száma a <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DbDataAdapter.Update*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <xref href=&quot;System.Data.DataSet&quot;> </xref> érvénytelen."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A következő forrástábla nem érvényes."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Az INSERT, UPDATE vagy DELETE utasítás végrehajtásához kísérlet nulla érintett rekordok eredményezett."
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.UpdateBatchSize
  id: UpdateBatchSize
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: UpdateBatchSize
  nameWithType: DbDataAdapter.UpdateBatchSize
  fullName: System.Data.Common.DbDataAdapter.UpdateBatchSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállít egy értéket, amely engedélyezi vagy letiltja a kötegelt feldolgozáson támogatási, és adja meg egy kötegben végrehajtható parancsok száma."
  remarks: "A UpdateBatchSize tulajdonsággal <xref:System.Data.DataSet>.</xref:System.Data.DataSet> származó módosításokkal egy adatforrás frissítése Ha a szolgáltató támogatja a kötegelt feldolgozáson, ez alkalmazás teljesítménye is fokozható csökkenti az üzenetváltások számát a kiszolgálón. Az ADO.NET 2.0, ez a tulajdonság támogatott a .NET-adatszolgáltató a SQL Server (SqlClient) és Oracle (OracleClient).       Egy rendkívül nagy kötegelt végrehajtása sikerült csökkentheti a teljesítményt. Ezért tesztelje a optimális köteg mérete beállítás előtt az alkalmazást.       Egy <xref:System.ArgumentOutOfRangeException>fog jelezni, ha a szám értéke kisebb, mint nulla.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public virtual int UpdateBatchSize { get; set; }
    return:
      type: System.Int32
      description: "Kötegenként feldolgozható sorok száma.       <table><thead><tr><th> Érték:       </th><th> Hatása       </th></tr></thead><tbody><tr><td> 0       </td><td> A Köteg mérete nincs korlátozva van.       </td></tr><tr><td> 1       </td><td> Letiltja a kötegelt frissítése.       </td></tr><tr><td> &gt; 1       </td><td> Módosítások küldése UpdateBatchSize műveletek kötegek egyszerre.       </td></tr></tbody></table>       Ezt a beállítást 1-től eltérő értéket, ha a parancsok társított a <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref> kell rendelkeznie a <> </> *> tulajdonsága * *nincs* * vagy * *OutputParameters**. Ellenkező esetben a kivételt fog jelezni."
  overload: System.Data.Common.DbDataAdapter.UpdateBatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.Common.DbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: DbDataAdapter.UpdateCommand
  fullName: System.Data.Common.DbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Lekérdezi vagy beállítja a rekordokat az adatforrás frissítésére szolgáló parancsot."
  remarks: "Során <xref:System.Data.Common.DbDataAdapter.Update%2A>, ha ez a tulajdonság nincs beállítva, és az elsődleges kulcs adataira is szerepel a <xref:System.Data.DataSet>, a <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>automatikusan generált.</xref:System.Data.IDbDataAdapter.UpdateCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A>"
  example:
  - "The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.common.dbd_2_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dbd_2_1.vb)]"
  syntax:
    content: public System.Data.Common.DbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.Common.DbCommand
      description: "A <xref href=&quot;System.Data.IDbCommand&quot;> </xref> során használt <xref:System.Data.IDataAdapter.Update*>az adatforrás az adatkészlet módosított soraihoz rekordok frissítésére.</xref:System.Data.IDataAdapter.Update*>"
  overload: System.Data.Common.DbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.Common.DataAdapter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.DBConcurrencyException
  parent: System.Data
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
- uid: System.Data.Common.DbDataAdapter.#ctor
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: DbDataAdapter()
  nameWithType: DbDataAdapter.DbDataAdapter()
  fullName: System.Data.Common.DbDataAdapter.DbDataAdapter()
- uid: System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: DbDataAdapter(DbDataAdapter)
  nameWithType: DbDataAdapter.DbDataAdapter(DbDataAdapter)
  fullName: System.Data.Common.DbDataAdapter.DbDataAdapter(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: AddToBatch(IDbCommand)
  nameWithType: DbDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.Common.DbDataAdapter.AddToBatch(IDbCommand)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.Common.DbDataAdapter.ClearBatch
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: ClearBatch()
  nameWithType: DbDataAdapter.ClearBatch()
  fullName: System.Data.Common.DbDataAdapter.ClearBatch()
- uid: System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: DbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: DbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Common.DbDataAdapter.DefaultSourceTableName
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: DefaultSourceTableName
  nameWithType: DbDataAdapter.DefaultSourceTableName
  fullName: System.Data.Common.DbDataAdapter.DefaultSourceTableName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbDataAdapter.DeleteCommand
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: DbDataAdapter.DeleteCommand
  fullName: System.Data.Common.DbDataAdapter.DeleteCommand
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbDataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DbDataAdapter.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbDataAdapter.ExecuteBatch
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: ExecuteBatch()
  nameWithType: DbDataAdapter.ExecuteBatch()
  fullName: System.Data.Common.DbDataAdapter.ExecuteBatch()
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill(DataSet)
  nameWithType: DbDataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataSet)
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill(DataTable)
  nameWithType: DbDataAdapter.Fill(DataTable)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataTable)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill(DataSet,String)
  nameWithType: DbDataAdapter.Fill(DataSet,String)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataSet,String)
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill(DataTable,IDbCommand,CommandBehavior)
  nameWithType: DbDataAdapter.Fill(DataTable,IDbCommand,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataTable,IDbCommand,CommandBehavior)
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill(Int32,Int32,DataTable[])
  nameWithType: DbDataAdapter.Fill(Int32,Int32,DataTable[])
  fullName: System.Data.Common.DbDataAdapter.Fill(Int32,Int32,DataTable[])
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill(DataSet,Int32,Int32,String)
  nameWithType: DbDataAdapter.Fill(DataSet,Int32,Int32,String)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataSet,Int32,Int32,String)
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill(DataTable[],Int32,Int32,IDbCommand,CommandBehavior)
  nameWithType: DbDataAdapter.Fill(DataTable[],Int32,Int32,IDbCommand,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataTable[],Int32,Int32,IDbCommand,CommandBehavior)
- uid: System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill(DataSet,Int32,Int32,String,IDbCommand,CommandBehavior)
  nameWithType: DbDataAdapter.Fill(DataSet,Int32,Int32,String,IDbCommand,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.Fill(DataSet,Int32,Int32,String,IDbCommand,CommandBehavior)
- uid: System.Data.Common.DbDataAdapter.FillCommandBehavior
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: FillCommandBehavior
  nameWithType: DbDataAdapter.FillCommandBehavior
  fullName: System.Data.Common.DbDataAdapter.FillCommandBehavior
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DbDataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataSet,SchemaType)
- uid: System.Data.SchemaType
  parent: System.Data
  isExternal: false
  name: SchemaType
  nameWithType: SchemaType
  fullName: System.Data.SchemaType
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: FillSchema(DataTable,SchemaType)
  nameWithType: DbDataAdapter.FillSchema(DataTable,SchemaType)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataTable,SchemaType)
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType,String)
  nameWithType: DbDataAdapter.FillSchema(DataSet,SchemaType,String)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataSet,SchemaType,String)
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: FillSchema(DataTable,SchemaType,IDbCommand,CommandBehavior)
  nameWithType: DbDataAdapter.FillSchema(DataTable,SchemaType,IDbCommand,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataTable,SchemaType,IDbCommand,CommandBehavior)
- uid: System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType,IDbCommand,String,CommandBehavior)
  nameWithType: DbDataAdapter.FillSchema(DataSet,SchemaType,IDbCommand,String,CommandBehavior)
  fullName: System.Data.Common.DbDataAdapter.FillSchema(DataSet,SchemaType,IDbCommand,String,CommandBehavior)
- uid: System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: DbDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.Common.DbDataAdapter.GetBatchedParameter(Int32,Int32)
- uid: System.Data.IDataParameter
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: DbDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.Common.DbDataAdapter.GetFillParameters
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: GetFillParameters()
  nameWithType: DbDataAdapter.GetFillParameters()
  fullName: System.Data.Common.DbDataAdapter.GetFillParameters()
- uid: System.Data.IDataParameter[]
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter[]
  spec.csharp:
  - uid: System.Data.IDataParameter
    name: IDataParameter
    nameWithType: IDataParameter
    fullName: IDataParameter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataAdapter.InitializeBatching
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: InitializeBatching()
  nameWithType: DbDataAdapter.InitializeBatching()
  fullName: System.Data.Common.DbDataAdapter.InitializeBatching()
- uid: System.Data.Common.DbDataAdapter.InsertCommand
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: DbDataAdapter.InsertCommand
  fullName: System.Data.Common.DbDataAdapter.InsertCommand
- uid: System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: DbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Common.DbDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: DbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.Common.DbDataAdapter.SelectCommand
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: DbDataAdapter.SelectCommand
  fullName: System.Data.Common.DbDataAdapter.SelectCommand
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Common.DbDataAdapter.System#ICloneable#Clone
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: DbDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Common.DbDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbDataAdapter.TerminateBatching
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: TerminateBatching()
  nameWithType: DbDataAdapter.TerminateBatching()
  fullName: System.Data.Common.DbDataAdapter.TerminateBatching()
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Update(DataRow[])
  nameWithType: DbDataAdapter.Update(DataRow[])
  fullName: System.Data.Common.DbDataAdapter.Update(DataRow[])
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Update(DataSet)
  nameWithType: DbDataAdapter.Update(DataSet)
  fullName: System.Data.Common.DbDataAdapter.Update(DataSet)
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Update(DataTable)
  nameWithType: DbDataAdapter.Update(DataTable)
  fullName: System.Data.Common.DbDataAdapter.Update(DataTable)
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Update(DataRow[],DataTableMapping)
  nameWithType: DbDataAdapter.Update(DataRow[],DataTableMapping)
  fullName: System.Data.Common.DbDataAdapter.Update(DataRow[],DataTableMapping)
- uid: System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Update(DataSet,String)
  nameWithType: DbDataAdapter.Update(DataSet,String)
  fullName: System.Data.Common.DbDataAdapter.Update(DataSet,String)
- uid: System.Data.Common.DbDataAdapter.UpdateBatchSize
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: DbDataAdapter.UpdateBatchSize
  fullName: System.Data.Common.DbDataAdapter.UpdateBatchSize
- uid: System.Data.Common.DbDataAdapter.UpdateCommand
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: DbDataAdapter.UpdateCommand
  fullName: System.Data.Common.DbDataAdapter.UpdateCommand
- uid: System.Data.Common.DbDataAdapter.#ctor*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter.DbDataAdapter
- uid: System.Data.Common.DbDataAdapter.AddToBatch*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: AddToBatch
  nameWithType: DbDataAdapter.AddToBatch
- uid: System.Data.Common.DbDataAdapter.ClearBatch*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: ClearBatch
  nameWithType: DbDataAdapter.ClearBatch
- uid: System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: DbDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: DbDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.Common.DbDataAdapter.DeleteCommand*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: DbDataAdapter.DeleteCommand
- uid: System.Data.Common.DbDataAdapter.Dispose*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Dispose
  nameWithType: DbDataAdapter.Dispose
- uid: System.Data.Common.DbDataAdapter.ExecuteBatch*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: ExecuteBatch
  nameWithType: DbDataAdapter.ExecuteBatch
- uid: System.Data.Common.DbDataAdapter.Fill*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Fill
  nameWithType: DbDataAdapter.Fill
- uid: System.Data.Common.DbDataAdapter.FillCommandBehavior*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: FillCommandBehavior
  nameWithType: DbDataAdapter.FillCommandBehavior
- uid: System.Data.Common.DbDataAdapter.FillSchema*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: FillSchema
  nameWithType: DbDataAdapter.FillSchema
- uid: System.Data.Common.DbDataAdapter.GetBatchedParameter*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: GetBatchedParameter
  nameWithType: DbDataAdapter.GetBatchedParameter
- uid: System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected
  nameWithType: DbDataAdapter.GetBatchedRecordsAffected
- uid: System.Data.Common.DbDataAdapter.GetFillParameters*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: GetFillParameters
  nameWithType: DbDataAdapter.GetFillParameters
- uid: System.Data.Common.DbDataAdapter.InitializeBatching*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: InitializeBatching
  nameWithType: DbDataAdapter.InitializeBatching
- uid: System.Data.Common.DbDataAdapter.InsertCommand*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: DbDataAdapter.InsertCommand
- uid: System.Data.Common.DbDataAdapter.OnRowUpdated*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: DbDataAdapter.OnRowUpdated
- uid: System.Data.Common.DbDataAdapter.OnRowUpdating*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: DbDataAdapter.OnRowUpdating
- uid: System.Data.Common.DbDataAdapter.SelectCommand*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: DbDataAdapter.SelectCommand
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Common.DbDataAdapter.System#ICloneable#Clone*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: DbDataAdapter.System.ICloneable.Clone
- uid: System.Data.Common.DbDataAdapter.TerminateBatching*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: TerminateBatching
  nameWithType: DbDataAdapter.TerminateBatching
- uid: System.Data.Common.DbDataAdapter.Update*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: Update
  nameWithType: DbDataAdapter.Update
- uid: System.Data.Common.DbDataAdapter.UpdateBatchSize*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: DbDataAdapter.UpdateBatchSize
- uid: System.Data.Common.DbDataAdapter.UpdateCommand*
  parent: System.Data.Common.DbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: DbDataAdapter.UpdateCommand
