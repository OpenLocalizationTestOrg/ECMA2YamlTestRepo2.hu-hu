### YamlMime:ManagedReference
items:
- uid: System.Reflection.ParameterModifier
  id: ParameterModifier
  children:
  - System.Reflection.ParameterModifier.#ctor(System.Int32)
  - System.Reflection.ParameterModifier.Item(System.Int32)
  langs:
  - csharp
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier
  type: Struct
  summary: "Csatolja a módosító paraméterek, hogy a kötés együttműködhet paraméter aláírások, amelyben a típusok módosítva lett."
  remarks: "A ParameterModifier struktúra használt a [Type.InvokeMember (karakterlánc, DesignType, kötő objektum objektum\\[\\], ParameterModifier\\[\\], CultureInfo, karakterlánc\\[\\])](assetId:///M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])?qualifyHint=True&autoUpgrade=False) metódus túlterhelési elérésekor paraméterek átadása egy COM-összetevő alapján, amely késői kötéssel. A paramétereket hivatkozással kell átadni kívánt határozza egyetlen ParameterModifier struktúrára, amely egy elemet tartalmazó tömbben kell átadni. A tömb egyetlen ParameterModifier szerkezetének inicializálási meg kell hívni a tag paramétereinek száma. Azt jelzi, amelyhez ezeket a paramétereket hivatkozással átadott, állítsa be az értékét a <xref:System.Reflection.ParameterModifier.Item%2A>tulajdonságot (a C# indexelő) `true` a megfelelő a nulláról indulva számolt helyzetét a paraméter indexszámát.</xref:System.Reflection.ParameterModifier.Item%2A>"
  example:
  - "The following code example shows this for a member that has three string arguments, the first and third of which are passed by reference. Assume that a variable named `obj` contains a reference to the COM object.  \n  \n [!code-vb[System.Reflection.ParameterModifier#1](~/add/codesnippet/visualbasic/t-system.reflection.para_1.vb)]\n [!code-cpp[System.Reflection.ParameterModifier#1](~/add/codesnippet/cpp/t-system.reflection.para_1.cpp)]\n [!code-cs[System.Reflection.ParameterModifier#1](~/add/codesnippet/csharp/t-system.reflection.para_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct ParameterModifier
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Reflection.ParameterModifier
  langs:
  - csharp
  name: ParameterModifier(Int32)
  nameWithType: ParameterModifier.ParameterModifier(Int32)
  fullName: System.Reflection.ParameterModifier.ParameterModifier(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> struktúra paraméterek megadott számát jelöli."
  syntax:
    content: public ParameterModifier (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "A paraméterek száma."
  overload: System.Reflection.ParameterModifier.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>parameterCount</code>negatív."
  platform:
  - net462
- uid: System.Reflection.ParameterModifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Reflection.ParameterModifier
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ParameterModifier.Item(Int32)
  fullName: System.Reflection.ParameterModifier.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Lekérdez vagy beállít egy értéket, amely megadja, hogy a paraméter a megadott helyen lehet módosítani a jelenlegi <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref>."
  remarks: "Indexelő olyan típusnál, mintha a típusú tömb indexelése lehetővé teszik egy alapértelmezett tulajdonság."
  syntax:
    content: public bool this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "A módosítás állapotú vizsgálják paraméter vagy az index pozíciója."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha ennél a pozíciónál index paraméter a módosítani kívánt <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Reflection.ParameterModifier.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: ParameterModifier(Int32)
  nameWithType: ParameterModifier.ParameterModifier(Int32)
  fullName: System.Reflection.ParameterModifier.ParameterModifier(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.ParameterModifier.Item(System.Int32)
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: Item(Int32)
  nameWithType: ParameterModifier.Item(Int32)
  fullName: System.Reflection.ParameterModifier.Item(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.ParameterModifier.#ctor*
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier.ParameterModifier
- uid: System.Reflection.ParameterModifier.Item*
  parent: System.Reflection.ParameterModifier
  isExternal: false
  name: Item
  nameWithType: ParameterModifier.Item
