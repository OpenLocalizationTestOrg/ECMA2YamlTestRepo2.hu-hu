### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  id: IDynamicPropertyTypeProvider
  children:
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: IDynamicPropertyTypeProvider
  nameWithType: IDynamicPropertyTypeProvider
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  type: Interface
  summary: "A kötési infrastruktúra tulajdonság típust biztosít. Egy változó típusa, ha a típus eltérhetnek attól függően, más Tevékenységbeállítások tulajdonságot tartalmazó tevékenységek megvalósítva."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Ez az interfész lehetővé teszi, hogy a szülőtevékenység két tulajdonságok és a kötési infrastruktúra a kötés érvényesítése során használandó típusát jelzi. Például lehetséges, hogy egy tevékenység két tulajdonságokkal `TypeProperty` és `ValueProperty`, ahol `TypeProperty` értékének érvényes típust határozzon meg `ValueProperty`. Ebben az esetben a szülőtevékenység a IDynamicPropertyTypeProvider felületet valósítja meg."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface IDynamicPropertyTypeProvider
  implements: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  id: GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  langs:
  - csharp
  name: GetAccessType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "A megadott tulajdonság hozzáférési típusát adja vissza."
  remarks: "Annak ellenőrzéséhez, hogy a Tulajdonságok megfelelően kötött egymáshoz használt fordítás során. Ez a felület nélkül ezt az információt táblanévhez közvetlenül a beolvasója/tulajdonságbeállítójához."
  syntax:
    content: public System.Workflow.ComponentModel.Compiler.AccessTypes GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Egy objektum, amely megvalósítja az <xref:System.IServiceProvider>tervezési idő szolgáltatásokhoz való hozzáférés biztosításához, ha szükség van.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "A tulajdonság nevét."
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "Egy <xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref> számbavételi érték, amely a hozzáférési szint a tulajdonság jelöli."
  overload: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  id: GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  langs:
  - csharp
  name: GetPropertyType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Vissza a <xref:System.Type>a megadott tulajdonság.</xref:System.Type>"
  remarks: "Annak ellenőrzéséhez, hogy a Tulajdonságok megfelelően kötött egymáshoz használt fordítás során."
  syntax:
    content: public Type GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Egy objektum, amely megvalósítja az <xref:System.IServiceProvider>tervezési idejű szolgáltatásokhoz való hozzáférés biztosításához, ha szükség van.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "A tulajdonság nevét."
    return:
      type: System.Type
      description: "A <xref:System.Type>a tulajdonsághoz, amelynek a neve átadása a <code> propertyName  </code>paraméter.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetAccessType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetPropertyType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType*
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetAccessType
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType*
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetPropertyType
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType
